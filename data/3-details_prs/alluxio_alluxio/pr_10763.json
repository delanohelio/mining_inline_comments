{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MjM0NTU0", "number": 10763, "title": "Add positioned readable HDFS ufs input stream", "bodyText": "When HDFS is remote and slow, we use the positioned read API instead of seek with this PR.\nHDFS FSDataInputStream seek may be implemented as read and discard. Over remote HDFS, this may increase the amount of data read over the network many folds based on the workload. Using positioned read, the amount of data requested from the HDFS client matches the amount of data read from the HDFS datanode.", "createdAt": "2020-01-17T17:00:13Z", "url": "https://github.com/Alluxio/alluxio/pull/10763", "merged": true, "mergeCommit": {"oid": "03d333ea11dd3631461265d5ac5c1d5fb05e6dee"}, "closed": true, "closedAt": "2020-01-23T07:32:11Z", "author": {"login": "madanadit"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7RupiAH2gAyMzY0MjM0NTU0OjZkMGM0MGUwYTNjOTE4NzNlZmQ4ZTNhM2U3NTc2NTJlNjcyYzhiMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9FQgkAFqTM0NzA5OTY1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6d0c40e0a3c91873efd8e3a3e757652e672c8b10", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/6d0c40e0a3c91873efd8e3a3e757652e672c8b10", "committedDate": "2020-01-17T16:55:48Z", "message": "Add positioned readable HDFS ufs input stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a92b4df09b577659b3c90d12b21faf28cc1708f5", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/a92b4df09b577659b3c90d12b21faf28cc1708f5", "committedDate": "2020-01-17T17:01:20Z", "message": "Add newline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b6d23a50f1dc3b93b09e43401eefb883ed53ab5", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/5b6d23a50f1dc3b93b09e43401eefb883ed53ab5", "committedDate": "2020-01-17T17:20:46Z", "message": "Fix build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0ODQ4ODc5", "url": "https://github.com/Alluxio/alluxio/pull/10763#pullrequestreview-344848879", "createdAt": "2020-01-17T21:23:37Z", "commit": {"oid": "5b6d23a50f1dc3b93b09e43401eefb883ed53ab5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMToyMzozOFrOFfFm0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMToyMzozOFrOFfFm0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0MjAzMw==", "bodyText": "BufferUtils.byteToInt?", "url": "https://github.com/Alluxio/alluxio/pull/10763#discussion_r368142033", "createdAt": "2020-01-17T21:23:38Z", "author": {"login": "calvinjia"}, "path": "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsPositionedUnderFileInputStream.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.hdfs;\n+\n+import alluxio.underfs.SeekableUnderFileInputStream;\n+\n+import org.apache.hadoop.fs.FSDataInputStream;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The input stream of HDFS as under filesystem. This input stream supports seeking but internally\n+ * uses the positionedRead {@link FSDataInputStream} API.\n+ */\n+public class HdfsPositionedUnderFileInputStream extends SeekableUnderFileInputStream {\n+  private long mPos;\n+\n+  HdfsPositionedUnderFileInputStream(FSDataInputStream in, long pos) {\n+    super(in);\n+    mPos = pos;\n+  }\n+\n+  @Override\n+  public int available() throws IOException {\n+    int available = in.available() + (int) (((FSDataInputStream) in).getPos() - mPos);\n+    return available > 0 ? available : 0;\n+  }\n+\n+  @Override\n+  public long getPos() throws IOException {\n+    return mPos;\n+  }\n+\n+  @Override\n+  public int read() throws IOException {\n+    byte[] buffer = new byte[1];\n+    int bytesRead = ((FSDataInputStream) in).read(mPos, buffer, 0, buffer.length);\n+    if (bytesRead > 0) {\n+      mPos += bytesRead;\n+    }\n+    return bytesRead < 0 ? bytesRead : (int) buffer[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b6d23a50f1dc3b93b09e43401eefb883ed53ab5"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51ebc6194006819264ae4fe65917db2a83158bfa", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/51ebc6194006819264ae4fe65917db2a83158bfa", "committedDate": "2020-01-21T20:58:07Z", "message": "Address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c96797092f107cfe3d5a17b14e460e82af5a7032", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/c96797092f107cfe3d5a17b14e460e82af5a7032", "committedDate": "2020-01-21T21:03:23Z", "message": "Make positioned read HDFS in stream the default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MjAyOTk0", "url": "https://github.com/Alluxio/alluxio/pull/10763#pullrequestreview-346202994", "createdAt": "2020-01-21T21:27:14Z", "commit": {"oid": "c96797092f107cfe3d5a17b14e460e82af5a7032"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMToyNzoxNFrOFgJVfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMTozMDozMFrOFgJbKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1MTcwOQ==", "bodyText": "Could you explain the logic here?", "url": "https://github.com/Alluxio/alluxio/pull/10763#discussion_r369251709", "createdAt": "2020-01-21T21:27:14Z", "author": {"login": "calvinjia"}, "path": "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsPositionedUnderFileInputStream.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.hdfs;\n+\n+import alluxio.underfs.SeekableUnderFileInputStream;\n+import alluxio.util.io.BufferUtils;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The input stream of HDFS as under filesystem. This input stream supports seeking but internally\n+ * uses the positionedRead {@link FSDataInputStream} API. This stream can be cached for reuse.\n+ */\n+public class HdfsPositionedUnderFileInputStream extends SeekableUnderFileInputStream {\n+  private long mPos;\n+\n+  HdfsPositionedUnderFileInputStream(FSDataInputStream in, long pos) {\n+    super(in);\n+    mPos = pos;\n+  }\n+\n+  @Override\n+  public int available() throws IOException {\n+    int available = in.available() + (int) (((FSDataInputStream) in).getPos() - mPos);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c96797092f107cfe3d5a17b14e460e82af5a7032"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1MjgzMQ==", "bodyText": "Is it valid to hit EOS here and return -1?", "url": "https://github.com/Alluxio/alluxio/pull/10763#discussion_r369252831", "createdAt": "2020-01-21T21:29:51Z", "author": {"login": "calvinjia"}, "path": "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsPositionedUnderFileInputStream.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.hdfs;\n+\n+import alluxio.underfs.SeekableUnderFileInputStream;\n+import alluxio.util.io.BufferUtils;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The input stream of HDFS as under filesystem. This input stream supports seeking but internally\n+ * uses the positionedRead {@link FSDataInputStream} API. This stream can be cached for reuse.\n+ */\n+public class HdfsPositionedUnderFileInputStream extends SeekableUnderFileInputStream {\n+  private long mPos;\n+\n+  HdfsPositionedUnderFileInputStream(FSDataInputStream in, long pos) {\n+    super(in);\n+    mPos = pos;\n+  }\n+\n+  @Override\n+  public int available() throws IOException {\n+    int available = in.available() + (int) (((FSDataInputStream) in).getPos() - mPos);\n+    return available > 0 ? available : 0;\n+  }\n+\n+  @Override\n+  public long getPos() throws IOException {\n+    return mPos;\n+  }\n+\n+  @Override\n+  public int read() throws IOException {\n+    byte[] buffer = new byte[1];\n+    int bytesRead = ((FSDataInputStream) in).read(mPos, buffer, 0, buffer.length);\n+    if (bytesRead > 0) {\n+      mPos += bytesRead;\n+      return BufferUtils.byteToInt(buffer[0]);\n+    }\n+    Preconditions.checkArgument(bytesRead != 0,\n+        \"Expected a non-zero value if end of stream has not been reached\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c96797092f107cfe3d5a17b14e460e82af5a7032"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1MzE2Mw==", "bodyText": "Perhaps change this comment to say why positionedRead is better than seeking in some cases?", "url": "https://github.com/Alluxio/alluxio/pull/10763#discussion_r369253163", "createdAt": "2020-01-21T21:30:30Z", "author": {"login": "calvinjia"}, "path": "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java", "diffHunk": "@@ -563,13 +563,8 @@ public InputStream open(String path, OpenOptions options) throws IOException {\n     while (retryPolicy.attempt()) {\n       try {\n         FSDataInputStream inputStream = hdfs.open(new Path(path));\n-        try {\n-          inputStream.seek(options.getOffset());\n-        } catch (IOException e) {\n-          inputStream.close();\n-          throw e;\n-        }\n-        return new HdfsUnderFileInputStream(inputStream);\n+        // For remote HDFS, use positionedRead instead of seek", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c96797092f107cfe3d5a17b14e460e82af5a7032"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b600770782fefa61522d23f41872fc7e0c85b0ea", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/b600770782fefa61522d23f41872fc7e0c85b0ea", "committedDate": "2020-01-21T22:17:41Z", "message": "Update comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c45f2ed6bd50c851a39631bd9cf8fbd7f97f39f", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/4c45f2ed6bd50c851a39631bd9cf8fbd7f97f39f", "committedDate": "2020-01-21T23:20:23Z", "message": "Address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d84fe85bfd07f7c476a4d32a1e077ecd0b8e8bf0", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/d84fe85bfd07f7c476a4d32a1e077ecd0b8e8bf0", "committedDate": "2020-01-21T23:24:26Z", "message": "Remove unused stream implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MjY3MzM5", "url": "https://github.com/Alluxio/alluxio/pull/10763#pullrequestreview-346267339", "createdAt": "2020-01-21T23:43:24Z", "commit": {"oid": "d84fe85bfd07f7c476a4d32a1e077ecd0b8e8bf0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzo0MzoyNFrOFgMfwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMzo0MzoyNFrOFgMfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMwMzQ4OA==", "bodyText": "Consider using this class's read(byte[]) method? Then we should only need to bookkeep mPos in one place", "url": "https://github.com/Alluxio/alluxio/pull/10763#discussion_r369303488", "createdAt": "2020-01-21T23:43:24Z", "author": {"login": "calvinjia"}, "path": "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsPositionedUnderFileInputStream.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.hdfs;\n+\n+import alluxio.underfs.SeekableUnderFileInputStream;\n+import alluxio.util.io.BufferUtils;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.hadoop.fs.FSDataInputStream;\n+\n+import java.io.IOException;\n+\n+/**\n+ * The input stream of HDFS as under filesystem. This input stream supports seeking but internally\n+ * uses the positionedRead {@link FSDataInputStream} API. This stream can be cached for reuse.\n+ */\n+public class HdfsPositionedUnderFileInputStream extends SeekableUnderFileInputStream {\n+  private long mPos;\n+\n+  HdfsPositionedUnderFileInputStream(FSDataInputStream in, long pos) {\n+    super(in);\n+    mPos = pos;\n+  }\n+\n+  @Override\n+  public int available() throws IOException {\n+    if (mPos != ((FSDataInputStream) in).getPos()) {\n+      return 0;\n+    }\n+    return in.available();\n+  }\n+\n+  @Override\n+  public long getPos() throws IOException {\n+    return mPos;\n+  }\n+\n+  @Override\n+  public int read() throws IOException {\n+    byte[] buffer = new byte[1];\n+    int bytesRead = ((FSDataInputStream) in).read(mPos, buffer, 0, buffer.length);\n+    if (bytesRead > 0) {\n+      mPos += bytesRead;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84fe85bfd07f7c476a4d32a1e077ecd0b8e8bf0"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MjY3NzI5", "url": "https://github.com/Alluxio/alluxio/pull/10763#pullrequestreview-346267729", "createdAt": "2020-01-21T23:44:35Z", "commit": {"oid": "d84fe85bfd07f7c476a4d32a1e077ecd0b8e8bf0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e1abe3eed5ef5959aaab9f6f6bdee8c33170539", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/8e1abe3eed5ef5959aaab9f6f6bdee8c33170539", "committedDate": "2020-01-22T00:46:15Z", "message": "Address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MDk5NjUw", "url": "https://github.com/Alluxio/alluxio/pull/10763#pullrequestreview-347099650", "createdAt": "2020-01-23T07:31:52Z", "commit": {"oid": "8e1abe3eed5ef5959aaab9f6f6bdee8c33170539"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4997, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}