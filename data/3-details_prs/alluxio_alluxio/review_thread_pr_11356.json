{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MTU5MTU3", "number": 11356, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDoyMDoxNVrOD3XW_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDoyMDoxNVrOD3XW_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzgwOTg4OnYy", "diffSide": "LEFT", "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDoyMDoxNVrOGNlV7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMjozOToxMlrOGNpl6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5NjQ5NQ==", "bodyText": "Let's say we have 2 clients with different config for the netty worker threads. If one client is already active, the 2nd client's thread config will be ignored, correct?", "url": "https://github.com/Alluxio/alluxio/pull/11356#discussion_r416896495", "createdAt": "2020-04-28T20:20:15Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "diffHunk": "@@ -276,40 +276,41 @@ private void shutdownManagedChannel(ManagedChannel managedChannel, AlluxioConfig\n \n   private EventLoopGroup acquireNetworkEventLoop(GrpcChannelKey channelKey,\n       AlluxioConfiguration conf) {\n-    return mEventLoops.compute(channelKey, (k, v) -> {\n+    return mEventLoops.compute(channelKey.getNetworkGroup(), (key, v) -> {\n       // Increment and return if event-loop found.\n       if (v != null) {\n-        LOG.debug(\"Acquiring an existing event-loop. ChannelKey: {}. Ref-Count:{}\", channelKey,\n-            v.getRefCount());\n+        LOG.debug(\"Acquiring an existing event-loop for {}. Ref-Count:{}\",\n+            channelKey, v.getRefCount());\n         v.reference();\n         return v;\n       }\n \n       // Create a new event-loop.\n       ChannelType nettyChannelType =\n           NettyUtils.getChannelType(PropertyKey.Template.USER_NETWORK_NETTY_CHANNEL\n-              .format(channelKey.getNetworkGroup().getPropertyCode()), conf);\n+              .format(key.getPropertyCode()), conf);\n       int nettyWorkerThreadCount =\n           conf.getInt(PropertyKey.Template.USER_NETWORK_NETTY_WORKER_THREADS\n-              .format(channelKey.getNetworkGroup().getPropertyCode()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f942965f6f8d2c30470ce81d8d2e227ee729edb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxMTI3Nw==", "bodyText": "Yes. Connection level properties should be consistent.", "url": "https://github.com/Alluxio/alluxio/pull/11356#discussion_r416911277", "createdAt": "2020-04-28T20:46:39Z", "author": {"login": "ggezer"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "diffHunk": "@@ -276,40 +276,41 @@ private void shutdownManagedChannel(ManagedChannel managedChannel, AlluxioConfig\n \n   private EventLoopGroup acquireNetworkEventLoop(GrpcChannelKey channelKey,\n       AlluxioConfiguration conf) {\n-    return mEventLoops.compute(channelKey, (k, v) -> {\n+    return mEventLoops.compute(channelKey.getNetworkGroup(), (key, v) -> {\n       // Increment and return if event-loop found.\n       if (v != null) {\n-        LOG.debug(\"Acquiring an existing event-loop. ChannelKey: {}. Ref-Count:{}\", channelKey,\n-            v.getRefCount());\n+        LOG.debug(\"Acquiring an existing event-loop for {}. Ref-Count:{}\",\n+            channelKey, v.getRefCount());\n         v.reference();\n         return v;\n       }\n \n       // Create a new event-loop.\n       ChannelType nettyChannelType =\n           NettyUtils.getChannelType(PropertyKey.Template.USER_NETWORK_NETTY_CHANNEL\n-              .format(channelKey.getNetworkGroup().getPropertyCode()), conf);\n+              .format(key.getPropertyCode()), conf);\n       int nettyWorkerThreadCount =\n           conf.getInt(PropertyKey.Template.USER_NETWORK_NETTY_WORKER_THREADS\n-              .format(channelKey.getNetworkGroup().getPropertyCode()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5NjQ5NQ=="}, "originalCommit": {"oid": "0f942965f6f8d2c30470ce81d8d2e227ee729edb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzNTY5MQ==", "bodyText": "That behavior seems a little sketchy to me", "url": "https://github.com/Alluxio/alluxio/pull/11356#discussion_r416935691", "createdAt": "2020-04-28T21:30:43Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "diffHunk": "@@ -276,40 +276,41 @@ private void shutdownManagedChannel(ManagedChannel managedChannel, AlluxioConfig\n \n   private EventLoopGroup acquireNetworkEventLoop(GrpcChannelKey channelKey,\n       AlluxioConfiguration conf) {\n-    return mEventLoops.compute(channelKey, (k, v) -> {\n+    return mEventLoops.compute(channelKey.getNetworkGroup(), (key, v) -> {\n       // Increment and return if event-loop found.\n       if (v != null) {\n-        LOG.debug(\"Acquiring an existing event-loop. ChannelKey: {}. Ref-Count:{}\", channelKey,\n-            v.getRefCount());\n+        LOG.debug(\"Acquiring an existing event-loop for {}. Ref-Count:{}\",\n+            channelKey, v.getRefCount());\n         v.reference();\n         return v;\n       }\n \n       // Create a new event-loop.\n       ChannelType nettyChannelType =\n           NettyUtils.getChannelType(PropertyKey.Template.USER_NETWORK_NETTY_CHANNEL\n-              .format(channelKey.getNetworkGroup().getPropertyCode()), conf);\n+              .format(key.getPropertyCode()), conf);\n       int nettyWorkerThreadCount =\n           conf.getInt(PropertyKey.Template.USER_NETWORK_NETTY_WORKER_THREADS\n-              .format(channelKey.getNetworkGroup().getPropertyCode()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5NjQ5NQ=="}, "originalCommit": {"oid": "0f942965f6f8d2c30470ce81d8d2e227ee729edb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1MzQyMA==", "bodyText": "How about we bring singleton back for a subset of props?", "url": "https://github.com/Alluxio/alluxio/pull/11356#discussion_r416953420", "createdAt": "2020-04-28T22:07:56Z", "author": {"login": "ggezer"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "diffHunk": "@@ -276,40 +276,41 @@ private void shutdownManagedChannel(ManagedChannel managedChannel, AlluxioConfig\n \n   private EventLoopGroup acquireNetworkEventLoop(GrpcChannelKey channelKey,\n       AlluxioConfiguration conf) {\n-    return mEventLoops.compute(channelKey, (k, v) -> {\n+    return mEventLoops.compute(channelKey.getNetworkGroup(), (key, v) -> {\n       // Increment and return if event-loop found.\n       if (v != null) {\n-        LOG.debug(\"Acquiring an existing event-loop. ChannelKey: {}. Ref-Count:{}\", channelKey,\n-            v.getRefCount());\n+        LOG.debug(\"Acquiring an existing event-loop for {}. Ref-Count:{}\",\n+            channelKey, v.getRefCount());\n         v.reference();\n         return v;\n       }\n \n       // Create a new event-loop.\n       ChannelType nettyChannelType =\n           NettyUtils.getChannelType(PropertyKey.Template.USER_NETWORK_NETTY_CHANNEL\n-              .format(channelKey.getNetworkGroup().getPropertyCode()), conf);\n+              .format(key.getPropertyCode()), conf);\n       int nettyWorkerThreadCount =\n           conf.getInt(PropertyKey.Template.USER_NETWORK_NETTY_WORKER_THREADS\n-              .format(channelKey.getNetworkGroup().getPropertyCode()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5NjQ5NQ=="}, "originalCommit": {"oid": "0f942965f6f8d2c30470ce81d8d2e227ee729edb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk1OTU4Ng==", "bodyText": "I don't really see a good way to do this unless we make the # of threads unconfigurable/unbounded. Otherwise if we expose the configuration to users it will be kind of confusing. Either way, I think that is fine to work on in a later PR.", "url": "https://github.com/Alluxio/alluxio/pull/11356#discussion_r416959586", "createdAt": "2020-04-28T22:22:15Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "diffHunk": "@@ -276,40 +276,41 @@ private void shutdownManagedChannel(ManagedChannel managedChannel, AlluxioConfig\n \n   private EventLoopGroup acquireNetworkEventLoop(GrpcChannelKey channelKey,\n       AlluxioConfiguration conf) {\n-    return mEventLoops.compute(channelKey, (k, v) -> {\n+    return mEventLoops.compute(channelKey.getNetworkGroup(), (key, v) -> {\n       // Increment and return if event-loop found.\n       if (v != null) {\n-        LOG.debug(\"Acquiring an existing event-loop. ChannelKey: {}. Ref-Count:{}\", channelKey,\n-            v.getRefCount());\n+        LOG.debug(\"Acquiring an existing event-loop for {}. Ref-Count:{}\",\n+            channelKey, v.getRefCount());\n         v.reference();\n         return v;\n       }\n \n       // Create a new event-loop.\n       ChannelType nettyChannelType =\n           NettyUtils.getChannelType(PropertyKey.Template.USER_NETWORK_NETTY_CHANNEL\n-              .format(channelKey.getNetworkGroup().getPropertyCode()), conf);\n+              .format(key.getPropertyCode()), conf);\n       int nettyWorkerThreadCount =\n           conf.getInt(PropertyKey.Template.USER_NETWORK_NETTY_WORKER_THREADS\n-              .format(channelKey.getNetworkGroup().getPropertyCode()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5NjQ5NQ=="}, "originalCommit": {"oid": "0f942965f6f8d2c30470ce81d8d2e227ee729edb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NDc3MA==", "bodyText": "How about CheckConsistency.ENFORCE ?", "url": "https://github.com/Alluxio/alluxio/pull/11356#discussion_r416964770", "createdAt": "2020-04-28T22:35:38Z", "author": {"login": "ggezer"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "diffHunk": "@@ -276,40 +276,41 @@ private void shutdownManagedChannel(ManagedChannel managedChannel, AlluxioConfig\n \n   private EventLoopGroup acquireNetworkEventLoop(GrpcChannelKey channelKey,\n       AlluxioConfiguration conf) {\n-    return mEventLoops.compute(channelKey, (k, v) -> {\n+    return mEventLoops.compute(channelKey.getNetworkGroup(), (key, v) -> {\n       // Increment and return if event-loop found.\n       if (v != null) {\n-        LOG.debug(\"Acquiring an existing event-loop. ChannelKey: {}. Ref-Count:{}\", channelKey,\n-            v.getRefCount());\n+        LOG.debug(\"Acquiring an existing event-loop for {}. Ref-Count:{}\",\n+            channelKey, v.getRefCount());\n         v.reference();\n         return v;\n       }\n \n       // Create a new event-loop.\n       ChannelType nettyChannelType =\n           NettyUtils.getChannelType(PropertyKey.Template.USER_NETWORK_NETTY_CHANNEL\n-              .format(channelKey.getNetworkGroup().getPropertyCode()), conf);\n+              .format(key.getPropertyCode()), conf);\n       int nettyWorkerThreadCount =\n           conf.getInt(PropertyKey.Template.USER_NETWORK_NETTY_WORKER_THREADS\n-              .format(channelKey.getNetworkGroup().getPropertyCode()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5NjQ5NQ=="}, "originalCommit": {"oid": "0f942965f6f8d2c30470ce81d8d2e227ee729edb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk2NjEyMw==", "bodyText": "Consistency level won't prevent an application in a client JVM writing FileSystem.Factory.create(conf) where the conf has two separate values for the netty threadpool", "url": "https://github.com/Alluxio/alluxio/pull/11356#discussion_r416966123", "createdAt": "2020-04-28T22:39:12Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcConnectionPool.java", "diffHunk": "@@ -276,40 +276,41 @@ private void shutdownManagedChannel(ManagedChannel managedChannel, AlluxioConfig\n \n   private EventLoopGroup acquireNetworkEventLoop(GrpcChannelKey channelKey,\n       AlluxioConfiguration conf) {\n-    return mEventLoops.compute(channelKey, (k, v) -> {\n+    return mEventLoops.compute(channelKey.getNetworkGroup(), (key, v) -> {\n       // Increment and return if event-loop found.\n       if (v != null) {\n-        LOG.debug(\"Acquiring an existing event-loop. ChannelKey: {}. Ref-Count:{}\", channelKey,\n-            v.getRefCount());\n+        LOG.debug(\"Acquiring an existing event-loop for {}. Ref-Count:{}\",\n+            channelKey, v.getRefCount());\n         v.reference();\n         return v;\n       }\n \n       // Create a new event-loop.\n       ChannelType nettyChannelType =\n           NettyUtils.getChannelType(PropertyKey.Template.USER_NETWORK_NETTY_CHANNEL\n-              .format(channelKey.getNetworkGroup().getPropertyCode()), conf);\n+              .format(key.getPropertyCode()), conf);\n       int nettyWorkerThreadCount =\n           conf.getInt(PropertyKey.Template.USER_NETWORK_NETTY_WORKER_THREADS\n-              .format(channelKey.getNetworkGroup().getPropertyCode()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg5NjQ5NQ=="}, "originalCommit": {"oid": "0f942965f6f8d2c30470ce81d8d2e227ee729edb"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1680, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}