{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NjEwMzU2", "number": 11763, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMzozMToyMlrOEOFjGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMzozNTo0MFrOEOFmEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjA2NDI2OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMzozMToyMlrOGxCsvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNDozNDozOVrOGxDtCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3NzYzMA==", "bodyText": "Is this the only use of statsMap? We may be able to just get rid of this variable and here, we could just use Collections.emptyList().", "url": "https://github.com/Alluxio/alluxio/pull/11763#discussion_r454077630", "createdAt": "2020-07-14T03:31:22Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -346,28 +340,29 @@ public UdbTable getTable(String tableName) throws IOException {\n       List<UdbPartition> udbPartitions = new ArrayList<>();\n       if (partitionColumns.isEmpty()) {\n         PartitionInfo.Builder partitionInfoBuilder = PartitionInfo.newBuilder()\n-            .setDbName(getUdbContext().getDbName())\n+            .setDbName(mGlueDbName)\n             .setTableName(tableName)\n             .addAllDataCols(GlueUtils.toProto(table.getStorageDescriptor().getColumns()))\n             .setStorage(GlueUtils.toProto(table.getStorageDescriptor(), pathTranslator))\n             .setPartitionName(tableName)\n-            .putAllParameters(table.getParameters());\n+            .putAllParameters(tableParameters);\n         udbPartitions.add(new GluePartition(\n             new HiveLayout(partitionInfoBuilder.build(), Collections.emptyList())));\n       } else {\n         for (Partition partition : partitions) {\n           String partName = GlueUtils.makePartitionName(partitionColumns, partition.getValues());\n-          PartitionInfo.Builder pib = PartitionInfo.newBuilder()\n-              .setDbName(getUdbContext().getDbName())\n+          PartitionInfo.Builder partitionInfoBuilder = PartitionInfo.newBuilder()\n+              .setDbName(mGlueDbName)\n               .setTableName(tableName)\n               .addAllDataCols(GlueUtils.toProto(partition.getStorageDescriptor().getColumns()))\n               .setStorage(GlueUtils.toProto(partition.getStorageDescriptor(), pathTranslator))\n               .setPartitionName(partName)\n-              .putAllParameters(partition.getParameters());\n+              .putAllParameters(partition.getParameters() == null\n+                  ? Collections.emptyMap() : partition.getParameters());\n           if (partition.getValues() != null) {\n-            pib.addAllValues(partition.getValues());\n+            partitionInfoBuilder.addAllValues(partition.getValues());\n           }\n-          udbPartitions.add(new GluePartition(new HiveLayout(pib.build(),\n+          udbPartitions.add(new GluePartition(new HiveLayout(partitionInfoBuilder.build(),\n               statsMap.getOrDefault(partName, Collections.emptyList()))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ecab2085a83d8ead5456165ab5f1169baae6ac7"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5NDA5MQ==", "bodyText": "I have changed to Collections.emptyList(), and I noticed the latest glue client supports the column statistics, added to TODO.", "url": "https://github.com/Alluxio/alluxio/pull/11763#discussion_r454094091", "createdAt": "2020-07-14T04:34:39Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -346,28 +340,29 @@ public UdbTable getTable(String tableName) throws IOException {\n       List<UdbPartition> udbPartitions = new ArrayList<>();\n       if (partitionColumns.isEmpty()) {\n         PartitionInfo.Builder partitionInfoBuilder = PartitionInfo.newBuilder()\n-            .setDbName(getUdbContext().getDbName())\n+            .setDbName(mGlueDbName)\n             .setTableName(tableName)\n             .addAllDataCols(GlueUtils.toProto(table.getStorageDescriptor().getColumns()))\n             .setStorage(GlueUtils.toProto(table.getStorageDescriptor(), pathTranslator))\n             .setPartitionName(tableName)\n-            .putAllParameters(table.getParameters());\n+            .putAllParameters(tableParameters);\n         udbPartitions.add(new GluePartition(\n             new HiveLayout(partitionInfoBuilder.build(), Collections.emptyList())));\n       } else {\n         for (Partition partition : partitions) {\n           String partName = GlueUtils.makePartitionName(partitionColumns, partition.getValues());\n-          PartitionInfo.Builder pib = PartitionInfo.newBuilder()\n-              .setDbName(getUdbContext().getDbName())\n+          PartitionInfo.Builder partitionInfoBuilder = PartitionInfo.newBuilder()\n+              .setDbName(mGlueDbName)\n               .setTableName(tableName)\n               .addAllDataCols(GlueUtils.toProto(partition.getStorageDescriptor().getColumns()))\n               .setStorage(GlueUtils.toProto(partition.getStorageDescriptor(), pathTranslator))\n               .setPartitionName(partName)\n-              .putAllParameters(partition.getParameters());\n+              .putAllParameters(partition.getParameters() == null\n+                  ? Collections.emptyMap() : partition.getParameters());\n           if (partition.getValues() != null) {\n-            pib.addAllValues(partition.getValues());\n+            partitionInfoBuilder.addAllValues(partition.getValues());\n           }\n-          udbPartitions.add(new GluePartition(new HiveLayout(pib.build(),\n+          udbPartitions.add(new GluePartition(new HiveLayout(partitionInfoBuilder.build(),\n               statsMap.getOrDefault(partName, Collections.emptyList()))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3NzYzMA=="}, "originalCommit": {"oid": "0ecab2085a83d8ead5456165ab5f1169baae6ac7"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjA3MTg1OnYy", "diffSide": "LEFT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMzozNTo0MFrOGxCxIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNDozNToxNlrOGxDtwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3ODc1NQ==", "bodyText": "I feel like the previous code was better, since we still create a new map for our own internal data structure. What does the new code fix?\nWe could change this code a little bit to be something like:\nif (parameters != null) {\n  glueParameters.putAll(parameters);\n}", "url": "https://github.com/Alluxio/alluxio/pull/11763#discussion_r454078755", "createdAt": "2020-07-14T03:35:40Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -123,13 +122,8 @@ public DatabaseInfo getDatabaseInfo() throws IOException {\n           ? \"\" : glueDatabase.getLocationUri();\n       String glueDbDescription = glueDatabase.getDescription() == null\n           ? \"\" : glueDatabase.getDescription();\n-      Map<String, String> glueParameters = new HashMap<>();\n-      Map<String, String> parameters = glueDatabase.getParameters();\n-      if (parameters != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ecab2085a83d8ead5456165ab5f1169baae6ac7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5NDI3Mg==", "bodyText": "yeah, it's better, changed.", "url": "https://github.com/Alluxio/alluxio/pull/11763#discussion_r454094272", "createdAt": "2020-07-14T04:35:16Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -123,13 +122,8 @@ public DatabaseInfo getDatabaseInfo() throws IOException {\n           ? \"\" : glueDatabase.getLocationUri();\n       String glueDbDescription = glueDatabase.getDescription() == null\n           ? \"\" : glueDatabase.getDescription();\n-      Map<String, String> glueParameters = new HashMap<>();\n-      Map<String, String> parameters = glueDatabase.getParameters();\n-      if (parameters != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3ODc1NQ=="}, "originalCommit": {"oid": "0ecab2085a83d8ead5456165ab5f1169baae6ac7"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1429, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}