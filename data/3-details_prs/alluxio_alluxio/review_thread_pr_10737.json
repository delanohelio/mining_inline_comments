{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzg4MTQy", "number": 10737, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMToyMzo0N1rODXtU8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMToyMzo0N1rODXtU8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTg2NDgwOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMToyMzo0N1rOFdJwiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjowMjozM1rOFdKRGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExMjkwNA==", "bodyText": "not clear to me what are we guarding. in addition, do we only provide thread-safety for positioned reads not normal reads?", "url": "https://github.com/Alluxio/alluxio/pull/10737#discussion_r366112904", "createdAt": "2020-01-14T01:23:47Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -216,12 +249,14 @@ private FileInStream getExternalFileInStream(long pos) throws IOException {\n    * Reads a page from external storage which contains the position specified. Note that this makes\n    * a copy of the page.\n    *\n+   * This method is synchronized to ensure thread safety for positioned reads.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a22f5a8d562cffc584bef37bccc058439ce2c21"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMDE5MA==", "bodyText": "Yeah, only for positioned reads (PositionedReadable). The read API (InputStream) is not thread safe.", "url": "https://github.com/Alluxio/alluxio/pull/10737#discussion_r366120190", "createdAt": "2020-01-14T01:57:37Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -216,12 +249,14 @@ private FileInStream getExternalFileInStream(long pos) throws IOException {\n    * Reads a page from external storage which contains the position specified. Note that this makes\n    * a copy of the page.\n    *\n+   * This method is synchronized to ensure thread safety for positioned reads.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExMjkwNA=="}, "originalCommit": {"oid": "9a22f5a8d562cffc584bef37bccc058439ce2c21"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMTI0Mg==", "bodyText": "I explained a bit more in the comment.", "url": "https://github.com/Alluxio/alluxio/pull/10737#discussion_r366121242", "createdAt": "2020-01-14T02:02:33Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -216,12 +249,14 @@ private FileInStream getExternalFileInStream(long pos) throws IOException {\n    * Reads a page from external storage which contains the position specified. Note that this makes\n    * a copy of the page.\n    *\n+   * This method is synchronized to ensure thread safety for positioned reads.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExMjkwNA=="}, "originalCommit": {"oid": "9a22f5a8d562cffc584bef37bccc058439ce2c21"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2229, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}