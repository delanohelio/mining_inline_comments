{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODQwMzU1", "number": 11150, "title": "[DOCFIX] Add docs on debug logging for RPCs", "bodyText": "", "createdAt": "2020-03-09T22:04:33Z", "url": "https://github.com/Alluxio/alluxio/pull/11150", "merged": true, "mergeCommit": {"oid": "47dfd7ad717dbdbe7556e977252358a256b85a16"}, "closed": true, "closedAt": "2020-03-14T02:09:13Z", "author": {"login": "apc999"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMFS0LgH2gAyMzg1ODQwMzU1OmU2OWM1ZDc3YzlhNGJlZDBiMDExNzBmZmQyMmI1NTNmOTc1Y2EwZDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNWF-SAFqTM3NDU4NTEyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e69c5d77c9a4bed0b01170ffd22b553f975ca0d7", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e69c5d77c9a4bed0b01170ffd22b553f975ca0d7", "committedDate": "2020-03-09T22:03:15Z", "message": "Add docs on debug logging for RPCs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3", "committedDate": "2020-03-10T22:41:35Z", "message": "Update Server-Logging.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTY4MDEy", "url": "https://github.com/Alluxio/alluxio/pull/11150#pullrequestreview-373968012", "createdAt": "2020-03-12T23:43:38Z", "commit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMzo0MzozOFrOF1zaig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMzo0Njo0NFrOF1zd4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MTIyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n          \n          \n            \n            You will see debug logs at the beginning and the end of each FUSE API call with its arguments and result", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391961226", "createdAt": "2020-03-12T23:43:38Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MTMzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Add to your application-side `log4j.properties` to capture RPCs between Alluxio client\n          \n          \n            \n            Add the following to your application-side `log4j.properties` to capture RPCs between the Alluxio client", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391961336", "createdAt": "2020-03-12T23:44:02Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n+in `logs/fuse.log`:\n+\n+```\n+2020-03-03 14:33:35,129 DEBUG AlluxioFuseFileSystem - Enter: chmod(path=/aaa,mode=100644)\n+2020-03-03 14:33:35,131 DEBUG AlluxioFuseFileSystem - Exit (0): chmod(path=/aaa,mode=100644) in 2 ms\n+2020-03-03 14:33:35,132 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/aaa)\n+2020-03-03 14:33:35,135 DEBUG AlluxioFuseFileSystem - Exit (0): getattr(path=/aaa) in 3 ms\n+2020-03-03 14:33:35,138 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/._aaa)\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Failed to get info of /._aaa, path does not exist or is invalid\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Exit (-2): getattr(path=/._aaa) in 2 ms\n+```\n+\n+### Logging RPCs Calls Sent by Client\n+\n+Add to your application-side `log4j.properties` to capture RPCs between Alluxio client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MTQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You will see debug logs on the begin and the end of each RPC with its arguments and result\n          \n          \n            \n            You will see debug logs at the beginning and end of each RPC with its arguments and result", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391961463", "createdAt": "2020-03-12T23:44:33Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n+in `logs/fuse.log`:\n+\n+```\n+2020-03-03 14:33:35,129 DEBUG AlluxioFuseFileSystem - Enter: chmod(path=/aaa,mode=100644)\n+2020-03-03 14:33:35,131 DEBUG AlluxioFuseFileSystem - Exit (0): chmod(path=/aaa,mode=100644) in 2 ms\n+2020-03-03 14:33:35,132 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/aaa)\n+2020-03-03 14:33:35,135 DEBUG AlluxioFuseFileSystem - Exit (0): getattr(path=/aaa) in 3 ms\n+2020-03-03 14:33:35,138 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/._aaa)\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Failed to get info of /._aaa, path does not exist or is invalid\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Exit (-2): getattr(path=/._aaa) in 2 ms\n+```\n+\n+### Logging RPCs Calls Sent by Client\n+\n+Add to your application-side `log4j.properties` to capture RPCs between Alluxio client\n+and FileSystem Master:\n+\n+```properties\n+log4j.logger.alluxio.client.file.FileSystemMasterClient=DEBUG\n+```\n+\n+Similarly, capture lower-level RPCs between Alluxio client and Block Master:\n+\n+```properties\n+log4j.logger.alluxio.client.block.BlockMasterClient=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each RPC with its arguments and result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MTU0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            in client logs like the following:\n          \n          \n            \n            in the client logs like the following:", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391961547", "createdAt": "2020-03-12T23:44:55Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n+in `logs/fuse.log`:\n+\n+```\n+2020-03-03 14:33:35,129 DEBUG AlluxioFuseFileSystem - Enter: chmod(path=/aaa,mode=100644)\n+2020-03-03 14:33:35,131 DEBUG AlluxioFuseFileSystem - Exit (0): chmod(path=/aaa,mode=100644) in 2 ms\n+2020-03-03 14:33:35,132 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/aaa)\n+2020-03-03 14:33:35,135 DEBUG AlluxioFuseFileSystem - Exit (0): getattr(path=/aaa) in 3 ms\n+2020-03-03 14:33:35,138 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/._aaa)\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Failed to get info of /._aaa, path does not exist or is invalid\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Exit (-2): getattr(path=/._aaa) in 2 ms\n+```\n+\n+### Logging RPCs Calls Sent by Client\n+\n+Add to your application-side `log4j.properties` to capture RPCs between Alluxio client\n+and FileSystem Master:\n+\n+```properties\n+log4j.logger.alluxio.client.file.FileSystemMasterClient=DEBUG\n+```\n+\n+Similarly, capture lower-level RPCs between Alluxio client and Block Master:\n+\n+```properties\n+log4j.logger.alluxio.client.block.BlockMasterClient=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each RPC with its arguments and result\n+in client logs like the following:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MTc5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            On master, one can turn on the debug-level RPC logging for File System level RPC calls (e.g.,\n          \n          \n            \n            On the master, debug-level RPC logging for File System level RPC calls can be turned on (e.g.,", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391961792", "createdAt": "2020-03-12T23:45:47Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n+in `logs/fuse.log`:\n+\n+```\n+2020-03-03 14:33:35,129 DEBUG AlluxioFuseFileSystem - Enter: chmod(path=/aaa,mode=100644)\n+2020-03-03 14:33:35,131 DEBUG AlluxioFuseFileSystem - Exit (0): chmod(path=/aaa,mode=100644) in 2 ms\n+2020-03-03 14:33:35,132 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/aaa)\n+2020-03-03 14:33:35,135 DEBUG AlluxioFuseFileSystem - Exit (0): getattr(path=/aaa) in 3 ms\n+2020-03-03 14:33:35,138 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/._aaa)\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Failed to get info of /._aaa, path does not exist or is invalid\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Exit (-2): getattr(path=/._aaa) in 2 ms\n+```\n+\n+### Logging RPCs Calls Sent by Client\n+\n+Add to your application-side `log4j.properties` to capture RPCs between Alluxio client\n+and FileSystem Master:\n+\n+```properties\n+log4j.logger.alluxio.client.file.FileSystemMasterClient=DEBUG\n+```\n+\n+Similarly, capture lower-level RPCs between Alluxio client and Block Master:\n+\n+```properties\n+log4j.logger.alluxio.client.block.BlockMasterClient=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each RPC with its arguments and result\n+in client logs like the following:\n+\n+```\n+2020-03-03 15:56:40,115 DEBUG FileSystemMasterClient - Enter: GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+)\n+2020-03-03 15:56:40,117 DEBUG FileSystemMasterClient - Exit (ERROR): GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+) in 2 ms: alluxio.exception.status.NotFoundException: Path \"/.DS_Store\" does not exist.\n+```\n+\n+### Logging RPC Calls Received by Masters\n+\n+On master, one can turn on the debug-level RPC logging for File System level RPC calls (e.g.,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MTgyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            creating/reading/writing/removing files, updating file attributions) using `logLevel` command:\n          \n          \n            \n            creating/reading/writing/removing files, updating file attributions) using the `logLevel` command:", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391961820", "createdAt": "2020-03-12T23:45:53Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n+in `logs/fuse.log`:\n+\n+```\n+2020-03-03 14:33:35,129 DEBUG AlluxioFuseFileSystem - Enter: chmod(path=/aaa,mode=100644)\n+2020-03-03 14:33:35,131 DEBUG AlluxioFuseFileSystem - Exit (0): chmod(path=/aaa,mode=100644) in 2 ms\n+2020-03-03 14:33:35,132 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/aaa)\n+2020-03-03 14:33:35,135 DEBUG AlluxioFuseFileSystem - Exit (0): getattr(path=/aaa) in 3 ms\n+2020-03-03 14:33:35,138 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/._aaa)\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Failed to get info of /._aaa, path does not exist or is invalid\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Exit (-2): getattr(path=/._aaa) in 2 ms\n+```\n+\n+### Logging RPCs Calls Sent by Client\n+\n+Add to your application-side `log4j.properties` to capture RPCs between Alluxio client\n+and FileSystem Master:\n+\n+```properties\n+log4j.logger.alluxio.client.file.FileSystemMasterClient=DEBUG\n+```\n+\n+Similarly, capture lower-level RPCs between Alluxio client and Block Master:\n+\n+```properties\n+log4j.logger.alluxio.client.block.BlockMasterClient=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each RPC with its arguments and result\n+in client logs like the following:\n+\n+```\n+2020-03-03 15:56:40,115 DEBUG FileSystemMasterClient - Enter: GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+)\n+2020-03-03 15:56:40,117 DEBUG FileSystemMasterClient - Exit (ERROR): GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+) in 2 ms: alluxio.exception.status.NotFoundException: Path \"/.DS_Store\" does not exist.\n+```\n+\n+### Logging RPC Calls Received by Masters\n+\n+On master, one can turn on the debug-level RPC logging for File System level RPC calls (e.g.,\n+creating/reading/writing/removing files, updating file attributions) using `logLevel` command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MTg5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Similarly, turn on the debug-level logging for Block related RPC calls (e.g., adding/removing\n          \n          \n            \n            Similarly, turn on the debug-level logging for block related RPC calls (e.g., adding/removing", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391961891", "createdAt": "2020-03-12T23:46:08Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n+in `logs/fuse.log`:\n+\n+```\n+2020-03-03 14:33:35,129 DEBUG AlluxioFuseFileSystem - Enter: chmod(path=/aaa,mode=100644)\n+2020-03-03 14:33:35,131 DEBUG AlluxioFuseFileSystem - Exit (0): chmod(path=/aaa,mode=100644) in 2 ms\n+2020-03-03 14:33:35,132 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/aaa)\n+2020-03-03 14:33:35,135 DEBUG AlluxioFuseFileSystem - Exit (0): getattr(path=/aaa) in 3 ms\n+2020-03-03 14:33:35,138 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/._aaa)\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Failed to get info of /._aaa, path does not exist or is invalid\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Exit (-2): getattr(path=/._aaa) in 2 ms\n+```\n+\n+### Logging RPCs Calls Sent by Client\n+\n+Add to your application-side `log4j.properties` to capture RPCs between Alluxio client\n+and FileSystem Master:\n+\n+```properties\n+log4j.logger.alluxio.client.file.FileSystemMasterClient=DEBUG\n+```\n+\n+Similarly, capture lower-level RPCs between Alluxio client and Block Master:\n+\n+```properties\n+log4j.logger.alluxio.client.block.BlockMasterClient=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each RPC with its arguments and result\n+in client logs like the following:\n+\n+```\n+2020-03-03 15:56:40,115 DEBUG FileSystemMasterClient - Enter: GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+)\n+2020-03-03 15:56:40,117 DEBUG FileSystemMasterClient - Exit (ERROR): GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+) in 2 ms: alluxio.exception.status.NotFoundException: Path \"/.DS_Store\" does not exist.\n+```\n+\n+### Logging RPC Calls Received by Masters\n+\n+On master, one can turn on the debug-level RPC logging for File System level RPC calls (e.g.,\n+creating/reading/writing/removing files, updating file attributions) using `logLevel` command:\n+\n+```console\n+$ ./bin/alluxio logLevel \\\n+--logName=alluxio.master.file.FileSystemMasterClientServiceHandler \\\n+--target master --level=DEBUG\n+```\n+\n+Similarly, turn on the debug-level logging for Block related RPC calls (e.g., adding/removing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk2MjA4Mg==", "bodyText": "Please put each sentence on a new line in this paragraph", "url": "https://github.com/Alluxio/alluxio/pull/11150#discussion_r391962082", "createdAt": "2020-03-12T23:46:44Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Server-Logging.md", "diffHunk": "@@ -91,6 +91,107 @@ $ ./bin/alluxio logLevel --logName=alluxio.heartbeat.HeartbeatContext --target=w\n \n For more information, refer to the help text of the `logLevel` command by running `./bin/alluxio logLevel`\n \n+## Enabling Debug-level Logging for APIs/RPCs\n+\n+### Logging FUSE API calls\n+\n+Setting in `conf/log4j.properties`:\n+\n+```properties\n+log4j.logger.alluxio.fuse.AlluxioFuseFileSystem=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each FUSE API call with its arguments and result\n+in `logs/fuse.log`:\n+\n+```\n+2020-03-03 14:33:35,129 DEBUG AlluxioFuseFileSystem - Enter: chmod(path=/aaa,mode=100644)\n+2020-03-03 14:33:35,131 DEBUG AlluxioFuseFileSystem - Exit (0): chmod(path=/aaa,mode=100644) in 2 ms\n+2020-03-03 14:33:35,132 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/aaa)\n+2020-03-03 14:33:35,135 DEBUG AlluxioFuseFileSystem - Exit (0): getattr(path=/aaa) in 3 ms\n+2020-03-03 14:33:35,138 DEBUG AlluxioFuseFileSystem - Enter: getattr(path=/._aaa)\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Failed to get info of /._aaa, path does not exist or is invalid\n+2020-03-03 14:33:35,140 DEBUG AlluxioFuseFileSystem - Exit (-2): getattr(path=/._aaa) in 2 ms\n+```\n+\n+### Logging RPCs Calls Sent by Client\n+\n+Add to your application-side `log4j.properties` to capture RPCs between Alluxio client\n+and FileSystem Master:\n+\n+```properties\n+log4j.logger.alluxio.client.file.FileSystemMasterClient=DEBUG\n+```\n+\n+Similarly, capture lower-level RPCs between Alluxio client and Block Master:\n+\n+```properties\n+log4j.logger.alluxio.client.block.BlockMasterClient=DEBUG\n+```\n+\n+You will see debug logs on the begin and the end of each RPC with its arguments and result\n+in client logs like the following:\n+\n+```\n+2020-03-03 15:56:40,115 DEBUG FileSystemMasterClient - Enter: GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+)\n+2020-03-03 15:56:40,117 DEBUG FileSystemMasterClient - Exit (ERROR): GetStatus(path=/.DS_Store,options=loadMetadataType: ONCE\n+commonOptions {\n+  syncIntervalMs: -1\n+  ttl: -1\n+  ttlAction: DELETE\n+}\n+) in 2 ms: alluxio.exception.status.NotFoundException: Path \"/.DS_Store\" does not exist.\n+```\n+\n+### Logging RPC Calls Received by Masters\n+\n+On master, one can turn on the debug-level RPC logging for File System level RPC calls (e.g.,\n+creating/reading/writing/removing files, updating file attributions) using `logLevel` command:\n+\n+```console\n+$ ./bin/alluxio logLevel \\\n+--logName=alluxio.master.file.FileSystemMasterClientServiceHandler \\\n+--target master --level=DEBUG\n+```\n+\n+Similarly, turn on the debug-level logging for Block related RPC calls (e.g., adding/removing\n+blocks):\n+\n+```console\n+# For Block Master logging:\n+$ ./bin/alluxio logLevel \\\n+--logName=alluxio.master.block.BlockMasterClientServiceHandler \\\n+--target master --level=DEBUG\n+```\n+\n+### Identifying Expensive Client RPCs / FUSE calls\n+\n+When debugging the performance, it is often useful to understand which RPCs take most of the time\n+but without recording all the communication (e.g., enabling all debug logging). There are two\n+properties introduced in v2.3.0 in Alluxio to record expensive calls or RPCs in logs with WARN\n+level. For example, setting the following in `conf/alluxio-site.properties` will record client-side\n+RPCs taking more than 200ms and FUSE APIs taking more than 1s:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5cfb73b48b8940b9a91fd3a6efc1c59f08f74b3"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b355dfa0b63f300b162bbc9e887a961d367e91e", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/1b355dfa0b63f300b162bbc9e887a961d367e91e", "committedDate": "2020-03-13T18:38:27Z", "message": "Update docs/en/operation/Server-Logging.md\n\nCo-Authored-By: Zac Blanco <zac@alluxio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d8dfe8bba7249b2dd1e883047d6005ed06d043b", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/2d8dfe8bba7249b2dd1e883047d6005ed06d043b", "committedDate": "2020-03-13T18:38:37Z", "message": "Update docs/en/operation/Server-Logging.md\n\nCo-Authored-By: Zac Blanco <zac@alluxio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f3e6455c9b48b4c37890a34ce969fc2e5ffa6cf", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/9f3e6455c9b48b4c37890a34ce969fc2e5ffa6cf", "committedDate": "2020-03-13T18:38:48Z", "message": "Update docs/en/operation/Server-Logging.md\n\nCo-Authored-By: Zac Blanco <zac@alluxio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c27441b156064445661675a64f106a12f8abfed", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/8c27441b156064445661675a64f106a12f8abfed", "committedDate": "2020-03-13T18:39:17Z", "message": "Update docs/en/operation/Server-Logging.md\n\nCo-Authored-By: Zac Blanco <zac@alluxio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9267bafdd17d55e578089e0db969d123842df83f", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/9267bafdd17d55e578089e0db969d123842df83f", "committedDate": "2020-03-13T18:39:26Z", "message": "Update docs/en/operation/Server-Logging.md\n\nCo-Authored-By: Zac Blanco <zac@alluxio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd98781cedbe7b41c7e70c57a0290abb49af9dd6", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/fd98781cedbe7b41c7e70c57a0290abb49af9dd6", "committedDate": "2020-03-13T18:39:38Z", "message": "Update docs/en/operation/Server-Logging.md\n\nCo-Authored-By: Zac Blanco <zac@alluxio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e02d8363b676fe0fd7837536ee69a9e6418145b0", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e02d8363b676fe0fd7837536ee69a9e6418145b0", "committedDate": "2020-03-13T18:39:45Z", "message": "Update docs/en/operation/Server-Logging.md\n\nCo-Authored-By: Zac Blanco <zac@alluxio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7df951f40257e92b841d0a47650aa1c833d20ddf", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/7df951f40257e92b841d0a47650aa1c833d20ddf", "committedDate": "2020-03-13T18:40:12Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into docfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c0f3eb40603e9d9340352af2363643439c4d52c", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/3c0f3eb40603e9d9340352af2363643439c4d52c", "committedDate": "2020-03-13T18:40:19Z", "message": "Merge branch 'docfix' of github.com:apc999/alluxio into docfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5c2e5613eb1415fd59c0bf53c0efac1714426a2", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/c5c2e5613eb1415fd59c0bf53c0efac1714426a2", "committedDate": "2020-03-13T18:45:24Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTg1MTIz", "url": "https://github.com/Alluxio/alluxio/pull/11150#pullrequestreview-374585123", "createdAt": "2020-03-13T20:11:32Z", "commit": {"oid": "c5c2e5613eb1415fd59c0bf53c0efac1714426a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4844, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}