{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NjA3NDA5", "number": 10901, "title": "Fix iteration for RocksBlockStore", "bodyText": "This is to get rocks db out of prefix seek mode, under which iterators seekToFirst/Last APIs are ineffective. See https://github.com/facebook/rocksdb/wiki/Prefix-Seek-API-Changes for more context.\nFixes #10858", "createdAt": "2020-02-13T00:20:13Z", "url": "https://github.com/Alluxio/alluxio/pull/10901", "merged": true, "mergeCommit": {"oid": "3f52c815c93e16ca71dca7c01ab4f32605c0f260"}, "closed": true, "closedAt": "2020-02-13T18:48:06Z", "author": {"login": "ggezer"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDvnhtAH2gAyMzc0NjA3NDA5OmViMTQzZWQ5NGI1ODIyMTdiNmU5NWM3YTA2OWIxNmEyMzBhYzk1ODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD-7vGgFqTM1ODQzNzIxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eb143ed94b582217b6e95c7a069b16a230ac9589", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/eb143ed94b582217b6e95c7a069b16a230ac9589", "committedDate": "2020-02-13T00:16:34Z", "message": "Fix Rocks block store iteration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b72b1db3ee45f2f47cf6b6a922a47b3482275c9", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/2b72b1db3ee45f2f47cf6b6a922a47b3482275c9", "committedDate": "2020-02-13T00:16:47Z", "message": "Add unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/c10b996008c6d19009c74d3649dec534dbe64e62", "committedDate": "2020-02-13T00:16:57Z", "message": "Add integration tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTI3ODIx", "url": "https://github.com/Alluxio/alluxio/pull/10901#pullrequestreview-357927821", "createdAt": "2020-02-13T03:01:49Z", "commit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzowMTo0OVrOFpFpgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoxMToxMlrOFpFx1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYyODQ4MA==", "bodyText": "Can you describe this more, and the implications of a small one and a large one?\nAlso, what is \"size\"? rows? bytes?", "url": "https://github.com/Alluxio/alluxio/pull/10901#discussion_r378628480", "createdAt": "2020-02-13T03:01:49Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -1516,6 +1516,13 @@ public String toString() {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n           .setScope(Scope.MASTER)\n           .build();\n+  public static final PropertyKey MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE =\n+      new Builder(Name.MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE)\n+          .setDefaultValue(\"10000\")\n+          .setDescription(\"The read-ahead size for block iterator.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYyOTY3Nw==", "bodyText": "below, it uses setPrefixSameAsStart(). We don't need that anymore?", "url": "https://github.com/Alluxio/alluxio/pull/10901#discussion_r378629677", "createdAt": "2020-02-13T03:06:52Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/metastore/rocks/RocksBlockStore.java", "diffHunk": "@@ -67,10 +70,11 @@\n   public RocksBlockStore(String baseDir) {\n     RocksDB.loadLibrary();\n     mDisableWAL = new WriteOptions().setDisableWAL(true);\n+    mIteratorOption = new ReadOptions().setReadaheadSize(\n+        ServerConfiguration.getInt(PropertyKey.MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYyOTczMA==", "bodyText": "why is this removed?", "url": "https://github.com/Alluxio/alluxio/pull/10901#discussion_r378629730", "createdAt": "2020-02-13T03:07:07Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/metastore/rocks/RocksBlockStore.java", "diffHunk": "@@ -67,10 +70,11 @@\n   public RocksBlockStore(String baseDir) {\n     RocksDB.loadLibrary();\n     mDisableWAL = new WriteOptions().setDisableWAL(true);\n+    mIteratorOption = new ReadOptions().setReadaheadSize(\n+        ServerConfiguration.getInt(PropertyKey.MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE));\n     ColumnFamilyOptions cfOpts = new ColumnFamilyOptions()\n         .setMemTableConfig(new HashLinkedListMemTableConfig())\n-        .setCompressionType(CompressionType.NO_COMPRESSION)\n-        .useFixedLengthPrefixExtractor(8); // We always search using the initial long key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMDExMg==", "bodyText": "Should we make this larger?", "url": "https://github.com/Alluxio/alluxio/pull/10901#discussion_r378630112", "createdAt": "2020-02-13T03:08:54Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -1516,6 +1516,13 @@ public String toString() {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n           .setScope(Scope.MASTER)\n           .build();\n+  public static final PropertyKey MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE =\n+      new Builder(Name.MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE)\n+          .setDefaultValue(\"10000\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMDYxNQ==", "bodyText": "after the loop, we should check that the iterator is done?", "url": "https://github.com/Alluxio/alluxio/pull/10901#discussion_r378630615", "createdAt": "2020-02-13T03:11:12Z", "author": {"login": "gpang"}, "path": "core/server/master/src/test/java/alluxio/master/metastore/rocks/RocksBlockStoreTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.master.metastore.rocks;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import alluxio.master.metastore.BlockStore;\n+import alluxio.proto.meta.Block;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.util.Iterator;\n+\n+public class RocksBlockStoreTest {\n+  @Rule\n+  public TemporaryFolder mFolder = new TemporaryFolder();\n+\n+  @Test\n+  public void testPutGet() throws Exception {\n+    final int blockCount = 3;\n+    RocksBlockStore blockStore = new RocksBlockStore(mFolder.newFolder().getAbsolutePath());\n+    for (int i = 0; i < blockCount; i++) {\n+      blockStore.putBlock(i, Block.BlockMeta.newBuilder().setLength(i).build());\n+    }\n+\n+    for (int i = 0; i < blockCount; i++) {\n+      assertTrue(blockStore.getBlock(i).isPresent());\n+      assertEquals(i, blockStore.getBlock(i).get().getLength());\n+    }\n+  }\n+\n+  @Test\n+  public void testIterator() throws Exception {\n+    final int blockCount = 3;\n+    RocksBlockStore blockStore = new RocksBlockStore(mFolder.newFolder().getAbsolutePath());\n+    for (int i = 0; i < blockCount; i++) {\n+      blockStore.putBlock(i, Block.BlockMeta.newBuilder().setLength(i).build());\n+    }\n+\n+    Iterator<BlockStore.Block> iter = blockStore.iterator();\n+    for (int i = 0; i < blockCount; i++) {\n+      assertTrue(iter.hasNext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a489623278073bd55311bcbe0b8387fac87d04fc", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/a489623278073bd55311bcbe0b8387fac87d04fc", "committedDate": "2020-02-13T05:44:28Z", "message": "Change read-ahaed prop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a377a9d63b42583467c08e4d92ee6c3f48736d1", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/2a377a9d63b42583467c08e4d92ee6c3f48736d1", "committedDate": "2020-02-13T05:45:13Z", "message": "Add rock iterator utility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "428b669f5ef90cff91c28c4313b4cae13af2adda", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/428b669f5ef90cff91c28c4313b4cae13af2adda", "committedDate": "2020-02-13T05:46:38Z", "message": "fix style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9798fc8286f4509fdd1af47211f15a2c3180cb40", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/9798fc8286f4509fdd1af47211f15a2c3180cb40", "committedDate": "2020-02-13T05:47:16Z", "message": "ut fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzQ0NDIw", "url": "https://github.com/Alluxio/alluxio/pull/10901#pullrequestreview-358344420", "createdAt": "2020-02-13T16:05:21Z", "commit": {"oid": "9798fc8286f4509fdd1af47211f15a2c3180cb40"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowNToyMVrOFpZvaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowNzowNVrOFpZzqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1NzY3Mg==", "bodyText": "should this also use the read option like the other iterator?", "url": "https://github.com/Alluxio/alluxio/pull/10901#discussion_r378957672", "createdAt": "2020-02-13T16:05:21Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/metastore/rocks/RocksInodeStore.java", "diffHunk": "@@ -245,7 +245,8 @@ public boolean hasChildren(InodeDirectoryView inode, ReadOption option) {\n    * @return an iterator over stored inodes\n    */\n   public Iterator<InodeView> iterator() {\n-    return new RocksInodeViewIterator(db().newIterator(mInodesColumn.get()));\n+    return RocksUtils.createIterator(db().newIterator(mInodesColumn.get()),\n+        (iter) -> getMutable(Longs.fromByteArray(iter.key()), ReadOption.defaults()).get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9798fc8286f4509fdd1af47211f15a2c3180cb40"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1ODc2MA==", "bodyText": "I see. Could you update the description to mention bytes, and maybe some of the implications of the size? For example, if we have a billion blocks, is reading 4mb at a time efficient enough? Should this be a larger size?", "url": "https://github.com/Alluxio/alluxio/pull/10901#discussion_r378958760", "createdAt": "2020-02-13T16:07:05Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -1516,6 +1516,13 @@ public String toString() {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n           .setScope(Scope.MASTER)\n           .build();\n+  public static final PropertyKey MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE =\n+      new Builder(Name.MASTER_METASTORE_BLOCK_ITERATOR_READAHEAD_SIZE)\n+          .setDefaultValue(\"10000\")\n+          .setDescription(\"The read-ahead size for block iterator.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYyODQ4MA=="}, "originalCommit": {"oid": "c10b996008c6d19009c74d3649dec534dbe64e62"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0905bf15d6eff3c4269e4f8692d618480950436", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/a0905bf15d6eff3c4269e4f8692d618480950436", "committedDate": "2020-02-13T16:44:47Z", "message": "fix prop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc28d3cf42a0276b6f2e33b606b26aaf35585b76", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/fc28d3cf42a0276b6f2e33b606b26aaf35585b76", "committedDate": "2020-02-13T16:45:04Z", "message": "Iterate inode-store with read-ahead"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NDM3MjE2", "url": "https://github.com/Alluxio/alluxio/pull/10901#pullrequestreview-358437216", "createdAt": "2020-02-13T18:07:13Z", "commit": {"oid": "fc28d3cf42a0276b6f2e33b606b26aaf35585b76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4946, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}