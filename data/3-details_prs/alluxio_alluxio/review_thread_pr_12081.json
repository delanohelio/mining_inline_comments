{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjIyMTY4", "number": 12081, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoxMTo0MlrOEhZiNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoxMjoyNVrOEhZjFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDU2ODIwOnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoxMTo0MlrOHOsZAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzo0NzowNFrOHOxo8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2OTQxMA==", "bodyText": "Where is this set to false?", "url": "https://github.com/Alluxio/alluxio/pull/12081#discussion_r485169410", "createdAt": "2020-09-08T20:11:42Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -164,6 +166,7 @@ public boolean isUnderSyncPoint(AlluxioURI path) {\n    * Start the polling threads.\n    */\n   public void start() throws IOException {\n+    mStarted = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b9c43b8ccefae1af0cf7c9da69e86e21e56bd79"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1NTQxMA==", "bodyText": "Added in stop().", "url": "https://github.com/Alluxio/alluxio/pull/12081#discussion_r485255410", "createdAt": "2020-09-08T23:47:04Z", "author": {"login": "bf8086"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -164,6 +166,7 @@ public boolean isUnderSyncPoint(AlluxioURI path) {\n    * Start the polling threads.\n    */\n   public void start() throws IOException {\n+    mStarted = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2OTQxMA=="}, "originalCommit": {"oid": "1b9c43b8ccefae1af0cf7c9da69e86e21e56bd79"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDU3MDQ1OnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMDoxMjoyNVrOHOsaXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMzo1MTo1M1rOHOxukA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2OTc1Nw==", "bodyText": "What is the difference from before? How does the new code avoid UFS access?", "url": "https://github.com/Alluxio/alluxio/pull/12081#discussion_r485169757", "createdAt": "2020-09-08T20:12:25Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -428,8 +431,9 @@ public boolean hasNext() {\n         while (mountId == -1) {\n           try {\n             syncPointPath = mEntry.getPath();\n-            MountTable.Resolution resolution = mMountTable.resolve(mEntry);\n-            mountId = resolution.getMountId();\n+            String mountPoint = mMountTable.getMountPoint(mEntry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b9c43b8ccefae1af0cf7c9da69e86e21e56bd79"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI1Njg0OA==", "bodyText": "MountTable::resolve() will actually create a UFS client to query the UFS path while the new code only grabs the MountInfo. This function only need the mount id so resolution is not required.", "url": "https://github.com/Alluxio/alluxio/pull/12081#discussion_r485256848", "createdAt": "2020-09-08T23:51:53Z", "author": {"login": "bf8086"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -428,8 +431,9 @@ public boolean hasNext() {\n         while (mountId == -1) {\n           try {\n             syncPointPath = mEntry.getPath();\n-            MountTable.Resolution resolution = mMountTable.resolve(mEntry);\n-            mountId = resolution.getMountId();\n+            String mountPoint = mMountTable.getMountPoint(mEntry);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE2OTc1Nw=="}, "originalCommit": {"oid": "1b9c43b8ccefae1af0cf7c9da69e86e21e56bd79"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1256, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}