{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MTQ0ODc3", "number": 12480, "title": "Enable ufsIOtest to retrieve configuration from a mount point", "bodyText": "Previously any ufs with credentials would need the credentials resupplied when running speed test.\nThis change removes that hassle for the user.", "createdAt": "2020-11-10T01:24:53Z", "url": "https://github.com/Alluxio/alluxio/pull/12480", "merged": true, "mergeCommit": {"oid": "f8ebc11c0eea476a7752868d18776879eb32aac8"}, "closed": true, "closedAt": "2020-11-12T15:50:18Z", "author": {"login": "yuzhu"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdakVGrAH2gAyNTE4MTQ0ODc3OjJiYmQyYjcyMzZmYWRhNDIyYzE4ZmQwMjg1ZGNkNDk5MWJmN2NmNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbsPRvAH2gAyNTE4MTQ0ODc3OjA1NTM0OTYwMTlkN2Y5MWFkYjEzNGNmOTVhMGMxNWQyMmZlZjdjNGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2bbd2b7236fada422c18fd0285dcd4991bf7cf64", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/2bbd2b7236fada422c18fd0285dcd4991bf7cf64", "committedDate": "2020-11-08T18:18:54Z", "message": "Expose mount id in mount table listing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c90d3828092fa7c8618a453e6cd8efbbbb4f000a", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/c90d3828092fa7c8618a453e6cd8efbbbb4f000a", "committedDate": "2020-11-10T01:23:18Z", "message": "Add support for loading options from Ufs for IO tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/bc0c4067795d1bd022a618ec7c18d457f6248310", "committedDate": "2020-11-10T01:36:16Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTEzOTE5", "url": "https://github.com/Alluxio/alluxio/pull/12480#pullrequestreview-527513919", "createdAt": "2020-11-10T18:55:25Z", "commit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1NToyNVrOHwrBCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOToxMDoyOVrOHwrt9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5ODQ3NA==", "bodyText": "can we add unittests for this class and methods?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520798474", "createdAt": "2020-11-10T18:55:25Z", "author": {"login": "gpang"}, "path": "core/base/src/main/java/alluxio/wire/MountPointInfo.java", "diffHunk": "@@ -170,18 +187,19 @@ public boolean equals(Object o) {\n     return mUfsUri.equals(that.mUfsUri) && mUfsType.equals(that.mUfsType)\n         && mUfsCapacityBytes == that.mUfsCapacityBytes && mUfsUsedBytes == that.mUfsUsedBytes\n         && mReadOnly == that.mReadOnly && mProperties.equals(that.mProperties)\n-        && mShared == that.mShared;\n+        && mShared == that.mShared && mMountId == that.mMountId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5ODc4NA==", "bodyText": "Can we add unittests for these new methods?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520798784", "createdAt": "2020-11-10T18:55:43Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/grpc/GrpcUtils.java", "diffHunk": "@@ -303,7 +303,9 @@ public static MountPointInfo fromProto(alluxio.grpc.MountPointInfo mountPointPIn\n         .setUfsCapacityBytes(mountPointPInfo.getUfsCapacityBytes())\n         .setUfsUsedBytes(mountPointPInfo.getUfsUsedBytes())\n         .setReadOnly(mountPointPInfo.getReadOnly())\n-        .setProperties(mountPointPInfo.getPropertiesMap()).setShared(mountPointPInfo.getShared());\n+        .setProperties(mountPointPInfo.getPropertiesMap())\n+        .setMountId(mountPointPInfo.getMountId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMDA2OA==", "bodyText": "Hrmmm, I don't know the answer this question, but is it a problem for existing UFS implementations if we changed the UFS interface?\n@madanadit", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520800068", "createdAt": "2020-11-10T18:57:01Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/underfs/UnderFileSystem.java", "diffHunk": "@@ -338,6 +337,13 @@ public int getValue() {\n   @Deprecated\n   long getBlockSizeByte(String path) throws IOException;\n \n+  /**\n+   * Gets the under file system configuration.\n+   *\n+   * @return the configuration\n+   */\n+  AlluxioConfiguration getConfiguration() throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMTE0OQ==", "bodyText": "Does anything set the mount id in this test file?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520801149", "createdAt": "2020-11-10T18:58:15Z", "author": {"login": "gpang"}, "path": "core/common/src/test/java/alluxio/wire/MountPointInfoTest.java", "diffHunk": "@@ -38,6 +38,7 @@ public void checkEquality(MountPointInfo a, MountPointInfo b) {\n     Assert.assertEquals(a.getUfsUsedBytes(), b.getUfsUsedBytes());\n     Assert.assertEquals(a.getReadOnly(), b.getReadOnly());\n     Assert.assertEquals(a.getProperties(), b.getProperties());\n+    Assert.assertEquals(a.getMountId(), b.getMountId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwNjg4OA==", "bodyText": "Do we have a unittest for this?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520806888", "createdAt": "2020-11-10T19:04:44Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/meta/options/MountInfo.java", "diffHunk": "@@ -88,6 +88,7 @@ public MountPointInfo toMountPointInfo() {\n     info.setReadOnly(mOptions.getReadOnly());\n     info.setProperties(mOptions.getProperties());\n     info.setShared(mOptions.getShared());\n+    info.setMountId(mMountId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwODM2Mg==", "bodyText": "I'm not familiar with this. What does this do?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520808362", "createdAt": "2020-11-10T19:07:30Z", "author": {"login": "gpang"}, "path": "stress/common/src/main/java/alluxio/stress/worker/UfsIOParameters.java", "diffHunk": "@@ -31,10 +35,16 @@\n   public String mDataSize = \"4G\";\n \n   @Parameter(names = {\"--path\"},\n-          description = \"the Alluxio directory to write temporary data in\",\n+          description = \"the Ufs Path to write temporary data in\",\n           required = true)\n   public String mPath;\n \n+  @Parameter(names = {\"--use-ufs-conf\"},\n+      description = \"If true, use the existing ufs configuration to read/write to the base path\")\n+  @Parameters.BooleanDescription(trueDescription = \"UseUFSConf\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwODcxMQ==", "bodyText": "where does this ufs conf come from?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520808711", "createdAt": "2020-11-10T19:08:10Z", "author": {"login": "gpang"}, "path": "stress/common/src/main/java/alluxio/stress/worker/UfsIOParameters.java", "diffHunk": "@@ -31,10 +35,16 @@\n   public String mDataSize = \"4G\";\n \n   @Parameter(names = {\"--path\"},\n-          description = \"the Alluxio directory to write temporary data in\",\n+          description = \"the Ufs Path to write temporary data in\",\n           required = true)\n   public String mPath;\n \n+  @Parameter(names = {\"--use-ufs-conf\"},\n+      description = \"If true, use the existing ufs configuration to read/write to the base path\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwOTYzNg==", "bodyText": "Can you update the names in this file to use these constants?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520809636", "createdAt": "2020-11-10T19:09:52Z", "author": {"login": "gpang"}, "path": "stress/common/src/main/java/alluxio/stress/worker/UfsIOParameters.java", "diffHunk": "@@ -23,6 +23,10 @@\n  * Parameters used in the UFS I/O throughput test.\n  * */\n public class UfsIOParameters extends Parameters {\n+  public static final String USE_UFS_CONF = \"--use-ufs-conf\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwOTk3Mg==", "bodyText": "Will this work with nested mounts?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520809972", "createdAt": "2020-11-10T19:10:29Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/stress/StressBenchDefinition.java", "diffHunk": "@@ -91,23 +97,56 @@ public StressBenchDefinition() {\n     return result;\n   }\n \n+  private Map<String, String> getUfsConf(String ufsUri, RunTaskContext runTaskContext)\n+      throws Exception {\n+    Map<String, MountPointInfo> mountTable = runTaskContext.getFileSystem().getMountTable();\n+    for (Map.Entry<String, MountPointInfo> entry : mountTable.entrySet()) {\n+      if (PathUtils.hasPrefix(ufsUri, entry.getKey())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9b89eee7a1be76ca0233d85c6825c3753072696", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/d9b89eee7a1be76ca0233d85c6825c3753072696", "committedDate": "2020-11-10T21:28:50Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ad14ac658d05ddd9667e8f572b3b15c4b6f37f5", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/3ad14ac658d05ddd9667e8f572b3b15c4b6f37f5", "committedDate": "2020-11-10T21:36:08Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8af5ce19b3faba1db6e3122d3aa19476243a7df1", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/8af5ce19b3faba1db6e3122d3aa19476243a7df1", "committedDate": "2020-11-10T22:10:37Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NjkxMjUx", "url": "https://github.com/Alluxio/alluxio/pull/12480#pullrequestreview-527691251", "createdAt": "2020-11-10T23:31:30Z", "commit": {"oid": "8af5ce19b3faba1db6e3122d3aa19476243a7df1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzozMTozMFrOHwzsog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMzozMjo0MlrOHwzuTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0MDcwNg==", "bodyText": "If this is set to true, does the existing --conf get ignored, or are they merged? Which takes priority? Can we add this info to the description?", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520940706", "createdAt": "2020-11-10T23:31:30Z", "author": {"login": "gpang"}, "path": "stress/common/src/main/java/alluxio/stress/worker/UfsIOParameters.java", "diffHunk": "@@ -23,19 +23,28 @@\n  * Parameters used in the UFS I/O throughput test.\n  * */\n public class UfsIOParameters extends Parameters {\n+  public static final String USE_UFS_CONF = \"--use-ufs-conf\";\n+  public static final String CONF = \"--conf\";\n+  public static final String PATH = \"--path\";\n+\n   @Parameter(names = {\"--threads\"}, description = \"the number of threads to use\")\n   public int mThreads = 4;\n \n   @Parameter(names = {\"--io-size\"},\n           description = \"size of data to write and then read for each thread\")\n   public String mDataSize = \"4G\";\n \n-  @Parameter(names = {\"--path\"},\n-          description = \"the Alluxio directory to write temporary data in\",\n+  @Parameter(names = {PATH},\n+          description = \"the Ufs Path to write temporary data in\",\n           required = true)\n   public String mPath;\n \n-  @DynamicParameter(names = \"--conf\",\n+  @Parameter(names = {USE_UFS_CONF},\n+      description = \"If true, attempt to load the ufs configuration from an existing mount point \"\n+          + \"to read/write to the base path\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8af5ce19b3faba1db6e3122d3aa19476243a7df1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk0MTEzMg==", "bodyText": "NIT: I think something like --is-mounted or --use-mount-conf makes a bit more sense, since this essentially controls if the path is mounted or not.", "url": "https://github.com/Alluxio/alluxio/pull/12480#discussion_r520941132", "createdAt": "2020-11-10T23:32:42Z", "author": {"login": "gpang"}, "path": "stress/common/src/main/java/alluxio/stress/worker/UfsIOParameters.java", "diffHunk": "@@ -23,6 +23,10 @@\n  * Parameters used in the UFS I/O throughput test.\n  * */\n public class UfsIOParameters extends Parameters {\n+  public static final String USE_UFS_CONF = \"--use-ufs-conf\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwOTYzNg=="}, "originalCommit": {"oid": "bc0c4067795d1bd022a618ec7c18d457f6248310"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7963dac623e4bd0aa023039218a9e2f9d2888fe", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/d7963dac623e4bd0aa023039218a9e2f9d2888fe", "committedDate": "2020-11-11T16:54:19Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Mzk0NDc5", "url": "https://github.com/Alluxio/alluxio/pull/12480#pullrequestreview-528394479", "createdAt": "2020-11-11T17:39:50Z", "commit": {"oid": "d7963dac623e4bd0aa023039218a9e2f9d2888fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c4a7a073b6a897133fd6e8623b4fc48572e6ef6", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/6c4a7a073b6a897133fd6e8623b4fc48572e6ef6", "committedDate": "2020-11-12T05:57:31Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NzcxMDIy", "url": "https://github.com/Alluxio/alluxio/pull/12480#pullrequestreview-528771022", "createdAt": "2020-11-12T06:01:41Z", "commit": {"oid": "6c4a7a073b6a897133fd6e8623b4fc48572e6ef6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0553496019d7f91adb134cf95a0c15d22fef7c4b", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/0553496019d7f91adb134cf95a0c15d22fef7c4b", "committedDate": "2020-11-12T06:05:42Z", "message": "Fix compilation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3412, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}