{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2ODU5ODg5", "number": 11598, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1ODo0OVrOEIc4vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxODoxN1rOENVaXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk3MzQxOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1ODo0OVrOGobByQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1ODo0OVrOGobByQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTA0OQ==", "bodyText": "can we use lambda syntax here?\n() -> new CachedItem());\n\nedit: or simply CachedItem::new?", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039049", "createdAt": "2020-06-24T16:58:49Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk3NTk3OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1OTozM1rOGobDdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1OTozM1rOGobDdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTQ3OQ==", "bodyText": "can we use lambda syntax here?\n() -> new CachedItem());\n\nedit: or better yet simply CachedItem::new?", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039479", "createdAt": "2020-06-24T16:59:33Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk3NzMzOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1OTo1MVrOGobEOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1OTo1MVrOGobEOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTY3NA==", "bodyText": "can you undo the changes to this indentation?", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039674", "createdAt": "2020-06-24T16:59:51Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -77,9 +76,9 @@ public URIStatus getStatus() {\n    */\n   public MetadataCache(int maxSize, long expirationTimeMs) {\n     mCache = CacheBuilder.newBuilder()\n-        .maximumSize(maxSize)\n-        .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n-        .build();\n+            .maximumSize(maxSize)\n+            .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n+            .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk4ODk5OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowMjo0M1rOGobLRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowMjo0M1rOGobLRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTQ3Nw==", "bodyText": "We should be logging any exceptions here instead of calling printStackTrace\nExample:\nat the top of the class\nprivate static final Logger LOG = LoggerFactory.getLogger(MetadataCache.class);\nthen in here and the other try/catch\nLogUtils.warnWithException(LOG, \"Failed to cache metadata\", e)", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445041477", "createdAt": "2020-06-24T17:02:43Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk5MzcwOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNDowMlrOGobOcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzoyMjoxOVrOGvomnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjI5MA==", "bodyText": "same comments about logging and catching exceptions here.", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445042290", "createdAt": "2020-06-24T17:04:02Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setStatus(status);\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwMTUwMQ==", "bodyText": "Sure. It should be ExecutionException and log the error info.", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452601501", "createdAt": "2020-07-10T03:22:19Z", "author": {"login": "QianxiZhang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setStatus(status);\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjI5MA=="}, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Mjk5NzEzOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNTowNVrOGobQmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNTowNVrOGobQmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0Mjg0Mw==", "bodyText": "Generally, it's not a good practice to catch Exception - we should really only catch exceptions that we know can be thrown. Is there a list of exceptions you know could be thrown here?", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445042843", "createdAt": "2020-06-24T17:05:05Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MTgwNzM4OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMzo1ODowNlrOGpxf7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMzo1ODowNlrOGpxf7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NTc4OA==", "bodyText": "good to be explicit on which Exception we are catching here?", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446455788", "createdAt": "2020-06-26T23:58:06Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setStatus(status);\n+    } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MTgxMTY5OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwMDowMTo1N1rOGpxiVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwMDowMTo1N1rOGpxiVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NjQwNQ==", "bodyText": "Puts the status into cache. or the style checker will fail and complain", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446456405", "createdAt": "2020-06-27T00:01:57Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -67,6 +48,24 @@ public URIStatus getStatus() {\n     public List<URIStatus> getDirStatuses() {\n       return mDirStatuses;\n     }\n+\n+    /**\n+     *  put the status into cache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MTgxMTg1OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwMDowMjowOFrOGpxicA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwMDowMjowOFrOGpxicA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NjQzMg==", "bodyText": "ditto \ud83d\udc46", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446456432", "createdAt": "2020-06-27T00:02:08Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -67,6 +48,24 @@ public URIStatus getStatus() {\n     public List<URIStatus> getDirStatuses() {\n       return mDirStatuses;\n     }\n+\n+    /**\n+     *  put the status into cache\n+     *\n+     *  @param status the metadata of the path\n+     */\n+    public void setStatus(URIStatus status) {\n+      mStatus = status;\n+    }\n+\n+    /**\n+     *  put the directory status into cache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDE2NzM4OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxNToxM1rOGv9UPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxNToxM1rOGv9UPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MDg2MQ==", "bodyText": "nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n          \n          \n            \n                  CachedItem item = mCache.get(dir.getPath(), () -> new CachedItem());", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452940861", "createdAt": "2020-07-10T16:15:13Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +126,15 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a670c004f7a4cd96d9307feb08dd8c53496e6e55"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDE3NDUyOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxNzoyNFrOGv9Yqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxNzoyNFrOGv9Yqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MTk5NQ==", "bodyText": "nit\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  CachedItem item = mCache.get(path, ()-> new CachedItem());\n          \n          \n            \n                  CachedItem item = mCache.get(path, () -> new CachedItem());", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452941995", "createdAt": "2020-07-10T16:17:24Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +103,20 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, ()-> new CachedItem());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a670c004f7a4cd96d9307feb08dd8c53496e6e55"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDE3NzU4OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxODoxN1rOGv9afw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxODoxN1rOGv9afw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MjQ2Mw==", "bodyText": "Can we slightly alter this exception message so we can differentiate it from the one above?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),\n          \n          \n            \n                    LOG.error(\"Failed to put meta into client cache for dir \" + dir.getPath(),", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452942463", "createdAt": "2020-07-10T16:18:17Z", "author": {"login": "ZacBlanco"}, "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +126,15 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a670c004f7a4cd96d9307feb08dd8c53496e6e55"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1489, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}