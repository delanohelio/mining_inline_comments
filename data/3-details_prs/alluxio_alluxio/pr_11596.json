{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2Nzk2Mjgz", "number": 11596, "title": "Fix fetching partition for Glue UDB", "bodyText": "Glue getPartions fetches a random number of partition from glue service without setting the MaxResults and NextToken. Add the withMaxResults and withNextToken to fix the partition fetching for Glue UDB.", "createdAt": "2020-06-18T22:38:12Z", "url": "https://github.com/Alluxio/alluxio/pull/11596", "merged": true, "mergeCommit": {"oid": "313d19808211837896b4a3c1b42977b05bda709b"}, "closed": true, "closedAt": "2020-06-19T01:08:55Z", "author": {"login": "HelloHorizon"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsmQwtgH2gAyNDM2Nzk2MjgzOmJmMGNlNmM5MjgyMTdkZThjNjI4MTIxNjkxMjg4Y2IzN2YzNjdkOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsoe5ZAFqTQzMzc0MDk1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c", "author": {"user": {"login": "HelloHorizon", "name": "Shouwei Chen"}}, "url": "https://github.com/Alluxio/alluxio/commit/bf0ce6c928217de8c628121691288cb37f367d8c", "committedDate": "2020-06-18T22:33:27Z", "message": "Fix glue udb fetch partition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjk3NzA0", "url": "https://github.com/Alluxio/alluxio/pull/11596#pullrequestreview-433697704", "createdAt": "2020-06-18T22:50:56Z", "commit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MDo1N1rOGmCqWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1NjoyMVrOGmCwfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjY4Mw==", "bodyText": "can this be something like partitions.addAll(getPartitionsResult.getPartitions()?", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442542683", "createdAt": "2020-06-18T22:50:57Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjkzMA==", "bodyText": "should this be getPartitionsResult.getPartitions().size() instead of partitions.size()?", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442542930", "createdAt": "2020-06-18T22:51:49Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));\n+        nextToken = getPartitionsResult.getNextToken();\n+        LOG.debug(\"Glue table {}.{} added {} partitions.\",\n+            mGlueDbName, tableName, partitions.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ==", "bodyText": "Is this large enough? Do you know if we can make this larger while still allowing it to return the correct amount?", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442543201", "createdAt": "2020-06-18T22:52:39Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDI1Mw==", "bodyText": "NIT: maybe partitions.fetch.max", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442544253", "createdAt": "2020-06-18T22:56:21Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -197,6 +203,7 @@ public String getDefaultValue() {\n   public static final class Name {\n     // AWS Glue related properties\n     public static final String MAX_GLUE_CONNECTION = \"max.connection\";\n+    public static final String MAX_GLUE_FETCH_PARTITIONS = \"max.partitions\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "def6add82833c0348f0b9a2858953f454eba690d", "author": {"user": {"login": "HelloHorizon", "name": "Shouwei Chen"}}, "url": "https://github.com/Alluxio/alluxio/commit/def6add82833c0348f0b9a2858953f454eba690d", "committedDate": "2020-06-18T23:42:24Z", "message": "Make some minor changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzE1Mzgx", "url": "https://github.com/Alluxio/alluxio/pull/11596#pullrequestreview-433715381", "createdAt": "2020-06-18T23:41:36Z", "commit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzo0MTozNlrOGmDj8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzo0Mzo1NVrOGmDmlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1NzQyNw==", "bodyText": "If we set it to 1000, is it slow? I think setting it larger would be better.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442557427", "createdAt": "2020-06-18T23:41:36Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1ODEwMg==", "bodyText": "I think both can be useful. How about something like \"Glue table {}.{} adding {} batch partitions with {} total partitions.\"", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442558102", "createdAt": "2020-06-18T23:43:55Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));\n+        nextToken = getPartitionsResult.getNextToken();\n+        LOG.debug(\"Glue table {}.{} added {} partitions.\",\n+            mGlueDbName, tableName, partitions.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjkzMA=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5528b0d2822cfd047b08429ff5014545c687c8a", "author": {"user": {"login": "HelloHorizon", "name": "Shouwei Chen"}}, "url": "https://github.com/Alluxio/alluxio/commit/e5528b0d2822cfd047b08429ff5014545c687c8a", "committedDate": "2020-06-19T00:10:25Z", "message": "Change log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzQwOTU0", "url": "https://github.com/Alluxio/alluxio/pull/11596#pullrequestreview-433740954", "createdAt": "2020-06-19T01:08:42Z", "commit": {"oid": "e5528b0d2822cfd047b08429ff5014545c687c8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4350, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}