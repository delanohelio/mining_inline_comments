{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5ODUwMDM1", "number": 11016, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0NToyOFrODjMeWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0NToyOFrODjMeWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjMxMTI5OnYy", "diffSide": "RIGHT", "path": "shell/src/test/java/alluxio/cli/fs/command/DuCommandTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0NToyOFrOFu3m-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo0Nzo0N1rOFu3r3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4OTkxNA==", "bodyText": "up to you but we have DuIntegrationTest if you want to consolidate", "url": "https://github.com/Alluxio/alluxio/pull/11016#discussion_r384689914", "createdAt": "2020-02-26T18:45:28Z", "author": {"login": "apc999"}, "path": "shell/src/test/java/alluxio/cli/fs/command/DuCommandTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.SystemOutRule;\n+import alluxio.client.file.URIStatus;\n+import alluxio.wire.FileInfo;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+public class DuCommandTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c9a014cef6f9ebc1a5842baef4c9c3412ac3c1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5MTE2NQ==", "bodyText": "I am aware but I specifically made this test because running a full alluxio cluster is unnecessary in order to test this functionality. The time it would require to run this in an integration test is probably 10x higher than using a unit test - and we should work to reduce the execution times of our tests because they have been jumping higher recently.", "url": "https://github.com/Alluxio/alluxio/pull/11016#discussion_r384691165", "createdAt": "2020-02-26T18:47:47Z", "author": {"login": "ZacBlanco"}, "path": "shell/src/test/java/alluxio/cli/fs/command/DuCommandTest.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.SystemOutRule;\n+import alluxio.client.file.URIStatus;\n+import alluxio.wire.FileInfo;\n+\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+public class DuCommandTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4OTkxNA=="}, "originalCommit": {"oid": "17c9a014cef6f9ebc1a5842baef4c9c3412ac3c1"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1984, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}