{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NDk3MzM5", "number": 10918, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMTo1Njo1OVrODgDucw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjoxNDo1NFrODhsojA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTQyMDY3OnYy", "diffSide": "RIGHT", "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectMetricsCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMTo1Njo1OVrOFqHn2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMTo1Njo1OVrOFqHn2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTQwMQ==", "bodyText": "Why is this two lines?", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r379709401", "createdAt": "2020-02-15T01:56:59Z", "author": {"login": "ns1123"}, "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectMetricsCommand.java", "diffHunk": "@@ -120,12 +128,15 @@ public String getDescription() {\n \n   /**\n    * Probes Alluxio metrics json sink.\n+   * If the HTTP request fails, return the error content\n+   * instead of throwing an exception.\n    *\n    * @param url URL that serves Alluxio metrics\n    * @return HTTP response in JSON string\n    */\n   public String getMetricsJson(String url) throws IOException {\n-    String responseJson = HttpUtils.get(url, COLLECT_METRICS_TIMEOUT);\n+    String responseJson;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41c42834b916d6cf34d79bcbfdb31bcc39a8155"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTQyMTg0OnYy", "diffSide": "RIGHT", "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMTo1OTo1M1rOFqHohA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMjowMzoxMVrOFqHpTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTU3Mg==", "bodyText": "checkstyle?", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r379709572", "createdAt": "2020-02-15T01:59:53Z", "author": {"login": "ns1123"}, "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "diffHunk": "@@ -38,33 +38,33 @@ public CollectEnvCommand(FileSystemContext fsContext) {\n   @Override\n   protected void registerCommands() {\n     registerCommand(\"Alluxio ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep alluxio'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep alluxio\"}), null);\n     registerCommand(\"Spark ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep spark'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep spark\"}), null);\n     registerCommand(\"Yarn ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep yarn'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep yarn\"}), null);\n     registerCommand(\"Hdfs ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep hdfs'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep hdfs\"}), null);\n     registerCommand(\"Presto ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep presto'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep presto\"}), null);\n     registerCommand(\"env\",\n             new ShellCommand(new String[]{\"env\"}), null);\n     registerCommand(\"top\", new ShellCommand(new String[]{\"atop\", \"-b\", \"-n\", \"1\"}),\n             new ShellCommand(new String[]{\"top\", \"-b\", \"-n\", \"1\"}));\n     registerCommand(\"mount\", new ShellCommand(new String[]{\"mount\"}), null);\n     registerCommand(\"df\", new ShellCommand(new String[]{\"df\", \"-H\"}), null);\n-    registerCommand(\"ulimit\", new ShellCommand(new String[]{\"ulimit -Ha\"}), null);\n+    registerCommand(\"ulimit\", new ShellCommand(new String[]{\"ulimit\", \"-Ha\"}), null);\n     registerCommand(\"uname\", new ShellCommand(new String[]{\"uname\", \"-a\"}), null);\n     registerCommand(\"hostname\", new ShellCommand(new String[]{\"hostname\"}), null);\n     registerCommand(\"host ip\", new ShellCommand(new String[]{\"hostname\", \"-i\"}), null);\n     registerCommand(\"host fqdn\", new ShellCommand(new String[]{\"hostname\", \"-f\"}), null);\n     registerCommand(\"list Alluxio home\",\n-            new ShellCommand(new String[]{String.format(\"ls -al -R %s\",\n+            new ShellCommand(new String[]{String.format(\"ls\", \"-al -R %s\",\n                     mFsContext.getClusterConf().get(PropertyKey.HOME))}), null);\n-    registerCommand(\"dig\", new ShellCommand(new String[]{\"dig $(hostname -i)\"}), null);\n+    registerCommand(\"dig\", new ShellCommand(new String[]{\"dig\", \"$(hostname -i)\"}), null);\n     registerCommand(\"nslookup\", new ShellCommand(new String[]{\"nslookup\", \"$(hostname -i)\"}), null);\n-    // TODO(jiacheng): does this stop?\n-    registerCommand(\"dstat\", new ShellCommand(new String[]{\"dstat\", \"-cdgilmnprsty\"}), null);\n+    registerCommand(\"dstat\", new ShellCommand(\n+            new String[]{\"dstat\", \"-cdgilmnprsty\", \"1\", \"5\"}), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41c42834b916d6cf34d79bcbfdb31bcc39a8155"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTc3NA==", "bodyText": "I had to break into 2 lines due to checkstyle.\nFYI the extra 1 and 5 means each stat row is the stat in 1s, and in total 5 rows.", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r379709774", "createdAt": "2020-02-15T02:03:11Z", "author": {"login": "jiacheliu3"}, "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "diffHunk": "@@ -38,33 +38,33 @@ public CollectEnvCommand(FileSystemContext fsContext) {\n   @Override\n   protected void registerCommands() {\n     registerCommand(\"Alluxio ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep alluxio'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep alluxio\"}), null);\n     registerCommand(\"Spark ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep spark'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep spark\"}), null);\n     registerCommand(\"Yarn ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep yarn'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep yarn\"}), null);\n     registerCommand(\"Hdfs ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep hdfs'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep hdfs\"}), null);\n     registerCommand(\"Presto ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep presto'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep presto\"}), null);\n     registerCommand(\"env\",\n             new ShellCommand(new String[]{\"env\"}), null);\n     registerCommand(\"top\", new ShellCommand(new String[]{\"atop\", \"-b\", \"-n\", \"1\"}),\n             new ShellCommand(new String[]{\"top\", \"-b\", \"-n\", \"1\"}));\n     registerCommand(\"mount\", new ShellCommand(new String[]{\"mount\"}), null);\n     registerCommand(\"df\", new ShellCommand(new String[]{\"df\", \"-H\"}), null);\n-    registerCommand(\"ulimit\", new ShellCommand(new String[]{\"ulimit -Ha\"}), null);\n+    registerCommand(\"ulimit\", new ShellCommand(new String[]{\"ulimit\", \"-Ha\"}), null);\n     registerCommand(\"uname\", new ShellCommand(new String[]{\"uname\", \"-a\"}), null);\n     registerCommand(\"hostname\", new ShellCommand(new String[]{\"hostname\"}), null);\n     registerCommand(\"host ip\", new ShellCommand(new String[]{\"hostname\", \"-i\"}), null);\n     registerCommand(\"host fqdn\", new ShellCommand(new String[]{\"hostname\", \"-f\"}), null);\n     registerCommand(\"list Alluxio home\",\n-            new ShellCommand(new String[]{String.format(\"ls -al -R %s\",\n+            new ShellCommand(new String[]{String.format(\"ls\", \"-al -R %s\",\n                     mFsContext.getClusterConf().get(PropertyKey.HOME))}), null);\n-    registerCommand(\"dig\", new ShellCommand(new String[]{\"dig $(hostname -i)\"}), null);\n+    registerCommand(\"dig\", new ShellCommand(new String[]{\"dig\", \"$(hostname -i)\"}), null);\n     registerCommand(\"nslookup\", new ShellCommand(new String[]{\"nslookup\", \"$(hostname -i)\"}), null);\n-    // TODO(jiacheng): does this stop?\n-    registerCommand(\"dstat\", new ShellCommand(new String[]{\"dstat\", \"-cdgilmnprsty\"}), null);\n+    registerCommand(\"dstat\", new ShellCommand(\n+            new String[]{\"dstat\", \"-cdgilmnprsty\", \"1\", \"5\"}), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcwOTU3Mg=="}, "originalCommit": {"oid": "c41c42834b916d6cf34d79bcbfdb31bcc39a8155"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjYwODc2OnYy", "diffSide": "RIGHT", "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjoxNDo1NFrOFslBjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToyNjo1MVrOFswkxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4ODI3MQ==", "bodyText": "what's the logic for this split?", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r382288271", "createdAt": "2020-02-20T22:14:54Z", "author": {"login": "ns1123"}, "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "diffHunk": "@@ -38,33 +38,33 @@ public CollectEnvCommand(FileSystemContext fsContext) {\n   @Override\n   protected void registerCommands() {\n     registerCommand(\"Alluxio ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep alluxio'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep alluxio\"}), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1535f5d5c87bdccd8bed1c0da8a598a1a4b2687"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3NzUxMQ==", "bodyText": "Doing this just because bash -c seems to use the next string slice to look for. the executable. It doesn't seem to work with the whole command on my Mac somehow...", "url": "https://github.com/Alluxio/alluxio/pull/10918#discussion_r382477511", "createdAt": "2020-02-21T09:26:51Z", "author": {"login": "jiacheliu3"}, "path": "shell/src/main/java/alluxio/cli/bundler/command/CollectEnvCommand.java", "diffHunk": "@@ -38,33 +38,33 @@ public CollectEnvCommand(FileSystemContext fsContext) {\n   @Override\n   protected void registerCommands() {\n     registerCommand(\"Alluxio ps\",\n-            new ShellCommand(new String[]{\"bash\", \"-c\", \"'ps -ef | grep alluxio'\"}), null);\n+            new ShellCommand(new String[]{\"bash\", \"-c\", \"ps\", \"-ef\", \"| grep alluxio\"}), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI4ODI3MQ=="}, "originalCommit": {"oid": "b1535f5d5c87bdccd8bed1c0da8a598a1a4b2687"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2043, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}