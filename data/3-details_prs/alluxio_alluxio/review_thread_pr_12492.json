{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NjIwMDA5", "number": 12492, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNToxNTo1NVrOE4ACEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNToyMDoxOVrOE4AF7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTU2MjQyOnYy", "diffSide": "RIGHT", "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/generate-tarball.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNToxNTo1NVrOHxq3OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjoxNjo1MFrOHxr-OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NDUzNw==", "bodyText": "note that the key for ufsModules can be approximately derived from the name of the module. what do you think about simplifying the format of customUfsModuleFlag to <name>,<maven args>? for example, it would look like -custom-ufs-module \"hadoop-x.y,-pl underfs/hdfs -Pufs-hadoop-X -Dufs.hadoop.version=X.X.X\"\nafter checking that the string splits into 2 parts, set ufsModules[\"ufs-\"+customUfsModuleFlagArray[0]] = module{customUfsModuleFlagArray[0], true, customUfsModuleFlagArray[1]}", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521844537", "createdAt": "2020-11-12T05:15:55Z", "author": {"login": "Xenorith"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/generate-tarball.go", "diffHunk": "@@ -48,6 +48,16 @@ func Single(args []string) error {\n \tadditionalFlags(singleCmd)\n \tsingleCmd.Parse(args[2:]) // error handling by flag.ExitOnError\n \n+\tif customUfsModuleFlag != \"\" {\n+\t\tcustomUfsModuleFlagArray := strings.Split(customUfsModuleFlag, \",\")\n+\t\tif len(customUfsModuleFlagArray) == 3 {\n+\t\t\tufsModules[customUfsModuleFlagArray[0]] =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MjcxMw==", "bodyText": "Good suggestion, done", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521862713", "createdAt": "2020-11-12T06:16:50Z", "author": {"login": "maobaolong"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/generate-tarball.go", "diffHunk": "@@ -48,6 +48,16 @@ func Single(args []string) error {\n \tadditionalFlags(singleCmd)\n \tsingleCmd.Parse(args[2:]) // error handling by flag.ExitOnError\n \n+\tif customUfsModuleFlag != \"\" {\n+\t\tcustomUfsModuleFlagArray := strings.Split(customUfsModuleFlag, \",\")\n+\t\tif len(customUfsModuleFlagArray) == 3 {\n+\t\t\tufsModules[customUfsModuleFlagArray[0]] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NDUzNw=="}, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTU2NjQ4OnYy", "diffSide": "RIGHT", "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNToxNzo1NFrOHxq5hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjoxNDowNFrOHxr6vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTEyNg==", "bodyText": "please describe the format in addition to providing an example. if we go with my suggestion of providing a name and maven args, then i would set the description string to be:\n\"a comma-separated pair of the module name and its maven arguments. ex. hadoop-x.y,-pl underfs/hdfs -Pufs-hadoop-X -Dufs.hadoop.version=x.y.z\"", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521845126", "createdAt": "2020-11-12T05:17:54Z", "author": {"login": "Xenorith"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "diffHunk": "@@ -44,4 +45,5 @@ func additionalFlags(cmd *flag.FlagSet) {\n \tcmd.BoolVar(&debugFlag, \"debug\", false, \"whether to run this tool in debug mode to generate additional console output\")\n \tcmd.StringVar(&ufsModulesFlag, \"ufs-modules\", strings.Join(defaultModules(ufsModules), \",\"),\n \t\tfmt.Sprintf(\"a comma-separated list of ufs modules to compile into the distribution tarball(s). Specify 'all' to build all ufs modules. Supported ufs modules: [%v]\", strings.Join(validModules(ufsModules), \",\")))\n+\tcmd.StringVar(&customUfsModuleFlag, \"custom-ufs-module\", \"\", \"ufs-hadoop-x.x,hadoop-x.x,-pl underfs/hdfs -Pufs-hadoop-X -Dufs.hadoop.version=X.X.X\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MTgyMA==", "bodyText": "Thanks", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521861820", "createdAt": "2020-11-12T06:14:04Z", "author": {"login": "maobaolong"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "diffHunk": "@@ -44,4 +45,5 @@ func additionalFlags(cmd *flag.FlagSet) {\n \tcmd.BoolVar(&debugFlag, \"debug\", false, \"whether to run this tool in debug mode to generate additional console output\")\n \tcmd.StringVar(&ufsModulesFlag, \"ufs-modules\", strings.Join(defaultModules(ufsModules), \",\"),\n \t\tfmt.Sprintf(\"a comma-separated list of ufs modules to compile into the distribution tarball(s). Specify 'all' to build all ufs modules. Supported ufs modules: [%v]\", strings.Join(validModules(ufsModules), \",\")))\n+\tcmd.StringVar(&customUfsModuleFlag, \"custom-ufs-module\", \"\", \"ufs-hadoop-x.x,hadoop-x.x,-pl underfs/hdfs -Pufs-hadoop-X -Dufs.hadoop.version=X.X.X\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTEyNg=="}, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTU2OTc0OnYy", "diffSide": "RIGHT", "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNToxOToyM1rOHxq7VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjoxMjo0OFrOHxr5XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTU4OA==", "bodyText": "reorder alphabetically; put customUfsModuleFlag at the top", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521845588", "createdAt": "2020-11-12T05:19:23Z", "author": {"login": "Xenorith"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "diffHunk": "@@ -18,8 +18,9 @@ import (\n )\n \n var (\n-\tdebugFlag bool\n-\tufsModulesFlag string\n+\tdebugFlag           bool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MTQ2OA==", "bodyText": "OK", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521861468", "createdAt": "2020-11-12T06:12:48Z", "author": {"login": "maobaolong"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "diffHunk": "@@ -18,8 +18,9 @@ import (\n )\n \n var (\n-\tdebugFlag bool\n-\tufsModulesFlag string\n+\tdebugFlag           bool", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTU4OA=="}, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTU3MTY0OnYy", "diffSide": "RIGHT", "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNToyMDowMVrOHxq8WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjoxMjo1NFrOHxr5dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTg0OA==", "bodyText": "alphabetical order, move this line before defining the debug flag", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521845848", "createdAt": "2020-11-12T05:20:01Z", "author": {"login": "Xenorith"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "diffHunk": "@@ -44,4 +45,5 @@ func additionalFlags(cmd *flag.FlagSet) {\n \tcmd.BoolVar(&debugFlag, \"debug\", false, \"whether to run this tool in debug mode to generate additional console output\")\n \tcmd.StringVar(&ufsModulesFlag, \"ufs-modules\", strings.Join(defaultModules(ufsModules), \",\"),\n \t\tfmt.Sprintf(\"a comma-separated list of ufs modules to compile into the distribution tarball(s). Specify 'all' to build all ufs modules. Supported ufs modules: [%v]\", strings.Join(validModules(ufsModules), \",\")))\n+\tcmd.StringVar(&customUfsModuleFlag, \"custom-ufs-module\", \"\", \"ufs-hadoop-x.x,hadoop-x.x,-pl underfs/hdfs -Pufs-hadoop-X -Dufs.hadoop.version=X.X.X\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MTQ5Mw==", "bodyText": "Done", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521861493", "createdAt": "2020-11-12T06:12:54Z", "author": {"login": "maobaolong"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/root.go", "diffHunk": "@@ -44,4 +45,5 @@ func additionalFlags(cmd *flag.FlagSet) {\n \tcmd.BoolVar(&debugFlag, \"debug\", false, \"whether to run this tool in debug mode to generate additional console output\")\n \tcmd.StringVar(&ufsModulesFlag, \"ufs-modules\", strings.Join(defaultModules(ufsModules), \",\"),\n \t\tfmt.Sprintf(\"a comma-separated list of ufs modules to compile into the distribution tarball(s). Specify 'all' to build all ufs modules. Supported ufs modules: [%v]\", strings.Join(validModules(ufsModules), \",\")))\n+\tcmd.StringVar(&customUfsModuleFlag, \"custom-ufs-module\", \"\", \"ufs-hadoop-x.x,hadoop-x.x,-pl underfs/hdfs -Pufs-hadoop-X -Dufs.hadoop.version=X.X.X\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTg0OA=="}, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTU3MjMxOnYy", "diffSide": "RIGHT", "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/generate-tarball.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNToyMDoxOVrOHxq8rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNjoxMDozMFrOHxr2lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTkzMw==", "bodyText": "was this for debugging?", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521845933", "createdAt": "2020-11-12T05:20:19Z", "author": {"login": "Xenorith"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/generate-tarball.go", "diffHunk": "@@ -339,7 +349,7 @@ func generateTarball(hadoopClients []string, skipUI bool, skipHelm bool) error {\n \tchdir(cwd)\n \tos.Setenv(\"COPYFILE_DISABLE\", \"1\")\n \trun(\"creating the new distribution tarball\", \"tar\", \"-czvf\", tarball, dstDir)\n-\trun(\"removing the temporary repositories\", \"rm\", \"-rf\", srcPath, dstPath)\n+\trun(\"removing the temporary repositories\", \"ls\", \"-l\", srcPath, dstPath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg2MDc1OA==", "bodyText": "Yeah, exactly, will revert it.", "url": "https://github.com/Alluxio/alluxio/pull/12492#discussion_r521860758", "createdAt": "2020-11-12T06:10:30Z", "author": {"login": "maobaolong"}, "path": "dev/scripts/src/alluxio.org/build-distribution/cmd/generate-tarball.go", "diffHunk": "@@ -339,7 +349,7 @@ func generateTarball(hadoopClients []string, skipUI bool, skipHelm bool) error {\n \tchdir(cwd)\n \tos.Setenv(\"COPYFILE_DISABLE\", \"1\")\n \trun(\"creating the new distribution tarball\", \"tar\", \"-czvf\", tarball, dstDir)\n-\trun(\"removing the temporary repositories\", \"rm\", \"-rf\", srcPath, dstPath)\n+\trun(\"removing the temporary repositories\", \"ls\", \"-l\", srcPath, dstPath)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTg0NTkzMw=="}, "originalCommit": {"oid": "5a92db7f62ccafbb504d987adeec39a1bc3c164b"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1032, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}