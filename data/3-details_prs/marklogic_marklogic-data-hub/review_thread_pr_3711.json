{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NjA2MzIw", "number": 3711, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1NDozOVrODpPUNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo0MjoyNVrODpSfKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTY5MTQwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1NDozOVrOF4StJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxNjoxOVrOF4VTKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTA0Nw==", "bodyText": "Use !artifact.has(\"artifactName\") .\nAlso - would this really ever happen? And if it did, wouldn't we want to throw an error? Just logging it and moving on doesn't seem good, as something is really wrong if an artifact doesn't have a name.\nI think this code can assume that artifactName exists. If it doesn't, either the proceeding code will throw an error, or we can eagerly throw an exception. But it seems like the call to save the artifact in ML would have already failed too, right?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#discussion_r394571047", "createdAt": "2020-03-18T18:54:39Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "diffHunk": "@@ -70,16 +76,28 @@ public ObjectNode getArtifactSettings(String artifactType, String artifactName)\n     }\n \n     public ObjectNode updateArtifactSettings(String artifactType, String artifactName, JsonNode settings) {\n-        return (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        ObjectNode resp = (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        writeArtifactInProject(artifactType, (ObjectNode) settings, true);\n+        return resp;\n     }\n \n     protected ArtifactService getArtifactService() {\n         DatabaseClient dataServicesClient = hubConfig.newStagingClient(null);\n         return ArtifactService.on(dataServicesClient);\n     }\n \n-    protected void writeArtifactInProject(String artifactType, ObjectNode artifact) {\n-        Path fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact));\n+    protected void writeArtifactInProject(String artifactType, ObjectNode artifact, boolean isSetting) {\n+        Path fileLocation;\n+        if (!isSetting) {\n+            fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact), false);\n+        } else {\n+            if (artifact.get(\"artifactName\") == null ||  artifact.get(\"artifactName\").asText().length() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e7e3906dc0ef71b118b3aaf116e1168e6c71854"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDY2Nw==", "bodyText": "yes, it is why i just log it and stop here without throwing an exception. I can change !artifact.has(\"artifactName\")", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#discussion_r394574667", "createdAt": "2020-03-18T19:01:04Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "diffHunk": "@@ -70,16 +76,28 @@ public ObjectNode getArtifactSettings(String artifactType, String artifactName)\n     }\n \n     public ObjectNode updateArtifactSettings(String artifactType, String artifactName, JsonNode settings) {\n-        return (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        ObjectNode resp = (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        writeArtifactInProject(artifactType, (ObjectNode) settings, true);\n+        return resp;\n     }\n \n     protected ArtifactService getArtifactService() {\n         DatabaseClient dataServicesClient = hubConfig.newStagingClient(null);\n         return ArtifactService.on(dataServicesClient);\n     }\n \n-    protected void writeArtifactInProject(String artifactType, ObjectNode artifact) {\n-        Path fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact));\n+    protected void writeArtifactInProject(String artifactType, ObjectNode artifact, boolean isSetting) {\n+        Path fileLocation;\n+        if (!isSetting) {\n+            fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact), false);\n+        } else {\n+            if (artifact.get(\"artifactName\") == null ||  artifact.get(\"artifactName\").asText().length() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTA0Nw=="}, "originalCommit": {"oid": "1e7e3906dc0ef71b118b3aaf116e1168e6c71854"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwNzcxNQ==", "bodyText": "I'm thinking we do want an exception thrown though. It's a big deal if an artifact can't be written to the filesystem, right? A remote user will never see that log message.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#discussion_r394607715", "createdAt": "2020-03-18T20:04:47Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "diffHunk": "@@ -70,16 +76,28 @@ public ObjectNode getArtifactSettings(String artifactType, String artifactName)\n     }\n \n     public ObjectNode updateArtifactSettings(String artifactType, String artifactName, JsonNode settings) {\n-        return (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        ObjectNode resp = (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        writeArtifactInProject(artifactType, (ObjectNode) settings, true);\n+        return resp;\n     }\n \n     protected ArtifactService getArtifactService() {\n         DatabaseClient dataServicesClient = hubConfig.newStagingClient(null);\n         return ArtifactService.on(dataServicesClient);\n     }\n \n-    protected void writeArtifactInProject(String artifactType, ObjectNode artifact) {\n-        Path fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact));\n+    protected void writeArtifactInProject(String artifactType, ObjectNode artifact, boolean isSetting) {\n+        Path fileLocation;\n+        if (!isSetting) {\n+            fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact), false);\n+        } else {\n+            if (artifact.get(\"artifactName\") == null ||  artifact.get(\"artifactName\").asText().length() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTA0Nw=="}, "originalCommit": {"oid": "1e7e3906dc0ef71b118b3aaf116e1168e6c71854"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxMzU0NQ==", "bodyText": "@rjrudin it is a artifact setting info and should always have an artifactName associated. We double-check it (may be bad data imported) because we do not want to store settings without any artifact. I can throw an exception and I am not sure what exception we should throw.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#discussion_r394613545", "createdAt": "2020-03-18T20:16:19Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "diffHunk": "@@ -70,16 +76,28 @@ public ObjectNode getArtifactSettings(String artifactType, String artifactName)\n     }\n \n     public ObjectNode updateArtifactSettings(String artifactType, String artifactName, JsonNode settings) {\n-        return (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        ObjectNode resp = (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        writeArtifactInProject(artifactType, (ObjectNode) settings, true);\n+        return resp;\n     }\n \n     protected ArtifactService getArtifactService() {\n         DatabaseClient dataServicesClient = hubConfig.newStagingClient(null);\n         return ArtifactService.on(dataServicesClient);\n     }\n \n-    protected void writeArtifactInProject(String artifactType, ObjectNode artifact) {\n-        Path fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact));\n+    protected void writeArtifactInProject(String artifactType, ObjectNode artifact, boolean isSetting) {\n+        Path fileLocation;\n+        if (!isSetting) {\n+            fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact), false);\n+        } else {\n+            if (artifact.get(\"artifactName\") == null ||  artifact.get(\"artifactName\").asText().length() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTA0Nw=="}, "originalCommit": {"oid": "1e7e3906dc0ef71b118b3aaf116e1168e6c71854"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjIxMDk3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo0MjoyNVrOF4X6FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo0MjoyNVrOF4X6FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY1NjI3Nw==", "bodyText": "Since we assume that artifactName is not null, just let an exception propagate when \"asText()\" is called. If we want something nicer, we can check to see if \"artifactName\" doesn't exist and then do something like this:\nthrow new RuntimeException(\"Unable to write artifact to project folder; no artifactName found\")", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#discussion_r394656277", "createdAt": "2020-03-18T21:42:25Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "diffHunk": "@@ -70,16 +76,28 @@ public ObjectNode getArtifactSettings(String artifactType, String artifactName)\n     }\n \n     public ObjectNode updateArtifactSettings(String artifactType, String artifactName, JsonNode settings) {\n-        return (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        ObjectNode resp = (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        writeArtifactInProject(artifactType, (ObjectNode) settings, true);\n+        return resp;\n     }\n \n     protected ArtifactService getArtifactService() {\n         DatabaseClient dataServicesClient = hubConfig.newStagingClient(null);\n         return ArtifactService.on(dataServicesClient);\n     }\n \n-    protected void writeArtifactInProject(String artifactType, ObjectNode artifact) {\n-        Path fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact));\n+    protected void writeArtifactInProject(String artifactType, ObjectNode artifact, boolean isSetting) {\n+        Path fileLocation;\n+        if (!isSetting) {\n+            fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact), false);\n+        } else {\n+            if (!artifact.has(\"artifactName\") || artifact.get(\"artifactName\").asText().length() == 0) {\n+                logger.error(\"Failed to write to project folder due to invalid settings! artifactType: (%s), artifact settings: (%s).\", artifactType, artifact.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b9d7547b57077e3b20bdf1e86c13a40b8ec73f"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3486, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}