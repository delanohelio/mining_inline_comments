{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwOTExOTU5", "number": 4700, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNDoyNVrOEsb9kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyOToyMlrOEsuBFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMwOTI4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNDoyNVrOHfr1EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNDoyNVrOHfr1EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjAwMA==", "bodyText": "Let's drop the logger command above instead include the message in the first arg to RuntimeException.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r502986000", "createdAt": "2020-10-12T00:14:25Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -402,8 +403,9 @@ public void clearUserModules(List<String> resourceNamesToNotDelete) {\n             runInDatabase(query, hubConfig.getDbName(DatabaseKind.MODULES));\n         } catch (Exception e) {\n             logger.error(\"Failed to clear user modules, cause: \" + e.getMessage(), e);\n+            throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8081a44ecb039a4d979fc275a09cc063db847c9e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMwOTk2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNTowMFrOHfr1Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNTowMFrOHfr1Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjA3OQ==", "bodyText": "No need for a constructor", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r502986079", "createdAt": "2020-10-12T00:15:00Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+    ClearUserModulesTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8081a44ecb039a4d979fc275a09cc063db847c9e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMxMTcxOnYy", "diffSide": "RIGHT", "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/DataHubPlugin.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNjozMlrOHfr2PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNjozMlrOHfr2PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjMwMQ==", "bodyText": "Couple typos - do \"only leaving the modules that are loaded when Data Hub is installed.\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r502986301", "createdAt": "2020-10-12T00:16:32Z", "author": {"login": "rjrudin"}, "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/DataHubPlugin.groovy", "diffHunk": "@@ -139,6 +139,9 @@ class DataHubPlugin implements Plugin<Project> {\n                 \"Requires -Pconfirm=true to be set so this isn't accidentally executed.\")\n         project.task(\"hubClearUserArtifacts\", type: ClearUserArtifactsTask, group: developGroup,\n             description: \"Clears all user artifacts in the staging, final databases. Requires -Pconfirm=true to be set so this isn't accidentally executed.\")\n+        project.task(\"hubClearUserModules\", type: ClearUserModulesTask, group: developGroup,\n+            description: \"Clears user modules in the modules database, only leaving only the modules \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8081a44ecb039a4d979fc275a09cc063db847c9e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMxMjMzOnYy", "diffSide": "RIGHT", "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/task/ClearUserModulesTask.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNzoxN1rOHfr2jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxNzoxN1rOHfr2jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjM4Mw==", "bodyText": "I think technically, the user just needs the data-hub-module-writer role and the rest-writer privilege. But I think it's good to say data-hub-developer here because for modules, I don't think we want to advertise anything less than the data-hub-developer role.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r502986383", "createdAt": "2020-10-12T00:17:17Z", "author": {"login": "rjrudin"}, "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/task/ClearUserModulesTask.groovy", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.marklogic.gradle.task\n+\n+import com.marklogic.hub.impl.DataHubImpl\n+\n+class ClearUserModulesTask extends AbstractConfirmableHubTask {\n+\n+    @Override\n+    void executeIfConfirmed() {\n+        println \"Clearing user modules. This requires a user with at least 'data-hub-developer' role.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8081a44ecb039a4d979fc275a09cc063db847c9e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMxNTAwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoyMDoyMlrOHfr38g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoyMDoyMlrOHfr38g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjczOA==", "bodyText": "It looks like this is setting up a project with a user module of each type. Just make a new test-project instead - e.g. test-project/all-module-types. And then add a file for each module type. That avoids all of this custom code, you can just use installProjectInFolder.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r502986738", "createdAt": "2020-10-12T00:20:22Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+    ClearUserModulesTest() {\n+    }\n+\n+    @BeforeEach\n+    void setUp() throws IOException {\n+        Assumptions.assumeTrue(this.isVersionCompatibleWith520Roles());\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8081a44ecb039a4d979fc275a09cc063db847c9e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMxNjUyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoyMjoxOVrOHfr4uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoyMjoxOVrOHfr4uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjkzOQ==", "bodyText": "I think these assertions to verify that each user module type was actually loaded should be part of the setup. Though since there's only one test method, I wouldn't bother with a BeforeEach method. Just make a private method called \"installProjectWithEachTypeOfModule\" - that documents what's going on here too. That method will use installProjectInFolder and will then verify that each user module exists.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r502986939", "createdAt": "2020-10-12T00:22:19Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+    ClearUserModulesTest() {\n+    }\n+\n+    @BeforeEach\n+    void setUp() throws IOException {\n+        Assumptions.assumeTrue(this.isVersionCompatibleWith520Roles());\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        Path servicesFile = this.getHubProject().getModulesDir().resolve(\"services\");\n+        servicesFile.toFile().mkdirs();\n+        FileUtils.copyInputStreamToFile(classLoader.getResourceAsStream(\"ml-modules/services/mlBatches.sjs\"), servicesFile.resolve(\"myResourceExtension.sjs\").toFile());\n+        Path optionsFile = this.getHubProject().getModulesDir().resolve(\"options\");\n+        optionsFile.toFile().mkdirs();\n+        FileUtils.copyInputStreamToFile(classLoader.getResourceAsStream(\"ml-modules-staging/options/default.xml\"), optionsFile.resolve(\"myOptions.xml\").toFile());\n+        Path transformsFile = this.getHubProject().getModulesDir().resolve(\"transforms\");\n+        transformsFile.toFile().mkdirs();\n+        FileUtils.copyInputStreamToFile(classLoader.getResourceAsStream(\"ml-modules/transforms/hubEntitySearchTransform.sjs\"), transformsFile.resolve(\"myTransform.sjs\").toFile());\n+        this.installProjectInFolder(\"flow-runner-test\");\n+    }\n+\n+    @Test\n+    void testClearUserModules() {\n+        ServerConfigurationManager configMgr = this.runAsDataHubDeveloper().newFinalClient().newServerConfigManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8081a44ecb039a4d979fc275a09cc063db847c9e"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMyMDI0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoyNjowNVrOHfr6jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoyNjowNVrOHfr6jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NzQwNg==", "bodyText": "I think that before you install the project with user modules, you need to get counts of all docs in the modules database, all docs in hub-core-module, and then counts of each REST extension type that DHF installs - services, transforms, and options.\nThen you install the user modules project, and you verify that the counts are now increased by the appropriate amount.\nThen you clear user modules, and you verify the counts are back to what they used to be.\nTo simplify all of this, I recommend creating a class - ModuleCounts - that has 5 fields, one for each count. Then make a private method that returns a ModuleCounts, doing all the queries necessary to get the correct amount.\nI know that's a lot to test, but it's much better to automate this, this would be a real pain to test manually. And because of REST extensions resulting in multiple modules, we really need to verify individual counts of each extension type.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r502987406", "createdAt": "2020-10-12T00:26:05Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+    ClearUserModulesTest() {\n+    }\n+\n+    @BeforeEach\n+    void setUp() throws IOException {\n+        Assumptions.assumeTrue(this.isVersionCompatibleWith520Roles());\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        Path servicesFile = this.getHubProject().getModulesDir().resolve(\"services\");\n+        servicesFile.toFile().mkdirs();\n+        FileUtils.copyInputStreamToFile(classLoader.getResourceAsStream(\"ml-modules/services/mlBatches.sjs\"), servicesFile.resolve(\"myResourceExtension.sjs\").toFile());\n+        Path optionsFile = this.getHubProject().getModulesDir().resolve(\"options\");\n+        optionsFile.toFile().mkdirs();\n+        FileUtils.copyInputStreamToFile(classLoader.getResourceAsStream(\"ml-modules-staging/options/default.xml\"), optionsFile.resolve(\"myOptions.xml\").toFile());\n+        Path transformsFile = this.getHubProject().getModulesDir().resolve(\"transforms\");\n+        transformsFile.toFile().mkdirs();\n+        FileUtils.copyInputStreamToFile(classLoader.getResourceAsStream(\"ml-modules/transforms/hubEntitySearchTransform.sjs\"), transformsFile.resolve(\"myTransform.sjs\").toFile());\n+        this.installProjectInFolder(\"flow-runner-test\");\n+    }\n+\n+    @Test\n+    void testClearUserModules() {\n+        ServerConfigurationManager configMgr = this.runAsDataHubDeveloper().newFinalClient().newServerConfigManager();\n+        QueryOptionsManager finalOptionsManager = configMgr.newQueryOptionsManager();\n+        Map<String, String> optionsMap = ((QueryOptionsListHandle)finalOptionsManager.optionsList(new QueryOptionsListHandle())).getValuesMap();\n+        Assertions.assertEquals(2, optionsMap.keySet().size());\n+        Assertions.assertTrue(optionsMap.containsKey(\"myOptions\"));\n+        String query = \"cts.estimate(cts.collectionQuery('hub-core-module'))\";\n+        int hubCoreModuleCount = Integer.parseInt((String)this.getHubClient().getModulesClient().newServerEval().javascript(query).evalAs(String.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8081a44ecb039a4d979fc275a09cc063db847c9e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzIyNDUwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoxNDo1N1rOHgG7kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoxNDo1N1rOHgG7kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzMDAzMw==", "bodyText": "Let's keep the message though that was being logged, but just put it in the exception - e.g. throw new RuntimeException(\"Failed to clear user modules, cause: \" + e.getMessage(), e).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503430033", "createdAt": "2020-10-12T17:14:57Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -401,9 +402,9 @@ public void clearUserModules(List<String> resourceNamesToNotDelete) {\n                     \"] ! xdmp:document-delete(.)\\n\";\n             runInDatabase(query, hubConfig.getDbName(DatabaseKind.MODULES));\n         } catch (Exception e) {\n-            logger.error(\"Failed to clear user modules, cause: \" + e.getMessage(), e);\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzI0NDk3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyMTo1NFrOHgHIBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyMTo1NFrOHgHIBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzMzIyMA==", "bodyText": "This is fine, but for future tests, check out the Intellij Tips Wiki page I just wrote that explains how to auto-import static functions. The test is easier to read if \"Assertions.\" isn't repeated in many places.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503433220", "createdAt": "2020-10-12T17:21:54Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+\n+    @Test\n+    void testClearUserModules() {\n+        new DataHubImpl(runAsDataHubDeveloper()).clearUserModules();\n+        Assumptions.assumeTrue(isVersionCompatibleWith520Roles());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzI1MTY4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyNDoxMVrOHgHMEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyNDoxMVrOHgHMEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzNDI1OQ==", "bodyText": "I don't think we want precise counts here, because these assertions will break whenever a REST extension is added/removed (most likely removed). I think all we care about is capturing the initial counts. No need to assert on the expected values.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503434259", "createdAt": "2020-10-12T17:24:11Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+\n+    @Test\n+    void testClearUserModules() {\n+        new DataHubImpl(runAsDataHubDeveloper()).clearUserModules();\n+        Assumptions.assumeTrue(isVersionCompatibleWith520Roles());\n+        ModuleCounts beforeClearingModules = new ModuleCounts();\n+        beforeClearingModules.setModuleCounts();\n+\n+        Assertions.assertEquals(1, beforeClearingModules.optionsCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzI1MzExOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyNDo0M1rOHgHNBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyNDo0M1rOHgHNBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzNDUwMg==", "bodyText": "These assertions should then be relative to the before counts - e.g. optionsCount = before + 1.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503434502", "createdAt": "2020-10-12T17:24:43Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+\n+    @Test\n+    void testClearUserModules() {\n+        new DataHubImpl(runAsDataHubDeveloper()).clearUserModules();\n+        Assumptions.assumeTrue(isVersionCompatibleWith520Roles());\n+        ModuleCounts beforeClearingModules = new ModuleCounts();\n+        beforeClearingModules.setModuleCounts();\n+\n+        Assertions.assertEquals(1, beforeClearingModules.optionsCount);\n+        Assertions.assertEquals(12, beforeClearingModules.transformsCount);\n+        Assertions.assertEquals(23, beforeClearingModules.resourceExtensionCount);\n+\n+        installProjectWithEachTypeOfModule();\n+\n+        try {\n+            new DataHubImpl(runAsDataHubOperator()).clearUserModules();\n+            Assertions.fail(\"'data-hub-operator' should not be able delete user modules\");\n+        } catch (RuntimeException e) {\n+            Assertions.assertTrue(e.getMessage().contains(\"User is not allowed to delete /config/query\"));\n+            logger.info(\"'data-hub-operator' cannot delete user modules\");\n+        }\n+\n+        ModuleCounts afterClearingModulesAsOperator = new ModuleCounts();\n+        afterClearingModulesAsOperator.setModuleCounts();\n+\n+        Assertions.assertEquals(2, afterClearingModulesAsOperator.optionsCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzI2MjQ0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyNzo0NlrOHgHSjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyNzo0NlrOHgHSjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzNTkxOA==", "bodyText": "For assertTrue/assertFalse, it's often helpful to have an assertion message that shows the actual values; otherwise JUnit just says that we didn't get true back, which makes debugging more difficult. We can remove the comment in favor of an assertion message too - e.g. \"Expected total module count to be same or less than the before count, as some custom modules may have existed from other tests; before count: \" + beforeCount + \"; after count: \" + afterCount\nGenerally, assertion messages are better at explaining things than comments, and they're more likely to stay in sync with the code.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503435918", "createdAt": "2020-10-12T17:27:46Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserModulesTest.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.client.admin.QueryOptionsManager;\n+import com.marklogic.client.admin.ResourceExtensionsManager;\n+import com.marklogic.client.admin.ServerConfigurationManager;\n+import com.marklogic.client.admin.TransformExtensionsManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.client.io.QueryOptionsListHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.Test;\n+\n+class ClearUserModulesTest extends AbstractHubCoreTest {\n+\n+    @Test\n+    void testClearUserModules() {\n+        new DataHubImpl(runAsDataHubDeveloper()).clearUserModules();\n+        Assumptions.assumeTrue(isVersionCompatibleWith520Roles());\n+        ModuleCounts beforeClearingModules = new ModuleCounts();\n+        beforeClearingModules.setModuleCounts();\n+\n+        Assertions.assertEquals(1, beforeClearingModules.optionsCount);\n+        Assertions.assertEquals(12, beforeClearingModules.transformsCount);\n+        Assertions.assertEquals(23, beforeClearingModules.resourceExtensionCount);\n+\n+        installProjectWithEachTypeOfModule();\n+\n+        try {\n+            new DataHubImpl(runAsDataHubOperator()).clearUserModules();\n+            Assertions.fail(\"'data-hub-operator' should not be able delete user modules\");\n+        } catch (RuntimeException e) {\n+            Assertions.assertTrue(e.getMessage().contains(\"User is not allowed to delete /config/query\"));\n+            logger.info(\"'data-hub-operator' cannot delete user modules\");\n+        }\n+\n+        ModuleCounts afterClearingModulesAsOperator = new ModuleCounts();\n+        afterClearingModulesAsOperator.setModuleCounts();\n+\n+        Assertions.assertEquals(2, afterClearingModulesAsOperator.optionsCount);\n+        Assertions.assertEquals(13, afterClearingModulesAsOperator.transformsCount);\n+        Assertions.assertEquals(24, afterClearingModulesAsOperator.resourceExtensionCount);\n+        Assertions.assertEquals(beforeClearingModules.hubCoreModuleCount, afterClearingModulesAsOperator.hubCoreModuleCount);\n+        checkIfCustomModulesArePresent();\n+\n+        new DataHubImpl(runAsDataHubDeveloper()).clearUserModules();\n+\n+        ModuleCounts afterClearingModulesAsDeveloper = new ModuleCounts();\n+        afterClearingModulesAsDeveloper.setModuleCounts();\n+\n+        Assertions.assertEquals(beforeClearingModules.optionsCount, afterClearingModulesAsDeveloper.optionsCount);\n+        Assertions.assertEquals(beforeClearingModules.transformsCount, afterClearingModulesAsDeveloper.transformsCount);\n+        Assertions.assertEquals(beforeClearingModules.resourceExtensionCount, afterClearingModulesAsDeveloper.resourceExtensionCount);\n+        Assertions.assertEquals(beforeClearingModules.hubCoreModuleCount, afterClearingModulesAsDeveloper.hubCoreModuleCount);\n+        //Before test starts , additional custom modules may be present\n+        Assertions.assertTrue(afterClearingModulesAsDeveloper.totalModulesCount <= beforeClearingModules.totalModulesCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzI2NDY4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/resources/test-projects/all-module-types/modules/options/myOptions.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyODozMVrOHgHT4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyODozMVrOHgHT4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzNjI1OA==", "bodyText": "Just make this an empty options element, we don't need anything further in it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503436258", "createdAt": "2020-10-12T17:28:31Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/resources/test-projects/all-module-types/modules/options/myOptions.xml", "diffHunk": "@@ -0,0 +1,15 @@\n+<options xmlns=\"http://marklogic.com/appservices/search\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzI2NjI0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/resources/test-projects/all-module-types/modules/services/myResourceExtension.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyOTowMlrOHgHU0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyOTowMlrOHgHU0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzNjQ5OA==", "bodyText": "Same principle as above - we don't need anything real in here, just have a \"get\" function that does nothing. Otherwise, the reader may think that what's in here matters, but it doesn't.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503436498", "createdAt": "2020-10-12T17:29:02Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/resources/test-projects/all-module-types/modules/services/myResourceExtension.sjs", "diffHunk": "@@ -0,0 +1,53 @@\n+/**\n+  Copyright (c) 2020 MarkLogic Corporation\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+*/\n+'use strict';\n+const DataHub = require(\"/data-hub/5/datahub.sjs\");\n+const datahub = new DataHub();\n+\n+\n+function get(context, params) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzI2NzQzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/resources/test-projects/all-module-types/modules/transforms/myTransform.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyOToyMlrOHgHVgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNzoyOToyMlrOHgHVgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQzNjY3NQ==", "bodyText": "Same thing, just return content, nothing further", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4700#discussion_r503436675", "createdAt": "2020-10-12T17:29:22Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/resources/test-projects/all-module-types/modules/transforms/myTransform.sjs", "diffHunk": "@@ -0,0 +1,34 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+\n+const ds = require(\"/data-hub/5/data-services/ds-utils.sjs\");\n+const entitySearchLib = require(\"/data-hub/5/entities/entity-search-lib.sjs\");\n+\n+// Expects JSON content\n+function transform(context, params, content) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a66735ed290d2d569e245bf16aaf1ba7df3aea1"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3298, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}