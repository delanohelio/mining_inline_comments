{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0Mjk2NDMx", "number": 4810, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjoyNzoyNFrOE0kwCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjoyODoxOVrOE0kw6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTYzNTI5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/flow/getFlowWithLatestJobInfo.sjs", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjoyNzoyNFrOHsYBKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0Mjo1N1rOHs0xaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MjkwNw==", "bodyText": "Oof this is brittle - a word search on an unstructured string. Also, the step number can change over time - e.g. a user can move steps around in the flow. I'm really reluctant to base anything on step number for this reason.\nIn fact, this seems like it could break for steps that aren't in a flow twice. For example, let's say my ABC mapping step is step 2, and I run it. Then I change my flow and make it step 3. Then I run this query - I no longer get anything back for my ABC step. Right?\nBecause of the rarity of a step being in a flow twice (we shouldn't prohibit it, because we have no reason to do that, and there may be a valid reason to do it), I think we should just take the latest document and then say - see if there's a stepRunResponse with the same stepNumber and stepName as the given step. If so, use it. If not, then check for a stepRunResponse with the same stepName. If there's 1 or more, use the latest one.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4810#discussion_r516292907", "createdAt": "2020-11-02T22:27:24Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/flow/getFlowWithLatestJobInfo.sjs", "diffHunk": "@@ -30,13 +30,19 @@ fn.head(datahub.hubUtils.queryLatest(function() {\n     jobQueries.push(cts.collectionQuery('Job'));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"flow\",flowWithStepDetails.name));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"stepName\",step.stepName));\n+    //A flow may contain same step more then once. 'status' in step response always contains step number", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5eaeb1d92ce83d4b04cb6443da0f19248e918ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0NTgyNw==", "bodyText": "So, in HC where we can run only one step at a time, it essentially means that if a step occurs twice in a flow, the latest job details for both the steps will be the same ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4810#discussion_r516345827", "createdAt": "2020-11-02T23:58:41Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/flow/getFlowWithLatestJobInfo.sjs", "diffHunk": "@@ -30,13 +30,19 @@ fn.head(datahub.hubUtils.queryLatest(function() {\n     jobQueries.push(cts.collectionQuery('Job'));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"flow\",flowWithStepDetails.name));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"stepName\",step.stepName));\n+    //A flow may contain same step more then once. 'status' in step response always contains step number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MjkwNw=="}, "originalCommit": {"oid": "b5eaeb1d92ce83d4b04cb6443da0f19248e918ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NzUyMA==", "bodyText": "This is a tough call, as stepNumber is effectively the unique ID for a step within a flow - except that the stepNumber can change, meaning that it's not a very good ID.\nGiven that the previous code was already depending on stepNumber to find the given step, the simplest thing is to keep doing that. The scenario I mentioned above is already a problem with the current approach - i.e. that if the stepNumber changes for a step, then the latest job info will not be found. So constraining the query on the stepNumber being in status isn't any different.\nWe still need tests for at least these scenarios that I can think of:\n\nA single job document that has stepResponses for both occurrences of a step in a flow\nTwo job documents, one for each occurrence of the step in a flow (which would be produced by HC)", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4810#discussion_r516647520", "createdAt": "2020-11-03T12:59:18Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/flow/getFlowWithLatestJobInfo.sjs", "diffHunk": "@@ -30,13 +30,19 @@ fn.head(datahub.hubUtils.queryLatest(function() {\n     jobQueries.push(cts.collectionQuery('Job'));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"flow\",flowWithStepDetails.name));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"stepName\",step.stepName));\n+    //A flow may contain same step more then once. 'status' in step response always contains step number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MjkwNw=="}, "originalCommit": {"oid": "b5eaeb1d92ce83d4b04cb6443da0f19248e918ed"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NDAwOQ==", "bodyText": "@rjrudin\nJust to be clear, the current implementation(changes in getFlowWithLatestJobInfo.sjs) in the PR is good. You want a couple of tests to be added. Is that correct ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4810#discussion_r516764009", "createdAt": "2020-11-03T15:42:57Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/flow/getFlowWithLatestJobInfo.sjs", "diffHunk": "@@ -30,13 +30,19 @@ fn.head(datahub.hubUtils.queryLatest(function() {\n     jobQueries.push(cts.collectionQuery('Job'));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"flow\",flowWithStepDetails.name));\n     jobQueries.push(cts.jsonPropertyValueQuery(\"stepName\",step.stepName));\n+    //A flow may contain same step more then once. 'status' in step response always contains step number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MjkwNw=="}, "originalCommit": {"oid": "b5eaeb1d92ce83d4b04cb6443da0f19248e918ed"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTYzNzUyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/flow/test-data/jobs/job3.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjoyODoxOVrOHsYCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOTo0NDo1MVrOHs99DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MzI5OA==", "bodyText": "For testing, don't you need a job document that has at least two step responses - one for each occurrence of the step in the flow?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4810#discussion_r516293298", "createdAt": "2020-11-02T22:28:19Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/flow/test-data/jobs/job3.json", "diffHunk": "@@ -0,0 +1,32 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5eaeb1d92ce83d4b04cb6443da0f19248e918ed"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc3Nzg1OA==", "bodyText": "Right, I think we need those two scenarios above addressed. But depending on the stepNumber - while brittle - seems reasonable for now, since it's what DHF has been doing.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4810#discussion_r516777858", "createdAt": "2020-11-03T16:01:22Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/flow/test-data/jobs/job3.json", "diffHunk": "@@ -0,0 +1,32 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MzI5OA=="}, "originalCommit": {"oid": "b5eaeb1d92ce83d4b04cb6443da0f19248e918ed"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxNDQ0NQ==", "bodyText": "job3.json and job4.json addresses scenario 1 and job5.json scenario2.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4810#discussion_r516914445", "createdAt": "2020-11-03T19:44:51Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/flow/test-data/jobs/job3.json", "diffHunk": "@@ -0,0 +1,32 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5MzI5OA=="}, "originalCommit": {"oid": "b5eaeb1d92ce83d4b04cb6443da0f19248e918ed"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3062, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}