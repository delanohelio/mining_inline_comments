{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MzMzNDky", "number": 4118, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNTo1MDoxNFrOEHTbnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNTo1MDoxNFrOEHTbnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDkzODUyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNTo1MDoxNFrOGmnJYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQyMzoyMToyNVrOGmoxPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MDQ0OA==", "bodyText": "Is there not a way to add a test for this change?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4118#discussion_r443140448", "createdAt": "2020-06-20T15:50:14Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.tsx", "diffHunk": "@@ -620,12 +620,12 @@ const SourceToEntityMap = (props) => {\n                     autoSize={{ minRows: 1 }}\n                     disabled={!props.canReadWrite}></TextArea>&nbsp;&nbsp;\n                 <span>\n-                    <Dropdown overlay={sourceSearchMenu} trigger={['click']} >\n+                    <Dropdown overlay={sourceSearchMenu} trigger={['click']} disabled={!props.canReadWrite}>\n                         <i  id=\"listIcon\"><FontAwesomeIcon icon={faList} size=\"lg\"  data-testid={row.name.split('/').pop()+'-listIcon'}  className={styles.listIcon} onClick={(e) => handleSourceList(row)}/></i>\n                     </Dropdown>\n                 </span>\n                 &nbsp;&nbsp;\n-                <span ><Dropdown overlay={menu} trigger={['click']}><Button id=\"functionIcon\" data-testid={`${row.name.split('/').pop()}-${row.key}-functionIcon`} className={styles.functionIcon} size=\"small\" onClick={(e) => handleFunctionsList(row.name)}>fx</Button></Dropdown></span></div>\n+                <span ><Dropdown overlay={menu} trigger={['click']} disabled={!props.canReadWrite}><Button id=\"functionIcon\" data-testid={`${row.name.split('/').pop()}-${row.key}-functionIcon`} className={styles.functionIcon} size=\"small\" onClick={(e) => handleFunctionsList(row.name)}>fx</Button></Dropdown></span></div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e5a5217e09f24d8a313a626e9119f869d48c2a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0OTAxOQ==", "bodyText": "I am not sure but I will try to write test for it and submit PR again", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4118#discussion_r443149019", "createdAt": "2020-06-20T18:05:43Z", "author": {"login": "AkshayBajajML"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.tsx", "diffHunk": "@@ -620,12 +620,12 @@ const SourceToEntityMap = (props) => {\n                     autoSize={{ minRows: 1 }}\n                     disabled={!props.canReadWrite}></TextArea>&nbsp;&nbsp;\n                 <span>\n-                    <Dropdown overlay={sourceSearchMenu} trigger={['click']} >\n+                    <Dropdown overlay={sourceSearchMenu} trigger={['click']} disabled={!props.canReadWrite}>\n                         <i  id=\"listIcon\"><FontAwesomeIcon icon={faList} size=\"lg\"  data-testid={row.name.split('/').pop()+'-listIcon'}  className={styles.listIcon} onClick={(e) => handleSourceList(row)}/></i>\n                     </Dropdown>\n                 </span>\n                 &nbsp;&nbsp;\n-                <span ><Dropdown overlay={menu} trigger={['click']}><Button id=\"functionIcon\" data-testid={`${row.name.split('/').pop()}-${row.key}-functionIcon`} className={styles.functionIcon} size=\"small\" onClick={(e) => handleFunctionsList(row.name)}>fx</Button></Dropdown></span></div>\n+                <span ><Dropdown overlay={menu} trigger={['click']} disabled={!props.canReadWrite}><Button id=\"functionIcon\" data-testid={`${row.name.split('/').pop()}-${row.key}-functionIcon`} className={styles.functionIcon} size=\"small\" onClick={(e) => handleFunctionsList(row.name)}>fx</Button></Dropdown></span></div>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MDQ0OA=="}, "originalCommit": {"oid": "04e5a5217e09f24d8a313a626e9119f869d48c2a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE2NzAzNw==", "bodyText": "In the test 'Verify evaluation of valid expression for mapping reader user' in source-to-entity-map.test you can add couple of assertions for functionIcon and listIcon that they are disabled.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4118#discussion_r443167037", "createdAt": "2020-06-20T23:21:25Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.tsx", "diffHunk": "@@ -620,12 +620,12 @@ const SourceToEntityMap = (props) => {\n                     autoSize={{ minRows: 1 }}\n                     disabled={!props.canReadWrite}></TextArea>&nbsp;&nbsp;\n                 <span>\n-                    <Dropdown overlay={sourceSearchMenu} trigger={['click']} >\n+                    <Dropdown overlay={sourceSearchMenu} trigger={['click']} disabled={!props.canReadWrite}>\n                         <i  id=\"listIcon\"><FontAwesomeIcon icon={faList} size=\"lg\"  data-testid={row.name.split('/').pop()+'-listIcon'}  className={styles.listIcon} onClick={(e) => handleSourceList(row)}/></i>\n                     </Dropdown>\n                 </span>\n                 &nbsp;&nbsp;\n-                <span ><Dropdown overlay={menu} trigger={['click']}><Button id=\"functionIcon\" data-testid={`${row.name.split('/').pop()}-${row.key}-functionIcon`} className={styles.functionIcon} size=\"small\" onClick={(e) => handleFunctionsList(row.name)}>fx</Button></Dropdown></span></div>\n+                <span ><Dropdown overlay={menu} trigger={['click']} disabled={!props.canReadWrite}><Button id=\"functionIcon\" data-testid={`${row.name.split('/').pop()}-${row.key}-functionIcon`} className={styles.functionIcon} size=\"small\" onClick={(e) => handleFunctionsList(row.name)}>fx</Button></Dropdown></span></div>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0MDQ0OA=="}, "originalCommit": {"oid": "04e5a5217e09f24d8a313a626e9119f869d48c2a"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3917, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}