{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODQ5NTk0", "number": 3674, "title": "DHFPROD-3922: Enable step running in Bench/Flows view", "bodyText": "Includes confirmation dialogs and status spinner.\nScreencast: https://drive.google.com/file/d/1ixG2zw1R_FO3eSa8o-owNRlvWx2wjR5o/view\nThis PR replaces: #3652", "createdAt": "2020-03-09T22:32:47Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674", "merged": true, "mergeCommit": {"oid": "0f1ccef8b028f33088aa10c1532e72d8d8223ab6"}, "closed": true, "closedAt": "2020-03-13T00:11:27Z", "author": {"login": "wooldridge"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMHMB_gFqTM3MTU5Njk1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNEzktgFqTM3Mzk3MzY2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTk2OTUx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-371596951", "createdAt": "2020-03-09T23:40:31Z", "commit": {"oid": "e9e9ba83361a4235a03c1b7fb49bde8e661bada0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMzo0MDozMlrOFz86Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMzo1Mjo1NlrOFz9ICA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAxOTY2Ng==", "bodyText": "Should this be in a test file? Is this a stub for testing. Maybe some comments will help make it clear", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#discussion_r390019666", "createdAt": "2020-03-09T23:40:32Z", "author": {"login": "bsrikan"}, "path": "one-ui/src/test/java/com/marklogic/hub/curation/controllers/FlowControllerTest.java", "diffHunk": "@@ -163,13 +188,49 @@ void getFlow() throws IOException {\n             //DELETE flow\n             controller.deleteFlow(\"testFlow\");\n             try{\n-                controller.getFlow(\"testFlow\");\n-                Assertions.fail();\n+                Flow flow = (Flow) controller.getFlow(\"testFlow\").getBody();\n+                Assertions.assertNull(flow, \"Flow shouldn't exist anymore\");\n             }\n             catch (Exception e) {\n                 logger.info(\"Exception is expected as the flow being fetched has been deleted\");\n             }\n             loadDataController.deleteArtifact(\"validArtifact\");\n         }\n     }\n+\n+    @Test\n+    void runFlow() throws IOException {\n+        ObjectMapper mapper = new ObjectMapper();\n+        String hubProjectDir = hubConfig.getProjectDir();\n+        FileUtils.copyDirectory(testHelper.getResourceFile(\"input\"), Paths.get(hubProjectDir,\"input\").toFile());\n+        controller.createFlow(flowString);\n+        //PUT step\n+        controller.createStep(\"testFlow\", 1, stepString).getBody();\n+        //link artifact to step options\n+        loadDataController.updateArtifact(\"validArtifact\", validLoadDataConfig);\n+        controller.linkArtifact(\"testFlow\", \"e2e-json-ingestion\", \"loadData\", \"validArtifact\");\n+\n+        RunFlowResponse resp = (RunFlowResponse) controller.runFlow(\"testFlow\", Collections.singletonList(\"e2e-json-ingestion\"));\n+\n+        Assertions.assertEquals(\"testFlow\", resp.getFlowName(), \"Run flow response has correct flow name\");\n+        controller.getLastFlowRunner().awaitCompletion();\n+        JsonNode jobsDoc = jobsController.getJob(resp.getJobId());\n+        String jobStatus = jobsDoc.get(\"jobStatus\").asText();\n+        Assertions.assertEquals(\"finished\", jobStatus, \"Job status should be 'finished' once threads complete\");\n+    }\n+\n+    @Controller\n+    @RequestMapping(\"/api/test/flows\")\n+    static class FlowTestController extends FlowController {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9e9ba83361a4235a03c1b7fb49bde8e661bada0"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyMTAzOQ==", "bodyText": "Do we have tests for this controller?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#discussion_r390021039", "createdAt": "2020-03-09T23:45:36Z", "author": {"login": "bsrikan"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/controllers/JobsController.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Copyright 2012-2019 MarkLogic Corporation\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+package com.marklogic.hub.curation.controllers;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.marklogic.hub.FlowManager;\n+import com.marklogic.hub.impl.FlowManagerImpl;\n+import com.marklogic.hub.job.JobDocManager;\n+import com.marklogic.hub.oneui.managers.SearchableManager;\n+import com.marklogic.hub.oneui.models.HubConfigSession;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Controller\n+@RequestMapping(value=\"/api/jobs\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9e9ba83361a4235a03c1b7fb49bde8e661bada0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyMTc3Mw==", "bodyText": "Do we have tests for these methods?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#discussion_r390021773", "createdAt": "2020-03-09T23:48:06Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/job/JobDocManager.java", "diffHunk": "@@ -99,6 +100,20 @@ public JsonNode getJobDocumentsForFlows(List<String> flowNames) {\n         return getJobDocuments(params);\n     }\n \n+    public JsonNode getLatestJobDocumentForFlow(String flowName) {\n+        RequestParameters params = new RequestParameters();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9e9ba83361a4235a03c1b7fb49bde8e661bada0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyMjI0OA==", "bodyText": "Do we have a test in place for all these *Runner to verify flowName in the job doc.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#discussion_r390022248", "createdAt": "2020-03-09T23:49:38Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/WriteStepRunner.java", "diffHunk": "@@ -654,7 +654,7 @@ private RunStepResponse runIngester(RunStepResponse runStepResponse, Collection<\n             }\n             JsonNode jobDoc = null;\n             try {\n-                jobDoc = jobDocManager.postJobs(jobId, stepStatus, step, stepStatus.equalsIgnoreCase(JobStatus.COMPLETED_PREFIX + step) ? step : null, runStepResponse);\n+                jobDoc = jobDocManager.postJobs(jobId, stepStatus, flow.getName(), step, stepStatus.equalsIgnoreCase(JobStatus.COMPLETED_PREFIX + step) ? step : null, runStepResponse);\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9e9ba83361a4235a03c1b7fb49bde8e661bada0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyMzE3Ng==", "bodyText": "Seems like a lot of refactoring. Do we have tests in place.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#discussion_r390023176", "createdAt": "2020-03-09T23:52:56Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/jobs.sjs", "diffHunk": "@@ -298,65 +297,64 @@ module.exports.updateJob = module.amp(\n   function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n     let jobDoc = datahub.jobs.getJobDocWithId(jobId);\n     let resp = null;\n-    if(jobDoc) {\n-     jobDoc.job.jobStatus = status;\n-     //update job status at the end of flow run\n-     if(status === \"finished\"|| status === \"finished_with_errors\" || status === \"failed\"|| status === \"canceled\"|| status === \"stop-on-error\") {\n-       jobDoc.job.timeEnded = fn.currentDateTime();\n+    if(!jobDoc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9e9ba83361a4235a03c1b7fb49bde8e661bada0"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTU3MTE1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-372957115", "createdAt": "2020-03-11T17:07:01Z", "commit": {"oid": "7045b9b656b465c45bfc72db8537629872d5e861"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTcxNDQ5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-372971449", "createdAt": "2020-03-11T17:24:32Z", "commit": {"oid": "7045b9b656b465c45bfc72db8537629872d5e861"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTkxODEz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-372991813", "createdAt": "2020-03-11T17:50:38Z", "commit": {"oid": "7045b9b656b465c45bfc72db8537629872d5e861"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTk5NDI0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-373199424", "createdAt": "2020-03-11T23:50:09Z", "commit": {"oid": "7045b9b656b465c45bfc72db8537629872d5e861"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODIyMzcw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-373822370", "createdAt": "2020-03-12T18:58:04Z", "commit": {"oid": "66b27da4a5ce8af296fc9cfd99ddb16829471fe9"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODM3ODc5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-373837879", "createdAt": "2020-03-12T19:22:54Z", "commit": {"oid": "3f12a75af27c1c65d41f7606f247a5e63babc524"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODYxMzgx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-373861381", "createdAt": "2020-03-12T20:00:19Z", "commit": {"oid": "3f12a75af27c1c65d41f7606f247a5e63babc524"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTIwMzk2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-373920396", "createdAt": "2020-03-12T21:38:22Z", "commit": {"oid": "3f12a75af27c1c65d41f7606f247a5e63babc524"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdecceac6369e9f29069dbceb6b084e115a1f1e6", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/bdecceac6369e9f29069dbceb6b084e115a1f1e6", "committedDate": "2020-03-12T22:31:22Z", "message": "DHFPROD-3922: Move in flow run logic (#3578)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "723e7de281661c1aa8d6d496ab27ca831826394a", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/723e7de281661c1aa8d6d496ab27ca831826394a", "committedDate": "2020-03-12T22:34:55Z", "message": "DHFPROD-3922: Add Jobs APIs to One UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f82e135d8eef8b0ddc80e77fd574998bf7dd374", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5f82e135d8eef8b0ddc80e77fd574998bf7dd374", "committedDate": "2020-03-12T22:34:55Z", "message": "DHFPROD-4544: Make FlowRunner compatible with session based HubConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "846606ecf3358a2fb66602c30caeb06e355cb803", "author": {"user": {"login": "wooldridge", "name": "Mike Wooldridge"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/846606ecf3358a2fb66602c30caeb06e355cb803", "committedDate": "2020-03-12T22:34:55Z", "message": "DHFPROD-3922: Enable step running in Bench/Flows view\n\nIncludes confirmation dialogs and status spinner."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0e58b4f500162442e4f8a27eac901bb7eed2a58", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e0e58b4f500162442e4f8a27eac901bb7eed2a58", "committedDate": "2020-03-12T22:34:56Z", "message": "DHFPROD-3922: Ensure OneUI Flow Run changes don't break legacy code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c12de9af1c33d7cf963fd3a2c29dc21873c77a36", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c12de9af1c33d7cf963fd3a2c29dc21873c77a36", "committedDate": "2020-03-12T22:36:41Z", "message": "DHFPROD-3922: Fix CSV run and logic for recording jobs (#3684)\n\n* DHFPROD-3922: Fix CSV run and logic for recording jobs\r\n\r\n* DHFPROD-3922: Fix jobs logic and add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cfaac8c67a62335cc1145735b3f8c53991b98e1", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1cfaac8c67a62335cc1145735b3f8c53991b98e1", "committedDate": "2020-03-12T22:36:42Z", "message": "DHFPROD-3922: Fix ingest test using tab delimiter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbb8bb693c094b4bca0b6b99bd82fbc051034772", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fbb8bb693c094b4bca0b6b99bd82fbc051034772", "committedDate": "2020-03-12T22:38:08Z", "message": "DHFPROD-3922: Make ML Unit Test for mappings more resilient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f12a75af27c1c65d41f7606f247a5e63babc524", "author": {"user": {"login": "wooldridge", "name": "Mike Wooldridge"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3f12a75af27c1c65d41f7606f247a5e63babc524", "committedDate": "2020-03-12T19:11:44Z", "message": "Merge branch 'develop' into DHFPROD-3922-run-flow-rebased"}, "afterCommit": {"oid": "fbb8bb693c094b4bca0b6b99bd82fbc051034772", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fbb8bb693c094b4bca0b6b99bd82fbc051034772", "committedDate": "2020-03-12T22:38:08Z", "message": "DHFPROD-3922: Make ML Unit Test for mappings more resilient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTUzNDA5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-373953409", "createdAt": "2020-03-12T22:58:36Z", "commit": {"oid": "fbb8bb693c094b4bca0b6b99bd82fbc051034772"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTczNjY2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3674#pullrequestreview-373973666", "createdAt": "2020-03-13T00:03:03Z", "commit": {"oid": "fbb8bb693c094b4bca0b6b99bd82fbc051034772"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3144, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}