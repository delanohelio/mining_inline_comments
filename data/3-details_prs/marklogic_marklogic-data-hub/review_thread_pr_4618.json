{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNzM3ODU3", "number": 4618, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo0OToxNVrOEqU6TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo1MjoyN1rOEqVAQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODE4MjUzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/smart-mastering/entity-driven/test-data/entities/Customer.entity.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo0OToxNVrOHcd73Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo0OToxNVrOHcd73Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxMjYzNw==", "bodyText": "I highly recommend slimming down the test data to the bare minimum needed. For example, only include properties used for matching - anything else is just noise that makes the test more difficult to understand. Same thing goes for test data - only insert the documents you need to verify that e.g. 2 docs match, but a 3rd doc does not match.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4618#discussion_r499612637", "createdAt": "2020-10-05T13:49:15Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/smart-mastering/entity-driven/test-data/entities/Customer.entity.json", "diffHunk": "@@ -0,0 +1,98 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "576e3e4b3e65e817aad69b619ae2b45bcab562cf"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODE4ODUxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/smart-mastering/entity-driven/test-data/householdAction.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo1MDoyOFrOHcd_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo1MDoyOFrOHcd_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxMzUzOQ==", "bodyText": "Is inserting data via a match action something we'd encourage? I ask because I'm wondering if we can eventually shift to a model where everything to be written gets stored in-memory first and then is written after all step processing has finished.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4618#discussion_r499613539", "createdAt": "2020-10-05T13:50:28Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/smart-mastering/entity-driven/test-data/householdAction.sjs", "diffHunk": "@@ -0,0 +1,15 @@\n+'use strict';\n+\n+const sem = require(\"/MarkLogic/semantics.xqy\");\n+const householdPredicateIRI = sem.iri('http://marklogic.com/datahub/test/household#memberOf');\n+\n+function householdAction(uri, matches, options) {\n+    declareUpdate();\n+    const allURIs = [uri].concat(matches.map((match) => match.uri)).sort();\n+    const householdIRI = sem.iri(`http://marklogic.com/datahub/test/household/${xdmp.md5(allURIs)}`);\n+    sem.rdfInsert(allURIs.map((uri) => sem.triple(sem.iri(uri), householdPredicateIRI, householdIRI)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "576e3e4b3e65e817aad69b619ae2b45bcab562cf"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODE5Nzc2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/smart-mastering/matching/include-matches.xqy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzo1MjoyN1rOHceFMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1MjozOVrOHcwXPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxNTAyNQ==", "bodyText": "If this test fails, it'll be very helpful to know why 8 matches are expected, and which 8 they are. Otherwise, a developer has to figure out themselves what should match and what should not.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4618#discussion_r499615025", "createdAt": "2020-10-05T13:52:27Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/smart-mastering/matching/include-matches.xqy", "diffHunk": "@@ -19,7 +19,7 @@ return (\n     test:assert-equal(1, fn:count($def-match/@threshold[. = \"Definitive Match\"])),\n     test:assert-equal(1, fn:count($def-match/@action[. = $constants:MERGE-ACTION])),\n     test:assert-exists($def-match/matches),\n-    test:assert-equal(7, fn:count($def-match/matches/match))\n+    test:assert-equal(8, fn:count($def-match/matches/match), \"Wrong count of matches: \" || xdmp:describe($def-match, (), ()) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "576e3e4b3e65e817aad69b619ae2b45bcab562cf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNDU1Ng==", "bodyText": "Added tests for the individual matches as well that makes it more clear.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4618#discussion_r499914556", "createdAt": "2020-10-05T22:52:39Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/smart-mastering/matching/include-matches.xqy", "diffHunk": "@@ -19,7 +19,7 @@ return (\n     test:assert-equal(1, fn:count($def-match/@threshold[. = \"Definitive Match\"])),\n     test:assert-equal(1, fn:count($def-match/@action[. = $constants:MERGE-ACTION])),\n     test:assert-exists($def-match/matches),\n-    test:assert-equal(7, fn:count($def-match/matches/match))\n+    test:assert-equal(8, fn:count($def-match/matches/match), \"Wrong count of matches: \" || xdmp:describe($def-match, (), ()) )", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYxNTAyNQ=="}, "originalCommit": {"oid": "576e3e4b3e65e817aad69b619ae2b45bcab562cf"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3219, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}