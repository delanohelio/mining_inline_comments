{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDgyMzM2", "number": 4926, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOToyODowN1rOFAbMTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOToyODowN1rOFAbMTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTg5ODM4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/flows/flows.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOToyODowN1rOH-tmTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTozODowNVrOH-uKXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUyMDg0NQ==", "bodyText": "@jyangML Seeing the unit test failing on this line. Can you take a look?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4926#discussion_r535520845", "createdAt": "2020-12-03T19:28:07Z", "author": {"login": "briantang"}, "path": "marklogic-data-hub-central/ui/src/components/flows/flows.test.tsx", "diffHunk": "@@ -185,4 +185,32 @@ describe('Flows component', () => {\n \n     });\n \n+    it('create flow button can be focused and pressed by keyboard', async () => {\n+        const {getByText, getByLabelText} = render(\n+            <Router history={history}><Flows\n+                {...flowsProps}\n+                canReadFlow={true}\n+                canWriteFlow={true}\n+                hasOperatorRole={true}\n+            /></Router>\n+        );\n+\n+        let flowButton = getByLabelText('create-flow');\n+        expect(flowButton).toBeInTheDocument();\n+        flowButton.focus();\n+        expect(flowButton).toHaveFocus();\n+\n+        // button should be focusable\n+        // verified by tabbing away and tabbing back\n+        userEvent.tab();\n+        expect(flowButton).not.toHaveFocus();\n+        userEvent.tab({shift: true});\n+        expect(flowButton).toHaveFocus();\n+\n+        // pressing enter on button should bring up New Flow dialogue box\n+        fireEvent.keyDown(flowButton, { key: 'Enter', code: 'Enter' });\n+        expect(getByText(\"New Flow\")).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a64de0bffff51d65aed22e3dd6b20116a5c41f3b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUzMDA3Nw==", "bodyText": "Disregard this, did not have the latest changes. Looks good now.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4926#discussion_r535530077", "createdAt": "2020-12-03T19:38:05Z", "author": {"login": "briantang"}, "path": "marklogic-data-hub-central/ui/src/components/flows/flows.test.tsx", "diffHunk": "@@ -185,4 +185,32 @@ describe('Flows component', () => {\n \n     });\n \n+    it('create flow button can be focused and pressed by keyboard', async () => {\n+        const {getByText, getByLabelText} = render(\n+            <Router history={history}><Flows\n+                {...flowsProps}\n+                canReadFlow={true}\n+                canWriteFlow={true}\n+                hasOperatorRole={true}\n+            /></Router>\n+        );\n+\n+        let flowButton = getByLabelText('create-flow');\n+        expect(flowButton).toBeInTheDocument();\n+        flowButton.focus();\n+        expect(flowButton).toHaveFocus();\n+\n+        // button should be focusable\n+        // verified by tabbing away and tabbing back\n+        userEvent.tab();\n+        expect(flowButton).not.toHaveFocus();\n+        userEvent.tab({shift: true});\n+        expect(flowButton).toHaveFocus();\n+\n+        // pressing enter on button should bring up New Flow dialogue box\n+        fireEvent.keyDown(flowButton, { key: 'Enter', code: 'Enter' });\n+        expect(getByText(\"New Flow\")).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUyMDg0NQ=="}, "originalCommit": {"oid": "a64de0bffff51d65aed22e3dd6b20116a5c41f3b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2996, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}