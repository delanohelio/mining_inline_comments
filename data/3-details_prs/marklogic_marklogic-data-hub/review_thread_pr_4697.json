{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODM2MzI5", "number": 4697, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDowMDo0NVrOEsb4kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjowNjo0MlrOEumEXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDI5NjUxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriterFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDowMDo0NVrOHfruog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDowMDo0NVrOHfruog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NDM1NA==", "bodyText": "These imports should all be removed as they're not used", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r502984354", "createdAt": "2020-10-12T00:00:45Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriterFactory.java", "diffHunk": "@@ -15,15 +15,18 @@\n  */\n package com.marklogic.hub.spark.sql.sources.v2.writer;\n \n+import com.fasterxml.jackson.databind.node.ObjectNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDI5ODk1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/WriteDataTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDowMzoxOVrOHfrv3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODowNTo0MVrOHgzLkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NDY3MA==", "bodyText": "This PR should including deleting the two files from /data-hub/5/data-services/ingestion from git, as they're being moved to /marklogic-data-hub-spark-connector/", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r502984670", "createdAt": "2020-10-12T00:03:19Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/WriteDataTest.java", "diffHunk": "@@ -132,6 +132,20 @@ void invalidPermissionsString() {\n         assertTrue(ex.getCause().getMessage().contains(\"Unable to parse permissions: rest-reader,read,rest-writer\"), \"Unexpected error message: \" + ex.getCause().getMessage());\n     }\n \n+    @Test\n+    public void testEndpointsAreLoaded() throws Exception {\n+        TextDocumentManager modMgr = getHubClient().getModulesClient().newTextDocumentManager();\n+        modMgr.delete(\"/data-hub/5/data-services/ingestion/bulkIngester.api\", \"/data-hub/5/data-services/ingestion/bulkIngester.sjs\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA5NTQ2MA==", "bodyText": "Should we keep these in datahub modules too? Just in case if installer is installing these modules?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504095460", "createdAt": "2020-10-13T16:32:14Z", "author": {"login": "SameeraPriyathamTadikonda"}, "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/WriteDataTest.java", "diffHunk": "@@ -132,6 +132,20 @@ void invalidPermissionsString() {\n         assertTrue(ex.getCause().getMessage().contains(\"Unable to parse permissions: rest-reader,read,rest-writer\"), \"Unexpected error message: \" + ex.getCause().getMessage());\n     }\n \n+    @Test\n+    public void testEndpointsAreLoaded() throws Exception {\n+        TextDocumentManager modMgr = getHubClient().getModulesClient().newTextDocumentManager();\n+        modMgr.delete(\"/data-hub/5/data-services/ingestion/bulkIngester.api\", \"/data-hub/5/data-services/ingestion/bulkIngester.sjs\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NDY3MA=="}, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE1NTAyNw==", "bodyText": "The modules should still be in DHF core ,but under /marklogic-data-hub-spark-connector/", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504155027", "createdAt": "2020-10-13T18:05:41Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/test/java/com/marklogic/hub/spark/sql/sources/v2/WriteDataTest.java", "diffHunk": "@@ -132,6 +132,20 @@ void invalidPermissionsString() {\n         assertTrue(ex.getCause().getMessage().contains(\"Unable to parse permissions: rest-reader,read,rest-writer\"), \"Unexpected error message: \" + ex.getCause().getMessage());\n     }\n \n+    @Test\n+    public void testEndpointsAreLoaded() throws Exception {\n+        TextDocumentManager modMgr = getHubClient().getModulesClient().newTextDocumentManager();\n+        modMgr.delete(\"/data-hub/5/data-services/ingestion/bulkIngester.api\", \"/data-hub/5/data-services/ingestion/bulkIngester.sjs\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NDY3MA=="}, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMwNDc0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDowOToyMFrOHfryvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDowOToyMFrOHfryvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NTQwNQ==", "bodyText": "Pinging @SameeraPriyathamTadikonda and @ehennum  about this - I believe we should move the initialization to HubDataSourceWriter. This is based on my assumption that @SameeraPriyathamTadikonda  will be adding the initialization and finalization logic there for the job document.\nI think it makes sense though to not write this module if Ernie specifies his own ingestion path. Thus, it seems that all of the logic in this constructor should move into HubDataWriteSource. Does that seem right?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r502985405", "createdAt": "2020-10-12T00:09:20Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "diffHunk": "@@ -142,7 +146,20 @@ protected JsonNode determineIngestionEndpointParams(Map<String, String> options)\n         }\n \n         if (doesNotHaveApiPath) {\n-            endpointParams.put(\"apiPath\", \"/data-hub/5/data-services/ingestion/bulkIngester.api\");\n+            String apiPath = \"/data-hub/5/data-services/ingestion/bulkIngester.api\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMwNTY2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxMDoxOVrOHfrzLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxMDoxOVrOHfrzLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NTUxNg==", "bodyText": "We don't want to lose the original exception here - e.g:\nthrow new RuntimeException(\"Unable to write default ingestion endpoint at path: \" + path + \"; cause: \" + e.getMessage(), e);", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r502985516", "createdAt": "2020-10-12T00:10:19Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "diffHunk": "@@ -142,7 +146,20 @@ protected JsonNode determineIngestionEndpointParams(Map<String, String> options)\n         }\n \n         if (doesNotHaveApiPath) {\n-            endpointParams.put(\"apiPath\", \"/data-hub/5/data-services/ingestion/bulkIngester.api\");\n+            String apiPath = \"/data-hub/5/data-services/ingestion/bulkIngester.api\";\n+\n+            if(hubClient.getModulesClient().newJSONDocumentManager().exists(apiPath) == null) {\n+                IOUtil ioUtil = new IOUtil(this.hubClient.getModulesClient());\n+                try {\n+                    ioUtil.load(\"bulkIngester.api\");\n+                } catch (IOException e) {\n+                    throw new RuntimeException(\"Error occurred while loading default endpoints.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDMwNzgyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwMDoxMjo1MVrOHfr0Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMToyMjo0M1rOHgh2CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NTgxNA==", "bodyText": "We'll need to toss these files into the shadowJar, which is part of #4695 .\nOnce it's in the jar, the Spring class ClassPathResource can be used to retrieve it, no need for IOUtil:\nnew ClassPathResource(\"marklogic-data-hub-spark-connector/bulkIngester.api\").getInputStream()", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r502985814", "createdAt": "2020-10-12T00:12:51Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "diffHunk": "@@ -142,7 +146,20 @@ protected JsonNode determineIngestionEndpointParams(Map<String, String> options)\n         }\n \n         if (doesNotHaveApiPath) {\n-            endpointParams.put(\"apiPath\", \"/data-hub/5/data-services/ingestion/bulkIngester.api\");\n+            String apiPath = \"/data-hub/5/data-services/ingestion/bulkIngester.api\";\n+\n+            if(hubClient.getModulesClient().newJSONDocumentManager().exists(apiPath) == null) {\n+                IOUtil ioUtil = new IOUtil(this.hubClient.getModulesClient());\n+                try {\n+                    ioUtil.load(\"bulkIngester.api\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwNDc5NQ==", "bodyText": "@rjrudin . I am guessing -\nnew ClassPathResource(\"marklogic-data-hub-spark-connector/bulkIngester.api\").getInputStream()\nis a replacement for IOUtil.testFileToString().\nThere are other operations in IOUtil as well like - adding permissions and writing to data-hub-MODULES database. Please let me know if there is a method in data-hub that handles the permissions part. Will go ahead and replace them.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r503704795", "createdAt": "2020-10-13T06:49:46Z", "author": {"login": "anu3990"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "diffHunk": "@@ -142,7 +146,20 @@ protected JsonNode determineIngestionEndpointParams(Map<String, String> options)\n         }\n \n         if (doesNotHaveApiPath) {\n-            endpointParams.put(\"apiPath\", \"/data-hub/5/data-services/ingestion/bulkIngester.api\");\n+            String apiPath = \"/data-hub/5/data-services/ingestion/bulkIngester.api\";\n+\n+            if(hubClient.getModulesClient().newJSONDocumentManager().exists(apiPath) == null) {\n+                IOUtil ioUtil = new IOUtil(this.hubClient.getModulesClient());\n+                try {\n+                    ioUtil.load(\"bulkIngester.api\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NTgxNA=="}, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg3MDk4NQ==", "bodyText": "@anu3990 @SameeraPriyathamTadikonda I think you'll want a separate method for building a DocumentWriteOperation for each endpoint module that needs to be written (it would be unusual, but it's possible that the connector only needs to write 1 or 2 of the 3 endpoint modules). And then another method will handle adding each DWO to a DocumentWriteSet, which can then be written to the modules database. I think all of that logic should be in HubDataWriterSource for now - there's no need for a separate utility class, the Java Client makes it pretty simple. We'd just want to avoid any duplication within HDWS.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r503870985", "createdAt": "2020-10-13T11:22:43Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/writer/HubDataWriter.java", "diffHunk": "@@ -142,7 +146,20 @@ protected JsonNode determineIngestionEndpointParams(Map<String, String> options)\n         }\n \n         if (doesNotHaveApiPath) {\n-            endpointParams.put(\"apiPath\", \"/data-hub/5/data-services/ingestion/bulkIngester.api\");\n+            String apiPath = \"/data-hub/5/data-services/ingestion/bulkIngester.api\";\n+\n+            if(hubClient.getModulesClient().newJSONDocumentManager().exists(apiPath) == null) {\n+                IOUtil ioUtil = new IOUtil(this.hubClient.getModulesClient());\n+                try {\n+                    ioUtil.load(\"bulkIngester.api\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NTgxNA=="}, "originalCommit": {"oid": "e1e2ff00baf8dace0af03ef6c8b187718e8137f5"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODY5NjgxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/resources/marklogic-data-hub-spark-connector/bulkIngester.api", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo0OToxOVrOHg6uLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoyODo1N1rOHhf0CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODU3NQ==", "bodyText": "This file should be inside datahub/5/modules according to the previous comment(#4697 (comment)).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504278575", "createdAt": "2020-10-13T21:49:19Z", "author": {"login": "SameeraPriyathamTadikonda"}, "path": "marklogic-data-hub-spark-connector/src/main/resources/marklogic-data-hub-spark-connector/bulkIngester.api", "diffHunk": "@@ -1,5 +1,5 @@\n {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27dc710892e1cf3932e893b38aa95fb638fa6385"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTI0Ng==", "bodyText": "It should be here - we want to move these modules to this location so that they can be inserted by a data-hub-operator user.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504321246", "createdAt": "2020-10-13T23:49:21Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/resources/marklogic-data-hub-spark-connector/bulkIngester.api", "diffHunk": "@@ -1,5 +1,5 @@\n {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODU3NQ=="}, "originalCommit": {"oid": "27dc710892e1cf3932e893b38aa95fb638fa6385"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyNjE5Nw==", "bodyText": "Do we intend to maintain two copies of the same endpoint?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504326197", "createdAt": "2020-10-14T00:06:01Z", "author": {"login": "SameeraPriyathamTadikonda"}, "path": "marklogic-data-hub-spark-connector/src/main/resources/marklogic-data-hub-spark-connector/bulkIngester.api", "diffHunk": "@@ -1,5 +1,5 @@\n {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODU3NQ=="}, "originalCommit": {"oid": "27dc710892e1cf3932e893b38aa95fb638fa6385"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2NTI0NA==", "bodyText": "I'm trying out the PR locally now - I'll post something to include in the connector's build.gradle file to copy the modules from the core project into the jar when the jar is built. That way, all the modules can live in the same place still. Currently, BulkIngestTest is failing because its modules no longer exist.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504665244", "createdAt": "2020-10-14T13:12:50Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/resources/marklogic-data-hub-spark-connector/bulkIngester.api", "diffHunk": "@@ -1,5 +1,5 @@\n {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODU3NQ=="}, "originalCommit": {"oid": "27dc710892e1cf3932e893b38aa95fb638fa6385"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4MzIwMw==", "bodyText": "I added this PR to copy the modules from the core project - https://github.com/anu3990/marklogic-data-hub/pull/4/files", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504683203", "createdAt": "2020-10-14T13:37:41Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/resources/marklogic-data-hub-spark-connector/bulkIngester.api", "diffHunk": "@@ -1,5 +1,5 @@\n {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODU3NQ=="}, "originalCommit": {"oid": "27dc710892e1cf3932e893b38aa95fb638fa6385"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4NjI4MQ==", "bodyText": "Included all the changes. Also rebased the code.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r504886281", "createdAt": "2020-10-14T18:28:57Z", "author": {"login": "anu3990"}, "path": "marklogic-data-hub-spark-connector/src/main/resources/marklogic-data-hub-spark-connector/bulkIngester.api", "diffHunk": "@@ -1,5 +1,5 @@\n {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODU3NQ=="}, "originalCommit": {"oid": "27dc710892e1cf3932e893b38aa95fb638fa6385"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjkzNjYwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/marklogic-data-hub-spark-connector/bulkIngester.sjs", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjowNjo0MlrOHjG4Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTowNzo1NFrOHkTfCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3NDkxNQ==", "bodyText": "@anu3990 I'm approving, but is this even needed anymore?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r506574915", "createdAt": "2020-10-16T16:06:42Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/marklogic-data-hub-spark-connector/bulkIngester.sjs", "diffHunk": "@@ -72,7 +72,9 @@ if (input instanceof Sequence) {\n }\n \n inputArray.forEach(record => {\n-  state.next = state.next + 1;\n+if(state!=null && state.next!=null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18b9fc6cae177a213eaa57ee5f596a8afa58c3e5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3OTc4Mw==", "bodyText": "@rjrudin after java-client 5.3 release i removed the code wherein we were creating and sending an empty endpointState. So now, since the endpointState can be null, it was giving NullPointerException at state.next.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r506679783", "createdAt": "2020-10-16T19:27:34Z", "author": {"login": "anu3990"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/marklogic-data-hub-spark-connector/bulkIngester.sjs", "diffHunk": "@@ -72,7 +72,9 @@ if (input instanceof Sequence) {\n }\n \n inputArray.forEach(record => {\n-  state.next = state.next + 1;\n+if(state!=null && state.next!=null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3NDkxNQ=="}, "originalCommit": {"oid": "18b9fc6cae177a213eaa57ee5f596a8afa58c3e5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1NTYwMQ==", "bodyText": "Can't we remove this entirely though? Our connector doesn't care about anything in the endpointState. And if Ernie wants to store something there, he has to provide his own endpoint.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r506955601", "createdAt": "2020-10-17T15:46:05Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/marklogic-data-hub-spark-connector/bulkIngester.sjs", "diffHunk": "@@ -72,7 +72,9 @@ if (input instanceof Sequence) {\n }\n \n inputArray.forEach(record => {\n-  state.next = state.next + 1;\n+if(state!=null && state.next!=null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3NDkxNQ=="}, "originalCommit": {"oid": "18b9fc6cae177a213eaa57ee5f596a8afa58c3e5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgzMDAyNA==", "bodyText": "@anu3990 I checked this out locally, and all the tests pass with this block of code removed - i.e. this stuff:\nif(state!=null && state.next!=null){\n    state.next = state.next + 1;\n  }\n\nAs part of rebasing, can you remove that from the endpoint too?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4697#discussion_r507830024", "createdAt": "2020-10-19T15:07:54Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/marklogic-data-hub-spark-connector/bulkIngester.sjs", "diffHunk": "@@ -72,7 +72,9 @@ if (input instanceof Sequence) {\n }\n \n inputArray.forEach(record => {\n-  state.next = state.next + 1;\n+if(state!=null && state.next!=null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3NDkxNQ=="}, "originalCommit": {"oid": "18b9fc6cae177a213eaa57ee5f596a8afa58c3e5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3291, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}