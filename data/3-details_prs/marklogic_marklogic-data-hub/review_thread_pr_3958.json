{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjM3NjI0", "number": 3958, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoxNzo1MlrOD9AP2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoyNTo1NlrOD9AYSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjkzNzg2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/assets/mock-data/modeling.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoxNzo1MlrOGWSn4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoxNzo1MlrOGWSn4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyNjk3OA==", "bodyText": "This is fine, but if possible, I'd like for us to use Customer/Order across the board as defined in reference-entity-model project. We can absolutely enhance those to account for scenarios that they don't account for yet. It keeps us all on the same sheet of music, which makes communicating/testing/debugging easier.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3958#discussion_r426026978", "createdAt": "2020-05-15T20:17:52Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/assets/mock-data/modeling.js", "diffHunk": "@@ -459,4 +459,215 @@ export const editEntityPropertyRequest = { \"AnotherModel\": {\n     }\n   }\n }\n-}\n\\ No newline at end of file\n+}\n+\n+export const propertyTableEntities = [\n+  {\n+      \"entityName\": \"Concept\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "787e10457b8fa1085e9c0d17f715708c4f30e6a8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjk1NDE1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/modeling/entity-type-table/entity-type-table.test.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoyMzozN1rOGWSxuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjo0Mzo1NlrOGWVsSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyOTQ5Ng==", "bodyText": "@wooldridge  @brucean52 Is DD-MMM-YY the standard for date formatting in the UI? I'm a big fan of YYYY-MM-DD because it's naturally sortable, but many users I've worked with prefer something else, which always disappoints me. Do we have an agreed-upon standard yet for HC?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3958#discussion_r426029496", "createdAt": "2020-05-15T20:23:37Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/entity-type-table/entity-type-table.test.tsx", "diffHunk": "@@ -28,11 +28,11 @@ describe('EntityTypeModal Component', () => {\n \n       expect(getByText(/Customer/i)).toBeInTheDocument();\n       expect(getByText(/1,000/i)).toBeInTheDocument();\n-      expect(getByText(/2020-04-09 14:27/i)).toBeInTheDocument();\n+      expect(getByText(/09-Apr-20 14:27/i)).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "787e10457b8fa1085e9c0d17f715708c4f30e6a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAzNzQ2OQ==", "bodyText": "Let me get confirmation on this. The modeling design wiki shows YYYY-MMM-DD. The figma design shows the changes I made here", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3958#discussion_r426037469", "createdAt": "2020-05-15T20:42:49Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/entity-type-table/entity-type-table.test.tsx", "diffHunk": "@@ -28,11 +28,11 @@ describe('EntityTypeModal Component', () => {\n \n       expect(getByText(/Customer/i)).toBeInTheDocument();\n       expect(getByText(/1,000/i)).toBeInTheDocument();\n-      expect(getByText(/2020-04-09 14:27/i)).toBeInTheDocument();\n+      expect(getByText(/09-Apr-20 14:27/i)).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyOTQ5Ng=="}, "originalCommit": {"oid": "787e10457b8fa1085e9c0d17f715708c4f30e6a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA3NzI1OA==", "bodyText": "Last processed now shows time relative time in the table, which is sortable. Hover text over time shows date in DD-MMM-YY", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3958#discussion_r426077258", "createdAt": "2020-05-15T22:43:56Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/entity-type-table/entity-type-table.test.tsx", "diffHunk": "@@ -28,11 +28,11 @@ describe('EntityTypeModal Component', () => {\n \n       expect(getByText(/Customer/i)).toBeInTheDocument();\n       expect(getByText(/1,000/i)).toBeInTheDocument();\n-      expect(getByText(/2020-04-09 14:27/i)).toBeInTheDocument();\n+      expect(getByText(/09-Apr-20 14:27/i)).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyOTQ5Ng=="}, "originalCommit": {"oid": "787e10457b8fa1085e9c0d17f715708c4f30e6a8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjk1NjkxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.module.scss", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoyNDo1NlrOGWSzlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoyNDo1NlrOGWSzlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyOTk3Mw==", "bodyText": "Unless we don't control the term \"addBtn\", I highly, highly, highly recommend avoiding abbreviations like this. They don't serve any purpose other than to make code a little harder to read. Plus, more verbose names are easier to search for when looking for references.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3958#discussion_r426029973", "createdAt": "2020-05-15T20:24:56Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.module.scss", "diffHunk": "@@ -0,0 +1,29 @@\n+.icon {\n+  font-size: 21px;\n+  margin-left: 11px;\n+}\n+\n+.identifierIcon {\n+  font-size: 21px;\n+  margin-left: 16px;\n+}\n+\n+.addIcon {\n+  cursor: pointer;\n+  font-size: 21px;\n+  margin-left: 6px;\n+  color: #5B69AF;\n+}\n+\n+.addBtnContainer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "787e10457b8fa1085e9c0d17f715708c4f30e6a8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjk1OTQ2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoyNTo1NlrOGWS1Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDoyNTo1NlrOGWS1Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAzMDM3OA==", "bodyText": "This does not end with a period - which is what I'd vote for, but the other messages all end with a period, so I'm thinking this should end with a period too for consistency.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3958#discussion_r426030378", "createdAt": "2020-05-15T20:25:56Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.js", "diffHunk": "@@ -92,13 +92,22 @@ const AdvCustomOtherTooltips = {}\n \n const ModelingTooltips = {\n   entityTypeName: 'Click to view or edit settings for this entity type.',\n+  addNewEntity: 'Click here to add a new entity type',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "787e10457b8fa1085e9c0d17f715708c4f30e6a8"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4135, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}