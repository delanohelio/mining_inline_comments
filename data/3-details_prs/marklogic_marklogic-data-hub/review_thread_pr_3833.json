{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDI1Njgz", "number": 3833, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzowMTo1MFrOD0FH4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyNDoxN1rOD03_Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTM2NDgzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzowMTo1MFrOGI10Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNTo0NToyNFrOGJMXzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyMzQ4Mw==", "bodyText": "\"Every time you pull in new changes to this repository\"... Does this include any changes whatsoever to the marklogic-data-hub repo (Java core, middle tier, UI) or just certain types of changes? For example, I don't think I need to do this when I'm developing the UI.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411923483", "createdAt": "2020-04-21T07:01:50Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxMTE5Mg==", "bodyText": "My experience is that this most often occurs when someone is starting a new branch off develop or rebasing their feature branch off a just-updated develop branch. Most developers I've worked with in the field don't want to analyze all the changes they brought in to determine how they should update their app - they just do the \"full update\" and grab a cup of coffee while that's doing its thing.\nIn terms of dh-gradle, a relevant change would be anything in DH core, and/or anything in the Java portion of hub central.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r412211192", "createdAt": "2020-04-21T14:01:23Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyMzQ4Mw=="}, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI4ODI5OQ==", "bodyText": "Thanks, @rjrudin. So is the following more accurate? \"Every time you pull in new changes to this repository from the Data Hub core libraries, or the Hub Central middle-tier Java code, you should run that command...\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r412288299", "createdAt": "2020-04-21T15:30:38Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyMzQ4Mw=="}, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5MzA2OA==", "bodyText": "Thanks, @rjrudin. So is the following more accurate? \"Every time you pull in new changes to this repository from the Data Hub core libraries, or the Hub Central middle-tier Java code, you should run that command...\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r412293068", "createdAt": "2020-04-21T15:45:24Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyMzQ4Mw=="}, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTM3MTEwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzowMzo0MlrOGI13rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMTo0OVrOGJHZUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyNDM5Ng==", "bodyText": "When working with @bsrikan, after we ran publishToMavenLocal, we ran './gradlew build -x test', see:\nhttps://project.marklogic.com/jira/browse/DHFPROD-4797?focusedCommentId=173399&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-173399\nHow does that relate to the steps we're following here? This doesn't involve a build command, does it?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411924396", "createdAt": "2020-04-21T07:03:42Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxMTUzOA==", "bodyText": "No need to run that. publishToMavenLocal does everything you need.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r412211538", "createdAt": "2020-04-21T14:01:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyNDM5Ng=="}, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTM4NDk4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzowNjo1N1rOGI1_KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzowNjo1N1rOGI1_KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyNjMxMg==", "bodyText": "How can a developer confirm the version they are suppose to use? Is there a way to inspect the plugin mentioned previously? If a developer is just starting by going to the GitHub project page, how do they know what release they are working on? Where does \"5.3\" (or whatever the developer is supposed to use) come from?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411926312", "createdAt": "2020-04-21T07:06:57Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+\n+Now, you just need to make a build.gradle file that uses this version of the Data Hub Gradle plugin that you published. \n+For example, if you're working on the develop branch for the 5.3.0 release, then when you publish the DH Gradle plugin, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTM5NjE5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzowOTo0OVrOGI2Fkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzowOTo0OVrOGI2Fkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkyNzk1NA==", "bodyText": "By \"create your own project\" do you mean create a Data Hub project from an empty directory? And when @bsrikan led me through it, I believe we created an empty directory and then put several gradle-related files in the directory. Is that something that can be described?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411927954", "createdAt": "2020-04-21T07:09:49Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+\n+Now, you just need to make a build.gradle file that uses this version of the Data Hub Gradle plugin that you published. \n+For example, if you're working on the develop branch for the 5.3.0 release, then when you publish the DH Gradle plugin, \n+it will have a version of 5.3-SNAPSHOT. Below is a bare minimum build.gradle file for using this after you've published it. \n+\n+```\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath \"net.saliman:gradle-properties-plugin:1.5.1\"\n+        classpath \"com.marklogic:ml-data-hub:5.3-SNAPSHOT\"\n+    }\n+}\n+apply plugin: \"net.saliman.properties\"\n+apply plugin: \"com.marklogic.ml-data-hub\"\n+```\n+\n+You can use this to create your own project and [initialize it with Gradle](https://docs.marklogic.com/datahub/projects/create-project-using-gradle.html). ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTQxNTg2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoxNDozNlrOGI2QxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoxNDozNlrOGI2QxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzMDgyMQ==", "bodyText": "\"After initializing the project\"... I see that there is an initialization command mentioned in the linked docs page. But the linked docs page also goes through setting up a build.gradle file, which we also talk about here. So there's redundancy. The context switch is very difficult. I think it would be good to cover what the user needs to do in the README, which includes running the hubInit command. (Then as a sidenote, mention how to handle the case where we are using an existing example project.)", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411930821", "createdAt": "2020-04-21T07:14:36Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+\n+Now, you just need to make a build.gradle file that uses this version of the Data Hub Gradle plugin that you published. \n+For example, if you're working on the develop branch for the 5.3.0 release, then when you publish the DH Gradle plugin, \n+it will have a version of 5.3-SNAPSHOT. Below is a bare minimum build.gradle file for using this after you've published it. \n+\n+```\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath \"net.saliman:gradle-properties-plugin:1.5.1\"\n+        classpath \"com.marklogic:ml-data-hub:5.3-SNAPSHOT\"\n+    }\n+}\n+apply plugin: \"net.saliman.properties\"\n+apply plugin: \"com.marklogic.ml-data-hub\"\n+```\n+\n+You can use this to create your own project and [initialize it with Gradle](https://docs.marklogic.com/datahub/projects/create-project-using-gradle.html). \n+You can also use one of the example projects under \"./examples\" in this repository - most of them are configured to use \n+a locally published DH Gradle plugin if the property \"testing\" is set to \"true\". \n+\n+After initializing the project - don't forget to set mlUsername and mlPassword in gradle-local.properties - use Gradle ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTQyNzY1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoxNzowOFrOGI2XSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoxNzowOFrOGI2XSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzMjQ4OQ==", "bodyText": "I would end this subsection with the Data Hub instance being built (the user is ready to go now with a running Data Hub instance, right? They can go to the middle tier section now if they want?) and then have a new subsection that discusses how to deal with changes.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411932489", "createdAt": "2020-04-21T07:17:08Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+\n+Now, you just need to make a build.gradle file that uses this version of the Data Hub Gradle plugin that you published. \n+For example, if you're working on the develop branch for the 5.3.0 release, then when you publish the DH Gradle plugin, \n+it will have a version of 5.3-SNAPSHOT. Below is a bare minimum build.gradle file for using this after you've published it. \n+\n+```\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath \"net.saliman:gradle-properties-plugin:1.5.1\"\n+        classpath \"com.marklogic:ml-data-hub:5.3-SNAPSHOT\"\n+    }\n+}\n+apply plugin: \"net.saliman.properties\"\n+apply plugin: \"com.marklogic.ml-data-hub\"\n+```\n+\n+You can use this to create your own project and [initialize it with Gradle](https://docs.marklogic.com/datahub/projects/create-project-using-gradle.html). \n+You can also use one of the example projects under \"./examples\" in this repository - most of them are configured to use \n+a locally published DH Gradle plugin if the property \"testing\" is set to \"true\". \n+\n+After initializing the project - don't forget to set mlUsername and mlPassword in gradle-local.properties - use Gradle \n+to deploy the project:\n+\n+    ./gradlew -i mlDeploy\n+    \n+You now have a fresh Data Hub instance built off the branch that you are working. If desired, you can store this project ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTQ0MDc0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoyMDoxNVrOGI2eqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoyMDoxNVrOGI2eqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzNDM3OA==", "bodyText": "\"Depending on what has changed recently\"... This makes me think back to the part above where we talk about running publishToMavenLocal \"every time you pull in new changes to this repository.\" When do I do the former and when do I do the latter? I know we're discussing project changes here so... explain (briefly) the distinction?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411934378", "createdAt": "2020-04-21T07:20:15Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+\n+Now, you just need to make a build.gradle file that uses this version of the Data Hub Gradle plugin that you published. \n+For example, if you're working on the develop branch for the 5.3.0 release, then when you publish the DH Gradle plugin, \n+it will have a version of 5.3-SNAPSHOT. Below is a bare minimum build.gradle file for using this after you've published it. \n+\n+```\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath \"net.saliman:gradle-properties-plugin:1.5.1\"\n+        classpath \"com.marklogic:ml-data-hub:5.3-SNAPSHOT\"\n+    }\n+}\n+apply plugin: \"net.saliman.properties\"\n+apply plugin: \"com.marklogic.ml-data-hub\"\n+```\n+\n+You can use this to create your own project and [initialize it with Gradle](https://docs.marklogic.com/datahub/projects/create-project-using-gradle.html). \n+You can also use one of the example projects under \"./examples\" in this repository - most of them are configured to use \n+a locally published DH Gradle plugin if the property \"testing\" is set to \"true\". \n+\n+After initializing the project - don't forget to set mlUsername and mlPassword in gradle-local.properties - use Gradle \n+to deploy the project:\n+\n+    ./gradlew -i mlDeploy\n+    \n+You now have a fresh Data Hub instance built off the branch that you are working. If desired, you can store this project \n+outside of this repository and refresh it whenever needed. To do so, just publish the Gradle plugin again and run \n+\"mlDeploy\" again. Depending on what has changed recently - specifically, if the contents of src/main/hub-internal-config ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTQ3MDgyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoyNjo0MlrOGI2vkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwNzoyNjo0MlrOGI2vkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzODcwNQ==", "bodyText": "I guess gradle-local.properties is created when hubInit is run and that's where we need to set the credentials, which are required by the deploy step that follows? Also, how does the user know what credentials to use? Should this be clear?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r411938705", "createdAt": "2020-04-21T07:26:42Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/README.md", "diffHunk": "@@ -6,27 +6,72 @@ Boot middle tier instead of a Node middle tier\n 1. For production, you want to deploy an executable Spring Boot jar that includes all of the static UI resources\n \n \n-## Using this during development\n+# Developing Data Hub Central\n \n During development, you'll run two separate processes - the Spring Boot middle tier (which defaults to Tomcat), and \n-the UI. Node is still used for building and running the UI. \n-\n-To run the UI, first go into the ./marklogic-data-hub-central/ui directory:\n-\n-    cd marklogic-data-hub-central/ui\n-\n-The first time you run the UI, and any time after you've made changes or pulled down changes, you'll need to run \n-the following task to pull down all of the UI dependencies:\n-\n-    npm install\n+the UI. Node is still used for building and running the UI. In addition, you'll also need to have a Data Hub instance \n+that you can talk to. Running each of these processes is described below. \n+\n+## Running a Data Hub instance\n+\n+If you're developing locally and not connecting to a Data Hub instance elsewhere - such as hosted by DHS - you'll need \n+to have a Data Hub instance running locally that you can connect to. You'll typically want to build this instance off \n+the branch that you're working on so that it has the latest changes from the develop branch. \n+\n+The CONTRIBUTING.md for this repository discusses how to do this in the \"Testing changes to the Data Hub Gradle plugin\" section. \n+This process is also explained in detail below for convenience when working on Data Hub Central. \n+\n+First, run this command from the root directory in this repository to publish the Data Hub Gradle plugin to your local \n+Maven repository (defaults to ~/.m2/repository, but you won't need to access that directly):\n+\n+    ./gradlew publishToMavenLocal -PskipWeb=\n+\n+Every time you pull in new changes to this repository, you should run that command to ensure you are working with the \n+latest change to Data Hub. Also, the \"skipWeb\" property is included to avoid building the QuickStart application in \n+the \"./web\" directory, which can require a couple minutes to complete. \n+\n+Now, you just need to make a build.gradle file that uses this version of the Data Hub Gradle plugin that you published. \n+For example, if you're working on the develop branch for the 5.3.0 release, then when you publish the DH Gradle plugin, \n+it will have a version of 5.3-SNAPSHOT. Below is a bare minimum build.gradle file for using this after you've published it. \n+\n+```\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+        jcenter()\n+    }\n+    dependencies {\n+        classpath \"net.saliman:gradle-properties-plugin:1.5.1\"\n+        classpath \"com.marklogic:ml-data-hub:5.3-SNAPSHOT\"\n+    }\n+}\n+apply plugin: \"net.saliman.properties\"\n+apply plugin: \"com.marklogic.ml-data-hub\"\n+```\n+\n+You can use this to create your own project and [initialize it with Gradle](https://docs.marklogic.com/datahub/projects/create-project-using-gradle.html). \n+You can also use one of the example projects under \"./examples\" in this repository - most of them are configured to use \n+a locally published DH Gradle plugin if the property \"testing\" is set to \"true\". \n+\n+After initializing the project - don't forget to set mlUsername and mlPassword in gradle-local.properties - use Gradle ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a72622b5d594a5288faf5a85bd373533c8ee13"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzY5ODg2OnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/entities/Customer.entity.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyNDoxN1rOGKCEmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyNDoxN1rOGKCEmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3Mjg4OA==", "bodyText": "I believe the current \"api/entities/<entity_name>\" endpoint would require all sub entities to be in separate entity files as well. So, these entities will not be rendered as expected in the mapping UI screen", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3833#discussion_r413172888", "createdAt": "2020-04-22T17:24:17Z", "author": {"login": "srinathgit"}, "path": "examples/reference-entity-model/entities/Customer.entity.json", "diffHunk": "@@ -0,0 +1,76 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ef50f95ecc1835ebb6d0be80ed4451471696352"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3414, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}