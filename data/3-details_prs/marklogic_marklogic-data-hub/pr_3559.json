{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTcwODUx", "number": 3559, "title": "DHFPROD-4349: Middle-tier work to reject bad path input", "bodyText": "", "createdAt": "2020-02-06T23:59:45Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559", "merged": true, "mergeCommit": {"oid": "2b15a2c9845798556801c45a8f647a7bd33ae13f"}, "closed": true, "closedAt": "2020-02-07T20:40:51Z", "author": {"login": "ryanjdew"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBz2BJAFqTM1NDg1NjM2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCECcMgFqTM1NTM2NjUwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODU2MzY3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#pullrequestreview-354856367", "createdAt": "2020-02-07T00:01:03Z", "commit": {"oid": "8ef1f57eae68cf8580231150514af7db04a1ff72"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDowMTowM1rOFmuWww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDowMzo1N1rOFmuaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0OTY5OQ==", "bodyText": "I recommend including the directory path in here for more context - e.g.\nthrow new IllegalArgumentException(\"Invalid project directory: \" + directory);\n\nI also try to avoid IOException whenever possible, as it's a checked exception. For almost all IO errors, it's unlikely that a client can do anything meaningful with it other than rethrow it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376149699", "createdAt": "2020-02-07T00:01:03Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +113,11 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");\n+            } else if (!(directoryPath.isAbsolute() || directoryPath.toFile().exists())) {\n+                throw new IOException(\"Invalid directory supplied\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef1f57eae68cf8580231150514af7db04a1ff72"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MDU0MA==", "bodyText": "Oh okay - IOException is being used as way of indicating that the project directory is unavailable. I think IOException is too broad for that - I can definitely see some other feature in the future throwing an IOException that has nothing to do with the project directory.\nI recommend creating an e.g. \"ProjectDirectoryException\" and catching any possible IOException from the code that tries to access the project directory. This code can then catch that exception without any concern that something else may throw the exception.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376150540", "createdAt": "2020-02-07T00:03:57Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/exceptions/CustomExceptionHandler.java", "diffHunk": "@@ -97,10 +97,10 @@ private String httpStatusSuggestion(HttpStatus httpStatus) {\n \n     private String exceptionSuggestion(Exception exception) {\n         Throwable rootException = exception;\n-        if (exception instanceof RuntimeException && exception.getCause() != null) {\n+        if (exception.getCause() != null) {\n             rootException = exception.getCause();\n         }\n-        if (rootException instanceof IOException) {\n+        if (rootException instanceof IOException || exception instanceof IOException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ef1f57eae68cf8580231150514af7db04a1ff72"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ef1f57eae68cf8580231150514af7db04a1ff72", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/8ef1f57eae68cf8580231150514af7db04a1ff72", "committedDate": "2020-02-06T23:58:16Z", "message": "DHFPROD-4349: Middle-tier work to reject bad path input"}, "afterCommit": {"oid": "c98af717dff5255e7c4a02f13712b51933565877", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c98af717dff5255e7c4a02f13712b51933565877", "committedDate": "2020-02-07T00:25:48Z", "message": "DHFPROD-4349: Middle-tier work to reject bad path input"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1Mjc0Njc3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#pullrequestreview-355274677", "createdAt": "2020-02-07T16:22:49Z", "commit": {"oid": "c98af717dff5255e7c4a02f13712b51933565877"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjoyMjo1MFrOFnCm6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjoyMzo1NlrOFnCpdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MTUxMg==", "bodyText": "I think it's worth including the directory here as well - e.g.\n\"Project directory must be an absolute path: \" + directory", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376481512", "createdAt": "2020-02-07T16:22:50Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +115,13 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");\n+            } else if (!directoryPath.isAbsolute()) {\n+                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98af717dff5255e7c4a02f13712b51933565877"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MTc1Mg==", "bodyText": "I'd clarify this too as \"Project directory\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376481752", "createdAt": "2020-02-07T16:23:18Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +115,13 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");\n+            } else if (!directoryPath.isAbsolute()) {\n+                throw new ProjectDirectoryException(\"Directory supplied must be an absolute path\");\n+            } else if (!directoryPath.toFile().exists()) {\n+                throw new ProjectDirectoryException(\"Directory '\" + directory + \"' does not exist or cannot be read\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98af717dff5255e7c4a02f13712b51933565877"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4MjE2NA==", "bodyText": "Same thing - I think it's good to qualify this as the \"Project directory\" - e.g.\n\"Project directory not specified\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#discussion_r376482164", "createdAt": "2020-02-07T16:23:56Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -112,8 +115,13 @@ public void onError(String commandName, Exception exception) {\n         String directory = payload.get(\"directory\").asText(\"\");\n         // setting the project directory will resolve any relative paths\n         try {\n+            Path directoryPath = Paths.get(directory);\n             if (StringUtils.isEmpty(directory)) {\n                 throw new BadRequestException(\"Missing required directory property\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98af717dff5255e7c4a02f13712b51933565877"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b3c519e15b328aac235c2e02ebef712fe86f20a", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1b3c519e15b328aac235c2e02ebef712fe86f20a", "committedDate": "2020-02-07T17:27:21Z", "message": "DHFPROD-4349: Middle-tier work to reject bad path input"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c98af717dff5255e7c4a02f13712b51933565877", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c98af717dff5255e7c4a02f13712b51933565877", "committedDate": "2020-02-07T00:25:48Z", "message": "DHFPROD-4349: Middle-tier work to reject bad path input"}, "afterCommit": {"oid": "1b3c519e15b328aac235c2e02ebef712fe86f20a", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1b3c519e15b328aac235c2e02ebef712fe86f20a", "committedDate": "2020-02-07T17:27:21Z", "message": "DHFPROD-4349: Middle-tier work to reject bad path input"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzM0NDQ4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#pullrequestreview-355334448", "createdAt": "2020-02-07T18:01:06Z", "commit": {"oid": "1b3c519e15b328aac235c2e02ebef712fe86f20a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzY2NTA3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3559#pullrequestreview-355366507", "createdAt": "2020-02-07T18:56:13Z", "commit": {"oid": "1b3c519e15b328aac235c2e02ebef712fe86f20a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3259, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}