{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNzkzMjE4", "number": 4940, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODo0NDowN1rOFBqVqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzo0Mzo0OFrOFByQiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mjg2NTcwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/impl/flow-lib.xqy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODo0NDowN1rOIAbr7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzozOTozMVrOIAnK5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNDUyNg==", "bodyText": "@rjrudin ,\nThis change and a similar change in flow-lib.sjs in dhfprod-6284 are causing a number of test failures (These failures are for changes in flow-lib.sjs https://jenkins.marklogic.com/blue/organizations/jenkins/Datahub_CI/detail/develop/1692/tests/  alone). Should we not make this change in dhf 4 modules ? I am seeing that no matter a 4.x flow flow succeeds or fails, it always returns a http 200.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4940#discussion_r537324526", "createdAt": "2020-12-07T08:44:07Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/impl/flow-lib.xqy", "diffHunk": "@@ -1023,7 +1026,7 @@ declare function flow:safe-run($func)\n     catch($ex) {\n       debug:log(xdmp:describe($ex, (), ())),\n       trace:error-trace($rfc:item-context, $ex, xdmp:elapsed-time() - $before),\n-      fn:error((), \"DATAHUB-PLUGIN-ERROR\", $ex)\n+      httputils:throw-bad-request((), $ex)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065c4aee9cbe30766ddb908e02383d96920b9920"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUxMjY3Nw==", "bodyText": "@srinathgit If a 200 is always returned, then yeah - no need to change these. Can you add a comment at the top of flow-lib.xqy and flow-lib.sjs describing why we're not using the httpUtils functions so future developers are aware?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4940#discussion_r537512677", "createdAt": "2020-12-07T13:39:31Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/impl/flow-lib.xqy", "diffHunk": "@@ -1023,7 +1026,7 @@ declare function flow:safe-run($func)\n     catch($ex) {\n       debug:log(xdmp:describe($ex, (), ())),\n       trace:error-trace($rfc:item-context, $ex, xdmp:elapsed-time() - $before),\n-      fn:error((), \"DATAHUB-PLUGIN-ERROR\", $ex)\n+      httputils:throw-bad-request((), $ex)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNDUyNg=="}, "originalCommit": {"oid": "065c4aee9cbe30766ddb908e02383d96920b9920"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDE2MDYyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/triggers/entity-model-validate-trigger.xqy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzo0MzoxMFrOIAnUpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODoxNzowOVrOIA0C5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUxNTE3NA==", "bodyText": "Can you test this to see what error you get in the client that calls an endpoint that invokes this trigger? I am thinking that the first argument adds no value and should be returned. We don't have some list of error codes that a user can refer to, and returning something that looks like an error code implies that we do keep a list like that. I'm thinking it's less confusing if we just return the error message starting with \"Unable to validate\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4940#discussion_r537515174", "createdAt": "2020-12-07T13:43:10Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/triggers/entity-model-validate-trigger.xqy", "diffHunk": "@@ -84,7 +86,7 @@ let $uber-model :=\n     (: build uber model with original info :)\n     return hent:uber-model((xdmp:to-json($entity-def-map)/object-node(), $supporting-entity-defs)) => map:with(\"info\", $info-map)\n   } catch ($e) {\n-    fn:error(xs:QName(\"INVALID-MODEL\"), \"Unable to validate entity model at URI: \" || $trgr:uri || \"; cause: \" || xdmp:quote($e))\n+    httputils:throw-bad-request(xs:QName(\"INVALID-MODEL\"), \"Unable to validate entity model at URI: \" || $trgr:uri || \"; cause: \" || xdmp:quote($e))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065c4aee9cbe30766ddb908e02383d96920b9920"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxNDczMw==", "bodyText": "The first argument is error name as xs:Qname(). The second one is the code which is always \"RESTAPI-SRVEXERR\"(for 400, 404)\nfn:error((xs:QName(\"FAILED\")), \"RESTAPI-SRVEXERR\",(400,\"greater than 50\"))\nreturns\nRESTAPI-SRVEXERR: (FAILED) Extension Error: code: 400 message: greater than 50 document: %3\n2020-12-07 09:50:37.707 Info:+  <error:code>RESTAPI-SRVEXERR</error:code>\n2020-12-07 09:50:37.707 Info:+  <error:name>FAILED</error:name>\n2020-12-07 09:50:37.707 Info:+  <error:xquery-version>1.0-ml</error:xquery-version>\n2020-12-07 09:50:37.707 Info:+  <error:message>Extension Error: </error:message>\n2020-12-07 09:50:37.707 Info:+  <error:format-string>RESTAPI-SRVEXERR: (FAILED) Extension Error:  code: 400 message: greater than 50 document: %3</error:format-string>\n....\n\nfn:error( (), \"RESTAPI-SRVEXERR\",(400,\"greater than 50\")) returns\n RESTAPI-SRVEXERR: (err:FOER0000) Extension Error: code: 400 message: greater than 50 document: %3\n\n2020-12-07 09:49:40.410 Info:+  <error:code>RESTAPI-SRVEXERR</error:code>\n2020-12-07 09:49:40.410 Info:+  <error:name>err:FOER0000</error:name>\n2020-12-07 09:49:40.410 Info:+  <error:xquery-version>1.0-ml</error:xquery-version>\n2020-12-07 09:49:40.410 Info:+  <error:message>Extension Error: </error:message>\n2020-12-07 09:49:40.410 Info:+  <error:format-string>RESTAPI-SRVEXERR: (err:FOER0000) Extension Error:  code: 400 message: greater than 50 document: %3</error:format-string>\n...", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4940#discussion_r537714733", "createdAt": "2020-12-07T18:03:28Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/triggers/entity-model-validate-trigger.xqy", "diffHunk": "@@ -84,7 +86,7 @@ let $uber-model :=\n     (: build uber model with original info :)\n     return hent:uber-model((xdmp:to-json($entity-def-map)/object-node(), $supporting-entity-defs)) => map:with(\"info\", $info-map)\n   } catch ($e) {\n-    fn:error(xs:QName(\"INVALID-MODEL\"), \"Unable to validate entity model at URI: \" || $trgr:uri || \"; cause: \" || xdmp:quote($e))\n+    httputils:throw-bad-request(xs:QName(\"INVALID-MODEL\"), \"Unable to validate entity model at URI: \" || $trgr:uri || \"; cause: \" || xdmp:quote($e))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUxNTE3NA=="}, "originalCommit": {"oid": "065c4aee9cbe30766ddb908e02383d96920b9920"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcyMzYyMg==", "bodyText": "Oh I see, I missed that part. Looks good then.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4940#discussion_r537723622", "createdAt": "2020-12-07T18:17:09Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/4/triggers/entity-model-validate-trigger.xqy", "diffHunk": "@@ -84,7 +86,7 @@ let $uber-model :=\n     (: build uber model with original info :)\n     return hent:uber-model((xdmp:to-json($entity-def-map)/object-node(), $supporting-entity-defs)) => map:with(\"info\", $info-map)\n   } catch ($e) {\n-    fn:error(xs:QName(\"INVALID-MODEL\"), \"Unable to validate entity model at URI: \" || $trgr:uri || \"; cause: \" || xdmp:quote($e))\n+    httputils:throw-bad-request(xs:QName(\"INVALID-MODEL\"), \"Unable to validate entity model at URI: \" || $trgr:uri || \"; cause: \" || xdmp:quote($e))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUxNTE3NA=="}, "originalCommit": {"oid": "065c4aee9cbe30766ddb908e02383d96920b9920"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDE2MzI5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/services/mlFlow.xqy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzo0Mzo0OFrOIAnWQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxODowNDoxN1rOIAziVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUxNTU4NQ==", "bodyText": "Why include \"()\" as the first arg here?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4940#discussion_r537515585", "createdAt": "2020-12-07T13:43:48Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/services/mlFlow.xqy", "diffHunk": "@@ -69,7 +72,7 @@ declare function get(\n           return\n             if (fn:exists($flow)) then $flow\n             else\n-              fn:error((),\"RESTAPI-SRVEXERR\", (404, \"Not Found\", \"The requested flow was not found\"))\n+              httputils:throw-not-found((), \"The requested flow was not found\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "065c4aee9cbe30766ddb908e02383d96920b9920"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzcxNTI4NA==", "bodyText": "In many places we pass error name (first argument for e.g. in SM project), so included that param.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4940#discussion_r537715284", "createdAt": "2020-12-07T18:04:17Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/services/mlFlow.xqy", "diffHunk": "@@ -69,7 +72,7 @@ declare function get(\n           return\n             if (fn:exists($flow)) then $flow\n             else\n-              fn:error((),\"RESTAPI-SRVEXERR\", (404, \"Not Found\", \"The requested flow was not found\"))\n+              httputils:throw-not-found((), \"The requested flow was not found\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUxNTU4NQ=="}, "originalCommit": {"oid": "065c4aee9cbe30766ddb908e02383d96920b9920"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3007, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}