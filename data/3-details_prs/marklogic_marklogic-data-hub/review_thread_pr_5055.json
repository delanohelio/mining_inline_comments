{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MDY5MDA4", "number": 5055, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMTo1MDoyNFrOFKLcrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMTo1OToyNlrOFKLh-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjE3NjQ2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMTo1MDoyNVrOIM15Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMjoyMDo1NFrOIM2SQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMzNjgwMw==", "bodyText": "We still want to store the coarse-grain information from the entity-services-mapping step and the granularity level is set to fine, right?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#discussion_r550336803", "createdAt": "2020-12-30T21:50:25Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -537,25 +534,26 @@ class Flow {\n           status: (stepDefTypeLowerCase === 'ingestion') ? 'created' : 'updated',\n           metadata: {}\n         };\n+\n         // We may want to hide some documents from provenance. e.g., we don't need provenance of mastering PROV documents\n         if (content.provenance !== false) {\n           let provResult;\n+\n           if (prov.granularityLevel() === prov.FINE_LEVEL && flowStep.stepDefinitionName === \"entity-services-mapping\") {\n             xdmp.trace(this.datahub.consts.TRACE_RUN_STEP, `'provenanceGranularityLevel' for step '${flowStep.name}' is set to 'fine'. This is not supported for mapping steps. So, coarse grained provenance data will be generated.`);\n           }\n-          if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance && flowStep.stepDefinitionName !== \"entity-services-mapping\") {\n+          else if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance) {\n             provResult = this.buildFineProvenanceData(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content, info);\n           } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0MzIzMg==", "bodyText": "Oops - you're right, that's my bad.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#discussion_r550343232", "createdAt": "2020-12-30T22:20:54Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -537,25 +534,26 @@ class Flow {\n           status: (stepDefTypeLowerCase === 'ingestion') ? 'created' : 'updated',\n           metadata: {}\n         };\n+\n         // We may want to hide some documents from provenance. e.g., we don't need provenance of mastering PROV documents\n         if (content.provenance !== false) {\n           let provResult;\n+\n           if (prov.granularityLevel() === prov.FINE_LEVEL && flowStep.stepDefinitionName === \"entity-services-mapping\") {\n             xdmp.trace(this.datahub.consts.TRACE_RUN_STEP, `'provenanceGranularityLevel' for step '${flowStep.name}' is set to 'fine'. This is not supported for mapping steps. So, coarse grained provenance data will be generated.`);\n           }\n-          if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance && flowStep.stepDefinitionName !== \"entity-services-mapping\") {\n+          else if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance) {\n             provResult = this.buildFineProvenanceData(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content, info);\n           } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMzNjgwMw=="}, "originalCommit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjE5MDAwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMTo1OToyNlrOIM2Abg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMjoyMToyOVrOIM2SmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMzODY3MA==", "bodyText": "a test is failing since flowInstance is undefined here.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#discussion_r550338670", "createdAt": "2020-12-30T21:59:26Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -537,25 +534,26 @@ class Flow {\n           status: (stepDefTypeLowerCase === 'ingestion') ? 'created' : 'updated',\n           metadata: {}\n         };\n+\n         // We may want to hide some documents from provenance. e.g., we don't need provenance of mastering PROV documents\n         if (content.provenance !== false) {\n           let provResult;\n+\n           if (prov.granularityLevel() === prov.FINE_LEVEL && flowStep.stepDefinitionName === \"entity-services-mapping\") {\n             xdmp.trace(this.datahub.consts.TRACE_RUN_STEP, `'provenanceGranularityLevel' for step '${flowStep.name}' is set to 'fine'. This is not supported for mapping steps. So, coarse grained provenance data will be generated.`);\n           }\n-          if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance && flowStep.stepDefinitionName !== \"entity-services-mapping\") {\n+          else if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance) {\n             provResult = this.buildFineProvenanceData(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content, info);\n           } else {\n             provResult = prov.createStepRecord(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content.uri, info);\n           }\n+\n           if (provResult instanceof Error) {\n             flowInstance.datahub.debug.log({message: provResult.message, type: 'error'});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0MzMyMQ==", "bodyText": "Well this is a sloppy PR - this was the line of code that needed fixing, I accidentally committed it after putting \"flowInstance\" back in to make sure it broke.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#discussion_r550343321", "createdAt": "2020-12-30T22:21:29Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -537,25 +534,26 @@ class Flow {\n           status: (stepDefTypeLowerCase === 'ingestion') ? 'created' : 'updated',\n           metadata: {}\n         };\n+\n         // We may want to hide some documents from provenance. e.g., we don't need provenance of mastering PROV documents\n         if (content.provenance !== false) {\n           let provResult;\n+\n           if (prov.granularityLevel() === prov.FINE_LEVEL && flowStep.stepDefinitionName === \"entity-services-mapping\") {\n             xdmp.trace(this.datahub.consts.TRACE_RUN_STEP, `'provenanceGranularityLevel' for step '${flowStep.name}' is set to 'fine'. This is not supported for mapping steps. So, coarse grained provenance data will be generated.`);\n           }\n-          if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance && flowStep.stepDefinitionName !== \"entity-services-mapping\") {\n+          else if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance) {\n             provResult = this.buildFineProvenanceData(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content, info);\n           } else {\n             provResult = prov.createStepRecord(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content.uri, info);\n           }\n+\n           if (provResult instanceof Error) {\n             flowInstance.datahub.debug.log({message: provResult.message, type: 'error'});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMzODY3MA=="}, "originalCommit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2982, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}