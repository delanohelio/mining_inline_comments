{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMTI4NDg3", "number": 5021, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMDoyNToxNVrOFG9uqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMDoyNToxNVrOFG9uqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODQ3MTQ0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/curation/load/defaultIngestion.spec.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMDoyNToxNVrOIIOQZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxOTo0OToxOVrOIIwt8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ5MzA5NA==", "bodyText": "I still don't think this function does anything. Navigating through the UI can be done using selectors that are based off of UI state changes. The cypress-wait-until library is a better option.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5021#discussion_r545493094", "createdAt": "2020-12-18T00:25:15Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/curation/load/defaultIngestion.spec.tsx", "diffHunk": "@@ -56,6 +56,7 @@ describe(\"Default ingestion \", () => {\n     loadPage.stepNameInput().should(\"be.disabled\");\n     loadPage.stepDescriptionInput().clear().type(\"UPDATE\");\n     loadPage.saveButton().click();\n+    cy.waitForAsyncRequest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927bc0b99742a0f0d181287a9564e5005aabf845"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYzMzg4OA==", "bodyText": "Thanks, I removed the instances that I added and didn't see any negative impact.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5021#discussion_r545633888", "createdAt": "2020-12-18T08:04:22Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/curation/load/defaultIngestion.spec.tsx", "diffHunk": "@@ -56,6 +56,7 @@ describe(\"Default ingestion \", () => {\n     loadPage.stepNameInput().should(\"be.disabled\");\n     loadPage.stepDescriptionInput().clear().type(\"UPDATE\");\n     loadPage.saveButton().click();\n+    cy.waitForAsyncRequest();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ5MzA5NA=="}, "originalCommit": {"oid": "927bc0b99742a0f0d181287a9564e5005aabf845"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA1NzcxNQ==", "bodyText": "I reverted on account of e2e failures on the CI/CD side. e2e tests now pass.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5021#discussion_r546057715", "createdAt": "2020-12-18T19:49:19Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/curation/load/defaultIngestion.spec.tsx", "diffHunk": "@@ -56,6 +56,7 @@ describe(\"Default ingestion \", () => {\n     loadPage.stepNameInput().should(\"be.disabled\");\n     loadPage.stepDescriptionInput().clear().type(\"UPDATE\");\n     loadPage.saveButton().click();\n+    cy.waitForAsyncRequest();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ5MzA5NA=="}, "originalCommit": {"oid": "927bc0b99742a0f0d181287a9564e5005aabf845"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2953, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}