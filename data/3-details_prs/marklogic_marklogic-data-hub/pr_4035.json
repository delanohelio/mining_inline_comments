{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NDQ3ODA4", "number": 4035, "title": "DHFPROD-4904:Run load step with selected files", "bodyText": "Description\nRun load step with selected files\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-06-02T08:58:33Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035", "merged": true, "mergeCommit": {"oid": "024cda088253706005b81b208424fe0b6f0f4295"}, "closed": true, "closedAt": "2020-06-03T18:59:01Z", "author": {"login": "srinathgit"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnT94dgFqTQyMjYxOTkyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnd6ZxAFqTQyMzEzMzgxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjE5OTI4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#pullrequestreview-422619928", "createdAt": "2020-06-02T12:22:02Z", "commit": {"oid": "5795f9eafcaecb7b872096e6261c338c639fc8b7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjoyMjowMlrOGdvFQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjoyMzoxNVrOGdvH0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzMzI4Mg==", "bodyText": "No need to change, but you can do these 2 lines in 1 line - loginAsTestUserWithRoles.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#discussion_r433833282", "createdAt": "2020-06-02T12:22:02Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.marklogic.hub.central.controllers;\n+\n+import com.marklogic.hub.central.AbstractMvcTest;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.mock.web.MockMultipartFile;\n+import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;\n+import org.springframework.test.web.servlet.result.MockMvcResultHandlers;\n+\n+import javax.ws.rs.core.MediaType;\n+import java.nio.charset.StandardCharsets;\n+\n+\n+public class FlowMvcTest extends AbstractMvcTest {\n+\n+    private final static String PATH = \"/api/flows\";\n+\n+    @Test\n+    void runIngestionStep() throws Exception {\n+        installReferenceModelProject();\n+        setTestUserRoles(\"hub-central-user\",\"data-hub-operator\");\n+        loginAsTestUser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5795f9eafcaecb7b872096e6261c338c639fc8b7"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgzMzkzOQ==", "bodyText": "I think we need to verify that the two JSON documents were ingested as well. This is good in that it verifies no error occurred, but it should be a simple matter to verify that the two documents are in the staging database too - I imagine you can assert on the size of the collection that the documents were ingested into.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#discussion_r433833939", "createdAt": "2020-06-02T12:23:15Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.marklogic.hub.central.controllers;\n+\n+import com.marklogic.hub.central.AbstractMvcTest;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.mock.web.MockMultipartFile;\n+import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;\n+import org.springframework.test.web.servlet.result.MockMvcResultHandlers;\n+\n+import javax.ws.rs.core.MediaType;\n+import java.nio.charset.StandardCharsets;\n+\n+\n+public class FlowMvcTest extends AbstractMvcTest {\n+\n+    private final static String PATH = \"/api/flows\";\n+\n+    @Test\n+    void runIngestionStep() throws Exception {\n+        installReferenceModelProject();\n+        setTestUserRoles(\"hub-central-user\",\"data-hub-operator\");\n+        loginAsTestUser();\n+\n+        MockMultipartFile file1 = new MockMultipartFile(\"file1\", \"file1.json\", MediaType.APPLICATION_JSON, \"{\\\"name\\\": \\\"Joe\\\"}\".getBytes(StandardCharsets.UTF_8));\n+        MockMultipartFile file2 = new MockMultipartFile(\"file2\",\"file2.json\", MediaType.APPLICATION_JSON, \"{\\\"name\\\": \\\"John\\\"}\".getBytes(StandardCharsets.UTF_8));\n+\n+        mockMvc.perform(MockMvcRequestBuilders.multipart(PATH + \"/{flowName}/steps/{stepNumber}\", \"ingestToFinal\", \"1\")\n+                        .file(file1)\n+                        .file(file2)\n+                        .contentType(MediaType.MULTIPART_FORM_DATA)\n+                        .session(mockHttpSession))\n+                .andDo(MockMvcResultHandlers.log())\n+                .andExpect(status().isOk());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5795f9eafcaecb7b872096e6261c338c639fc8b7"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5795f9eafcaecb7b872096e6261c338c639fc8b7", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5795f9eafcaecb7b872096e6261c338c639fc8b7", "committedDate": "2020-06-02T08:03:22Z", "message": "DHFPROD-4904:Run load step with selected files"}, "afterCommit": {"oid": "3e7995128d89a0c0cca1cc6ab30e29f93fdc9af8", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3e7995128d89a0c0cca1cc6ab30e29f93fdc9af8", "committedDate": "2020-06-02T18:38:43Z", "message": "DHFPROD-4904:Run load step with selected files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyOTc0MzI4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#pullrequestreview-422974328", "createdAt": "2020-06-02T19:02:42Z", "commit": {"oid": "3e7995128d89a0c0cca1cc6ab30e29f93fdc9af8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDE2MjEw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#pullrequestreview-423016210", "createdAt": "2020-06-02T20:02:58Z", "commit": {"oid": "3e7995128d89a0c0cca1cc6ab30e29f93fdc9af8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowMjo1OFrOGeCB8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowMjo1OFrOGeCB8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0MzczMA==", "bodyText": "This is a common problem we have, which is obtaining a reference to the FlowRunner so we can call awaitCompletion instead of having to write a lot of code here, or subclass NewFlowController.\nHere's a better approach - add a \"private Consumer flowRunnerConsumer\" to NewFlowController (and can you actually rename that to FlowController too? I forgot to do so before). Add a public setter for it.\nIf flowRunnerConsumer is non-null, then call accept on it after running the flow.\nThat way, a test can obtain the Autowired FlowController and then pass in a Consumer impl so it'll get a reference to the FlowRunner. The impl of Consumer can then call awaitCompletion.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#discussion_r434143730", "createdAt": "2020-06-02T20:02:58Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package com.marklogic.hub.central.controllers;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.document.JSONDocumentManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.central.AbstractMvcTest;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.multipart;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.job.JobStatus;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.mock.web.MockMultipartFile;\n+\n+import javax.ws.rs.core.MediaType;\n+import java.nio.charset.StandardCharsets;\n+\n+\n+\n+public class FlowMvcTest extends AbstractMvcTest {\n+\n+    private final static String PATH = \"/api/flows\";\n+    private ObjectMapper mapper = new ObjectMapper();\n+\n+    @Test\n+    void runIngestionStep() throws Exception {\n+        installReferenceModelProject();\n+        loginAsTestUserWithRoles(\"hub-central-user\",\"data-hub-operator\");\n+\n+        MockMultipartFile file1 = new MockMultipartFile(\"files\",\"file1.json\", MediaType.APPLICATION_JSON, \"{\\\"name\\\": \\\"Joe\\\"}\".getBytes(StandardCharsets.UTF_8));\n+        MockMultipartFile file2 = new MockMultipartFile(\"files\",\"file2.json\", MediaType.APPLICATION_JSON, \"{\\\"name\\\": \\\"John\\\"}\".getBytes(StandardCharsets.UTF_8));\n+        mockMvc.perform(multipart(PATH + \"/{flowName}/steps/{stepNumber}\", \"ingestToFinal\", \"1\")\n+            .file(file1)\n+            .file(file2)\n+            .session(mockHttpSession))\n+            .andExpect(status().isOk())\n+            .andDo(resp -> {\n+                RunFlowResponse flowResponse = mapper.readValue(resp.getResponse().getContentAsString(), RunFlowResponse.class);\n+                waitForJobToFinish(flowResponse.getJobId());\n+            });\n+        JsonNode rawDoc = getFinalDoc(\"/customers/file1.json\");\n+        assertEquals(\"Joe\", rawDoc.get(\"envelope\").get(\"instance\").get(\"name\").asText(),\n+            \"Verifying that 2 docs were ingested into the final database\");\n+\n+        rawDoc = getFinalDoc(\"/customers/file2.json\");\n+        assertEquals(\"John\", rawDoc.get(\"envelope\").get(\"instance\").get(\"name\").asText(),\n+            \"Verifying that 2 docs were ingested into the final database\");\n+\n+    }\n+\n+\n+    private void waitForJobToFinish(String jobId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7995128d89a0c0cca1cc6ab30e29f93fdc9af8"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e7995128d89a0c0cca1cc6ab30e29f93fdc9af8", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3e7995128d89a0c0cca1cc6ab30e29f93fdc9af8", "committedDate": "2020-06-02T18:38:43Z", "message": "DHFPROD-4904:Run load step with selected files"}, "afterCommit": {"oid": "bc2f083492cb35374e266a96b14fb9bc7b32bae8", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/bc2f083492cb35374e266a96b14fb9bc7b32bae8", "committedDate": "2020-06-02T22:09:57Z", "message": "DHFPROD-4904:Run load step with selected files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "399adb30d037598c812c30545d28cee60b81a11a", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/399adb30d037598c812c30545d28cee60b81a11a", "committedDate": "2020-06-02T22:32:18Z", "message": "DHFPROD-4904:Run load step with selected files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc2f083492cb35374e266a96b14fb9bc7b32bae8", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/bc2f083492cb35374e266a96b14fb9bc7b32bae8", "committedDate": "2020-06-02T22:09:57Z", "message": "DHFPROD-4904:Run load step with selected files"}, "afterCommit": {"oid": "399adb30d037598c812c30545d28cee60b81a11a", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/399adb30d037598c812c30545d28cee60b81a11a", "committedDate": "2020-06-02T22:32:18Z", "message": "DHFPROD-4904:Run load step with selected files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTEyNTc2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#pullrequestreview-423112576", "createdAt": "2020-06-02T22:59:50Z", "commit": {"oid": "399adb30d037598c812c30545d28cee60b81a11a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTMzNzY5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#pullrequestreview-423133769", "createdAt": "2020-06-02T23:59:59Z", "commit": {"oid": "399adb30d037598c812c30545d28cee60b81a11a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo1OTo1OVrOGeHxsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzo1OTo1OVrOGeHxsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIzNzg3Mw==", "bodyText": "Nice! And we should be able to reuse this too.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#discussion_r434237873", "createdAt": "2020-06-02T23:59:59Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.marklogic.hub.central.controllers;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.document.JSONDocumentManager;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.central.AbstractMvcTest;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.multipart;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.job.JobStatus;\n+import io.swagger.annotations.OAuth2Definition;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.mock.web.MockMultipartFile;\n+\n+import javax.ws.rs.core.MediaType;\n+import java.nio.charset.StandardCharsets;\n+\n+\n+\n+public class FlowMvcTest extends AbstractMvcTest {\n+\n+    @Autowired\n+    FlowController flowController;\n+\n+    private final static String PATH = \"/api/flows\";\n+    private ObjectMapper mapper = new ObjectMapper();\n+\n+    @Test\n+    void runIngestionStep() throws Exception {\n+        installReferenceModelProject();\n+        loginAsTestUserWithRoles(\"hub-central-user\",\"data-hub-operator\");\n+\n+        MockMultipartFile file1 = new MockMultipartFile(\"files\",\"file1.json\", MediaType.APPLICATION_JSON, \"{\\\"name\\\": \\\"Joe\\\"}\".getBytes(StandardCharsets.UTF_8));\n+        MockMultipartFile file2 = new MockMultipartFile(\"files\",\"file2.json\", MediaType.APPLICATION_JSON, \"{\\\"name\\\": \\\"John\\\"}\".getBytes(StandardCharsets.UTF_8));\n+        flowController.setFlowRunnerConsumer((flowRunner -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "399adb30d037598c812c30545d28cee60b81a11a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTMzODE2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4035#pullrequestreview-423133816", "createdAt": "2020-06-03T00:00:10Z", "commit": {"oid": "399adb30d037598c812c30545d28cee60b81a11a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2692, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}