{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MzA4NjYw", "number": 3508, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozMzo1MVrODa4Low==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozNTo1NVrODa4OEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTEwMDUxOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozMzo1MVrOFiCxEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozMzo1MVrOFiCxEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0MTIzNQ==", "bodyText": "Shouldn't this method be on FlowManager? FlowManager has knowledge of how to read files and get flow names, so I think it should know how to return a list of flows as well (and sort them too).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3508#discussion_r371241235", "createdAt": "2020-01-27T13:33:51Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "diffHunk": "@@ -100,6 +99,30 @@ public void deleteFlow(String flowName) {\n         flowManager.deleteFlow(flowName);\n     }\n \n+    public List<Flow> getFlows() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b795cd0de81138bae215262c190e61aca0af3aee"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTEwNjcyOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozNTo1NVrOFiC0vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToxODoxNVrOFiRylw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0MjE3Mg==", "bodyText": "What's the point of having separate Step and StepModel classes? This seems confusing and is unnecessary work of having to translate between the two.\nAlso, couldn't a \"getFlow\" method just return a JsonNode, in which case this method isn't even needed?\nIsn't life a lot easier if we just pass JSON around??", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3508#discussion_r371242172", "createdAt": "2020-01-27T13:35:55Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "diffHunk": "@@ -100,6 +99,30 @@ public void deleteFlow(String flowName) {\n         flowManager.deleteFlow(flowName);\n     }\n \n+    public List<Flow> getFlows() {\n+        List<String> flowNames = flowManager.getFlowNames();\n+        List<Flow> flows = new ArrayList<>();\n+        flowNames.forEach((flowName)->{\n+            flows.add(getFlow(flowName));\n+        });\n+        Collections.sort(flows, (a, b) -> a.getName().compareTo(b.getName()));\n+        return flows;\n+    }\n+\n+    public List<StepModel> getSteps(String flowName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b795cd0de81138bae215262c190e61aca0af3aee"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyNDg4MA==", "bodyText": "The UI doesn't know anything about step definition. So, when some one creates a custom step, we have to create a custom step definition, main.sjs in addition to the step itself that goes inside the flow. So, the core and web models for steps are different, webModel (called StepModel.java) has 'modulePath' which provides the uri of the main.sjs\nwhereas it is not present in the core step model (Step.java). This is all inherited from 5.0 code codebase .", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3508#discussion_r371324880", "createdAt": "2020-01-27T15:57:05Z", "author": {"login": "srinathgit"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "diffHunk": "@@ -100,6 +99,30 @@ public void deleteFlow(String flowName) {\n         flowManager.deleteFlow(flowName);\n     }\n \n+    public List<Flow> getFlows() {\n+        List<String> flowNames = flowManager.getFlowNames();\n+        List<Flow> flows = new ArrayList<>();\n+        flowNames.forEach((flowName)->{\n+            flows.add(getFlow(flowName));\n+        });\n+        Collections.sort(flows, (a, b) -> a.getName().compareTo(b.getName()));\n+        return flows;\n+    }\n+\n+    public List<StepModel> getSteps(String flowName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0MjE3Mg=="}, "originalCommit": {"oid": "b795cd0de81138bae215262c190e61aca0af3aee"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0NTczMw==", "bodyText": "@rjrudin As to the comment about using JsonNode, the goal is to move to generic JSON in most cases. I think Flows/Steps are unique given the need for Java to really understand the values for ingestion, so I think that is an outside case where it is better to have solid classes with a more rigid schema.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3508#discussion_r371445733", "createdAt": "2020-01-27T19:46:04Z", "author": {"login": "ryanjdew"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "diffHunk": "@@ -100,6 +99,30 @@ public void deleteFlow(String flowName) {\n         flowManager.deleteFlow(flowName);\n     }\n \n+    public List<Flow> getFlows() {\n+        List<String> flowNames = flowManager.getFlowNames();\n+        List<Flow> flows = new ArrayList<>();\n+        flowNames.forEach((flowName)->{\n+            flows.add(getFlow(flowName));\n+        });\n+        Collections.sort(flows, (a, b) -> a.getName().compareTo(b.getName()));\n+        return flows;\n+    }\n+\n+    public List<StepModel> getSteps(String flowName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0MjE3Mg=="}, "originalCommit": {"oid": "b795cd0de81138bae215262c190e61aca0af3aee"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NzM4Mw==", "bodyText": "I don't understand why the UI doesn't know anything about a step definition. \"Step\" and \"Step Definition\" are distinct concepts in the DHF domain model; a client should understand both of them.\nIs \"StepModel\" really a synonym for \"StepDefinition\"? If so, can StepModel be renamed to StepDefinition?\nI think the core problem here is if someone looks at the Step and StepModel classes, there's no way to know why they both exist. Perhaps the immediate solution is class comments to explain what concept each class represents, and in the StepModel case, why it differs from Step. Those can be in a separate PR; I'll stand down on this point for now.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3508#discussion_r371487383", "createdAt": "2020-01-27T21:18:15Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "diffHunk": "@@ -100,6 +99,30 @@ public void deleteFlow(String flowName) {\n         flowManager.deleteFlow(flowName);\n     }\n \n+    public List<Flow> getFlows() {\n+        List<String> flowNames = flowManager.getFlowNames();\n+        List<Flow> flows = new ArrayList<>();\n+        flowNames.forEach((flowName)->{\n+            flows.add(getFlow(flowName));\n+        });\n+        Collections.sort(flows, (a, b) -> a.getName().compareTo(b.getName()));\n+        return flows;\n+    }\n+\n+    public List<StepModel> getSteps(String flowName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0MjE3Mg=="}, "originalCommit": {"oid": "b795cd0de81138bae215262c190e61aca0af3aee"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3660, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}