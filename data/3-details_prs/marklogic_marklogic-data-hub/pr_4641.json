{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MDcwNDIz", "number": 4641, "title": "DHFPROD-6057: CRUD match steps - Backend", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-09-29T20:03:36Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641", "merged": true, "mergeCommit": {"oid": "05b6de886fce2e458258c21cdf30ed1fcf93aa9a"}, "closed": true, "closedAt": "2020-09-30T23:33:31Z", "author": {"login": "fsnow"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNuXb-gFqTQ5ODg3NDE0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOFLOvAFqTQ5OTg3MzkxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODc0MTQ3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#pullrequestreview-498874147", "createdAt": "2020-09-29T20:38:39Z", "commit": {"oid": "e9dcc407cb2ee15f47f2004b049c09b5cf612895"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDozODozOVrOHaAb2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDozOToyNVrOHaAe1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMjE1Mg==", "bodyText": "The authority coming back from the service is \"writeMatching\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#discussion_r497032152", "createdAt": "2020-09-29T20:38:39Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MatchingStepController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.marklogic.hub.central.controllers.steps;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.central.controllers.BaseController;\n+import com.marklogic.hub.central.schemas.StepSchema;\n+import com.marklogic.hub.dataservices.ArtifactService;\n+import com.marklogic.hub.dataservices.StepService;\n+import io.swagger.annotations.ApiImplicitParam;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+\n+@Controller\n+@RequestMapping(\"/api/steps/matching\")\n+public class MatchingStepController extends BaseController {\n+\n+    private final static String STEP_DEFINITION_TYPE = \"matching\";\n+\n+    @RequestMapping(method = RequestMethod.GET)\n+    @ResponseBody\n+    @ApiOperation(value = \"Get all matching steps\", response = MatchingSteps.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getSteps() {\n+        return ResponseEntity.ok(ArtifactService.on(getHubClient().getStagingClient()).getList(STEP_DEFINITION_TYPE));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.GET)\n+    @ApiOperation(value = \"Get a step\", response = StepSchema.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getStep(@PathVariable String stepName) {\n+        return ResponseEntity.ok(newService().getStep(STEP_DEFINITION_TYPE, stepName));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.POST)\n+    @ApiImplicitParam(required = true, paramType = \"body\", dataType = \"StepSchema\")\n+    @Secured(\"ROLE_writeMatchMerge\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9dcc407cb2ee15f47f2004b049c09b5cf612895"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAzMjkxOQ==", "bodyText": "The authority coming back from the service is \"writeMerge\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#discussion_r497032919", "createdAt": "2020-09-29T20:39:25Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/MergingStepController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.marklogic.hub.central.controllers.steps;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.central.controllers.BaseController;\n+import com.marklogic.hub.central.schemas.StepSchema;\n+import com.marklogic.hub.dataservices.ArtifactService;\n+import com.marklogic.hub.dataservices.StepService;\n+import io.swagger.annotations.ApiImplicitParam;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+\n+@Controller\n+@RequestMapping(\"/api/steps/merging\")\n+public class MergingStepController extends BaseController {\n+\n+    private final static String STEP_DEFINITION_TYPE = \"merging\";\n+\n+    @RequestMapping(method = RequestMethod.GET)\n+    @ResponseBody\n+    @ApiOperation(value = \"Get all merging steps\", response = MergingSteps.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getSteps() {\n+        return ResponseEntity.ok(ArtifactService.on(getHubClient().getStagingClient()).getList(STEP_DEFINITION_TYPE));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.GET)\n+    @ApiOperation(value = \"Get a step\", response = StepSchema.class)\n+    @Secured(\"ROLE_readMatchMerge\")\n+    public ResponseEntity<JsonNode> getStep(@PathVariable String stepName) {\n+        return ResponseEntity.ok(newService().getStep(STEP_DEFINITION_TYPE, stepName));\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.POST)\n+    @ApiImplicitParam(required = true, paramType = \"body\", dataType = \"StepSchema\")\n+    @Secured(\"ROLE_writeMatchMerge\")\n+    public ResponseEntity<Void> saveStep(@RequestBody @ApiParam(hidden = true) ObjectNode propertiesToAssign, @PathVariable String stepName) {\n+        propertiesToAssign.put(\"name\", stepName);\n+        newService().saveStep(STEP_DEFINITION_TYPE, propertiesToAssign);\n+        return emptyOk();\n+    }\n+\n+    @RequestMapping(value = \"/{stepName}\", method = RequestMethod.DELETE)\n+    @Secured(\"ROLE_writeMatchMerge\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9dcc407cb2ee15f47f2004b049c09b5cf612895"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5Nzk5ODMz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#pullrequestreview-499799833", "createdAt": "2020-09-30T20:48:32Z", "commit": {"oid": "42b493737dcbd0a80f3c7862387733d90880e54f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODAyNzk5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#pullrequestreview-499802799", "createdAt": "2020-09-30T20:52:53Z", "commit": {"oid": "42b493737dcbd0a80f3c7862387733d90880e54f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da2294c79639f1fb086d4ddc8943594fd36a3fd4", "author": {"user": {"login": "fsnow", "name": "Frank Snow"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/da2294c79639f1fb086d4ddc8943594fd36a3fd4", "committedDate": "2020-09-30T22:44:12Z", "message": "DHFPROD-6057: CRUD match steps - Backend"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODY1MTk2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#pullrequestreview-499865196", "createdAt": "2020-09-30T22:51:13Z", "commit": {"oid": "da2294c79639f1fb086d4ddc8943594fd36a3fd4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODczOTE1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4641#pullrequestreview-499873915", "createdAt": "2020-09-30T23:13:58Z", "commit": {"oid": "da2294c79639f1fb086d4ddc8943594fd36a3fd4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1910, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}