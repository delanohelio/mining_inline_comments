{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMzU2NjM1", "number": 4176, "title": "DHFPROD-5305: (DH 5.2) Provide privileges required for MLCP copy", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-06-30T23:37:26Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4176", "merged": true, "mergeCommit": {"oid": "ab65862043962829ef257efa2eb344056b56fc11"}, "closed": true, "closedAt": "2020-07-01T20:15:43Z", "author": {"login": "ryanjdew"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwjxpSgFqTQ0MDU2NDQ0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwvWBFAFqTQ0MTEzODA0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTY0NDQ5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4176#pullrequestreview-440564449", "createdAt": "2020-07-01T05:55:20Z", "commit": {"oid": "9b2c7f719319fe896f440718996cb7943306f482"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo1NToyMFrOGrXv3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo1NToyMFrOGrXv3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzMTAzOA==", "bodyText": "MlcpRunner was used to run legacy 4.x input flows. Are these changes meant to get the test running ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4176#discussion_r448131038", "createdAt": "2020-07-01T05:55:20Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/util/MlcpRunner.java", "diffHunk": "@@ -73,26 +77,40 @@ public String getJobId() {\n     public void run() {\n         HubConfig hubConfig = getHubConfig();\n \n-        Job job = Job.withFlow(flow)\n-            .withJobId(jobId);\n-        jobManager.saveJob(job);\n+        Job job = null;\n+        if (flow != null) {\n+            job = Job.withFlow(flow)\n+                    .withJobId(jobId);\n+            jobManager.saveJob(job);\n+        }\n \n         try {\n             MlcpBean bean = new ObjectMapper().readerFor(MlcpBean.class).readValue(mlcpOptions);\n-            bean.setHost(databaseClient.getHost());\n-            bean.setPort(databaseClient.getPort());\n+            if (databaseClient != null) {\n+                bean.setHost(databaseClient.getHost());\n+                bean.setPort(databaseClient.getPort());\n+            }\n             if (database != null) {\n                 bean.setDatabase(database);\n             }\n \n-            // Assume that the HTTP credentials will work for mlcp\n-            bean.setUsername(hubConfig.getAppConfig().getAppServicesUsername());\n-            bean.setPassword(hubConfig.getAppConfig().getAppServicesPassword());\n \n-            File file = new File(mlcpOptions.get(\"input_file_path\").asText());\n-            String canonicalPath = file.getCanonicalPath();\n-            bean.setInput_file_path(canonicalPath);\n-            bean.setTransform_param(\"\\\"\" + bean.getTransform_param() + \",job-id=\" + jobId + \"\\\"\");\n+            if (!\"copy\".equals(bean.getCommand().toLowerCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b2c7f719319fe896f440718996cb7943306f482"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTY0ODU0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4176#pullrequestreview-440564854", "createdAt": "2020-07-01T05:56:30Z", "commit": {"oid": "9b2c7f719319fe896f440718996cb7943306f482"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a5eb45d4459a6fdf872e84bb3306d606277c3ee", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1a5eb45d4459a6fdf872e84bb3306d606277c3ee", "committedDate": "2020-07-01T15:21:22Z", "message": "DHFPROD-5305: Provide privileges required for MLCP copy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b2c7f719319fe896f440718996cb7943306f482", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9b2c7f719319fe896f440718996cb7943306f482", "committedDate": "2020-06-30T23:35:34Z", "message": "DHFPROD-5305: Provide privileges required for MLCP copy"}, "afterCommit": {"oid": "1a5eb45d4459a6fdf872e84bb3306d606277c3ee", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1a5eb45d4459a6fdf872e84bb3306d606277c3ee", "committedDate": "2020-07-01T15:21:22Z", "message": "DHFPROD-5305: Provide privileges required for MLCP copy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTM3NDY1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4176#pullrequestreview-441137465", "createdAt": "2020-07-01T19:23:04Z", "commit": {"oid": "1a5eb45d4459a6fdf872e84bb3306d606277c3ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTM4MDQ3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4176#pullrequestreview-441138047", "createdAt": "2020-07-01T19:24:02Z", "commit": {"oid": "1a5eb45d4459a6fdf872e84bb3306d606277c3ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2607, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}