{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTE4NjQ0", "number": 4045, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowMDo1OFrOECPl0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowMTo0N1rOECPm5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzg4MDUxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/authorization.spec.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowMDo1OFrOGelM7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowMDo1OFrOGelM7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxOTk4MA==", "bodyText": "This is a half baked test. I will comment it out for now.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4045#discussion_r434719980", "createdAt": "2020-06-03T17:00:58Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/authorization.spec.tsx", "diffHunk": "@@ -1,48 +1,172 @@\n /// <reference types=\"cypress\"/>\n \n-import LoginPage from '../support/pages/login';\n+import loginPage from '../support/pages/login';\n import { Application } from '../support/application.config';\n+import { toolbar, tiles, projectInfo } from '../support/components/common/index';\n \n-const loginPage = new LoginPage();\n \n describe('login', () => {\n   before(() => {\n     cy.visit('/');\n   });\n \n-  it('greets with Data Hub Central', () => {\n-    cy.contains(Application.title);\n+  after(() => {\n+    //resetting the test user back to only have 'hub-central-user' role\n+    cy.resetTestUser();\n   });\n \n-  it('has links to privacy statement/policies', () => {\n+  it('greets with Data Hub Central title and footer links', () => {\n+      cy.contains(Application.title);\n+\n       cy.contains('Policies');\n+      cy.contains('Terms and Conditions');\n   });\n \n-  it('has link to terms and conditions ', () => {\n-    cy.contains('Terms and Conditions');\n+  it('should verify all the error conditions for login', () => {\n+      //Verify username/password is required and login button is disabled\n+      loginPage.getUsername().type('{enter}').blur();\n+      loginPage.getPassword().type('{enter}').blur();\n+      cy.contains('Username is required');\n+      cy.contains('Password is required');\n+      loginPage.getLoginButton().should('be.disabled');\n+\n+      //Verify invalid credentials error message\n+      loginPage.getUsername().type('test');\n+      loginPage.getPassword().type('password');\n+      loginPage.getLoginButton().click();\n+      cy.contains('The username and password combination is not recognized by MarkLogic.');\n+\n+      //Verify admin cannot login\n+      loginPage.getUsername().clear();\n+      loginPage.getPassword().clear();\n+      loginPage.getUsername().type('admin');\n+      loginPage.getPassword().type('admin');\n+      loginPage.getLoginButton().click();\n+      cy.contains('User does not have the required permissions to run Data Hub.');\n+\n   });\n \n-  xit('has forgot password link', () => {\n-    loginPage.getforgotPasswordLink()\n-      .should('have.attr', 'href'); \n+  it('should verify auto logout after inactivity', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6d81697d95fdb9f7baf6a1ee7efde1473de8f26"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzg4MzI1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/authorization.spec.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowMTo0N1rOGelOqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowMTo0N1rOGelOqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyMDQyNA==", "bodyText": "Realizing now that this test might not run in DHS. Will push a change.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4045#discussion_r434720424", "createdAt": "2020-06-03T17:01:47Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/authorization.spec.tsx", "diffHunk": "@@ -1,48 +1,172 @@\n /// <reference types=\"cypress\"/>\n \n-import LoginPage from '../support/pages/login';\n+import loginPage from '../support/pages/login';\n import { Application } from '../support/application.config';\n+import { toolbar, tiles, projectInfo } from '../support/components/common/index';\n \n-const loginPage = new LoginPage();\n \n describe('login', () => {\n   before(() => {\n     cy.visit('/');\n   });\n \n-  it('greets with Data Hub Central', () => {\n-    cy.contains(Application.title);\n+  after(() => {\n+    //resetting the test user back to only have 'hub-central-user' role\n+    cy.resetTestUser();\n   });\n \n-  it('has links to privacy statement/policies', () => {\n+  it('greets with Data Hub Central title and footer links', () => {\n+      cy.contains(Application.title);\n+\n       cy.contains('Policies');\n+      cy.contains('Terms and Conditions');\n   });\n \n-  it('has link to terms and conditions ', () => {\n-    cy.contains('Terms and Conditions');\n+  it('should verify all the error conditions for login', () => {\n+      //Verify username/password is required and login button is disabled\n+      loginPage.getUsername().type('{enter}').blur();\n+      loginPage.getPassword().type('{enter}').blur();\n+      cy.contains('Username is required');\n+      cy.contains('Password is required');\n+      loginPage.getLoginButton().should('be.disabled');\n+\n+      //Verify invalid credentials error message\n+      loginPage.getUsername().type('test');\n+      loginPage.getPassword().type('password');\n+      loginPage.getLoginButton().click();\n+      cy.contains('The username and password combination is not recognized by MarkLogic.');\n+\n+      //Verify admin cannot login\n+      loginPage.getUsername().clear();\n+      loginPage.getPassword().clear();\n+      loginPage.getUsername().type('admin');\n+      loginPage.getPassword().type('admin');\n+      loginPage.getLoginButton().click();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6d81697d95fdb9f7baf6a1ee7efde1473de8f26"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4013, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}