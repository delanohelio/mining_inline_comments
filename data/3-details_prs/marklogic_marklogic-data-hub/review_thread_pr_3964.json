{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NTk0Mzcz", "number": 3964, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MjoyOVrOD9eSsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MjoxM1rOD9eg6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg2MDM0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/authorization.spec.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MjoyOVrOGW_U9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MjoyOVrOGW_U9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1OTQxMg==", "bodyText": "Is there any benefit in keeping the commented-out code? I think it's almost always best to delete commented-out code - in the rare case something might be needed later, it can always be retrieved from version control.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426759412", "createdAt": "2020-05-18T16:42:29Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/authorization.spec.tsx", "diffHunk": "@@ -42,7 +42,8 @@ describe('login', () => {\n     cy.loginAsDeveloper()\n     .wait(500)\n     .url()\n-    .should('include', '/home');\n+     .should('include', '/tile')\n+    // .should('include', '/home');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg2OTM0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0NDo1NVrOGW_aiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0NDo1NVrOGW_aiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MDg0Mw==", "bodyText": "Same thing here - why not just delete this code? What's the benefit of keeping it around? It's in version history if it's ever needed again.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426760843", "createdAt": "2020-05-18T16:44:55Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "diffHunk": "@@ -59,17 +59,21 @@ const Query = (props) => {\n                 propertiesToDisplay: props.columns,\n             }\n         }\n-        try {\n-            props.setIsLoading(true);\n-            await creatNewQuery(query);\n-            setOpenSaveModal(false);\n-            getSaveQueries();\n-        } catch (error) {\n-            handleError(error);\n-        } finally {\n-            props.setIsLoading(false);\n-            resetSessionTime();\n-        }\n+        props.setIsLoading(true);\n+        await creatNewQuery(query);\n+        setOpenSaveModal(false);\n+        getSaveQueries();\n+        // try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg3NTYyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/saving/edit-save-query/save-changes-modal.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0NjozMVrOGW_eXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMzowMTozMlrOGXKNkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MTgyMg==", "bodyText": "This seems to be repeated - it's in 3 different places.\n@wooldridge @xnikhil08  It seems there should be a way to reduce this duplication so that each \"catch\" block doesn't have to do so much work? The problem with repeating this work in multiple places is that if we ever want to change how we handle e.g. 400 errors, we have N places to modify as opposed to just one.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426761822", "createdAt": "2020-05-18T16:46:31Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/queries/saving/edit-save-query/save-changes-modal.tsx", "diffHunk": "@@ -88,18 +94,28 @@ const SaveChangesModal: React.FC<Props> = (props) => {\n                 //const response = await updateQuery(currentQuery);\n                 const response = await axios.put(`/api/entitySearch/savedQueries`, currentQuery);\n                 if (response.data) {\n-                    props.setSaveChangesModalVisibility()\n+                    setAllSearchFacets(facets);\n+                    props.setSaveChangesModalVisibility();\n+                    applySaveQuery(searchOptions.query, searchOptions.entityTypeIds, facets, queryName);\n+                    props.setCurrentQueryDescription(queryDescription);\n                 }\n             } catch (error) {\n-                handleError(error);\n+                if (error.response.status === 400) {\n+                    if (error.response.data.hasOwnProperty('message')) {\n+                        setErrorMessage(error['response']['data']['message']);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5MzQ4NQ==", "bodyText": "@rjrudin the values that are set in the catch are specific to the component. Apart from setErrorMessage state, there are other states that are set in different catch blocks. This error handling is specific to the child components of the Query component. There is also a handleError generic error handler, which handles 400 error.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426893485", "createdAt": "2020-05-18T21:07:06Z", "author": {"login": "rahulvudutala"}, "path": "marklogic-data-hub-central/ui/src/components/queries/saving/edit-save-query/save-changes-modal.tsx", "diffHunk": "@@ -88,18 +94,28 @@ const SaveChangesModal: React.FC<Props> = (props) => {\n                 //const response = await updateQuery(currentQuery);\n                 const response = await axios.put(`/api/entitySearch/savedQueries`, currentQuery);\n                 if (response.data) {\n-                    props.setSaveChangesModalVisibility()\n+                    setAllSearchFacets(facets);\n+                    props.setSaveChangesModalVisibility();\n+                    applySaveQuery(searchOptions.query, searchOptions.entityTypeIds, facets, queryName);\n+                    props.setCurrentQueryDescription(queryDescription);\n                 }\n             } catch (error) {\n-                handleError(error);\n+                if (error.response.status === 400) {\n+                    if (error.response.data.hasOwnProperty('message')) {\n+                        setErrorMessage(error['response']['data']['message']);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MTgyMg=="}, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkzNzc0Ng==", "bodyText": "Yeah, I'm not really sure of better alternatives. async await in a try catch block is already pretty lean. One refactor I would recommend is combining the edit and save modals into one since they share inputs. The title and the save button endpoint are the differences.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426937746", "createdAt": "2020-05-18T23:01:32Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/queries/saving/edit-save-query/save-changes-modal.tsx", "diffHunk": "@@ -88,18 +94,28 @@ const SaveChangesModal: React.FC<Props> = (props) => {\n                 //const response = await updateQuery(currentQuery);\n                 const response = await axios.put(`/api/entitySearch/savedQueries`, currentQuery);\n                 if (response.data) {\n-                    props.setSaveChangesModalVisibility()\n+                    setAllSearchFacets(facets);\n+                    props.setSaveChangesModalVisibility();\n+                    applySaveQuery(searchOptions.query, searchOptions.entityTypeIds, facets, queryName);\n+                    props.setCurrentQueryDescription(queryDescription);\n                 }\n             } catch (error) {\n-                handleError(error);\n+                if (error.response.status === 400) {\n+                    if (error.response.data.hasOwnProperty('message')) {\n+                        setErrorMessage(error['response']['data']['message']);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MTgyMg=="}, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg3ODM2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/saving/save-query-modal/save-query-modal.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0NzoyMVrOGW_gHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0NzoyMVrOGW_gHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MjI2OA==", "bodyText": "This is the 4th occurrence of very similar logic for handling a 400 - hopefully there's a way to reduce this duplication??", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426762268", "createdAt": "2020-05-18T16:47:21Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/queries/saving/save-query-modal/save-query-modal.tsx", "diffHunk": "@@ -57,16 +67,31 @@ const SaveQueryModal: React.FC<Props> = (props) => {\n                 props.toggleApply(false);\n         }\n         if(queryName.length > 0 && queryName.trim().length !== 0){\n-            props.saveNewQuery(queryName, queryDescription, facets);\n-            props.setSaveNewIconVisibility(false);\n-            props.setSaveModalVisibility();\n-\n+            try {\n+                await props.saveNewQuery(queryName, queryDescription, facets);\n+                props.setSaveNewIconVisibility(false);\n+                props.setSaveModalVisibility();\n+                applySaveQuery(searchOptions.query, searchOptions.entityTypeIds, facets, queryName);\n+                props.setCurrentQueryName(queryName);\n+                props.setCurrentQueryDescription(queryDescription);\n+            } catch (error) {\n+                if (error.response.status === 400) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg4NDYzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0OToxMlrOGW_kIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0OToxMlrOGW_kIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MzI5Ng==", "bodyText": "A general technique for making queries easier to read is to put each query on a separate line - e.g.\ncts.andQuery([\n  cts.collectionQuery(\"..\"),\n  cts.jsonPropertyValueQuery(...),\n  cts.jsonPropertyValueQuery(...)\n])", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426763296", "createdAt": "2020-05-18T16:49:12Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs", "diffHunk": "@@ -43,7 +43,15 @@ if (queryDocument.savedQuery.propertiesToDisplay == null || queryDocument.savedQ\n     ds.throwBadRequest(\"Entity type properties to be displayed cannot be empty\");\n }\n \n-let id = queryDocument.savedQuery.id;\n+const id = queryDocument.savedQuery.id;\n+const positiveQuery = cts.andQuery([cts.collectionQuery(\"http://marklogic.com/data-hub/saved-query\"), cts.jsonPropertyValueQuery(\"name\", queryDocument.savedQuery.name),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg4ODQyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MDoxOFrOGW_mgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MDoxOFrOGW_mgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MzkwNw==", "bodyText": "I think this message needs to capture the fact that the current user already has the query; otherwise, the user could interpret this message as implying that no two users can use the same named queries.\nI recommend: \"You already have a saved query with a name of ${the name}\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426763907", "createdAt": "2020-05-18T16:50:18Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs", "diffHunk": "@@ -43,7 +43,15 @@ if (queryDocument.savedQuery.propertiesToDisplay == null || queryDocument.savedQ\n     ds.throwBadRequest(\"Entity type properties to be displayed cannot be empty\");\n }\n \n-let id = queryDocument.savedQuery.id;\n+const id = queryDocument.savedQuery.id;\n+const positiveQuery = cts.andQuery([cts.collectionQuery(\"http://marklogic.com/data-hub/saved-query\"), cts.jsonPropertyValueQuery(\"name\", queryDocument.savedQuery.name),\n+    cts.jsonPropertyValueQuery(\"owner\", xdmp.getCurrentUser())]);\n+const negativeQuery = cts.documentQuery(\"/saved-queries/\" + id + \".json\");\n+const queryNameExists = cts.exists(cts.andNotQuery(positiveQuery, negativeQuery));\n+if(queryNameExists) {\n+    ds.throwBadRequest(`A query already exists with a name of ${queryDocument.savedQuery.name}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg5MzMzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/saveSavedQueryTest.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MToyM1rOGW_pRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MToyM1rOGW_pRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2NDYxMw==", "bodyText": "I think this is an indicator that multiple test modules should be created. That's because marklogic-unit-test has built-in support for \"do something before every test\" - just make a setup.xqy module.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426764613", "createdAt": "2020-05-18T16:51:23Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/saveSavedQueryTest.sjs", "diffHunk": "@@ -38,45 +40,150 @@ var saveQuery = JSON.stringify({\n   }\n });\n \n-function invokeService(saveQuery) {\n-  return fn.head(xdmp.invoke(\n-      \"/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs\",\n-      {\n-        \"saveQuery\": saveQuery\n-      }\n-  ));\n+function beforeEach() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg5Njc0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/saveSavedQueryTest.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MjoxM1rOGW_rRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MjoxM1rOGW_rRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2NTEyNw==", "bodyText": "Just call \"reset-hub()\" in data-hub-test-helper.xqy instead. That ensures that everything but the \"hub-core-artifact\" documents are retained.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426765127", "createdAt": "2020-05-18T16:52:13Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/saveSavedQueryTest.sjs", "diffHunk": "@@ -38,45 +40,150 @@ var saveQuery = JSON.stringify({\n   }\n });\n \n-function invokeService(saveQuery) {\n-  return fn.head(xdmp.invoke(\n-      \"/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs\",\n-      {\n-        \"saveQuery\": saveQuery\n-      }\n-  ));\n+function beforeEach() {\n+  declareUpdate();\n+  xdmp.collectionDelete(\"http://marklogic.com/data-hub/saved-query\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4138, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}