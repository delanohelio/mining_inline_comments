{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjA5Mjk1", "number": 4982, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0NToyN1rOFEHgSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1ODowNVrOFEH0cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODYxNTc3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/detail-page-non-entity/detail-page-non-entity.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0NToyN1rOIEFYnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo0NToyN1rOIEFYnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1MzQzOQ==", "bodyText": "It would be better if we place the custom response in a separate file, may be under \"assets/mock-data/explore/\" in a response file specifically for Non-Entity documents.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4982#discussion_r541153439", "createdAt": "2020-12-11T18:45:27Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/detail-page-non-entity/detail-page-non-entity.test.tsx", "diffHunk": "@@ -1,12 +1,62 @@\n import React from \"react\";\n-import {render} from \"@testing-library/react\";\n+import {render, fireEvent, waitForElement} from \"@testing-library/react\";\n import {BrowserRouter as Router} from \"react-router-dom\";\n import DetailPageNonEntity from \"./detail-page-non-entity\";\n import testData from \"../../assets/mock-data/explore/Non-entity-document-payload\";\n import userEvent from \"@testing-library/user-event\";\n+import axiosMock from \"axios\";\n+\n+jest.mock(\"axios\");\n \n describe(\"Detail page for non-entity view component\", () => {\n \n+  afterEach(() => {\n+    jest.clearAllMocks();\n+  });\n+\n+  const response =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d41c94f256ca439a6dd63c3f8300a85d3be6e6"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODY0MzUzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/detail-page-non-entity/detail-page-non-entity.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1Mjo0M1rOIEFonA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1Mjo0M1rOIEFonA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1NzUzMg==", "bodyText": "Any axios call should be moved out to the /api folder (may be create a new file for explorer there ?) and then the function can be imported here, to follow similar code pattern as other components.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4982#discussion_r541157532", "createdAt": "2020-12-11T18:52:43Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/detail-page-non-entity/detail-page-non-entity.tsx", "diffHunk": "@@ -173,6 +174,34 @@ const DetailPageNonEntity = (props) => {\n     }\n   };\n \n+  const download = async () => {\n+    try {\n+      const response = await axios({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d41c94f256ca439a6dd63c3f8300a85d3be6e6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODY1NDQ4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1NTozOFrOIEFvIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1NTozOFrOIEFvIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE1OTIwMg==", "bodyText": "This can also be moved to the same \"non-entity-document-response.tsx\" file that we can create to store the previous response , as mentioned in my earlier comment", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4982#discussion_r541159202", "createdAt": "2020-12-11T18:55:38Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.test.tsx", "diffHunk": "@@ -3,9 +3,80 @@ import {render, fireEvent, waitForElement} from \"@testing-library/react\";\n import {entitySearch} from \"../../assets/mock-data/explore/entity-search\";\n import {BrowserRouter as Router} from \"react-router-dom\";\n import RecordCardView from \"./record-view\";\n+import axiosMock from \"axios\";\n+import {MemoryRouter} from \"react-router-dom\";\n+import {SearchContext} from \"../../util/search-context\";\n+\n+jest.mock(\"axios\");\n \n describe(\"Raw data card view component\", () => {\n \n+  const defaultSearchOptions = {\n+    query: \"\",\n+    entityTypeIds: [],\n+    nextEntityType: \"\",\n+    start: 1,\n+    pageNumber: 1,\n+    pageLength: 20,\n+    pageSize: 20,\n+    selectedFacets: {},\n+    maxRowsPerPage: 100,\n+    selectedQuery: \"select a query\",\n+    zeroState: false,\n+    manageQueryModal: false,\n+    selectedTableProperties: [],\n+    view: null,\n+    sortOrder: [],\n+    database: \"final\",\n+  };\n+\n+  const response =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d41c94f256ca439a6dd63c3f8300a85d3be6e6"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODY2NzM5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1ODowNVrOIEF3AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODo1ODowNVrOIEF3AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE2MTIxNw==", "bodyText": "Same comment as above. Moving this axios call to /api folder would make it reusable at both the places.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4982#discussion_r541161217", "createdAt": "2020-12-11T18:58:05Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.tsx", "diffHunk": "@@ -133,6 +134,34 @@ const RecordCardView = (props) => {\n     return linkObject;\n   };\n \n+  const download = async (docUri) => {\n+    try {\n+      const response = await axios({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d41c94f256ca439a6dd63c3f8300a85d3be6e6"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3039, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}