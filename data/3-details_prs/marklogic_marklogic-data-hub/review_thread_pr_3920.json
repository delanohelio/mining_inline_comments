{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0Mjc0OTY5", "number": 3920, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxOTowOToxN1rOD59Prg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzowMToxMlrOD6HcHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDk4ODYyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-es.sjs", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxOTowOToxN1rOGRhfOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTozNTo1OVrOGRmVTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyNzY0MA==", "bodyText": "Thoughts on parsing this out instead of doing a query? I'm just thinking that for mapping 1 million docs, this means 1 million additional triple lookups.\nI've also tried to start a naming convention in entity-lib.sjs where \"find\" indicates that a function will do a query, and \"get\" indicates that a function will not do a query. I've found this to be helpful on previous projects, though of course this is just one of dozens of DH libraries. But I do think it's a helpful way so readers can quickly detect where queries occur when analyzing code for performance.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3920#discussion_r421027640", "createdAt": "2020-05-06T19:09:17Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-es.sjs", "diffHunk": "@@ -121,8 +121,23 @@ function getRefEntityIdentifiers(entityIRI, entityInfo, prop) {\n   return refEntityId;\n }\n \n+function getEntityServiceTitle(iri) {\n+  if (!(iri instanceof sem.iri)) {\n+    iri = sem.iri(iri);\n+  }\n+  const triple = fn.head(cts.triples(iri,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b798f1a0621e256fa8e771ed5c845c7cafe8f55"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5NzIxMA==", "bodyText": "@rjrudin I'm trying to recall, did we add validation to the entity title to ensure we don't have spaces and other things that potentially require knowing the right decoding rules to get the value from the URI? If we have that, I don't have an issue with parsing it from the IRI.\nI can also make some adjustments to limit the triples query to the models and cache the value for the duration of a batch/transaction.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3920#discussion_r421097210", "createdAt": "2020-05-06T21:15:42Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-es.sjs", "diffHunk": "@@ -121,8 +121,23 @@ function getRefEntityIdentifiers(entityIRI, entityInfo, prop) {\n   return refEntityId;\n }\n \n+function getEntityServiceTitle(iri) {\n+  if (!(iri instanceof sem.iri)) {\n+    iri = sem.iri(iri);\n+  }\n+  const triple = fn.head(cts.triples(iri,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyNzY0MA=="}, "originalCommit": {"oid": "8b798f1a0621e256fa8e771ed5c845c7cafe8f55"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwNzAyMQ==", "bodyText": "We do have validation in the new model endpoints in 5.3, but of course that won't impact existing entity models. Though since we'll have docs telling people how to upgrade their entity models for HC and 5.3, we could tell them to ensure their titles conform to the validation rules in 5.3.\nentity-lib.sjs has a function too for doing the parsing - getEntityTypeIdParts .", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3920#discussion_r421107021", "createdAt": "2020-05-06T21:35:59Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-es.sjs", "diffHunk": "@@ -121,8 +121,23 @@ function getRefEntityIdentifiers(entityIRI, entityInfo, prop) {\n   return refEntityId;\n }\n \n+function getEntityServiceTitle(iri) {\n+  if (!(iri instanceof sem.iri)) {\n+    iri = sem.iri(iri);\n+  }\n+  const triple = fn.head(cts.triples(iri,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAyNzY0MA=="}, "originalCommit": {"oid": "8b798f1a0621e256fa8e771ed5c845c7cafe8f55"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjY1ODg3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNzowMToxMlrOGRw-pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjo1MDoyOFrOGSHbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4MTQ0NQ==", "bodyText": "Shouldnt the default collection be both entityType title and stepName to be consistent with pre 5.3?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3920#discussion_r421281445", "createdAt": "2020-05-07T07:01:12Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java", "diffHunk": "@@ -166,7 +166,7 @@ public void testMappingSettings() {\n         // Check for defaults\n         assertEquals(\"TestCustomerMapping\", result.get(\"artifactName\").asText());\n         assertEquals(1, result.get(\"collections\").size());\n-        assertEquals(\"default-mapping\", result.get(\"collections\").get(0).asText());\n+        assertEquals(\"Customer\", result.get(\"collections\").get(0).asText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4fa171b79a3a05e5f024a9a0e25c408bf0d7f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzMzUxNA==", "bodyText": "\"default-mapping\" is technically the step definition name, though I don't think it has any meaning other than to be a sensible default for a collection for mapped documents. If the entityType is used as the sensible default, then I don't see any reason nor meaning in the step definition name being used as a default collection too.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3920#discussion_r421533514", "createdAt": "2020-05-07T14:09:05Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java", "diffHunk": "@@ -166,7 +166,7 @@ public void testMappingSettings() {\n         // Check for defaults\n         assertEquals(\"TestCustomerMapping\", result.get(\"artifactName\").asText());\n         assertEquals(1, result.get(\"collections\").size());\n-        assertEquals(\"default-mapping\", result.get(\"collections\").get(0).asText());\n+        assertEquals(\"Customer\", result.get(\"collections\").get(0).asText());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4MTQ0NQ=="}, "originalCommit": {"oid": "ae4fa171b79a3a05e5f024a9a0e25c408bf0d7f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4NjE1OA==", "bodyText": "I was looking for \"TestCustomerMapping\" and agree that \"default-mapping\" shouldnt be used as a default collection.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3920#discussion_r421586158", "createdAt": "2020-05-07T15:17:09Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java", "diffHunk": "@@ -166,7 +166,7 @@ public void testMappingSettings() {\n         // Check for defaults\n         assertEquals(\"TestCustomerMapping\", result.get(\"artifactName\").asText());\n         assertEquals(1, result.get(\"collections\").size());\n-        assertEquals(\"default-mapping\", result.get(\"collections\").get(0).asText());\n+        assertEquals(\"Customer\", result.get(\"collections\").get(0).asText());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4MTQ0NQ=="}, "originalCommit": {"oid": "ae4fa171b79a3a05e5f024a9a0e25c408bf0d7f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTY0OTI0OQ==", "bodyText": "@bsrikan added the step name to the default collections.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3920#discussion_r421649249", "createdAt": "2020-05-07T16:50:28Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/MappingControllerTest.java", "diffHunk": "@@ -166,7 +166,7 @@ public void testMappingSettings() {\n         // Check for defaults\n         assertEquals(\"TestCustomerMapping\", result.get(\"artifactName\").asText());\n         assertEquals(1, result.get(\"collections\").size());\n-        assertEquals(\"default-mapping\", result.get(\"collections\").get(0).asText());\n+        assertEquals(\"Customer\", result.get(\"collections\").get(0).asText());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTI4MTQ0NQ=="}, "originalCommit": {"oid": "ae4fa171b79a3a05e5f024a9a0e25c408bf0d7f4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4106, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}