{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzI1NTIx", "number": 4102, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowMDowNlrOEGB1gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzowMDoxOFrOEHLp_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzU2OTkyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowMDowNlrOGkky_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowMDowNlrOGkky_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNDc5Nw==", "bodyText": "It'll help a lot to define method comments here that define currentProperty as an object along with the expected keys in that object, which I believe are propertyPath and datatype. Otherwise, I think a reader would not know if \"currentProperty\" is simply a property name/path or a complex object.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441004797", "createdAt": "2020-06-16T17:00:06Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -98,13 +104,19 @@ function buildPropertyMetadata(parentPropertyName, entityModel, entityName) {\n       propertyMetadata[\"properties\"] = buildPropertyMetadata(propertyMetadata[\"propertyPath\"], entityModel, entityName);\n     }\n     allPropertyMetadata.push(propertyMetadata);\n+\n+    if(selectedProperties && selectedProperties.includes(propertyMetadata.propertyPath)) {\n+      selectedPropertyMetadata.push(propertyMetadata);\n+    }\n   }\n   return allPropertyMetadata;\n }\n \n-function getPropertyValues(currentProperty, entityInstance) {\n+// Helper function used by getPropertyValuesFromInstance to fetch property values from a propertyPath\n+function getPropertyPathValues(currentProperty, entityInstance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzU4MjMyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowMzo0OVrOGkk7JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowMzo0OVrOGkk7JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNjg4NQ==", "bodyText": "Let's make these parameters that are passed to functions instead of them being library-level variables. That makes the scope of functions easier to understand, as they won't be depending on library-level variables where it's not clear when the state of those variables is modified.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441006885", "createdAt": "2020-06-16T17:03:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -19,24 +19,28 @@ const ds = require(\"/data-hub/5/data-services/ds-utils.sjs\");\n // TODO Will move this to /data-hub/5/entities soon\n const entityLib = require(\"/data-hub/5/impl/entity-lib.sjs\");\n \n+let selectedPropertyMetadata = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzU4NjQzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNTowMFrOGkk93Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNTowMFrOGkk93Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNzU4MQ==", "bodyText": "This naming is confusing - the only time we say \"instance\" is when referring to an \"entity instance\". Is this really a \"value instance\", or simply \"property value\"?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441007581", "createdAt": "2020-06-16T17:05:00Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -141,6 +153,81 @@ function getPropertyValues(currentProperty, entityInstance) {\n   return resultObject;\n }\n \n+// This function fetches the appropriate instance property values for first level simple, structured property paths and\n+// other levels of structured entity properties from the propertyPath.\n+function getPropertyValuesFromInstance(currentProperty, entityInstance) {\n+  let resultObject = {};\n+  resultObject.propertyPath = currentProperty.propertyPath;\n+\n+  if(Array.isArray(entityInstance)) {\n+    let propertyValuesArray = [];\n+    entityInstance.forEach((instance) => {\n+      let propertyValue = getPropertyPathValues(currentProperty, instance).propertyValue;\n+      if(Array.isArray(propertyValue)) {\n+        propertyValue.forEach((propertyValue) => {\n+          propertyValuesArray.push(propertyValue);\n+        });\n+      } else {\n+        propertyValuesArray.push(propertyValue);\n+      }\n+    });\n+    resultObject.propertyValue = propertyValuesArray;\n+  } else {\n+    resultObject.propertyValue =  getPropertyPathValues(currentProperty, entityInstance).propertyValue;\n+  }\n+  return resultObject;\n+}\n+\n+// This function fetches the appropriate instance for first level simple, structured property paths and other levels of\n+// structured entity properties from the propertyPath.\n+function getInstanceFromPropertyPath(currentProperty, entityInstance) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzU5NTc3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNzozN1rOGklD9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNzozN1rOGklD9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwOTE0Mg==", "bodyText": "This raises the same question above - an entity instance is always an object, it'll never be an array. So what is this variable actually referring to?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r441009142", "createdAt": "2020-06-16T17:07:37Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -141,6 +153,81 @@ function getPropertyValues(currentProperty, entityInstance) {\n   return resultObject;\n }\n \n+// This function fetches the appropriate instance property values for first level simple, structured property paths and\n+// other levels of structured entity properties from the propertyPath.\n+function getPropertyValuesFromInstance(currentProperty, entityInstance) {\n+  let resultObject = {};\n+  resultObject.propertyPath = currentProperty.propertyPath;\n+\n+  if(Array.isArray(entityInstance)) {\n+    let propertyValuesArray = [];\n+    entityInstance.forEach((instance) => {\n+      let propertyValue = getPropertyPathValues(currentProperty, instance).propertyValue;\n+      if(Array.isArray(propertyValue)) {\n+        propertyValue.forEach((propertyValue) => {\n+          propertyValuesArray.push(propertyValue);\n+        });\n+      } else {\n+        propertyValuesArray.push(propertyValue);\n+      }\n+    });\n+    resultObject.propertyValue = propertyValuesArray;\n+  } else {\n+    resultObject.propertyValue =  getPropertyPathValues(currentProperty, entityInstance).propertyValue;\n+  }\n+  return resultObject;\n+}\n+\n+// This function fetches the appropriate instance for first level simple, structured property paths and other levels of\n+// structured entity properties from the propertyPath.\n+function getInstanceFromPropertyPath(currentProperty, entityInstance) {\n+  let splitPropertyNames = currentProperty.propertyPath.split(\".\");\n+  splitPropertyNames.pop();\n+\n+  if(splitPropertyNames.length > 0) {\n+    splitPropertyNames.forEach((propertyName) => {\n+      let propertyInstanceArray = [];\n+      if(Array.isArray(entityInstance)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e6bbeb72e57f9e8c00e688d8ffc77b240d7ac2"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTY2Mjc0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1OTozM1rOGmblDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzoxMToyOVrOGmb4yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDkyNg==", "bodyText": "This line can be deleted, right?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442950926", "createdAt": "2020-06-19T16:59:33Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -60,19 +66,21 @@ function addPropertiesToSearchResponse(entityName, searchResponse) {\n       }\n     }\n   });\n-\n   // Make it easy for the client to know which property names were used, and which ones exist\n+  // searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6915e63bb518f55aa604debca6ef708c37e1d85c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1NTk3Ng==", "bodyText": "I will remove this. Thanks", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442955976", "createdAt": "2020-06-19T17:11:29Z", "author": {"login": "rahulvudutala"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -60,19 +66,21 @@ function addPropertiesToSearchResponse(entityName, searchResponse) {\n       }\n     }\n   });\n-\n   // Make it easy for the client to know which property names were used, and which ones exist\n+  // searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MDkyNg=="}, "originalCommit": {"oid": "6915e63bb518f55aa604debca6ef708c37e1d85c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTY2NDYyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzowMDoxOFrOGmbmTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzoxMDo1NVrOGmb3sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MTI0Nw==", "bodyText": "What does \"granular\" mean in this context? Is it really \"selectedPropertyMetadata\"?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442951247", "createdAt": "2020-06-19T17:00:18Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -60,19 +66,21 @@ function addPropertiesToSearchResponse(entityName, searchResponse) {\n       }\n     }\n   });\n-\n   // Make it easy for the client to know which property names were used, and which ones exist\n+  // searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;\n   searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;\n   searchResponse.entityPropertyDefinitions = propertyMetadata;\n }\n \n-function buildPropertyMetadata(parentPropertyName, entityModel, entityName) {\n+// This function builds the logical entityType property metadata for all entityType properties from an entityModel.\n+function buildAllMetadata(parentPropertyName, entityModel, entityName) {\n   const entityType = entityModel.definitions[entityName];\n   if (!entityType) {\n     ds.throwServerError(\"Could not build property metadata; could not find entity type with name: \" + entityName);\n   }\n \n-  const allPropertyMetadata = [];\n+  const allPropertiesMetadata = [];\n+  let granularPropertyMetadata = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6915e63bb518f55aa604debca6ef708c37e1d85c"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1NTY5OA==", "bodyText": "{ \"propertyPath\": \"billing.zip.plusFour\", \"propertyLabel\": \"plusFour\", \"datatype\": \"string\", \"multiple\": false }\nThe parent structure from where it is referred to is ignored. But its child properties do exist in the object if the object has them", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4102#discussion_r442955698", "createdAt": "2020-06-19T17:10:55Z", "author": {"login": "rahulvudutala"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -60,19 +66,21 @@ function addPropertiesToSearchResponse(entityName, searchResponse) {\n       }\n     }\n   });\n-\n   // Make it easy for the client to know which property names were used, and which ones exist\n+  // searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;\n   searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;\n   searchResponse.entityPropertyDefinitions = propertyMetadata;\n }\n \n-function buildPropertyMetadata(parentPropertyName, entityModel, entityName) {\n+// This function builds the logical entityType property metadata for all entityType properties from an entityModel.\n+function buildAllMetadata(parentPropertyName, entityModel, entityName) {\n   const entityType = entityModel.definitions[entityName];\n   if (!entityType) {\n     ds.throwServerError(\"Could not build property metadata; could not find entity type with name: \" + entityName);\n   }\n \n-  const allPropertyMetadata = [];\n+  const allPropertiesMetadata = [];\n+  let granularPropertyMetadata = {};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk1MTI0Nw=="}, "originalCommit": {"oid": "6915e63bb518f55aa604debca6ef708c37e1d85c"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4067, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}