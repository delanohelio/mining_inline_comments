{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODg2MDYz", "number": 3695, "title": "DHFPROD-4519: Move job-info under models endpoint", "bodyText": "/api/jobs is now /api/models/job-info\n/api/jobs/models/{modelName} is now /api/models/{modelName}/job-info\nIt makes more sense for job info to be part of models rather than /jobs as the job info is for the model.\nThis will also preemptively resolve conflicts when we merge the feature/DHFPROD-4417 branch as oneui now has the jobs endpoint that deals with the job documents.", "createdAt": "2020-03-13T17:06:31Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695", "merged": true, "mergeCommit": {"oid": "7686b929ba69836ccbcfcf9ef592cc8b837d5612"}, "closed": true, "closedAt": "2020-03-16T19:25:15Z", "author": {"login": "akshaysonvane"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNFTOGgH2gAyMzg3ODg2MDYzOmQzNDZlZjE0MzhlOTA3NzBkODEzYTY3MjAxNTRmY2I2NGJmMzRmZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOTM7EAFqTM3NTUxOTMzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d346ef1438e90770d813a6720154fcb64bf34fdb", "author": {"user": {"login": "akshaysonvane", "name": "Akshay Sonvane"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d346ef1438e90770d813a6720154fcb64bf34fdb", "committedDate": "2020-03-13T00:37:37Z", "message": "DHFPROD-4519: Move job-info under /models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0", "author": {"user": {"login": "akshaysonvane", "name": "Akshay Sonvane"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0", "committedDate": "2020-03-13T16:32:04Z", "message": "DHFPROD-4519: Update mocks with new job-info endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDczMjU1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#pullrequestreview-374473255", "createdAt": "2020-03-13T17:11:15Z", "commit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxMToxNVrOF2L00Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxNjo0N1rOF2MASA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2MTE2OQ==", "bodyText": "I agree with including this here, as this is job stuff that's specific to models, as opposed to job stuff that is global to a project.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392361169", "createdAt": "2020-03-13T17:11:15Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "diffHunk": "@@ -60,4 +62,18 @@ ModelManager modelManager() {\n         JsonNode json = modelManager.getModel(modelName);\n         return new ResponseEntity<>(json, HttpStatus.OK);\n     }\n+\n+    @RequestMapping(value = \"/job-info\", method = RequestMethod.GET)\n+    @ResponseBody\n+    public ResponseEntity<?> getLatestJobInfoForAllModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2MTkwMQ==", "bodyText": "One tweak I'd make because I like single-line methods in a controller - no need to change now, but I'd just do this:\nreturn new ResponseEntity<>(modelManager.getLatestJobInfoForAllModels(), HttpStatus.OK);\n\nAnd since I'm really lazy, I'd have an AbstractController class with generic reusable methods, such as one that would let me do this here instead:\nreturn ok(modelManager.getLatestJobInfoForAllModels());", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392361901", "createdAt": "2020-03-13T17:12:42Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "diffHunk": "@@ -60,4 +62,18 @@ ModelManager modelManager() {\n         JsonNode json = modelManager.getModel(modelName);\n         return new ResponseEntity<>(json, HttpStatus.OK);\n     }\n+\n+    @RequestMapping(value = \"/job-info\", method = RequestMethod.GET)\n+    @ResponseBody\n+    public ResponseEntity<?> getLatestJobInfoForAllModels() {\n+        List<JsonNode> modelList = modelManager.getLatestJobInfoForAllModels();\n+        return new ResponseEntity<>(modelList, HttpStatus.OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NDEwNA==", "bodyText": "Why would the user not be authorized? I'm wondering more generally - why would we call this method if the user isn't authorized? This seems like something we'd want to handle via authorities - I think Spring Security has a method for checking this programmatically so an exception isn't thrown right away - e.g. https://stackoverflow.com/questions/3021200/how-to-check-hasrole-in-java-code-with-spring-security .\nI think this needs to be changed because if this exception occurs for some other reason, we don't necessarily want to just log it and move on.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392364104", "createdAt": "2020-03-13T17:16:47Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/managers/ModelManager.java", "diffHunk": "@@ -154,4 +157,43 @@ public JsonNode getModel(String modelName) {\n \n         return handle.get();\n     }\n+\n+    /**\n+     * Get latest job info for specified model\n+     *\n+     * @param modelName Name of the entity model\n+     * @return - a JsonNode containing job info\n+     */\n+    public JsonNode getLatestJobInfo(String modelName) {\n+        return getJobInfoFromDB(finalDataServiceClient, modelName);\n+    }\n+\n+    /**\n+     * Get latest job info for all models\n+     *\n+     * @return - a list of JsonNode containing job info\n+     */\n+    public List<JsonNode> getLatestJobInfoForAllModels() {\n+        return getModelNames()\n+            .stream()\n+            .map(s -> getJobInfoFromDB(finalDataServiceClient, s))\n+            .filter(Objects::nonNull)\n+            .collect(Collectors.toList());\n+    }\n+\n+    JsonNode getJobInfoFromDB(DatabaseClient dbClient, String modelName) {\n+        JsonNode node = null;\n+        try {\n+            node = JobInfo.on(dbClient).getLatestJobData(modelName);\n+        }\n+        catch (MarkLogicServerException e) {\n+            /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NjY0MjU0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#pullrequestreview-374664254", "createdAt": "2020-03-13T23:13:51Z", "commit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3029f5529211221da4ad83bd1e2a2403857c99fd", "author": {"user": {"login": "akshaysonvane", "name": "Akshay Sonvane"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3029f5529211221da4ad83bd1e2a2403857c99fd", "committedDate": "2020-03-15T22:06:39Z", "message": "DHFPROD-4519: Use shortcut for creating ResponseEntity object"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NTE5MzM1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#pullrequestreview-375519335", "createdAt": "2020-03-16T19:23:20Z", "commit": {"oid": "3029f5529211221da4ad83bd1e2a2403857c99fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3158, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}