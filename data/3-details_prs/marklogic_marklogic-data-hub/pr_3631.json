{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNTUzNTg1", "number": 3631, "title": "DHFPROD-4169: Map JSON source data to entity type", "bodyText": "Contains the changes for all the subtasks including DHFPROD-4311, DHFPROD-4312 and DHFPROD-4313", "createdAt": "2020-03-02T19:02:19Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631", "merged": true, "mergeCommit": {"oid": "4071644d53f843a3123bb8fcb95f80abcd28330f"}, "closed": true, "closedAt": "2020-03-05T20:32:28Z", "author": {"login": "xnikhil08"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJzEargBqjMwODkzNzgxNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKxAPQAFqTM2OTg2NjMwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b10ca8597df49bddd644a38c4e876430423f1c9f", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b10ca8597df49bddd644a38c4e876430423f1c9f", "committedDate": "2020-03-02T18:59:14Z", "message": "DHFPROD-4169: Few changes suggested by Julia and added unit test for source to entity map"}, "afterCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e8280a4809b609258a8cfd4347d48e3e5c27c60e", "committedDate": "2020-03-02T19:40:51Z", "message": "DHFPROD-4169: Few changes suggested by Julia and added unit test for source to entity map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDg2MjY0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-367486264", "createdAt": "2020-03-02T19:59:34Z", "commit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTo1OTozNFrOFwtSTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoyOTozNFrOFwuKzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxNzkzMg==", "bodyText": "I recommend naming this \"EntityTypes\", assuming that this page will show entity types vs entity instances. I think this is an area where it's not clear which one is meant.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386617932", "createdAt": "2020-03-02T19:59:34Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/App.tsx", "diffHunk": "@@ -103,7 +104,7 @@ const App: React.FC<Props> = ({history, location}) => {\n           <LoadData/>\n         </PrivateRoute>\n         <PrivateRoute path=\"/entity-tiles\" exact>\n-          <EntityTiles/>\n+          <Entities/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxODA3Nw==", "bodyText": "Should use \"entityTypeTitle\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386618077", "createdAt": "2020-03-02T19:59:51Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/entity-tiles.tsx", "diffHunk": "@@ -47,7 +41,25 @@ const EntityTiles: React.FC = () => {\n           } catch (error) {\n               let message = error;\n               console.log('Error while fetching mapping artifacts', message);\n-              //handleError(error);\n+          }\n+    }\n+\n+    const getMappingArtifactByMapName = async (entityName,mapName) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxODYzOA==", "bodyText": "This is a \"mapping\", right? \"entArt\" implies it's an entity model artifact, but the URL indicates it's a mapping.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386618638", "createdAt": "2020-03-02T20:00:52Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/entity-tiles.tsx", "diffHunk": "@@ -47,7 +41,25 @@ const EntityTiles: React.FC = () => {\n           } catch (error) {\n               let message = error;\n               console.log('Error while fetching mapping artifacts', message);\n-              //handleError(error);\n+          }\n+    }\n+\n+    const getMappingArtifactByMapName = async (entityName,mapName) => {\n+        try {\n+            let response = await axios.get(`/api/artifacts/mapping/${mapName}`);\n+            \n+            if (response.status === 200) {\n+                let entArt = response.data;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyMTUyMQ==", "bodyText": "If these console.log messages are going to be retained, I recommend some consistency in them - there's \"Mapping Artifacts\", \"MappingArtifact\", \"Mapping artifact\", and \"mapping artifact\". I believe the term \"artifact\" is redundant here and doesn't need to be used - \"mapping\" should suffice, just like \"step definition\" and \"flow\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386621521", "createdAt": "2020-03-02T20:07:06Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/entity-tiles.tsx", "diffHunk": "@@ -63,28 +75,47 @@ const EntityTiles: React.FC = () => {\n             } \n           } catch (error) {\n               let message = error.response.data.message;\n-              console.log('Error while deleting load data artifact.', message);\n+              console.log('Error while deleting mapping artifact.', message);\n               setIsLoading(false);\n-              //handleError(error);\n           }\n     }\n \n     const createMappingArtifact = async (mapObj) => {\n-        console.log('Create API Called!')\n         try {\n             setIsLoading(true);\n       \n             let response = await axios.post(`/api/artifacts/mapping/${mapObj.name}`, mapObj);\n             if (response.status === 200) {\n-              console.log('Create/Update LoadDataArtifact API Called successfully!')\n+              console.log('Create MappingArtifact API Called successfully!')\n               setIsLoading(false);\n+              return true;\n+            } else {\n+                return false;\n             }\n           }\n           catch (error) {\n-            let message = error.response.data.message;\n-            console.log('Error While creating the Load Data artifact!', message)\n+            let message = error;\n+            console.log('Error While creating the Mapping artifact!', message)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyMjAyOQ==", "bodyText": "Can this be \"mapping\" instead of \"mapObj\"? \"mapObj\" makes me think it's different from a \"mapping\" in terms of what data it holds. If they're the same, let's only use one term, that's simpler.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386622029", "createdAt": "2020-03-02T20:08:09Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/entity-tiles.tsx", "diffHunk": "@@ -63,28 +75,47 @@ const EntityTiles: React.FC = () => {\n             } \n           } catch (error) {\n               let message = error.response.data.message;\n-              console.log('Error while deleting load data artifact.', message);\n+              console.log('Error while deleting mapping artifact.', message);\n               setIsLoading(false);\n-              //handleError(error);\n           }\n     }\n \n     const createMappingArtifact = async (mapObj) => {\n-        console.log('Create API Called!')\n         try {\n             setIsLoading(true);\n       \n             let response = await axios.post(`/api/artifacts/mapping/${mapObj.name}`, mapObj);\n             if (response.status === 200) {\n-              console.log('Create/Update LoadDataArtifact API Called successfully!')\n+              console.log('Create MappingArtifact API Called successfully!')\n               setIsLoading(false);\n+              return true;\n+            } else {\n+                return false;\n             }\n           }\n           catch (error) {\n-            let message = error.response.data.message;\n-            console.log('Error While creating the Load Data artifact!', message)\n+            let message = error;\n+            console.log('Error While creating the Mapping artifact!', message)\n             setIsLoading(false);\n-            //handleError(error);\n+            return false;\n+          }\n+    }\n+\n+    const updateMappingArtifact = async (mapObj) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyMzM1OA==", "bodyText": "What does \"entities info\" refer to? I'm guessing it's the entityType? If so, then I think this should be \"entityType={props.entityTypes[entMaps.entityType]}\".\nBut I think \"entMaps\" should be renamed as well to something that's more clear. Based on its usage - it has \"entityType\" and \"artifacts\" as properties - I'm guessing it's a collection of things pertaining to an entityType. Perhaps \"entityCardData\" would be better here, as it seems specific to the data needed to display an entity-specific card?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386623358", "createdAt": "2020-03-02T20:11:03Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/entity-tiles.tsx", "diffHunk": "@@ -95,10 +126,13 @@ const EntityTiles: React.FC = () => {\n             output = <div className={styles.cardView}>\n                 <MappingCard data={entMaps.artifacts}\n                     entityName={entMaps.entityType}\n+                    getMappingArtifactByMapName={getMappingArtifactByMapName}\n                     deleteMappingArtifact={deleteMappingArtifact}\n                     createMappingArtifact={createMappingArtifact}\n-                    canReadWrite={canReadWrite}\n-                    canReadOnly={canReadOnly} />\n+                    updateMappingArtifact={updateMappingArtifact}\n+                    canReadWrite={props.canReadWrite}\n+                    canReadOnly={props.canReadOnly}\n+                    entitiesInfo={props.entitiesInfo[entMaps.entityType]} />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNDM1Mg==", "bodyText": "The user is really constructing a mapping artifact, not an entity. Can we instead say there's a \"source table\" and a \"mapping table\"?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386624352", "createdAt": "2020-03-02T20:13:04Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -1,30 +1,47 @@\n-import React, { CSSProperties, useState } from 'react';\n+import React, { CSSProperties, useState, useEffect } from 'react';\n import styles from './mapping-card.module.scss';\n import {Card, Icon, Tooltip, Row, Col, Modal} from 'antd';\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n import {faTrashAlt} from '@fortawesome/free-regular-svg-icons';\n import sourceFormatOptions from '../../../config/formats.config';\n-import { convertDateFromISO } from '../../../util/conversionFunctions';\n+import { convertDateFromISO, getInitialChars } from '../../../util/conversionFunctions';\n import CreateEditMappingDialog from './create-edit-mapping-dialog/create-edit-mapping-dialog';\n+import SourceToEntityMap from './source-entity-map/source-to-entity-map';\n+import {getResultsByQuery, getDoc} from '../../../util/search-service'\n \n interface Props {\n     data: any;\n     entityName: any;\n+    getMappingArtifactByMapName: any;\n     deleteMappingArtifact: any;\n     createMappingArtifact: any;\n+    updateMappingArtifact: any;\n     canReadOnly: any;\n     canReadWrite: any;\n+    entitiesInfo: any;\n   }\n \n const MappingCard: React.FC<Props> = (props) => {\n     const [newMap, setNewMap] = useState(false);\n     const [title, setTitle] = useState('');\n     const [mapData, setMapData] = useState({});\n+    const [mapName, setMapName] = useState({});\n     const [dialogVisible, setDialogVisible] = useState(false);\n     const [loadArtifactName, setLoadArtifactName] = useState('');\n+    const [mappingVisible, setMappingVisible] = useState(false);\n+    const [sourceData, setSourceData] = useState<any[]>([]);\n+    const [sourceURI,setSourceURI] = useState('');\n+    const [docNotFound, setDocNotFound] = useState(false);\n+\n+    //For Entity table\n+    const [entityData, setEntityData] = useState<any[]>([]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNjA1MQ==", "bodyText": "This seems like implementation details that the GUI shouldn't have to worry about. Could the GUI instead say - Hey middle tier, get me a source document for this step?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386626051", "createdAt": "2020-03-02T20:16:36Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -103,6 +110,142 @@ const MappingCard: React.FC<Props> = (props) => {\n         <span style={{fontSize: '16px'}}>Are you sure you want to delete this?</span>\n         </Modal>;\n \n+\n+    const getSourceData = async (index) => {\n+\n+        let database = props.data[index].sourceDatabase || 'data-hub-STAGING';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNzIzNg==", "bodyText": "I recommend \"entityModel\" instead of \"entitiesInfo\" (though why are there two levels of \"definitions\" here?) and then \"entityTypeTitle\" instead of \"entityName\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386627236", "createdAt": "2020-03-02T20:19:12Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -103,6 +110,142 @@ const MappingCard: React.FC<Props> = (props) => {\n         <span style={{fontSize: '16px'}}>Are you sure you want to delete this?</span>\n         </Modal>;\n \n+\n+    const getSourceData = async (index) => {\n+\n+        let database = props.data[index].sourceDatabase || 'data-hub-STAGING';\n+        let sQuery = props.data[index].sourceQuery;\n+        \n+        try{\n+        let response = await getResultsByQuery(database,sQuery,10, true);\n+          if (response.status === 200) {\n+           setSourceURI(response.data[0].uri);\n+           \n+           fetchSrcDocFromUri(response.data[0].uri);\n+        \n+          }\n+        }\n+        catch(error)  {\n+            let message = error;//.response.data.message;\n+            console.log('Error While loading the source data!', message);\n+            setDocNotFound(true);\n+        }\n+           \n+       \n+    }\n+\n+    const fetchSrcDocFromUri = async (uri) => {\n+        try{\n+            let srcDocResp = await getDoc('STAGING', uri);\n+            if (srcDocResp.status === 200) {\n+                let nestedDoc: any = [];\n+                let docRoot = srcDocResp.data['envelope'] ? srcDocResp.data['envelope']['instance'] : srcDocResp.data;\n+                let sDta = generateNestedDataSource(docRoot,nestedDoc);\n+                //setSourceData(prevState => ([ ...prevState, ...sDta]));\n+                setSourceData([...sDta]);\n+            }\n+            } catch(error)  {\n+                let message = error.response.data.message;\n+                console.log('Error While loading the Doc from URI!', message)\n+                setDocNotFound(true);\n+            }\n+    }\n+\n+\n+    // construct infinitely nested source Data\n+    const generateNestedDataSource = (respData, nestedDoc: Array<any>) => {\n+        \n+        Object.keys(respData).map(key => {\n+            let val = respData[key];\n+            if (val != null && val!= \"\") {\n+   \n+                if (val.constructor.name === \"Object\") {\n+     \n+                    let propty = {\n+                        key: key,\n+                        'children': []\n+                    }\n+\n+                    generateNestedDataSource(val, propty.children);\n+                    nestedDoc.push(propty);\n+\n+                } else if (val.constructor.name === \"Array\") {\n+                    //srcData.push({key : key, val: respData[key]})\n+                    \n+                    val.forEach(obj => {\n+                        if(obj.constructor.name == \"String\"){\n+                          let propty = {\n+                            key: key,\n+                            val: obj\n+                          };\n+                          nestedDoc.push(propty);\n+                        } else {\n+                            let propty = {\n+                                key: key,\n+                                children: []\n+                              };\n+                              \n+                          generateNestedDataSource(obj, propty.children);\n+                          nestedDoc.push(propty);\n+                        }\n+                      });\n+\n+                } else {\n+\n+                    let propty = {\n+                        key: key,\n+                        val: String(val)\n+                      };\n+                    nestedDoc.push(propty);\n+                }\n+\n+            } else {\n+\n+                let propty = {\n+                    key: key,\n+                    val: \"\"\n+                  };\n+                nestedDoc.push(propty);\n+            }\n+        });\n+\n+        return nestedDoc;\n+        \n+        \n+        \n+    }\n+    \n+    \n+    const extractEntityInfoForTable = () => {\n+        let entProps = props.entitiesInfo.definitions.definitions[props.entityName].properties;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNzU1MQ==", "bodyText": "\"EntityData\" sounds like property values from entity instances. But this is really an array of entity type properties, right? So I'd call it \"setEntityTypeProperties\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386627551", "createdAt": "2020-03-02T20:19:50Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -103,6 +110,142 @@ const MappingCard: React.FC<Props> = (props) => {\n         <span style={{fontSize: '16px'}}>Are you sure you want to delete this?</span>\n         </Modal>;\n \n+\n+    const getSourceData = async (index) => {\n+\n+        let database = props.data[index].sourceDatabase || 'data-hub-STAGING';\n+        let sQuery = props.data[index].sourceQuery;\n+        \n+        try{\n+        let response = await getResultsByQuery(database,sQuery,10, true);\n+          if (response.status === 200) {\n+           setSourceURI(response.data[0].uri);\n+           \n+           fetchSrcDocFromUri(response.data[0].uri);\n+        \n+          }\n+        }\n+        catch(error)  {\n+            let message = error;//.response.data.message;\n+            console.log('Error While loading the source data!', message);\n+            setDocNotFound(true);\n+        }\n+           \n+       \n+    }\n+\n+    const fetchSrcDocFromUri = async (uri) => {\n+        try{\n+            let srcDocResp = await getDoc('STAGING', uri);\n+            if (srcDocResp.status === 200) {\n+                let nestedDoc: any = [];\n+                let docRoot = srcDocResp.data['envelope'] ? srcDocResp.data['envelope']['instance'] : srcDocResp.data;\n+                let sDta = generateNestedDataSource(docRoot,nestedDoc);\n+                //setSourceData(prevState => ([ ...prevState, ...sDta]));\n+                setSourceData([...sDta]);\n+            }\n+            } catch(error)  {\n+                let message = error.response.data.message;\n+                console.log('Error While loading the Doc from URI!', message)\n+                setDocNotFound(true);\n+            }\n+    }\n+\n+\n+    // construct infinitely nested source Data\n+    const generateNestedDataSource = (respData, nestedDoc: Array<any>) => {\n+        \n+        Object.keys(respData).map(key => {\n+            let val = respData[key];\n+            if (val != null && val!= \"\") {\n+   \n+                if (val.constructor.name === \"Object\") {\n+     \n+                    let propty = {\n+                        key: key,\n+                        'children': []\n+                    }\n+\n+                    generateNestedDataSource(val, propty.children);\n+                    nestedDoc.push(propty);\n+\n+                } else if (val.constructor.name === \"Array\") {\n+                    //srcData.push({key : key, val: respData[key]})\n+                    \n+                    val.forEach(obj => {\n+                        if(obj.constructor.name == \"String\"){\n+                          let propty = {\n+                            key: key,\n+                            val: obj\n+                          };\n+                          nestedDoc.push(propty);\n+                        } else {\n+                            let propty = {\n+                                key: key,\n+                                children: []\n+                              };\n+                              \n+                          generateNestedDataSource(obj, propty.children);\n+                          nestedDoc.push(propty);\n+                        }\n+                      });\n+\n+                } else {\n+\n+                    let propty = {\n+                        key: key,\n+                        val: String(val)\n+                      };\n+                    nestedDoc.push(propty);\n+                }\n+\n+            } else {\n+\n+                let propty = {\n+                    key: key,\n+                    val: \"\"\n+                  };\n+                nestedDoc.push(propty);\n+            }\n+        });\n+\n+        return nestedDoc;\n+        \n+        \n+        \n+    }\n+    \n+    \n+    const extractEntityInfoForTable = () => {\n+        let entProps = props.entitiesInfo.definitions.definitions[props.entityName].properties;\n+        let entTableTempData: any = [];\n+        entProps.map(prop => {\n+            let propty = {\n+                name : prop.name,\n+                type : prop.datatype\n+            }\n+            entTableTempData.push(propty)\n+        })\n+        setEntityData([...entTableTempData]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyOTM0Mw==", "bodyText": "Is \"Exp\" short for \"Expression\" here? If so, I think since \"mapExpression\" is used below, use \"mapExpression\" here too.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386629343", "createdAt": "2020-03-02T20:23:33Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.module.scss", "diffHunk": "@@ -0,0 +1,214 @@\n+\n+.mapContainer{\n+    //padding: 40px 200px 100px 40px;\n+    //margin-bottom: 100px;\n+    height: 100%;\n+    top: 8vh;\n+    //box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n+}\n+.header{\n+    display:inline-flex;\n+}\n+.headerTitle{\n+    font-size: 1.5em;\n+    width: fit-content;\n+    //border: 1px solid red;\n+}\n+\n+.saveMessage{\n+    //width: fit-content;\n+    border: 1px solid #ff0000;\n+    margin-left: 30em;\n+}\n+.noMessage{\n+    padding: 2.25vh 0vh;\n+}\n+.parentContainer{\n+    display: flex;\n+    flex-direction: row;\n+    padding-bottom: 2vh;\n+    padding-top: 1vh;\n+}\n+\n+.sourceContainer{\n+    width: auto;\n+    height: auto;\n+    flex: 4;\n+    display: flex;\n+    flex-direction: column;\n+    padding-right: 20px;\n+    word-break: break-all;\n+}\n+\n+.sourceTable {\n+    & thead > tr > th {\n+        background-color: #fafafa;\n+        line-height: 2px;\n+      };\n+    & tbody > tr > td {\n+        line-height: 2px;\n+    }\n+}\n+.srcTableRows{\n+    line-height: 1px;\n+}\n+\n+.entityContainer{\n+    width: auto;\n+    flex: 9;\n+    display: flex;\n+    flex-direction: column;\n+    padding-right: 20px;\n+    word-break: break-all;\n+}\n+\n+.entityTable {\n+    & thead > tr > th {\n+        background-color: #fafafa;\n+        line-height: 2px;\n+      };\n+    & tbody > tr > td {\n+        line-height: 2px;\n+        vertical-align: top;\n+    }\n+}\n+\n+.mapExpContainer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyOTU4MQ==", "bodyText": "Since \"source\" is used above, use \"source\" instead of \"src\" for consistency here. I don't think there's ever going to be a reason to abbreviate \"source\" or \"entity\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386629581", "createdAt": "2020-03-02T20:24:03Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.module.scss", "diffHunk": "@@ -0,0 +1,214 @@\n+\n+.mapContainer{\n+    //padding: 40px 200px 100px 40px;\n+    //margin-bottom: 100px;\n+    height: 100%;\n+    top: 8vh;\n+    //box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n+}\n+.header{\n+    display:inline-flex;\n+}\n+.headerTitle{\n+    font-size: 1.5em;\n+    width: fit-content;\n+    //border: 1px solid red;\n+}\n+\n+.saveMessage{\n+    //width: fit-content;\n+    border: 1px solid #ff0000;\n+    margin-left: 30em;\n+}\n+.noMessage{\n+    padding: 2.25vh 0vh;\n+}\n+.parentContainer{\n+    display: flex;\n+    flex-direction: row;\n+    padding-bottom: 2vh;\n+    padding-top: 1vh;\n+}\n+\n+.sourceContainer{\n+    width: auto;\n+    height: auto;\n+    flex: 4;\n+    display: flex;\n+    flex-direction: column;\n+    padding-right: 20px;\n+    word-break: break-all;\n+}\n+\n+.sourceTable {\n+    & thead > tr > th {\n+        background-color: #fafafa;\n+        line-height: 2px;\n+      };\n+    & tbody > tr > td {\n+        line-height: 2px;\n+    }\n+}\n+.srcTableRows{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYzMTY3MQ==", "bodyText": "I recommend renaming \"/api/entities\" to \"/api/entityTypes\" and then using \"entityTypes\" here instead of \"entData\" and \"entitiesInfo\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386631671", "createdAt": "2020-03-02T20:28:10Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/pages/Entities.tsx", "diffHunk": "@@ -0,0 +1,55 @@\n+import React, { useState, useContext, useEffect } from 'react';\n+import { Collapse, Menu } from 'antd';\n+import styles from './Entities.module.scss';\n+import { RolesContext } from '../util/roles';\n+import axios from 'axios'\n+import EntityTiles from '../components/entities/entity-tiles';\n+\n+const Entities: React.FC = () => {\n+\n+    useEffect(() => {\n+        getEntityInfo();\n+    },[]);\n+\n+    const [entitiesInfo, setEntitiesInfo] = useState<any[]>([]);\n+    \n+    //Role based access\n+    const roleService = useContext(RolesContext);\n+    const canReadOnly = roleService.canReadMappings();\n+    const canReadWrite = roleService.canWriteMappings();\n+\n+    const getEntityInfo = async () => {\n+        try {\n+        let response = await axios.get(`/api/entities`);\n+        if(response.status === 200) {\n+            let entData:any = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYzMjM5OA==", "bodyText": "Can this be reworked to accept a flow name and step number? I'd be happy to make the DS endpoint to implement this, as this seems like too much implementation detail in the GUI.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r386632398", "createdAt": "2020-03-02T20:29:34Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/util/search-service.tsx", "diffHunk": "@@ -0,0 +1,32 @@\n+import axios from 'axios'\n+\n+const getResultsByQuery = async (database: string, ctsQuery: string, count: number, urisOnly: boolean) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTcxOTI2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-367571926", "createdAt": "2020-03-02T22:20:10Z", "commit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b76a12317168b411b6094c32024eb04510eb858a", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b76a12317168b411b6094c32024eb04510eb858a", "committedDate": "2020-03-02T23:49:11Z", "message": "DHFPROD-4169: Standardizing naming conventions based on new entity model and Rob's comments"}, "afterCommit": {"oid": "a93b6166c99f788dfb92b6a09ffc6a1284c04a34", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a93b6166c99f788dfb92b6a09ffc6a1284c04a34", "committedDate": "2020-03-02T23:51:22Z", "message": "DHFPROD-4169: Standardizing naming conventions based on new entity model and Rob's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzA2OTQ2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-367706946", "createdAt": "2020-03-03T05:13:44Z", "commit": {"oid": "d232f5cd259ff996d6c38e621c6e50680ef25da8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTkyMjM0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-367992234", "createdAt": "2020-03-03T13:50:33Z", "commit": {"oid": "d232f5cd259ff996d6c38e621c6e50680ef25da8"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzo1MDozM1rOFxGd-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzo1MDozM1rOFxGd-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAzMDUyMA==", "bodyText": "Yes we can revisit later, I may open a ticket to rework this.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#discussion_r387030520", "createdAt": "2020-03-03T13:50:33Z", "author": {"login": "rjrudin"}, "path": "one-ui/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -103,6 +110,142 @@ const MappingCard: React.FC<Props> = (props) => {\n         <span style={{fontSize: '16px'}}>Are you sure you want to delete this?</span>\n         </Modal>;\n \n+\n+    const getSourceData = async (index) => {\n+\n+        let database = props.data[index].sourceDatabase || 'data-hub-STAGING';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyNjA1MQ=="}, "originalCommit": {"oid": "e8280a4809b609258a8cfd4347d48e3e5c27c60e"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4Mjc3ODYw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-368277860", "createdAt": "2020-03-03T19:53:43Z", "commit": {"oid": "6c55842571a8030ab3ea7b58b583567277d15deb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTI0ODk2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-368524896", "createdAt": "2020-03-04T06:10:59Z", "commit": {"oid": "6c55842571a8030ab3ea7b58b583567277d15deb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTM3NDQz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-368937443", "createdAt": "2020-03-04T16:37:35Z", "commit": {"oid": "6c55842571a8030ab3ea7b58b583567277d15deb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7c3faa6830ce5aaec7e2a31b594a378ca2b9350", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d7c3faa6830ce5aaec7e2a31b594a378ca2b9350", "committedDate": "2020-03-04T17:57:30Z", "message": "DHFPROD-4169: Initial layout of Source to Entity Mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ffccc7d98992dadbfb7c890326ba05c801f544a", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/2ffccc7d98992dadbfb7c890326ba05c801f544a", "committedDate": "2020-03-04T17:57:30Z", "message": "DHFPROD-4169: More progress on source to Entity mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "895618bce8a5097f7abc2167709c22ff47a10d68", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/895618bce8a5097f7abc2167709c22ff47a10d68", "committedDate": "2020-03-04T17:57:30Z", "message": "DHFPROD-4169: Adding more changes for the Source Table and Entity Table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0cf5be1e7055de76cf1b7bbc30e5831db4903cd", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d0cf5be1e7055de76cf1b7bbc30e5831db4903cd", "committedDate": "2020-03-04T17:57:30Z", "message": "DHFPROD-4169: More changes for Entity table component."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a299ed090f34564660d535bf05c241f807227554", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a299ed090f34564660d535bf05c241f807227554", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Nested JSON properties support - WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94a531b360493ca49ae20af8b8b318b241b003a6", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/94a531b360493ca49ae20af8b8b318b241b003a6", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Implement support for deeply nested source data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf1bc4f4ca47a06d100f4cd9393c43a80a98e09", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/baf1bc4f4ca47a06d100f4cd9393c43a80a98e09", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Finalizing the nested source data related changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dba0037886675f76d7bd85a5650e46191b53fc5", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/0dba0037886675f76d7bd85a5650e46191b53fc5", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4311: UI: Develop Entity table component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6a4bbd7479f33dac9eba7f63e542993c972d10a", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a6a4bbd7479f33dac9eba7f63e542993c972d10a", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: fixing some bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b775917652eefecb091a3a281b9699aa61e368b", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/0b775917652eefecb091a3a281b9699aa61e368b", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Refractoring UI code for entities to better split the components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b14160c56316ffe535814736cb1e1dc6899c1f1", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4b14160c56316ffe535814736cb1e1dc6899c1f1", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Changes for the sub-task DHFPROD-4312"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ed8ca0078803246335927307565c91167a5e02", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/80ed8ca0078803246335927307565c91167a5e02", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Removing package-lock.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f098022450d68b73243b51c521318c0f3ef143e7", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/f098022450d68b73243b51c521318c0f3ef143e7", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Few changes suggested by Julia and added unit test for source to entity map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b93899dc4e2b3aa486d0eebab6d74b9afe1c71ef", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b93899dc4e2b3aa486d0eebab6d74b9afe1c71ef", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Standardizing naming conventions based on new entity model and Rob's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6309bfbbad355db62486239e2f8c69934eb8129", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c6309bfbbad355db62486239e2f8c69934eb8129", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Remove extra layer of definitions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa996e88e32f39fec29cd3ef98a9e0dfe1a860e0", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/aa996e88e32f39fec29cd3ef98a9e0dfe1a860e0", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Fixing the UI code after middle tier change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c55842571a8030ab3ea7b58b583567277d15deb", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6c55842571a8030ab3ea7b58b583567277d15deb", "committedDate": "2020-03-03T18:46:07Z", "message": "DHFPROD-4169: Fixing the UI code after middle tier change"}, "afterCommit": {"oid": "aa996e88e32f39fec29cd3ef98a9e0dfe1a860e0", "author": {"user": {"login": "xnikhil08", "name": "Nikhil Shrivastava"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/aa996e88e32f39fec29cd3ef98a9e0dfe1a860e0", "committedDate": "2020-03-04T17:57:31Z", "message": "DHFPROD-4169: Fixing the UI code after middle tier change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b5d57ff1a86bf9dc137de42c1a0bae721cacef7", "author": {"user": {"login": "wooldridge", "name": "Mike Wooldridge"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/7b5d57ff1a86bf9dc137de42c1a0bae721cacef7", "committedDate": "2020-03-04T22:29:41Z", "message": "DHFPROD-4169: Fix type-checking issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTk3MjM1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-369197235", "createdAt": "2020-03-04T23:22:50Z", "commit": {"oid": "7b5d57ff1a86bf9dc137de42c1a0bae721cacef7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODY2MzA1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3631#pullrequestreview-369866305", "createdAt": "2020-03-05T19:50:56Z", "commit": {"oid": "7b5d57ff1a86bf9dc137de42c1a0bae721cacef7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2274, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}