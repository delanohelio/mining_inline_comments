{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTk4Mzgz", "number": 3714, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo0NToyMlrODo2Enw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjoyNzoxNFrODp714g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTU1NTUxOnYy", "diffSide": "RIGHT", "path": "specs/models/EntityModelDescriptor.v1.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo0NToyMlrOF3pf6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzoxMTo0MlrOF4EPwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NTkxNA==", "bodyText": "PropertyName can only be alphabetic? We do not allow its name like Field1, Field2..", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393895914", "createdAt": "2020-03-17T18:45:22Z", "author": {"login": "hao1st"}, "path": "specs/models/EntityModelDescriptor.v1.json", "diffHunk": "@@ -0,0 +1,109 @@\n+{\n+  \"title\": \"EntityModelDescriptor\",\n+  \"type\": \"object\",\n+  \"description\": \"JSON schema representation of a MarkLogic Entity Services model\",\n+  \"x-marklogic\": {\n+    \"collections\": [\n+      \"http://marklogic.com/entity-services/models\"\n+    ],\n+    \"permissions\": [\n+      {\n+        \"role-name\": \"data-hub-entity-model-reader\",\n+        \"capability\": \"read\"\n+      },\n+      {\n+        \"role-name\": \"data-hub-entity-model-writer\",\n+        \"capability\": \"update\"\n+      }\n+    ],\n+    \"uri-template\": \"/entities/${./info/title}.entity.json\",\n+    \"databases\": [\n+      \"final\",\n+      \"staging\"\n+    ]\n+  },\n+  \"properties\": {\n+    \"info\": {\n+      \"type\": \"object\",\n+      \"properties\": {\n+        \"title\": {\n+          \"type\": \"string\"\n+        },\n+        \"version\": {\n+          \"type\": \"string\"\n+        },\n+        \"baseUri\": {\n+          \"type\": \"string\",\n+          \"description\": \"Optional for ES, but required by DHF\"\n+        }\n+      },\n+      \"required\": [\n+        \"title\"\n+      ]\n+    },\n+    \"definitions\": {\n+      \"type\": \"object\",\n+      \"additionalProperties\": false,\n+      \"patternProperties\": {\n+        \"^[a-z]+$\": {\n+          \"type\": \"object\",\n+          \"properties\": {\n+            \"required\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"pii\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"elementRangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"rangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"wordLexicon\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"properties\": {\n+              \"type\": \"object\",\n+              \"additionalProperties\": false,\n+              \"patternProperties\": {\n+                \"^[a-z]+$\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1bc8a118fe962143b5814e5f1a8df262d89b260"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNTk4Nw==", "bodyText": "I'll check with Erik. This is an attempt to define a schema for ES - we won't be validating anything with it, so it doesn't yet need to be 100% correct. Ideally ML would provide it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393905987", "createdAt": "2020-03-17T19:03:43Z", "author": {"login": "rjrudin"}, "path": "specs/models/EntityModelDescriptor.v1.json", "diffHunk": "@@ -0,0 +1,109 @@\n+{\n+  \"title\": \"EntityModelDescriptor\",\n+  \"type\": \"object\",\n+  \"description\": \"JSON schema representation of a MarkLogic Entity Services model\",\n+  \"x-marklogic\": {\n+    \"collections\": [\n+      \"http://marklogic.com/entity-services/models\"\n+    ],\n+    \"permissions\": [\n+      {\n+        \"role-name\": \"data-hub-entity-model-reader\",\n+        \"capability\": \"read\"\n+      },\n+      {\n+        \"role-name\": \"data-hub-entity-model-writer\",\n+        \"capability\": \"update\"\n+      }\n+    ],\n+    \"uri-template\": \"/entities/${./info/title}.entity.json\",\n+    \"databases\": [\n+      \"final\",\n+      \"staging\"\n+    ]\n+  },\n+  \"properties\": {\n+    \"info\": {\n+      \"type\": \"object\",\n+      \"properties\": {\n+        \"title\": {\n+          \"type\": \"string\"\n+        },\n+        \"version\": {\n+          \"type\": \"string\"\n+        },\n+        \"baseUri\": {\n+          \"type\": \"string\",\n+          \"description\": \"Optional for ES, but required by DHF\"\n+        }\n+      },\n+      \"required\": [\n+        \"title\"\n+      ]\n+    },\n+    \"definitions\": {\n+      \"type\": \"object\",\n+      \"additionalProperties\": false,\n+      \"patternProperties\": {\n+        \"^[a-z]+$\": {\n+          \"type\": \"object\",\n+          \"properties\": {\n+            \"required\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"pii\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"elementRangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"rangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"wordLexicon\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"properties\": {\n+              \"type\": \"object\",\n+              \"additionalProperties\": false,\n+              \"patternProperties\": {\n+                \"^[a-z]+$\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NTkxNA=="}, "originalCommit": {"oid": "d1bc8a118fe962143b5814e5f1a8df262d89b260"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMzNDE0NQ==", "bodyText": "I'll update this, and the other pattern, to a-zA-Z0-9.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r394334145", "createdAt": "2020-03-18T13:11:42Z", "author": {"login": "rjrudin"}, "path": "specs/models/EntityModelDescriptor.v1.json", "diffHunk": "@@ -0,0 +1,109 @@\n+{\n+  \"title\": \"EntityModelDescriptor\",\n+  \"type\": \"object\",\n+  \"description\": \"JSON schema representation of a MarkLogic Entity Services model\",\n+  \"x-marklogic\": {\n+    \"collections\": [\n+      \"http://marklogic.com/entity-services/models\"\n+    ],\n+    \"permissions\": [\n+      {\n+        \"role-name\": \"data-hub-entity-model-reader\",\n+        \"capability\": \"read\"\n+      },\n+      {\n+        \"role-name\": \"data-hub-entity-model-writer\",\n+        \"capability\": \"update\"\n+      }\n+    ],\n+    \"uri-template\": \"/entities/${./info/title}.entity.json\",\n+    \"databases\": [\n+      \"final\",\n+      \"staging\"\n+    ]\n+  },\n+  \"properties\": {\n+    \"info\": {\n+      \"type\": \"object\",\n+      \"properties\": {\n+        \"title\": {\n+          \"type\": \"string\"\n+        },\n+        \"version\": {\n+          \"type\": \"string\"\n+        },\n+        \"baseUri\": {\n+          \"type\": \"string\",\n+          \"description\": \"Optional for ES, but required by DHF\"\n+        }\n+      },\n+      \"required\": [\n+        \"title\"\n+      ]\n+    },\n+    \"definitions\": {\n+      \"type\": \"object\",\n+      \"additionalProperties\": false,\n+      \"patternProperties\": {\n+        \"^[a-z]+$\": {\n+          \"type\": \"object\",\n+          \"properties\": {\n+            \"required\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"pii\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"elementRangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"rangeIndex\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"wordLexicon\": {\n+              \"type\": \"array\",\n+              \"items\": {\n+                \"type\": \"string\"\n+              }\n+            },\n+            \"properties\": {\n+              \"type\": \"object\",\n+              \"additionalProperties\": false,\n+              \"patternProperties\": {\n+                \"^[a-z]+$\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NTkxNA=="}, "originalCommit": {"oid": "d1bc8a118fe962143b5814e5f1a8df262d89b260"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTU2NTQ0OnYy", "diffSide": "RIGHT", "path": "specs/models/EntityTypes.v1.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo0ODowOVrOF3pmWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowNDowMlrOF3qH0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NzU2MQ==", "bodyText": "should be \"datatype\"?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393897561", "createdAt": "2020-03-17T18:48:09Z", "author": {"login": "hao1st"}, "path": "specs/models/EntityTypes.v1.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"title\": \"EntityTypes\",\n+  \"type\": \"array\",\n+  \"x-examples\": {},\n+  \"items\": {\n+    \"type\": \"object\",\n+    \"properties\": {\n+      \"entityTypeTitle\": {\n+        \"type\": \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1bc8a118fe962143b5814e5f1a8df262d89b260"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNjEyOQ==", "bodyText": "\"type\" is what JSON schema uses, while Entity Services uses \"datatype\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r393906129", "createdAt": "2020-03-17T19:04:02Z", "author": {"login": "rjrudin"}, "path": "specs/models/EntityTypes.v1.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"title\": \"EntityTypes\",\n+  \"type\": \"array\",\n+  \"x-examples\": {},\n+  \"items\": {\n+    \"type\": \"object\",\n+    \"properties\": {\n+      \"entityTypeTitle\": {\n+        \"type\": \"string\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NzU2MQ=="}, "originalCommit": {"oid": "d1bc8a118fe962143b5814e5f1a8df262d89b260"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTA5MzM2OnYy", "diffSide": "RIGHT", "path": "specs/models/EntityModelDescriptor.v1.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjoxNjo0NVrOF4Mong==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjoxNjo0NVrOF4Mong==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ3MTU4Mg==", "bodyText": "This is great! Being able to extend the APIs with ML specific opens a lot of possibilities for automated testing driven by these API documents.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r394471582", "createdAt": "2020-03-18T16:16:45Z", "author": {"login": "ryanjdew"}, "path": "specs/models/EntityModelDescriptor.v1.json", "diffHunk": "@@ -0,0 +1,109 @@\n+{\n+  \"title\": \"EntityModelDescriptor\",\n+  \"type\": \"object\",\n+  \"description\": \"JSON schema representation of a MarkLogic Entity Services model\",\n+  \"x-marklogic\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597c5a3c56fe1289ff392aaac2310b818aa51df4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Mjk4NjU4OnYy", "diffSide": "RIGHT", "path": "specs/reference/data-services/models.v1.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjoyNzoxNFrOF5aw3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjo0NjoxOFrOF5beAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1MTY0Nw==", "bodyText": "Do we want to change this to actually be a multipart request and use encoding to reference the JSON schema as part of the \"input\" parameter? Like this: https://swagger.io/docs/specification/describing-request-body/multipart-requests/ That would more accurately describe the request being made and could be eventually be leveraged for testing data services. Of course we have a good pattern for ML unit tests and Data Services, so that may be less important.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r395751647", "createdAt": "2020-03-20T16:27:14Z", "author": {"login": "ryanjdew"}, "path": "specs/reference/data-services/models.v1.json", "diffHunk": "@@ -0,0 +1,141 @@\n+{\n+  \"openapi\": \"3.0.0\",\n+  \"info\": {\n+    \"title\": \"models\",\n+    \"version\": \"1.0\",\n+    \"description\": \"Data services for endpoints pertaining to entity models\"\n+  },\n+  \"servers\": [\n+    {\n+      \"url\": \"http://localhost:8011/data-hub/5/data-services/models\"\n+    }\n+  ],\n+  \"paths\": {\n+    \"/getPrimaryEntityTypes.sjs\": {\n+      \"post\": {\n+        \"summary\": \"getPrimaryEntityTypes\",\n+        \"tags\": [],\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"OK\",\n+            \"content\": {\n+              \"application/json\": {\n+                \"schema\": {\n+                  \"$ref\": \"../../models/PrimaryEntityTypes.v1.json\"\n+                }\n+              }\n+            }\n+          }\n+        },\n+        \"operationId\": \"getPrimaryEntityTypes.sjs\",\n+        \"description\": \"Returns an array of primary entity types. A primary entity type is the entity type in a model descriptor with a name equal to the title of the model descriptor.\"\n+      },\n+      \"parameters\": []\n+    },\n+    \"/createModel.sjs\": {\n+      \"post\": {\n+        \"summary\": \"createModel\",\n+        \"operationId\": \"post-createModelsjs\",\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"OK\",\n+            \"content\": {\n+              \"application/json\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17bcc6d6158ed28bb0c11019faf2f19f7962ce1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc2MzIwMg==", "bodyText": "Yeah I struggled with how to map to DS parameters. The fact that it's multi-part is an implementation detail that's hidden from developers too, buried away in the DS-generated code. So if we want to use OpenAPI to describe DS interfaces, I think we just use a combo of query params and request body as JSON.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3714#discussion_r395763202", "createdAt": "2020-03-20T16:46:18Z", "author": {"login": "rjrudin"}, "path": "specs/reference/data-services/models.v1.json", "diffHunk": "@@ -0,0 +1,141 @@\n+{\n+  \"openapi\": \"3.0.0\",\n+  \"info\": {\n+    \"title\": \"models\",\n+    \"version\": \"1.0\",\n+    \"description\": \"Data services for endpoints pertaining to entity models\"\n+  },\n+  \"servers\": [\n+    {\n+      \"url\": \"http://localhost:8011/data-hub/5/data-services/models\"\n+    }\n+  ],\n+  \"paths\": {\n+    \"/getPrimaryEntityTypes.sjs\": {\n+      \"post\": {\n+        \"summary\": \"getPrimaryEntityTypes\",\n+        \"tags\": [],\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"OK\",\n+            \"content\": {\n+              \"application/json\": {\n+                \"schema\": {\n+                  \"$ref\": \"../../models/PrimaryEntityTypes.v1.json\"\n+                }\n+              }\n+            }\n+          }\n+        },\n+        \"operationId\": \"getPrimaryEntityTypes.sjs\",\n+        \"description\": \"Returns an array of primary entity types. A primary entity type is the entity type in a model descriptor with a name equal to the title of the model descriptor.\"\n+      },\n+      \"parameters\": []\n+    },\n+    \"/createModel.sjs\": {\n+      \"post\": {\n+        \"summary\": \"createModel\",\n+        \"operationId\": \"post-createModelsjs\",\n+        \"responses\": {\n+          \"200\": {\n+            \"description\": \"OK\",\n+            \"content\": {\n+              \"application/json\": {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1MTY0Nw=="}, "originalCommit": {"oid": "d17bcc6d6158ed28bb0c11019faf2f19f7962ce1"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3491, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}