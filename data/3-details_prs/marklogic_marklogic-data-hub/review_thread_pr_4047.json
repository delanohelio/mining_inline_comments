{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MzE2NjI4", "number": 4047, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1MDowNFrOECPVnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1MDowNFrOECPVnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzgzOTAxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/pages/Curate.test.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1MDowNFrOGekyZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMjoyMzo0NVrOGfaBLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMzE5MQ==", "bodyText": "@xnikhil08 if you get a chance, please try this test out with getByText('Save') and getByText('Cancel') by replacing ByAll.\nFor some reason when I fireEvent.click on 'Save'/'Cancel' with edit alongwith settings it fails with \"found multiple\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4047#discussion_r434713191", "createdAt": "2020-06-03T16:50:04Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/Curate.test.tsx", "diffHunk": "@@ -1,9 +1,98 @@\n-import React from 'react';\n-import { shallow } from 'enzyme';\n-import Curate from './Curate';\n-\n-describe('Install component', () => {\n-  it('should render correctly', () => {\n-    shallow(<Curate />);\n-  });\n-});\n\\ No newline at end of file\n+import React, {useContext} from 'react';\n+import {render, fireEvent, waitForElement, cleanup} from '@testing-library/react'\n+import '@testing-library/jest-dom/extend-expect'\n+import {AuthoritiesContext, AuthoritiesService} from '../util/authorities';\n+import axiosMock from 'axios';\n+import mocks from '../config/mocks.config';\n+import Curate from \"./Curate\";\n+\n+jest.mock('axios');\n+\n+describe('Curate component', () => {\n+\n+    beforeEach(() => {\n+        mocks.curateAPI(axiosMock);\n+    });\n+\n+    afterEach(() => {\n+        jest.clearAllMocks();\n+        cleanup();\n+    })\n+\n+    test('Verify readMapping authority can only view mapping configs and settings', async () => {\n+        const authorityService = new AuthoritiesService();\n+        authorityService.setAuthorities(['readMapping']);\n+\n+        const { getByText, getAllByText, queryByText, getByTestId, queryByTestId, debug } = await render(<AuthoritiesContext.Provider value={authorityService}><Curate/></AuthoritiesContext.Provider>);\n+\n+        expect(await(waitForElement(() => getByText('Customer')))).toBeInTheDocument();\n+\n+        // Check for steps to be populated\n+        expect(axiosMock.get).toBeCalledWith('/api/steps/mapping');\n+        fireEvent.click(getByText('Customer'));\n+        //Mapping tab should show. Match/Merge should not\n+        expect(getByText('Mapping')).toBeInTheDocument();\n+        expect(queryByText('Match')).not.toBeInTheDocument();\n+        expect(queryByText('Merge')).not.toBeInTheDocument();\n+\n+        expect(getByText('Mapping1')).toBeInTheDocument();\n+\n+        // test 'Add New' button\n+        expect(queryByText('Add New')).not.toBeInTheDocument();\n+\n+        // test settings\n+        fireEvent.click(getByTestId('Mapping1-settings'));\n+        expect(await(waitForElement(() => getByText('Target Database:')))).toBeInTheDocument();\n+        expect(getAllByText('Save')[0]).toBeDisabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8b2e43313f3a5e6db076e23ccf26aa4279a07c3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyMTI4MQ==", "bodyText": "@bsrikan - Fixed this issue in the PR (bsrikan#5) against your branch.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4047#discussion_r435521281", "createdAt": "2020-06-04T20:11:24Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/pages/Curate.test.tsx", "diffHunk": "@@ -1,9 +1,98 @@\n-import React from 'react';\n-import { shallow } from 'enzyme';\n-import Curate from './Curate';\n-\n-describe('Install component', () => {\n-  it('should render correctly', () => {\n-    shallow(<Curate />);\n-  });\n-});\n\\ No newline at end of file\n+import React, {useContext} from 'react';\n+import {render, fireEvent, waitForElement, cleanup} from '@testing-library/react'\n+import '@testing-library/jest-dom/extend-expect'\n+import {AuthoritiesContext, AuthoritiesService} from '../util/authorities';\n+import axiosMock from 'axios';\n+import mocks from '../config/mocks.config';\n+import Curate from \"./Curate\";\n+\n+jest.mock('axios');\n+\n+describe('Curate component', () => {\n+\n+    beforeEach(() => {\n+        mocks.curateAPI(axiosMock);\n+    });\n+\n+    afterEach(() => {\n+        jest.clearAllMocks();\n+        cleanup();\n+    })\n+\n+    test('Verify readMapping authority can only view mapping configs and settings', async () => {\n+        const authorityService = new AuthoritiesService();\n+        authorityService.setAuthorities(['readMapping']);\n+\n+        const { getByText, getAllByText, queryByText, getByTestId, queryByTestId, debug } = await render(<AuthoritiesContext.Provider value={authorityService}><Curate/></AuthoritiesContext.Provider>);\n+\n+        expect(await(waitForElement(() => getByText('Customer')))).toBeInTheDocument();\n+\n+        // Check for steps to be populated\n+        expect(axiosMock.get).toBeCalledWith('/api/steps/mapping');\n+        fireEvent.click(getByText('Customer'));\n+        //Mapping tab should show. Match/Merge should not\n+        expect(getByText('Mapping')).toBeInTheDocument();\n+        expect(queryByText('Match')).not.toBeInTheDocument();\n+        expect(queryByText('Merge')).not.toBeInTheDocument();\n+\n+        expect(getByText('Mapping1')).toBeInTheDocument();\n+\n+        // test 'Add New' button\n+        expect(queryByText('Add New')).not.toBeInTheDocument();\n+\n+        // test settings\n+        fireEvent.click(getByTestId('Mapping1-settings'));\n+        expect(await(waitForElement(() => getByText('Target Database:')))).toBeInTheDocument();\n+        expect(getAllByText('Save')[0]).toBeDisabled();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMzE5MQ=="}, "originalCommit": {"oid": "a8b2e43313f3a5e6db076e23ccf26aa4279a07c3"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU4NTMyNA==", "bodyText": "Thanks @xnikhil08 for the changes.\nAs described by Nikhil: \"Once you open the settings or edit modal, then it will remain open and when you click on cancel or Save then the parent modal gets a property display: none,\nbut the component remains in the document\"\nHence we have updated the tests to use data-testid.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4047#discussion_r435585324", "createdAt": "2020-06-04T22:23:45Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/Curate.test.tsx", "diffHunk": "@@ -1,9 +1,98 @@\n-import React from 'react';\n-import { shallow } from 'enzyme';\n-import Curate from './Curate';\n-\n-describe('Install component', () => {\n-  it('should render correctly', () => {\n-    shallow(<Curate />);\n-  });\n-});\n\\ No newline at end of file\n+import React, {useContext} from 'react';\n+import {render, fireEvent, waitForElement, cleanup} from '@testing-library/react'\n+import '@testing-library/jest-dom/extend-expect'\n+import {AuthoritiesContext, AuthoritiesService} from '../util/authorities';\n+import axiosMock from 'axios';\n+import mocks from '../config/mocks.config';\n+import Curate from \"./Curate\";\n+\n+jest.mock('axios');\n+\n+describe('Curate component', () => {\n+\n+    beforeEach(() => {\n+        mocks.curateAPI(axiosMock);\n+    });\n+\n+    afterEach(() => {\n+        jest.clearAllMocks();\n+        cleanup();\n+    })\n+\n+    test('Verify readMapping authority can only view mapping configs and settings', async () => {\n+        const authorityService = new AuthoritiesService();\n+        authorityService.setAuthorities(['readMapping']);\n+\n+        const { getByText, getAllByText, queryByText, getByTestId, queryByTestId, debug } = await render(<AuthoritiesContext.Provider value={authorityService}><Curate/></AuthoritiesContext.Provider>);\n+\n+        expect(await(waitForElement(() => getByText('Customer')))).toBeInTheDocument();\n+\n+        // Check for steps to be populated\n+        expect(axiosMock.get).toBeCalledWith('/api/steps/mapping');\n+        fireEvent.click(getByText('Customer'));\n+        //Mapping tab should show. Match/Merge should not\n+        expect(getByText('Mapping')).toBeInTheDocument();\n+        expect(queryByText('Match')).not.toBeInTheDocument();\n+        expect(queryByText('Merge')).not.toBeInTheDocument();\n+\n+        expect(getByText('Mapping1')).toBeInTheDocument();\n+\n+        // test 'Add New' button\n+        expect(queryByText('Add New')).not.toBeInTheDocument();\n+\n+        // test settings\n+        fireEvent.click(getByTestId('Mapping1-settings'));\n+        expect(await(waitForElement(() => getByText('Target Database:')))).toBeInTheDocument();\n+        expect(getAllByText('Save')[0]).toBeDisabled();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMzE5MQ=="}, "originalCommit": {"oid": "a8b2e43313f3a5e6db076e23ccf26aa4279a07c3"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4015, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}