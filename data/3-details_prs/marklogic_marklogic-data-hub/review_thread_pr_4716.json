{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNzU5MzA0", "number": 4716, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDo0NzowMVrOEtN-Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDo1NDo0OFrOEtOIBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODUwMjYzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.test.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDo0NzowMVrOHg444Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDo1MzoxNlrOHg5Fkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0ODU0NQ==", "bodyText": "Can this be RecordCardView?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4716#discussion_r504248545", "createdAt": "2020-10-13T20:47:01Z", "author": {"login": "rahulvudutala"}, "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.test.tsx", "diffHunk": "@@ -1,13 +1,13 @@\n import React from 'react';\n import { render, fireEvent, waitForElement } from '@testing-library/react';\n-import { entitySearch } from \"../../../assets/mock-data/explore/entity-search\";\n+import { entitySearch } from \"../../assets/mock-data/explore/entity-search\";\n import { BrowserRouter as Router } from 'react-router-dom';\n-import RawDataCardView from './raw-data-card-view';\n+import RawDataCardView from './record-view';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68085e390ba3e53549961e51b27d74e8f465ac35"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0OTkxOQ==", "bodyText": "Renamed. Thanks.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4716#discussion_r504249919", "createdAt": "2020-10-13T20:49:38Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.test.tsx", "diffHunk": "@@ -1,13 +1,13 @@\n import React from 'react';\n import { render, fireEvent, waitForElement } from '@testing-library/react';\n-import { entitySearch } from \"../../../assets/mock-data/explore/entity-search\";\n+import { entitySearch } from \"../../assets/mock-data/explore/entity-search\";\n import { BrowserRouter as Router } from 'react-router-dom';\n-import RawDataCardView from './raw-data-card-view';\n+import RawDataCardView from './record-view';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0ODU0NQ=="}, "originalCommit": {"oid": "68085e390ba3e53549961e51b27d74e8f465ac35"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI1MTc5NQ==", "bodyText": "Its still RawDataCardView", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4716#discussion_r504251795", "createdAt": "2020-10-13T20:53:16Z", "author": {"login": "rahulvudutala"}, "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.test.tsx", "diffHunk": "@@ -1,13 +1,13 @@\n import React from 'react';\n import { render, fireEvent, waitForElement } from '@testing-library/react';\n-import { entitySearch } from \"../../../assets/mock-data/explore/entity-search\";\n+import { entitySearch } from \"../../assets/mock-data/explore/entity-search\";\n import { BrowserRouter as Router } from 'react-router-dom';\n-import RawDataCardView from './raw-data-card-view';\n+import RawDataCardView from './record-view';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0ODU0NQ=="}, "originalCommit": {"oid": "68085e390ba3e53549961e51b27d74e8f465ac35"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODUyODA3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDo1NDo0OFrOHg5I6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDo1OTowMVrOHg5Rzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI1MjY1MQ==", "bodyText": "Can we rename it to RecordCardView?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4716#discussion_r504252651", "createdAt": "2020-10-13T20:54:48Z", "author": {"login": "rahulvudutala"}, "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.tsx", "diffHunk": "@@ -0,0 +1,147 @@\n+import React, { CSSProperties, useContext } from 'react';\n+import styles from './record-view.module.scss';\n+import { Card, Icon, Row, Col, Popover } from 'antd';\n+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n+import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n+import { AuthoritiesContext } from \"../../util/authorities\";\n+import { formatCardUri } from '../../util/conversionFunctions';\n+import sourceFormatOptions from '../../config/formats.config';\n+import ReactHtmlParser from 'react-html-parser';\n+import { FileOutlined } from '@ant-design/icons';\n+import { OverflowTooltip } from '../overflow-tooltip/overflow-tooltip';\n+import { MLTooltip, MLPopover } from '@marklogic/design-system';\n+import { CardViewDateConverter } from '../../util/date-conversion';\n+\n+const RawDataCardView = (props) => {\n+  const authorityService = useContext(AuthoritiesContext);\n+\n+  const handleDetailViewNavigation = () => {\n+  }\n+\n+  // Custom CSS for source Format\n+  const sourceFormatStyle = (sourceFmt) => {\n+    let customStyles: CSSProperties = {\n+      display: 'inline-flex',\n+      alignItems: 'center',\n+      justifyContent: 'center',\n+      height: '20px',\n+      width: '20px',\n+      lineHeight: '20px',\n+      backgroundColor: sourceFormatOptions[sourceFmt].color,\n+      fontSize: sourceFmt === 'json' ? '8px' : '8.5px',\n+      borderRadius: '50%',\n+      textAlign: 'center',\n+      color: '#ffffff',\n+      verticalAlign: 'middle',\n+      marginRight: '8px'\n+    }\n+    return customStyles;\n+  }\n+\n+  const displayUri = (uri) => {\n+    return formatCardUri(uri);\n+  }\n+\n+  const displaySnippet = (item) => {\n+    if (['json', 'xml', 'text'].includes(item.format)) {\n+      let str = '';\n+      item.matches.forEach(item => {\n+        item['match-text'].forEach(element => {\n+          if (typeof element === 'object') {\n+            str = str.concat('<b>').concat(element.highlight).concat('</b>').concat('...');\n+          } else {\n+            str = str.concat(element);\n+          }\n+        });\n+      })\n+      return <p>{ReactHtmlParser(str)}</p>;\n+    } else if ('binary' === item.format) {\n+      return (\n+        <div className={styles.binaryCard} >\n+          <FileOutlined className={styles.binaryIcon} />\n+          <div className={styles.binaryText} data-testid={item.uri + '-noPreview'}> No preview available</div>\n+        </div>\n+      )\n+    }\n+  }\n+\n+  const displayRecordSources = (item) => {\n+    let sources = item.hubMetadata?.sources.map((record) => {\n+      return record.name;\n+    }).join(\", \");\n+    return sources;\n+  }\n+\n+  const emptyField = (\n+    <p className={styles.textDisabled}>none</p>\n+  )\n+\n+  const displayRecordMetadata = (item) => {\n+    return (\n+      <div className={styles.popover} data-testid={item.uri + '-popover'}>\n+        <div className={styles.colKey}>\n+          <p>Source:</p>\n+          <p>Flow:</p>\n+          <p>Step:</p>\n+          <p>Created On:</p>\n+        </div>\n+        <div className={styles.colValue}>\n+          {item.hubMetadata?.sources?.length > 0 ? <span className={styles.valText} data-testid={item.uri + '-sources'}>\n+            <OverflowTooltip title={displayRecordSources(item)} placement={\"bottom\"} content={displayRecordSources(item).substring(0, 28)} width={\"200px\"} />\n+          </span> : emptyField}\n+          {item.hubMetadata?.lastProcessedByFlow ? <span className={styles.valText} data-testid={item.uri + '-lastProcessedByFlow'}>\n+            <OverflowTooltip title={item.hubMetadata?.lastProcessedByFlow} placement={\"bottom\"} content={item.hubMetadata?.lastProcessedByFlow} width={\"200px\"} />\n+          </span> : emptyField}\n+          {item.hubMetadata?.lastProcessedByStep ? <span className={styles.valText} data-testid={item.uri + '-lastProcessedByStep'}>\n+            <OverflowTooltip title={item.hubMetadata.lastProcessedByStep} placement={\"bottom\"} content={item.hubMetadata.lastProcessedByStep} width={\"200px\"} />\n+          </span> : emptyField}\n+          {item.hubMetadata?.lastProcessedDateTime ? <span className={styles.valText} data-testid={item.uri + '-lastProcessedDateTime'}>\n+            {CardViewDateConverter(item.hubMetadata?.lastProcessedDateTime)}\n+          </span> : emptyField}\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div id=\"record-data-card\" aria-label=\"record-data-card\" className={styles.rawDataCard}>\n+      <Row gutter={24} type=\"flex\" >\n+        {props.data && props.data.length > 0 ? props.data.map((elem, index) => (\n+          <Col key={index}>\n+            <div >\n+              <Card\n+                className={styles.cardStyle}\n+                size=\"small\"\n+              >\n+                <div className={styles.cardMetadataContainer}>\n+                  <span className={styles.uriContainer} data-testid={elem.uri + '-URI'}>URI: <span className={styles.uri}>\n+                    <MLTooltip title={elem.uri} placement=\"bottom\">{displayUri(elem.uri)}</MLTooltip></span></span>\n+                  <span className={styles.cardIcons}>\n+                    <MLPopover getPopupContainer={trigger => trigger.parentElement} content={displayRecordMetadata(elem)} placement=\"bottomRight\" trigger=\"click\">\n+                      <span>\n+                        <MLTooltip title={\"View info\"} placement=\"bottom\">\n+                          <span className={styles.infoIcon}><Icon type=\"info-circle\" theme=\"filled\" data-testid={elem.uri + '-InfoIcon'} /></span>\n+                        </MLTooltip>\n+                      </span>\n+                    </MLPopover>\n+                    <span className={styles.sourceFormat}\n+                      style={sourceFormatStyle(elem.format)}\n+                      data-testid={elem.uri + '-sourceFormat'}\n+                    >{sourceFormatOptions[elem.format].label}</span>\n+                    <MLTooltip title={'Detail view'} placement=\"bottom\"\n+                    ><i role=\"detail-link icon\" data-testid={elem.uri + '-detailViewIcon'}><FontAwesomeIcon icon={faExternalLinkAlt} className={elem.format === 'binary' ? styles.detailLinkIconDisabled : styles.detailLinkIcon} size=\"lg\" /></i>\n+                    </MLTooltip>\n+                  </span>\n+                </div>\n+                <div className={styles.snippetContainer} data-testid={elem.uri + '-snippet'} >\n+                  {displaySnippet(elem)}\n+                </div>\n+              </Card>\n+            </div>\n+          </Col>)) : <span></span>}\n+      </Row>\n+    </div>\n+  );\n+}\n+\n+export default RawDataCardView;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ca5818bfd31ef80d8b0785f8a9fee9ba323ba5"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI1NDkyNg==", "bodyText": "Oh was missing this change due to rebasing. Fixed. Thanks.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4716#discussion_r504254926", "createdAt": "2020-10-13T20:59:01Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/record-view/record-view.tsx", "diffHunk": "@@ -0,0 +1,147 @@\n+import React, { CSSProperties, useContext } from 'react';\n+import styles from './record-view.module.scss';\n+import { Card, Icon, Row, Col, Popover } from 'antd';\n+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n+import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n+import { AuthoritiesContext } from \"../../util/authorities\";\n+import { formatCardUri } from '../../util/conversionFunctions';\n+import sourceFormatOptions from '../../config/formats.config';\n+import ReactHtmlParser from 'react-html-parser';\n+import { FileOutlined } from '@ant-design/icons';\n+import { OverflowTooltip } from '../overflow-tooltip/overflow-tooltip';\n+import { MLTooltip, MLPopover } from '@marklogic/design-system';\n+import { CardViewDateConverter } from '../../util/date-conversion';\n+\n+const RawDataCardView = (props) => {\n+  const authorityService = useContext(AuthoritiesContext);\n+\n+  const handleDetailViewNavigation = () => {\n+  }\n+\n+  // Custom CSS for source Format\n+  const sourceFormatStyle = (sourceFmt) => {\n+    let customStyles: CSSProperties = {\n+      display: 'inline-flex',\n+      alignItems: 'center',\n+      justifyContent: 'center',\n+      height: '20px',\n+      width: '20px',\n+      lineHeight: '20px',\n+      backgroundColor: sourceFormatOptions[sourceFmt].color,\n+      fontSize: sourceFmt === 'json' ? '8px' : '8.5px',\n+      borderRadius: '50%',\n+      textAlign: 'center',\n+      color: '#ffffff',\n+      verticalAlign: 'middle',\n+      marginRight: '8px'\n+    }\n+    return customStyles;\n+  }\n+\n+  const displayUri = (uri) => {\n+    return formatCardUri(uri);\n+  }\n+\n+  const displaySnippet = (item) => {\n+    if (['json', 'xml', 'text'].includes(item.format)) {\n+      let str = '';\n+      item.matches.forEach(item => {\n+        item['match-text'].forEach(element => {\n+          if (typeof element === 'object') {\n+            str = str.concat('<b>').concat(element.highlight).concat('</b>').concat('...');\n+          } else {\n+            str = str.concat(element);\n+          }\n+        });\n+      })\n+      return <p>{ReactHtmlParser(str)}</p>;\n+    } else if ('binary' === item.format) {\n+      return (\n+        <div className={styles.binaryCard} >\n+          <FileOutlined className={styles.binaryIcon} />\n+          <div className={styles.binaryText} data-testid={item.uri + '-noPreview'}> No preview available</div>\n+        </div>\n+      )\n+    }\n+  }\n+\n+  const displayRecordSources = (item) => {\n+    let sources = item.hubMetadata?.sources.map((record) => {\n+      return record.name;\n+    }).join(\", \");\n+    return sources;\n+  }\n+\n+  const emptyField = (\n+    <p className={styles.textDisabled}>none</p>\n+  )\n+\n+  const displayRecordMetadata = (item) => {\n+    return (\n+      <div className={styles.popover} data-testid={item.uri + '-popover'}>\n+        <div className={styles.colKey}>\n+          <p>Source:</p>\n+          <p>Flow:</p>\n+          <p>Step:</p>\n+          <p>Created On:</p>\n+        </div>\n+        <div className={styles.colValue}>\n+          {item.hubMetadata?.sources?.length > 0 ? <span className={styles.valText} data-testid={item.uri + '-sources'}>\n+            <OverflowTooltip title={displayRecordSources(item)} placement={\"bottom\"} content={displayRecordSources(item).substring(0, 28)} width={\"200px\"} />\n+          </span> : emptyField}\n+          {item.hubMetadata?.lastProcessedByFlow ? <span className={styles.valText} data-testid={item.uri + '-lastProcessedByFlow'}>\n+            <OverflowTooltip title={item.hubMetadata?.lastProcessedByFlow} placement={\"bottom\"} content={item.hubMetadata?.lastProcessedByFlow} width={\"200px\"} />\n+          </span> : emptyField}\n+          {item.hubMetadata?.lastProcessedByStep ? <span className={styles.valText} data-testid={item.uri + '-lastProcessedByStep'}>\n+            <OverflowTooltip title={item.hubMetadata.lastProcessedByStep} placement={\"bottom\"} content={item.hubMetadata.lastProcessedByStep} width={\"200px\"} />\n+          </span> : emptyField}\n+          {item.hubMetadata?.lastProcessedDateTime ? <span className={styles.valText} data-testid={item.uri + '-lastProcessedDateTime'}>\n+            {CardViewDateConverter(item.hubMetadata?.lastProcessedDateTime)}\n+          </span> : emptyField}\n+        </div>\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div id=\"record-data-card\" aria-label=\"record-data-card\" className={styles.rawDataCard}>\n+      <Row gutter={24} type=\"flex\" >\n+        {props.data && props.data.length > 0 ? props.data.map((elem, index) => (\n+          <Col key={index}>\n+            <div >\n+              <Card\n+                className={styles.cardStyle}\n+                size=\"small\"\n+              >\n+                <div className={styles.cardMetadataContainer}>\n+                  <span className={styles.uriContainer} data-testid={elem.uri + '-URI'}>URI: <span className={styles.uri}>\n+                    <MLTooltip title={elem.uri} placement=\"bottom\">{displayUri(elem.uri)}</MLTooltip></span></span>\n+                  <span className={styles.cardIcons}>\n+                    <MLPopover getPopupContainer={trigger => trigger.parentElement} content={displayRecordMetadata(elem)} placement=\"bottomRight\" trigger=\"click\">\n+                      <span>\n+                        <MLTooltip title={\"View info\"} placement=\"bottom\">\n+                          <span className={styles.infoIcon}><Icon type=\"info-circle\" theme=\"filled\" data-testid={elem.uri + '-InfoIcon'} /></span>\n+                        </MLTooltip>\n+                      </span>\n+                    </MLPopover>\n+                    <span className={styles.sourceFormat}\n+                      style={sourceFormatStyle(elem.format)}\n+                      data-testid={elem.uri + '-sourceFormat'}\n+                    >{sourceFormatOptions[elem.format].label}</span>\n+                    <MLTooltip title={'Detail view'} placement=\"bottom\"\n+                    ><i role=\"detail-link icon\" data-testid={elem.uri + '-detailViewIcon'}><FontAwesomeIcon icon={faExternalLinkAlt} className={elem.format === 'binary' ? styles.detailLinkIconDisabled : styles.detailLinkIcon} size=\"lg\" /></i>\n+                    </MLTooltip>\n+                  </span>\n+                </div>\n+                <div className={styles.snippetContainer} data-testid={elem.uri + '-snippet'} >\n+                  {displaySnippet(elem)}\n+                </div>\n+              </Card>\n+            </div>\n+          </Col>)) : <span></span>}\n+      </Row>\n+    </div>\n+  );\n+}\n+\n+export default RawDataCardView;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI1MjY1MQ=="}, "originalCommit": {"oid": "a3ca5818bfd31ef80d8b0785f8a9fee9ba323ba5"}, "originalPosition": 147}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3148, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}