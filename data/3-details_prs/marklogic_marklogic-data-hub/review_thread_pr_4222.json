{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODA1Mjgz", "number": 4222, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoxOTo1OVrOEPnS6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoxOTo1OVrOEPnS6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODA3OTE1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoxOTo1OVrOGzbATQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoxOTo1OVrOGzbATQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3MzAwNQ==", "bodyText": "Thanks for removing the checks for table cells in for loop since there is a valid scenario for cells to be empty.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4222#discussion_r456573005", "createdAt": "2020-07-17T17:19:59Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "diffHunk": "@@ -188,54 +199,40 @@ describe('json scenario for table on browse documents page', () => {\n     })\n   });\n \n-  xit('select \"all entities\" and verify table', () => {\n+  it('select \"all entities\" and verify table', () => {\n     browsePage.getSelectedEntity().should('contain', 'All Entities');\n-    cy.wait(2000);\n     browsePage.getHubPropertiesExpanded();\n     browsePage.getTotalDocuments().should('be.greaterThan', 25)\n     //check table rows\n     browsePage.getTableRows().should('have.length', 20);\n     //check table columns\n     browsePage.getTableColumns().should('have.length', 5);\n-    //check cells data\n-    for (let i = 2; i <= 10; i++) {\n-      for (let j = 2; j <= 4; j++) {\n-        browsePage.getTableCell(i, j).should('not.be.empty')\n-      }\n-    }\n-    for (let i = 1; i <= 10; i++) {\n-      browsePage.getTableUriCell(i).should('not.be.empty')\n-    }\n   });\n \n-  xit('select Person entity and verify table', () => {\n+  it('select Person entity and verify table', () => {\n     browsePage.selectEntity('Person');\n     browsePage.getSelectedEntity().should('contain', 'Person');\n-    cy.wait(2000);\n     browsePage.getHubPropertiesExpanded();\n     browsePage.getTotalDocuments().should('be.greaterThan', 5)\n     //check table rows\n     browsePage.getTableRows().should('have.length', 14);\n     //check table columns\n-    browsePage.getTableColumns().should('have.length', 5);\n-    //check cells data\n-    for (let i = 1; i <= 5; i++) {\n-      for (let j = 2; j <= 5; j++) {\n-        browsePage.getTableCell(i, j).should('not.be.empty')\n-      }\n-    }\n+    browsePage.getTableColumns().should('to.have.length.of.at.most', 6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9ba38392a640374a95ad039766878b39cee0641"}, "originalPosition": 141}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3991, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}