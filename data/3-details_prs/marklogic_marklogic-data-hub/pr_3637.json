{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNzA4NjU0", "number": 3637, "title": "DHFPROD-4523: Initial checkin of Azure Flow Sample", "bodyText": "Azure Flow sample - to invoke DHF Flow from an Azure Function", "createdAt": "2020-03-03T02:22:55Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637", "merged": true, "mergeCommit": {"oid": "90bdb71cbfa04d4868e7e5206ccc8fddcade67fd"}, "closed": true, "closedAt": "2020-03-04T19:21:23Z", "author": {"login": "vgouraba"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ4w42gH2gAyMzgyNzA4NjU0OmExYWUyMGIwYjI3ZjA0MTUzYzA5OGViMWNiOTNiYmUyNTExOWE5OWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKa2FiAFqTM2ODk5OTU4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a1ae20b0b27f04153c098eb1cb93bbe25119a99f", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a1ae20b0b27f04153c098eb1cb93bbe25119a99f", "committedDate": "2020-03-03T02:19:29Z", "message": "Initial checkin of Azure Flow Sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b71e5ff0b884443cb236f77b54ba5f83594444bd", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b71e5ff0b884443cb236f77b54ba5f83594444bd", "committedDate": "2020-03-03T17:28:32Z", "message": "DHFPROD-4523: Updated README and tweaked a few other things\n\nDeleted and gitignored dependency-reduced-pom.xml, as \"mvn clean package\" generates it each time. \n\nNow depending on 5.2.0-rc1 so there's no need to install a file. \n\nDeleted the generated Function class, since we're not using that."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7b6d4921eb6f5f25317efdcfceff945706f5b4a", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b7b6d4921eb6f5f25317efdcfceff945706f5b4a", "committedDate": "2020-03-03T21:03:36Z", "message": "updated note for running azure function locally"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0bd4a2a34c3b10b52e27d80a4015ba2f11a1ca9", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b0bd4a2a34c3b10b52e27d80a4015ba2f11a1ca9", "committedDate": "2020-03-03T21:05:24Z", "message": "updated note for running azure function locally"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzkxODU2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637#pullrequestreview-368391856", "createdAt": "2020-03-03T23:05:50Z", "commit": {"oid": "a1ae20b0b27f04153c098eb1cb93bbe25119a99f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzowNTo1MFrOFxZ5NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzowNTo1MFrOFxZ5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0ODc4OA==", "bodyText": "Should check ret.getStatus() == HttpStatus.OK) ? And move the line to try/catch block?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637#discussion_r387348788", "createdAt": "2020-03-03T23:05:50Z", "author": {"login": "hao1st"}, "path": "azure/flow-runner-function/src/test/java/com/marklogic/dhf/azure/FunctionDhfFlowTest.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.marklogic.dhf.azure;\n+\n+import com.microsoft.azure.functions.*;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.invocation.InvocationOnMock;\n+import org.mockito.stubbing.Answer;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.logging.Logger;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.*;\n+\n+\n+/**\n+ * Unit test for Function class.\n+ */\n+public class FunctionDhfFlowTest {\n+    /**\n+     * Unit test for HttpTriggerJava method.\n+     */\n+    @Test\n+    public void testHttpTriggerJava() throws Exception {\n+        // Setup\n+        @SuppressWarnings(\"unchecked\")\n+        final HttpRequestMessage<Optional<String>> req = mock(HttpRequestMessage.class);\n+\n+        final Map<String, String> queryParams = new HashMap<>();\n+        queryParams.put(\"name\", \"Azure\");\n+        doReturn(queryParams).when(req).getQueryParameters();\n+\n+        final Optional<String> queryBody = Optional.empty();\n+        doReturn(queryBody).when(req).getBody();\n+\n+        doAnswer(new Answer<HttpResponseMessage.Builder>() {\n+            @Override\n+            public HttpResponseMessage.Builder answer(InvocationOnMock invocation) {\n+                HttpStatus status = (HttpStatus) invocation.getArguments()[0];\n+                return new HttpResponseMessageMock.HttpResponseMessageBuilderMock().status(status);\n+            }\n+        }).when(req).createResponseBuilder(any(HttpStatus.class));\n+\n+        final ExecutionContext context = mock(ExecutionContext.class);\n+        doReturn(Logger.getGlobal()).when(context).getLogger();\n+\n+        @SuppressWarnings(\"unchecked\")\n+        final OutputBinding<String> msg = (OutputBinding<String>)mock(OutputBinding.class);\n+\n+        // Invoke\n+        // Running invalid flow throws Exception. The test fails without the try/catch block.\n+        try {\n+            final HttpResponseMessage ret = new FunctionDhfFlow().run(req, msg, context);\n+        } catch (java.lang.RuntimeException ex) {\n+            System.out.println (ex.getMessage());\n+        }\n+\n+        //TO-DO: Fix this\n+        // Verify - forcing OK to account for RuntimeException.\n+        assertEquals(HttpStatus.OK, HttpStatus.OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1ae20b0b27f04153c098eb1cb93bbe25119a99f"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzkyNjIw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637#pullrequestreview-368392620", "createdAt": "2020-03-03T23:07:34Z", "commit": {"oid": "a1ae20b0b27f04153c098eb1cb93bbe25119a99f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzowNzozNVrOFxZ75Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzowNzozNVrOFxZ75Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM0OTQ3Nw==", "bodyText": "for consistency, just use Builder ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637#discussion_r387349477", "createdAt": "2020-03-03T23:07:35Z", "author": {"login": "hao1st"}, "path": "azure/flow-runner-function/src/test/java/com/marklogic/dhf/azure/HttpResponseMessageMock.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package com.marklogic.dhf.azure;\n+\n+import com.microsoft.azure.functions.*;\n+\n+import java.util.Map;\n+import java.util.HashMap;\n+\n+/**\n+ * The mock for HttpResponseMessage, can be used in unit tests to verify if the\n+ * returned response by HTTP trigger function is correct or not.\n+ */\n+public class HttpResponseMessageMock implements HttpResponseMessage {\n+    private int httpStatusCode;\n+    private HttpStatusType httpStatus;\n+    private Object body;\n+    private Map<String, String> headers;\n+\n+    public HttpResponseMessageMock(HttpStatusType status, Map<String, String> headers, Object body) {\n+        this.httpStatus = status;\n+        this.httpStatusCode = status.value();\n+        this.headers = headers;\n+        this.body = body;\n+    }\n+\n+    @Override\n+    public HttpStatusType getStatus() {\n+        return this.httpStatus;\n+    }\n+\n+    @Override\n+    public int getStatusCode() {\n+        return httpStatusCode;\n+    }\n+\n+    @Override\n+    public String getHeader(String key) {\n+        return this.headers.get(key);\n+    }\n+\n+    @Override\n+    public Object getBody() {\n+        return this.body;\n+    }\n+\n+    public static class HttpResponseMessageBuilderMock implements HttpResponseMessage.Builder {\n+        private Object body;\n+        private int httpStatusCode;\n+        private Map<String, String> headers = new HashMap<>();\n+        private HttpStatusType httpStatus;\n+\n+        public Builder status(HttpStatus status) {\n+            this.httpStatusCode = status.value();\n+            this.httpStatus = status;\n+            return this;\n+        }\n+\n+        @Override\n+        public Builder status(HttpStatusType httpStatusType) {\n+            this.httpStatusCode = httpStatusType.value();\n+            this.httpStatus = httpStatusType;\n+            return this;\n+        }\n+\n+        @Override\n+        public HttpResponseMessage.Builder header(String key, String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1ae20b0b27f04153c098eb1cb93bbe25119a99f"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDY5MjI3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637#pullrequestreview-368469227", "createdAt": "2020-03-04T02:41:13Z", "commit": {"oid": "b0bd4a2a34c3b10b52e27d80a4015ba2f11a1ca9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTk5NTg1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637#pullrequestreview-368999585", "createdAt": "2020-03-04T18:01:18Z", "commit": {"oid": "b0bd4a2a34c3b10b52e27d80a4015ba2f11a1ca9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMToxOFrOFx3vhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODowMToxOFrOFx3vhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzNzgzMQ==", "bodyText": "Just a note, we can remove this once 5.2.0 is officially out.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3637#discussion_r387837831", "createdAt": "2020-03-04T18:01:18Z", "author": {"login": "rjrudin"}, "path": "azure/flow-runner-function/pom.xml", "diffHunk": "@@ -0,0 +1,267 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>com.marklogic.dhf.azure</groupId>\n+    <artifactId>az-functions</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+    <packaging>jar</packaging>\n+\n+    <name>Azure Java Functions</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <maven.compiler.source>1.8</maven.compiler.source>\n+        <maven.compiler.target>1.8</maven.compiler.target>\n+        <azure.functions.maven.plugin.version>1.4.1</azure.functions.maven.plugin.version>\n+        <azure.functions.java.library.version>1.3.1</azure.functions.java.library.version>\n+        <functionAppName>az-functions-20200227122602814</functionAppName>\n+        <stagingDirectory>${project.build.directory}/azure-functions/${functionAppName}</stagingDirectory>\n+    </properties>\n+\n+    <repositories>\n+        <repository>\n+            <id>maven.snapshots</id>\n+            <name>Maven Central Snapshot Repository</name>\n+            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n+            <releases>\n+                <enabled>false</enabled>\n+            </releases>\n+            <snapshots>\n+                <enabled>true</enabled>\n+            </snapshots>\n+        </repository>\n+      <!-- Required for some DHF dependencies, such as ml-app-deployer -->\n+      <repository>\n+        <id>jcenter</id>\n+        <url>https://jcenter.bintray.com/</url>\n+      </repository>\n+      <repository>\n+        <id>marklogic-internal</id>\n+        <url>http://distro.marklogic.com/nexus/repository/maven-releases/</url>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0bd4a2a34c3b10b52e27d80a4015ba2f11a1ca9"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2282, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}