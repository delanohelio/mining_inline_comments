{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDg3MjEz", "number": 3627, "title": "DHFPROD-4054: Reworking Spring Security to use granted authorities", "bodyText": "Changes:\n\nAdded SecurityService.getAuthorities, which has a stubbed out implementation\nReworked Spring Security so that nearly everything is in the AuthenticationFilter class\nEnabled method-level security so that granted authorities can be used with the @secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine. But the method-level security test - see what's commented out in EnvironmentController - didn't seem to work yet. Not sure if the proper response is being sent to the browser yet.", "createdAt": "2020-03-01T19:59:51Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627", "merged": true, "mergeCommit": {"oid": "108b012e2809f9bebc7ffefef4d59b359259adf9"}, "closed": true, "closedAt": "2020-03-02T22:03:35Z", "author": {"login": "rjrudin"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJewkQABqjMwODU4MzQwMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJzyCmgFqTM2NzUwNTU2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e8d8f579d0fc3cfbcce1c0ac71757aa322a3d8d", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6e8d8f579d0fc3cfbcce1c0ac71757aa322a3d8d", "committedDate": "2020-03-01T19:58:34Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine. But the method-level security test - see what's commented out in EnvironmentController - didn't seem to work yet. Not sure if the proper response is being sent to the browser yet."}, "afterCommit": {"oid": "6b5a3f4b4a42a72ae090bb3cbe7feb2e703a5f88", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6b5a3f4b4a42a72ae090bb3cbe7feb2e703a5f88", "committedDate": "2020-03-01T20:01:52Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine. But the method-level security test - see what's commented out in EnvironmentController - didn't seem to work yet. Not sure if the proper response is being sent to the browser yet."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODkwMjYz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627#pullrequestreview-366890263", "createdAt": "2020-03-01T22:04:23Z", "commit": {"oid": "6b5a3f4b4a42a72ae090bb3cbe7feb2e703a5f88"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b5a3f4b4a42a72ae090bb3cbe7feb2e703a5f88", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6b5a3f4b4a42a72ae090bb3cbe7feb2e703a5f88", "committedDate": "2020-03-01T20:01:52Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine. But the method-level security test - see what's commented out in EnvironmentController - didn't seem to work yet. Not sure if the proper response is being sent to the browser yet."}, "afterCommit": {"oid": "018b55c127465d2984ded76c10c5b1304601d50e", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/018b55c127465d2984ded76c10c5b1304601d50e", "committedDate": "2020-03-02T01:48:02Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine.\n\nThe GUI though seems to need a concept of a \"You're logged in, but you can't do this page\". The CustomExceptionHandler is returning a 403 for an AccessDeniedException - can test this out using the commented-out example in EnvironmentController - but this directs the user back to the login page."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2OTE5MzAw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627#pullrequestreview-366919300", "createdAt": "2020-03-02T02:19:43Z", "commit": {"oid": "018b55c127465d2984ded76c10c5b1304601d50e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwMjoxOTo0M1rOFwSCyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwMjoxOTo0M1rOFwSCyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE3MTU5Mg==", "bodyText": "very nice refactors... One question is that why we need to have two services (RolesService and SecurityServicce)? Would it better use a SecurityService which consolidate the roles and authorities along with one DS call?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627#discussion_r386171592", "createdAt": "2020-03-02T02:19:43Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/AuthenticationFilter.java", "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * Copyright 2012-2020 MarkLogic Corporation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.marklogic.hub.oneui.auth;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.hub.dataservices.RolesService;\n+import com.marklogic.hub.dataservices.SecurityService;\n+import com.marklogic.hub.oneui.exceptions.BadRequestException;\n+import com.marklogic.hub.oneui.exceptions.ForbiddenException;\n+import com.marklogic.hub.oneui.models.EnvironmentInfo;\n+import com.marklogic.hub.oneui.models.HubConfigSession;\n+import com.marklogic.hub.oneui.services.EnvironmentService;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.authentication.AuthenticationServiceException;\n+import org.springframework.security.authentication.BadCredentialsException;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.AuthenticationException;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.authority.SimpleGrantedAuthority;\n+import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;\n+import org.springframework.security.web.util.matcher.AntPathRequestMatcher;\n+import org.springframework.util.StringUtils;\n+import org.springframework.web.client.HttpClientErrorException;\n+import org.springframework.web.client.ResourceAccessException;\n+import org.springframework.web.client.RestTemplate;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Custom authentication filter for the one-ui web application. All authentication logic is handled by this class, with\n+ * success handled by LoginHandler and failure handled by LoginFailureHandler.\n+ */\n+public class AuthenticationFilter extends AbstractAuthenticationProcessingFilter {\n+\n+    private EnvironmentService environmentService;\n+    private HubConfigSession hubConfig;\n+\n+    public AuthenticationFilter(EnvironmentService environmentService, HubConfigSession hubConfig) {\n+        super(new AntPathRequestMatcher(\"/api/login\", \"POST\"));\n+        this.environmentService = environmentService;\n+        this.hubConfig = hubConfig;\n+        setAuthenticationSuccessHandler(new LoginHandler());\n+        setAuthenticationFailureHandler(new LoginFailureHandler());\n+    }\n+\n+    public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException, IOException {\n+        if (!request.getMethod().toUpperCase().equals(\"POST\")) {\n+            throw new AuthenticationServiceException(\"Authentication method not supported: \" + request.getMethod());\n+        }\n+\n+        final EnvironmentInfo originalEnvironmentInfo = environmentService.getEnvironment();\n+\n+        final LoginInfo loginInfo = new ObjectMapper().readValue(request.getInputStream(), LoginInfo.class);\n+\n+        final boolean datahubIsInstalled = StringUtils.isEmpty(loginInfo.mlHost);\n+        if (!datahubIsInstalled) {\n+            environmentService.setEnvironment(new EnvironmentInfo(loginInfo.mlHost, loginInfo.mlAuthMethod,\n+                loginInfo.mlPort, loginInfo.mlManageAuthMethod, loginInfo.mlManagePort, loginInfo.dhStagingAuthMethod, loginInfo.dhStagingPort, loginInfo.dhFinalAuthMethod, loginInfo.dhFinalPort));\n+        }\n+\n+        try {\n+            AuthenticationToken token = authenticateUser(loginInfo.username, loginInfo.password);\n+            token.setDetails(authenticationDetailsSource.buildDetails(request));\n+            return token;\n+        } catch (Exception e) {\n+            environmentService.setEnvironment(originalEnvironmentInfo);\n+            throw e;\n+        }\n+    }\n+\n+    /**\n+     * @param username\n+     * @param password\n+     */\n+    protected AuthenticationToken authenticateUser(String username, String password) {\n+        if (StringUtils.isEmpty(username) || StringUtils.isEmpty(password)) {\n+            throw new BadCredentialsException(\"Unauthorized\");\n+        }\n+\n+        username = username.trim();\n+\n+        EnvironmentInfo environmentInfo = environmentService.getEnvironment();\n+        hubConfig.setCredentials(environmentInfo, username, password);\n+\n+        final boolean hasManagePrivileges = canAccessManageServer(environmentInfo.mlHost);\n+\n+        final DatabaseClient stagingClient = hubConfig.newStagingClient(null);\n+\n+        boolean dataHubInstalled = false;\n+        List<GrantedAuthority> authorities = new ArrayList<>();\n+        ArrayNode roles = null;\n+\n+        try {\n+            dataHubInstalled = stagingClient.checkConnection().isConnected();\n+            if (dataHubInstalled) {\n+                roles = (ArrayNode) RolesService.on(stagingClient).getRoles();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018b55c127465d2984ded76c10c5b1304601d50e"}, "originalPosition": 117}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MzQ4MTQ2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627#pullrequestreview-367348146", "createdAt": "2020-03-02T16:38:27Z", "commit": {"oid": "018b55c127465d2984ded76c10c5b1304601d50e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDAxODg0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627#pullrequestreview-367401884", "createdAt": "2020-03-02T17:52:44Z", "commit": {"oid": "018b55c127465d2984ded76c10c5b1304601d50e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "018b55c127465d2984ded76c10c5b1304601d50e", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/018b55c127465d2984ded76c10c5b1304601d50e", "committedDate": "2020-03-02T01:48:02Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine.\n\nThe GUI though seems to need a concept of a \"You're logged in, but you can't do this page\". The CustomExceptionHandler is returning a 403 for an AccessDeniedException - can test this out using the commented-out example in EnvironmentController - but this directs the user back to the login page."}, "afterCommit": {"oid": "775448aa062bc006eb5ea24bb403ff582ad35f8d", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/775448aa062bc006eb5ea24bb403ff582ad35f8d", "committedDate": "2020-03-02T18:58:22Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "775448aa062bc006eb5ea24bb403ff582ad35f8d", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/775448aa062bc006eb5ea24bb403ff582ad35f8d", "committedDate": "2020-03-02T18:58:22Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine."}, "afterCommit": {"oid": "2eab5d166c21973d502256488df8b5a2879597a9", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/2eab5d166c21973d502256488df8b5a2879597a9", "committedDate": "2020-03-02T19:02:56Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2eab5d166c21973d502256488df8b5a2879597a9", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/2eab5d166c21973d502256488df8b5a2879597a9", "committedDate": "2020-03-02T19:02:56Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine."}, "afterCommit": {"oid": "ac99abcd0112bb401cbf202c4a0a1d98ba03ac5a", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/ac99abcd0112bb401cbf202c4a0a1d98ba03ac5a", "committedDate": "2020-03-02T19:51:23Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac99abcd0112bb401cbf202c4a0a1d98ba03ac5a", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/ac99abcd0112bb401cbf202c4a0a1d98ba03ac5a", "committedDate": "2020-03-02T19:51:23Z", "message": "DHFPROD-4054: Reworking Spring Security to use granted authorities\n\nChanges:\n\n- Added SecurityService.getAuthorities, which has a stubbed out implementation\n- Reworked Spring Security so that nearly everything is in the AuthenticationFilter class\n- Enabled method-level security so that granted authorities can be used with the @Secured annotation on controller methods\n\nI tested this manually - with DH installed and without it installed - and all seemed fine."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDgyMjg2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627#pullrequestreview-367482286", "createdAt": "2020-03-02T19:53:34Z", "commit": {"oid": "ac99abcd0112bb401cbf202c4a0a1d98ba03ac5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTA1NTY5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3627#pullrequestreview-367505569", "createdAt": "2020-03-02T20:31:13Z", "commit": {"oid": "ac99abcd0112bb401cbf202c4a0a1d98ba03ac5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2267, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}