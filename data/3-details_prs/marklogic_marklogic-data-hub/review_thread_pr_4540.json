{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNDMyNjU2", "number": 4540, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1Njo0OVrOEhtsWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTowMDo0OFrOEhtz7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzg3MDk4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1Njo0OVrOHPLhaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1Njo0OVrOHPLhaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3OTQ2Nw==", "bodyText": "This code should all be in a new subproject of this repository - e.g. ./marklogic-data-hub-glue-connector. That allows us to have a build.gradle file just for that subproject. We don't want the code and dependencies in here as we don't want to include a bunch of spark jars in every DHF product.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4540#discussion_r485679467", "createdAt": "2020-09-09T14:56:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/build.gradle", "diffHunk": "@@ -73,6 +73,12 @@ dependencies {\n     // For installer program\n     compile \"com.beust:jcommander:1.72\"\n \n+    compile group: 'org.apache.spark', name:'spark-sql_2.11',version: '2.4.5'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bdf554f85c6eae927c8ee016b4fcfecfcbff857"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzg3MzkwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/connector/IOTestUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1NzoyNlrOHPLjQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1NzoyNlrOHPLjQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3OTkzOA==", "bodyText": "I think this is only used for tests, so it's fine to include for now. It'll likely be replaced though based on the test plumbing we have in the core project - I will help out with that.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4540#discussion_r485679938", "createdAt": "2020-09-09T14:57:26Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/connector/IOTestUtil.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bdf554f85c6eae927c8ee016b4fcfecfcbff857"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzg4Nzg1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/connector/Writer/MarkLogicDataWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTowMDoxN1rOHPLsCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTowMDoxN1rOHPLsCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4MjE4Nw==", "bodyText": "For the package, let's do com.marklogic.hub.cloud.aws.glue - I know that's long, but it's consistent with an existing package we have in the Hub Central project. \"com.marklogic.hub\" has to be there, and \"cloud\" is the parent package for the eventual \"azure\" subpackage. And then \"glue\" because we may have additional things specific to AWS that don't involve glue. I am guessing we do not need an additional \"connector\" subpackage, as anything in the \"glue\" package would necessarily be associated with the connector. Does that seem right?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4540#discussion_r485682187", "createdAt": "2020-09-09T15:00:17Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/connector/Writer/MarkLogicDataWriter.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 MarkLogic Corporation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.marklogic.hub.connector.Writer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bdf554f85c6eae927c8ee016b4fcfecfcbff857"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzg5MDM5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/connector/Writer/MarkLogicDataWriterFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTowMDo0OFrOHPLtrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNTowMDo0OFrOHPLtrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4MjYwNw==", "bodyText": "This is fine for now, but we'll eventually want to replace the use of System.out with some logging framework that is friendly with Glue.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4540#discussion_r485682607", "createdAt": "2020-09-09T15:00:48Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/connector/Writer/MarkLogicDataWriterFactory.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 MarkLogic Corporation\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.marklogic.hub.connector.Writer;\n+\n+import org.apache.spark.sql.catalyst.InternalRow;\n+import org.apache.spark.sql.sources.v2.writer.DataWriter;\n+import org.apache.spark.sql.sources.v2.writer.DataWriterFactory;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class MarkLogicDataWriterFactory implements DataWriterFactory<InternalRow> {\n+    private Map<String, String> map;\n+    private StructType schema;\n+    public MarkLogicDataWriterFactory(Map<String, String> map, StructType schema) {\n+        this.map = map;\n+        this.schema = schema;\n+    }\n+\n+    @Override\n+    public DataWriter<InternalRow> createDataWriter(int partitionId, long taskId, long epochId) {\n+        System.out.println(\"************** task id ************** \"+ taskId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bdf554f85c6eae927c8ee016b4fcfecfcbff857"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3311, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}