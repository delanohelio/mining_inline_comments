{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2Njc0Mjg1", "number": 5053, "title": "DHFPROD-6385: Optimize top-level value retrieval for matching", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\nN/A Code passes ESLint tests\n\n\nN/A Added Tests\n\n\nReviewer:\n\n\nN/A Reviewed Tests", "createdAt": "2020-12-29T23:44:19Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053", "merged": true, "mergeCommit": {"oid": "989adec49ebac4d76dffec89939e2cb8b29de429"}, "closed": true, "closedAt": "2021-01-06T18:34:14Z", "author": {"login": "ryanjdew"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrTcEZAFqTU2MDEzNzMwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtjf10gFqTU2MjkyODI2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMTM3MzAy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#pullrequestreview-560137302", "createdAt": "2020-12-30T17:28:00Z", "commit": {"oid": "9e632e5e4cbd2eac4050be56fc3fa1eb92bd5e22"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNzoyODowMFrOIMxzVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxODowNTo0MVrOIMyc5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI2OTc4MA==", "bodyText": "Is the above comment still correct, given that line 348 is no longer checking on the existence of multiStructPropMultiValueMap?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#discussion_r550269780", "createdAt": "2020-12-30T17:28:00Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/com.marklogic.smart-mastering/matcher-impl/matcher-impl.xqy", "diffHunk": "@@ -377,19 +381,16 @@ declare function match-impl:query-map-to-query(\n         else (),\n         $query\n       ),\n-\n       match-impl:multi-struct-prop-multi-value-queries($query-map, $document, $target-entity)\n       )\n-    where fn:exists($queries)\n     return (\n       (: no caching in the structured properties case (yet) :)\n-      if (fn:not(map:contains($query-map, \"multiStructPropMultiValueMap\"))) then\n+      if (fn:empty(map:get($query-map, \"multiStructPropMultiValueMap\"))) then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e632e5e4cbd2eac4050be56fc3fa1eb92bd5e22"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI3Njg2OQ==", "bodyText": "This is a good change for the test (although I think the two tests using this should both be replaced) - when I tried to debug this, I was puzzled by how this was even working before, not realizing that all the mastering config was in the step definition, not in the flow. Having mastering config in the step definition is very surprising - that should definitely be moved to where we expect the config to be - i.e. in a flow or step document.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#discussion_r550276869", "createdAt": "2020-12-30T17:52:30Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/resources/master-test/flows/myNewFlow.flow.json", "diffHunk": "@@ -32,13 +32,136 @@\n       }\n     },\n     \"3\": {\n-      \"stepDefinitionName\": \"mastering\",\n+      \"stepDefinitionName\": \"default-mastering\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e632e5e4cbd2eac4050be56fc3fa1eb92bd5e22"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI4MDQyMg==", "bodyText": "This test, and testMasterStep, are failing locally for me, and also in Jenkins - https://jenkins.marklogic.com/blue/organizations/jenkins/Datahub_CI/detail/PR-5053/1/tests .\nIt's very difficult to debug these tests. The assertion messages below only restate what the assertions state. Before the mastering step is run, there are 239 docs in the \"mapping\" collection. Why are 7 match results expected?\nI recommend trying to rework this test as part of this PR. The scope appears to be just verifying that the match endpoint works. If so, I think all we need is a test that inserts two documents (one that will match and one that won't), one flow with a mastering step, and then uses a test document to verify that one match is returned. The assertion messages should explain why the match is expected, and why the test doc doesn't match the other document. That way, when the test fails in the future, it'll be much easier to debug. Right now, it's nearly impossible to debug because a developer is faced with a ton of analysis work to figure out why 7 matches are expected, and which ones those are. Instead of trying to document all of that, I think it'd be easier and better in the long term to just replace this test.\nI recommend replacing testMasterStep for the same reason - it's failing with a message of \"At least 10 merges are expected\", which doesn't inspire much confidence in how accurate merging is (i.e. is it okay if there are 10 merges, or 50 merges? If so, why?).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#discussion_r550280422", "createdAt": "2020-12-30T18:05:41Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/master/MasterTest.java", "diffHunk": "@@ -62,7 +62,12 @@ public void testMatchEndpoint() {\n         makeInputFilePathsAbsoluteInFlow(\"myNewFlow\");\n \n         runAsDataHubOperator();\n-        runFlow(new FlowInputs(\"myNewFlow\", \"1\", \"2\"));\n+        RunFlowResponse flowResponse = runFlow(new FlowInputs(\"myNewFlow\", \"1\", \"2\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e632e5e4cbd2eac4050be56fc3fa1eb92bd5e22"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e632e5e4cbd2eac4050be56fc3fa1eb92bd5e22", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9e632e5e4cbd2eac4050be56fc3fa1eb92bd5e22", "committedDate": "2020-12-29T23:42:03Z", "message": "DHFPROD-6385: Optimize top-level value retrieval for matching"}, "afterCommit": {"oid": "e1d60f8a0a249af8ce9acfa6f6afcdb27299ecb4", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e1d60f8a0a249af8ce9acfa6f6afcdb27299ecb4", "committedDate": "2020-12-31T16:41:44Z", "message": "DHFPROD-6385: Optimize top-level value retrieval for matching"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjUwNDgy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#pullrequestreview-561250482", "createdAt": "2021-01-04T18:38:08Z", "commit": {"oid": "e1d60f8a0a249af8ce9acfa6f6afcdb27299ecb4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzc4NDg2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#pullrequestreview-561378486", "createdAt": "2021-01-04T22:01:11Z", "commit": {"oid": "e1d60f8a0a249af8ce9acfa6f6afcdb27299ecb4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9ac8408d694f8cfd6fb61922eae656d4cb31d36", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e9ac8408d694f8cfd6fb61922eae656d4cb31d36", "committedDate": "2021-01-05T21:12:30Z", "message": "DHFPROD-6385: Optimize top-level value retrieval for matching"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1d60f8a0a249af8ce9acfa6f6afcdb27299ecb4", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e1d60f8a0a249af8ce9acfa6f6afcdb27299ecb4", "committedDate": "2020-12-31T16:41:44Z", "message": "DHFPROD-6385: Optimize top-level value retrieval for matching"}, "afterCommit": {"oid": "e9ac8408d694f8cfd6fb61922eae656d4cb31d36", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e9ac8408d694f8cfd6fb61922eae656d4cb31d36", "committedDate": "2021-01-05T21:12:30Z", "message": "DHFPROD-6385: Optimize top-level value retrieval for matching"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTEzNjE0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#pullrequestreview-562913614", "createdAt": "2021-01-06T17:45:07Z", "commit": {"oid": "e9ac8408d694f8cfd6fb61922eae656d4cb31d36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTI4MjY0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5053#pullrequestreview-562928264", "createdAt": "2021-01-06T18:05:17Z", "commit": {"oid": "e9ac8408d694f8cfd6fb61922eae656d4cb31d36"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1468, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}