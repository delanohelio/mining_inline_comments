{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNTc1NDgx", "number": 4327, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMDo1Njo1MlrOEUzlMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMDo1Njo1MlrOEUzlMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjUyMDgyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/header/header.test.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMDo1Njo1MlrOG7NYUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwMjozOTozMFrOG7O_XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczODM4Ng==", "bodyText": "This is ok for now. Next time you make a PR, pls try and use rerender to test with different variable options in the same test.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4327#discussion_r464738386", "createdAt": "2020-08-04T00:56:52Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/header/header.test.tsx", "diffHunk": "@@ -15,36 +15,60 @@ describe('Header component', () => {\n \n     const { getByText, getByLabelText, queryByText } = render(\n       <Router>\n-        <UserContext.Provider value={userNotAuthenticated}>\n-          <Header environment={data.environment}/>\n-        </UserContext.Provider>\n+        <Header environment={data.environment}/>\n       </Router>\n     )\n-\n+    \n     expect(getByLabelText('header-logo')).toBeInTheDocument();\n     expect(getByText(Application.title)).toBeInTheDocument();\n     expect(getByLabelText('icon: question-circle')).toBeInTheDocument();\n     expect(queryByText('icon: user')).not.toBeInTheDocument();\n-\n+    //unauthenticated users get sent to default Marklogic docs \n+    expect(document.querySelector('#help-link')).toHaveAttribute('href', 'https://docs.marklogic.com/datahub/')\n   });\n \n   test('should render correctly when a user is logged in', async () => {\n \n     const { getByText, getByLabelText } = render(\n       <Router>\n         <UserContext.Provider value={userAuthenticated}>\n-          <Header environment={data.environment}/>\n+          <Header environment = {{...data.environment, dataHubVersion: '5.3-SNAPSHOT'}}/>\n         </UserContext.Provider>\n       </Router>\n     )\n-\n     expect(getByLabelText('header-logo')).toBeInTheDocument();\n     expect(getByText(Application.title)).toBeInTheDocument();\n     expect(getByText(data.environment.serviceName)).toBeInTheDocument();\n     // expect(getByLabelText('icon: search')).toBeInTheDocument();\n     expect(getByLabelText('icon: question-circle')).toBeInTheDocument();\n+    //test version specific link is correct when environment hub version data is set to '5.3-SNAPSHOT'\n+    expect(document.querySelector('#help-link')).toHaveAttribute('href', 'https://docs.marklogic.com/datahub/5.3');\n     // expect(getByLabelText('icon: setting')).toBeInTheDocument();\n     expect(getByLabelText('icon: user')).toBeInTheDocument();\n   });\n \n-});\n+  test('Verify proper version link given specific release dataHub release version', async () => {\n+    const {} = render(\n+      <Router>\n+        <UserContext.Provider value={userAuthenticated}>\n+          <Header environment = {{...data.environment, dataHubVersion: '5.2.1'}}/>\n+        </UserContext.Provider>\n+      </Router>\n+    )\n+    expect(document.querySelector('#help-link')).toHaveAttribute('href', 'https://docs.marklogic.com/datahub/5.2');\n+\n+  });\n+\n+  test('Verify proper version link given scenario with multi-digit dataHub versions', async () => {\n+    const {} = render(\n+      <Router>\n+        <UserContext.Provider value={userAuthenticated}>\n+          <Header environment = {{...data.environment, dataHubVersion: '5.64.123456'}}/>\n+        </UserContext.Provider>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2b45589f02816ef9ca1ed5ecc55eceff5065d1b"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc2NDc2NA==", "bodyText": "Thanks @bsrikan . Was looking for a way to do that, did not know about rerender. Will refactor and sneak that into my next PR.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4327#discussion_r464764764", "createdAt": "2020-08-04T02:39:30Z", "author": {"login": "briantang"}, "path": "marklogic-data-hub-central/ui/src/components/header/header.test.tsx", "diffHunk": "@@ -15,36 +15,60 @@ describe('Header component', () => {\n \n     const { getByText, getByLabelText, queryByText } = render(\n       <Router>\n-        <UserContext.Provider value={userNotAuthenticated}>\n-          <Header environment={data.environment}/>\n-        </UserContext.Provider>\n+        <Header environment={data.environment}/>\n       </Router>\n     )\n-\n+    \n     expect(getByLabelText('header-logo')).toBeInTheDocument();\n     expect(getByText(Application.title)).toBeInTheDocument();\n     expect(getByLabelText('icon: question-circle')).toBeInTheDocument();\n     expect(queryByText('icon: user')).not.toBeInTheDocument();\n-\n+    //unauthenticated users get sent to default Marklogic docs \n+    expect(document.querySelector('#help-link')).toHaveAttribute('href', 'https://docs.marklogic.com/datahub/')\n   });\n \n   test('should render correctly when a user is logged in', async () => {\n \n     const { getByText, getByLabelText } = render(\n       <Router>\n         <UserContext.Provider value={userAuthenticated}>\n-          <Header environment={data.environment}/>\n+          <Header environment = {{...data.environment, dataHubVersion: '5.3-SNAPSHOT'}}/>\n         </UserContext.Provider>\n       </Router>\n     )\n-\n     expect(getByLabelText('header-logo')).toBeInTheDocument();\n     expect(getByText(Application.title)).toBeInTheDocument();\n     expect(getByText(data.environment.serviceName)).toBeInTheDocument();\n     // expect(getByLabelText('icon: search')).toBeInTheDocument();\n     expect(getByLabelText('icon: question-circle')).toBeInTheDocument();\n+    //test version specific link is correct when environment hub version data is set to '5.3-SNAPSHOT'\n+    expect(document.querySelector('#help-link')).toHaveAttribute('href', 'https://docs.marklogic.com/datahub/5.3');\n     // expect(getByLabelText('icon: setting')).toBeInTheDocument();\n     expect(getByLabelText('icon: user')).toBeInTheDocument();\n   });\n \n-});\n+  test('Verify proper version link given specific release dataHub release version', async () => {\n+    const {} = render(\n+      <Router>\n+        <UserContext.Provider value={userAuthenticated}>\n+          <Header environment = {{...data.environment, dataHubVersion: '5.2.1'}}/>\n+        </UserContext.Provider>\n+      </Router>\n+    )\n+    expect(document.querySelector('#help-link')).toHaveAttribute('href', 'https://docs.marklogic.com/datahub/5.2');\n+\n+  });\n+\n+  test('Verify proper version link given scenario with multi-digit dataHub versions', async () => {\n+    const {} = render(\n+      <Router>\n+        <UserContext.Provider value={userAuthenticated}>\n+          <Header environment = {{...data.environment, dataHubVersion: '5.64.123456'}}/>\n+        </UserContext.Provider>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDczODM4Ng=="}, "originalCommit": {"oid": "d2b45589f02816ef9ca1ed5ecc55eceff5065d1b"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3912, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}