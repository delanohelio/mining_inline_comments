{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NTU5NjQ0", "number": 4212, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMToxNToxOVrOEOb2Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzo0MTo0M1rOEO6KLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTcxNzY3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/detail-header/detail-header.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMToxNToxOVrOGxlnqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDoxOVrOGxmL6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0OTc3MQ==", "bodyText": "Is this necessary to get this to work? Triple equal is better for strict equality checks.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r454649771", "createdAt": "2020-07-14T21:15:19Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/detail-header/detail-header.tsx", "diffHunk": "@@ -46,7 +46,7 @@ const DetailHeader: React.FC<Props> = (props) => {\n           Object.keys(props.document.envelope.instance).forEach(instance => {\n             if (instance !== 'info') {\n               Object.keys(props.document.envelope.instance[instance]).forEach(function (key) {\n-                if (props.primaryKey === props.document.envelope.instance[instance][key]) {\n+                if (props.primaryKey == props.document.envelope.instance[instance][key]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e682e1a2f9819755f6c00473a38edbab10c62b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1OTA1MA==", "bodyText": "They are not the same datatype.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r454659050", "createdAt": "2020-07-14T21:34:19Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/detail-header/detail-header.tsx", "diffHunk": "@@ -46,7 +46,7 @@ const DetailHeader: React.FC<Props> = (props) => {\n           Object.keys(props.document.envelope.instance).forEach(instance => {\n             if (instance !== 'info') {\n               Object.keys(props.document.envelope.instance[instance]).forEach(function (key) {\n-                if (props.primaryKey === props.document.envelope.instance[instance][key]) {\n+                if (props.primaryKey == props.document.envelope.instance[instance][key]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0OTc3MQ=="}, "originalCommit": {"oid": "c9e682e1a2f9819755f6c00473a38edbab10c62b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTg2NTExOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjowNTo0N1rOGxnCaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjoyMjo0MFrOGxnb5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3MzAwMw==", "bodyText": "Why are we using primaryKeyValue within the function encodeURI ? If 'encodeURI' is a generic function to encode any property then should we rename it to something like 'encodeProperty' ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r454673003", "createdAt": "2020-07-14T22:05:47Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.tsx", "diffHunk": "@@ -154,7 +154,7 @@ const ResultsTabularView = (props) => {\n         let primaryKeyValue = item.primaryKey?.propertyValue;\n         let isUri = item.primaryKey?.propertyPath === 'uri';\n         let uri = encodeURIComponent(item.uri);\n-        let path = { pathname: `/detail/${isUri ? '-' : primaryKeyValue}/${uri}` };\n+        let path = { pathname: `/detail/${isUri ? '-' : encodeURI(primaryKeyValue)}/${uri}` };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e682e1a2f9819755f6c00473a38edbab10c62b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3OTM4NQ==", "bodyText": "encodeURI is a standard method to code a string for URL use. But since it's a string and not the full URL, the method should be encodeURIComponent.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r454679385", "createdAt": "2020-07-14T22:22:16Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.tsx", "diffHunk": "@@ -154,7 +154,7 @@ const ResultsTabularView = (props) => {\n         let primaryKeyValue = item.primaryKey?.propertyValue;\n         let isUri = item.primaryKey?.propertyPath === 'uri';\n         let uri = encodeURIComponent(item.uri);\n-        let path = { pathname: `/detail/${isUri ? '-' : primaryKeyValue}/${uri}` };\n+        let path = { pathname: `/detail/${isUri ? '-' : encodeURI(primaryKeyValue)}/${uri}` };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3MzAwMw=="}, "originalCommit": {"oid": "c9e682e1a2f9819755f6c00473a38edbab10c62b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3OTUyNA==", "bodyText": "It actually should be encodeURIComponent not encodeURI. Thanks for noticing that. It's JS global function.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r454679524", "createdAt": "2020-07-14T22:22:40Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.tsx", "diffHunk": "@@ -154,7 +154,7 @@ const ResultsTabularView = (props) => {\n         let primaryKeyValue = item.primaryKey?.propertyValue;\n         let isUri = item.primaryKey?.propertyPath === 'uri';\n         let uri = encodeURIComponent(item.uri);\n-        let path = { pathname: `/detail/${isUri ? '-' : primaryKeyValue}/${uri}` };\n+        let path = { pathname: `/detail/${isUri ? '-' : encodeURI(primaryKeyValue)}/${uri}` };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY3MzAwMw=="}, "originalCommit": {"oid": "c9e682e1a2f9819755f6c00473a38edbab10c62b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDY4MjIwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzo0MDo1MVrOGyVApQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDoyNTo0N1rOGytfrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNjIxMw==", "bodyText": "@timur-isangulov we no longer need wait times, the tests pass without wait times with the new methods srikanth added. I have made changes to all the tests to work without wait times.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r455426213", "createdAt": "2020-07-15T23:40:51Z", "author": {"login": "Sanjeevani19"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "diffHunk": "@@ -153,17 +167,14 @@ xdescribe('json scenario for table on browse documents page', () => {\n     cy.visit('/');\n     cy.contains(Application.title);\n     cy.loginAsDeveloper().withRequest();\n-    // temporary change as tile is not working\n-    homePage.getTitle().click();\n-    cy.wait(500);\n-    // temporary change end here\n-    homePage.getBrowseEntities().click();\n-    cy.wait(2000);\n-    browsePage.clickTableView();\n-    browsePage.selectEntity('All Entities');\n+    cy.location('pathname', { timeout: 10000 }).should('include', '/tiles');\n+    cy.wait(200);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc842a68f3221cb9ed779205ebcfae17c9fb78fa"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgyNzM3NA==", "bodyText": "Removed. Thanks.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r455827374", "createdAt": "2020-07-16T14:25:47Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "diffHunk": "@@ -153,17 +167,14 @@ xdescribe('json scenario for table on browse documents page', () => {\n     cy.visit('/');\n     cy.contains(Application.title);\n     cy.loginAsDeveloper().withRequest();\n-    // temporary change as tile is not working\n-    homePage.getTitle().click();\n-    cy.wait(500);\n-    // temporary change end here\n-    homePage.getBrowseEntities().click();\n-    cy.wait(2000);\n-    browsePage.clickTableView();\n-    browsePage.selectEntity('All Entities');\n+    cy.location('pathname', { timeout: 10000 }).should('include', '/tiles');\n+    cy.wait(200);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNjIxMw=="}, "originalCommit": {"oid": "cc842a68f3221cb9ed779205ebcfae17c9fb78fa"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDY4Mzk2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzo0MTo0M1rOGyVBpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDoyNTo1OVrOGytgMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNjQ3MA==", "bodyText": "@timur-isangulov the default view is table so we don't need this line to test table scenarios", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r455426470", "createdAt": "2020-07-15T23:41:43Z", "author": {"login": "Sanjeevani19"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "diffHunk": "@@ -153,17 +167,14 @@ xdescribe('json scenario for table on browse documents page', () => {\n     cy.visit('/');\n     cy.contains(Application.title);\n     cy.loginAsDeveloper().withRequest();\n-    // temporary change as tile is not working\n-    homePage.getTitle().click();\n-    cy.wait(500);\n-    // temporary change end here\n-    homePage.getBrowseEntities().click();\n-    cy.wait(2000);\n-    browsePage.clickTableView();\n-    browsePage.selectEntity('All Entities');\n+    cy.location('pathname', { timeout: 10000 }).should('include', '/tiles');\n+    cy.wait(200);\n+    cy.waitUntil(() => toolbar.getExploreToolbarIcon()).click();\n+    cy.waitUntil(() => browsePage.getExploreButton()).click();\n+    browsePage.getTableView();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc842a68f3221cb9ed779205ebcfae17c9fb78fa"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgyNzUwNA==", "bodyText": "Removed. Thanks.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4212#discussion_r455827504", "createdAt": "2020-07-16T14:25:59Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/explorer/scenarios.json.tsx", "diffHunk": "@@ -153,17 +167,14 @@ xdescribe('json scenario for table on browse documents page', () => {\n     cy.visit('/');\n     cy.contains(Application.title);\n     cy.loginAsDeveloper().withRequest();\n-    // temporary change as tile is not working\n-    homePage.getTitle().click();\n-    cy.wait(500);\n-    // temporary change end here\n-    homePage.getBrowseEntities().click();\n-    cy.wait(2000);\n-    browsePage.clickTableView();\n-    browsePage.selectEntity('All Entities');\n+    cy.location('pathname', { timeout: 10000 }).should('include', '/tiles');\n+    cy.wait(200);\n+    cy.waitUntil(() => toolbar.getExploreToolbarIcon()).click();\n+    cy.waitUntil(() => browsePage.getExploreButton()).click();\n+    browsePage.getTableView();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNjQ3MA=="}, "originalCommit": {"oid": "cc842a68f3221cb9ed779205ebcfae17c9fb78fa"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3979, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}