{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0Njg0MzUz", "number": 4961, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0NDoyMFrOFDBlWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTo1MzowNVrOFDG8eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzE1OTk1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjo0NDoyMFrOICeg8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODo1NjowNVrOICkYeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2ODAxNg==", "bodyText": "I believe this needs to load readLib.sjs and partition-lib.xqy as well, since initializeRead.sjs depends on those.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4961#discussion_r539468016", "createdAt": "2020-12-09T16:44:20Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "diffHunk": "@@ -153,6 +161,10 @@ private InputStreamHandle readCustomInitializeApiDefinition(Map<String, String>\n                 throw new RuntimeException(\"Unable to read custom API module for initializing Read job: \" + options.get(key) + \"; cause: \" + ex.getMessage(), ex);\n             }\n         }\n+        else {\n+            loadModuleIfNotPresent(\"/marklogic-data-hub-spark-connector/initializeRead.sjs\", Format.TEXT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fb5d4f1765f76eabdc6853e7b90b7282723f7c1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUzMTYwMA==", "bodyText": "Hi @rjrudin, readLib.sjs and partition-lib.xqy are loaded to the data-hub-MODULES in the \"determineReadRowsEndpointParams\" method so they will be present in the database before we reach here. Also, currently i have not put any condition for loading  readLib.sjs and partition-lib.xqy. Hence they will always be loaded if they are not present. Please let me know if we need to add a condition.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4961#discussion_r539531600", "createdAt": "2020-12-09T18:07:57Z", "author": {"login": "anu3990"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "diffHunk": "@@ -153,6 +161,10 @@ private InputStreamHandle readCustomInitializeApiDefinition(Map<String, String>\n                 throw new RuntimeException(\"Unable to read custom API module for initializing Read job: \" + options.get(key) + \"; cause: \" + ex.getMessage(), ex);\n             }\n         }\n+        else {\n+            loadModuleIfNotPresent(\"/marklogic-data-hub-spark-connector/initializeRead.sjs\", Format.TEXT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2ODAxNg=="}, "originalCommit": {"oid": "6fb5d4f1765f76eabdc6853e7b90b7282723f7c1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2NDE1Mg==", "bodyText": "I see - determineReadRowsEndpointParams is called before initializeRead is called. Sounds good.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4961#discussion_r539564152", "createdAt": "2020-12-09T18:56:05Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "diffHunk": "@@ -153,6 +161,10 @@ private InputStreamHandle readCustomInitializeApiDefinition(Map<String, String>\n                 throw new RuntimeException(\"Unable to read custom API module for initializing Read job: \" + options.get(key) + \"; cause: \" + ex.getMessage(), ex);\n             }\n         }\n+        else {\n+            loadModuleIfNotPresent(\"/marklogic-data-hub-spark-connector/initializeRead.sjs\", Format.TEXT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ2ODAxNg=="}, "originalCommit": {"oid": "6fb5d4f1765f76eabdc6853e7b90b7282723f7c1"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODAzNzI4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTo1Mjo1MFrOICmomg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDoxNjoxMVrOICnhrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTA1MA==", "bodyText": "Just realized this is duplicated from HubDataSourceWriter!\nLet's instead have a ModuleWriter class with methods of loadModuleIfNotPresent and endpointExists. It should go in the \"v2\" package since it's generic to read/write. Its constructor should accept a HubClient which it'll use to interact with the modules database.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4961#discussion_r539601050", "createdAt": "2020-12-09T19:52:50Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "diffHunk": "@@ -204,6 +221,35 @@ private JsonNode determineReadRowsEndpointParams(Map<String, String> options) {\n         return endpointParams;\n     }\n \n+    private void loadModuleIfNotPresent(String modulePath, Format format) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fc111b4d6f094c5cc4c5ff7aed6faa05fc03211"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYxNTY2Mg==", "bodyText": "Done", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4961#discussion_r539615662", "createdAt": "2020-12-09T20:16:11Z", "author": {"login": "anu3990"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "diffHunk": "@@ -204,6 +221,35 @@ private JsonNode determineReadRowsEndpointParams(Map<String, String> options) {\n         return endpointParams;\n     }\n \n+    private void loadModuleIfNotPresent(String modulePath, Format format) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTA1MA=="}, "originalCommit": {"oid": "0fc111b4d6f094c5cc4c5ff7aed6faa05fc03211"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODAzODM0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTo1MzowNVrOICmpNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDoxNjoxN1rOICnh9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTIwNQ==", "bodyText": "This can go into ModuleWriter as well.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4961#discussion_r539601205", "createdAt": "2020-12-09T19:53:05Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "diffHunk": "@@ -204,6 +221,35 @@ private JsonNode determineReadRowsEndpointParams(Map<String, String> options) {\n         return endpointParams;\n     }\n \n+    private void loadModuleIfNotPresent(String modulePath, Format format) {\n+        if (!endpointExists(modulePath)) {\n+            try {\n+                DocumentManager modMgr = hubClient.getModulesClient().newDocumentManager();\n+                DocumentMetadataHandle metadata = buildDocumentMetadata(hubClientConfig);\n+                logger.info(\"Loading module: \" + modulePath);\n+                modMgr.write(modulePath, metadata, new InputStreamHandle(new ClassPathResource(modulePath).getInputStream()).withFormat(format));\n+            } catch (IOException e) {\n+                throw new RuntimeException(\"Unable to write endpoint at path: \" + modulePath + \"; cause: \" + e.getMessage(), e);\n+            }\n+        }\n+    }\n+\n+    private boolean endpointExists(String scriptPath) {\n+        return !(hubClient.getModulesClient().newJSONDocumentManager().exists(scriptPath) == null);\n+    }\n+\n+    private DocumentMetadataHandle buildDocumentMetadata(HubClientConfig hubClientConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fc111b4d6f094c5cc4c5ff7aed6faa05fc03211"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYxNTczNQ==", "bodyText": "Done", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4961#discussion_r539615735", "createdAt": "2020-12-09T20:16:17Z", "author": {"login": "anu3990"}, "path": "marklogic-data-hub-spark-connector/src/main/java/com/marklogic/hub/spark/sql/sources/v2/reader/HubDataSourceReader.java", "diffHunk": "@@ -204,6 +221,35 @@ private JsonNode determineReadRowsEndpointParams(Map<String, String> options) {\n         return endpointParams;\n     }\n \n+    private void loadModuleIfNotPresent(String modulePath, Format format) {\n+        if (!endpointExists(modulePath)) {\n+            try {\n+                DocumentManager modMgr = hubClient.getModulesClient().newDocumentManager();\n+                DocumentMetadataHandle metadata = buildDocumentMetadata(hubClientConfig);\n+                logger.info(\"Loading module: \" + modulePath);\n+                modMgr.write(modulePath, metadata, new InputStreamHandle(new ClassPathResource(modulePath).getInputStream()).withFormat(format));\n+            } catch (IOException e) {\n+                throw new RuntimeException(\"Unable to write endpoint at path: \" + modulePath + \"; cause: \" + e.getMessage(), e);\n+            }\n+        }\n+    }\n+\n+    private boolean endpointExists(String scriptPath) {\n+        return !(hubClient.getModulesClient().newJSONDocumentManager().exists(scriptPath) == null);\n+    }\n+\n+    private DocumentMetadataHandle buildDocumentMetadata(HubClientConfig hubClientConfig) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTIwNQ=="}, "originalCommit": {"oid": "0fc111b4d6f094c5cc4c5ff7aed6faa05fc03211"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3026, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}