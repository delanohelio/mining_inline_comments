{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MzIzNTA1", "number": 4117, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzozNDozOVrOEIkCHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxMDowMlrOEIkcow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDE0NDI5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.modeling.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzozNDozOVrOGomjXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxNjoxMVrOGonR_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyNzg2OA==", "bodyText": "do the tests fail without the wait here?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4117#discussion_r445227868", "createdAt": "2020-06-24T23:34:39Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.modeling.tsx", "diffHunk": "@@ -21,6 +21,7 @@ describe('Entity Modeling', () => {\n     cy.loginAsTestUserWithRoles(\"hub-central-entity-model-reader\", \"hub-central-entity-model-writer\").withRequest()    \n \n     toolbar.getModelToolbarIcon().should('exist');\n+    cy.wait(200);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb12d9ed2cf624de7ab0e6bc4f6708daec9a2ac6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzOTgwNw==", "bodyText": "yeah it started failing without the wait after rebasing to develop", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4117#discussion_r445239807", "createdAt": "2020-06-25T00:16:11Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.modeling.tsx", "diffHunk": "@@ -21,6 +21,7 @@ describe('Entity Modeling', () => {\n     cy.loginAsTestUserWithRoles(\"hub-central-entity-model-reader\", \"hub-central-entity-model-writer\").withRequest()    \n \n     toolbar.getModelToolbarIcon().should('exist');\n+    cy.wait(200);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyNzg2OA=="}, "originalCommit": {"oid": "bb12d9ed2cf624de7ab0e6bc4f6708daec9a2ac6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDIwMjIyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDowNDo0N1rOGonGGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxNzo1OFrOGonT-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNjc2Mw==", "bodyText": "Can we add an assertion to ensure entityName cannot be edited in one of theses tests for edit?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4117#discussion_r445236763", "createdAt": "2020-06-25T00:04:47Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "diffHunk": "@@ -160,5 +166,43 @@ describe('Entity Modeling Property Table Component', () => {\n \n     expect(getByText('newStructure')).toBeInTheDocument();\n   });\n+\n+  test('can edit a basic property', async () => {\n+    let entityName = propertyTableEntities[2].entityName;\n+    let definitions = propertyTableEntities[2].model.definitions;\n+    const { getByText, getByTestId, queryByTestId, getAllByTestId } =  render(\n+      <PropertyTable \n+        canReadEntityModel={true}\n+        canWriteEntityModel={true}\n+        entityName={entityName} \n+        definitions={definitions}\n+      />\n+    )\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb12d9ed2cf624de7ab0e6bc4f6708daec9a2ac6"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0MDMxNQ==", "bodyText": "This is for edit property. entityName is for edit description modal where it can not be edited. Property names can be edited.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4117#discussion_r445240315", "createdAt": "2020-06-25T00:17:58Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "diffHunk": "@@ -160,5 +166,43 @@ describe('Entity Modeling Property Table Component', () => {\n \n     expect(getByText('newStructure')).toBeInTheDocument();\n   });\n+\n+  test('can edit a basic property', async () => {\n+    let entityName = propertyTableEntities[2].entityName;\n+    let definitions = propertyTableEntities[2].model.definitions;\n+    const { getByText, getByTestId, queryByTestId, getAllByTestId } =  render(\n+      <PropertyTable \n+        canReadEntityModel={true}\n+        canWriteEntityModel={true}\n+        entityName={entityName} \n+        definitions={definitions}\n+      />\n+    )\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNjc2Mw=="}, "originalCommit": {"oid": "bb12d9ed2cf624de7ab0e6bc4f6708daec9a2ac6"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDIxMjE5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxMDowMlrOGonLpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMDoxODoxNFrOGonUTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzODE4Mw==", "bodyText": "Curation components have RTL tests for tooltip. Might be good to have them for Modeling as well. Will leave it upto you.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4117#discussion_r445238183", "createdAt": "2020-06-25T00:10:02Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.js", "diffHunk": "@@ -111,7 +111,7 @@ const ModelingTooltips = {\n   pii: 'Personally identifiable information, or data this is sensitive in that it can identify a particular person and can be used fraudulent purposes.',\n   sort: 'Enables display in ascending or descending order.',\n   facet: 'Use when searching, for dividing values of properties into counts, aggregating, grouping, and more.',\n-  advancedSearch: 'Enables wildcard search, search suggestions, and type-ahead.',\n+  wildcard: 'Enables wildcard search.',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb12d9ed2cf624de7ab0e6bc4f6708daec9a2ac6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI0MDM5OA==", "bodyText": "I can look into adding them", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4117#discussion_r445240398", "createdAt": "2020-06-25T00:18:14Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.js", "diffHunk": "@@ -111,7 +111,7 @@ const ModelingTooltips = {\n   pii: 'Personally identifiable information, or data this is sensitive in that it can identify a particular person and can be used fraudulent purposes.',\n   sort: 'Enables display in ascending or descending order.',\n   facet: 'Use when searching, for dividing values of properties into counts, aggregating, grouping, and more.',\n-  advancedSearch: 'Enables wildcard search, search suggestions, and type-ahead.',\n+  wildcard: 'Enables wildcard search.',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzODE4Mw=="}, "originalCommit": {"oid": "bb12d9ed2cf624de7ab0e6bc4f6708daec9a2ac6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3915, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}