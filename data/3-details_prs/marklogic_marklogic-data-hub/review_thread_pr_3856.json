{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTYzODc1", "number": 3856, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyMzozOVrOD03-Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyMzozOVrOD03-Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzY5NjE0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/managers/MapSearchManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyMzozOVrOGKCC4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxODoyMjo0OVrOGKEq7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MjQ1MA==", "bodyText": "How are we differentiating from a 400 Bad Request and a 500 internal server error in this case?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3856#discussion_r413172450", "createdAt": "2020-04-22T17:23:39Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/managers/MapSearchManager.java", "diffHunk": "@@ -117,7 +117,7 @@ public StringHandle search(MapSearchQuery mapSearchQuery) {\n \n     public JsonNode sjsSearch(SJSSearchQuery SJSSearchQuery) {\n         if (SJSSearchQuery.sourceQuery == null && SJSSearchQuery.database == null) {\n-            throw new BadRequestException(\"Query requires database or sourceQuery\");\n+            throw new DataHubException(\"Query requires database or sourceQuery\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d06ef3a49ca924bd4478b7634433bc16658fbdf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIxNTQ2OA==", "bodyText": "The BadRequestException wasn't actually doing anything - it wasn't capturing a 400, and it wasn't being handled by CustomExceptionHandler. It was also extending Spring Security's AuthenticationException, but it's not an authentication exception. So the class effectively wasn't doing anything, so I removed it and switched this over to the generic DataHubException.  That exception isn't really do anything either - CustomExceptionHandler handles it in its generic exception handler - but it's better than an exception that wasn't doing what its name implies.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3856#discussion_r413215468", "createdAt": "2020-04-22T18:22:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/managers/MapSearchManager.java", "diffHunk": "@@ -117,7 +117,7 @@ public StringHandle search(MapSearchQuery mapSearchQuery) {\n \n     public JsonNode sjsSearch(SJSSearchQuery SJSSearchQuery) {\n         if (SJSSearchQuery.sourceQuery == null && SJSSearchQuery.database == null) {\n-            throw new BadRequestException(\"Query requires database or sourceQuery\");\n+            throw new DataHubException(\"Query requires database or sourceQuery\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MjQ1MA=="}, "originalCommit": {"oid": "9d06ef3a49ca924bd4478b7634433bc16658fbdf"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3428, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}