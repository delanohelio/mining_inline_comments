{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODI0MjYy", "number": 3874, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyNDozN1rOD2Ii2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNTozMTo0NFrOD2InmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDg5NjkxOnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/entities/Address.entity.json", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyNDozN1rOGL2uDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxODozMToxNFrOGMIPwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDA0NQ==", "bodyText": "We don't need nor want separate entity files. The approach for 5.3.0 is that each model file has one \"primary\" entity whose name is the same as info.title. Each other entity definition is considered a structured type.\nIs there a particular feature that is requiring Address and Zip to be duplicated in separate files?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415084045", "createdAt": "2020-04-25T15:24:37Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Address.entity.json", "diffHunk": "@@ -0,0 +1,46 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzNzg5Mw==", "bodyText": "Mapping doesnt seem to work without them and complains about missing target entitiy.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415137893", "createdAt": "2020-04-25T20:29:31Z", "author": {"login": "bsrikan"}, "path": "examples/reference-entity-model/entities/Address.entity.json", "diffHunk": "@@ -0,0 +1,46 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDA0NQ=="}, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzODEwNw==", "bodyText": "We can get them updated later to include merge matches. This is just so the nightly instance will have something for the team to build their demo and can be enhanced later.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415138107", "createdAt": "2020-04-25T20:30:58Z", "author": {"login": "bsrikan"}, "path": "examples/reference-entity-model/entities/Address.entity.json", "diffHunk": "@@ -0,0 +1,46 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDA0NQ=="}, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE1MDg5NQ==", "bodyText": "Hmm - that's a concern, I'll try it out locally.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415150895", "createdAt": "2020-04-25T21:46:33Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Address.entity.json", "diffHunk": "@@ -0,0 +1,46 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDA0NQ=="}, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM3MTIwMg==", "bodyText": "I verified that the mapping tool in HC is using \"Customer\" instead of the full entityTypeId. The backend does not yet support mappings that use just entityName and then try to refer to other entity definitions. I'll open a bug for this, as we do not want to go down the path of duplicating entity types again in HC.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415371202", "createdAt": "2020-04-26T18:31:14Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Address.entity.json", "diffHunk": "@@ -0,0 +1,46 @@\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDA0NQ=="}, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDkwMTIzOnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/gradle-dhs.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyNjo1MFrOGL2v7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQyMDozMjozNVrOGL6CbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDUyNQ==", "bodyText": "I don't think it's worth checking this in, because everyone will either need to modify mlHost in this file or remember to add -PmlHost= to the command line. I think for now, it's better for this file to be gitignored.\nWhat we may want to add as a testing convenience is an e.g. \"hubUseDhsDefaults=true\" property so that people don't need to define the dozen or so properties below. That would make life easier in a number of ways.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415084525", "createdAt": "2020-04-25T15:26:50Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/gradle-dhs.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+mlHost=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzODQxMg==", "bodyText": "We would use this project to spin up a DHS instance and make this project available in HC running against a DHS. Hence the dhs environment property file.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415138412", "createdAt": "2020-04-25T20:32:35Z", "author": {"login": "bsrikan"}, "path": "examples/reference-entity-model/gradle-dhs.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+mlHost=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDUyNQ=="}, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDkwMjI1OnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/input/json/Cust1.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyNzo0M1rOGL2wdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyNzo0M1rOGL2wdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDY2MQ==", "bodyText": "I like have sample files, but let's not use abbreviations - just call it \"customer1.json\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415084661", "createdAt": "2020-04-25T15:27:43Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/input/json/Cust1.json", "diffHunk": "@@ -0,0 +1,33 @@\n+{\n+    \"CustomerID\": 101,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDkwMzM2OnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/input/xml/CustXMLDoc1.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyODoyMVrOGL2w8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNToyODoyMVrOGL2w8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NDc4Ng==", "bodyText": "Same thing, let's do customer1.xml", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415084786", "createdAt": "2020-04-25T15:28:21Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/input/xml/CustXMLDoc1.xml", "diffHunk": "@@ -0,0 +1,32 @@\n+  <CustOrders xmlns=\"custOrderInfo\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MDkwOTA0OnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/loadData/CustomerLoadJSON.loadData.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxNTozMTo0NFrOGL2zcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQyMDozNzoxMFrOGL6Fhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NTQyNg==", "bodyText": "I'd like to encourage a naming practice for steps - which are processes - that are verb-oriented instead of a set of nouns. So let's do \"loadCustomerJSON\" and \"mapCustomerJSON\". I think customers should follow the same practice, so we should demonstrate that in our examples.\nEven better would be to have names for the datasets other than \"JSON\" and \"XML\", as in the real world, users are likely to have e.g. \"loadAbcCustomers\" and \"loadXyzCustomers\". I think we can go with JSON and XML for now, but ideally we can have real data source names here and not just use data formats.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415085426", "createdAt": "2020-04-25T15:31:44Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/loadData/CustomerLoadJSON.loadData.json", "diffHunk": "@@ -0,0 +1 @@\n+{\"name\":\"CustomerLoadJSON\",\"description\":\"\",\"sourceFormat\":\"json\",\"targetFormat\":\"json\",\"outputURIReplacement\":\".*CustomerLoadJSON,'/customer'\",\"inputFilePath\":\"data-sets/CustomerLoadJSON\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTEzOTIwNw==", "bodyText": "I agree with all the suggestions Anyone from the team can later enhance this to be standardized. For now this is just aimed at getting a project together for upcoming demo that can be run in an instance that is not localhost as we had discussed in Friday's standup.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3874#discussion_r415139207", "createdAt": "2020-04-25T20:37:10Z", "author": {"login": "bsrikan"}, "path": "examples/reference-entity-model/loadData/CustomerLoadJSON.loadData.json", "diffHunk": "@@ -0,0 +1 @@\n+{\"name\":\"CustomerLoadJSON\",\"description\":\"\",\"sourceFormat\":\"json\",\"targetFormat\":\"json\",\"outputURIReplacement\":\".*CustomerLoadJSON,'/customer'\",\"inputFilePath\":\"data-sets/CustomerLoadJSON\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA4NTQyNg=="}, "originalCommit": {"oid": "d030302e7105aae88235c5194b847a3dbbaf8cf3"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3457, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}