{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMzY0ODYy", "number": 4769, "title": "DHFPROD-6117:Handle duplicate custom mapping functions", "bodyText": "Description\nHandle duplicate custom mapping functions. This failure https://jenkins.marklogic.com/blue/organizations/jenkins/Datahub_CI/detail/PR-4759/10/tests was because there were 2 custom mapping functions of name 'echo'.\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-10-26T23:26:33Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769", "merged": true, "mergeCommit": {"oid": "293434fe94de0671a0d18ff4a5eb6e590742bb93"}, "closed": true, "closedAt": "2020-10-28T15:43:17Z", "author": {"login": "srinathgit"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWdIZJgFqTUxNzI1MTYxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW_dfaAFqTUxODgwMzM2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MjUxNjEy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#pullrequestreview-517251612", "createdAt": "2020-10-26T23:39:58Z", "commit": {"oid": "bd211be3d55118d729dbad79262085a7b6a9e436"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzozOTo1OFrOHomSxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzozOTo1OFrOHomSxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMzMjQ4NQ==", "bodyText": "If there's a test failing for this, can the test be upgraded to verify that there's only one instance of the \"echo\" function? And this seems to be introducing logic that says - if there are duplicates, then whichever one is found last \"wins\" - i.e. the signature is for the last one. Is that the case?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#discussion_r512332485", "createdAt": "2020-10-26T23:39:58Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/builtins/steps/mapping/entity-services/lib.sjs", "diffHunk": "@@ -476,21 +476,31 @@ function getMarkLogicMappingFunctions() {\n   return fn.head(datahub.hubUtils.queryLatest(function() {\n     let fnMetadata = fn.collection(\"http://marklogic.com/entity-services/function-metadata\")\n     let ns = {\"m\":\"http://marklogic.com/entity-services/mapping\"};\n+    const functionsAdded = [];\n     let output = [];\n \n     for (const metaData of fnMetadata){\n       if(metaData.xpath(\"/m:function-defs\",ns)) {\n         let j = 1;\n         let fnLocation = metaData.xpath(\"/m:function-defs/@location\",ns)\n         for (const mlFunction of metaData.xpath(\"/m:function-defs/m:function-def\",ns )){\n-          let funcName = metaData.xpath(\"/m:function-defs/m:function-def[\"+j+\"]/@name\", ns);\n+          let funcName = String(metaData.xpath(\"/m:function-defs/m:function-def[\"+j+\"]/@name\", ns));\n           let params = String(metaData.xpath(\"/m:function-defs/m:function-def[\"+j+\"]/m:parameters/m:parameter/@name\",ns)).replace(\"\\n\",\",\");\n           j++;\n-          let singleFunction ={};\n-          singleFunction[\"functionName\"] = funcName;\n-          singleFunction[\"signature\"] = funcName +\"(\"+params+\")\";\n-          singleFunction[\"category\"] = (String(fnLocation).includes(\"/data-hub/5/mapping-functions\")) ? \"builtin\" : \"custom\";\n-          output.push(singleFunction)\n+          if(functionsAdded.includes(funcName)){\n+            let addedFunction = output.find(func => {\n+              return func.functionName == funcName\n+            });\n+            addedFunction[\"signature\"] = funcName +\"(\"+params+\")\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd211be3d55118d729dbad79262085a7b6a9e436"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd211be3d55118d729dbad79262085a7b6a9e436", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/bd211be3d55118d729dbad79262085a7b6a9e436", "committedDate": "2020-10-26T23:24:33Z", "message": "DHFPROD-6117:Handle duplicate custom mapping functions"}, "afterCommit": {"oid": "d4b99e2e7d4dac4f2687e4c252dda825ed121998", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d4b99e2e7d4dac4f2687e4c252dda825ed121998", "committedDate": "2020-10-27T00:21:57Z", "message": "DHFPROD-6117:Handle duplicate custom mapping functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjI5NTk2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#pullrequestreview-517629596", "createdAt": "2020-10-27T12:05:02Z", "commit": {"oid": "d4b99e2e7d4dac4f2687e4c252dda825ed121998"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3ODY0MDIz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#pullrequestreview-517864023", "createdAt": "2020-10-27T15:51:27Z", "commit": {"oid": "d4b99e2e7d4dac4f2687e4c252dda825ed121998"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo1MToyOFrOHpDkvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo1MToyOFrOHpDkvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMjIyMg==", "bodyText": "Instead of searching in both functionsAdded and output arrays, can we use a Map here with the key being the function name and the value being the function object?\nMap also provides an iterator for values that can then be used to create the output array.\nconst map1 = new Map();\nmap1.set('a', {'a':'a'});\nmap1.set('b', {'b':'b'});\nconst ar = [...map1.values()];", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#discussion_r512812222", "createdAt": "2020-10-27T15:51:28Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/builtins/steps/mapping/entity-services/lib.sjs", "diffHunk": "@@ -476,21 +476,31 @@ function getMarkLogicMappingFunctions() {\n   return fn.head(datahub.hubUtils.queryLatest(function() {\n     let fnMetadata = fn.collection(\"http://marklogic.com/entity-services/function-metadata\")\n     let ns = {\"m\":\"http://marklogic.com/entity-services/mapping\"};\n+    const functionsAdded = [];\n     let output = [];\n \n     for (const metaData of fnMetadata){\n       if(metaData.xpath(\"/m:function-defs\",ns)) {\n         let j = 1;\n         let fnLocation = metaData.xpath(\"/m:function-defs/@location\",ns)\n         for (const mlFunction of metaData.xpath(\"/m:function-defs/m:function-def\",ns )){\n-          let funcName = metaData.xpath(\"/m:function-defs/m:function-def[\"+j+\"]/@name\", ns);\n+          let funcName = String(metaData.xpath(\"/m:function-defs/m:function-def[\"+j+\"]/@name\", ns));\n           let params = String(metaData.xpath(\"/m:function-defs/m:function-def[\"+j+\"]/m:parameters/m:parameter/@name\",ns)).replace(\"\\n\",\",\");\n           j++;\n-          let singleFunction ={};\n-          singleFunction[\"functionName\"] = funcName;\n-          singleFunction[\"signature\"] = funcName +\"(\"+params+\")\";\n-          singleFunction[\"category\"] = (String(fnLocation).includes(\"/data-hub/5/mapping-functions\")) ? \"builtin\" : \"custom\";\n-          output.push(singleFunction)\n+          if(functionsAdded.includes(funcName)){\n+            let addedFunction = output.find(func => {\n+              return func.functionName == funcName\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4b99e2e7d4dac4f2687e4c252dda825ed121998"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6103039db6fae911aeae8f6a1f59e4c92f9d760d", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6103039db6fae911aeae8f6a1f59e4c92f9d760d", "committedDate": "2020-10-28T02:39:39Z", "message": "DHFPROD-6117:Handle duplicate mapping functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4b99e2e7d4dac4f2687e4c252dda825ed121998", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d4b99e2e7d4dac4f2687e4c252dda825ed121998", "committedDate": "2020-10-27T00:21:57Z", "message": "DHFPROD-6117:Handle duplicate custom mapping functions"}, "afterCommit": {"oid": "6103039db6fae911aeae8f6a1f59e4c92f9d760d", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6103039db6fae911aeae8f6a1f59e4c92f9d760d", "committedDate": "2020-10-28T02:39:39Z", "message": "DHFPROD-6117:Handle duplicate mapping functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MzAwMjU2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#pullrequestreview-518300256", "createdAt": "2020-10-28T03:32:05Z", "commit": {"oid": "6103039db6fae911aeae8f6a1f59e4c92f9d760d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NjAyMDAx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#pullrequestreview-518602001", "createdAt": "2020-10-28T12:22:14Z", "commit": {"oid": "6103039db6fae911aeae8f6a1f59e4c92f9d760d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODAzMzY5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4769#pullrequestreview-518803369", "createdAt": "2020-10-28T15:39:48Z", "commit": {"oid": "6103039db6fae911aeae8f6a1f59e4c92f9d760d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}