{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzOTU3MjQ2", "number": 4249, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxNTo1MlrOEQnguQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoyMzozMFrOEQnugQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODYwMDI1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/step/manageMappingStep.sjs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxNTo1MlrOG03ZFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDo1Mjo0NFrOG073LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4NjY3OQ==", "bodyText": "@srinathgit is this assertion required again here?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458086679", "createdAt": "2020-07-21T13:15:52Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/step/manageMappingStep.sjs", "diffHunk": "@@ -73,6 +87,11 @@ assertions.push(\n hubJsTest.verifyJson(expectedStep, serviceResponse, assertions);\n hubJsTest.verifyJson(expectedStep, stepService.getStep(stepDefinitionType, stepName), assertions);\n \n+assertions.push(\n+  test.assertEqual(\"{}\", JSON.stringify(serviceResponse.headers)),\n+  test.assertEqual(\"{}\", JSON.stringify(serviceResponse.customHook)),\n+  test.assertEqual(\"[]\", JSON.stringify(serviceResponse.processors))\n+);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5a4b424bcf86b168ea78a3a2f77d273ba983c1c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE1OTkxNw==", "bodyText": "Yeah, I am calling saveStep() again. So, it ensures the values are present after that as well.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458159917", "createdAt": "2020-07-21T14:52:44Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/step/manageMappingStep.sjs", "diffHunk": "@@ -73,6 +87,11 @@ assertions.push(\n hubJsTest.verifyJson(expectedStep, serviceResponse, assertions);\n hubJsTest.verifyJson(expectedStep, stepService.getStep(stepDefinitionType, stepName), assertions);\n \n+assertions.push(\n+  test.assertEqual(\"{}\", JSON.stringify(serviceResponse.headers)),\n+  test.assertEqual(\"{}\", JSON.stringify(serviceResponse.customHook)),\n+  test.assertEqual(\"[]\", JSON.stringify(serviceResponse.processors))\n+);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4NjY3OQ=="}, "originalCommit": {"oid": "c5a4b424bcf86b168ea78a3a2f77d273ba983c1c"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODYzNTUzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/advanced-settings/advanced-settings-dialog.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoyMzozMFrOG03uIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDo1NDowMVrOG0764A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA5MjA2Ng==", "bodyText": "We have an RTL test that sets these to empty string and verifies that 'Invalid JSON' error is not thrown. Should that be changed?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458092066", "createdAt": "2020-07-21T13:23:30Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/advanced-settings/advanced-settings-dialog.tsx", "diffHunk": "@@ -303,12 +303,12 @@ const AdvancedSettingsDialog = (props) => {\n         targetDatabase: targetDatabase,\n         targetFormat: targetFormat,\n         permissions: targetPermissions,\n-        headers: parseJSON(headers),\n-        processors: parseJSON(processors),\n+        headers: isEmptyString(headers) ? {} : parseJSON(headers),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5a4b424bcf86b168ea78a3a2f77d273ba983c1c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE2MDg2NA==", "bodyText": "No, that test can still remain. If user chooses to set these to empty string, we convert them to valid json values.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4249#discussion_r458160864", "createdAt": "2020-07-21T14:54:01Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub-central/ui/src/components/advanced-settings/advanced-settings-dialog.tsx", "diffHunk": "@@ -303,12 +303,12 @@ const AdvancedSettingsDialog = (props) => {\n         targetDatabase: targetDatabase,\n         targetFormat: targetFormat,\n         permissions: targetPermissions,\n-        headers: parseJSON(headers),\n-        processors: parseJSON(processors),\n+        headers: isEmptyString(headers) ? {} : parseJSON(headers),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA5MjA2Ng=="}, "originalCommit": {"oid": "c5a4b424bcf86b168ea78a3a2f77d273ba983c1c"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3849, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}