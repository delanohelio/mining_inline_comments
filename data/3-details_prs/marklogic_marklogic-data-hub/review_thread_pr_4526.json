{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4OTcxNjM3", "number": 4526, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxMjo1NVrOEgLF7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxNDoxMVrOEgLHBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTcxNjI5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ScaffoldingImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxMjo1NVrOHM5KhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxMjo1NVrOHM5KhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4MTU0MA==", "bodyText": "Do we know for sure that the step needs to be modified? I don't think that's true in all cases. Like I can see a custom step working as-is, though of course the user would need to modify the custom step module. I would remove this line of logging.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4526#discussion_r483281540", "createdAt": "2020-09-03T22:12:55Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ScaffoldingImpl.java", "diffHunk": "@@ -145,7 +145,8 @@ public static String getAbsolutePath(String first, String... more) {\n                 + \"/custom-modules/\" + stepType.toLowerCase() + \"/\" + stepDefName + \"/main.sjs\" + \". \\n\");\n             messageBuilder.append(\"It is recommended to run './gradlew -i mlWatch' so that as you modify the module, it will be automatically loaded into your application's modules database.\\n\");\n         }\n-        messageBuilder.append(\"Created step '\" + stepName + \"' of type '\" + stepType + \"' with default properties. It will need to be modified before usage.\");\n+        messageBuilder.append(\"Created step '\" + stepName + \"' of type '\" + stepType + \"' with default properties. The step has been deployed to staging and final databases. \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8922829dfc3c75f73cd4002ee0e8cef6eb1be54"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTcxNzUzOnYy", "diffSide": "RIGHT", "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/DataHubPlugin.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxMzoyM1rOHM5LOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxMzoyM1rOHM5LOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4MTcyMA==", "bodyText": "For consistency, say \"write it to the staging and final databases\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4526#discussion_r483281720", "createdAt": "2020-09-03T22:13:23Z", "author": {"login": "rjrudin"}, "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/DataHubPlugin.groovy", "diffHunk": "@@ -143,14 +143,14 @@ class DataHubPlugin implements Plugin<Project> {\n                 \"a type (either 'ingestion' or 'custom'; defaults to 'custom') via -PstepDefType=ingestion|custom, \" +\n                 \"and a format (either 'sjs' or 'xqy'; defaults to 'sjs') via -Pformat=sjs|xqy\")\n         project.task(\"hubCreateStep\", group: developGroup, type: CreateStepTask,\n-            description: \"Create a new step file in staging,final databases and write it to your project; specify a step name via -PstepName=YourStepName, and specify \" +\n-                \"a step type via -PstepType=(ingestion|mapping|custom)\")\n+            description: \"Create a new step file and write it to staging,final databases and to your project; specify a step name via -PstepName=YourStepName, \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8922829dfc3c75f73cd4002ee0e8cef6eb1be54"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTcxOTExOnYy", "diffSide": "RIGHT", "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/task/CreateFlowTask.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxNDoxMVrOHM5MPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjoxNDoxMVrOHM5MPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4MTk4Mw==", "bodyText": "I am thinking we should just print the error and not throw it. The error will likely only occur for one reason - the user cannot connect to ML. And the message will make that obvious. The task can still be considered to have succeeded in that a new flow was created.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4526#discussion_r483281983", "createdAt": "2020-09-03T22:14:11Z", "author": {"login": "rjrudin"}, "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/task/CreateFlowTask.groovy", "diffHunk": "@@ -40,9 +40,20 @@ class CreateFlowTask extends HubTask {\n                 '  \"description\" : \"Flow description\",\\n' +\n                 '  \"steps\" : { }\\n' +\n                 '}\\n'\n-            def file = ((FlowManagerImpl)flowManager).getFileForLocalFlow(flowName)\n+            file = ((FlowManagerImpl)flowManager).getFileForLocalFlow(flowName)\n             FileCopyUtils.copy(json.getBytes(), file)\n             println \"Created new flow at: \" + file.getAbsolutePath()\n         }\n+        ObjectMapper mapper = new ObjectMapper()\n+        try{\n+            ArtifactService service = ArtifactService.on(hubConfig.newStagingClient(null))\n+            service.setArtifact(\"flow\", flowName, mapper.readTree(file))\n+        }\n+        catch (Exception e){\n+            println \"Unable to write flow to database;cause: \" + e.getMessage()\n+            throw e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8922829dfc3c75f73cd4002ee0e8cef6eb1be54"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3749, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}