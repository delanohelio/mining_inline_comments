{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjQwMjUz", "number": 3509, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1NzoxMlrODbBVHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzo0Mzo1OVrODbenCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjU5OTM1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/roles/getRoles.sjs", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1NzoxMlrOFiROFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzoyMDoxMlrOFitq5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ3ODAzNw==", "bodyText": "I'm always nervous seeing hardcoded lists like this in case we add a role and someone forgets to add it here too. All DH roles are prefixed with \"data-hub-\" for a use case like this - i.e. it's easy to tell what's a DH role and what's not. So I think you could instead just call xdmp.getCurrentRoles() and xdmp.roleName() on each ID. Then, if the array has \"admin\", call \"xdmp.roles()\" and return each DH role from that list. Else, only return each role name that starts with \"data-hub-\". I think that avoids having this hardcoded list.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r371478037", "createdAt": "2020-01-27T20:57:12Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/roles/getRoles.sjs", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ Copyright 2012-2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+\n+const dataHubRoles = [\n+    'data-hub-admin',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1305eb6fb34b989023422a53aca5523360ffaf7"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk0NDE2NA==", "bodyText": "changed to look for startsWith \"data-hub\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r371944164", "createdAt": "2020-01-28T17:20:12Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/roles/getRoles.sjs", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ Copyright 2012-2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+\n+const dataHubRoles = [\n+    'data-hub-admin',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ3ODAzNw=="}, "originalCommit": {"oid": "f1305eb6fb34b989023422a53aca5523360ffaf7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjY0NDYwOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginFailureHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToxMzowMlrOFiRpvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzoyMDo1NFrOFitscA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NTExNg==", "bodyText": "This seems brittle - an \"instanceof\" check like below would be a lot better - more reliable and self-documenting. Can the custom code that creates this message throw a better exception for this class to catch?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r371485116", "createdAt": "2020-01-27T21:13:02Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginFailureHandler.java", "diffHunk": "@@ -40,7 +41,13 @@ public void onAuthenticationFailure(HttpServletRequest request, HttpServletRespo\n         String json = new Gson().toJson(output);\n         response.setContentType(\"application/json\");\n         response.setCharacterEncoding(\"UTF-8\");\n-        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n+        if (exception.getMessage().contains(\"Cannot connect to MarkLogic\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1305eb6fb34b989023422a53aca5523360ffaf7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk0NDU2MA==", "bodyText": "changed to use instanceof BadRequestException", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r371944560", "createdAt": "2020-01-28T17:20:54Z", "author": {"login": "ryanjdew"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginFailureHandler.java", "diffHunk": "@@ -40,7 +41,13 @@ public void onAuthenticationFailure(HttpServletRequest request, HttpServletRespo\n         String json = new Gson().toJson(output);\n         response.setContentType(\"application/json\");\n         response.setCharacterEncoding(\"UTF-8\");\n-        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n+        if (exception.getMessage().contains(\"Cannot connect to MarkLogic\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NTExNg=="}, "originalCommit": {"oid": "f1305eb6fb34b989023422a53aca5523360ffaf7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzM2ODIzOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMzo0ODowN1rOFiYisQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzoxODoxOFrOFitmtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU5ODAwMQ==", "bodyText": "marklogic-data-hub/one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java\n    \n    \n         Line 49\n      in\n      f1305eb\n    \n    \n    \n    \n\n        \n          \n           RolesService rolesService = RolesService.on(authenticationToken.getHubConfigSession().newStagingClient()); \n        \n    \n  \n\n\nSince we autowired the hubConfigSession, we do not need to access it through authentication token.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r371598001", "createdAt": "2020-01-28T03:48:07Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "diffHunk": "@@ -27,14 +33,24 @@\n import java.io.IOException;\n \n public class LoginLogoutHandler implements AuthenticationSuccessHandler, LogoutSuccessHandler {\n+    @Autowired\n+    HubConfigSession hubConfigSession;\n+\n+    ObjectMapper mapper = new ObjectMapper();\n \n     @Override\n     public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException {\n         ConnectionAuthenticationToken authenticationToken = (ConnectionAuthenticationToken)authentication;\n-\n+        ObjectNode output = mapper.createObjectNode();\n         clearAuthenticationAttributes(request);\n+        output.put(\"isInstalled\", authenticationToken.stagingIsAccessible());\n+        output.put(\"hasManagePrivileges\", authenticationToken.hasManagePrivileges());\n+        if (authenticationToken.stagingIsAccessible()) {\n+            RolesService rolesService = RolesService.on(authenticationToken.getHubConfigSession().newStagingClient());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1305eb6fb34b989023422a53aca5523360ffaf7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk0MzA5Mw==", "bodyText": "I should remove the autowired hubConfig. I was getting a null hubConfig when I tried to use the autowired version.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r371943093", "createdAt": "2020-01-28T17:18:18Z", "author": {"login": "ryanjdew"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "diffHunk": "@@ -27,14 +33,24 @@\n import java.io.IOException;\n \n public class LoginLogoutHandler implements AuthenticationSuccessHandler, LogoutSuccessHandler {\n+    @Autowired\n+    HubConfigSession hubConfigSession;\n+\n+    ObjectMapper mapper = new ObjectMapper();\n \n     @Override\n     public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException {\n         ConnectionAuthenticationToken authenticationToken = (ConnectionAuthenticationToken)authentication;\n-\n+        ObjectNode output = mapper.createObjectNode();\n         clearAuthenticationAttributes(request);\n+        output.put(\"isInstalled\", authenticationToken.stagingIsAccessible());\n+        output.put(\"hasManagePrivileges\", authenticationToken.hasManagePrivileges());\n+        if (authenticationToken.stagingIsAccessible()) {\n+            RolesService rolesService = RolesService.on(authenticationToken.getHubConfigSession().newStagingClient());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU5ODAwMQ=="}, "originalCommit": {"oid": "f1305eb6fb34b989023422a53aca5523360ffaf7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTY4MjkyOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/MarkLogicAuthenticationManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo1MDo1OFrOFiupQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNzo1MDo1OFrOFiupQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk2MDEzMA==", "bodyText": "I recommend tucking the original exception in here (as a 2nd argument to the constructor), just in case. It may be useful to at least see the message.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r371960130", "createdAt": "2020-01-28T17:50:58Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/MarkLogicAuthenticationManager.java", "diffHunk": "@@ -88,7 +90,7 @@ public Authentication authenticate(Authentication authentication) throws Authent\n             hasManagePrivileges = true;\n         }\n         catch(ResourceAccessException ex) {\n-            throw new BadCredentialsException(\"Cannot connect to MarkLogic at \" + environmentInfo.mlHost + \". Are you sure MarkLogic is running?\");\n+            throw new BadRequestException(\"Cannot connect to MarkLogic at \" + environmentInfo.mlHost + \". Are you sure MarkLogic is running?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8eda555c809876d68372320bc9c6a473eca5007"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM4OTk3OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/MarkLogicAuthenticationManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzo0MDo1OFrOFi_A-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzo0MDo1OFrOFi_A-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyODM0NA==", "bodyText": "i think we should not ignore the exception after checking the internal implementation of checkConnection().\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } catch (Exception ignored) {\n          \n          \n            \n                DatabaseClient.ConnectionResult connResult;\n          \n          \n            \n                try {\n          \n          \n            \n                  connResult = dataServicesClient.checkConnection();\n          \n          \n            \n                } catch (Exception e) {\n          \n          \n            \n                  throw new BadRequestException(e.getMessage());\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                if (connResult != null && !connResult.isConnected()) {\n          \n          \n            \n                  if (connResult.getStatusCode() != null && connResult.getStatusCode() == 401) {\n          \n          \n            \n                    throw new BadCredentialsException(connResult.getErrorMessage());\n          \n          \n            \n                  } else {\n          \n          \n            \n                    throw new BadRequestException(connResult.getErrorMessage());\n          \n          \n            \n                  }\n          \n          \n            \n                }", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r372228344", "createdAt": "2020-01-29T07:40:58Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/MarkLogicAuthenticationManager.java", "diffHunk": "@@ -107,10 +109,13 @@ public Authentication authenticate(Authentication authentication) throws Authent\n         boolean stagingServerAccessible = false;\n         try {\n             stagingServerAccessible = dataServicesClient.checkConnection().isConnected();\n-        } catch (Exception e) {\n+        } catch (Exception ignored) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16750b240901928335aca170799e27bb2e928a98"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTM5NjU5OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/MarkLogicAuthenticationManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzo0Mzo1OVrOFi_Etw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzo0Mzo1OVrOFi_Etw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyOTMwMw==", "bodyText": "we do not need to check stagingServerAccessible because it is a flag to indicate connection status.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3509#discussion_r372229303", "createdAt": "2020-01-29T07:43:59Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/MarkLogicAuthenticationManager.java", "diffHunk": "@@ -107,10 +109,13 @@ public Authentication authenticate(Authentication authentication) throws Authent\n         boolean stagingServerAccessible = false;\n         try {\n             stagingServerAccessible = dataServicesClient.checkConnection().isConnected();\n-        } catch (Exception e) {\n+        } catch (Exception ignored) {\n+        }\n+        if (!(hasManagePrivileges || stagingServerAccessible)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16750b240901928335aca170799e27bb2e928a98"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3664, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}