{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjA4Mzcx", "number": 4537, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDozNToyNFrOEh2W6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDozNToyNFrOEh2W6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzOTI5MDY0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDozNToyNFrOHPZX3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDo0Njo1N1rOHPZukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwNjM5Ng==", "bodyText": "Should we create our own no-arg/no-return functional interface to avoid confusion related to Runnable being related to threads?\nhttps://stackoverflow.com/a/23958916/4460877", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4537#discussion_r485906396", "createdAt": "2020-09-09T20:35:24Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "diffHunk": "@@ -100,15 +104,41 @@ protected void resetDatabases() {\n         runAsAdmin();\n         String xquery = \"cts:uris((), (), cts:not-query(cts:collection-query('hub-core-artifact'))) ! xdmp:document-delete(.)\";\n         HubClient hubClient = getHubClient();\n-        hubClient.getStagingClient().newServerEval().xquery(xquery).evalAs(String.class);\n-        hubClient.getFinalClient().newServerEval().xquery(xquery).evalAs(String.class);\n-        hubClient.getJobsClient().newServerEval().xquery(xquery).evalAs(String.class);\n-\n-        HubConfig hubConfig = getHubConfig();\n-        hubConfig.getAppConfig().newAppServicesDatabaseClient(hubConfig.getDbName(DatabaseKind.STAGING_SCHEMAS))\n-            .newServerEval().xquery(xquery).evalAs(String.class);\n-        hubConfig.getAppConfig().newAppServicesDatabaseClient(hubConfig.getDbName(DatabaseKind.FINAL_SCHEMAS))\n-            .newServerEval().xquery(xquery).evalAs(String.class);\n+        // Running these with primitive retry support, as if a connection cannot be made to ML, this is typically the\n+        // first thing that will fail\n+        retryIfNecessary(() -> hubClient.getStagingClient().newServerEval().xquery(xquery).evalAs(String.class));\n+        retryIfNecessary(() -> hubClient.getFinalClient().newServerEval().xquery(xquery).evalAs(String.class));\n+        retryIfNecessary(() -> hubClient.getJobsClient().newServerEval().xquery(xquery).evalAs(String.class));\n+\n+        DatabaseManager databaseManager = new DatabaseManager(hubClient.getManageClient());\n+        databaseManager.clearDatabase(hubClient.getDbName(DatabaseKind.STAGING_SCHEMAS));\n+        databaseManager.clearDatabase(hubClient.getDbName(DatabaseKind.FINAL_SCHEMAS));\n+    }\n+\n+    /**\n+     * Adding this to handle some intermittent connection failures that occur when Jenkins runs the tests.\n+     * @param r\n+     */\n+    protected void retryIfNecessary(Runnable r) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7611534c0b07b7c2fa30ac36e6bfc0c04bfdc711"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwOTEyMA==", "bodyText": "I'm hoping I can remove this soon - it's just here for now to see if it helps at all. ML app servers shouldn't be unavailable for stretches of time during the test suite run - this is just to see if it helps. Hopefully the real problem can be fixed.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4537#discussion_r485909120", "createdAt": "2020-09-09T20:40:46Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "diffHunk": "@@ -100,15 +104,41 @@ protected void resetDatabases() {\n         runAsAdmin();\n         String xquery = \"cts:uris((), (), cts:not-query(cts:collection-query('hub-core-artifact'))) ! xdmp:document-delete(.)\";\n         HubClient hubClient = getHubClient();\n-        hubClient.getStagingClient().newServerEval().xquery(xquery).evalAs(String.class);\n-        hubClient.getFinalClient().newServerEval().xquery(xquery).evalAs(String.class);\n-        hubClient.getJobsClient().newServerEval().xquery(xquery).evalAs(String.class);\n-\n-        HubConfig hubConfig = getHubConfig();\n-        hubConfig.getAppConfig().newAppServicesDatabaseClient(hubConfig.getDbName(DatabaseKind.STAGING_SCHEMAS))\n-            .newServerEval().xquery(xquery).evalAs(String.class);\n-        hubConfig.getAppConfig().newAppServicesDatabaseClient(hubConfig.getDbName(DatabaseKind.FINAL_SCHEMAS))\n-            .newServerEval().xquery(xquery).evalAs(String.class);\n+        // Running these with primitive retry support, as if a connection cannot be made to ML, this is typically the\n+        // first thing that will fail\n+        retryIfNecessary(() -> hubClient.getStagingClient().newServerEval().xquery(xquery).evalAs(String.class));\n+        retryIfNecessary(() -> hubClient.getFinalClient().newServerEval().xquery(xquery).evalAs(String.class));\n+        retryIfNecessary(() -> hubClient.getJobsClient().newServerEval().xquery(xquery).evalAs(String.class));\n+\n+        DatabaseManager databaseManager = new DatabaseManager(hubClient.getManageClient());\n+        databaseManager.clearDatabase(hubClient.getDbName(DatabaseKind.STAGING_SCHEMAS));\n+        databaseManager.clearDatabase(hubClient.getDbName(DatabaseKind.FINAL_SCHEMAS));\n+    }\n+\n+    /**\n+     * Adding this to handle some intermittent connection failures that occur when Jenkins runs the tests.\n+     * @param r\n+     */\n+    protected void retryIfNecessary(Runnable r) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwNjM5Ng=="}, "originalCommit": {"oid": "7611534c0b07b7c2fa30ac36e6bfc0c04bfdc711"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxMjIxMA==", "bodyText": "I see. If we do need to add this in, I think it would be worthwhile to add a comment explaining that Runnable is only being used as a no-arg/no-return functional interface and does not have anything to do with Threads.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4537#discussion_r485912210", "createdAt": "2020-09-09T20:46:57Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "diffHunk": "@@ -100,15 +104,41 @@ protected void resetDatabases() {\n         runAsAdmin();\n         String xquery = \"cts:uris((), (), cts:not-query(cts:collection-query('hub-core-artifact'))) ! xdmp:document-delete(.)\";\n         HubClient hubClient = getHubClient();\n-        hubClient.getStagingClient().newServerEval().xquery(xquery).evalAs(String.class);\n-        hubClient.getFinalClient().newServerEval().xquery(xquery).evalAs(String.class);\n-        hubClient.getJobsClient().newServerEval().xquery(xquery).evalAs(String.class);\n-\n-        HubConfig hubConfig = getHubConfig();\n-        hubConfig.getAppConfig().newAppServicesDatabaseClient(hubConfig.getDbName(DatabaseKind.STAGING_SCHEMAS))\n-            .newServerEval().xquery(xquery).evalAs(String.class);\n-        hubConfig.getAppConfig().newAppServicesDatabaseClient(hubConfig.getDbName(DatabaseKind.FINAL_SCHEMAS))\n-            .newServerEval().xquery(xquery).evalAs(String.class);\n+        // Running these with primitive retry support, as if a connection cannot be made to ML, this is typically the\n+        // first thing that will fail\n+        retryIfNecessary(() -> hubClient.getStagingClient().newServerEval().xquery(xquery).evalAs(String.class));\n+        retryIfNecessary(() -> hubClient.getFinalClient().newServerEval().xquery(xquery).evalAs(String.class));\n+        retryIfNecessary(() -> hubClient.getJobsClient().newServerEval().xquery(xquery).evalAs(String.class));\n+\n+        DatabaseManager databaseManager = new DatabaseManager(hubClient.getManageClient());\n+        databaseManager.clearDatabase(hubClient.getDbName(DatabaseKind.STAGING_SCHEMAS));\n+        databaseManager.clearDatabase(hubClient.getDbName(DatabaseKind.FINAL_SCHEMAS));\n+    }\n+\n+    /**\n+     * Adding this to handle some intermittent connection failures that occur when Jenkins runs the tests.\n+     * @param r\n+     */\n+    protected void retryIfNecessary(Runnable r) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkwNjM5Ng=="}, "originalCommit": {"oid": "7611534c0b07b7c2fa30ac36e6bfc0c04bfdc711"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3308, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}