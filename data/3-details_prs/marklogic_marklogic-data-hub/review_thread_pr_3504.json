{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDIwNjc5", "number": 3504, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNjoxMVrODanixA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToyNjoxOVrODa_sdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM3NDQ0OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNjoxMVrOFhrFQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToxNjozNFrOFiRvpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MzE4NA==", "bodyText": "Is there are more appropriate annotation to use here? Perhaps just \"Component\"? If that has the same effect, I think that'd be better because this class of course is not a controller.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r370853184", "createdAt": "2020-01-24T21:36:11Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "diffHunk": "@@ -19,13 +19,15 @@\n import org.springframework.security.web.WebAttributes;\n import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n+import org.springframework.stereotype.Controller;\n \n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n import java.io.IOException;\n \n+@Controller", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDYxMw==", "bodyText": "Actually, i think the handler should be a controller. It can be refactor into the com.marklogic.hub.oneui.controllers package to make it more clear.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r370860613", "createdAt": "2020-01-24T21:57:22Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "diffHunk": "@@ -19,13 +19,15 @@\n import org.springframework.security.web.WebAttributes;\n import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n+import org.springframework.stereotype.Controller;\n \n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n import java.io.IOException;\n \n+@Controller", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MzE4NA=="}, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2NDY1MQ==", "bodyText": "I agree with @rjrudin . I think it should be a \"Component\" and not a \"Controller\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371464651", "createdAt": "2020-01-27T20:26:49Z", "author": {"login": "srinathgit"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "diffHunk": "@@ -19,13 +19,15 @@\n import org.springframework.security.web.WebAttributes;\n import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n+import org.springframework.stereotype.Controller;\n \n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n import java.io.IOException;\n \n+@Controller", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MzE4NA=="}, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4NjYyOQ==", "bodyText": "OK, i do not have strong opinion with which one we should use for the spring annotation. I will check it because of majority takes over.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371486629", "createdAt": "2020-01-27T21:16:34Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "diffHunk": "@@ -19,13 +19,15 @@\n import org.springframework.security.web.WebAttributes;\n import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n+import org.springframework.stereotype.Controller;\n \n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n import java.io.IOException;\n \n+@Controller", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MzE4NA=="}, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjM3ODI0OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNzo1NVrOFhrHfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToyMzoyNlrOFiR8QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mzc1OQ==", "bodyText": "There needs to be a test for this method. Otherwise, someone could add code that causes a null pointer exception or something similar, and we'd never know it.\nI think a suitable test would be to populate that map with two DatabaseClient objects, and then call destroy. Then verify that the map is empty (I can't think of a good way to verify that the clients were released). That's a decent smoke test.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r370853759", "createdAt": "2020-01-24T21:37:55Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,19 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg3NDI3OQ==", "bodyText": "@rjrudin A new test class was created for checking the function.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r370874279", "createdAt": "2020-01-24T22:42:25Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,19 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mzc1OQ=="}, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4OTg1Nw==", "bodyText": "Just a note - this logic is the sort of thing that should eventually move into a HubClient class, where it'd be a lot easier to test - i.e. create a HubClient with 3 DatabaseClients, then call destroy, then verify that each of the 3 DatabaseClients throws an error if you try to do something with it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371489857", "createdAt": "2020-01-27T21:23:26Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,19 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mzc1OQ=="}, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjI3NTg1OnYy", "diffSide": "RIGHT", "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTowOTowMVrOFiOGFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToxODoxN1rOFiOYOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQyNjgzNg==", "bodyText": "I think using public class variables can be avoided. You can autowire HubConfigSession or use a getter if required", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371426836", "createdAt": "2020-01-27T19:09:01Z", "author": {"login": "srinathgit"}, "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "diffHunk": "@@ -23,7 +23,7 @@\n     public String dataHubDeveloperPassword;\n \n     @Autowired\n-    private HubConfigSession hubConfig;\n+    public HubConfigSession hubConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d39138bfbc00cad9c7a903b3c570a13aee1faaf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzMTQ4MQ==", "bodyText": "@srinathgit I just changed it based on your suggestion.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371431481", "createdAt": "2020-01-27T19:18:17Z", "author": {"login": "hao1st"}, "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "diffHunk": "@@ -23,7 +23,7 @@\n     public String dataHubDeveloperPassword;\n \n     @Autowired\n-    private HubConfigSession hubConfig;\n+    public HubConfigSession hubConfig;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQyNjgzNg=="}, "originalCommit": {"oid": "7d39138bfbc00cad9c7a903b3c570a13aee1faaf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjMzMTQzOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToyNjoxOVrOFiOn8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowODoyN1rOFiP5vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzNTUwNg==", "bodyText": "This method can be \"protected\" and test can be added to same package", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371435506", "createdAt": "2020-01-27T19:26:19Z", "author": {"login": "srinathgit"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,24 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {\n+        if (!clientsByKindAndDatabaseName.isEmpty()) {\n+            clientsByKindAndDatabaseName.values().stream()\n+                .flatMap(s -> s.values().stream().filter(Objects::nonNull))\n+                .forEach(\n+                    e -> {\n+                        logger.debug(String.format(\"release %s (%s)\", e.getDatabase(), e.toString()));\n+                        e.release();\n+                        e = null;\n+                    });\n+            clientsByKindAndDatabaseName.clear();\n+        }\n+    }\n+\n+    //only for test purpose\n+    public Map<DatabaseKind, Map<String, DatabaseClient>> getAllDatabaseClients() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cacc4da3a8fb1f05dd49911bbe855f74f9b3835"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NjQ0Nw==", "bodyText": "@srinathgit good suggestion...", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371456447", "createdAt": "2020-01-27T20:08:27Z", "author": {"login": "hao1st"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,24 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {\n+        if (!clientsByKindAndDatabaseName.isEmpty()) {\n+            clientsByKindAndDatabaseName.values().stream()\n+                .flatMap(s -> s.values().stream().filter(Objects::nonNull))\n+                .forEach(\n+                    e -> {\n+                        logger.debug(String.format(\"release %s (%s)\", e.getDatabase(), e.toString()));\n+                        e.release();\n+                        e = null;\n+                    });\n+            clientsByKindAndDatabaseName.clear();\n+        }\n+    }\n+\n+    //only for test purpose\n+    public Map<DatabaseKind, Map<String, DatabaseClient>> getAllDatabaseClients() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzNTUwNg=="}, "originalCommit": {"oid": "8cacc4da3a8fb1f05dd49911bbe855f74f9b3835"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3658, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}