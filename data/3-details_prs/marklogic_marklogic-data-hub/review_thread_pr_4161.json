{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNzgwMTc4", "number": 4161, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMTowOTozMVrOEJREJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxMzo1OVrOEJRITw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MTUyMjMxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMTowOTozMVrOGpux5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxNzozN1rOGpu9og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMTIzOA==", "bodyText": "Should we use batch.getClient() to initialize the StepRunnerService so that request will be sent to all nodes?\nSilvano had previously filed a bug for this https://project.marklogic.com/jira/browse/DHFPROD-1172", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4161#discussion_r446411238", "createdAt": "2020-06-26T21:09:31Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java", "diffHunk": "@@ -373,33 +348,38 @@ private RunStepResponse runHarmonizer(RunStepResponse runStepResponse, Collectio\n         Vector<String> errorMessages = new Vector<>();\n \n         // The client used here doesn't matter, given that a QueryBatcher is going to be constructed based on an\n-        // Iterator. It's the construction of the FlowResource that matters, as that makes use of destinationDatabase\n-        // to control where outputted documents are written to.\n+        // Iterator. It's the step options that determine where documents are written to.\n         dataMovementManager = hubClient.getStagingClient().newDataMovementManager();\n \n+        final StepRunnerService stepRunnerService = StepRunnerService.on(hubClient.getStagingClient());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c467ae999ab6977fe6a7b067c1b67576e551f48"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMjkwNQ==", "bodyText": "Ah - I'll add that back in and add a comment to explain why it's being done.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4161#discussion_r446412905", "createdAt": "2020-06-26T21:13:57Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java", "diffHunk": "@@ -373,33 +348,38 @@ private RunStepResponse runHarmonizer(RunStepResponse runStepResponse, Collectio\n         Vector<String> errorMessages = new Vector<>();\n \n         // The client used here doesn't matter, given that a QueryBatcher is going to be constructed based on an\n-        // Iterator. It's the construction of the FlowResource that matters, as that makes use of destinationDatabase\n-        // to control where outputted documents are written to.\n+        // Iterator. It's the step options that determine where documents are written to.\n         dataMovementManager = hubClient.getStagingClient().newDataMovementManager();\n \n+        final StepRunnerService stepRunnerService = StepRunnerService.on(hubClient.getStagingClient());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMTIzOA=="}, "originalCommit": {"oid": "7c467ae999ab6977fe6a7b067c1b67576e551f48"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxNDI0Mg==", "bodyText": "I made the change - presumably, the DatabaseClient will not have \"database\" set on it, since the DC used to construct the DataMovementManager doesn't either. If \"database\" is set, the DataServices-generated interface will complain.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4161#discussion_r446414242", "createdAt": "2020-06-26T21:17:37Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/step/impl/QueryStepRunner.java", "diffHunk": "@@ -373,33 +348,38 @@ private RunStepResponse runHarmonizer(RunStepResponse runStepResponse, Collectio\n         Vector<String> errorMessages = new Vector<>();\n \n         // The client used here doesn't matter, given that a QueryBatcher is going to be constructed based on an\n-        // Iterator. It's the construction of the FlowResource that matters, as that makes use of destinationDatabase\n-        // to control where outputted documents are written to.\n+        // Iterator. It's the step options that determine where documents are written to.\n         dataMovementManager = hubClient.getStagingClient().newDataMovementManager();\n \n+        final StepRunnerService stepRunnerService = StepRunnerService.on(hubClient.getStagingClient());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMTIzOA=="}, "originalCommit": {"oid": "7c467ae999ab6977fe6a7b067c1b67576e551f48"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MTUzMjk1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/stepRunner/runSteps.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxMzo1OVrOGpu4cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMToxMzo1OVrOGpu4cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQxMjkxNQ==", "bodyText": "We can get rid of one of them.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4161#discussion_r446412915", "createdAt": "2020-06-26T21:13:59Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/stepRunner/runSteps.sjs", "diffHunk": "@@ -1,3 +1,20 @@\n+/*\n+  Copyright (c) 2020 MarkLogic Corporation\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+*/\n+'use strict';\n+\n 'use strict';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c467ae999ab6977fe6a7b067c1b67576e551f48"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3948, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}