{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDE3MjMw", "number": 4213, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowODozOFrOEOX26g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo0NDozMlrOEO1Q1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA2NDEwOnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/entities/Customer.entity.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowODozOFrOGxfWqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowODozOFrOGxfWqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzExMg==", "bodyText": "This needs to be \"facetable\", and if it's false, let's not include it (the omission of it will be the same as false).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454547112", "createdAt": "2020-07-14T18:08:38Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Customer.entity.json", "diffHunk": "@@ -1,98 +1,111 @@\n-{\n-  \"info\": {\n-    \"title\": \"Customer\",\n-    \"version\": \"0.0.1\",\n-    \"baseUri\": \"http://example.org/\"\n-  },\n-  \"definitions\": {\n-    \"Customer\": {\n-      \"required\": [\n-        \"name\"\n-      ],\n-      \"primaryKey\": \"customerId\",\n-      \"properties\": {\n-        \"customerId\": {\n-          \"datatype\": \"integer\"\n-        },\n-        \"name\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"nicknames\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of simple values\",\n-          \"items\": {\n-            \"datatype\": \"string\"\n-          }\n-        },\n-        \"shipping\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of structured values\",\n-          \"items\": {\n-            \"$ref\": \"#/definitions/Address\"\n-          }\n-        },\n-        \"billing\": {\n-          \"description\": \"Example of a single-value structured property\",\n-          \"$ref\": \"#/definitions/Address\"\n-        },\n-        \"birthDate\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"status\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"customerSince\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"orders\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a relationship to another entity type\",\n-          \"items\": {\n-            \"$ref\": \"http://example.org/Order-0.0.1/Order\"\n-          }\n-        }\n-      }\n-    },\n-    \"Address\": {\n-      \"required\": [ ],\n-      \"pii\": [ ],\n-      \"elementRangeIndex\": [ ],\n-      \"rangeIndex\": [ ],\n-      \"wordLexicon\": [ ],\n-      \"properties\": {\n-        \"street\": {\n-          \"datatype\": \"array\",\n-          \"items\": {\n-            \"datatype\": \"string\",\n-            \"collation\": \"http://marklogic.com/collation/codepoint\"\n-          }\n-        },\n-        \"city\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"state\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"zip\": {\n-          \"$ref\": \"#/definitions/Zip\"\n-        }\n-      }\n-    },\n-    \"Zip\": {\n-      \"required\": [ ],\n-      \"properties\": {\n-        \"fiveDigit\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"plusFour\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        }\n-      }\n-    }\n-  }\n-}\n+{\r\n+  \"info\": {\r\n+    \"title\": \"Customer\",\r\n+    \"version\": \"0.0.1\",\r\n+    \"baseUri\": \"http://example.org/\"\r\n+  },\r\n+  \"definitions\": {\r\n+    \"Customer\": {\r\n+      \"required\": [\r\n+        \"name\"\r\n+      ],\r\n+      \"primaryKey\": \"customerId\",\r\n+      \"properties\": {\r\n+        \"customerId\": {\r\n+          \"datatype\": \"integer\",\r\n+          \"facet\": true\r\n+        },\r\n+        \"name\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": false,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA2NTkyOnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/entities/Customer.entity.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowOTowOVrOGxfXwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowOTowOVrOGxfXwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzM5NA==", "bodyText": "Let's make \"status\" a facet instead of customerId - a user would likely never have a facet on a unique value like this.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454547394", "createdAt": "2020-07-14T18:09:09Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Customer.entity.json", "diffHunk": "@@ -1,98 +1,111 @@\n-{\n-  \"info\": {\n-    \"title\": \"Customer\",\n-    \"version\": \"0.0.1\",\n-    \"baseUri\": \"http://example.org/\"\n-  },\n-  \"definitions\": {\n-    \"Customer\": {\n-      \"required\": [\n-        \"name\"\n-      ],\n-      \"primaryKey\": \"customerId\",\n-      \"properties\": {\n-        \"customerId\": {\n-          \"datatype\": \"integer\"\n-        },\n-        \"name\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"nicknames\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of simple values\",\n-          \"items\": {\n-            \"datatype\": \"string\"\n-          }\n-        },\n-        \"shipping\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of structured values\",\n-          \"items\": {\n-            \"$ref\": \"#/definitions/Address\"\n-          }\n-        },\n-        \"billing\": {\n-          \"description\": \"Example of a single-value structured property\",\n-          \"$ref\": \"#/definitions/Address\"\n-        },\n-        \"birthDate\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"status\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"customerSince\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"orders\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a relationship to another entity type\",\n-          \"items\": {\n-            \"$ref\": \"http://example.org/Order-0.0.1/Order\"\n-          }\n-        }\n-      }\n-    },\n-    \"Address\": {\n-      \"required\": [ ],\n-      \"pii\": [ ],\n-      \"elementRangeIndex\": [ ],\n-      \"rangeIndex\": [ ],\n-      \"wordLexicon\": [ ],\n-      \"properties\": {\n-        \"street\": {\n-          \"datatype\": \"array\",\n-          \"items\": {\n-            \"datatype\": \"string\",\n-            \"collation\": \"http://marklogic.com/collation/codepoint\"\n-          }\n-        },\n-        \"city\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"state\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"zip\": {\n-          \"$ref\": \"#/definitions/Zip\"\n-        }\n-      }\n-    },\n-    \"Zip\": {\n-      \"required\": [ ],\n-      \"properties\": {\n-        \"fiveDigit\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"plusFour\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        }\n-      }\n-    }\n-  }\n-}\n+{\r\n+  \"info\": {\r\n+    \"title\": \"Customer\",\r\n+    \"version\": \"0.0.1\",\r\n+    \"baseUri\": \"http://example.org/\"\r\n+  },\r\n+  \"definitions\": {\r\n+    \"Customer\": {\r\n+      \"required\": [\r\n+        \"name\"\r\n+      ],\r\n+      \"primaryKey\": \"customerId\",\r\n+      \"properties\": {\r\n+        \"customerId\": {\r\n+          \"datatype\": \"integer\",\r\n+          \"facet\": true\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA2ODA4OnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/entities/Customer.entity.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowOTo0NFrOGxfZFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMDo1MjowNFrOGxk3vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzczNA==", "bodyText": "If the property is of type \"date\" and facet = true, does that translate to a date range selector in the UI, as opposed to a set of values?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454547734", "createdAt": "2020-07-14T18:09:44Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Customer.entity.json", "diffHunk": "@@ -1,98 +1,111 @@\n-{\n-  \"info\": {\n-    \"title\": \"Customer\",\n-    \"version\": \"0.0.1\",\n-    \"baseUri\": \"http://example.org/\"\n-  },\n-  \"definitions\": {\n-    \"Customer\": {\n-      \"required\": [\n-        \"name\"\n-      ],\n-      \"primaryKey\": \"customerId\",\n-      \"properties\": {\n-        \"customerId\": {\n-          \"datatype\": \"integer\"\n-        },\n-        \"name\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"nicknames\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of simple values\",\n-          \"items\": {\n-            \"datatype\": \"string\"\n-          }\n-        },\n-        \"shipping\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of structured values\",\n-          \"items\": {\n-            \"$ref\": \"#/definitions/Address\"\n-          }\n-        },\n-        \"billing\": {\n-          \"description\": \"Example of a single-value structured property\",\n-          \"$ref\": \"#/definitions/Address\"\n-        },\n-        \"birthDate\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"status\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"customerSince\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"orders\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a relationship to another entity type\",\n-          \"items\": {\n-            \"$ref\": \"http://example.org/Order-0.0.1/Order\"\n-          }\n-        }\n-      }\n-    },\n-    \"Address\": {\n-      \"required\": [ ],\n-      \"pii\": [ ],\n-      \"elementRangeIndex\": [ ],\n-      \"rangeIndex\": [ ],\n-      \"wordLexicon\": [ ],\n-      \"properties\": {\n-        \"street\": {\n-          \"datatype\": \"array\",\n-          \"items\": {\n-            \"datatype\": \"string\",\n-            \"collation\": \"http://marklogic.com/collation/codepoint\"\n-          }\n-        },\n-        \"city\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"state\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"zip\": {\n-          \"$ref\": \"#/definitions/Zip\"\n-        }\n-      }\n-    },\n-    \"Zip\": {\n-      \"required\": [ ],\n-      \"properties\": {\n-        \"fiveDigit\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"plusFour\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        }\n-      }\n-    }\n-  }\n-}\n+{\r\n+  \"info\": {\r\n+    \"title\": \"Customer\",\r\n+    \"version\": \"0.0.1\",\r\n+    \"baseUri\": \"http://example.org/\"\r\n+  },\r\n+  \"definitions\": {\r\n+    \"Customer\": {\r\n+      \"required\": [\r\n+        \"name\"\r\n+      ],\r\n+      \"primaryKey\": \"customerId\",\r\n+      \"properties\": {\r\n+        \"customerId\": {\r\n+          \"datatype\": \"integer\",\r\n+          \"facet\": true\r\n+        },\r\n+        \"name\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": false,\r\n+          \"collation\": \"http://marklogic.com/collation/codepoint\"\r\n+        },\r\n+        \"nicknames\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of simple values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"datatype\": \"string\"\r\n+          }\r\n+        },\r\n+        \"shipping\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of structured values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"$ref\": \"#/definitions/Address\"\r\n+          }\r\n+        },\r\n+        \"billing\": {\r\n+          \"description\": \"Example of a single-value structured property\",\r\n+          \"$ref\": \"#/definitions/Address\"\r\n+        },\r\n+        \"birthDate\": {\r\n+          \"datatype\": \"date\",\r\n+          \"facet\": true\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYyMDc5NQ==", "bodyText": "@rjrudin Ideally it should work after generating the path range indexes for facetable properties. But there is a bug currently in UI that the facets for range path indexes are not shown.\nThe entitySearch endpoint though is returning the response.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454620795", "createdAt": "2020-07-14T20:22:09Z", "author": {"login": "rahulvudutala"}, "path": "examples/reference-entity-model/entities/Customer.entity.json", "diffHunk": "@@ -1,98 +1,111 @@\n-{\n-  \"info\": {\n-    \"title\": \"Customer\",\n-    \"version\": \"0.0.1\",\n-    \"baseUri\": \"http://example.org/\"\n-  },\n-  \"definitions\": {\n-    \"Customer\": {\n-      \"required\": [\n-        \"name\"\n-      ],\n-      \"primaryKey\": \"customerId\",\n-      \"properties\": {\n-        \"customerId\": {\n-          \"datatype\": \"integer\"\n-        },\n-        \"name\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"nicknames\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of simple values\",\n-          \"items\": {\n-            \"datatype\": \"string\"\n-          }\n-        },\n-        \"shipping\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of structured values\",\n-          \"items\": {\n-            \"$ref\": \"#/definitions/Address\"\n-          }\n-        },\n-        \"billing\": {\n-          \"description\": \"Example of a single-value structured property\",\n-          \"$ref\": \"#/definitions/Address\"\n-        },\n-        \"birthDate\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"status\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"customerSince\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"orders\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a relationship to another entity type\",\n-          \"items\": {\n-            \"$ref\": \"http://example.org/Order-0.0.1/Order\"\n-          }\n-        }\n-      }\n-    },\n-    \"Address\": {\n-      \"required\": [ ],\n-      \"pii\": [ ],\n-      \"elementRangeIndex\": [ ],\n-      \"rangeIndex\": [ ],\n-      \"wordLexicon\": [ ],\n-      \"properties\": {\n-        \"street\": {\n-          \"datatype\": \"array\",\n-          \"items\": {\n-            \"datatype\": \"string\",\n-            \"collation\": \"http://marklogic.com/collation/codepoint\"\n-          }\n-        },\n-        \"city\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"state\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"zip\": {\n-          \"$ref\": \"#/definitions/Zip\"\n-        }\n-      }\n-    },\n-    \"Zip\": {\n-      \"required\": [ ],\n-      \"properties\": {\n-        \"fiveDigit\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"plusFour\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        }\n-      }\n-    }\n-  }\n-}\n+{\r\n+  \"info\": {\r\n+    \"title\": \"Customer\",\r\n+    \"version\": \"0.0.1\",\r\n+    \"baseUri\": \"http://example.org/\"\r\n+  },\r\n+  \"definitions\": {\r\n+    \"Customer\": {\r\n+      \"required\": [\r\n+        \"name\"\r\n+      ],\r\n+      \"primaryKey\": \"customerId\",\r\n+      \"properties\": {\r\n+        \"customerId\": {\r\n+          \"datatype\": \"integer\",\r\n+          \"facet\": true\r\n+        },\r\n+        \"name\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": false,\r\n+          \"collation\": \"http://marklogic.com/collation/codepoint\"\r\n+        },\r\n+        \"nicknames\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of simple values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"datatype\": \"string\"\r\n+          }\r\n+        },\r\n+        \"shipping\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of structured values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"$ref\": \"#/definitions/Address\"\r\n+          }\r\n+        },\r\n+        \"billing\": {\r\n+          \"description\": \"Example of a single-value structured property\",\r\n+          \"$ref\": \"#/definitions/Address\"\r\n+        },\r\n+        \"birthDate\": {\r\n+          \"datatype\": \"date\",\r\n+          \"facet\": true\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzczNA=="}, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYzNzUwMg==", "bodyText": "Ignore my comment - I forgot this is only adjusting the modeling UI. How this translates to search options and the search UI is out of scope.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454637502", "createdAt": "2020-07-14T20:52:04Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Customer.entity.json", "diffHunk": "@@ -1,98 +1,111 @@\n-{\n-  \"info\": {\n-    \"title\": \"Customer\",\n-    \"version\": \"0.0.1\",\n-    \"baseUri\": \"http://example.org/\"\n-  },\n-  \"definitions\": {\n-    \"Customer\": {\n-      \"required\": [\n-        \"name\"\n-      ],\n-      \"primaryKey\": \"customerId\",\n-      \"properties\": {\n-        \"customerId\": {\n-          \"datatype\": \"integer\"\n-        },\n-        \"name\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"nicknames\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of simple values\",\n-          \"items\": {\n-            \"datatype\": \"string\"\n-          }\n-        },\n-        \"shipping\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of structured values\",\n-          \"items\": {\n-            \"$ref\": \"#/definitions/Address\"\n-          }\n-        },\n-        \"billing\": {\n-          \"description\": \"Example of a single-value structured property\",\n-          \"$ref\": \"#/definitions/Address\"\n-        },\n-        \"birthDate\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"status\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"customerSince\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"orders\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a relationship to another entity type\",\n-          \"items\": {\n-            \"$ref\": \"http://example.org/Order-0.0.1/Order\"\n-          }\n-        }\n-      }\n-    },\n-    \"Address\": {\n-      \"required\": [ ],\n-      \"pii\": [ ],\n-      \"elementRangeIndex\": [ ],\n-      \"rangeIndex\": [ ],\n-      \"wordLexicon\": [ ],\n-      \"properties\": {\n-        \"street\": {\n-          \"datatype\": \"array\",\n-          \"items\": {\n-            \"datatype\": \"string\",\n-            \"collation\": \"http://marklogic.com/collation/codepoint\"\n-          }\n-        },\n-        \"city\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"state\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"zip\": {\n-          \"$ref\": \"#/definitions/Zip\"\n-        }\n-      }\n-    },\n-    \"Zip\": {\n-      \"required\": [ ],\n-      \"properties\": {\n-        \"fiveDigit\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"plusFour\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        }\n-      }\n-    }\n-  }\n-}\n+{\r\n+  \"info\": {\r\n+    \"title\": \"Customer\",\r\n+    \"version\": \"0.0.1\",\r\n+    \"baseUri\": \"http://example.org/\"\r\n+  },\r\n+  \"definitions\": {\r\n+    \"Customer\": {\r\n+      \"required\": [\r\n+        \"name\"\r\n+      ],\r\n+      \"primaryKey\": \"customerId\",\r\n+      \"properties\": {\r\n+        \"customerId\": {\r\n+          \"datatype\": \"integer\",\r\n+          \"facet\": true\r\n+        },\r\n+        \"name\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": false,\r\n+          \"collation\": \"http://marklogic.com/collation/codepoint\"\r\n+        },\r\n+        \"nicknames\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of simple values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"datatype\": \"string\"\r\n+          }\r\n+        },\r\n+        \"shipping\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of structured values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"$ref\": \"#/definitions/Address\"\r\n+          }\r\n+        },\r\n+        \"billing\": {\r\n+          \"description\": \"Example of a single-value structured property\",\r\n+          \"$ref\": \"#/definitions/Address\"\r\n+        },\r\n+        \"birthDate\": {\r\n+          \"datatype\": \"date\",\r\n+          \"facet\": true\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzczNA=="}, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA2OTM5OnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/entities/Customer.entity.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoxMDowNFrOGxfZ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoxMDowNFrOGxfZ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NzkzNQ==", "bodyText": "We're not going to support facets on structured properties for this first go-round.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454547935", "createdAt": "2020-07-14T18:10:04Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Customer.entity.json", "diffHunk": "@@ -1,98 +1,111 @@\n-{\n-  \"info\": {\n-    \"title\": \"Customer\",\n-    \"version\": \"0.0.1\",\n-    \"baseUri\": \"http://example.org/\"\n-  },\n-  \"definitions\": {\n-    \"Customer\": {\n-      \"required\": [\n-        \"name\"\n-      ],\n-      \"primaryKey\": \"customerId\",\n-      \"properties\": {\n-        \"customerId\": {\n-          \"datatype\": \"integer\"\n-        },\n-        \"name\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"nicknames\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of simple values\",\n-          \"items\": {\n-            \"datatype\": \"string\"\n-          }\n-        },\n-        \"shipping\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a multi-value property of structured values\",\n-          \"items\": {\n-            \"$ref\": \"#/definitions/Address\"\n-          }\n-        },\n-        \"billing\": {\n-          \"description\": \"Example of a single-value structured property\",\n-          \"$ref\": \"#/definitions/Address\"\n-        },\n-        \"birthDate\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"status\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"customerSince\": {\n-          \"datatype\": \"date\"\n-        },\n-        \"orders\": {\n-          \"datatype\": \"array\",\n-          \"description\": \"Example of a relationship to another entity type\",\n-          \"items\": {\n-            \"$ref\": \"http://example.org/Order-0.0.1/Order\"\n-          }\n-        }\n-      }\n-    },\n-    \"Address\": {\n-      \"required\": [ ],\n-      \"pii\": [ ],\n-      \"elementRangeIndex\": [ ],\n-      \"rangeIndex\": [ ],\n-      \"wordLexicon\": [ ],\n-      \"properties\": {\n-        \"street\": {\n-          \"datatype\": \"array\",\n-          \"items\": {\n-            \"datatype\": \"string\",\n-            \"collation\": \"http://marklogic.com/collation/codepoint\"\n-          }\n-        },\n-        \"city\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"state\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"zip\": {\n-          \"$ref\": \"#/definitions/Zip\"\n-        }\n-      }\n-    },\n-    \"Zip\": {\n-      \"required\": [ ],\n-      \"properties\": {\n-        \"fiveDigit\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        },\n-        \"plusFour\": {\n-          \"datatype\": \"string\",\n-          \"collation\": \"http://marklogic.com/collation/codepoint\"\n-        }\n-      }\n-    }\n-  }\n-}\n+{\r\n+  \"info\": {\r\n+    \"title\": \"Customer\",\r\n+    \"version\": \"0.0.1\",\r\n+    \"baseUri\": \"http://example.org/\"\r\n+  },\r\n+  \"definitions\": {\r\n+    \"Customer\": {\r\n+      \"required\": [\r\n+        \"name\"\r\n+      ],\r\n+      \"primaryKey\": \"customerId\",\r\n+      \"properties\": {\r\n+        \"customerId\": {\r\n+          \"datatype\": \"integer\",\r\n+          \"facet\": true\r\n+        },\r\n+        \"name\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": false,\r\n+          \"collation\": \"http://marklogic.com/collation/codepoint\"\r\n+        },\r\n+        \"nicknames\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of simple values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"datatype\": \"string\"\r\n+          }\r\n+        },\r\n+        \"shipping\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a multi-value property of structured values\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"$ref\": \"#/definitions/Address\"\r\n+          }\r\n+        },\r\n+        \"billing\": {\r\n+          \"description\": \"Example of a single-value structured property\",\r\n+          \"$ref\": \"#/definitions/Address\"\r\n+        },\r\n+        \"birthDate\": {\r\n+          \"datatype\": \"date\",\r\n+          \"facet\": true\r\n+        },\r\n+        \"status\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": false\r\n+        },\r\n+        \"customerSince\": {\r\n+          \"datatype\": \"date\",\r\n+          \"facet\": false\r\n+        },\r\n+        \"orders\": {\r\n+          \"datatype\": \"array\",\r\n+          \"description\": \"Example of a relationship to another entity type\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"$ref\": \"http://example.org/Order-0.0.1/Order\"\r\n+          }\r\n+        }\r\n+      }\r\n+    },\r\n+    \"Address\": {\r\n+      \"required\": [ ],\r\n+      \"pii\": [ ],\r\n+      \"elementRangeIndex\": [ ],\r\n+      \"rangeIndex\": [ ],\r\n+      \"wordLexicon\": [ ],\r\n+      \"properties\": {\r\n+        \"street\": {\r\n+          \"datatype\": \"array\",\r\n+          \"facet\": false,\r\n+          \"items\": {\r\n+            \"datatype\": \"string\",\r\n+            \"collation\": \"http://marklogic.com/collation/codepoint\"\r\n+          }\r\n+        },\r\n+        \"city\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": true,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 180}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA3MTc5OnYy", "diffSide": "RIGHT", "path": "examples/reference-entity-model/entities/Order.entity.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoxMDo0MlrOGxfbXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoxMDo0MlrOGxfbXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0ODMxNg==", "bodyText": "Let's hold off on modifying this entity - I think making birthDate and status facetable on Customer is enough for now (this is another property that a user would rarely enable a facet on).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454548316", "createdAt": "2020-07-14T18:10:42Z", "author": {"login": "rjrudin"}, "path": "examples/reference-entity-model/entities/Order.entity.json", "diffHunk": "@@ -1,31 +1,34 @@\n-{\n-  \"info\": {\n-    \"title\": \"Order\",\n-    \"version\": \"0.0.1\",\n-    \"baseUri\": \"http://marklogic.com/example/\"\n-  },\n-  \"definitions\": {\n-    \"Order\": {\n-      \"required\": [ ],\n-      \"primaryKey\": \"orderId\",\n-      \"properties\": {\n-        \"orderId\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"address\": {\n-          \"$ref\": \"#/definitions/Address\"\n-        }\n-      }\n-    },\n-    \"Address\": {\n-      \"properties\": {\n-        \"city\": {\n-          \"datatype\": \"string\"\n-        },\n-        \"state\": {\n-          \"datatype\": \"string\"\n-        }\n-      }\n-    }\n-  }\n-}\n\\ No newline at end of file\n+{\r\n+  \"info\": {\r\n+    \"title\": \"Order\",\r\n+    \"version\": \"0.0.1\",\r\n+    \"baseUri\": \"http://marklogic.com/example/\"\r\n+  },\r\n+  \"definitions\": {\r\n+    \"Order\": {\r\n+      \"required\": [ ],\r\n+      \"primaryKey\": \"orderId\",\r\n+      \"properties\": {\r\n+        \"orderId\": {\r\n+          \"datatype\": \"string\",\r\n+          \"facet\": true\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA3NTU1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODoxMTo0N1rOGxfdxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMDo1MzoyOVrOGxk6zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0ODkzNA==", "bodyText": "Let's use the term \"facetable\" in the UI as well.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454548934", "createdAt": "2020-07-14T18:11:47Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "diffHunk": "@@ -321,6 +321,7 @@ const PropertyTable: React.FC<Props> = (props) => {\n       let externalEntity = modelingOptions.entityTypeNamesArray.find(entity => entity.name === parseType[1])\n       return {\n         datatype: 'array',\n+        facet: facetable,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYyNzAzNw==", "bodyText": "\"facet\" is referenced a lot in the UI already, but go ahead and change it @saarimrahman", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454627037", "createdAt": "2020-07-14T20:33:00Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "diffHunk": "@@ -321,6 +321,7 @@ const PropertyTable: React.FC<Props> = (props) => {\n       let externalEntity = modelingOptions.entityTypeNamesArray.find(entity => entity.name === parseType[1])\n       return {\n         datatype: 'array',\n+        facet: facetable,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0ODkzNA=="}, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYzODI4NQ==", "bodyText": "I think it's important to distinguish between the two concepts, which are - 1) the thing that appears in search results with values and counts, and 2) whether or not a property should have a thing appear in search results for it. Thus, two separate terms are warranted.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r454638285", "createdAt": "2020-07-14T20:53:29Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "diffHunk": "@@ -321,6 +321,7 @@ const PropertyTable: React.FC<Props> = (props) => {\n       let externalEntity = modelingOptions.entityTypeNamesArray.find(entity => entity.name === parseType[1])\n       return {\n         datatype: 'array',\n+        facet: facetable,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0ODkzNA=="}, "originalCommit": {"oid": "da2fb6b6f59867c92fd245d2f34b260e2a354178"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODIzMjI2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzowNDozNFrOGx9GKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMTo0NjoxM1rOGySHYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNDQxMQ==", "bodyText": "I think the code should definitely use the term \"facetable\" to avoid confusion over what \"facet\" means based on the context it's used in. But verify with @yasht2010 that it's okay for the UI to say \"Facetable\" - that's a change in the design. I don't have any issue with the UI saying e.g. \"Facet\" and \"Sort\" - in that context, those can be seen as verbs. But in the entity model itself, I think we want adjectives.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455034411", "createdAt": "2020-07-15T13:04:34Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "diffHunk": "@@ -240,6 +240,10 @@ describe('Entity Modeling Property Table Component', () => {\n     fireEvent.change(wildcardCheckbox, { target: { checked: true } });\n     expect(wildcardCheckbox).toBeChecked();\n \n+    const facetableCheckbox = screen.getByLabelText('Facetable');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b93d87c26290eca6dbdce291202b91ff9da3132f"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIwNDM2Mw==", "bodyText": "I'd prefer to use the word \"Facet\" in the UI. \"Facetable\" is not a valid word.\n@eltesoro-ml", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455204363", "createdAt": "2020-07-15T17:12:02Z", "author": {"login": "yasht2010"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "diffHunk": "@@ -240,6 +240,10 @@ describe('Entity Modeling Property Table Component', () => {\n     fireEvent.change(wildcardCheckbox, { target: { checked: true } });\n     expect(wildcardCheckbox).toBeChecked();\n \n+    const facetableCheckbox = screen.getByLabelText('Facetable');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNDQxMQ=="}, "originalCommit": {"oid": "b93d87c26290eca6dbdce291202b91ff9da3132f"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIwODcyNg==", "bodyText": "How about...\nconst isFacetCheckbox = screen.getByLabelText('Use as a facet');", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455208726", "createdAt": "2020-07-15T17:18:52Z", "author": {"login": "eltesoro-ml"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "diffHunk": "@@ -240,6 +240,10 @@ describe('Entity Modeling Property Table Component', () => {\n     fireEvent.change(wildcardCheckbox, { target: { checked: true } });\n     expect(wildcardCheckbox).toBeChecked();\n \n+    const facetableCheckbox = screen.getByLabelText('Facetable');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNDQxMQ=="}, "originalCommit": {"oid": "b93d87c26290eca6dbdce291202b91ff9da3132f"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIyNjU4Mw==", "bodyText": "\"facetable\" has use in other products - for example, Azure uses it in their docs - https://docs.microsoft.com/en-us/azure/search/search-filters-facets , along with \"filterable\".\nFWIW, I believe \"facetable\" is commonly used in the field too - I think it's common for a consultant to say e.g. \"Let's make that property facetable\" (often as a substitute for \"searchable\").\nIt's not in the dictionary, but - well, that hasn't stopped Microsoft from using it. :)", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455226583", "createdAt": "2020-07-15T17:39:33Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "diffHunk": "@@ -240,6 +240,10 @@ describe('Entity Modeling Property Table Component', () => {\n     fireEvent.change(wildcardCheckbox, { target: { checked: true } });\n     expect(wildcardCheckbox).toBeChecked();\n \n+    const facetableCheckbox = screen.getByLabelText('Facetable');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNDQxMQ=="}, "originalCommit": {"oid": "b93d87c26290eca6dbdce291202b91ff9da3132f"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTM3ODc4NQ==", "bodyText": "https://64.media.tumblr.com/7bc8be17beeed1dd44aa4e18b5e3e825/tumblr_inline_okb99j5SEa1sstivl_500.png\n\"FACETABLE ... When facepalm just isn't enough.\"\n(from https://thegrinningkitten.tumblr.com/post/156332512840/can-you-draw-a-facetable)", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455378785", "createdAt": "2020-07-15T21:46:13Z", "author": {"login": "eltesoro-ml"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.test.tsx", "diffHunk": "@@ -240,6 +240,10 @@ describe('Entity Modeling Property Table Component', () => {\n     fireEvent.change(wildcardCheckbox, { target: { checked: true } });\n     expect(wildcardCheckbox).toBeChecked();\n \n+    const facetableCheckbox = screen.getByLabelText('Facetable');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAzNDQxMQ=="}, "originalCommit": {"oid": "b93d87c26290eca6dbdce291202b91ff9da3132f"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTI3MTE3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/scenarios.modeling.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowNTo0NFrOGyHPGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowNTo0NFrOGyHPGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIwMDUzNw==", "bodyText": "This check should be for getFacetIcon", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455200537", "createdAt": "2020-07-15T17:05:44Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/scenarios.modeling.tsx", "diffHunk": "@@ -41,11 +41,13 @@ describe('Entity Modeling', () => {\n     propertyModal.getYesRadio('multiple').click();\n     propertyModal.getYesRadio('pii').click();\n     propertyModal.clickCheckbox('wildcard');\n+    propertyModal.clickCheckbox('facetable');\n     propertyModal.getSubmitButton().click();\n \n     propertyTable.getMultipleIcon('newID').should('exist');\n     propertyTable.getPiiIcon('newID').should('exist');\n     propertyTable.getWildcardIcon('newID').should('exist');\n+    propertyTable.getWildcardIcon('newID').should('exist');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b93d87c26290eca6dbdce291202b91ff9da3132f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTg4MTgxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxOTo0NDozMlrOGyNPUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDozNDo1NlrOGyO35g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI5ODg5OQ==", "bodyText": "No need to change right now - but @brucean52  is \"wildcard\" used? I didn't think we were supporting that. Enabling a word lexicon alone won't enabling wildcarded search. I'd rather see this removed (separate JIRA ticket) if we're not doing anything with it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455298899", "createdAt": "2020-07-15T19:44:32Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "diffHunk": "@@ -55,7 +55,7 @@ const DEFAULT_SELECTED_PROPERTY_OPTIONS: PropertyOptions = {\n   multiple: '',\n   pii: '',\n   sort: false,\n-  facet: false,\n+  facetable: false,\n   wildcard: false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "036b6fafd8561b0c591939381b1feb952747f0ec"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMjU1NA==", "bodyText": "yeah, wildcard is hooked up to wordLexicon right now", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455312554", "createdAt": "2020-07-15T20:10:03Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "diffHunk": "@@ -55,7 +55,7 @@ const DEFAULT_SELECTED_PROPERTY_OPTIONS: PropertyOptions = {\n   multiple: '',\n   pii: '',\n   sort: false,\n-  facet: false,\n+  facetable: false,\n   wildcard: false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI5ODg5OQ=="}, "originalCommit": {"oid": "036b6fafd8561b0c591939381b1feb952747f0ec"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMyNTY3MA==", "bodyText": "Can you work with Allison on changing this? We can't release this, because wordLexicon alone will not enable wildcard search.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4213#discussion_r455325670", "createdAt": "2020-07-15T20:34:56Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/modeling/property-table/property-table.tsx", "diffHunk": "@@ -55,7 +55,7 @@ const DEFAULT_SELECTED_PROPERTY_OPTIONS: PropertyOptions = {\n   multiple: '',\n   pii: '',\n   sort: false,\n-  facet: false,\n+  facetable: false,\n   wildcard: false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI5ODg5OQ=="}, "originalCommit": {"oid": "036b6fafd8561b0c591939381b1feb952747f0ec"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3982, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}