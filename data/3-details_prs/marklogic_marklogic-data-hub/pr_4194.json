{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDA3NzU1", "number": 4194, "title": "DHFPROD-5047: Endpoint for list of all steps", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-07-09T17:53:24Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194", "merged": true, "mergeCommit": {"oid": "520b166e1535281d90dd8a9c4013aeefd5f90cbb"}, "closed": true, "closedAt": "2020-07-14T21:56:00Z", "author": {"login": "ryanjdew"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczTQrbAFqTQ0NTg2MjQ1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc08JIGgFqTQ0ODQ0NDgzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODYyNDU2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-445862456", "createdAt": "2020-07-09T18:22:18Z", "commit": {"oid": "127a4c9221a8651b83569357f5b27f2b6b7670e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoyMjoxOVrOGvcu5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoyMjoxOVrOGvcu5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNzAxMg==", "bodyText": "Pinging @bsrikan and @srinathgit  about this - the issue with our use of \"name\" on a step document will impact an entity \"name\" property with a range index on it (flow documents do the same).\nI am thinking we could kill two birds with one stone here - I think it's very common to need the ID and name from a set of documents, and thus it's common to add range indexes to those. \"stepId\" is a good name, but \"name\" of course is not for a range index.\nHow about if - as part of migration for 5.3 - we use \"stepName\" instead of \"name\" in step documents and add range indexes for stepId and stepName to the staging and final databases? I think that's a good use of indexes. We'd then just do a new DS endpoint that retrieves the ID and name properties for all steps (it looks like \"false\" is always the 3rd parameter, so that's not really needed?).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#discussion_r452407012", "createdAt": "2020-07-09T18:22:19Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/steps/StepController.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.marklogic.hub.central.controllers.steps;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.hub.central.controllers.BaseController;\n+import com.marklogic.hub.dataservices.ArtifactService;\n+import io.swagger.annotations.ApiOperation;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.annotation.Secured;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+@Controller\n+@RequestMapping(\"/api/steps\")\n+public class StepController extends BaseController {\n+    @RequestMapping(method = RequestMethod.GET)\n+    @ApiOperation(value = \"Get all steps grouped by type\", response = Steps.class)\n+    @Secured(\"ROLE_readFlow\")\n+    public ResponseEntity<JsonNode> get() {\n+        ObjectNode response = new ObjectMapper().createObjectNode();\n+        ArtifactService service = newArtifactService();\n+        response.set(\"ingestionSteps\", service.getList(\"ingestion\", Stream.of(\"stepId\", \"name\"), false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127a4c9221a8651b83569357f5b27f2b6b7670e9"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1OTAxMzA4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-445901308", "createdAt": "2020-07-09T19:19:34Z", "commit": {"oid": "127a4c9221a8651b83569357f5b27f2b6b7670e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOToxOTozNFrOGvelGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOToxOTozNFrOGvelGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzNzI3Mg==", "bodyText": "Rather than changing the getList() method here, will it be easier to add a DS endpoint to StepService (something like getAllSteps.sjs), where we can get all ingestion, mapping (custom in the future) steps and return them ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#discussion_r452437272", "createdAt": "2020-07-09T19:19:34Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dataservices/ArtifactService.java", "diffHunk": "@@ -301,9 +302,11 @@ private ArtifactServiceImpl(DatabaseClient dbClient, JSONWriteHandle servDecl) {\n    * Invokes the getList operation on the database server\n    *\n    * @param artifactType\tprovides input\n+   * @param propertiesToReturn\tList of properties to return. Default behavior returns all properties\n+   * @param groupByEntityType\tIf true, artifacts are grouped by Entity Type; default varies by artifact. Artifact types with entity type relationships default to true.\n    * @return\tas output\n    */\n-    com.fasterxml.jackson.databind.JsonNode getList(String artifactType);\n+    com.fasterxml.jackson.databind.JsonNode getList(String artifactType, Stream<String> propertiesToReturn, Boolean groupByEntityType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127a4c9221a8651b83569357f5b27f2b6b7670e9"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "127a4c9221a8651b83569357f5b27f2b6b7670e9", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/127a4c9221a8651b83569357f5b27f2b6b7670e9", "committedDate": "2020-07-09T17:50:26Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}, "afterCommit": {"oid": "aab7f1f0956deb3aa4622e4aa62f673ebe8c6365", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/aab7f1f0956deb3aa4622e4aa62f673ebe8c6365", "committedDate": "2020-07-09T21:15:49Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDQwMjM0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-446040234", "createdAt": "2020-07-09T23:50:43Z", "commit": {"oid": "aab7f1f0956deb3aa4622e4aa62f673ebe8c6365"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NDQ2NTgz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-446446583", "createdAt": "2020-07-10T14:26:47Z", "commit": {"oid": "aab7f1f0956deb3aa4622e4aa62f673ebe8c6365"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoyNjo0OFrOGv5feg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDozMDo1N1rOGv5pXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3ODIwMg==", "bodyText": "I think \"clean\" typically means - \"remove bad/malformed stuff from it\". But the intent here is to only return certain top-level properties of each step. I think \"removeAllPropertiesExcept\" would be a better function name.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#discussion_r452878202", "createdAt": "2020-07-10T14:26:48Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/artifacts/core.sjs", "diffHunk": "@@ -320,6 +320,17 @@ function convertStepReferenceToInlineStep(stepId) {\n   return newFlowStep;\n }\n \n+function cleanArtifact(artifact, propertiesToReturn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab7f1f0956deb3aa4622e4aa62f673ebe8c6365"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg4MDczMg==", "bodyText": "Because this is the only client that needs to only return certain properties for each step, I'd rather that logic be in here as opposed to being in artifacts/core.sjs. Once we have a second use case for this logic, we can consider how to reuse the logic.\nAlso, since this endpoint is only used for returning stepId and name, I think that logic should go in here as well. If we later have a use case for getting all properties of steps or a different set, we can consider how to address it.\nIn short, I'd postpone adding flexibility until we need it, because that flexibility comes with a cost.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#discussion_r452880732", "createdAt": "2020-07-10T14:30:57Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/step/getStepsByType.sjs", "diffHunk": "@@ -0,0 +1,29 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+\n+const Artifacts = require('/data-hub/5/artifacts/core.sjs');\n+\n+var propertiesToReturn;\n+\n+const response = {};\n+const stepTypes = ['ingestion', 'mapping'];\n+\n+for (const stepType of stepTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab7f1f0956deb3aa4622e4aa62f673ebe8c6365"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aab7f1f0956deb3aa4622e4aa62f673ebe8c6365", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/aab7f1f0956deb3aa4622e4aa62f673ebe8c6365", "committedDate": "2020-07-09T21:15:49Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}, "afterCommit": {"oid": "168ac32b477694e710be90e4242c26cb4d13e8e0", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/168ac32b477694e710be90e4242c26cb4d13e8e0", "committedDate": "2020-07-10T18:37:08Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjI4MDAz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-446628003", "createdAt": "2020-07-10T18:46:20Z", "commit": {"oid": "168ac32b477694e710be90e4242c26cb4d13e8e0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NjMyODA1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-446632805", "createdAt": "2020-07-10T18:54:37Z", "commit": {"oid": "168ac32b477694e710be90e4242c26cb4d13e8e0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "168ac32b477694e710be90e4242c26cb4d13e8e0", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/168ac32b477694e710be90e4242c26cb4d13e8e0", "committedDate": "2020-07-10T18:37:08Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}, "afterCommit": {"oid": "5d3c8e16d8cf347d0b6162af8c93514929c105aa", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5d3c8e16d8cf347d0b6162af8c93514929c105aa", "committedDate": "2020-07-13T19:25:00Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0543058e3309a3dcdfd73393d8d505775f74293", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b0543058e3309a3dcdfd73393d8d505775f74293", "committedDate": "2020-07-13T19:42:04Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d3c8e16d8cf347d0b6162af8c93514929c105aa", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5d3c8e16d8cf347d0b6162af8c93514929c105aa", "committedDate": "2020-07-13T19:25:00Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}, "afterCommit": {"oid": "b0543058e3309a3dcdfd73393d8d505775f74293", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b0543058e3309a3dcdfd73393d8d505775f74293", "committedDate": "2020-07-13T19:42:04Z", "message": "DHFPROD-5047: Endpoint for list of all steps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mjg3Mzkz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-448287393", "createdAt": "2020-07-14T16:50:26Z", "commit": {"oid": "b0543058e3309a3dcdfd73393d8d505775f74293"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDQ0ODMw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4194#pullrequestreview-448444830", "createdAt": "2020-07-14T20:34:25Z", "commit": {"oid": "b0543058e3309a3dcdfd73393d8d505775f74293"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2620, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}