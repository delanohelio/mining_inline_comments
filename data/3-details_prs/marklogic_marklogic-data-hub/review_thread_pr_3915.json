{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjg3MjMy", "number": 3915, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNTo0Nzo0M1rOD5dt3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNTo0Nzo0M1rOD5dt3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTgyMzAyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/VersionInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNTo0Nzo0M1rOGQvxvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMToyMjoxM1rOGRBK_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIxMzE4Mg==", "bodyText": "Can we add this file to the updateVersion task that's in root build.gradle?\nThe updateVersion task keeps track of all the hardcoded version locations.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3915#discussion_r420213182", "createdAt": "2020-05-05T15:47:43Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/VersionInfo.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.hub.HubClient;\n+import com.marklogic.hub.dataservices.SystemService;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Properties;\n+\n+/**\n+ * This is intended to replace some of the Versions class with a HubClient-friendly and non-Spring-dependent way of\n+ * accessing version data.\n+ */\n+public class VersionInfo {\n+\n+    private String hubVersion;\n+    private String markLogicVersion;\n+\n+    public static VersionInfo newVersionInfo(HubClient hubClient) {\n+        JsonNode json = SystemService.on(hubClient.getStagingClient()).getVersions();\n+        return new VersionInfo(\n+            json.get(\"hubVersion\").asText(),\n+            json.get(\"markLogicVersion\").asText()\n+        );\n+    }\n+\n+    private VersionInfo(String hubVersion, String markLogicVersion) {\n+        this.hubVersion = hubVersion;\n+        this.markLogicVersion = markLogicVersion;\n+    }\n+\n+    public String getHubVersion() {\n+        return hubVersion;\n+    }\n+\n+    public String getMarkLogicVersion() {\n+        return markLogicVersion;\n+    }\n+\n+    /**\n+     * @return the version of the build containing this class\n+     */\n+    public static String getBuildVersion() {\n+        Properties properties = new Properties();\n+        try (InputStream inputStream = VersionInfo.class.getClassLoader().getResourceAsStream(\"version.properties\")) {\n+            properties.load(inputStream);\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Unable to get library version from version.properties, cause: \" + e.getMessage(), e);\n+        }\n+\n+        String version = properties.getProperty(\"version\");\n+        return \"${project.version}\".equals(version) ? \"5.3-SNAPSHOT\" : version;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dc89019b4eae7facf4308b4c597b5b476f0a72"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5ODE3Mw==", "bodyText": "Good idea, done", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3915#discussion_r420498173", "createdAt": "2020-05-06T01:22:13Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/VersionInfo.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.hub.HubClient;\n+import com.marklogic.hub.dataservices.SystemService;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Properties;\n+\n+/**\n+ * This is intended to replace some of the Versions class with a HubClient-friendly and non-Spring-dependent way of\n+ * accessing version data.\n+ */\n+public class VersionInfo {\n+\n+    private String hubVersion;\n+    private String markLogicVersion;\n+\n+    public static VersionInfo newVersionInfo(HubClient hubClient) {\n+        JsonNode json = SystemService.on(hubClient.getStagingClient()).getVersions();\n+        return new VersionInfo(\n+            json.get(\"hubVersion\").asText(),\n+            json.get(\"markLogicVersion\").asText()\n+        );\n+    }\n+\n+    private VersionInfo(String hubVersion, String markLogicVersion) {\n+        this.hubVersion = hubVersion;\n+        this.markLogicVersion = markLogicVersion;\n+    }\n+\n+    public String getHubVersion() {\n+        return hubVersion;\n+    }\n+\n+    public String getMarkLogicVersion() {\n+        return markLogicVersion;\n+    }\n+\n+    /**\n+     * @return the version of the build containing this class\n+     */\n+    public static String getBuildVersion() {\n+        Properties properties = new Properties();\n+        try (InputStream inputStream = VersionInfo.class.getClassLoader().getResourceAsStream(\"version.properties\")) {\n+            properties.load(inputStream);\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"Unable to get library version from version.properties, cause: \" + e.getMessage(), e);\n+        }\n+\n+        String version = properties.getProperty(\"version\");\n+        return \"${project.version}\".equals(version) ? \"5.3-SNAPSHOT\" : version;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIxMzE4Mg=="}, "originalCommit": {"oid": "71dc89019b4eae7facf4308b4c597b5b476f0a72"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4101, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}