{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NDM1Mzk3", "number": 3651, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNjoxMFrODliVwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo1MTozMlrODlipcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjg2NTI4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODozNjoxMFrOFyfL1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo1MDoyM1rOFyfoVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NDA1Mw==", "bodyText": "I think that logging that a folder doesn't exist is sufficient.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388484053", "createdAt": "2020-03-05T18:36:10Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {\n+                    // should we add check if some missing files/folders are mandatory and give error info?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MDkzNg==", "bodyText": "@hao1st what if there are gradle-<evn>.properties?\n@bsrikan from the package list, we only need gradle.properties and ignore those \"gradle-*.properties\" though i do not sure the list is complete.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388490936", "createdAt": "2020-03-05T18:49:38Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {\n+                    // should we add check if some missing files/folders are mandatory and give error info?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NDA1Mw=="}, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MTM0OQ==", "bodyText": "The original requirement was to exclude gradle-*.properties, as there may be sensitive data in those that shouldn't be shared.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388491349", "createdAt": "2020-03-05T18:50:23Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {\n+                    // should we add check if some missing files/folders are mandatory and give error info?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ4NDA1Mw=="}, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjkxNTcxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODo1MTozMlrOFyfrQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo1ODoyMlrOFzAE2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MjA5OQ==", "bodyText": "@hao1st Since a bug is being fixed, there should be a test that reproduces the bug such that if I comment out this change, the test fails, and then the test succeeds with this change in place.\nThe only exception to this is if we have some sort of intermittent bug with no idea of how to reproduce it, which would be indicated by the JIRA ticket lacking reproducible steps.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388492099", "createdAt": "2020-03-05T18:51:32Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0MzIzMg==", "bodyText": "@rjrudin I think that the change is trying to make the code more robust so that we can make sure the exported zip includes all the folder/files from the project folder. If any of them is missing against necessary folder structure, we can identify it for sure.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388543232", "createdAt": "2020-03-05T20:23:35Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MjA5OQ=="}, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU2MTEzNQ==", "bodyText": "It looks like the change is trying to prevent the export from breaking when a directory doesn't exist. So an automated test would simulate that condition by e.g. deleting one of these directories or files before calling the export method.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388561135", "createdAt": "2020-03-05T20:56:52Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MjA5OQ=="}, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4OTEzNg==", "bodyText": "@rjrudin we already have a downloadProject test case, and it will throw excception and the case will fail if required package folder is missing without the change.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388589136", "createdAt": "2020-03-05T21:53:54Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MjA5OQ=="}, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYwNjIxMg==", "bodyText": "I think the upload project test was commented out. Can we uncomment it and see what we get. Earlier we were getting an error saying \"loadData: No such file or directory\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r388606212", "createdAt": "2020-03-05T22:33:45Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MjA5OQ=="}, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyMjkzNw==", "bodyText": "@bsrikan upload project test case was not commented out, but it was broken. The PR is the reason due to export failure.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3651#discussion_r389022937", "createdAt": "2020-03-06T16:58:22Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -647,6 +647,11 @@ private void writeToStream(OutputStream out) {\n             Stream.of(\"entities\", \"flows\", \"src\" + File.separator + \"main\", \"mappings\", \"step-definitions\", \"loadData\", \"gradle\",\n                 \"gradlew\", \"gradlew.bat\", \"build.gradle\", \"gradle.properties\").forEach(file ->{\n                 File fileToZip = getProjectDir().resolve(file).toFile();\n+                if (!fileToZip.exists()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ5MjA5OQ=="}, "originalCommit": {"oid": "1c94adba60f0105065b36db7b97e8e3611deef69"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3599, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}