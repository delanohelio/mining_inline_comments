{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MTc2Mjcy", "number": 4829, "title": "DHFPROD-5613: fixed save button consistency", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-11-05T16:14:13Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829", "merged": true, "mergeCommit": {"oid": "400d62c794a9a11fe8ac1deb8417737046c0c612"}, "closed": true, "closedAt": "2020-11-11T19:32:17Z", "author": {"login": "jyangML"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZlsuigBqjM5NjM1MzMzMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbiINoAFqTUyODQyNDExOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e340c3673cc55f74ab660a01e5d7e6b34f0bb63f", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e340c3673cc55f74ab660a01e5d7e6b34f0bb63f", "committedDate": "2020-11-05T14:20:58Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "100b1bf2df463269ca36a7758403196f9e4ba151", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/100b1bf2df463269ca36a7758403196f9e4ba151", "committedDate": "2020-11-05T17:20:32Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NjMzODk3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-524633897", "createdAt": "2020-11-05T20:18:08Z", "commit": {"oid": "100b1bf2df463269ca36a7758403196f9e4ba151"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoxODowOVrOHuU6hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoxODowOVrOHuU6hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzOTIwNQ==", "bodyText": "Looks like there is a cypress failure on this line. Please modify the code to be\nloadPage.saveButton().should('be.enabled');\nThat should fix it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r518339205", "createdAt": "2020-11-05T20:18:09Z", "author": {"login": "briantang"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/curation/curate/mapping.spec.tsx", "diffHunk": "@@ -41,6 +41,7 @@ describe('Mapping', () => {\n     toolbar.getLoadToolbarIcon().click();\n     cy.waitUntil(() => loadPage.stepName('ingestion-step').should('be.visible'));\n     loadPage.addNewButton('card').click();\n+    loadPage.saveButton.should('be.enabled');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100b1bf2df463269ca36a7758403196f9e4ba151"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "100b1bf2df463269ca36a7758403196f9e4ba151", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/100b1bf2df463269ca36a7758403196f9e4ba151", "committedDate": "2020-11-05T17:20:32Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "71bde1e05d0350d9077365f074a03b7e22fb5e98", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/71bde1e05d0350d9077365f074a03b7e22fb5e98", "committedDate": "2020-11-05T21:29:23Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzI2MDgx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-524726081", "createdAt": "2020-11-05T22:35:07Z", "commit": {"oid": "71bde1e05d0350d9077365f074a03b7e22fb5e98"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMjozNTowN1rOHuZVAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMjo0MTowNVrOHuZfGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxMTUyMA==", "bodyText": "Seems like we already have a boolean flag for mapName as \"isMapNameTouched\" which we can leverage to see of mapName has ever been modified or not. Same goes for other mandatory fields in the form.\nI would suggest to just utilize the required field values and the corresponding '...touched' fields to get the desired output instead of creating additional flags.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r518411520", "createdAt": "2020-11-05T22:35:07Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/create-edit-mapping-dialog/create-edit-mapping-dialog.tsx", "diffHunk": "@@ -17,11 +17,14 @@ const CreateEditMappingDialog = (props) => {\n   const [selectedSource, setSelectedSource] = useState(props.mapData && props.mapData != {} ? props.mapData.selectedSource : 'collection')\n   const [srcQuery, setSrcQuery] = useState(props.mapData && props.mapData != {} ? props.mapData.sourceQuery : '');\n   const [isQuerySelected, setIsQuerySelected] = useState(false);\n+\n   //To check submit validity\n   const [isMapNameTouched, setMapNameTouched] = useState(false);\n+  const [isNameMissingOnSave, setNameMissingOnSave] = useState(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71bde1e05d0350d9077365f074a03b7e22fb5e98"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxMTc5NA==", "bodyText": "Same suggestion as given for mapName earlier.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r518411794", "createdAt": "2020-11-05T22:35:42Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/create-edit-mapping-dialog/create-edit-mapping-dialog.tsx", "diffHunk": "@@ -17,11 +17,14 @@ const CreateEditMappingDialog = (props) => {\n   const [selectedSource, setSelectedSource] = useState(props.mapData && props.mapData != {} ? props.mapData.selectedSource : 'collection')\n   const [srcQuery, setSrcQuery] = useState(props.mapData && props.mapData != {} ? props.mapData.sourceQuery : '');\n   const [isQuerySelected, setIsQuerySelected] = useState(false);\n+\n   //To check submit validity\n   const [isMapNameTouched, setMapNameTouched] = useState(false);\n+  const [isNameMissingOnSave, setNameMissingOnSave] = useState(false);\n   const [isDescriptionTouched, setDescriptionTouched] = useState(false);\n   const [isCollectionsTouched, setCollectionsTouched] = useState(false);\n   const [isSrcQueryTouched, setSrcQueryTouched] = useState(false);\n+  const [isQueryMissingOnSave, setQueryMissingOnSave] = useState(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71bde1e05d0350d9077365f074a03b7e22fb5e98"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxNDEwNg==", "bodyText": "Looks like we can update the existing onSubmit function only with an if condition like given below and get rid of this onSave function.\nif(mapName && (collections || srcQuery)) {\n// Current logic within onSubmit\n} else {\n//Just set the corresponding '~touched' flags for the properties for example isMapNameTouched as true.\n}", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r518414106", "createdAt": "2020-11-05T22:41:05Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/create-edit-mapping-dialog/create-edit-mapping-dialog.tsx", "diffHunk": "@@ -136,6 +140,27 @@ const CreateEditMappingDialog = (props) => {\n     </div>\n   </Modal>;\n \n+  const onSave = async (event) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71bde1e05d0350d9077365f074a03b7e22fb5e98"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71bde1e05d0350d9077365f074a03b7e22fb5e98", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/71bde1e05d0350d9077365f074a03b7e22fb5e98", "committedDate": "2020-11-05T21:29:23Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6c35556ea395959402288cf83b5855c180f3ec03", "committedDate": "2020-11-06T16:46:59Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTI5NDc0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-525529474", "createdAt": "2020-11-06T22:17:54Z", "commit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMjoxNzo1NVrOHu_Q7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMjo0NDoyMlrOHu_zeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAzMzA2OQ==", "bodyText": "It seems we want to check here if srcQuery has a value or not but used 'collections' again in the 'if' condition.\nThe conditions in line 161 and 165 looks the same and redundant.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r519033069", "createdAt": "2020-11-06T22:17:55Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/entities/create-edit-step-dialog/create-edit-step-dialog.tsx", "diffHunk": "@@ -149,9 +149,30 @@ const CreateEditStepDialog: React.FC<Props>  = (props) => {\n   const confirmAction = () => {\n     toggleConfirmModal(false);\n     props.toggleModal(false);\n+\n+    resetTouchedValues()\n   };\n \n   const handleSubmit = async (event: { preventDefault: () => void; }) => {\n+    if (!stepName) {\n+      // missing name\n+      setStepNameTouched(true);\n+    }\n+    if ((!collections && selectedSource === 'collection') || (!srcQuery && selectedSource !== 'collection')) {\n+      // missing collection (if collection is selected)\n+      setCollectionsTouched(true);\n+    }\n+    if ((!collections && selectedSource === 'collection') || (!srcQuery && selectedSource !== 'collection')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA0MDM2Mw==", "bodyText": "Let's verify all the mandatory fields in one test only to avoid unnecessary re-renders of CreateEditStepDialog component in a separate test, wherever possible. We can describe the test heading may be like \"Verify clicking 'Save' with no value for mandatory fields show error\" and then just do your assertions like below:-\nSet a non-null value for name.\nverify if error for collection field appears on clicking \"save\".\nReset name value to empty('') and set valid collection value.\nClick on save button and verify if error for name field is available in the document or not.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r519040363", "createdAt": "2020-11-06T22:39:49Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/entities/create-edit-step-dialog/create-edit-step-dialog.test.tsx", "diffHunk": "@@ -63,9 +64,39 @@ describe('Create Edit Step Dialog component', () => {\n \n         fireEvent.change(nameInput, { target: {value: ''}});\n         expect(getByText('Name is required')).toBeInTheDocument();\n-        expect(saveButton).toBeDisabled();\n+        expect(saveButton).toBeEnabled();\n+    });\n+\n+    test('Verify clicking \"Save\" with no collection shows error', async () => {\n+      const { getByText, getByLabelText, getByPlaceholderText } = render(<CreateEditStepDialog {...data.newMerging} />);\n+\n+      fireEvent.change(getByPlaceholderText('Enter name'), { target: {value: ''}});\n+  \n+      fireEvent.click(getByText('Save'));\n+  \n+      // both messages should show when both boxes are empty\n+      expect(getByText('Name is required')).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA0MTEyOA==", "bodyText": "This test can be clubbed together with the previous one for collection as the expect statements are more or less the same and would avoid a re-render of the component to improve test performance.\nCheck my previous comment.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r519041128", "createdAt": "2020-11-06T22:41:57Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/entities/create-edit-step-dialog/create-edit-step-dialog.test.tsx", "diffHunk": "@@ -63,9 +64,39 @@ describe('Create Edit Step Dialog component', () => {\n \n         fireEvent.change(nameInput, { target: {value: ''}});\n         expect(getByText('Name is required')).toBeInTheDocument();\n-        expect(saveButton).toBeDisabled();\n+        expect(saveButton).toBeEnabled();\n+    });\n+\n+    test('Verify clicking \"Save\" with no collection shows error', async () => {\n+      const { getByText, getByLabelText, getByPlaceholderText } = render(<CreateEditStepDialog {...data.newMerging} />);\n+\n+      fireEvent.change(getByPlaceholderText('Enter name'), { target: {value: ''}});\n+  \n+      fireEvent.click(getByText('Save'));\n+  \n+      // both messages should show when both boxes are empty\n+      expect(getByText('Name is required')).toBeInTheDocument();\n+      expect(getByText('Collection or Query is required')).toBeInTheDocument();\n     });\n \n+    test('Verify clicking \"Save\" with no name shows error', async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA0MTkxNA==", "bodyText": "Same as my earlier comment. We can club these tests for errors in name and collection field together here as well, to avoid re-renders.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r519041914", "createdAt": "2020-11-06T22:44:22Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/create-edit-mapping-dialog/create-edit-mapping-dialog.test.tsx", "diffHunk": "@@ -151,6 +151,46 @@ describe('Create/Edit Mapping Step artifact component', () => {\n \n   });\n \n+  test('Verify clicking \"Save\" with neither name nor collection shows error', () => {\n+    const { getByText, getByLabelText, getByPlaceholderText } = render(<CreateEditMappingDialog {...data.newMap} />);\n+\n+    fireEvent.click(getByText('Save'));\n+\n+    // both messages should show when both boxes are empty\n+    expect(getByText('Name is required')).toBeInTheDocument(); \n+    expect(getByText('Collection or Query is required')).toBeInTheDocument();\n+  });\n+\n+  test('Verify clicking \"Save\" with name but no collection shows error', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03"}, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6c35556ea395959402288cf83b5855c180f3ec03", "committedDate": "2020-11-06T16:46:59Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "5e85112becfdf97b1490c71d329db4545443b2ad", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5e85112becfdf97b1490c71d329db4545443b2ad", "committedDate": "2020-11-09T15:03:46Z", "message": "added fix for comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e85112becfdf97b1490c71d329db4545443b2ad", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5e85112becfdf97b1490c71d329db4545443b2ad", "committedDate": "2020-11-09T15:03:46Z", "message": "added fix for comments"}, "afterCommit": {"oid": "4ea6789f93a345532bb8d4aa85d11b648ec27ab4", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4ea6789f93a345532bb8d4aa85d11b648ec27ab4", "committedDate": "2020-11-09T15:02:37Z", "message": "fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ea6789f93a345532bb8d4aa85d11b648ec27ab4", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4ea6789f93a345532bb8d4aa85d11b648ec27ab4", "committedDate": "2020-11-09T15:02:37Z", "message": "fix"}, "afterCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6c35556ea395959402288cf83b5855c180f3ec03", "committedDate": "2020-11-06T16:46:59Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "459193f0e444255ea9174171f4907a39fc8b24b9", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/459193f0e444255ea9174171f4907a39fc8b24b9", "committedDate": "2020-11-09T15:11:04Z", "message": "removed extra test"}, "afterCommit": {"oid": "6c35556ea395959402288cf83b5855c180f3ec03", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6c35556ea395959402288cf83b5855c180f3ec03", "committedDate": "2020-11-06T16:46:59Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3ca1e2197423b595b347b5ee8c8b9cb9334f18e", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c3ca1e2197423b595b347b5ee8c8b9cb9334f18e", "committedDate": "2020-11-09T15:17:52Z", "message": "added fix for comments"}, "afterCommit": {"oid": "c5f11860e084c70ebcccb257408a587efe16bf5a", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c5f11860e084c70ebcccb257408a587efe16bf5a", "committedDate": "2020-11-09T15:18:19Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5f11860e084c70ebcccb257408a587efe16bf5a", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c5f11860e084c70ebcccb257408a587efe16bf5a", "committedDate": "2020-11-09T15:18:19Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "8753f3808eed8efb97264c1f8906c5855e8de979", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/8753f3808eed8efb97264c1f8906c5855e8de979", "committedDate": "2020-11-09T16:58:13Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2Njg4MjQ2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-526688246", "createdAt": "2020-11-09T21:58:38Z", "commit": {"oid": "8753f3808eed8efb97264c1f8906c5855e8de979"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8753f3808eed8efb97264c1f8906c5855e8de979", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/8753f3808eed8efb97264c1f8906c5855e8de979", "committedDate": "2020-11-09T16:58:13Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "db126b5047a35268fc6f88549e569cd87b524eda", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/db126b5047a35268fc6f88549e569cd87b524eda", "committedDate": "2020-11-09T22:02:52Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzU0MDM0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-526754034", "createdAt": "2020-11-10T00:09:54Z", "commit": {"oid": "db126b5047a35268fc6f88549e569cd87b524eda"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDowOTo1NFrOHwGlKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDoxNToxOVrOHwGsQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwMTUxNA==", "bodyText": "Remove this comment since the Save button now is always enabled. Similarly, remove comments on lines: 49, 70, 85, 89", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r520201514", "createdAt": "2020-11-10T00:09:54Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/create-edit-mapping-dialog/create-edit-mapping-dialog.test.tsx", "diffHunk": "@@ -22,21 +22,21 @@ describe('Create/Edit Mapping Step artifact component', () => {\n     expect(getByLabelText('Collection')).toBeInTheDocument();\n     expect(getByLabelText('Query')).toBeInTheDocument();\n     expect(getByLabelText('collection-input')).toBeInTheDocument();\n-    expect(getByText('Save')).toBeDisabled();\n+    expect(getByText('Save')).toBeEnabled();\n     expect(getByText('Cancel')).toBeEnabled();\n     //Collection radio button should be selected by default\n     expect(getByLabelText('Collection')).toBeChecked();\n   });\n \n-  test('Verify mapping name, source query is mandatory and Save button is disabled', async () => {\n+  test('Verify mapping name, source query is mandatory and Save button is always enabled', async () => {\n     const { getByText, getByPlaceholderText, getByLabelText } = render(<CreateEditMappingDialog {...data.newMap} />);\n     const nameInput = getByPlaceholderText('Enter name');\n     const saveButton = getByText('Save');\n \n     // Enter the value for name input.\n     fireEvent.change(nameInput, { target: {value: 'testCreateMap'}});\n     expect(nameInput).toHaveValue('testCreateMap');\n-    expect(saveButton).toBeDisabled(); // It should be disabled since no value is provided yet for Collection or Query.\n+    expect(saveButton).toBeEnabled(); // Consistency change: button is now always enabled; will produce warning instead\n \n     //Providing the value for Collection field now so that Save button can be enabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db126b5047a35268fc6f88549e569cd87b524eda"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwMjcwNA==", "bodyText": "Can we add an enabled check on the Save button upon load of the form (line 60)? It's slightly different from the last case in the test in that the the required field (name) has never been touched: expect(saveButton).toBeEnabled();", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r520202704", "createdAt": "2020-11-10T00:13:31Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/entities/create-edit-step-dialog/create-edit-step-dialog.test.tsx", "diffHunk": "@@ -46,13 +47,13 @@ describe('Create Edit Step Dialog component', () => {\n     expect(getByLabelText('Collection')).toBeInTheDocument();\n     expect(getByLabelText('Query')).toBeInTheDocument();\n     expect(getByLabelText('collection-input')).toBeInTheDocument();\n-    expect(getByText('Save')).toBeDisabled();\n+    expect(getByText('Save')).toBeEnabled();\n     expect(getByText('Cancel')).toBeEnabled();\n     //Collection radio button should be selected by default\n     expect(getByLabelText('Collection')).toBeChecked();\n   });\n \n-    test('Verify merging name is mandatory and Save button is disabled', () => {\n+    test('Verify save button is always enabled', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db126b5047a35268fc6f88549e569cd87b524eda"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwMzMzMA==", "bodyText": "Can we also check that when content is entered in the name field, the error messaging goes away? You could update the test description to something like: \"Verify name is required for form submission and error messaging appears\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r520203330", "createdAt": "2020-11-10T00:15:19Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/load/new-load-dialog/new-load-dialog.test.tsx", "diffHunk": "@@ -102,4 +102,29 @@ describe('New/edit load data configuration', () => {\n     expect(queryByText('Source Type')).not.toBeInTheDocument();\n   });\n \n+  test('Verify clicking \"Save\" with no name shows error', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db126b5047a35268fc6f88549e569cd87b524eda"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db126b5047a35268fc6f88549e569cd87b524eda", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/db126b5047a35268fc6f88549e569cd87b524eda", "committedDate": "2020-11-09T22:02:52Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "2832f89d4796b0f70cb142bd7945ad6bf064e862", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/2832f89d4796b0f70cb142bd7945ad6bf064e862", "committedDate": "2020-11-10T22:31:17Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2832f89d4796b0f70cb142bd7945ad6bf064e862", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/2832f89d4796b0f70cb142bd7945ad6bf064e862", "committedDate": "2020-11-10T22:31:17Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "bbf2e6e591c38b4599eb5211bb66d3733a2c727b", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/bbf2e6e591c38b4599eb5211bb66d3733a2c727b", "committedDate": "2020-11-10T22:32:15Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NzUxNzAx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-527751701", "createdAt": "2020-11-11T00:44:31Z", "commit": {"oid": "bbf2e6e591c38b4599eb5211bb66d3733a2c727b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMDo0NDozMlrOHw1OGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMDo0NDozMlrOHw1OGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2NTY1Nw==", "bodyText": "This check was failing for me locally, I was able to get it to work by updating it to the following:\n    fireEvent.change(nameInput, { target: {value: 'testLoadStep'} });\n    await wait(() => {\n      expect(nameInput).toHaveValue('testLoadStep');\n    }); \n    expect(queryByText('Name is required')).toBeNull();", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#discussion_r520965657", "createdAt": "2020-11-11T00:44:32Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/load/new-load-dialog/new-load-dialog.test.tsx", "diffHunk": "@@ -102,4 +102,36 @@ describe('New/edit load data configuration', () => {\n     expect(queryByText('Source Type')).not.toBeInTheDocument();\n   });\n \n+  test('Verify name is required for form submission and error messaging appears', async () => {\n+    const { debug, baseElement, queryByText, getByText} = \n+    render(\n+      <BrowserRouter><NewLoadDialog newLoad={true}\n+      title={'New Loading Step'}\n+      setNewLoad={() => {}}\n+      createLoadArtifact={() => {}}\n+      stepData={{}}\n+      canReadWrite={true}\n+      canReadOnly={false}/></BrowserRouter>\n+    );\n+    const nameInput = baseElement.querySelector('#name');\n+\n+    // error should not appear before anything is touched\n+    expect(queryByText('Name is required')).toBeNull();\n+\n+    fireEvent.click(getByText('Save'));\n+\n+    // message should appear when save button is clicked\n+    expect(queryByText('Name is required')).toBeInTheDocument();\n+\n+    // enter in a name and verify message disappears\n+    await wait(() => {\n+      if(nameInput){\n+        fireEvent.change(nameInput, { target: {value: 'testLoadStep'} });\n+      }\n+    }); \n+    expect(nameInput).toHaveValue('testLoadStep');\n+    \n+    expect(queryByText('Name is required')).toBeNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbf2e6e591c38b4599eb5211bb66d3733a2c727b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e789b4e3b0328943f79d8f7d2f36807b7c7ca762", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e789b4e3b0328943f79d8f7d2f36807b7c7ca762", "committedDate": "2020-11-11T14:42:13Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbf2e6e591c38b4599eb5211bb66d3733a2c727b", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/bbf2e6e591c38b4599eb5211bb66d3733a2c727b", "committedDate": "2020-11-10T22:32:15Z", "message": "DHFPROD-5613: fixed save button consistency"}, "afterCommit": {"oid": "e789b4e3b0328943f79d8f7d2f36807b7c7ca762", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e789b4e3b0328943f79d8f7d2f36807b7c7ca762", "committedDate": "2020-11-11T14:42:13Z", "message": "DHFPROD-5613: fixed save button consistency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Mzk0NDUx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-528394451", "createdAt": "2020-11-11T17:39:47Z", "commit": {"oid": "e789b4e3b0328943f79d8f7d2f36807b7c7ca762"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDE2MDU5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-528416059", "createdAt": "2020-11-11T18:07:27Z", "commit": {"oid": "e789b4e3b0328943f79d8f7d2f36807b7c7ca762"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDI0MTE5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4829#pullrequestreview-528424119", "createdAt": "2020-11-11T18:18:56Z", "commit": {"oid": "e789b4e3b0328943f79d8f7d2f36807b7c7ca762"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1619, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}