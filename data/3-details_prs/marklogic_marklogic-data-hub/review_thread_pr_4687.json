{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Njc2NzEw", "number": 4687, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0Nzo0OVrOErn2-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjo0MTo0NlrOEsH6nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTc3MjcyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0Nzo0OVrOHefdRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNzo0MDoxM1rOHepaCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczNDcyNA==", "bodyText": "We want as much logic in ML as possible via data services, so I think an ArtifactService.clearUserArtifacts method is the right approach here.\nPinging @fsnow and @ryanjdew  for thoughts - I was thinking perhaps we should start a \"datahub\" service directory, where we have \"global\" methods like this. We also have a \"system\" service which just has getVersion in it. That arguably should be part of a datahub service.\nBut we can punt on reorganizing things right now, as I think ArtifactService.clearUserArtifacts is reasonable.\nI think the DS endpoint should only clear that database that it's associated with - thus, this method should still exist, and it'll call clearUserArtifacts using both a staging client and a final client.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r501734724", "createdAt": "2020-10-08T13:47:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -405,6 +405,24 @@ public void clearUserModules(List<String> resourceNamesToNotDelete) {\n         logger.info(\"Finished clearing user modules\");\n     }\n \n+    public void clearUserArtifacts(){\n+        final HubClient hubClientToUse = hubClient != null ? hubClient : hubConfig.newHubClient();\n+\n+        long start = System.currentTimeMillis();\n+        logger.info(\"Clearing user artifacts as user: \" + hubClientToUse.getUsername());\n+\n+        String query = \"declareUpdate();\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344740be53779bf712d02bf1ff2053ef4c97d7eb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg5NzczNg==", "bodyText": "I agree that is would be nice to compile a list needs like this from the Java middle-tier and move as much of it as possible to be server-side.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r501897736", "createdAt": "2020-10-08T17:40:13Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -405,6 +405,24 @@ public void clearUserModules(List<String> resourceNamesToNotDelete) {\n         logger.info(\"Finished clearing user modules\");\n     }\n \n+    public void clearUserArtifacts(){\n+        final HubClient hubClientToUse = hubClient != null ? hubClient : hubConfig.newHubClient();\n+\n+        long start = System.currentTimeMillis();\n+        logger.info(\"Clearing user artifacts as user: \" + hubClientToUse.getUsername());\n+\n+        String query = \"declareUpdate();\\n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczNDcyNA=="}, "originalCommit": {"oid": "344740be53779bf712d02bf1ff2053ef4c97d7eb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTc4MTU3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserArtifactsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0OTo0MlrOHefi5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo0OTo0MlrOHefi5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczNjE2NA==", "bodyText": "A good practice here is to make an assertion on what the exception message contains - that way, we know we're catching the expected exception. Can also catch a more precise exception here - I assume that ML is throwing a FailedRequestException.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r501736164", "createdAt": "2020-10-08T13:49:42Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserArtifactsTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.test.ReferenceModelProject;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class ClearUserArtifactsTest extends AbstractHubCoreTest {\n+    int initialDbCount;\n+    @BeforeEach\n+    void setUp() {\n+        Assumptions.assumeTrue(isVersionCompatibleWith520Roles());\n+        initialDbCount = Integer.parseInt(getHubClient().getStagingClient().newServerEval().javascript(\"cts.estimate(cts.trueQuery())\").evalAs(String.class));\n+        // These 2 projects contain all kinds of user artifacts\n+        installProjectInFolder(\"test-projects/download-artifacts\");\n+        ReferenceModelProject project = installReferenceModelProject();\n+        project.createRawCustomer(1, \"Jane\");\n+    }\n+\n+    @Test\n+    void clearUserArtifacts() {\n+        try{\n+            new DataHubImpl(runAsDataHubOperator()).clearUserArtifacts();\n+            fail(\"'data-hub-operator' should not be able delete user artifacts\");\n+        }\n+        catch (Exception e){\n+            logger.info(\"'data-hub-operator' cannot delete user artifacts\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344740be53779bf712d02bf1ff2053ef4c97d7eb"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTc4ODc1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserArtifactsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo1MToxMVrOHefnYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo1MToxMVrOHefnYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczNzMxMg==", "bodyText": "This code is in 3 places here, and @rahulvudutala needed it in a PR, so let's add it to AbstractHubTest - e.g. \"getDocumentCount(DatabaseClient client)\". Try to work this into @rahulvudutala 's PR too.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r501737312", "createdAt": "2020-10-08T13:51:11Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/impl/ClearUserArtifactsTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.marklogic.hub.impl;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.test.ReferenceModelProject;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class ClearUserArtifactsTest extends AbstractHubCoreTest {\n+    int initialDbCount;\n+    @BeforeEach\n+    void setUp() {\n+        Assumptions.assumeTrue(isVersionCompatibleWith520Roles());\n+        initialDbCount = Integer.parseInt(getHubClient().getStagingClient().newServerEval().javascript(\"cts.estimate(cts.trueQuery())\").evalAs(String.class));\n+        // These 2 projects contain all kinds of user artifacts\n+        installProjectInFolder(\"test-projects/download-artifacts\");\n+        ReferenceModelProject project = installReferenceModelProject();\n+        project.createRawCustomer(1, \"Jane\");\n+    }\n+\n+    @Test\n+    void clearUserArtifacts() {\n+        try{\n+            new DataHubImpl(runAsDataHubOperator()).clearUserArtifacts();\n+            fail(\"'data-hub-operator' should not be able delete user artifacts\");\n+        }\n+        catch (Exception e){\n+            logger.info(\"'data-hub-operator' cannot delete user artifacts\");\n+        }\n+        new DataHubImpl(runAsDataHubDeveloper()).clearUserArtifacts();\n+\n+        assertNotNull(getHubClient().getStagingClient().newServerEval().javascript(\"cts.doc('/customer1.json')\").evalAs(JsonNode.class));\n+        //The staging db will have one additional document  '/customer/1.json'\n+        assertEquals(initialDbCount , Integer.parseInt(getHubClient().getStagingClient().newServerEval().javascript(\"cts.estimate(cts.trueQuery())\").evalAs(String.class))-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344740be53779bf712d02bf1ff2053ef4c97d7eb"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTc5NDE1OnYy", "diffSide": "RIGHT", "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/task/ClearUserArtifactsTask.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo1MjoxMVrOHefqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzo1MjoxMVrOHefqeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTczODEwNQ==", "bodyText": "I don't think this is technically true - a user just needs update access to each artifact type. I think that's the better message to give - \"Clearing user artifacts. This requires a user that has update permission on each artifact type.\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r501738105", "createdAt": "2020-10-08T13:52:11Z", "author": {"login": "rjrudin"}, "path": "ml-data-hub-plugin/src/main/groovy/com/marklogic/gradle/task/ClearUserArtifactsTask.groovy", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.marklogic.gradle.task\n+\n+import com.marklogic.hub.impl.DataHubImpl\n+\n+class ClearUserArtifactsTask extends AbstractConfirmableHubTask {\n+\n+    @Override\n+    void executeIfConfirmed() {\n+        println \"Clearing user artifacts. This requires a user with at least 'data-hub-developer' role.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "344740be53779bf712d02bf1ff2053ef4c97d7eb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzAyMDM2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/artifacts/clearUserArtifacts.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjo0MDoyM1rOHfROyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjo0MDoyM1rOHfROyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU1MDIxNg==", "bodyText": "I actually don't think we need any privilege checks here. The delete calls will blow up if the user doesn't have update permission on any user artifacts.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r502550216", "createdAt": "2020-10-09T16:40:23Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/artifacts/clearUserArtifacts.sjs", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+//No specific privilege available for writing step definition or legacy mappings\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/write-ingestion\", \"execute\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0858c6a8e0fba0cc559f9ecf6bf7c91908a9dbe1"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzAyMDQ3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/artifacts/clearUserArtifacts.sjs", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjo0MDoyNlrOHfRO3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjo0MDoyNlrOHfRO3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU1MDIzOQ==", "bodyText": "No need to do an xdmp.invoke here - just do xdmp.documentDelete. We know we're not trying to do this in some other database.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r502550239", "createdAt": "2020-10-09T16:40:26Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/artifacts/clearUserArtifacts.sjs", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ Copyright (c) 2020 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+'use strict';\n+//No specific privilege available for writing step definition or legacy mappings\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/write-ingestion\", \"execute\");\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/write-mapping\", \"execute\");\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/write-match-merge\", \"execute\");\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/write-custom\", \"execute\");\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/write-flow\", \"execute\");\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/privileges/write-entity-model\", \"execute\");\n+\n+const consts = require('/data-hub/5/impl/consts.sjs');\n+const DataHubSingleton = require('/data-hub/5/datahub-singleton.sjs');\n+const dataHub = DataHubSingleton.instance();\n+\n+let urisToDelete = cts.uris(null, null, cts.andQuery([cts.collectionQuery(consts.USER_ARTIFACT_COLLECTIONS.concat('http://marklogic.com/data-hub/mappings'))\n+  ,cts.notQuery(cts.collectionQuery(consts.HUB_ARTIFACT_COLLECTION))])).toArray();\n+let database = xdmp.databaseName(xdmp.database());\n+urisToDelete.forEach(uri => dataHub.hubUtils.deleteDocument(uri, database));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0858c6a8e0fba0cc559f9ecf6bf7c91908a9dbe1"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzAyNDkzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjo0MTo0NlrOHfRRkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNjo0MTo0NlrOHfRRkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU1MDkyOA==", "bodyText": "Can you put this at the bottom of the file? Will help avoid merge conflicts (I'm making changes to this file too)", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4687#discussion_r502550928", "createdAt": "2020-10-09T16:41:46Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "diffHunk": "@@ -207,6 +207,11 @@ protected void setTestUserRoles(String... roles) {\n         user.save();\n     }\n \n+    protected int getDocumentCount(DatabaseClient client) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0858c6a8e0fba0cc559f9ecf6bf7c91908a9dbe1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3280, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}