{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NTk0Mzcz", "number": 3964, "title": "DHFPROD-4916: Making saved query name to be unique", "bodyText": "Description\n\nMaking saved query name to be unique backend changes\nMaking saved query name to be unique front end changes\nUnit and integration tests for FE\nNew mlUnittest and moved existing EntitySearchServiceTest JUnit to mlUnittest.\nTemporary changes to integration tests\n\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-05-18T15:57:59Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964", "merged": true, "mergeCommit": {"oid": "16452d58f563c4a5055ef8d2c84a1c56f631b6d6"}, "closed": true, "closedAt": "2020-05-18T23:09:40Z", "author": {"login": "rahulvudutala"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcii2wIgFqTQxMzc2NTYxNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcioAuTAFqTQxMzk5MTM4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzY1NjE0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#pullrequestreview-413765614", "createdAt": "2020-05-18T16:42:29Z", "commit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MjoyOVrOGW_U9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo1MjoxM1rOGW_rRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1OTQxMg==", "bodyText": "Is there any benefit in keeping the commented-out code? I think it's almost always best to delete commented-out code - in the rare case something might be needed later, it can always be retrieved from version control.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426759412", "createdAt": "2020-05-18T16:42:29Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/authorization.spec.tsx", "diffHunk": "@@ -42,7 +42,8 @@ describe('login', () => {\n     cy.loginAsDeveloper()\n     .wait(500)\n     .url()\n-    .should('include', '/home');\n+     .should('include', '/tile')\n+    // .should('include', '/home');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MDg0Mw==", "bodyText": "Same thing here - why not just delete this code? What's the benefit of keeping it around? It's in version history if it's ever needed again.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426760843", "createdAt": "2020-05-18T16:44:55Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "diffHunk": "@@ -59,17 +59,21 @@ const Query = (props) => {\n                 propertiesToDisplay: props.columns,\n             }\n         }\n-        try {\n-            props.setIsLoading(true);\n-            await creatNewQuery(query);\n-            setOpenSaveModal(false);\n-            getSaveQueries();\n-        } catch (error) {\n-            handleError(error);\n-        } finally {\n-            props.setIsLoading(false);\n-            resetSessionTime();\n-        }\n+        props.setIsLoading(true);\n+        await creatNewQuery(query);\n+        setOpenSaveModal(false);\n+        getSaveQueries();\n+        // try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MTgyMg==", "bodyText": "This seems to be repeated - it's in 3 different places.\n@wooldridge @xnikhil08  It seems there should be a way to reduce this duplication so that each \"catch\" block doesn't have to do so much work? The problem with repeating this work in multiple places is that if we ever want to change how we handle e.g. 400 errors, we have N places to modify as opposed to just one.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426761822", "createdAt": "2020-05-18T16:46:31Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/queries/saving/edit-save-query/save-changes-modal.tsx", "diffHunk": "@@ -88,18 +94,28 @@ const SaveChangesModal: React.FC<Props> = (props) => {\n                 //const response = await updateQuery(currentQuery);\n                 const response = await axios.put(`/api/entitySearch/savedQueries`, currentQuery);\n                 if (response.data) {\n-                    props.setSaveChangesModalVisibility()\n+                    setAllSearchFacets(facets);\n+                    props.setSaveChangesModalVisibility();\n+                    applySaveQuery(searchOptions.query, searchOptions.entityTypeIds, facets, queryName);\n+                    props.setCurrentQueryDescription(queryDescription);\n                 }\n             } catch (error) {\n-                handleError(error);\n+                if (error.response.status === 400) {\n+                    if (error.response.data.hasOwnProperty('message')) {\n+                        setErrorMessage(error['response']['data']['message']);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MjI2OA==", "bodyText": "This is the 4th occurrence of very similar logic for handling a 400 - hopefully there's a way to reduce this duplication??", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426762268", "createdAt": "2020-05-18T16:47:21Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/queries/saving/save-query-modal/save-query-modal.tsx", "diffHunk": "@@ -57,16 +67,31 @@ const SaveQueryModal: React.FC<Props> = (props) => {\n                 props.toggleApply(false);\n         }\n         if(queryName.length > 0 && queryName.trim().length !== 0){\n-            props.saveNewQuery(queryName, queryDescription, facets);\n-            props.setSaveNewIconVisibility(false);\n-            props.setSaveModalVisibility();\n-\n+            try {\n+                await props.saveNewQuery(queryName, queryDescription, facets);\n+                props.setSaveNewIconVisibility(false);\n+                props.setSaveModalVisibility();\n+                applySaveQuery(searchOptions.query, searchOptions.entityTypeIds, facets, queryName);\n+                props.setCurrentQueryName(queryName);\n+                props.setCurrentQueryDescription(queryDescription);\n+            } catch (error) {\n+                if (error.response.status === 400) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MzI5Ng==", "bodyText": "A general technique for making queries easier to read is to put each query on a separate line - e.g.\ncts.andQuery([\n  cts.collectionQuery(\"..\"),\n  cts.jsonPropertyValueQuery(...),\n  cts.jsonPropertyValueQuery(...)\n])", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426763296", "createdAt": "2020-05-18T16:49:12Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs", "diffHunk": "@@ -43,7 +43,15 @@ if (queryDocument.savedQuery.propertiesToDisplay == null || queryDocument.savedQ\n     ds.throwBadRequest(\"Entity type properties to be displayed cannot be empty\");\n }\n \n-let id = queryDocument.savedQuery.id;\n+const id = queryDocument.savedQuery.id;\n+const positiveQuery = cts.andQuery([cts.collectionQuery(\"http://marklogic.com/data-hub/saved-query\"), cts.jsonPropertyValueQuery(\"name\", queryDocument.savedQuery.name),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2MzkwNw==", "bodyText": "I think this message needs to capture the fact that the current user already has the query; otherwise, the user could interpret this message as implying that no two users can use the same named queries.\nI recommend: \"You already have a saved query with a name of ${the name}\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426763907", "createdAt": "2020-05-18T16:50:18Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs", "diffHunk": "@@ -43,7 +43,15 @@ if (queryDocument.savedQuery.propertiesToDisplay == null || queryDocument.savedQ\n     ds.throwBadRequest(\"Entity type properties to be displayed cannot be empty\");\n }\n \n-let id = queryDocument.savedQuery.id;\n+const id = queryDocument.savedQuery.id;\n+const positiveQuery = cts.andQuery([cts.collectionQuery(\"http://marklogic.com/data-hub/saved-query\"), cts.jsonPropertyValueQuery(\"name\", queryDocument.savedQuery.name),\n+    cts.jsonPropertyValueQuery(\"owner\", xdmp.getCurrentUser())]);\n+const negativeQuery = cts.documentQuery(\"/saved-queries/\" + id + \".json\");\n+const queryNameExists = cts.exists(cts.andNotQuery(positiveQuery, negativeQuery));\n+if(queryNameExists) {\n+    ds.throwBadRequest(`A query already exists with a name of ${queryDocument.savedQuery.name}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2NDYxMw==", "bodyText": "I think this is an indicator that multiple test modules should be created. That's because marklogic-unit-test has built-in support for \"do something before every test\" - just make a setup.xqy module.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426764613", "createdAt": "2020-05-18T16:51:23Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/saveSavedQueryTest.sjs", "diffHunk": "@@ -38,45 +40,150 @@ var saveQuery = JSON.stringify({\n   }\n });\n \n-function invokeService(saveQuery) {\n-  return fn.head(xdmp.invoke(\n-      \"/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs\",\n-      {\n-        \"saveQuery\": saveQuery\n-      }\n-  ));\n+function beforeEach() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2NTEyNw==", "bodyText": "Just call \"reset-hub()\" in data-hub-test-helper.xqy instead. That ensures that everything but the \"hub-core-artifact\" documents are retained.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#discussion_r426765127", "createdAt": "2020-05-18T16:52:13Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/entitySearch/saveSavedQueryTest.sjs", "diffHunk": "@@ -38,45 +40,150 @@ var saveQuery = JSON.stringify({\n   }\n });\n \n-function invokeService(saveQuery) {\n-  return fn.head(xdmp.invoke(\n-      \"/data-hub/5/data-services/entitySearch/saveSavedQuery.sjs\",\n-      {\n-        \"saveQuery\": saveQuery\n-      }\n-  ));\n+function beforeEach() {\n+  declareUpdate();\n+  xdmp.collectionDelete(\"http://marklogic.com/data-hub/saved-query\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6025679f1f0340a58ea3b2dd32724bd7c4723a0b", "author": {"user": {"login": "rahulvudutala", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6025679f1f0340a58ea3b2dd32724bd7c4723a0b", "committedDate": "2020-05-18T21:41:34Z", "message": "DHFPROD-4916: Making saved query name to be unique\n\nDHFPROD-4916: Making saved query name to be unique frontend changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e729ea7bbdc6be7585efae1d5d96047be12a2eb9", "author": {"user": {"login": "rahulvudutala", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e729ea7bbdc6be7585efae1d5d96047be12a2eb9", "committedDate": "2020-05-18T21:43:50Z", "message": "DHFPROD-4916: Temporary changes to integration tests as tile is not working"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0bfe711ef2c906c87d90d039bc7af23bc9c7a5da", "author": {"user": {"login": "rahulvudutala", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/0bfe711ef2c906c87d90d039bc7af23bc9c7a5da", "committedDate": "2020-05-18T15:10:17Z", "message": "DHFPROD-4916: Temporary changes to integration tests as tile is not working"}, "afterCommit": {"oid": "e729ea7bbdc6be7585efae1d5d96047be12a2eb9", "author": {"user": {"login": "rahulvudutala", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e729ea7bbdc6be7585efae1d5d96047be12a2eb9", "committedDate": "2020-05-18T21:43:50Z", "message": "DHFPROD-4916: Temporary changes to integration tests as tile is not working"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTgwMzEx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#pullrequestreview-413980311", "createdAt": "2020-05-18T22:28:34Z", "commit": {"oid": "e729ea7bbdc6be7585efae1d5d96047be12a2eb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTg5ODc4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#pullrequestreview-413989878", "createdAt": "2020-05-18T22:52:41Z", "commit": {"oid": "e729ea7bbdc6be7585efae1d5d96047be12a2eb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTkwMTM3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#pullrequestreview-413990137", "createdAt": "2020-05-18T22:53:22Z", "commit": {"oid": "e729ea7bbdc6be7585efae1d5d96047be12a2eb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTkxMzg2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3964#pullrequestreview-413991386", "createdAt": "2020-05-18T22:56:30Z", "commit": {"oid": "e729ea7bbdc6be7585efae1d5d96047be12a2eb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2920, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}