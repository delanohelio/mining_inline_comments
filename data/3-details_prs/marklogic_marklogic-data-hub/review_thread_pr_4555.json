{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MzQwOTY2", "number": 4555, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTo0NTowN1rOEiq2ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTo0Njo0NlrOEiq4ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzg5MTU1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTo0NTowN1rOHQrrAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDo0ODoxOFrOHQtbaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI1NDc4NQ==", "bodyText": "What was the issue with \"synchronized\"? I don't know if it's actually needed, but I also don't know the impact of removing it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4555#discussion_r487254785", "createdAt": "2020-09-11T19:45:07Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -254,18 +228,17 @@ private void initializeFlow(String jobId) {\n     }\n \n     public void stopJob(String jobId) {\n-        synchronized (stepsMap) {\n-            if(stepsMap.get(jobId) != null){\n-                stepsMap.get(jobId).clear();\n-                stepsMap.remove(jobId);\n-                isJobCancelled.set(true);\n-            }\n-            else {\n-                throw new RuntimeException(\"Job not running\");\n-            }\n+        if (stepsMap.get(jobId) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a9d37c565965013364e15cf5b41dff6c1e57ddf"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI4MzU2MQ==", "bodyText": "Coverity had raised a concurrency issue earlier which is why @ryanjdew added this in. Right now it's raising an issue that we are synchronizing over an object of java.util.concurrent package.\nI checked and also conformed with Ryan that its safe to remove the synchronized block since both stepsMap and isJobCancelled are part of java.util.concurrent package.\nRyan and I decided to remove the synchronized block for now and see if the Coverity scan raises the earlier issue again.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4555#discussion_r487283561", "createdAt": "2020-09-11T20:48:18Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -254,18 +228,17 @@ private void initializeFlow(String jobId) {\n     }\n \n     public void stopJob(String jobId) {\n-        synchronized (stepsMap) {\n-            if(stepsMap.get(jobId) != null){\n-                stepsMap.get(jobId).clear();\n-                stepsMap.remove(jobId);\n-                isJobCancelled.set(true);\n-            }\n-            else {\n-                throw new RuntimeException(\"Job not running\");\n-            }\n+        if (stepsMap.get(jobId) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI1NDc4NQ=="}, "originalCommit": {"oid": "1a9d37c565965013364e15cf5b41dff6c1e57ddf"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0Nzg5Njk5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/hubcentral/HubCentralManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxOTo0Njo0NlrOHQruSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDo0ODoyMVrOHQtbfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI1NTYyNA==", "bodyText": "I think the fileOut declaration needs to be moved into the \"if\" block - otherwise, it never gets closed. Could just do:\nFileCopyUtils.copy(buffer, new FileOutputStream(outputFile));", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4555#discussion_r487255624", "createdAt": "2020-09-11T19:46:46Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/hubcentral/HubCentralManager.java", "diffHunk": "@@ -160,9 +160,10 @@ protected void extractZipToProject(HubProject hubProject, File zipFile) {\n                 outputFile.getParentFile().mkdirs();\n                 try (InputStream inputStream = zip.getInputStream(entry);\n                      FileOutputStream fileOut = new FileOutputStream(outputFile)) {\n-                    inputStream.read(buffer, 0, entrySize);\n-                    logger.info(\"Writing file: \" + outputFile);\n-                    FileCopyUtils.copy(buffer, fileOut);\n+                    if (inputStream.read(buffer, 0, entrySize) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a9d37c565965013364e15cf5b41dff6c1e57ddf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI4MzU4Mg==", "bodyText": "In the event when FileCopyUtils.copy(buffer, fileOut) does not run the fileOut stream should be closed via the try-with-resources block.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4555#discussion_r487283582", "createdAt": "2020-09-11T20:48:21Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/hubcentral/HubCentralManager.java", "diffHunk": "@@ -160,9 +160,10 @@ protected void extractZipToProject(HubProject hubProject, File zipFile) {\n                 outputFile.getParentFile().mkdirs();\n                 try (InputStream inputStream = zip.getInputStream(entry);\n                      FileOutputStream fileOut = new FileOutputStream(outputFile)) {\n-                    inputStream.read(buffer, 0, entrySize);\n-                    logger.info(\"Writing file: \" + outputFile);\n-                    FileCopyUtils.copy(buffer, fileOut);\n+                    if (inputStream.read(buffer, 0, entrySize) > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI1NTYyNA=="}, "originalCommit": {"oid": "1a9d37c565965013364e15cf5b41dff6c1e57ddf"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3329, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}