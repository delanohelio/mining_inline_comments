{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NjA2MzIw", "number": 3711, "title": "DHFPROD-4608: Settings for loadData/mapping/matching/merging should b\u2026", "bodyText": "\u2026e persisted in filesystem\nhttps://project.marklogic.com/jira/browse/DHFPROD-4608", "createdAt": "2020-03-17T03:44:36Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711", "merged": true, "mergeCommit": {"oid": "1288a41208c845995011c30847be49cc08f25852"}, "closed": true, "closedAt": "2020-03-20T16:34:01Z", "author": {"login": "hao1st"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOhwjFgFqTM3NTk4MjAxMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPi6vqgFqTM3ODYyNDA1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTgyMDEz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#pullrequestreview-375982013", "createdAt": "2020-03-17T12:20:55Z", "commit": {"oid": "c50081a2e5909a442bb9f42eee5ca3172ddb4670"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjM0OTUz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#pullrequestreview-376234953", "createdAt": "2020-03-17T17:07:09Z", "commit": {"oid": "c50081a2e5909a442bb9f42eee5ca3172ddb4670"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c50081a2e5909a442bb9f42eee5ca3172ddb4670", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c50081a2e5909a442bb9f42eee5ca3172ddb4670", "committedDate": "2020-03-17T03:41:31Z", "message": "DHFPROD-4608: Settings for loadData/mapping/matching/merging should be persisted in filesystem"}, "afterCommit": {"oid": "1e7e3906dc0ef71b118b3aaf116e1168e6c71854", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1e7e3906dc0ef71b118b3aaf116e1168e6c71854", "committedDate": "2020-03-18T17:50:44Z", "message": "DHFPROD-4608: Settings for loadData/mapping/matching/merging should be persisted in filesystem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTQ4ODg0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#pullrequestreview-377148884", "createdAt": "2020-03-18T18:54:39Z", "commit": {"oid": "1e7e3906dc0ef71b118b3aaf116e1168e6c71854"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1NDozOVrOF4StJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxODo1NDozOVrOF4StJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3MTA0Nw==", "bodyText": "Use !artifact.has(\"artifactName\") .\nAlso - would this really ever happen? And if it did, wouldn't we want to throw an error? Just logging it and moving on doesn't seem good, as something is really wrong if an artifact doesn't have a name.\nI think this code can assume that artifactName exists. If it doesn't, either the proceeding code will throw an error, or we can eagerly throw an exception. But it seems like the call to save the artifact in ML would have already failed too, right?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#discussion_r394571047", "createdAt": "2020-03-18T18:54:39Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "diffHunk": "@@ -70,16 +76,28 @@ public ObjectNode getArtifactSettings(String artifactType, String artifactName)\n     }\n \n     public ObjectNode updateArtifactSettings(String artifactType, String artifactName, JsonNode settings) {\n-        return (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        ObjectNode resp = (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        writeArtifactInProject(artifactType, (ObjectNode) settings, true);\n+        return resp;\n     }\n \n     protected ArtifactService getArtifactService() {\n         DatabaseClient dataServicesClient = hubConfig.newStagingClient(null);\n         return ArtifactService.on(dataServicesClient);\n     }\n \n-    protected void writeArtifactInProject(String artifactType, ObjectNode artifact) {\n-        Path fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact));\n+    protected void writeArtifactInProject(String artifactType, ObjectNode artifact, boolean isSetting) {\n+        Path fileLocation;\n+        if (!isSetting) {\n+            fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact), false);\n+        } else {\n+            if (artifact.get(\"artifactName\") == null ||  artifact.get(\"artifactName\").asText().length() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e7e3906dc0ef71b118b3aaf116e1168e6c71854"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjU2MDc3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#pullrequestreview-377256077", "createdAt": "2020-03-18T21:42:25Z", "commit": {"oid": "99b9d7547b57077e3b20bdf1e86c13a40b8ec73f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo0MjoyNVrOF4X6FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo0MjoyNVrOF4X6FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY1NjI3Nw==", "bodyText": "Since we assume that artifactName is not null, just let an exception propagate when \"asText()\" is called. If we want something nicer, we can check to see if \"artifactName\" doesn't exist and then do something like this:\nthrow new RuntimeException(\"Unable to write artifact to project folder; no artifactName found\")", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#discussion_r394656277", "createdAt": "2020-03-18T21:42:25Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ArtifactManagerImpl.java", "diffHunk": "@@ -70,16 +76,28 @@ public ObjectNode getArtifactSettings(String artifactType, String artifactName)\n     }\n \n     public ObjectNode updateArtifactSettings(String artifactType, String artifactName, JsonNode settings) {\n-        return (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        ObjectNode resp = (ObjectNode) getArtifactService().setArtifactSettings(artifactType, artifactName, settings);\n+        writeArtifactInProject(artifactType, (ObjectNode) settings, true);\n+        return resp;\n     }\n \n     protected ArtifactService getArtifactService() {\n         DatabaseClient dataServicesClient = hubConfig.newStagingClient(null);\n         return ArtifactService.on(dataServicesClient);\n     }\n \n-    protected void writeArtifactInProject(String artifactType, ObjectNode artifact) {\n-        Path fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact));\n+    protected void writeArtifactInProject(String artifactType, ObjectNode artifact, boolean isSetting) {\n+        Path fileLocation;\n+        if (!isSetting) {\n+            fileLocation = buildArtifactProjectLocation(artifactType, getNameFromArtifact(artifactType, artifact), getVersionFromArtifact(artifactType, artifact), false);\n+        } else {\n+            if (!artifact.has(\"artifactName\") || artifact.get(\"artifactName\").asText().length() == 0) {\n+                logger.error(\"Failed to write to project folder due to invalid settings! artifactType: (%s), artifact settings: (%s).\", artifactType, artifact.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b9d7547b57077e3b20bdf1e86c13a40b8ec73f"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjU5NTM1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#pullrequestreview-377259535", "createdAt": "2020-03-18T21:48:43Z", "commit": {"oid": "99b9d7547b57077e3b20bdf1e86c13a40b8ec73f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d4b14f91343c22b1096a084ae3be0dc3a682522", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9d4b14f91343c22b1096a084ae3be0dc3a682522", "committedDate": "2020-03-18T23:26:51Z", "message": "DHFPROD-4608: Settings for loadData/mapping/matching/merging should be persisted in filesystem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "110fa637446bd01aa8dd3cbd9b9d58bf75260d6a", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/110fa637446bd01aa8dd3cbd9b9d58bf75260d6a", "committedDate": "2020-03-18T23:26:51Z", "message": "DHFPROD-4608: use JsonNode has(...) method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "686e5f3c3a7321df24f649b099ab1e82a8621fce", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/686e5f3c3a7321df24f649b099ab1e82a8621fce", "committedDate": "2020-03-18T23:27:55Z", "message": "DHFPROD-4608: add exception"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99b9d7547b57077e3b20bdf1e86c13a40b8ec73f", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/99b9d7547b57077e3b20bdf1e86c13a40b8ec73f", "committedDate": "2020-03-18T19:03:37Z", "message": "DHFPROD-4608: use JsonNode has(...) method"}, "afterCommit": {"oid": "686e5f3c3a7321df24f649b099ab1e82a8621fce", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/686e5f3c3a7321df24f649b099ab1e82a8621fce", "committedDate": "2020-03-18T23:27:55Z", "message": "DHFPROD-4608: add exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzE3MTY3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#pullrequestreview-377317167", "createdAt": "2020-03-18T23:54:26Z", "commit": {"oid": "686e5f3c3a7321df24f649b099ab1e82a8621fce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NjI0MDU3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3711#pullrequestreview-378624057", "createdAt": "2020-03-20T16:15:53Z", "commit": {"oid": "686e5f3c3a7321df24f649b099ab1e82a8621fce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3182, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}