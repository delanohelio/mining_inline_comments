{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTE5NzA4", "number": 3676, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzoyMjo1NlrODnSUfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMToyMToxMlrODnTiOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTIxMjE0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collectorLib.sjs", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzoyMjo1NlrOF1MkmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo0MjoxM1rOF1fEuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNDgyNA==", "bodyText": "if return from \"if\" code block, you do not need to use \"else if\", only \"if\" is enough.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391324824", "createdAt": "2020-03-11T23:22:56Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collectorLib.sjs", "diffHunk": "@@ -19,13 +19,23 @@ const DataHub = require(\"/data-hub/5/datahub.sjs\");\n \n class CollectorLib {\n \n+  /**\n+   * Determine the sourceQuery from the given options and stepDefinition and then prepare it for evaluation by the\n+   * collector endpoint.\n+   *\n+   * @param combinedOptions\n+   * @param stepDefinition\n+   * @return {string|*}\n+   */\n   prepareSourceQuery(combinedOptions, stepDefinition) {\n     let sourceQuery = combinedOptions.sourceQuery;\n \n     let isMergingStep = stepDefinition.name === 'default-merging' && stepDefinition.type === 'merging';\n \n     if (isMergingStep) {\n-      sourceQuery = fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+      return fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+    } else if (combinedOptions.sourceQueryIsScript) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1ODcyMA==", "bodyText": "Good idea, I'll make the change.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391358720", "createdAt": "2020-03-12T01:35:25Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collectorLib.sjs", "diffHunk": "@@ -19,13 +19,23 @@ const DataHub = require(\"/data-hub/5/datahub.sjs\");\n \n class CollectorLib {\n \n+  /**\n+   * Determine the sourceQuery from the given options and stepDefinition and then prepare it for evaluation by the\n+   * collector endpoint.\n+   *\n+   * @param combinedOptions\n+   * @param stepDefinition\n+   * @return {string|*}\n+   */\n   prepareSourceQuery(combinedOptions, stepDefinition) {\n     let sourceQuery = combinedOptions.sourceQuery;\n \n     let isMergingStep = stepDefinition.name === 'default-merging' && stepDefinition.type === 'merging';\n \n     if (isMergingStep) {\n-      sourceQuery = fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+      return fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+    } else if (combinedOptions.sourceQueryIsScript) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNDgyNA=="}, "originalCommit": {"oid": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyNzk2Mw==", "bodyText": "Updated - definitely reads nicer now.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391627963", "createdAt": "2020-03-12T13:42:13Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collectorLib.sjs", "diffHunk": "@@ -19,13 +19,23 @@ const DataHub = require(\"/data-hub/5/datahub.sjs\");\n \n class CollectorLib {\n \n+  /**\n+   * Determine the sourceQuery from the given options and stepDefinition and then prepare it for evaluation by the\n+   * collector endpoint.\n+   *\n+   * @param combinedOptions\n+   * @param stepDefinition\n+   * @return {string|*}\n+   */\n   prepareSourceQuery(combinedOptions, stepDefinition) {\n     let sourceQuery = combinedOptions.sourceQuery;\n \n     let isMergingStep = stepDefinition.name === 'default-merging' && stepDefinition.type === 'merging';\n \n     if (isMergingStep) {\n-      sourceQuery = fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+      return fn.normalizeSpace(`cts.values(cts.pathReference('/matchSummary/URIsToProcess', ['type=string','collation=http://marklogic.com/collation/']), null, null, ${sourceQuery})`);\n+    } else if (combinedOptions.sourceQueryIsScript) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMyNDgyNA=="}, "originalCommit": {"oid": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTQxMTE1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collector.sjs", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMToyMToxMlrOF1OcwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMTozNTowMVrOF1OosA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1NTU4NA==", "bodyText": "can we have a better variable name for \"javascript\" here?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391355584", "createdAt": "2020-03-12T01:21:12Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collector.sjs", "diffHunk": "@@ -69,19 +69,18 @@ if (!query) {\n   fn.error(null, \"RESTAPI-SRVEXERR\", Sequence.from([404, \"Not Found\", \"The collector query was empty\"]));\n }\n \n-query = new CollectorLib().prepareSourceQuery(combinedOptions, stepDefinition);\n-\n+const javascript = new CollectorLib().prepareSourceQuery(combinedOptions, stepDefinition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1ODY0MA==", "bodyText": "It's the same name as the argument for xdmp.eval - http://docs.marklogic.com/xdmp.eval .", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3676#discussion_r391358640", "createdAt": "2020-03-12T01:35:01Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/endpoints/collector.sjs", "diffHunk": "@@ -69,19 +69,18 @@ if (!query) {\n   fn.error(null, \"RESTAPI-SRVEXERR\", Sequence.from([404, \"Not Found\", \"The collector query was empty\"]));\n }\n \n-query = new CollectorLib().prepareSourceQuery(combinedOptions, stepDefinition);\n-\n+const javascript = new CollectorLib().prepareSourceQuery(combinedOptions, stepDefinition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM1NTU4NA=="}, "originalCommit": {"oid": "bfca39e6769f6bb28a21bf16fbbc1d0363615f3a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}