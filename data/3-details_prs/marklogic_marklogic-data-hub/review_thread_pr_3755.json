{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDMzOTIz", "number": 3755, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowMToxNFrODtr3YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowMToxNFrODtr3YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjMxMjAwOnYy", "diffSide": "RIGHT", "path": "one-ui/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDowMToxNFrOF_QgMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyODo1OVrOF_RZ8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NDk5NA==", "bodyText": "Can we update the test description to be unique so we can debug in case of test failure", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3755#discussion_r401874994", "createdAt": "2020-04-01T20:01:14Z", "author": {"login": "bsrikan"}, "path": "one-ui/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "diffHunk": "@@ -1,41 +1,87 @@\n import React from 'react';\n-import { shallow } from 'enzyme';\n+import { render, cleanup, fireEvent } from '@testing-library/react';\n import SourceToEntityMap from './source-to-entity-map';\n import data from '../../../../config/data.config';\n+import { shallow } from 'enzyme';\n+import SplitPane from 'react-split-pane';\n \n describe('Source to Entity mapping component', () => {\n-  let wrapper: any;\n+    afterEach(cleanup);\n+    test('Modal renders properly', () => {\n+        const { getByTestId,  getByText, getByRole } = render(<SourceToEntityMap {... {mapData: data.mapProps.mapData, entityTypeTitle : data.mapProps.entityTypeTitle, sourceData: []}} mappingVisible={true}/>);\n+        expect(getByText('Source Data')).toBeInTheDocument();\n+        expect(getByText('Test')).toBeDisabled;\n+        expect(getByText('Clear')).toBeDisabled;\n+        expect(getByTestId(\"entityContainer\")).toBeInTheDocument();\n+        expect(getByTestId(\"srcContainer\")).toBeInTheDocument();\n+        expect(getByText(\"Unable to find source documents using the specified collection or query.\")).toBeInTheDocument;\n+        expect(getByTestId(\"srcContainer\")).toHaveClass(\"sourceContainer\");\n+        expect(getByText('Entity: Person')).toBeInTheDocument();\n+        expect(getByRole('presentation').className).toEqual(\"Resizer vertical \");\n+    });\n \n-  beforeEach(() => {\n-    wrapper = shallow(<SourceToEntityMap {...data.mapProps} />);\n-  });\n+    test('Modal renders properly',  () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d33cb31143aabe7a7c607c306a4f13ec5472ce1f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4OTc3OA==", "bodyText": "Changed the description", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3755#discussion_r401889778", "createdAt": "2020-04-01T20:28:59Z", "author": {"login": "srinathgit"}, "path": "one-ui/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "diffHunk": "@@ -1,41 +1,87 @@\n import React from 'react';\n-import { shallow } from 'enzyme';\n+import { render, cleanup, fireEvent } from '@testing-library/react';\n import SourceToEntityMap from './source-to-entity-map';\n import data from '../../../../config/data.config';\n+import { shallow } from 'enzyme';\n+import SplitPane from 'react-split-pane';\n \n describe('Source to Entity mapping component', () => {\n-  let wrapper: any;\n+    afterEach(cleanup);\n+    test('Modal renders properly', () => {\n+        const { getByTestId,  getByText, getByRole } = render(<SourceToEntityMap {... {mapData: data.mapProps.mapData, entityTypeTitle : data.mapProps.entityTypeTitle, sourceData: []}} mappingVisible={true}/>);\n+        expect(getByText('Source Data')).toBeInTheDocument();\n+        expect(getByText('Test')).toBeDisabled;\n+        expect(getByText('Clear')).toBeDisabled;\n+        expect(getByTestId(\"entityContainer\")).toBeInTheDocument();\n+        expect(getByTestId(\"srcContainer\")).toBeInTheDocument();\n+        expect(getByText(\"Unable to find source documents using the specified collection or query.\")).toBeInTheDocument;\n+        expect(getByTestId(\"srcContainer\")).toHaveClass(\"sourceContainer\");\n+        expect(getByText('Entity: Person')).toBeInTheDocument();\n+        expect(getByRole('presentation').className).toEqual(\"Resizer vertical \");\n+    });\n \n-  beforeEach(() => {\n-    wrapper = shallow(<SourceToEntityMap {...data.mapProps} />);\n-  });\n+    test('Modal renders properly',  () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg3NDk5NA=="}, "originalCommit": {"oid": "d33cb31143aabe7a7c607c306a4f13ec5472ce1f"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3520, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}