{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3Njc5NDY4", "number": 4992, "title": "DHFPROD-5983: Run new OOTB step to add sourceName and sourceType to user-specified documents", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-12-12T02:38:15Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992", "merged": true, "mergeCommit": {"oid": "c0a73e3431541ead5972b05f8359cfae855c1484"}, "closed": true, "closedAt": "2020-12-14T17:13:45Z", "author": {"login": "rahulvudutala"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlyogmAFqTU1MDkyODg2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmI1nxAFqTU1MTYyNzY3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwOTI4ODY2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#pullrequestreview-550928866", "createdAt": "2020-12-13T15:01:12Z", "commit": {"oid": "9398340f92e3a92827d25ad833a21191976b9780"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNTowMToxMlrOIE1hbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNToxMTo0OVrOIE1pBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0MjEyNA==", "bodyText": "Call both of these functions \"addSourceTo...\", since only one source is being added (even though that may require adding a \"sources\" property).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#discussion_r541942124", "createdAt": "2020-12-13T15:01:12Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/builtins/steps/custom/addSourceNameAndType/main.sjs", "diffHunk": "@@ -0,0 +1,65 @@\n+function main(content, options) {\n+  if(options[\"sourceNameToAdd\"] || options[\"sourceTypeToAdd\"]) {\n+    // See https://docs.marklogic.com/Node.nodeType\n+    if(content.value.root && 1 === content.value.root.nodeType) {\n+      addSourcesToXmlDocuments(content, options[\"sourceNameToAdd\"], options[\"sourceTypeToAdd\"]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9398340f92e3a92827d25ad833a21191976b9780"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0MjQwNw==", "bodyText": "You should be able to use \"makeInputFilePathsAbsoluteInFlow\" here.\nPinging @akshaysonvane  about this - I am wondering though if the best way to override this in tests is via setInputFilePath. But it should be a lot easier than this when there's only one ingestion step (the above makeInputfilePaths function is useful when there are multiple ingestion steps, and each needs it's one absolute path). How about:\naddAbsoluteInputFilePath(flowInputs, \"data\");\n\nThat would use the current HubProject to resolve the \"data\" directory and then add the absolute file path of that directory to flowInputs.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#discussion_r541942407", "createdAt": "2020-12-13T15:02:33Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/AddSourceNameAndTypeStepDefTest.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package com.marklogic.hub.flow;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class AddSourceNameAndTypeStepDefTest extends AbstractHubCoreTest {\n+    @BeforeEach\n+    void beforeEach() {\n+        installProjectInFolder(\"test-projects/addSources-step-definition-test\");\n+        String path = \"test-projects/addSources-step-definition-test/data\";\n+        FlowInputs inputs = new FlowInputs(\"addSourcesFlow\", \"1\");\n+        inputs.setInputFilePath(getClass().getClassLoader().getResource(path).getPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9398340f92e3a92827d25ad833a21191976b9780"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0MzMwMw==", "bodyText": "Nice - simplest document possible!", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#discussion_r541943303", "createdAt": "2020-12-13T15:07:27Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/resources/test-projects/addSources-step-definition-test/data/customer1.json", "diffHunk": "@@ -0,0 +1,3 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9398340f92e3a92827d25ad833a21191976b9780"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0MzQwNw==", "bodyText": "Can't both steps be run at the same time since they use the same input path?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#discussion_r541943407", "createdAt": "2020-12-13T15:08:07Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/AddSourceNameAndTypeStepDefTest.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package com.marklogic.hub.flow;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class AddSourceNameAndTypeStepDefTest extends AbstractHubCoreTest {\n+    @BeforeEach\n+    void beforeEach() {\n+        installProjectInFolder(\"test-projects/addSources-step-definition-test\");\n+        String path = \"test-projects/addSources-step-definition-test/data\";\n+        FlowInputs inputs = new FlowInputs(\"addSourcesFlow\", \"1\");\n+        inputs.setInputFilePath(getClass().getClassLoader().getResource(path).getPath());\n+        runFlow(inputs);\n+\n+        inputs.setSteps(Arrays.asList(\"2\"));\n+        runFlow(inputs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9398340f92e3a92827d25ad833a21191976b9780"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0NDA2OQ==", "bodyText": "These are really good tests, but I think we need a couple more things - need to verify that if \"sources\" already exists, then a new source is added and the existing ones aren't modified. You can simply add one more JSON doc and one more XML doc to your test data and verify them as part of the first test scenario (I don't think you need to verify them in every other test).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#discussion_r541944069", "createdAt": "2020-12-13T15:11:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/AddSourceNameAndTypeStepDefTest.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package com.marklogic.hub.flow;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NodeList;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class AddSourceNameAndTypeStepDefTest extends AbstractHubCoreTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9398340f92e3a92827d25ad833a21191976b9780"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efbc12035cb779cd98ef3e7a8ca3bb94b05111ad", "author": {"user": {"login": "rahulvudutala", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/efbc12035cb779cd98ef3e7a8ca3bb94b05111ad", "committedDate": "2020-12-13T20:04:57Z", "message": "DHFPROD-5983: Run new OOTB step to add sourceName and sourceType to user-specified documents"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9398340f92e3a92827d25ad833a21191976b9780", "author": {"user": {"login": "rahulvudutala", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9398340f92e3a92827d25ad833a21191976b9780", "committedDate": "2020-12-12T02:33:42Z", "message": "DHFPROD-5983: Run new OOTB step to add sourceName and sourceType to user-specified documents"}, "afterCommit": {"oid": "efbc12035cb779cd98ef3e7a8ca3bb94b05111ad", "author": {"user": {"login": "rahulvudutala", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/efbc12035cb779cd98ef3e7a8ca3bb94b05111ad", "committedDate": "2020-12-13T20:04:57Z", "message": "DHFPROD-5983: Run new OOTB step to add sourceName and sourceType to user-specified documents"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzYyOTg1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#pullrequestreview-551362985", "createdAt": "2020-12-14T13:27:17Z", "commit": {"oid": "efbc12035cb779cd98ef3e7a8ca3bb94b05111ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNjI3Njcw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4992#pullrequestreview-551627670", "createdAt": "2020-12-14T17:04:11Z", "commit": {"oid": "efbc12035cb779cd98ef3e7a8ca3bb94b05111ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1571, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}