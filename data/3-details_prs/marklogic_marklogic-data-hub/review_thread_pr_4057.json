{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NzU4MDU0", "number": 4057, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzowNDozMFrOEDHqdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDo1OTozNlrOEDRsxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzA2NzQxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzowNDozMFrOGf_knA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzoxOToxMlrOGf_wJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMDYwNA==", "bodyText": "Is this change intentional. Srinath fixed it so test will pass in 9.0-12.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436200604", "createdAt": "2020-06-05T23:04:30Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "diffHunk": "@@ -25,12 +25,7 @@\n     @Test\n     void runIngestionStep() throws Exception {\n         installReferenceModelProject();\n-        if(isVersionCompatibleWith520Roles()) {\n-            loginAsTestUserWithRoles(\"hub-central-step-runner\");\n-        }\n-        else {\n-            loginAsTestUserWithRoles(\"hub-central-step-runner\", \"flow-operator-role\");\n-        }\n+        loginAsTestUserWithRoles(\"hub-central-step-runner\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTM3NQ==", "bodyText": "Yes. I adjusted hub-central-step-runner to work with both 9.0-12 and 10.0-*", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436201375", "createdAt": "2020-06-05T23:08:25Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "diffHunk": "@@ -25,12 +25,7 @@\n     @Test\n     void runIngestionStep() throws Exception {\n         installReferenceModelProject();\n-        if(isVersionCompatibleWith520Roles()) {\n-            loginAsTestUserWithRoles(\"hub-central-step-runner\");\n-        }\n-        else {\n-            loginAsTestUserWithRoles(\"hub-central-step-runner\", \"flow-operator-role\");\n-        }\n+        loginAsTestUserWithRoles(\"hub-central-step-runner\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMDYwNA=="}, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMzU1Nw==", "bodyText": "Thanks Ryan. I deleted the other comment after seeing the existing flow was asserted and it seems to have deleted your comment as well. Sorry about that.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436203557", "createdAt": "2020-06-05T23:19:12Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/src/test/java/com/marklogic/hub/central/controllers/FlowMvcTest.java", "diffHunk": "@@ -25,12 +25,7 @@\n     @Test\n     void runIngestionStep() throws Exception {\n         installReferenceModelProject();\n-        if(isVersionCompatibleWith520Roles()) {\n-            loginAsTestUserWithRoles(\"hub-central-step-runner\");\n-        }\n-        else {\n-            loginAsTestUserWithRoles(\"hub-central-step-runner\", \"flow-operator-role\");\n-        }\n+        loginAsTestUserWithRoles(\"hub-central-step-runner\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMDYwNA=="}, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzA5MjMzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/pages/Run.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzoyMzo1MFrOGf_z6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzozNzo1MVrOGf_-rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNDUyMw==", "bodyText": "Currently we have tests for Run tile in Run.test.tsx, but they are run as developer and operator. Should we run them as flow-writer and step runner instead, so we would have verified a flow can be run with a lesser and more appropriate authority?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436204523", "createdAt": "2020-06-05T23:23:50Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/Run.tsx", "diffHunk": "@@ -34,7 +34,7 @@ const Run: React.FC = () => {\n     const authorityService = useContext(AuthoritiesContext);\n     const canReadFlow = authorityService.canReadStep();\n     const canWriteFlow = authorityService.canWriteStep();\n-    const hasOperatorRole = authorityService.hasOperatorRole();\n+    const hasOperatorRole = authorityService.canRunStep();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNzI3Ng==", "bodyText": "wouldn't hurt. I'll adjust that.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436207276", "createdAt": "2020-06-05T23:37:51Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/ui/src/pages/Run.tsx", "diffHunk": "@@ -34,7 +34,7 @@ const Run: React.FC = () => {\n     const authorityService = useContext(AuthoritiesContext);\n     const canReadFlow = authorityService.canReadStep();\n     const canWriteFlow = authorityService.canWriteStep();\n-    const hasOperatorRole = authorityService.hasOperatorRole();\n+    const hasOperatorRole = authorityService.canRunStep();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNDUyMw=="}, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzEwNDI0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/pages/TilesView.test.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzozMjoxNFrOGf_68A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzozMjoxNFrOGf_68A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNjMyMA==", "bodyText": "Nice. I should probably comment after am done reviewing everything top down.\nWith this I think we can keep the Run tests as is and you can ignore my comment earlier regarding Run.test.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436206320", "createdAt": "2020-06-05T23:32:14Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/TilesView.test.tsx", "diffHunk": "@@ -106,8 +106,10 @@ describe('TilesView component', () => {\n \n     });\n \n-    test('Verify Run tile displays from toolbar', async () => {\n-        const {getByLabelText, getByText, queryByText, getByTestId} = await render(<AuthoritiesContext.Provider value={ mockDevRolesService}><TilesView/></AuthoritiesContext.Provider>);\n+    test('Verify Run tile displays from toolbar and can create/edit/delete with writeStep authority', async () => {\n+        const authorityService = new AuthoritiesService();\n+        authorityService.setAuthorities(['readStep','writeStep','runStep']);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzEwNTcxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/pages/TilesView.test.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzozMzozMVrOGf_7zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTozODoxMlrOGgkT2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNjU0Mw==", "bodyText": "Can we add a custom step to run.config and verify it shows up in Run tile for these authorities?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436206543", "createdAt": "2020-06-05T23:33:31Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/TilesView.test.tsx", "diffHunk": "@@ -136,7 +138,7 @@ describe('TilesView component', () => {\n         expect(getByTestId('runStep-1')).toBeInTheDocument();\n     });\n \n-    test('Verify run tile cannot edit with only readStep authority', async () => {\n+    test('Verify run tile cannot edit or run with only readStep authority', async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwODEyMQ==", "bodyText": "sure", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436208121", "createdAt": "2020-06-05T23:42:35Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/ui/src/pages/TilesView.test.tsx", "diffHunk": "@@ -136,7 +138,7 @@ describe('TilesView component', () => {\n         expect(getByTestId('runStep-1')).toBeInTheDocument();\n     });\n \n-    test('Verify run tile cannot edit with only readStep authority', async () => {\n+    test('Verify run tile cannot edit or run with only readStep authority', async () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNjU0Mw=="}, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMjUyMA==", "bodyText": "added a custom step and a mapping step", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436802520", "createdAt": "2020-06-08T15:38:12Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/ui/src/pages/TilesView.test.tsx", "diffHunk": "@@ -136,7 +138,7 @@ describe('TilesView component', () => {\n         expect(getByTestId('runStep-1')).toBeInTheDocument();\n     });\n \n-    test('Verify run tile cannot edit with only readStep authority', async () => {\n+    test('Verify run tile cannot edit or run with only readStep authority', async () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNjU0Mw=="}, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODcxMTI1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/FlowController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDo1ODoyOFrOGgM7hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTozODo0NlrOGgkVPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxOTQ2Mg==", "bodyText": "I think this needs to be writeFlow. I had asked Shannon to change step-writer to flow-writer because the role allows for modifying flows, not steps. We have separate roles - one per step type - that control who can write a step.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436419462", "createdAt": "2020-06-08T00:58:28Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/FlowController.java", "diffHunk": "@@ -54,32 +54,37 @@\n     @RequestMapping(method = RequestMethod.POST)\n     @ResponseBody\n     @ApiOperation(value = \"Create a flow\", response = FlowInfo.class)\n+    @Secured(\"ROLE_writeStep\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMjg3Ng==", "bodyText": "Refactored these to be readFlow/writeFlow", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436802876", "createdAt": "2020-06-08T15:38:46Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/FlowController.java", "diffHunk": "@@ -54,32 +54,37 @@\n     @RequestMapping(method = RequestMethod.POST)\n     @ResponseBody\n     @ApiOperation(value = \"Create a flow\", response = FlowInfo.class)\n+    @Secured(\"ROLE_writeStep\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxOTQ2Mg=="}, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODcxMTcyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/config/authorities.config.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDo1OTozNlrOGgM71Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMDo1OTozNlrOGgM71Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxOTU0MQ==", "bodyText": "I think \"runStep\" is fine, because ultimately the user is running a step that's defined within a particular flow.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4057#discussion_r436419541", "createdAt": "2020-06-08T00:59:36Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/config/authorities.config.ts", "diffHunk": "@@ -49,7 +49,7 @@ class DeveloperRolesService implements IAuthoritiesContextInterface{\n     public isSavedQueryUser:() => boolean = () => {\n         return true;\n     };\n-    public hasOperatorRole:() => boolean = () => {\n+    public canRunStep:() => boolean = () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67a97c24dfbc6b1fa4d5a974a1547f51a09fcb90"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4025, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}