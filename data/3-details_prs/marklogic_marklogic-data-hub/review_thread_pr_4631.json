{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MzE1MDcz", "number": 4631, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo0NTo1M1rOEoNvDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDoyMTowMVrOEoPnxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjAzNTM0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo0NTo1M1rOHZLNXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo0NTo1M1rOHZLNXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2MDA5Mw==", "bodyText": "We've got 5 instances of code all wanting to do the same thing - convert a File or Resource into a JsonNode, and now they all want to replace tokens at the same time.\nIt's best to do this via a new private method - particularly as when we add a 6th instance of the code, we can just reuse that method and not worry about forgetting to replace tokens.\nSince we know that everything is a File here, the 2 places that use a Resource should just do \"resource.getFile()\". The reusable method can then have a signature of:\nprivate JsonNode readArtifact(File file);\n\nAnd it should catch any exception that occurs and throwing a generic error message of:\nthrow new RuntimeException(\"Unless to read file \" + f.getFilename() \" + as JSON; cause: \" + e.getMessage(), e);", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4631#discussion_r496160093", "createdAt": "2020-09-28T18:45:53Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -155,9 +159,10 @@ private void loadModels(HubClient hubClient) throws IOException {\n                 public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs)  {\n                     logger.info(\"Loading models from directory \" + dir);\n                     modulesFinder.findModules(dir.toString()).getAssets().forEach(r -> {\n-                        try {\n+                        try (InputStream inputStream = r.getInputStream()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "919f3f1e111c40f03aefe15dda61a601bdb456c0"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjM0NDM2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDoyMTowMVrOHZONDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDoyMTowMVrOHZONDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwOTE2Nw==", "bodyText": "This is fine to keep, but generally I think it's simpler to just do \"return objectMapper.readTree\" as opposed to declaring this variable here. Shortens the method too.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4631#discussion_r496209167", "createdAt": "2020-09-28T20:21:01Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserArtifactsCommand.java", "diffHunk": "@@ -382,6 +378,25 @@ protected ObjectNode replaceLanguageWithLang(ObjectNode object) {\n         return newObject;\n     }\n \n+    /**\n+     * Reads the artifact file, replaces tokens and then returns the content as a JsonNode.\n+     *\n+     * @param file\n+     * @return\n+     */\n+    private JsonNode readArtifact(File file) {\n+        JsonNode jsonNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2c852bf9516fa6c963c0a7ef37e47f79b59c552"}, "originalPosition": 122}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3231, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}