{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MDY5MDA4", "number": 5055, "title": "DHFPROD-6412: Fixing syntax error when writing prov data", "bodyText": "Description\nAlso improved ML unit test plumbing by making \"clear-jobs-database\" delete provenance data as well, which depends on an amp.\nOne other change to flow.sjs is that previously, a bunch of prov data could be generated, but if the granularity level is off, then nothing was done with it. It seems to make more sense that if the level is off, we can bail right away and not generate all that data.\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Code passes ESLint tests\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-12-30T19:57:46Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055", "merged": true, "mergeCommit": {"oid": "7414fbd34b65418d53469b9718ddc3ad27a76bfa"}, "closed": true, "closedAt": "2021-01-05T00:33:20Z", "author": {"login": "rjrudin"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrWuGxgFqTU2MDIxMTA0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABds9BBtAFqTU2MTM1MDEzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjExMDQw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#pullrequestreview-560211040", "createdAt": "2020-12-30T21:50:24Z", "commit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMTo1MDoyNVrOIM15Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMTo1OToyNlrOIM2Abg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMzNjgwMw==", "bodyText": "We still want to store the coarse-grain information from the entity-services-mapping step and the granularity level is set to fine, right?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#discussion_r550336803", "createdAt": "2020-12-30T21:50:25Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -537,25 +534,26 @@ class Flow {\n           status: (stepDefTypeLowerCase === 'ingestion') ? 'created' : 'updated',\n           metadata: {}\n         };\n+\n         // We may want to hide some documents from provenance. e.g., we don't need provenance of mastering PROV documents\n         if (content.provenance !== false) {\n           let provResult;\n+\n           if (prov.granularityLevel() === prov.FINE_LEVEL && flowStep.stepDefinitionName === \"entity-services-mapping\") {\n             xdmp.trace(this.datahub.consts.TRACE_RUN_STEP, `'provenanceGranularityLevel' for step '${flowStep.name}' is set to 'fine'. This is not supported for mapping steps. So, coarse grained provenance data will be generated.`);\n           }\n-          if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance && flowStep.stepDefinitionName !== \"entity-services-mapping\") {\n+          else if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance) {\n             provResult = this.buildFineProvenanceData(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content, info);\n           } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMzODY3MA==", "bodyText": "a test is failing since flowInstance is undefined here.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#discussion_r550338670", "createdAt": "2020-12-30T21:59:26Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -537,25 +534,26 @@ class Flow {\n           status: (stepDefTypeLowerCase === 'ingestion') ? 'created' : 'updated',\n           metadata: {}\n         };\n+\n         // We may want to hide some documents from provenance. e.g., we don't need provenance of mastering PROV documents\n         if (content.provenance !== false) {\n           let provResult;\n+\n           if (prov.granularityLevel() === prov.FINE_LEVEL && flowStep.stepDefinitionName === \"entity-services-mapping\") {\n             xdmp.trace(this.datahub.consts.TRACE_RUN_STEP, `'provenanceGranularityLevel' for step '${flowStep.name}' is set to 'fine'. This is not supported for mapping steps. So, coarse grained provenance data will be generated.`);\n           }\n-          if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance && flowStep.stepDefinitionName !== \"entity-services-mapping\") {\n+          else if (prov.granularityLevel() === prov.FINE_LEVEL && content.provenance) {\n             provResult = this.buildFineProvenanceData(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content, info);\n           } else {\n             provResult = prov.createStepRecord(jobId, flowName, stepName, flowStep.stepDefinitionName, stepDefTypeLowerCase, content.uri, info);\n           }\n+\n           if (provResult instanceof Error) {\n             flowInstance.datahub.debug.log({message: provResult.message, type: 'error'});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1889e13e8712ac41bf3e29cd9af8d26d44a5b37b", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1889e13e8712ac41bf3e29cd9af8d26d44a5b37b", "committedDate": "2020-12-30T19:56:55Z", "message": "DHFPROD-6412: Fixing syntax error when writing prov data\n\nAlso improved ML unit test plumbing by making \"clear-jobs-database\" delete provenance data as well, which depends on an amp. \n\nOne other change to flow.sjs is that previously, a bunch of prov data could be generated, but if the granularity level is off, then nothing was done with it. It seems to make more sense that if the level is off, we can bail right away and not generate all that data."}, "afterCommit": {"oid": "4accb4ee32b4ad95bf97a5d11936abcfd01ff624", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4accb4ee32b4ad95bf97a5d11936abcfd01ff624", "committedDate": "2020-12-30T22:29:45Z", "message": "DHFPROD-6412: Fixing syntax error when writing prov data\n\nAlso improved ML unit test plumbing by making \"clear-jobs-database\" delete provenance data as well, which depends on an amp. \n\nOne other change to flow.sjs is that previously, a bunch of prov data could be generated, but if the granularity level is off, then nothing was done with it. It seems to make more sense that if the level is off, we can bail right away and not generate all that data."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6ed805f2660dbbec76e24630a3aa164d206fdea", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/f6ed805f2660dbbec76e24630a3aa164d206fdea", "committedDate": "2020-12-31T14:15:01Z", "message": "DHFPROD-6412: Fixing syntax error when writing prov data\n\nAlso improved ML unit test plumbing by making \"clear-jobs-database\" delete provenance data as well, which depends on an amp. \n\nOne other change to flow.sjs is that previously, a bunch of prov data could be generated, but if the granularity level is off, then nothing was done with it. It seems to make more sense that if the level is off, we can bail right away and not generate all that data."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4accb4ee32b4ad95bf97a5d11936abcfd01ff624", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4accb4ee32b4ad95bf97a5d11936abcfd01ff624", "committedDate": "2020-12-30T22:29:45Z", "message": "DHFPROD-6412: Fixing syntax error when writing prov data\n\nAlso improved ML unit test plumbing by making \"clear-jobs-database\" delete provenance data as well, which depends on an amp. \n\nOne other change to flow.sjs is that previously, a bunch of prov data could be generated, but if the granularity level is off, then nothing was done with it. It seems to make more sense that if the level is off, we can bail right away and not generate all that data."}, "afterCommit": {"oid": "f6ed805f2660dbbec76e24630a3aa164d206fdea", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/f6ed805f2660dbbec76e24630a3aa164d206fdea", "committedDate": "2020-12-31T14:15:01Z", "message": "DHFPROD-6412: Fixing syntax error when writing prov data\n\nAlso improved ML unit test plumbing by making \"clear-jobs-database\" delete provenance data as well, which depends on an amp. \n\nOne other change to flow.sjs is that previously, a bunch of prov data could be generated, but if the granularity level is off, then nothing was done with it. It seems to make more sense that if the level is off, we can bail right away and not generate all that data."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzIzODY2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#pullrequestreview-561323866", "createdAt": "2021-01-04T20:31:31Z", "commit": {"oid": "f6ed805f2660dbbec76e24630a3aa164d206fdea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzUwMTMy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5055#pullrequestreview-561350132", "createdAt": "2021-01-04T21:15:14Z", "commit": {"oid": "f6ed805f2660dbbec76e24630a3aa164d206fdea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1472, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}