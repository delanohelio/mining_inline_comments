{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4OTI5MTc3", "number": 4589, "title": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced", "bodyText": "Description\nAdd test to run flow with stemming searches set to \"advanced\"\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-09-17T20:59:31Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589", "merged": true, "mergeCommit": {"oid": "4b874dd5bf36185484f692ae74ab1ec161628306"}, "closed": true, "closedAt": "2020-10-01T21:19:01Z", "author": {"login": "srinathgit"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ5EuNAFqTQ5MTA0MTM0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOXmz5gFqTUwMDcwMjk4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDQxMzQ2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-491041346", "createdAt": "2020-09-17T22:51:40Z", "commit": {"oid": "1a5bb5dbd8c48f7183eec83ef1399149a765b6b2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjo1MTo0MFrOHT4J-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjo1MjoxNlrOHT4K3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwNTA1MQ==", "bodyText": "Just call this \"hubConfig\", as \"adminConfig\" implies it's an admin user.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r490605051", "createdAt": "2020-09-17T22:51:40Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/FlowRunnerTest.java", "diffHunk": "@@ -81,6 +83,32 @@ public void testRunFlow() {\n         Assertions.assertTrue(file.contains(\"ingest.csv\"));\n     }\n \n+    @Test\n+    void runFlowWithStemmingSearch(){\n+        try{\n+            updateStemmingOnStagingDb(true);\n+            testRunFlow();\n+        }\n+        finally {\n+            updateStemmingOnStagingDb(false);\n+        }\n+\n+    }\n+\n+    private void updateStemmingOnStagingDb(boolean enableStemming) {\n+        HubConfig adminConfig = runAsDataHubDeveloper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a5bb5dbd8c48f7183eec83ef1399149a765b6b2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYwNTI3OQ==", "bodyText": "Does this break on the nightly?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r490605279", "createdAt": "2020-09-17T22:52:16Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/FlowRunnerTest.java", "diffHunk": "@@ -81,6 +83,32 @@ public void testRunFlow() {\n         Assertions.assertTrue(file.contains(\"ingest.csv\"));\n     }\n \n+    @Test\n+    void runFlowWithStemmingSearch(){\n+        try{\n+            updateStemmingOnStagingDb(true);\n+            testRunFlow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a5bb5dbd8c48f7183eec83ef1399149a765b6b2"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a5bb5dbd8c48f7183eec83ef1399149a765b6b2", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1a5bb5dbd8c48f7183eec83ef1399149a765b6b2", "committedDate": "2020-09-17T20:58:30Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to \"advanced\""}, "afterCommit": {"oid": "3a46ed8a782846d5529a83c35febb703bb3cd8f3", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3a46ed8a782846d5529a83c35febb703bb3cd8f3", "committedDate": "2020-09-17T22:56:43Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to \"advanced\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDU2Nzcw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-491056770", "createdAt": "2020-09-17T23:35:21Z", "commit": {"oid": "3a46ed8a782846d5529a83c35febb703bb3cd8f3"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a46ed8a782846d5529a83c35febb703bb3cd8f3", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3a46ed8a782846d5529a83c35febb703bb3cd8f3", "committedDate": "2020-09-17T22:56:43Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to \"advanced\""}, "afterCommit": {"oid": "3ee5021d8c3c4641c949995cac04a4b8db577a57", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3ee5021d8c3c4641c949995cac04a4b8db577a57", "committedDate": "2020-09-19T07:05:50Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to \"advanced\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyOTEzOTkw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-492913990", "createdAt": "2020-09-21T19:25:07Z", "commit": {"oid": "3ee5021d8c3c4641c949995cac04a4b8db577a57"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyOTE3MDIx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-492917021", "createdAt": "2020-09-21T19:29:33Z", "commit": {"oid": "3ee5021d8c3c4641c949995cac04a4b8db577a57"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxOToyOTozM1rOHVfZxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxOTozMDozOVrOHVfcCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI5NjY0NQ==", "bodyText": "You can use \"sleep\" in the parent class so you don't have to deal with InterruptedException.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r492296645", "createdAt": "2020-09-21T19:29:33Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/FlowRunnerTest.java", "diffHunk": "@@ -81,6 +84,89 @@ public void testRunFlow() {\n         Assertions.assertTrue(file.contains(\"ingest.csv\"));\n     }\n \n+    /*\n+     https://bugtrack.marklogic.com/54003\n+     When stemmed search is set to \"advanced\", fetching step definition fails and hence running flow would fail in all server versions.\n+     After that if db is re-indexed, fetching flow succeeds in versions < 10.0-4 and fails in version >=10.0-5 and nightly server.\n+     With this server fix, fetching step definition, legacy mappings (and other artifacts ?) would fail and the json property value\n+     query requires 'lang=zxx' to be included in order to ensure artifacts can be fetched if stemming (and/or reindexing is done) is turned on.\n+     */\n+    @Test\n+    void runFlowWithStemmingSearch() throws InterruptedException {\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assumptions.assumeTrue(mlVersion.getMajor() >=10);\n+        HubConfig hubConfig = runAsDataHubDeveloper();\n+        try{\n+            updateStemmingOnStagingDb(hubConfig,true);\n+            RunFlowResponse resp = runFlow();\n+            Assertions.assertTrue(JobStatus.STOP_ON_ERROR.toString().equalsIgnoreCase(resp.getJobStatus()));\n+            hubConfig = runAsDataHubDeveloper();\n+            DatabaseManager dbManager = new DatabaseManager(hubConfig.getManageClient());\n+            dbManager.reindexDatabase(hubConfig.getDbName(DatabaseKind.STAGING));\n+            String query = \"(\\n\" +\n+                \"  for $forest-id in xdmp:database-forests(xdmp:database('data-hub-STAGING'))\\n\" +\n+                \"  return xdmp:forest-status($forest-id)//*:reindexing\\n\" +\n+                \") = fn:true()\";\n+            StringHandle stringHandle;\n+            String status;\n+            int attempts = 5;\n+            do{\n+                Thread.sleep(5000L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee5021d8c3c4641c949995cac04a4b8db577a57"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI5NzIyNQ==", "bodyText": "Also, let's get this all into a separate method called \"waitForReindexingToFinish\". And limit the sleep to maybe 500ms or so - the call to check on it is extremely fast, so we want this loop to finish as soon as the reindexer is done.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r492297225", "createdAt": "2020-09-21T19:30:39Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/FlowRunnerTest.java", "diffHunk": "@@ -81,6 +84,89 @@ public void testRunFlow() {\n         Assertions.assertTrue(file.contains(\"ingest.csv\"));\n     }\n \n+    /*\n+     https://bugtrack.marklogic.com/54003\n+     When stemmed search is set to \"advanced\", fetching step definition fails and hence running flow would fail in all server versions.\n+     After that if db is re-indexed, fetching flow succeeds in versions < 10.0-4 and fails in version >=10.0-5 and nightly server.\n+     With this server fix, fetching step definition, legacy mappings (and other artifacts ?) would fail and the json property value\n+     query requires 'lang=zxx' to be included in order to ensure artifacts can be fetched if stemming (and/or reindexing is done) is turned on.\n+     */\n+    @Test\n+    void runFlowWithStemmingSearch() throws InterruptedException {\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assumptions.assumeTrue(mlVersion.getMajor() >=10);\n+        HubConfig hubConfig = runAsDataHubDeveloper();\n+        try{\n+            updateStemmingOnStagingDb(hubConfig,true);\n+            RunFlowResponse resp = runFlow();\n+            Assertions.assertTrue(JobStatus.STOP_ON_ERROR.toString().equalsIgnoreCase(resp.getJobStatus()));\n+            hubConfig = runAsDataHubDeveloper();\n+            DatabaseManager dbManager = new DatabaseManager(hubConfig.getManageClient());\n+            dbManager.reindexDatabase(hubConfig.getDbName(DatabaseKind.STAGING));\n+            String query = \"(\\n\" +\n+                \"  for $forest-id in xdmp:database-forests(xdmp:database('data-hub-STAGING'))\\n\" +\n+                \"  return xdmp:forest-status($forest-id)//*:reindexing\\n\" +\n+                \") = fn:true()\";\n+            StringHandle stringHandle;\n+            String status;\n+            int attempts = 5;\n+            do{\n+                Thread.sleep(5000L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI5NjY0NQ=="}, "originalCommit": {"oid": "3ee5021d8c3c4641c949995cac04a4b8db577a57"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ee5021d8c3c4641c949995cac04a4b8db577a57", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3ee5021d8c3c4641c949995cac04a4b8db577a57", "committedDate": "2020-09-19T07:05:50Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to \"advanced\""}, "afterCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d8a56647475175ae56d315bfb59d18e8b6a515be", "committedDate": "2020-09-29T07:11:24Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced and db reindexed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NDEyOTYz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-498412963", "createdAt": "2020-09-29T12:27:40Z", "commit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyNzo0MFrOHZqoUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozNTo1N1rOHZq8cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NDg5Ng==", "bodyText": "For consistency, can you name this \"RunFlowWithStemmingEnabledTest\"?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r496674896", "createdAt": "2020-09-29T12:27:40Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/StemmingTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.marklogic.hub.flow.impl;\n+\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.job.JobStatus;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class StemmingTest extends AbstractHubCoreTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NTczNg==", "bodyText": "Should this go to develop or 5.4-develop - is there any benefit having it on develop?\nIf you go to 5.4-develop, you can use the runFlow method that handles everything for you. Actually, that's on develop too.\nIn any case, don't use Autowired here - that can causes problems with parallel tests since FlowRunnerImpl isn't a thread-safe class.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r496675736", "createdAt": "2020-09-29T12:29:02Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/StemmingTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.marklogic.hub.flow.impl;\n+\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.job.JobStatus;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class StemmingTest extends AbstractHubCoreTest {\n+\n+    Database db;\n+    @Autowired\n+    FlowRunnerImpl flowRunner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NTk3Nw==", "bodyText": "Just curious, shouldn't a data-hub-developer be able to do this?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r496675977", "createdAt": "2020-09-29T12:29:27Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/StemmingTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.marklogic.hub.flow.impl;\n+\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.job.JobStatus;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class StemmingTest extends AbstractHubCoreTest {\n+\n+    Database db;\n+    @Autowired\n+    FlowRunnerImpl flowRunner;\n+\n+    @BeforeEach\n+    public void setupEach() {\n+        HubConfig hubConfig = runAsAdmin();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NzQ0Mw==", "bodyText": "assertTrue/False should really only be used when you're testing against a boolean variable. The problem is that if this fails, you don't see what the two values are.\nWhen you're not sure about case, just lowercase both, though you don't need to do that since JobStatus is already lowercased - so e.g. assertEquals(JobStatus.STOP_ON_ERROR.toString(), resp.getJobStatus().toLowerCase())", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r496677443", "createdAt": "2020-09-29T12:31:45Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/StemmingTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.marklogic.hub.flow.impl;\n+\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.job.JobStatus;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class StemmingTest extends AbstractHubCoreTest {\n+\n+    Database db;\n+    @Autowired\n+    FlowRunnerImpl flowRunner;\n+\n+    @BeforeEach\n+    public void setupEach() {\n+        HubConfig hubConfig = runAsAdmin();\n+        db = new Database(new API(hubConfig.getManageClient()), hubConfig.getDbName(DatabaseKind.STAGING));\n+        db.setStemmedSearches(\"advanced\");\n+        db.save();\n+        installProjectInFolder(\"flow-runner-test\");\n+    }\n+    /*\n+     https://bugtrack.marklogic.com/54003\n+     When stemmed search is set to \"advanced\", fetching legacy mappings (and/or step definition) fails and hence running\n+     testFlow would fail. After that if db is reindexed, fetching of artifacts succeeds. In order to apply the fix for\n+     bug 54003 in server, \"Reindex JSON language property\u201d trace event has to be added and the test should be run on\n+     nightly servers. With the fix applied, the flow will fail after reindexing as well as queries requires 'lang=zxx'\n+     to be included so as to fetch artifacts.\n+     */\n+    @Test\n+    void runFlowWithStemmingSearch() {\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assumptions.assumeTrue(mlVersion.getMajor() >=10);\n+\n+        try{\n+            RunFlowResponse resp = runFlow();\n+            Assertions.assertTrue(JobStatus.STOP_ON_ERROR.toString().equalsIgnoreCase(resp.getJobStatus()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3OTA0Mw==", "bodyText": "If this is reliable, I think it's a good thing to move up to AbstractHubTest. But for consistency, do \"Reindex\" instead of \"ReIndex\", as ML treats it as one word.\nI'm also going to open a ticket for this in ml-app-deployer, this would be a nice feature to have in there - e.g. new Database(...).waitForReindex().", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r496679043", "createdAt": "2020-09-29T12:34:23Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/StemmingTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.marklogic.hub.flow.impl;\n+\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.job.JobStatus;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class StemmingTest extends AbstractHubCoreTest {\n+\n+    Database db;\n+    @Autowired\n+    FlowRunnerImpl flowRunner;\n+\n+    @BeforeEach\n+    public void setupEach() {\n+        HubConfig hubConfig = runAsAdmin();\n+        db = new Database(new API(hubConfig.getManageClient()), hubConfig.getDbName(DatabaseKind.STAGING));\n+        db.setStemmedSearches(\"advanced\");\n+        db.save();\n+        installProjectInFolder(\"flow-runner-test\");\n+    }\n+    /*\n+     https://bugtrack.marklogic.com/54003\n+     When stemmed search is set to \"advanced\", fetching legacy mappings (and/or step definition) fails and hence running\n+     testFlow would fail. After that if db is reindexed, fetching of artifacts succeeds. In order to apply the fix for\n+     bug 54003 in server, \"Reindex JSON language property\u201d trace event has to be added and the test should be run on\n+     nightly servers. With the fix applied, the flow will fail after reindexing as well as queries requires 'lang=zxx'\n+     to be included so as to fetch artifacts.\n+     */\n+    @Test\n+    void runFlowWithStemmingSearch() {\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assumptions.assumeTrue(mlVersion.getMajor() >=10);\n+\n+        try{\n+            RunFlowResponse resp = runFlow();\n+            Assertions.assertTrue(JobStatus.STOP_ON_ERROR.toString().equalsIgnoreCase(resp.getJobStatus()));\n+\n+            HubConfig hubConfig = runAsAdmin();\n+            DatabaseManager dbManager = new DatabaseManager(hubConfig.getManageClient());\n+            dbManager.reindexDatabase(hubConfig.getDbName(DatabaseKind.STAGING));\n+\n+            waitForReIndex(runAsAdmin());\n+            resp = runFlow();\n+            Assertions.assertTrue(JobStatus.FINISHED.toString().equalsIgnoreCase(resp.getJobStatus()));\n+\n+        }\n+        finally {\n+            db.setStemmedSearches(\"off\");\n+            db.save();\n+        }\n+    }\n+\n+    private RunFlowResponse runFlow(){\n+        runAsDataHubOperator();\n+        RunFlowResponse resp = null;\n+        try{\n+            resp = flowRunner.runFlow(\"testFlow\", null, null, null, null);\n+        }\n+        catch (Exception e){\n+            logger.error(\"Flow run failed;cause: \"+ e.getMessage());\n+        }\n+\n+        flowRunner.awaitCompletion();\n+        return resp;\n+    }\n+\n+    private void waitForReIndex(HubConfig hubConfig){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4MDA1MA==", "bodyText": "One tweak to make this simpler:\nString status = hubConfig...xquery(query).evalAs(String.class);\n\nThen you don't need a StringHandle, nor do you need to fiddle with an iterator.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r496680050", "createdAt": "2020-09-29T12:35:57Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/StemmingTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package com.marklogic.hub.flow.impl;\n+\n+import com.marklogic.client.io.StringHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.job.JobStatus;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+public class StemmingTest extends AbstractHubCoreTest {\n+\n+    Database db;\n+    @Autowired\n+    FlowRunnerImpl flowRunner;\n+\n+    @BeforeEach\n+    public void setupEach() {\n+        HubConfig hubConfig = runAsAdmin();\n+        db = new Database(new API(hubConfig.getManageClient()), hubConfig.getDbName(DatabaseKind.STAGING));\n+        db.setStemmedSearches(\"advanced\");\n+        db.save();\n+        installProjectInFolder(\"flow-runner-test\");\n+    }\n+    /*\n+     https://bugtrack.marklogic.com/54003\n+     When stemmed search is set to \"advanced\", fetching legacy mappings (and/or step definition) fails and hence running\n+     testFlow would fail. After that if db is reindexed, fetching of artifacts succeeds. In order to apply the fix for\n+     bug 54003 in server, \"Reindex JSON language property\u201d trace event has to be added and the test should be run on\n+     nightly servers. With the fix applied, the flow will fail after reindexing as well as queries requires 'lang=zxx'\n+     to be included so as to fetch artifacts.\n+     */\n+    @Test\n+    void runFlowWithStemmingSearch() {\n+        Versions.MarkLogicVersion mlVersion = versions.getMLVersion();\n+        Assumptions.assumeTrue(mlVersion.getMajor() >=10);\n+\n+        try{\n+            RunFlowResponse resp = runFlow();\n+            Assertions.assertTrue(JobStatus.STOP_ON_ERROR.toString().equalsIgnoreCase(resp.getJobStatus()));\n+\n+            HubConfig hubConfig = runAsAdmin();\n+            DatabaseManager dbManager = new DatabaseManager(hubConfig.getManageClient());\n+            dbManager.reindexDatabase(hubConfig.getDbName(DatabaseKind.STAGING));\n+\n+            waitForReIndex(runAsAdmin());\n+            resp = runFlow();\n+            Assertions.assertTrue(JobStatus.FINISHED.toString().equalsIgnoreCase(resp.getJobStatus()));\n+\n+        }\n+        finally {\n+            db.setStemmedSearches(\"off\");\n+            db.save();\n+        }\n+    }\n+\n+    private RunFlowResponse runFlow(){\n+        runAsDataHubOperator();\n+        RunFlowResponse resp = null;\n+        try{\n+            resp = flowRunner.runFlow(\"testFlow\", null, null, null, null);\n+        }\n+        catch (Exception e){\n+            logger.error(\"Flow run failed;cause: \"+ e.getMessage());\n+        }\n+\n+        flowRunner.awaitCompletion();\n+        return resp;\n+    }\n+\n+    private void waitForReIndex(HubConfig hubConfig){\n+        String query = \"(\\n\" +\n+            \"  for $forest-id in xdmp:database-forests(xdmp:database('data-hub-STAGING'))\\n\" +\n+            \"  return xdmp:forest-status($forest-id)//*:reindexing\\n\" +\n+            \") = fn:true()\";\n+        StringHandle stringHandle;\n+        String status;\n+        int attempts = 1;\n+        do{\n+            sleep(1000L);\n+            stringHandle = new StringHandle();\n+            hubConfig.newStagingClient().newServerEval().xquery(query).eval().next().get(stringHandle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be"}, "originalPosition": 92}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8a56647475175ae56d315bfb59d18e8b6a515be", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d8a56647475175ae56d315bfb59d18e8b6a515be", "committedDate": "2020-09-29T07:11:24Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced and db reindexed"}, "afterCommit": {"oid": "57a9174f56859021f92b9ada57f478b291f634f7", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/57a9174f56859021f92b9ada57f478b291f634f7", "committedDate": "2020-09-29T18:48:09Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Nzg4MTg5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-498788189", "createdAt": "2020-09-29T18:59:34Z", "commit": {"oid": "57a9174f56859021f92b9ada57f478b291f634f7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODo1OTozNVrOHZ8jDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODo1OTozNVrOHZ8jDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk2ODQ2MQ==", "bodyText": "I believe there's an issue here in that if the version of ML isn't supported, then the call to set stemmed searches to \"off\" won't be executed. So I'd just move this to the test.\nIn fact, I think private methods can make this read nicely:\n\nenableAdvancedStemming();\nrun the flow and verify an error occurs (I think it'd be good to assert on the contents of stepOutput too, as we can verify there are words in there indicating that a step definition was not found)\nreindexDatabase()\nrun the flow again and verify it succeeds", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r496968461", "createdAt": "2020-09-29T18:59:35Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/impl/RunFlowWithStemmingEnabledTest.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package com.marklogic.hub.flow.impl;\n+\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.FlowInputs;\n+import com.marklogic.hub.flow.RunFlowResponse;\n+import com.marklogic.hub.impl.Versions;\n+import com.marklogic.hub.job.JobStatus;\n+import com.marklogic.mgmt.api.API;\n+import com.marklogic.mgmt.api.database.Database;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\n+\n+public class RunFlowWithStemmingEnabledTest extends AbstractHubCoreTest {\n+\n+    Database db;\n+\n+    @BeforeEach\n+    public void setupEach() {\n+        HubConfig hubConfig = runAsDataHubDeveloper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57a9174f56859021f92b9ada57f478b291f634f7"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57a9174f56859021f92b9ada57f478b291f634f7", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/57a9174f56859021f92b9ada57f478b291f634f7", "committedDate": "2020-09-29T18:48:09Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}, "afterCommit": {"oid": "78c578a4b8e868ddc02ee2fee37bd04e3454b608", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/78c578a4b8e868ddc02ee2fee37bd04e3454b608", "committedDate": "2020-09-29T20:20:23Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODc3NTc3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-498877577", "createdAt": "2020-09-29T20:43:43Z", "commit": {"oid": "78c578a4b8e868ddc02ee2fee37bd04e3454b608"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78c578a4b8e868ddc02ee2fee37bd04e3454b608", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/78c578a4b8e868ddc02ee2fee37bd04e3454b608", "committedDate": "2020-09-29T20:20:23Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}, "afterCommit": {"oid": "c868453ada34a281185a49e049a8c2430312cb69", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c868453ada34a281185a49e049a8c2430312cb69", "committedDate": "2020-09-30T00:46:07Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c868453ada34a281185a49e049a8c2430312cb69", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c868453ada34a281185a49e049a8c2430312cb69", "committedDate": "2020-09-30T00:46:07Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}, "afterCommit": {"oid": "3ab680ad831e7c533e049472639d7fae15e8a96a", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3ab680ad831e7c533e049472639d7fae15e8a96a", "committedDate": "2020-09-30T07:18:21Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ab680ad831e7c533e049472639d7fae15e8a96a", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3ab680ad831e7c533e049472639d7fae15e8a96a", "committedDate": "2020-09-30T07:18:21Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}, "afterCommit": {"oid": "526d065be6d46a89277d07a826202f973ee03e5d", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/526d065be6d46a89277d07a826202f973ee03e5d", "committedDate": "2020-09-30T07:21:58Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTQ5MjI2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-499149226", "createdAt": "2020-09-30T07:23:26Z", "commit": {"oid": "526d065be6d46a89277d07a826202f973ee03e5d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoyMzoyNlrOHaQdVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzoyMzoyNlrOHaQdVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI5NDY3Nw==", "bodyText": "The test keeps failing in the pipeline even though it passed in my local. I am increasing the sleep time to see of if the test passes. I will then work to see why the query isn't reliable.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#discussion_r497294677", "createdAt": "2020-09-30T07:23:26Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/testFixtures/java/com/marklogic/hub/test/AbstractHubTest.java", "diffHunk": "@@ -529,6 +529,26 @@ protected RunFlowResponse runFlow(FlowInputs flowInputs) {\n         return response;\n     }\n \n+    protected void waitForReindex(HubConfig hubConfig, String database){\n+        String query = \"(\\n\" +\n+            \"  for $forest-id in xdmp:database-forests(xdmp:database('\" + database + \"'))\\n\" +\n+            \"  return xdmp:forest-status($forest-id)//*:reindexing\\n\" +\n+            \") = fn:true()\";\n+        String status;\n+        int attempts = 0;\n+        do{\n+            sleep(15000L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "526d065be6d46a89277d07a826202f973ee03e5d"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjIzNjkz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-499623693", "createdAt": "2020-09-30T16:44:33Z", "commit": {"oid": "526d065be6d46a89277d07a826202f973ee03e5d"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "526d065be6d46a89277d07a826202f973ee03e5d", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/526d065be6d46a89277d07a826202f973ee03e5d", "committedDate": "2020-09-30T07:21:58Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}, "afterCommit": {"oid": "606a70356068d8556ba803c1e53fc887e9fe5805", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/606a70356068d8556ba803c1e53fc887e9fe5805", "committedDate": "2020-09-30T23:20:01Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdeb041614039138027faeb3d27b45948bdbf8ea", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fdeb041614039138027faeb3d27b45948bdbf8ea", "committedDate": "2020-10-01T16:40:50Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "606a70356068d8556ba803c1e53fc887e9fe5805", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/606a70356068d8556ba803c1e53fc887e9fe5805", "committedDate": "2020-09-30T23:20:01Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}, "afterCommit": {"oid": "fdeb041614039138027faeb3d27b45948bdbf8ea", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fdeb041614039138027faeb3d27b45948bdbf8ea", "committedDate": "2020-10-01T16:40:50Z", "message": "DHFPROD-5991:Add test to run flow with stemming searches set to advanced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjY3NzU0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-500667754", "createdAt": "2020-10-01T19:49:00Z", "commit": {"oid": "fdeb041614039138027faeb3d27b45948bdbf8ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzAyOTg0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4589#pullrequestreview-500702984", "createdAt": "2020-10-01T20:42:23Z", "commit": {"oid": "fdeb041614039138027faeb3d27b45948bdbf8ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2095, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}