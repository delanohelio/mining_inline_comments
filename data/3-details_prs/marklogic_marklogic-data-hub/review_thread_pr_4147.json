{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTM5MzMx", "number": 4147, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjozNjo0N1rOEJBQag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0OTo1MlrOEJCa4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODkzMjI2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjozNjo0N1rOGpVWeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTo0NzozNlrOGpl0oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NDYxNw==", "bodyText": "Can we delete these commented out lines.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4147#discussion_r445994617", "createdAt": "2020-06-26T06:36:47Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "diffHunk": "@@ -202,12 +202,14 @@ const Query = (props) => {\n             toggleSaveChangesIcon(false);\n             toggleDiscardIcon(false);\n         }\n+\n+        // setColumnSelectorTouched(JSON.stringify(searchOptions.selectedTableProperties) !== JSON.stringify(props.columns))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a8fcf4c45d337c36fa6a920abcbcb86ccbbfa2"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2NDQ4MQ==", "bodyText": "Removed.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4147#discussion_r446264481", "createdAt": "2020-06-26T15:47:36Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "diffHunk": "@@ -202,12 +202,14 @@ const Query = (props) => {\n             toggleSaveChangesIcon(false);\n             toggleDiscardIcon(false);\n         }\n+\n+        // setColumnSelectorTouched(JSON.stringify(searchOptions.selectedTableProperties) !== JSON.stringify(props.columns))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NDYxNw=="}, "originalCommit": {"oid": "58a8fcf4c45d337c36fa6a920abcbcb86ccbbfa2"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODkzMjQ2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjozNjo1MlrOGpVWnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTo0Nzo0M1rOGpl07g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NDY1Mw==", "bodyText": "Can we delete these commented out lines.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4147#discussion_r445994653", "createdAt": "2020-06-26T06:36:52Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "diffHunk": "@@ -65,7 +65,8 @@ const Query = (props) => {\n                     entityTypeIds: searchOptions.entityTypeIds.length ? searchOptions.entityTypeIds : props.entities,\n                     selectedFacets: facets,\n                 },\n-                propertiesToDisplay: props.columns,\n+                // propertiesToDisplay: props.columns,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a8fcf4c45d337c36fa6a920abcbcb86ccbbfa2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI2NDU1OA==", "bodyText": "Removed.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4147#discussion_r446264558", "createdAt": "2020-06-26T15:47:43Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/queries/queries.tsx", "diffHunk": "@@ -65,7 +65,8 @@ const Query = (props) => {\n                     entityTypeIds: searchOptions.entityTypeIds.length ? searchOptions.entityTypeIds : props.entities,\n                     selectedFacets: facets,\n                 },\n-                propertiesToDisplay: props.columns,\n+                // propertiesToDisplay: props.columns,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5NDY1Mw=="}, "originalCommit": {"oid": "58a8fcf4c45d337c36fa6a920abcbcb86ccbbfa2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTEyMjkxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzo0OTo1MlrOGpXLKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjoxNzo1N1rOGpm1Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyNDQ4OA==", "bodyText": "both \"Carm\" and \"din\" can be in different cells and still the test would pass. We want to verify that both Carm and din are in the same cell. Try using:\nexpect(getByText('Carm').closest('td')).toEqual(getByText('din').closest('td'))", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4147#discussion_r446024488", "createdAt": "2020-06-26T07:49:52Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.test.tsx", "diffHunk": "@@ -47,4 +46,23 @@ describe(\"Results Table view component\", () => {\n         // Check for Empty Table\n         expect(getByText(/No Data/i)).toBeInTheDocument();\n     });\n+\n+    test('Array data renders properly', () => {\n+        const {  getByText, queryByText } = render(\n+                <ResultsTabularView\n+                    data={entitySearch.results}\n+                    entityPropertyDefinitions={entityPropertyDefinitions}\n+                    selectedPropertyDefinitions={selectedPropertyDefinitions}\n+                    columns={[]}\n+                    hasStructured={false}\n+                />\n+        )\n+        // Check table column headers are rendered\n+        expect(queryByText('Carmdin')).toBeNull();\n+        expect(queryByText('Carm din')).toBeNull();\n+        expect(getByText('Carm')).toBeInTheDocument();\n+        expect(getByText('din')).toBeInTheDocument();\n+        expect(getByText('Carm')).toContainHTML('<div style=\"text-overflow: ellipsis; overflow: hidden;\">Carm</div>');\n+        expect(getByText('din')).toContainHTML('<div style=\"text-overflow: ellipsis; overflow: hidden;\">din</div>');\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58a8fcf4c45d337c36fa6a920abcbcb86ccbbfa2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI4MDk3NQ==", "bodyText": "Added. Thank you.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4147#discussion_r446280975", "createdAt": "2020-06-26T16:17:57Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/results-tabular-view/results-tabular-view.test.tsx", "diffHunk": "@@ -47,4 +46,23 @@ describe(\"Results Table view component\", () => {\n         // Check for Empty Table\n         expect(getByText(/No Data/i)).toBeInTheDocument();\n     });\n+\n+    test('Array data renders properly', () => {\n+        const {  getByText, queryByText } = render(\n+                <ResultsTabularView\n+                    data={entitySearch.results}\n+                    entityPropertyDefinitions={entityPropertyDefinitions}\n+                    selectedPropertyDefinitions={selectedPropertyDefinitions}\n+                    columns={[]}\n+                    hasStructured={false}\n+                />\n+        )\n+        // Check table column headers are rendered\n+        expect(queryByText('Carmdin')).toBeNull();\n+        expect(queryByText('Carm din')).toBeNull();\n+        expect(getByText('Carm')).toBeInTheDocument();\n+        expect(getByText('din')).toBeInTheDocument();\n+        expect(getByText('Carm')).toContainHTML('<div style=\"text-overflow: ellipsis; overflow: hidden;\">Carm</div>');\n+        expect(getByText('din')).toContainHTML('<div style=\"text-overflow: ellipsis; overflow: hidden;\">din</div>');\n+    });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyNDQ4OA=="}, "originalCommit": {"oid": "58a8fcf4c45d337c36fa6a920abcbcb86ccbbfa2"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3935, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}