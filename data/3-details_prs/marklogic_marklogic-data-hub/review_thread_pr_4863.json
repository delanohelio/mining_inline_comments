{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMzM3ODYz", "number": 4863, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjo0OTo0M1rOE5eNaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo1MzoxOVrOE5m3Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4Njk5MjQwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjo0OTo0M1rOHz9JWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzozMzozMlrOH0J10Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI0MTI0MQ==", "bodyText": "We don't want to include logback as a compile dependency, as that can cause issues for applications that depend on the DHF library as a dependency (it's not considered good form for libraries to include logging implementations either).\nI found this link for Spring Boot 1.x that shows a mechanism for creating a custom Gradle configuration that excludes a logging dependency - https://docs.spring.io/spring-boot/docs/1.2.0.M1/reference/html/build-tool-plugins-gradle-plugin.html#build-tool-plugins-gradle-repackage-custom-configuration\nI didn't find something similar in the Spring Boot 2.1.x docs though - https://docs.spring.io/spring-boot/docs/2.1.18.RELEASE/reference/html/build-tool-plugins-gradle-plugin.html\nCheck for something like this though. Also test out the client JAR, which expects logging to work and in theory would have the same issue.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4863#discussion_r524241241", "createdAt": "2020-11-16T12:49:43Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/build.gradle", "diffHunk": "@@ -62,7 +62,7 @@ dependencies {\n \n     compile 'commons-io:commons-io:2.4'\n     compile 'org.apache.commons:commons-text:1.1'\n-\n+    compile 'ch.qos.logback:logback-classic:1.2.3'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b53a70ad16399060529b2bd003afa27b305da617"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI2Njc2NQ==", "bodyText": "I tried this locally, it seems to do the trick - be sure to test out both the client JAR and installer JAR:\nconfigurations {\n    datahubLogging\n}\n\ndependencies {\n  ...\n  datahubLogging 'ch.qos.logback:logback-classic:1.2.3'\n}\n\n// add this to both clientJar and bootJar\nfrom(configurations.datahubLogging.collect { it.isDirectory() ? it : zipTree(it) }) {\n        exclude \"META-INF/*.SF\"\n        exclude \"META-INF/*.DSA\"\n        exclude \"META-INF/*.RSA\"\n    }", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4863#discussion_r524266765", "createdAt": "2020-11-16T13:28:37Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/build.gradle", "diffHunk": "@@ -62,7 +62,7 @@ dependencies {\n \n     compile 'commons-io:commons-io:2.4'\n     compile 'org.apache.commons:commons-text:1.1'\n-\n+    compile 'ch.qos.logback:logback-classic:1.2.3'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI0MTI0MQ=="}, "originalCommit": {"oid": "b53a70ad16399060529b2bd003afa27b305da617"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ0OTIzMw==", "bodyText": "It works fine for both client and installer jars. Thanks for the info on configuration. I will check it out.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4863#discussion_r524449233", "createdAt": "2020-11-16T17:33:32Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/build.gradle", "diffHunk": "@@ -62,7 +62,7 @@ dependencies {\n \n     compile 'commons-io:commons-io:2.4'\n     compile 'org.apache.commons:commons-text:1.1'\n-\n+    compile 'ch.qos.logback:logback-classic:1.2.3'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI0MTI0MQ=="}, "originalCommit": {"oid": "b53a70ad16399060529b2bd003afa27b305da617"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODQwOTkwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo1MzoxOVrOH0KniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo1MzoxOVrOH0KniA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2MTk2MA==", "bodyText": "Sorry one more thing - can you add a comment on this explaining why it exists? We want to document that this is used so we can include a logging implementation jar in the application artifacts produced by this project - the installer and the client jars - without that ending up in the library artifact.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4863#discussion_r524461960", "createdAt": "2020-11-16T17:53:19Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/build.gradle", "diffHunk": "@@ -40,6 +40,10 @@ ext {\n     thirdPartySourcePath = \"src/main/resources/ml-modules/root/data-hub/third-party\"\n }\n \n+configurations {\n+    datahubLogging", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "332242a56904d6cd77f8c9b8d418f950f35296a2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3113, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}