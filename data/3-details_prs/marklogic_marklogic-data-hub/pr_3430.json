{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5ODc3NDIy", "number": 3430, "title": "DHFPROD-3911:Replace jsonPropertyValueQuery with pathRangeQuery", "bodyText": "Replace jsonPropertyValueQuery with pathRangeQuery", "createdAt": "2020-01-07T08:22:04Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430", "merged": true, "mergeCommit": {"oid": "2be164fd54cb9e50e3d39ea335a8f2eef7b66028"}, "closed": true, "closedAt": "2020-01-08T17:32:42Z", "author": {"login": "srinathgit"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4BYPMAFqTMzOTI1NTI4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4YLBfgFqTMzOTk5Njk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5MjU1Mjg5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#pullrequestreview-339255289", "createdAt": "2020-01-07T14:06:36Z", "commit": {"oid": "ddf3154b21fb77897ff7d9465479a49eced47241"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDowNjozNlrOFa6UHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNDoxMTowMVrOFa6biQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MjcxOA==", "bodyText": "It looks like these duplicate files are only needed for UpdateIndexesTaskTest. But after looking at that test, I don't think it's testing anything specific to DHF - it's just re-testing ml-app-deployer functionality.  DHF can safely assume that if it defines indexes in a database file, then ml-app-deployer will deploy them correctly.\nI think we should get rid of these duplicate files. My first choice is to delete them and delete UpdateIndexesTaskTest. My second choice is to delete them and modify UpdateIndexesTaskTest to copy the real files from ../marklogic-data-hub/src/main/resources/", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#discussion_r363762718", "createdAt": "2020-01-07T14:06:36Z", "author": {"login": "rjrudin"}, "path": "ml-data-hub-plugin/src/test/resources/update-indexes/final-database.xml", "diffHunk": "@@ -129,5 +129,12 @@\n       <range-value-positions>true</range-value-positions>\n       <invalid-values>reject</invalid-values>\n     </range-path-index>\n+    <range-path-index>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf3154b21fb77897ff7d9465479a49eced47241"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2MzkzMg==", "bodyText": "HubProjectImpl.upgradeProject will need to be modified to inject this index into the user's existing final-database.xml file. Odds are, the user hasn't modified it, but we don't want to overwrite the file in case the user has made modifications. The contents of the file can be read in as an XML document, and then you can just manually add this new index to it, and then write it back to disk.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#discussion_r363763932", "createdAt": "2020-01-07T14:09:23Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-config/database-fields/final-database.xml", "diffHunk": "@@ -114,5 +114,12 @@\n       <range-value-positions>true</range-value-positions>\n       <invalid-values>reject</invalid-values>\n     </range-path-index>\n+    <range-path-index>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf3154b21fb77897ff7d9465479a49eced47241"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc2NDYxNw==", "bodyText": "I think the better test to enhance is DeployDatabaseFieldCommandTest. See my comments below about what to do with UpdateIndexesTaskTest, which I don't think is proving much of anything.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#discussion_r363764617", "createdAt": "2020-01-07T14:11:01Z", "author": {"login": "rjrudin"}, "path": "ml-data-hub-plugin/src/test/groovy/com/marklogic/gradle/task/UpdateIndexesTaskTest.groovy", "diffHunk": "@@ -92,8 +92,8 @@ class UpdateIndexesTaskTest extends BaseTest {\n \t\tresult.task(\":mlUpdateIndexes\").outcome == SUCCESS\n \n         //Test to verify range-path-index for mlUpdateIndex\n-\t\tassert (getStagingIndexValuesSize('//m:range-path-index') == 2)\n-\t\tassert (getFinalIndexValuesSize('//m:range-path-index') == 2)\n+\t\tassert (getStagingIndexValuesSize('//m:range-path-index') == 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf3154b21fb77897ff7d9465479a49eced47241"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ddf3154b21fb77897ff7d9465479a49eced47241", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/ddf3154b21fb77897ff7d9465479a49eced47241", "committedDate": "2020-01-07T08:19:40Z", "message": "DHFPROD-3911:Replace jsonPropertyValueQuery with pathRangeQuery"}, "afterCommit": {"oid": "58d25636905e56f68fd132f317b59012179a14e9", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/58d25636905e56f68fd132f317b59012179a14e9", "committedDate": "2020-01-08T00:20:56Z", "message": "DHFPROD-3911:Replace jsonPropertyValueQuery with pathRangeQuery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NTk2Mjky", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#pullrequestreview-339596292", "createdAt": "2020-01-08T00:54:03Z", "commit": {"oid": "58d25636905e56f68fd132f317b59012179a14e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDo1NDowNFrOFbKJFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMDo1NDowNFrOFbKJFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyMjAzOQ==", "bodyText": "I think this is okay. I was initially worried that by throwing the exception, the user would think that hubUpgrade failed. But in reality, almost all of it succeeded except the last step. I think the error message could do a better job in explaining what failed - e.g. \"Error while upgrading project; was not able to add //actionDetails/*/uris path range index to final-database.xml file; cause: \" + ex.getMessage().\n@srinathgit  Thoughts on throwing the error, or just logging it?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#discussion_r364022039", "createdAt": "2020-01-08T00:54:04Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/HubProjectImpl.java", "diffHunk": "@@ -542,6 +555,67 @@ public void upgradeProject() throws IOException {\n         }\n         upgradeFlows();\n         removeEmptyRangeElementIndexArrayFromFinalDatabaseFile();\n+        addPathRangeIndexesToFinalDatabase();\n+    }\n+\n+    private void addPathRangeIndexesToFinalDatabase() {\n+        File finalDbFile = getUserConfigDir().resolve(\"database-fields\").resolve(\"final-database.xml\").toFile();\n+        try {\n+            FileInputStream fileInputStream = new FileInputStream(finalDbFile);\n+            DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n+            DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n+\n+            Document document = documentBuilder.parse(fileInputStream);\n+\n+            XPathFactory xPathFactory = XPathFactory.newInstance();\n+            XPath xPath = xPathFactory.newXPath();\n+\n+            XPathExpression expr = xPath.compile(\"//range-path-index/*[local-name()='path-expression']/text()='//actionDetails/*/uris'\");\n+\n+            Boolean isNodePresent = Boolean.parseBoolean(expr.evaluate(document));\n+\n+            if(!isNodePresent) {\n+                Node node = (Node) xPath\n+                    .evaluate(\"//*[local-name()='range-path-indexes']\", document.getDocumentElement(), XPathConstants.NODE);\n+\n+                Node newNode = node.appendChild(document.createElement(\"range-path-index\"));\n+\n+                Element scalarType = document.createElement(\"scalar-type\");\n+                scalarType.setTextContent(\"string\");\n+\n+                Element collation = document.createElement(\"scalar-type\");\n+                collation.setTextContent(\"http://marklogic.com/collation/\");\n+\n+                Element pathExpression = document.createElement(\"path-expression\");\n+                pathExpression.setTextContent(\"//actionDetails/*/uris\");\n+\n+                Element rangeValuePosition = document.createElement(\"range-value-positions\");\n+                rangeValuePosition.setTextContent(\"true\");\n+\n+                Element invalidValues = document.createElement(\"invalid-values\");\n+                invalidValues.setTextContent(\"reject\");\n+\n+                newNode.appendChild(scalarType);\n+                newNode.appendChild(collation);\n+                newNode.appendChild(pathExpression);\n+                newNode.appendChild(rangeValuePosition);\n+                newNode.appendChild(invalidValues);\n+\n+                TransformerFactory tf = TransformerFactory.newInstance();\n+                Transformer transformer = tf.newTransformer();\n+                transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n+                transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n+                transformer.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n+                transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"2\");\n+\n+                transformer.transform(new DOMSource(document),\n+                    new StreamResult(new OutputStreamWriter(new FileOutputStream(finalDbFile), \"UTF-8\")));\n+            }\n+        }\n+        catch (Exception e) {\n+            throw new DataHubProjectException(\"Unable to upgrade the project: Failed to add index to final database\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d25636905e56f68fd132f317b59012179a14e9"}, "originalPosition": 106}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6b6fafadf717f665b42514c9bdf22e4b9608938", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b6b6fafadf717f665b42514c9bdf22e4b9608938", "committedDate": "2020-01-08T04:41:45Z", "message": "DHFPROD-3911:Replace jsonPropertyValueQuery with pathRangeQuery"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58d25636905e56f68fd132f317b59012179a14e9", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/58d25636905e56f68fd132f317b59012179a14e9", "committedDate": "2020-01-08T00:20:56Z", "message": "DHFPROD-3911:Replace jsonPropertyValueQuery with pathRangeQuery"}, "afterCommit": {"oid": "b6b6fafadf717f665b42514c9bdf22e4b9608938", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b6b6fafadf717f665b42514c9bdf22e4b9608938", "committedDate": "2020-01-08T04:41:45Z", "message": "DHFPROD-3911:Replace jsonPropertyValueQuery with pathRangeQuery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5ODgwNDc3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#pullrequestreview-339880477", "createdAt": "2020-01-08T13:59:49Z", "commit": {"oid": "b6b6fafadf717f665b42514c9bdf22e4b9608938"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTk2OTQ0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3430#pullrequestreview-339996944", "createdAt": "2020-01-08T16:44:27Z", "commit": {"oid": "b6b6fafadf717f665b42514c9bdf22e4b9608938"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2317, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}