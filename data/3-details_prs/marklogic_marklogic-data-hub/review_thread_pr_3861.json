{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTY3Nzk4", "number": 3861, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjozMjoyM1rOD1AGJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1MjowN1rOD1X_Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTAyNjk1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjozMjoyM1rOGKOj_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjo1Mzo0OFrOGKPIaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM3NzUzMw==", "bodyText": "@timur-isangulov, I see there are two useEffects in this file, Any reason for using two useEffects calling the same function ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413377533", "createdAt": "2020-04-22T22:32:23Z", "author": {"login": "Sanjeevani19"}, "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query.tsx", "diffHunk": "@@ -0,0 +1,224 @@\n+import React, { useState, useEffect, useContext } from 'react';\n+import { Modal, Button, Table } from 'antd';\n+import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n+import { faPencilAlt, faFileExport, faLink, faTrashAlt, faListOl } from \"@fortawesome/free-solid-svg-icons\";\n+import { UserContext } from '../../../util/user-context';\n+import { queryDateConverter } from '../../../util/date-conversion';\n+import EditQueryDialog from './edit-query-dialog/edit-query-dialog'\n+import { SearchContext } from '../../../util/search-context';\n+import styles from './manage-query.module.scss';\n+import { fetchQueries, updateQuery, removeQuery } from '../../../api/queries'\n+\n+\n+const QueryModal: React.FC = () => {\n+\n+    const [queries, setQueries] = useState([]);\n+    const { handleError, resetSessionTime } = useContext(UserContext);\n+    const { applyQuery } = useContext(SearchContext);\n+    const [mainModalVisibility, setMainModalVisibility] = useState(false);\n+    const [editModalVisibility, setEditModalVisibility] = useState(false);\n+    const [deleteModalVisibility, setDeleteModalVisibility] = useState(false);\n+    const [selectedQuery, setSelectedQuery] = useState({});\n+    const [queryName, setQueryName] = useState('');\n+    const data = new Array();\n+\n+    useEffect(() => {\n+        getQueries();\n+    }, []);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2d73454c188ee47e43c682a3ad190516d0ccd66"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4Njg1Nw==", "bodyText": "Not needed, removed.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413386857", "createdAt": "2020-04-22T22:53:48Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query.tsx", "diffHunk": "@@ -0,0 +1,224 @@\n+import React, { useState, useEffect, useContext } from 'react';\n+import { Modal, Button, Table } from 'antd';\n+import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n+import { faPencilAlt, faFileExport, faLink, faTrashAlt, faListOl } from \"@fortawesome/free-solid-svg-icons\";\n+import { UserContext } from '../../../util/user-context';\n+import { queryDateConverter } from '../../../util/date-conversion';\n+import EditQueryDialog from './edit-query-dialog/edit-query-dialog'\n+import { SearchContext } from '../../../util/search-context';\n+import styles from './manage-query.module.scss';\n+import { fetchQueries, updateQuery, removeQuery } from '../../../api/queries'\n+\n+\n+const QueryModal: React.FC = () => {\n+\n+    const [queries, setQueries] = useState([]);\n+    const { handleError, resetSessionTime } = useContext(UserContext);\n+    const { applyQuery } = useContext(SearchContext);\n+    const [mainModalVisibility, setMainModalVisibility] = useState(false);\n+    const [editModalVisibility, setEditModalVisibility] = useState(false);\n+    const [deleteModalVisibility, setDeleteModalVisibility] = useState(false);\n+    const [selectedQuery, setSelectedQuery] = useState({});\n+    const [queryName, setQueryName] = useState('');\n+    const data = new Array();\n+\n+    useEffect(() => {\n+        getQueries();\n+    }, []);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM3NzUzMw=="}, "originalCommit": {"oid": "c2d73454c188ee47e43c682a3ad190516d0ccd66"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTEwNjMyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/support/components/query/edit-queries-modal.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMjo1ODoyNlrOGKPQow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMzoxMTowOFrOGKPkcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4ODk2Mw==", "bodyText": "@timur-isangulov , I don't see any integration or unit tests for edit or deleting a query, Any reason for that ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413388963", "createdAt": "2020-04-22T22:58:26Z", "author": {"login": "Sanjeevani19"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/support/components/query/edit-queries-modal.tsx", "diffHunk": "@@ -0,0 +1,6 @@\n+class EditQuery {\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f59eea3991081c09a0552925b28b1a0dcf72caf"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM5MTg1MA==", "bodyText": "There is currently no functionality to add query on the unit test level or via UI because save query story is in development. I will add all the tests later when save query related stories are completed.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413391850", "createdAt": "2020-04-22T23:05:48Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/support/components/query/edit-queries-modal.tsx", "diffHunk": "@@ -0,0 +1,6 @@\n+class EditQuery {\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4ODk2Mw=="}, "originalCommit": {"oid": "3f59eea3991081c09a0552925b28b1a0dcf72caf"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM5NDAzNQ==", "bodyText": "Okay, makes sense to me, I see that you have created a seperate file for all the query api's, once your PR is merged I can add additional api's to that file. That would be helpful for mocking api's as well. So approving the PR.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413394035", "createdAt": "2020-04-22T23:11:08Z", "author": {"login": "Sanjeevani19"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/support/components/query/edit-queries-modal.tsx", "diffHunk": "@@ -0,0 +1,6 @@\n+class EditQuery {\n+\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM4ODk2Mw=="}, "originalCommit": {"oid": "3f59eea3991081c09a0552925b28b1a0dcf72caf"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjg0Mjk1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/App.scss", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjozMToxMlrOGKxRUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzoyMDowOFrOGKzY-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk0NjE5Mw==", "bodyText": "This alert color should be applied globally at the theme level.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413946193", "createdAt": "2020-04-23T16:31:12Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/App.scss", "diffHunk": "@@ -145,3 +145,11 @@ div#error-list div.ant-collapse div.ant-collapse-item div.ant-collapse-content d\n   background: #44499C;\n   color: #fff;\n }\n+\n+.has-error .ant-input, .has-error .ant-input:focus{\n+  border-color: #B32424;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f59eea3991081c09a0552925b28b1a0dcf72caf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk4MDkyMg==", "bodyText": "Fixed. Thanks.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413980922", "createdAt": "2020-04-23T17:20:08Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/src/App.scss", "diffHunk": "@@ -145,3 +145,11 @@ div#error-list div.ant-collapse div.ant-collapse-item div.ant-collapse-content d\n   background: #44499C;\n   color: #fff;\n }\n+\n+.has-error .ant-input, .has-error .ant-input:focus{\n+  border-color: #B32424;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk0NjE5Mw=="}, "originalCommit": {"oid": "3f59eea3991081c09a0552925b28b1a0dcf72caf"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjk0MTM5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/util/date-conversion.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1MjowN1rOGKyMcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1MjowN1rOGKyMcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2MTMzMQ==", "bodyText": "MMM should be MM", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3861#discussion_r413961331", "createdAt": "2020-04-23T16:52:07Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/util/date-conversion.tsx", "diffHunk": "@@ -8,3 +8,7 @@ export const relativeTimeConverter = (date:string) => {\n   return moment(date).fromNow();\n }\n \n+export const queryDateConverter = (date:string) => {\n+  return moment(date).format(\"DD-MMM-YY HH:mm\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f59eea3991081c09a0552925b28b1a0dcf72caf"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3434, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}