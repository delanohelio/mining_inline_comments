{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODg2MDYz", "number": 3695, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxMToxNVrODn6SEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxNjo0N1rODn6Y9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTc1OTU0OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxMToxNVrOF2L00Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxMToxNVrOF2L00Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2MTE2OQ==", "bodyText": "I agree with including this here, as this is job stuff that's specific to models, as opposed to job stuff that is global to a project.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392361169", "createdAt": "2020-03-13T17:11:15Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "diffHunk": "@@ -60,4 +62,18 @@ ModelManager modelManager() {\n         JsonNode json = modelManager.getModel(modelName);\n         return new ResponseEntity<>(json, HttpStatus.OK);\n     }\n+\n+    @RequestMapping(value = \"/job-info\", method = RequestMethod.GET)\n+    @ResponseBody\n+    public ResponseEntity<?> getLatestJobInfoForAllModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTc2MzgwOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxMjo0MlrOF2L3rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQyMjowOTo1NFrOF2hmLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2MTkwMQ==", "bodyText": "One tweak I'd make because I like single-line methods in a controller - no need to change now, but I'd just do this:\nreturn new ResponseEntity<>(modelManager.getLatestJobInfoForAllModels(), HttpStatus.OK);\n\nAnd since I'm really lazy, I'd have an AbstractController class with generic reusable methods, such as one that would let me do this here instead:\nreturn ok(modelManager.getLatestJobInfoForAllModels());", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392361901", "createdAt": "2020-03-13T17:12:42Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "diffHunk": "@@ -60,4 +62,18 @@ ModelManager modelManager() {\n         JsonNode json = modelManager.getModel(modelName);\n         return new ResponseEntity<>(json, HttpStatus.OK);\n     }\n+\n+    @RequestMapping(value = \"/job-info\", method = RequestMethod.GET)\n+    @ResponseBody\n+    public ResponseEntity<?> getLatestJobInfoForAllModels() {\n+        List<JsonNode> modelList = modelManager.getLatestJobInfoForAllModels();\n+        return new ResponseEntity<>(modelList, HttpStatus.OK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ4MDcyMw==", "bodyText": "Good idea.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392480723", "createdAt": "2020-03-13T21:13:17Z", "author": {"login": "akshaysonvane"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "diffHunk": "@@ -60,4 +62,18 @@ ModelManager modelManager() {\n         JsonNode json = modelManager.getModel(modelName);\n         return new ResponseEntity<>(json, HttpStatus.OK);\n     }\n+\n+    @RequestMapping(value = \"/job-info\", method = RequestMethod.GET)\n+    @ResponseBody\n+    public ResponseEntity<?> getLatestJobInfoForAllModels() {\n+        List<JsonNode> modelList = modelManager.getLatestJobInfoForAllModels();\n+        return new ResponseEntity<>(modelList, HttpStatus.OK);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2MTkwMQ=="}, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxNzg2OA==", "bodyText": "Added 3029f55", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392717868", "createdAt": "2020-03-15T22:09:54Z", "author": {"login": "akshaysonvane"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/ModelController.java", "diffHunk": "@@ -60,4 +62,18 @@ ModelManager modelManager() {\n         JsonNode json = modelManager.getModel(modelName);\n         return new ResponseEntity<>(json, HttpStatus.OK);\n     }\n+\n+    @RequestMapping(value = \"/job-info\", method = RequestMethod.GET)\n+    @ResponseBody\n+    public ResponseEntity<?> getLatestJobInfoForAllModels() {\n+        List<JsonNode> modelList = modelManager.getLatestJobInfoForAllModels();\n+        return new ResponseEntity<>(modelList, HttpStatus.OK);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2MTkwMQ=="}, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTc3NzE4OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/managers/ModelManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNzoxNjo0N1rOF2MASA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMToxMzoyMVrOF2TIDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NDEwNA==", "bodyText": "Why would the user not be authorized? I'm wondering more generally - why would we call this method if the user isn't authorized? This seems like something we'd want to handle via authorities - I think Spring Security has a method for checking this programmatically so an exception isn't thrown right away - e.g. https://stackoverflow.com/questions/3021200/how-to-check-hasrole-in-java-code-with-spring-security .\nI think this needs to be changed because if this exception occurs for some other reason, we don't necessarily want to just log it and move on.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392364104", "createdAt": "2020-03-13T17:16:47Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/managers/ModelManager.java", "diffHunk": "@@ -154,4 +157,43 @@ public JsonNode getModel(String modelName) {\n \n         return handle.get();\n     }\n+\n+    /**\n+     * Get latest job info for specified model\n+     *\n+     * @param modelName Name of the entity model\n+     * @return - a JsonNode containing job info\n+     */\n+    public JsonNode getLatestJobInfo(String modelName) {\n+        return getJobInfoFromDB(finalDataServiceClient, modelName);\n+    }\n+\n+    /**\n+     * Get latest job info for all models\n+     *\n+     * @return - a list of JsonNode containing job info\n+     */\n+    public List<JsonNode> getLatestJobInfoForAllModels() {\n+        return getModelNames()\n+            .stream()\n+            .map(s -> getJobInfoFromDB(finalDataServiceClient, s))\n+            .filter(Objects::nonNull)\n+            .collect(Collectors.toList());\n+    }\n+\n+    JsonNode getJobInfoFromDB(DatabaseClient dbClient, String modelName) {\n+        JsonNode node = null;\n+        try {\n+            node = JobInfo.on(dbClient).getLatestJobData(modelName);\n+        }\n+        catch (MarkLogicServerException e) {\n+            /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ4MDc4MA==", "bodyText": "Explore has two users, the architect user that can only access the entity models but not the entity instances and the user that can access both the entity models and instances.\nThe explorer architect user won't have access to this job info data service endpoint and in that case, the UI does not show any data in the last harmonized timestamp column.\nNow, that we have authorities we can rely on them to hide that column from the UI.\nI'll just create a task to check for the right authority for now as this would require additional work on the UI to hide the extra column for an explorer architect user. Making the change just on the backend will break the app as the frontend would not handle the 403 access denied when this call is made.\nWe can take up this task up once @brucean52 completes the task of merging the frontend explorer code with OneUI.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3695#discussion_r392480780", "createdAt": "2020-03-13T21:13:21Z", "author": {"login": "akshaysonvane"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/managers/ModelManager.java", "diffHunk": "@@ -154,4 +157,43 @@ public JsonNode getModel(String modelName) {\n \n         return handle.get();\n     }\n+\n+    /**\n+     * Get latest job info for specified model\n+     *\n+     * @param modelName Name of the entity model\n+     * @return - a JsonNode containing job info\n+     */\n+    public JsonNode getLatestJobInfo(String modelName) {\n+        return getJobInfoFromDB(finalDataServiceClient, modelName);\n+    }\n+\n+    /**\n+     * Get latest job info for all models\n+     *\n+     * @return - a list of JsonNode containing job info\n+     */\n+    public List<JsonNode> getLatestJobInfoForAllModels() {\n+        return getModelNames()\n+            .stream()\n+            .map(s -> getJobInfoFromDB(finalDataServiceClient, s))\n+            .filter(Objects::nonNull)\n+            .collect(Collectors.toList());\n+    }\n+\n+    JsonNode getJobInfoFromDB(DatabaseClient dbClient, String modelName) {\n+        JsonNode node = null;\n+        try {\n+            node = JobInfo.on(dbClient).getLatestJobData(modelName);\n+        }\n+        catch (MarkLogicServerException e) {\n+            /*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NDEwNA=="}, "originalCommit": {"oid": "60ad736797c9d8db9e5f8597a2e8e0ea987cb5e0"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3476, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}