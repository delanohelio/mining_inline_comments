{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNzQ4OTA0", "number": 4692, "title": "DHFPROD-5254: Add Synonym Type to Single Ruleset Modal", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-10-09T18:16:20Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692", "merged": true, "mergeCommit": {"oid": "92583949eedc72694d8b29eb60b7f4f93915a706"}, "closed": true, "closedAt": "2020-10-12T20:02:10Z", "author": {"login": "brucean52"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRz8mjAFqTUwNjYxNjY1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdR5nGvgFqTUwNjg4MjE4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjE2NjUz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#pullrequestreview-506616653", "createdAt": "2020-10-12T13:25:18Z", "commit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjE4Nzgz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#pullrequestreview-506618783", "createdAt": "2020-10-12T13:27:59Z", "commit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzoyNzo1OVrOHf-vAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzozNjozMFrOHf_D5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5NTc0NQ==", "bodyText": "Should be \"URI\" instead of \"uri\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#discussion_r503295745", "createdAt": "2020-10-12T13:27:59Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/entities/matching/ruleset-single-modal/ruleset-single-modal.tsx", "diffHunk": "@@ -37,19 +39,37 @@ const { MLOption } = MLSelect;\n const MatchRulesetModal: React.FC<Props> = (props) => {\n   const { curationOptions, updateActiveStepDefinition } = useContext(CurationContext);\n \n-  const [entityTypeDefinition, setEntityTypeDefinition] = useState<Definition>(DEFAULT_ENTITY_DEFINITION)\n-  const [selectedProperty, setSelectedProperty] = useState<string | undefined>(undefined)\n+  const [entityTypeDefinition, setEntityTypeDefinition] = useState<Definition>(DEFAULT_ENTITY_DEFINITION);\n+\n+  const [selectedProperty, setSelectedProperty] = useState<string | undefined>(undefined);\n   const [propertyTypeErrorMessage, setPropertyTypeErrorMessage] = useState('');\n   const [matchType, setMatchType] = useState('')\n   const [matchTypeErrorMessage, setMatchTypeErrorMessage] = useState('');\n \n+  const [thesaurusValue, setThesaurusValue] = useState('');\n+  const [thesaurusErrorMessage, setThesaurusErrorMessage] = useState('');\n+  const [filterValue, setFilterValue] = useState('')\n+\n   useEffect(() => {\n     if (props.isVisible && curationOptions.entityDefinitionsArray.length > 0 && curationOptions.activeStep.entityName !== '') {\n       let entityTypeDefinition: Definition = curationOptions.entityDefinitionsArray.find( entityDefinition => entityDefinition.name === curationOptions.activeStep.entityName) || DEFAULT_ENTITY_DEFINITION;\n       setEntityTypeDefinition(entityTypeDefinition);\n     }\n   }, [props.isVisible]);\n \n+  const handleInputChange = (event) => {\n+    if (event.target.id === 'thesaurus-uri-input') {\n+      if (event.target.value === '') {\n+        setThesaurusErrorMessage('A thesaurus uri is required')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5Nzk2Mg==", "bodyText": "@ryanjdew @brucean52 @wooldridge I think the backend should validate this. But I also don't see any requirement in 5254 about prohibiting duplicates, nor what defines a duplicate.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#discussion_r503297962", "createdAt": "2020-10-12T13:31:37Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/entities/matching/ruleset-single-modal/ruleset-single-modal.tsx", "diffHunk": "@@ -76,40 +100,78 @@ const MatchRulesetModal: React.FC<Props> = (props) => {\n       case 'exact':\n       case 'reduce':\n       case 'zip':\n-        let propertyName = selectedProperty || '';\n-\n-        let matchRule: MatchRule = {\n-          entityPropertyPath: propertyName,\n-          matchType: matchType,\n-          options: {}\n-        }\n+        {\n+          let propertyName = selectedProperty || '';\n \n-        let matchRuleset: MatchRuleset = {\n-          name: propertyName,\n-          weight: 0,\n-          matchRules: [matchRule]\n+          let matchRule: MatchRule = {\n+            entityPropertyPath: propertyName,\n+            matchType: matchType,\n+            options: {}\n+          }\n+  \n+          let matchRuleset: MatchRuleset = {\n+            name: propertyName,\n+            weight: 0,\n+            matchRules: [matchRule]\n+          }\n+  \n+          //check for duplicate\n+          let propertyRulesets = curationOptions.activeStep.stepDefinition['matchRulesets'].filter(matchRuleset => matchRuleset['name'] === propertyName)\n+          if (propertyRulesets.length > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5OTY5MQ==", "bodyText": "Does \"stepDefinition\" here refer to the configuration of this step? If so, I highly recommend not using the term \"step definition\", which in DHF means \"an artifact that identifies a name and type and module path for a step\". I actually wouldn't expect anything in between \"activeStep\" and \"matchRulesets\" either, since matchRulesets is a top-level property of a step. If \"activeStep\" is actually a wrapper containing the step config and other properties, I would call it something besides a \"step\", because its name to me implies that matchRulesets should be a property of it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#discussion_r503299691", "createdAt": "2020-10-12T13:34:25Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/entities/matching/ruleset-single-modal/ruleset-single-modal.tsx", "diffHunk": "@@ -76,40 +100,78 @@ const MatchRulesetModal: React.FC<Props> = (props) => {\n       case 'exact':\n       case 'reduce':\n       case 'zip':\n-        let propertyName = selectedProperty || '';\n-\n-        let matchRule: MatchRule = {\n-          entityPropertyPath: propertyName,\n-          matchType: matchType,\n-          options: {}\n-        }\n+        {\n+          let propertyName = selectedProperty || '';\n \n-        let matchRuleset: MatchRuleset = {\n-          name: propertyName,\n-          weight: 0,\n-          matchRules: [matchRule]\n+          let matchRule: MatchRule = {\n+            entityPropertyPath: propertyName,\n+            matchType: matchType,\n+            options: {}\n+          }\n+  \n+          let matchRuleset: MatchRuleset = {\n+            name: propertyName,\n+            weight: 0,\n+            matchRules: [matchRule]\n+          }\n+  \n+          //check for duplicate\n+          let propertyRulesets = curationOptions.activeStep.stepDefinition['matchRulesets'].filter(matchRuleset => matchRuleset['name'] === propertyName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMwMDMzNQ==", "bodyText": "Same thing - we should call this a \"step\", not a \"stepDefinition\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#discussion_r503300335", "createdAt": "2020-10-12T13:35:16Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/entities/matching/ruleset-single-modal/ruleset-single-modal.tsx", "diffHunk": "@@ -76,40 +100,78 @@ const MatchRulesetModal: React.FC<Props> = (props) => {\n       case 'exact':\n       case 'reduce':\n       case 'zip':\n-        let propertyName = selectedProperty || '';\n-\n-        let matchRule: MatchRule = {\n-          entityPropertyPath: propertyName,\n-          matchType: matchType,\n-          options: {}\n-        }\n+        {\n+          let propertyName = selectedProperty || '';\n \n-        let matchRuleset: MatchRuleset = {\n-          name: propertyName,\n-          weight: 0,\n-          matchRules: [matchRule]\n+          let matchRule: MatchRule = {\n+            entityPropertyPath: propertyName,\n+            matchType: matchType,\n+            options: {}\n+          }\n+  \n+          let matchRuleset: MatchRuleset = {\n+            name: propertyName,\n+            weight: 0,\n+            matchRules: [matchRule]\n+          }\n+  \n+          //check for duplicate\n+          let propertyRulesets = curationOptions.activeStep.stepDefinition['matchRulesets'].filter(matchRuleset => matchRuleset['name'] === propertyName)\n+          if (propertyRulesets.length > 0) {\n+            propertyRulesets.forEach( ruleset => {\n+              if (ruleset['matchRules'].length === 1 && ruleset['matchRules'][0].matchType === matchType) {\n+                propertyErrorMessage = 'A ruleset with these selections already exists';\n+              }\n+            });\n+          }\n+  \n+          if (propertyErrorMessage === '' && matchErrorMessage === '') {\n+            // TODO save step to backend\n+            let newStepDefinition: MatchingStep = curationOptions.activeStep.stepDefinition;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMwMTA5NQ==", "bodyText": "@ryanjdew Does it matter what database the thesaurus is in? As a user, that's the first question I have when reading this.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#discussion_r503301095", "createdAt": "2020-10-12T13:36:30Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.js", "diffHunk": "@@ -62,6 +62,9 @@ const NewMatchTooltips = {\n     'sourceDatabase': 'The database where the input data is read from. Must be the same as the Matching Step *Source Database*.',\n     'description': 'The description of this matching configuration.',\t    'targetDatabase': 'The database where to store the processed data. Must be the same as the Matching Step *Source Database*.',\n     'sourceQuery' : 'The collection or CTS query that selects the source data to process in this configuration.',\n+    'thesaurusUri' : 'The path to the thesaurus used to determine synonyms',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e3d733df3a305335ef48d4408de91cf854cbf1e", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3e3d733df3a305335ef48d4408de91cf854cbf1e", "committedDate": "2020-10-12T18:54:40Z", "message": "DHFPROD-5254: Add Synonym Type to Single Ruleset Modal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6983210f872f7fc9819cd52e22b853093920ba07", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6983210f872f7fc9819cd52e22b853093920ba07", "committedDate": "2020-10-09T18:13:12Z", "message": "DHFPROD-5254: Add Synonym Type to Single Ruleset Modal"}, "afterCommit": {"oid": "3e3d733df3a305335ef48d4408de91cf854cbf1e", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3e3d733df3a305335ef48d4408de91cf854cbf1e", "committedDate": "2020-10-12T18:54:40Z", "message": "DHFPROD-5254: Add Synonym Type to Single Ruleset Modal"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODc5NTA3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#pullrequestreview-506879507", "createdAt": "2020-10-12T19:56:06Z", "commit": {"oid": "3e3d733df3a305335ef48d4408de91cf854cbf1e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTo1NjowNlrOHgLbsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTo1NjowNlrOHgLbsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwMzc5NQ==", "bodyText": "These 5 lines are repeated below, but I assume that can be addressed when this is enhanced to talk to the backend.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#discussion_r503503795", "createdAt": "2020-10-12T19:56:06Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/entities/matching/ruleset-single-modal/ruleset-single-modal.tsx", "diffHunk": "@@ -76,40 +100,68 @@ const MatchRulesetModal: React.FC<Props> = (props) => {\n       case 'exact':\n       case 'reduce':\n       case 'zip':\n-        let propertyName = selectedProperty || '';\n-\n-        let matchRule: MatchRule = {\n-          entityPropertyPath: propertyName,\n-          matchType: matchType,\n-          options: {}\n-        }\n+        {\n+          let propertyName = selectedProperty || '';\n \n-        let matchRuleset: MatchRuleset = {\n-          name: propertyName,\n-          weight: 0,\n-          matchRules: [matchRule]\n+          let matchRule: MatchRule = {\n+            entityPropertyPath: propertyName,\n+            matchType: matchType,\n+            options: {}\n+          }\n+  \n+          let matchRuleset: MatchRuleset = {\n+            name: propertyName,\n+            weight: 0,\n+            matchRules: [matchRule]\n+          }\n+  \n+          if (propertyErrorMessage === '' && matchErrorMessage === '') {\n+            // TODO save step to backend\n+            let newStepArtifact: MatchingStep = curationOptions.activeStep.stepArtifact;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e3d733df3a305335ef48d4408de91cf854cbf1e"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODgyMTgz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4692#pullrequestreview-506882183", "createdAt": "2020-10-12T20:01:15Z", "commit": {"oid": "3e3d733df3a305335ef48d4408de91cf854cbf1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1972, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}