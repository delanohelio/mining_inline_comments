{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDIwNjc5", "number": 3504, "title": "DHFPROD-4099: Support configurable session timeout (5 min as default)", "bodyText": "", "createdAt": "2020-01-24T21:21:12Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504", "merged": true, "mergeCommit": {"oid": "70527d6eadf5c1f4f0b2c14848275ada13577cad"}, "closed": true, "closedAt": "2020-01-28T01:27:07Z", "author": {"login": "hao1st"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9l9lmAFqTM0ODIzODQ5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-laJkgFqTM0OTA0ODY3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjM4NDk2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-348238496", "createdAt": "2020-01-24T21:36:11Z", "commit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNjoxMVrOFhrFQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTozNzo1NVrOFhrHfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1MzE4NA==", "bodyText": "Is there are more appropriate annotation to use here? Perhaps just \"Component\"? If that has the same effect, I think that'd be better because this class of course is not a controller.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r370853184", "createdAt": "2020-01-24T21:36:11Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/auth/LoginLogoutHandler.java", "diffHunk": "@@ -19,13 +19,15 @@\n import org.springframework.security.web.WebAttributes;\n import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n import org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n+import org.springframework.stereotype.Controller;\n \n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n import java.io.IOException;\n \n+@Controller", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mzc1OQ==", "bodyText": "There needs to be a test for this method. Otherwise, someone could add code that causes a null pointer exception or something similar, and we'd never know it.\nI think a suitable test would be to populate that map with two DatabaseClient objects, and then call destroy. Then verify that the map is empty (I can't think of a good way to verify that the clients were released). That's a decent smoke test.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r370853759", "createdAt": "2020-01-24T21:37:55Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,19 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjM5NDMy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-348239432", "createdAt": "2020-01-24T21:38:17Z", "commit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37504eb0e777f7f5bfb15e78bf9367b674b97f01", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/37504eb0e777f7f5bfb15e78bf9367b674b97f01", "committedDate": "2020-01-27T17:06:33Z", "message": "DHFPROD-4099: Support configurable session timeout (5 min as default)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d39138bfbc00cad9c7a903b3c570a13aee1faaf", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/7d39138bfbc00cad9c7a903b3c570a13aee1faaf", "committedDate": "2020-01-27T17:06:33Z", "message": "DHFPROD-4099: add a new test class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46a6e2c05f0185bffa61d5e23e9caacfa937cc29", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/46a6e2c05f0185bffa61d5e23e9caacfa937cc29", "committedDate": "2020-01-24T22:40:07Z", "message": "DHFPROD-4099: add a new test class"}, "afterCommit": {"oid": "7d39138bfbc00cad9c7a903b3c570a13aee1faaf", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/7d39138bfbc00cad9c7a903b3c570a13aee1faaf", "committedDate": "2020-01-27T17:06:33Z", "message": "DHFPROD-4099: add a new test class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTA1MTQx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-348905141", "createdAt": "2020-01-27T19:09:01Z", "commit": {"oid": "7d39138bfbc00cad9c7a903b3c570a13aee1faaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTowOTowMVrOFiOGFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTowOTowMVrOFiOGFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQyNjgzNg==", "bodyText": "I think using public class variables can be avoided. You can autowire HubConfigSession or use a getter if required", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371426836", "createdAt": "2020-01-27T19:09:01Z", "author": {"login": "srinathgit"}, "path": "one-ui/src/test/java/com/marklogic/hub/oneui/TestHelper.java", "diffHunk": "@@ -23,7 +23,7 @@\n     public String dataHubDeveloperPassword;\n \n     @Autowired\n-    private HubConfigSession hubConfig;\n+    public HubConfigSession hubConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d39138bfbc00cad9c7a903b3c570a13aee1faaf"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cacc4da3a8fb1f05dd49911bbe855f74f9b3835", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/8cacc4da3a8fb1f05dd49911bbe855f74f9b3835", "committedDate": "2020-01-27T19:17:24Z", "message": "DHFPROD-4099: Use autowired rather than object reference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTE1ODEx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-348915811", "createdAt": "2020-01-27T19:26:18Z", "commit": {"oid": "8cacc4da3a8fb1f05dd49911bbe855f74f9b3835"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToyNjoxOVrOFiOn8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToyNjoxOVrOFiOn8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzNTUwNg==", "bodyText": "This method can be \"protected\" and test can be added to same package", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371435506", "createdAt": "2020-01-27T19:26:19Z", "author": {"login": "srinathgit"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,24 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {\n+        if (!clientsByKindAndDatabaseName.isEmpty()) {\n+            clientsByKindAndDatabaseName.values().stream()\n+                .flatMap(s -> s.values().stream().filter(Objects::nonNull))\n+                .forEach(\n+                    e -> {\n+                        logger.debug(String.format(\"release %s (%s)\", e.getDatabase(), e.toString()));\n+                        e.release();\n+                        e = null;\n+                    });\n+            clientsByKindAndDatabaseName.clear();\n+        }\n+    }\n+\n+    //only for test purpose\n+    public Map<DatabaseKind, Map<String, DatabaseClient>> getAllDatabaseClients() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cacc4da3a8fb1f05dd49911bbe855f74f9b3835"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ce401e56da9b1036fdf51a5fe935cd4db4a2dc5", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/0ce401e56da9b1036fdf51a5fe935cd4db4a2dc5", "committedDate": "2020-01-27T20:07:56Z", "message": "DHFPROD-4099: Refractor for a test class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTg0Mzkw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-348984390", "createdAt": "2020-01-27T21:23:26Z", "commit": {"oid": "0ce401e56da9b1036fdf51a5fe935cd4db4a2dc5"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToyMzoyNlrOFiR8QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToyMzoyNlrOFiR8QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4OTg1Nw==", "bodyText": "Just a note - this logic is the sort of thing that should eventually move into a HubClient class, where it'd be a lot easier to test - i.e. create a HubClient with 3 DatabaseClients, then call destroy, then verify that each of the 3 DatabaseClients throws an error if you try to do something with it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#discussion_r371489857", "createdAt": "2020-01-27T21:23:26Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/models/HubConfigSession.java", "diffHunk": "@@ -1002,4 +1008,19 @@ public void afterPropertiesSet() throws Exception {\n         hubConfigImpl.hydrateConfigs();\n         this.dataHub = new DataHubImpl(this);\n     }\n+\n+    @Override\n+    public void destroy() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1Mzc1OQ=="}, "originalCommit": {"oid": "efa8d87b6c78092a1056eec19e66b73de3718a4a"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTkwODcx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-348990871", "createdAt": "2020-01-27T21:34:36Z", "commit": {"oid": "0ce401e56da9b1036fdf51a5fe935cd4db4a2dc5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83cae1f8798a1be345e38752414a5912a9a5baf7", "author": {"user": {"login": "hao1st", "name": "Hao Liu"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/83cae1f8798a1be345e38752414a5912a9a5baf7", "committedDate": "2020-01-27T21:52:55Z", "message": "DHFPROD-4099: Replaced an annotation Controller with Component"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDA5MjYy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-349009262", "createdAt": "2020-01-27T22:06:34Z", "commit": {"oid": "83cae1f8798a1be345e38752414a5912a9a5baf7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDI2Mzc4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-349026378", "createdAt": "2020-01-27T22:40:26Z", "commit": {"oid": "83cae1f8798a1be345e38752414a5912a9a5baf7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDQ4Njc1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3504#pullrequestreview-349048675", "createdAt": "2020-01-27T23:33:17Z", "commit": {"oid": "83cae1f8798a1be345e38752414a5912a9a5baf7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2382, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}