{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NDI5NTIx", "number": 3598, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NTo1MlrODh_rPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NTo1OFrODh_raQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTcyODYwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/rewriter/StagingRewriterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NTo1MlrOFtC29Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NTo1MlrOFtC29Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3NzA3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    metadata.getPermissions().add(\"data-hub-operator\", DocumentMetadataHandle.Capability.READ, DocumentMetadataHandle.Capability.READ);\n          \n          \n            \n                    metadata.getPermissions().add(\"data-hub-operator\", DocumentMetadataHandle.Capability.READ, DocumentMetadataHandle.Capability.UPDATE);", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3598#discussion_r382777077", "createdAt": "2020-02-21T19:55:52Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/rewriter/StagingRewriterTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package com.marklogic.hub.rewriter;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.document.JSONDocumentManager;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.ApplicationConfig;\n+import com.marklogic.hub.HubTestBase;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+@ExtendWith(SpringExtension.class)\n+@ContextConfiguration(classes = ApplicationConfig.class)\n+public class StagingRewriterTest extends HubTestBase {\n+\n+    /**\n+     * This is simply to verify that the custom rewriter for ML doesn't cause basic functions to fail. This was the\n+     * case prior to 5.2.0, as 10-rewriter.xml referred to some non-existent modules.\n+     */\n+    @Test\n+    void test() {\n+        DatabaseClient client = adminHubConfig.newStagingClient();\n+        JSONDocumentManager mgr = client.newJSONDocumentManager();\n+\n+        final String uri = \"/test.json\";\n+        ObjectNode node = new ObjectMapper().createObjectNode();\n+        node.put(\"hello\", \"world\");\n+\n+        DocumentMetadataHandle metadata = new DocumentMetadataHandle();\n+        metadata.getPermissions().add(\"data-hub-operator\", DocumentMetadataHandle.Capability.READ, DocumentMetadataHandle.Capability.READ);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b9cdcd51a55e2a54c7ae8c1c8496cc3a82810a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTcyOTA1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/rewriter/StagingRewriterTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo1NTo1OFrOFtC3MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMTo0NDozNFrOFtFe3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3NzEzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    mgr.write(uri, new JacksonHandle(node));\n          \n          \n            \n                    mgr.write(uri, metadata, new JacksonHandle(node));", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3598#discussion_r382777137", "createdAt": "2020-02-21T19:55:58Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/rewriter/StagingRewriterTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package com.marklogic.hub.rewriter;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.document.JSONDocumentManager;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.ApplicationConfig;\n+import com.marklogic.hub.HubTestBase;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+@ExtendWith(SpringExtension.class)\n+@ContextConfiguration(classes = ApplicationConfig.class)\n+public class StagingRewriterTest extends HubTestBase {\n+\n+    /**\n+     * This is simply to verify that the custom rewriter for ML doesn't cause basic functions to fail. This was the\n+     * case prior to 5.2.0, as 10-rewriter.xml referred to some non-existent modules.\n+     */\n+    @Test\n+    void test() {\n+        DatabaseClient client = adminHubConfig.newStagingClient();\n+        JSONDocumentManager mgr = client.newJSONDocumentManager();\n+\n+        final String uri = \"/test.json\";\n+        ObjectNode node = new ObjectMapper().createObjectNode();\n+        node.put(\"hello\", \"world\");\n+\n+        DocumentMetadataHandle metadata = new DocumentMetadataHandle();\n+        metadata.getPermissions().add(\"data-hub-operator\", DocumentMetadataHandle.Capability.READ, DocumentMetadataHandle.Capability.READ);\n+        mgr.write(uri, new JacksonHandle(node));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b9cdcd51a55e2a54c7ae8c1c8496cc3a82810a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4Mzc5Mg==", "bodyText": "Oops, thanks, I missed that typo.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3598#discussion_r382783792", "createdAt": "2020-02-21T20:11:37Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/rewriter/StagingRewriterTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package com.marklogic.hub.rewriter;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.document.JSONDocumentManager;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.ApplicationConfig;\n+import com.marklogic.hub.HubTestBase;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+@ExtendWith(SpringExtension.class)\n+@ContextConfiguration(classes = ApplicationConfig.class)\n+public class StagingRewriterTest extends HubTestBase {\n+\n+    /**\n+     * This is simply to verify that the custom rewriter for ML doesn't cause basic functions to fail. This was the\n+     * case prior to 5.2.0, as 10-rewriter.xml referred to some non-existent modules.\n+     */\n+    @Test\n+    void test() {\n+        DatabaseClient client = adminHubConfig.newStagingClient();\n+        JSONDocumentManager mgr = client.newJSONDocumentManager();\n+\n+        final String uri = \"/test.json\";\n+        ObjectNode node = new ObjectMapper().createObjectNode();\n+        node.put(\"hello\", \"world\");\n+\n+        DocumentMetadataHandle metadata = new DocumentMetadataHandle();\n+        metadata.getPermissions().add(\"data-hub-operator\", DocumentMetadataHandle.Capability.READ, DocumentMetadataHandle.Capability.READ);\n+        mgr.write(uri, new JacksonHandle(node));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3NzEzNw=="}, "originalCommit": {"oid": "12b9cdcd51a55e2a54c7ae8c1c8496cc3a82810a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgyMDA2MA==", "bodyText": "We still need to add the metadata parameter to the write function for the permissions to be applied.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3598#discussion_r382820060", "createdAt": "2020-02-21T21:44:34Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/rewriter/StagingRewriterTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package com.marklogic.hub.rewriter;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.client.DatabaseClient;\n+import com.marklogic.client.document.JSONDocumentManager;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.ApplicationConfig;\n+import com.marklogic.hub.HubTestBase;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+@ExtendWith(SpringExtension.class)\n+@ContextConfiguration(classes = ApplicationConfig.class)\n+public class StagingRewriterTest extends HubTestBase {\n+\n+    /**\n+     * This is simply to verify that the custom rewriter for ML doesn't cause basic functions to fail. This was the\n+     * case prior to 5.2.0, as 10-rewriter.xml referred to some non-existent modules.\n+     */\n+    @Test\n+    void test() {\n+        DatabaseClient client = adminHubConfig.newStagingClient();\n+        JSONDocumentManager mgr = client.newJSONDocumentManager();\n+\n+        final String uri = \"/test.json\";\n+        ObjectNode node = new ObjectMapper().createObjectNode();\n+        node.put(\"hello\", \"world\");\n+\n+        DocumentMetadataHandle metadata = new DocumentMetadataHandle();\n+        metadata.getPermissions().add(\"data-hub-operator\", DocumentMetadataHandle.Capability.READ, DocumentMetadataHandle.Capability.READ);\n+        mgr.write(uri, new JacksonHandle(node));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3NzEzNw=="}, "originalCommit": {"oid": "12b9cdcd51a55e2a54c7ae8c1c8496cc3a82810a"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3557, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}