{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NjY4NjM4", "number": 4311, "title": "DHFPROD-5492: Manage session timeout across multiple tabs", "bodyText": "Description\nUsing WebSockets to keep track of the session timeout.\n@bsrikan I'm setting this as a draft for now, as there are not any automated tests. I may need some assistance/direction with automated testing.\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-07-29T20:14:48Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311", "merged": true, "mergeCommit": {"oid": "4b8ac59374052991b3e0d47b8d5701ff408592c2"}, "closed": true, "closedAt": "2020-08-06T14:01:12Z", "author": {"login": "ryanjdew"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5xZm2gFqTQ1Nzg4Mjg0NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8DlNpAFqTQ2MjA4Mjc1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODgyODQ1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#pullrequestreview-457882845", "createdAt": "2020-07-29T20:44:28Z", "commit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo0NDoyOFrOG5Jdtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo1Mjo1NFrOG5JvKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3NzA3OQ==", "bodyText": "These should be removed, as @akshaysonvane has a separate ticket for logging these via logger.error.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462577079", "createdAt": "2020-07-29T20:44:28Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/exceptions/CustomExceptionHandler.java", "diffHunk": "@@ -41,6 +41,7 @@\n     @ExceptionHandler(FailedRequestException.class)\n     protected ResponseEntity<JsonNode> handleFailedRequestExceptionRequest(\n         FailedRequestException failedRequestException) {\n+        failedRequestException.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3OTA2Mg==", "bodyText": "Autowiring in the HttpSession makes me nervous - I think it's simpler just to declare an HttpServletRequest as a parameter of getSystemInfo() (you may be able to declare HttpSession as a parameter too, I forget if Spring MVC will populate it automatically). You can get the session from the HttpServletRequest.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462579062", "createdAt": "2020-07-29T20:48:21Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/controllers/EnvironmentController.java", "diffHunk": "@@ -76,6 +81,11 @@ public SystemInfo getSystemInfo() {\n         info.marklogicVersion = versionInfo.getMarkLogicVersion();\n         info.host = hubCentral.getHost();\n         info.sessionTimeout = environment.getProperty(\"server.servlet.session.timeout\");\n+        Optional.of(session).ifPresent((session) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3OTgyOQ==", "bodyText": "I feel it'd be safer for this to be explicitly named for its purpose today, which is for checking session status, right? So this could be \"/websocket/sessionStatus\", and we'd want to explicitly list that here instead of allowing anything under \"/websocket/\" (as we could add another path under \"/websocket/\" that does require authentication and forget to update this).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462579829", "createdAt": "2020-07-29T20:49:46Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/WebSecurityConfiguration.java", "diffHunk": "@@ -71,6 +71,7 @@ protected void configure(HttpSecurity http) throws Exception {\n      */\n     protected String[] getAlwaysPermittedPatterns() {\n         return new String[]{\n+            \"/websocket/**\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4MDU1Ng==", "bodyText": "How could the template be null, since it's passed into the constructor? If it could be null, then the constructor should throw an exception because the system is ostensibly misconfigured.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462580556", "createdAt": "2020-07-29T20:51:04Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/SessionMonitorInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.marklogic.hub.central.auth;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.messaging.simp.SimpMessagingTemplate;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.servlet.HandlerInterceptor;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.http.HttpSession;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class SessionMonitorInterceptor implements HandlerInterceptor {\n+    static final Map<String, Object> stompHeaders = new HashMap<>() {{\n+        put(\"content-type\",\"application/json\");\n+    }};\n+\n+    private SimpMessagingTemplate template;\n+\n+    public SessionMonitorInterceptor(SimpMessagingTemplate template) {\n+        this.template = template;\n+    }\n+\n+    @Override\n+    public boolean preHandle(\n+            HttpServletRequest request, @NotNull HttpServletResponse response, @NotNull Object handler) throws Exception {\n+        HttpSession session = request.getSession();\n+        if (!(template == null || session == null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4MDg3NQ==", "bodyText": "I think this \"else\" block goes away since we don't need to check for the template being null.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462580875", "createdAt": "2020-07-29T20:51:39Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/SessionMonitorInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.marklogic.hub.central.auth;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.messaging.simp.SimpMessagingTemplate;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.servlet.HandlerInterceptor;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.http.HttpSession;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class SessionMonitorInterceptor implements HandlerInterceptor {\n+    static final Map<String, Object> stompHeaders = new HashMap<>() {{\n+        put(\"content-type\",\"application/json\");\n+    }};\n+\n+    private SimpMessagingTemplate template;\n+\n+    public SessionMonitorInterceptor(SimpMessagingTemplate template) {\n+        this.template = template;\n+    }\n+\n+    @Override\n+    public boolean preHandle(\n+            HttpServletRequest request, @NotNull HttpServletResponse response, @NotNull Object handler) throws Exception {\n+        HttpSession session = request.getSession();\n+        if (!(template == null || session == null)) {\n+            int sessionTimeout = session.getMaxInactiveInterval();\n+            template.convertAndSend(\"/topic/sessionStatus/\"+session.getAttribute(\"hubCentralSessionToken\"), new SessionStatus(sessionTimeout), stompHeaders);\n+        } else {\n+            System.out.println(\"Template: \" + template + \"\\nSession: \" + session);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4MTU0NQ==", "bodyText": "I think both of these beans need comments to explain what's going on here. Referencing Spring docs on this is fine too. But the typical problem with Spring beans like this is they get a lot done in a small amount of code, but it's not clear why we're doing this.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462581545", "createdAt": "2020-07-29T20:52:54Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/WebSocketConfig.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2012-2020 MarkLogic Corporation\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ *\n+ */\n+package com.marklogic.hub.central;\n+\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.messaging.simp.config.MessageBrokerRegistry;\n+import org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;\n+import org.springframework.web.socket.config.annotation.StompEndpointRegistry;\n+import org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer;\n+\n+@Configuration\n+@EnableWebSocketMessageBroker\n+public class WebSocketConfig implements WebSocketMessageBrokerConfigurer {\n+\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTQ3MzAy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#pullrequestreview-457947302", "createdAt": "2020-07-29T22:40:29Z", "commit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjo0MDoyOVrOG5MwaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMjo0NTo1N1rOG5M4FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYzMTAxNg==", "bodyText": "Why do we need a WebSocket to send the session timeout value continuously?\nWouldn't getMaxInactiveInterval always return 300 (5 minutes) in our case?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462631016", "createdAt": "2020-07-29T22:40:29Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/SessionMonitorInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.marklogic.hub.central.auth;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.messaging.simp.SimpMessagingTemplate;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.servlet.HandlerInterceptor;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.http.HttpSession;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class SessionMonitorInterceptor implements HandlerInterceptor {\n+    static final Map<String, Object> stompHeaders = new HashMap<>() {{\n+        put(\"content-type\",\"application/json\");\n+    }};\n+\n+    private SimpMessagingTemplate template;\n+\n+    public SessionMonitorInterceptor(SimpMessagingTemplate template) {\n+        this.template = template;\n+    }\n+\n+    @Override\n+    public boolean preHandle(\n+            HttpServletRequest request, @NotNull HttpServletResponse response, @NotNull Object handler) throws Exception {\n+        HttpSession session = request.getSession();\n+        if (!(template == null || session == null)) {\n+            int sessionTimeout = session.getMaxInactiveInterval();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYzMjk4MQ==", "bodyText": "Do we need some sort of cross tab communication to propagate the timeout events on all tabs  https://dev.to/naismith/cross-tab-communication-with-javascript-1hc9", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r462632981", "createdAt": "2020-07-29T22:45:57Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub-central/ui/src/util/user-context.tsx", "diffHunk": "@@ -40,8 +41,27 @@ const UserProvider: React.FC<{ children: any }> = ({children}) => {\n   const [user, setUser] = useState<UserContextInterface>(defaultUserData);\n   const sessionUser = localStorage.getItem('dataHubUser');\n   const authoritiesService = useContext(AuthoritiesContext);\n+  const stompService = useContext(StompContext);\n   let sessionCount = 300;\n   let sessionTimer = true;\n+  let unsubscribeId;\n+  const monitorSession = async () => {\n+    stompService.onConnected().then(() => {\n+      const hubCentralSessionToken = localStorage.getItem('hubCentralSessionToken');\n+      stompService.messages.subscribe((message) => {\n+        sessionCount = parseInt(JSON.parse(message.body).sessionTimeout);\n+      });\n+      stompService.subscribe(`/topic/sessionStatus/${hubCentralSessionToken}`, (msgId: string) => {\n+        unsubscribeId = msgId;\n+      });\n+    });\n+  };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f676373951c97acc4170db971ae5db80afe5b13", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/8f676373951c97acc4170db971ae5db80afe5b13", "committedDate": "2020-07-29T20:11:15Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}, "afterCommit": {"oid": "4ea30ba2f5700cc4ccf57673022894d0208487a5", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4ea30ba2f5700cc4ccf57673022894d0208487a5", "committedDate": "2020-07-30T19:21:27Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ea30ba2f5700cc4ccf57673022894d0208487a5", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4ea30ba2f5700cc4ccf57673022894d0208487a5", "committedDate": "2020-07-30T19:21:27Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}, "afterCommit": {"oid": "d22e25a6a66deb5d475d7bd5ead00a1103e8d1aa", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d22e25a6a66deb5d475d7bd5ead00a1103e8d1aa", "committedDate": "2020-07-31T17:29:42Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d22e25a6a66deb5d475d7bd5ead00a1103e8d1aa", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d22e25a6a66deb5d475d7bd5ead00a1103e8d1aa", "committedDate": "2020-07-31T17:29:42Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}, "afterCommit": {"oid": "a31042e9cac55b6724dc7509aecaec7b8c457b93", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a31042e9cac55b6724dc7509aecaec7b8c457b93", "committedDate": "2020-08-04T21:28:45Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a31042e9cac55b6724dc7509aecaec7b8c457b93", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a31042e9cac55b6724dc7509aecaec7b8c457b93", "committedDate": "2020-08-04T21:28:45Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}, "afterCommit": {"oid": "67e9216a119c0e933f67ce0d84adf82f36a0083e", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/67e9216a119c0e933f67ce0d84adf82f36a0083e", "committedDate": "2020-08-05T05:57:48Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjI0NTQ2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#pullrequestreview-461624546", "createdAt": "2020-08-05T12:41:58Z", "commit": {"oid": "67e9216a119c0e933f67ce0d84adf82f36a0083e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzk3MTU1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#pullrequestreview-461797155", "createdAt": "2020-08-05T15:50:29Z", "commit": {"oid": "67e9216a119c0e933f67ce0d84adf82f36a0083e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67e9216a119c0e933f67ce0d84adf82f36a0083e", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/67e9216a119c0e933f67ce0d84adf82f36a0083e", "committedDate": "2020-08-05T05:57:48Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}, "afterCommit": {"oid": "11b3df3862e7b2a6f90fa062b0980fdf93fee9fa", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/11b3df3862e7b2a6f90fa062b0980fdf93fee9fa", "committedDate": "2020-08-05T16:02:29Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11b3df3862e7b2a6f90fa062b0980fdf93fee9fa", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/11b3df3862e7b2a6f90fa062b0980fdf93fee9fa", "committedDate": "2020-08-05T16:02:29Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}, "afterCommit": {"oid": "c82d703d961ccf518f27b2df96c3a1328239778d", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c82d703d961ccf518f27b2df96c3a1328239778d", "committedDate": "2020-08-05T19:14:24Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f091bc133444570fcb958534be543334101b036", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4f091bc133444570fcb958534be543334101b036", "committedDate": "2020-08-05T21:02:38Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c82d703d961ccf518f27b2df96c3a1328239778d", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c82d703d961ccf518f27b2df96c3a1328239778d", "committedDate": "2020-08-05T19:14:24Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}, "afterCommit": {"oid": "4f091bc133444570fcb958534be543334101b036", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4f091bc133444570fcb958534be543334101b036", "committedDate": "2020-08-05T21:02:38Z", "message": "DHFPROD-5492: Manage session timeout across multiple tabs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDM3NjE4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#pullrequestreview-462037618", "createdAt": "2020-08-05T21:29:32Z", "commit": {"oid": "4f091bc133444570fcb958534be543334101b036"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMDgyNzU5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#pullrequestreview-462082759", "createdAt": "2020-08-05T23:08:11Z", "commit": {"oid": "4f091bc133444570fcb958534be543334101b036"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzowODoxMlrOG8dmGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzowODo0N1rOG8dm-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA1MjYzNA==", "bodyText": "Minor nitpick, no need to change, for now, we can get rid of these commented out lines.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r466052634", "createdAt": "2020-08-05T23:08:12Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/WebSecurityConfiguration.java", "diffHunk": "@@ -55,12 +59,19 @@ protected void configure(HttpSecurity http) throws Exception {\n             .and()\n             // Define requests that are always permitted, regardless of whether the user is authenticated or not\n             .authorizeRequests()\n+                // Needed for websocket tests\n+//                .antMatchers(\"/websocket/**\").permitAll()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f091bc133444570fcb958534be543334101b036"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA1Mjg1Ng==", "bodyText": "@rjrudin, FYI, we are permitting access to /websocket/** only while running tests.  So the production app has all endpoints behind spring security.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4311#discussion_r466052856", "createdAt": "2020-08-05T23:08:47Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub-central/src/main/java/com/marklogic/hub/central/auth/WebSecurityConfiguration.java", "diffHunk": "@@ -55,12 +59,19 @@ protected void configure(HttpSecurity http) throws Exception {\n             .and()\n             // Define requests that are always permitted, regardless of whether the user is authenticated or not\n             .authorizeRequests()\n+                // Needed for websocket tests\n+//                .antMatchers(\"/websocket/**\").permitAll()\n                 // Needed for springfox to work - see https://github.com/springfox/springfox/issues/1996#issuecomment-335155187\n                 .antMatchers(\"/swagger-resources/**\", \"/swagger-ui.html\", \"/v2/api-docs\", \"/webjars/**\").permitAll()\n                 // Non-springfox patterns to permit\n-                .antMatchers(getAlwaysPermittedPatterns()).permitAll().anyRequest().authenticated()\n-            .and()\n-            .logout().logoutUrl(\"/api/logout\").logoutSuccessHandler(((request, response, authentication) -> request.getSession().invalidate()));\n+                .antMatchers(getAlwaysPermittedPatterns()).permitAll();\n+        // needed for WebSocket test\n+        if (environment.getProperty(\"hub.websocket.securityDisabled\",\"false\").equals(\"true\")) {\n+            http.authorizeRequests().antMatchers(\"/websocket/**\").permitAll();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f091bc133444570fcb958534be543334101b036"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2498, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}