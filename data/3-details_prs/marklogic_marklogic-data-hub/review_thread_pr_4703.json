{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNzY3MTY0", "number": 4703, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDowNToyNlrOEsw1-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjo1Mzo1MVrOEtQLfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzczMDUxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDowNToyNlrOHgLp9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDowNToyNlrOHgLp9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwNzQ0Nw==", "bodyText": "We need this while building the jars too.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4703#discussion_r503507447", "createdAt": "2020-10-12T20:05:26Z", "author": {"login": "SameeraPriyathamTadikonda"}, "path": "marklogic-data-hub/build.gradle", "diffHunk": "@@ -227,26 +227,10 @@ task generateDataServiceInterfaces {\n     }\n }\n \n-if (!(\n-    gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"test\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"testunit\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"publishplugins\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"publishtomavenlocal\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bintrayupload\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"javadoc\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootjar\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"marklogic-data-hub:bootjar\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"clientjar\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"marklogic-data-hub:clientjar\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"generatedataservice\") ||\n-        // Added for Hub Central\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"buildrpm\") ||\n-\n-        project.hasProperty('skipui')\n-)\n-) {\n+// When publishing the DHF core jar, it needs to have the compiled trace-ui files in it so that the trace-ui feature\n+// is available for those users that are aware of it. Otherwise, copyUIAssets is not executed as it can take a couple\n+// minutes to finish, and it's not typically needed during local development.\n+if (gradle.startParameter.taskNames*.toLowerCase().contains(\"publish\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19827dcb75ccbe3f0dc51fa9a2a592f0aefbf7c2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzkxNzQwOnYy", "diffSide": "LEFT", "path": "marklogic-data-hub-central/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMToxNToxMFrOHgNYJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMTo0MToxNVrOHgOMTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzNTY1Mw==", "bodyText": "Are we going to run all these tests on PR too?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4703#discussion_r503535653", "createdAt": "2020-10-12T21:15:10Z", "author": {"login": "SameeraPriyathamTadikonda"}, "path": "marklogic-data-hub-central/build.gradle", "diffHunk": "@@ -179,24 +178,13 @@ task copyUiFiles(type: Copy, dependsOn: deleteSpringBootUiFiles, group: taskGrou\n     into springBootUiPath\n }\n \n-// Before the Spring Boot jar is built, build the UI files and copy them over\n-if (!(\n-    gradle.startParameter.taskNames*.toLowerCase().contains(\"publishplugins\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bintrayUpload\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"javadoc\") ||\n-        // bootRun doesn't need the UI, as it's assumed that the UI is being run separately via npm start\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"generateschemapojos\") ||\n-        project.hasProperty('skipui')\n-)\n-) {\n+// When creating the HC war file, need to build the UI files and add them to the classpath so that the war file includes them\n+if (gradle.startParameter.taskNames*.toLowerCase().contains(\"bootwar\")) {\n     tasks.processResources.dependsOn(buildUi, copyUiFiles)\n }\n \n+\n test {\n-\texclude 'com/marklogic/hub/curation/integrationtests/**'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7339bb475c64df15c13369ca21a162c4a24c42f8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU0OTAwNA==", "bodyText": "None of the 3 excluded packages exist anymore", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4703#discussion_r503549004", "createdAt": "2020-10-12T21:41:15Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/build.gradle", "diffHunk": "@@ -179,24 +178,13 @@ task copyUiFiles(type: Copy, dependsOn: deleteSpringBootUiFiles, group: taskGrou\n     into springBootUiPath\n }\n \n-// Before the Spring Boot jar is built, build the UI files and copy them over\n-if (!(\n-    gradle.startParameter.taskNames*.toLowerCase().contains(\"publishplugins\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bintrayUpload\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"javadoc\") ||\n-        // bootRun doesn't need the UI, as it's assumed that the UI is being run separately via npm start\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"generateschemapojos\") ||\n-        project.hasProperty('skipui')\n-)\n-) {\n+// When creating the HC war file, need to build the UI files and add them to the classpath so that the war file includes them\n+if (gradle.startParameter.taskNames*.toLowerCase().contains(\"bootwar\")) {\n     tasks.processResources.dependsOn(buildUi, copyUiFiles)\n }\n \n+\n test {\n-\texclude 'com/marklogic/hub/curation/integrationtests/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUzNTY1Mw=="}, "originalCommit": {"oid": "7339bb475c64df15c13369ca21a162c4a24c42f8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODg2NDYzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/build.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjo1Mzo1MVrOHg8Q0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzozMjo1MFrOHhdx0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMzgyNw==", "bodyText": "Does bootRun need to be added here as well?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4703#discussion_r504303827", "createdAt": "2020-10-13T22:53:51Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub-central/build.gradle", "diffHunk": "@@ -185,28 +184,17 @@ task copyUiFiles(type: Copy, dependsOn: deleteSpringBootUiFiles, group: taskGrou\n     into springBootUiPath\n }\n \n-// Before the Spring Boot jar is built, build the UI files and copy them over\n-if (!(\n-    gradle.startParameter.taskNames*.toLowerCase().contains(\"publishplugins\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bintrayUpload\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"javadoc\") ||\n-        // bootRun doesn't need the UI, as it's assumed that the UI is being run separately via npm start\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"generateschemapojos\") ||\n-        project.hasProperty('skipui')\n-)\n-) {\n+// When creating the HC war file, need to build the UI files and add them to the classpath so that the war file includes them\n+if (gradle.startParameter.taskNames*.toLowerCase().contains(\"bootwar\") || gradle.startParameter.taskNames*.toLowerCase().contains(\"buildrpm\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa8648821179f01ad0392567871748bca5615d54"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMjkwOQ==", "bodyText": "@SameeraPriyathamTadikonda  What gradle task is being run for the cypress tests? And are the cypress tests expecting the middle tier to contain all of the UI code? I looked for \"bootRun\" but didn't see it under ui/e2e, but I don't really know where the cypress stuff runs.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4703#discussion_r504322909", "createdAt": "2020-10-13T23:54:54Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/build.gradle", "diffHunk": "@@ -185,28 +184,17 @@ task copyUiFiles(type: Copy, dependsOn: deleteSpringBootUiFiles, group: taskGrou\n     into springBootUiPath\n }\n \n-// Before the Spring Boot jar is built, build the UI files and copy them over\n-if (!(\n-    gradle.startParameter.taskNames*.toLowerCase().contains(\"publishplugins\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bintrayUpload\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"javadoc\") ||\n-        // bootRun doesn't need the UI, as it's assumed that the UI is being run separately via npm start\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"generateschemapojos\") ||\n-        project.hasProperty('skipui')\n-)\n-) {\n+// When creating the HC war file, need to build the UI files and add them to the classpath so that the war file includes them\n+if (gradle.startParameter.taskNames*.toLowerCase().contains(\"bootwar\") || gradle.startParameter.taskNames*.toLowerCase().contains(\"buildrpm\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMzgyNw=="}, "originalCommit": {"oid": "aa8648821179f01ad0392567871748bca5615d54"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyNTU2MA==", "bodyText": "I'll start hubcentral using the RPM and run tests using the npm command 'npm run cy:run'", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4703#discussion_r504325560", "createdAt": "2020-10-14T00:03:41Z", "author": {"login": "SameeraPriyathamTadikonda"}, "path": "marklogic-data-hub-central/build.gradle", "diffHunk": "@@ -185,28 +184,17 @@ task copyUiFiles(type: Copy, dependsOn: deleteSpringBootUiFiles, group: taskGrou\n     into springBootUiPath\n }\n \n-// Before the Spring Boot jar is built, build the UI files and copy them over\n-if (!(\n-    gradle.startParameter.taskNames*.toLowerCase().contains(\"publishplugins\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bintrayUpload\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"javadoc\") ||\n-        // bootRun doesn't need the UI, as it's assumed that the UI is being run separately via npm start\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"generateschemapojos\") ||\n-        project.hasProperty('skipui')\n-)\n-) {\n+// When creating the HC war file, need to build the UI files and add them to the classpath so that the war file includes them\n+if (gradle.startParameter.taskNames*.toLowerCase().contains(\"bootwar\") || gradle.startParameter.taskNames*.toLowerCase().contains(\"buildrpm\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMzgyNw=="}, "originalCommit": {"oid": "aa8648821179f01ad0392567871748bca5615d54"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg1Mjk0NQ==", "bodyText": "The cypress tests do expect the middle tier to contain all of the UI code. At least locally, I've had to build UI, run the server, and then run cypress tests using the cy:run command.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4703#discussion_r504852945", "createdAt": "2020-10-14T17:32:50Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub-central/build.gradle", "diffHunk": "@@ -185,28 +184,17 @@ task copyUiFiles(type: Copy, dependsOn: deleteSpringBootUiFiles, group: taskGrou\n     into springBootUiPath\n }\n \n-// Before the Spring Boot jar is built, build the UI files and copy them over\n-if (!(\n-    gradle.startParameter.taskNames*.toLowerCase().contains(\"publishplugins\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bintrayUpload\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"javadoc\") ||\n-        // bootRun doesn't need the UI, as it's assumed that the UI is being run separately via npm start\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"bootrun\") ||\n-        gradle.startParameter.taskNames*.toLowerCase().contains(\"generateschemapojos\") ||\n-        project.hasProperty('skipui')\n-)\n-) {\n+// When creating the HC war file, need to build the UI files and add them to the classpath so that the war file includes them\n+if (gradle.startParameter.taskNames*.toLowerCase().contains(\"bootwar\") || gradle.startParameter.taskNames*.toLowerCase().contains(\"buildrpm\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMzgyNw=="}, "originalCommit": {"oid": "aa8648821179f01ad0392567871748bca5615d54"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3145, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}