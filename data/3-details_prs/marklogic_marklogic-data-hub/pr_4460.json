{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjg5NzEz", "number": 4460, "title": "DHFPROD-5530: e2e test for mapping with processors, DHFPROD-5765: rem\u2026", "bodyText": "\u2026oved unsupported datatypes in modeling\nDescription\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-08-21T15:06:40Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460", "merged": true, "mergeCommit": {"oid": "6964cc111b0b7699c40898d67fe779c252b3988e"}, "closed": true, "closedAt": "2020-08-22T22:37:32Z", "author": {"login": "brucean52"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBGQJzAFqTQ3MjU3MTY4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBMA2egFqTQ3MjgzNzQ4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNTcxNjg2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#pullrequestreview-472571686", "createdAt": "2020-08-21T15:07:51Z", "commit": {"oid": "b8a9de75c283f6cc39b83d257054116f120bb90c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTowNzo1MlrOHEw8GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTowNzo1MlrOHEw8GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc1ODE2OQ==", "bodyText": "I couldn't get clicking on the list icon and then clicking on the source mapping property to pass consistently, so I typed the xPath expression instead for the e2e test.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#discussion_r474758169", "createdAt": "2020-08-21T15:07:52Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/support/components/mapping/source-to-entity-map.tsx", "diffHunk": "@@ -0,0 +1,116 @@\n+class SourceToEntityMap {\n+  clearMap() {\n+    return cy.findByTestId('Clear-btn');\n+  }\n+\n+  testMap() {\n+    return cy.findByTestId('Test-btn');\n+  }\n+\n+  navigateUrisRight() {\n+    return cy.findByTestId('navigate-uris-right');\n+  }\n+\n+  navigateUrisLeft() {\n+    return cy.findByTestId('navigate-uris-left');\n+  }\n+  \n+  expandCollapseSource() {\n+    return cy.findByTestId('expandCollapseBtn-source');\n+  }\n+\n+  toggleSourceFilterMenu() {\n+    cy.findByTestId('filterIcon-key').click();\n+  }\n+\n+  setSourceSearch(propertyName: string) {\n+    cy.get('#searchInput-key').focus().type(propertyName);\n+  }\n+\n+  resetSourceSearch() {\n+    return cy.findByTestId('ResetSearch-key');\n+  }\n+\n+  submitSourceSearch() {\n+    return cy.findByTestId('submitSearch-key');\n+  }  \n+\n+  expandCollapseEntity() {\n+    return cy.findByTestId('expandCollapseBtn-entity');\n+  }\n+\n+  toggleEntityFilterMenu () {\n+    cy.findByTestId('filterIcon-name').click();\n+  }\n+\n+  setEntitySearch(propertyName: string) {\n+    cy.get('#searchInput-name').focus().type(propertyName);\n+  }\n+\n+  resetEntitySearch() {\n+    return cy.findByTestId('ResetSearch-name');\n+  }\n+\n+  submitEntitySearch() {\n+    return cy.findByTestId('submitSearch-name');\n+  }\n+\n+  /**\n+   * Get property icon from dropdown list by Entity type property name\n+   * @param propertyName\n+   * @example OrderId, address\n+   */\n+  getListIcon(propertyName: string) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8a9de75c283f6cc39b83d257054116f120bb90c"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/76c3fd1e990a18d901bddd15a82c2a52a9dc7e09", "committedDate": "2020-08-21T16:31:35Z", "message": "DHFPROD-5530: e2e test for mapping with processors, DHFPROD-5765: removed unsupported datatypes in modeling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8a9de75c283f6cc39b83d257054116f120bb90c", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/b8a9de75c283f6cc39b83d257054116f120bb90c", "committedDate": "2020-08-21T15:05:45Z", "message": "DHFPROD-5530: e2e test for mapping with processors, DHFPROD-5765: removed unsupported datatypes in modeling"}, "afterCommit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/76c3fd1e990a18d901bddd15a82c2a52a9dc7e09", "committedDate": "2020-08-21T16:31:35Z", "message": "DHFPROD-5530: e2e test for mapping with processors, DHFPROD-5765: removed unsupported datatypes in modeling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODI4Mjg0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#pullrequestreview-472828284", "createdAt": "2020-08-21T21:27:07Z", "commit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMToyNzowN1rOHE-UGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTo0MTo1NFrOHE-m7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk3NzMwNw==", "bodyText": "@briantang has a PR where the messaging is changed a little. \"Mapping\" should be lower case after it goes in.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#discussion_r474977307", "createdAt": "2020-08-21T21:27:07Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/curation/curate/mapping.spec.tsx", "diffHunk": "@@ -0,0 +1,81 @@\n+import { Application } from \"../../../support/application.config\";\n+import { tiles, toolbar } from \"../../../support/components/common\";\n+import {\n+  advancedSettingsDialog,\n+  createEditMappingDialog,\n+  sourceToEntityMap\n+} from '../../../support/components/mapping/index';\n+import browsePage from \"../../../support/pages/browse\";\n+import curatePage from \"../../../support/pages/curate\";\n+import runPage from \"../../../support/pages/run\";\n+import 'cypress-wait-until';\n+\n+describe('Mapping', () => {\n+\n+  beforeEach(() => {\n+    cy.visit('/');\n+    cy.contains(Application.title);\n+    cy.loginAsTestUserWithRoles(\"hub-central-flow-writer\", \"hub-central-mapping-writer\").withRequest();\n+    cy.waitUntil(() => toolbar.getCurateToolbarIcon()).click();\n+    cy.waitUntil(() => curatePage.getEntityTypePanel('Customer').should('be.visible'));\n+  });\n+\n+  afterEach(() => {\n+    cy.resetTestUser();\n+  })\n+\n+  after(() => {\n+    cy.loginAsDeveloper().withRequest();\n+    cy.deleteSteps('mapping', 'order-processors');\n+    cy.deleteFlows( 'orderFlow');\n+  })\n+\n+  it('can create mapping with processors, create new flow, add mapping step, run flow and verify processors', () => {\n+    const stepProcessors = '[{{}\"path\":\"/custom-modules/step-processors/addHeaders.sjs\",\"when\":\"beforeContentPersisted\",\"vars\":{{}\"exampleVariable\":\"testValue\"{}} {}},{{}\"path\":\"/org.example/addPermissions.sjs\",\"when\":\"beforeContentPersisted\"{}}]'\n+\n+    curatePage.toggleEntityTypeId('Order');\n+    curatePage.addNewMapStep().click();\n+\n+    // create mapping step\n+    createEditMappingDialog.setMappingName('order-processors');\n+    createEditMappingDialog.setMappingDescription('An order mapping with custom processors');\n+    createEditMappingDialog.setSourceRadio('Query');\n+    createEditMappingDialog.setQueryInput(\"cts.collectionQuery(['ingest-orders'])\")\n+    createEditMappingDialog.saveButton().click(); \n+    curatePage.verifyStepNameIsVisible('order-processors');\n+\n+    // add processors\n+    curatePage.stepSettings('order-processors').click();\n+    advancedSettingsDialog.toggleProcessors();\n+    advancedSettingsDialog.getProcessors().clear();\n+    advancedSettingsDialog.setProcessors(stepProcessors);\n+    advancedSettingsDialog.saveSettings('order-processors').click();\n+    advancedSettingsDialog.saveSettings('order-processors').should('not.be.visible');\n+\n+    // map source to entity\n+    curatePage.openSourceToEntityMap('Order', 'order-processors');\n+    sourceToEntityMap.expandCollapseEntity().should('be.visible').click();\n+    sourceToEntityMap.setXpathExpressionInput('orderId', 'OrderID');\n+    sourceToEntityMap.setXpathExpressionInput('address', '/');\n+    sourceToEntityMap.setXpathExpressionInput('city', 'ShipCity');\n+    sourceToEntityMap.setXpathExpressionInput('state', 'ShipAddress');\n+    sourceToEntityMap.setXpathExpressionInput('orderDetails', '/');\n+    sourceToEntityMap.setXpathExpressionInput('productID', 'OrderDetails/ProductID');\n+    sourceToEntityMap.setXpathExpressionInput('unitPrice', 'head(OrderDetails/UnitPrice)');\n+    sourceToEntityMap.setXpathExpressionInput('quantity', 'OrderDetails/Quantity');\n+    sourceToEntityMap.setXpathExpressionInput('discount', 'head(OrderDetails/Discount)');\n+    sourceToEntityMap.setXpathExpressionInput('shipRegion', 'ShipRegion');\n+    sourceToEntityMap.setXpathExpressionInput('shippedDate', 'ShippedDate');\n+    // close modal\n+    cy.get('body').type('{esc}');\n+\n+    curatePage.addToNewFlow('Order', 'order-processors');\n+    runPage.setFlowName('orderFlow');\n+    runPage.editSave().click();\n+    runPage.runStep('order-processors').click();\n+    cy.verifyStepRunResult('success','Mapping', 'order-processors');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk4MjEyNw==", "bodyText": "'order-processors' is used in multiple places, so for maintainability I would have used it in a variable. No need to change now, but something to think about.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#discussion_r474982127", "createdAt": "2020-08-21T21:41:54Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/curation/curate/mapping.spec.tsx", "diffHunk": "@@ -0,0 +1,81 @@\n+import { Application } from \"../../../support/application.config\";\n+import { tiles, toolbar } from \"../../../support/components/common\";\n+import {\n+  advancedSettingsDialog,\n+  createEditMappingDialog,\n+  sourceToEntityMap\n+} from '../../../support/components/mapping/index';\n+import browsePage from \"../../../support/pages/browse\";\n+import curatePage from \"../../../support/pages/curate\";\n+import runPage from \"../../../support/pages/run\";\n+import 'cypress-wait-until';\n+\n+describe('Mapping', () => {\n+\n+  beforeEach(() => {\n+    cy.visit('/');\n+    cy.contains(Application.title);\n+    cy.loginAsTestUserWithRoles(\"hub-central-flow-writer\", \"hub-central-mapping-writer\").withRequest();\n+    cy.waitUntil(() => toolbar.getCurateToolbarIcon()).click();\n+    cy.waitUntil(() => curatePage.getEntityTypePanel('Customer').should('be.visible'));\n+  });\n+\n+  afterEach(() => {\n+    cy.resetTestUser();\n+  })\n+\n+  after(() => {\n+    cy.loginAsDeveloper().withRequest();\n+    cy.deleteSteps('mapping', 'order-processors');\n+    cy.deleteFlows( 'orderFlow');\n+  })\n+\n+  it('can create mapping with processors, create new flow, add mapping step, run flow and verify processors', () => {\n+    const stepProcessors = '[{{}\"path\":\"/custom-modules/step-processors/addHeaders.sjs\",\"when\":\"beforeContentPersisted\",\"vars\":{{}\"exampleVariable\":\"testValue\"{}} {}},{{}\"path\":\"/org.example/addPermissions.sjs\",\"when\":\"beforeContentPersisted\"{}}]'\n+\n+    curatePage.toggleEntityTypeId('Order');\n+    curatePage.addNewMapStep().click();\n+\n+    // create mapping step\n+    createEditMappingDialog.setMappingName('order-processors');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODM1NzY0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#pullrequestreview-472835764", "createdAt": "2020-08-21T21:46:20Z", "commit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyODM3NDgz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#pullrequestreview-472837483", "createdAt": "2020-08-21T21:50:57Z", "commit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTo1MDo1N1rOHE-yow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMTo1MDo1N1rOHE-yow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDk4NTEyMw==", "bodyText": "FYI. Ingest test uses fixtures to get the content and type it in and felt it to be easier than parsing special characters in the spec file.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4460#discussion_r474985123", "createdAt": "2020-08-21T21:50:57Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/support/components/mapping/advanced-settings-dialog.tsx", "diffHunk": "@@ -0,0 +1,110 @@\n+class AdvancedSettingsDialog {\n+  /**\n+   * Set Source Database\n+   * @param dbName\n+   * @example data-hub-STAGING, data-hub-FINAL\n+   */\n+  setSourceDatabase(dbName: string) {\n+    cy.findByLabelText(`sourceDatabase-select`).click();\n+    cy.findByTestId(`sourceDbOptions-${dbName}`).click();\n+  }\n+\n+  /**\n+   * Set Target Database\n+   * @param dbName\n+   * @example data-hub-STAGING, data-hub-FINAL\n+   */\n+  setTargetDatabase(dbName: string) {\n+    cy.findByLabelText(`targetDatabase-select`).click();\n+    cy.findByTestId(`targetDbOptions-${dbName}`).click();\n+  }\n+\n+  addTargetCollection(collection: string) {\n+    cy.findByLabelText(`additionalColl-select`);\n+    cy.get('#property-name').type(collection);\n+  }\n+\n+  /**\n+   * Set format\n+   * @param format\n+   * @example JSON, XML\n+   */\n+  setTargetFormat(format: string) {\n+    cy.findByLabelText(`targetFormat-select`).click();\n+    // update id\n+  }\n+\n+  /**\n+   * Set Provenance Granularity\n+   * @param provenance\n+   * @example Coarse-grained, Off\n+   */\n+  setProvenanceGranularity(provenance: string) {\n+    cy.findByLabelText(`provGranularity-select`);\n+    cy.findByTestId(`provOptions-${provenance}`).click();\n+  }\n+\n+  /**\n+   * Set Entity Validation\n+   * @param index\n+   * @example 0 = Do not validate, 1 = store errors in headers, 2 = skip docs w/ errors \n+   */\n+  setEntityValidation(index: string) {\n+    cy.get('#validateEntity');\n+    cy.findByTestId(`entityValOpts-${index}`).click();\n+  }\n+\n+  batchSize() {\n+    return cy.get('#batchSize');\n+  }\n+\n+  /**\n+   * Set custom header content\n+   * @param headerContent\n+   * @example {} as valid JSON string\n+   */\n+  setHeaderContent(headerContent: string) {\n+    return cy.get('#headers').type(headerContent);\n+  }\n+\n+  toggleProcessors() {\n+    cy.findByText('Processors').click();\n+  }\n+\n+  getProcessors() {\n+    return cy.get('#processors');\n+  }\n+\n+  /**\n+   * Set processors\n+   * @param processor\n+   * @example [] as valid JSON string\n+   */\n+  setProcessors(processor: string) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c3fd1e990a18d901bddd15a82c2a52a9dc7e09"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2147, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}