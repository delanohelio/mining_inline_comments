{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNzI3NzUz", "number": 3464, "title": "DHFPROD-4079: dhsDeploy now deploys additional permitted resources", "bodyText": "Moved the guts of this from DataHubImpl to DhsDeployer. The \"dhsDeploy\" method in the DataHub interface was only used by the DhsDeployTask and thus is safe to remove (it is really an internal API that never should have been exposed in the DataHub interface).\nRemoved LoadHubSchemasCommand, which has been OBE for multiple releases.\nAdded some constructors to DHF objects so that they can more easily be reused in a non-Spring context, which is the case for DhsDeployer.", "createdAt": "2020-01-14T16:30:54Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3464", "merged": true, "mergeCommit": {"oid": "ab4f7144f0188333cce72ddec92270794ee69513"}, "closed": true, "closedAt": "2020-01-15T02:08:59Z", "author": {"login": "rjrudin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6TlTugFqTM0MjY2OTAzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6bNBmAFqTM0Mjk0MTk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjY5MDM1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3464#pullrequestreview-342669035", "createdAt": "2020-01-14T16:31:29Z", "commit": {"oid": "e34cf2a7889e68b061794036fe808fcc67b05cb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjozMToyOVrOFdd3Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjozMToyOVrOFdd3Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ0MjI0Mg==", "bodyText": "Most of this class was just moved here from DataHubImpl - the contents of this method are new though.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3464#discussion_r366442242", "createdAt": "2020-01-14T16:31:29Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/DhsDeployer.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.marklogic.appdeployer.AppConfig;\n+import com.marklogic.appdeployer.ConfigDir;\n+import com.marklogic.appdeployer.command.Command;\n+import com.marklogic.appdeployer.command.alert.DeployAlertActionsCommand;\n+import com.marklogic.appdeployer.command.alert.DeployAlertConfigsCommand;\n+import com.marklogic.appdeployer.command.alert.DeployAlertRulesCommand;\n+import com.marklogic.appdeployer.command.databases.DeployOtherDatabasesCommand;\n+import com.marklogic.appdeployer.command.schemas.LoadSchemasCommand;\n+import com.marklogic.appdeployer.command.tasks.DeployScheduledTasksCommand;\n+import com.marklogic.appdeployer.command.temporal.DeployTemporalAxesCommand;\n+import com.marklogic.appdeployer.command.temporal.DeployTemporalCollectionsCommand;\n+import com.marklogic.appdeployer.command.triggers.DeployTriggersCommand;\n+import com.marklogic.client.ext.SecurityContextType;\n+import com.marklogic.client.ext.helper.LoggingObject;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.deploy.HubAppDeployer;\n+import com.marklogic.hub.deploy.commands.DeployDatabaseFieldCommand;\n+import com.marklogic.hub.deploy.commands.HubDeployDatabaseCommandFactory;\n+import com.marklogic.hub.deploy.commands.LoadUserArtifactsCommand;\n+import com.marklogic.hub.deploy.commands.LoadUserModulesCommand;\n+import com.marklogic.hub.impl.HubConfigImpl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * Deploys resources, modules, and schemas to a DHS instance. Assumes that the user used to deploy these objects has\n+ * the \"data-hub-developer\" role.\n+ */\n+public class DhsDeployer extends LoggingObject {\n+\n+    public void deployToDhs(HubConfigImpl hubConfig) {\n+        prepareAppConfigForDeployingToDhs(hubConfig);\n+\n+        HubAppDeployer dhsDeployer = new HubAppDeployer(hubConfig.getManageClient(), hubConfig.getAdminManager(), null, hubConfig.newStagingClient());\n+        dhsDeployer.setCommands(buildCommandListForDeployingToDhs(hubConfig));\n+        dhsDeployer.deploy(hubConfig.getAppConfig());\n+    }\n+\n+    /**\n+     * The AppConfig object belonging to HubConfig can be configured based on known DHS environment settings. This\n+     * minimizes the number of properties that a user needs to specify themselves - i.e. the user shouldn't be expected\n+     * to configure all the properties that are known to be true about a DHS instance.\n+     *\n+     * @param hubConfig\n+     */\n+    protected void prepareAppConfigForDeployingToDhs(HubConfig hubConfig) {\n+        setKnownValuesForDhsDeployment(hubConfig);\n+\n+        AppConfig appConfig = hubConfig.getAppConfig();\n+\n+        // We always want all user modules loaded\n+        appConfig.setModuleTimestampsPath(null);\n+\n+        // We never want forests created, DHS handles that\n+        appConfig.setCreateForests(false);\n+\n+        removeHubInternalConfigDir(appConfig);\n+\n+        // 8000 is not available in DHS\n+        int port = hubConfig.getPort(DatabaseKind.STAGING);\n+        logger.info(\"Setting App-Services port to: \" + port);\n+        appConfig.setAppServicesPort(port);\n+\n+        if (hubConfig.getSimpleSsl(DatabaseKind.STAGING)) {\n+            logger.info(\"Enabling simple SSL for App-Services\");\n+            appConfig.setAppServicesSimpleSslConfig();\n+        }\n+\n+        String authMethod = hubConfig.getAuthMethod(DatabaseKind.STAGING);\n+        if (authMethod != null) {\n+            logger.info(\"Setting security context type for App-Services to: \" + authMethod);\n+            appConfig.setAppServicesSecurityContextType(SecurityContextType.valueOf(authMethod.toUpperCase()));\n+        }\n+    }\n+\n+    /**\n+     * The contents of hub-internal-config should have been deployed to DHS already via the DHF installer. And\n+     * it is not expected that a user will not have permission to deploy all of the resources in this directory.\n+     *\n+     * @param appConfig\n+     */\n+    protected void removeHubInternalConfigDir(AppConfig appConfig) {\n+        List<ConfigDir> safeConfigDirs = new ArrayList<>();\n+        appConfig.getConfigDirs().forEach(configDir -> {\n+            final String path = configDir.getBaseDir().getAbsolutePath();\n+            if (!path.toLowerCase().endsWith(\"hub-internal-config\")) {\n+                safeConfigDirs.add(configDir);\n+            }\n+        });\n+        appConfig.setConfigDirs(safeConfigDirs);\n+    }\n+\n+    /**\n+     * Per DHFPROD-2897, these are known values in a DHS installation that can be set so that they override any changes\n+     * the user may have made for their on-premise installation.\n+     *\n+     * @param hubConfig\n+     */\n+    protected void setKnownValuesForDhsDeployment(HubConfig hubConfig) {\n+        hubConfig.setHttpName(DatabaseKind.STAGING, HubConfig.DEFAULT_STAGING_NAME);\n+        hubConfig.setHttpName(DatabaseKind.FINAL, HubConfig.DEFAULT_FINAL_NAME);\n+        hubConfig.setHttpName(DatabaseKind.JOB, HubConfig.DEFAULT_JOB_NAME);\n+        hubConfig.setDbName(DatabaseKind.STAGING, HubConfig.DEFAULT_STAGING_NAME);\n+        hubConfig.setDbName(DatabaseKind.FINAL, HubConfig.DEFAULT_FINAL_NAME);\n+        hubConfig.setDbName(DatabaseKind.JOB, HubConfig.DEFAULT_JOB_NAME);\n+        hubConfig.setDbName(DatabaseKind.MODULES, HubConfig.DEFAULT_MODULES_DB_NAME);\n+        hubConfig.setDbName(DatabaseKind.STAGING_TRIGGERS, HubConfig.DEFAULT_STAGING_TRIGGERS_DB_NAME);\n+        hubConfig.setDbName(DatabaseKind.STAGING_SCHEMAS, HubConfig.DEFAULT_STAGING_SCHEMAS_DB_NAME);\n+        hubConfig.setDbName(DatabaseKind.FINAL_TRIGGERS, HubConfig.DEFAULT_FINAL_TRIGGERS_DB_NAME);\n+        hubConfig.setDbName(DatabaseKind.FINAL_SCHEMAS, HubConfig.DEFAULT_FINAL_SCHEMAS_DB_NAME);\n+\n+        AppConfig appConfig = hubConfig.getAppConfig();\n+        if (appConfig != null) {\n+            appConfig.setContentDatabaseName(hubConfig.getDbName(DatabaseKind.FINAL));\n+            appConfig.setTriggersDatabaseName(hubConfig.getDbName(DatabaseKind.FINAL_TRIGGERS));\n+            appConfig.setSchemasDatabaseName(hubConfig.getDbName(DatabaseKind.FINAL_SCHEMAS));\n+            appConfig.setModulesDatabaseName(hubConfig.getDbName(DatabaseKind.MODULES));\n+\n+            Map<String, String> customTokens = appConfig.getCustomTokens();\n+            customTokens.put(\"%%mlStagingDbName%%\", hubConfig.getDbName(DatabaseKind.STAGING));\n+            customTokens.put(\"%%mlFinalDbName%%\", hubConfig.getDbName(DatabaseKind.FINAL));\n+            customTokens.put(\"%%mlJobDbName%%\", hubConfig.getDbName(DatabaseKind.JOB));\n+            customTokens.put(\"%%mlModulesDbName%%\", hubConfig.getDbName(DatabaseKind.MODULES));\n+            customTokens.put(\"%%mlStagingAppserverName%%\", hubConfig.getDbName(DatabaseKind.STAGING));\n+            customTokens.put(\"%%mlFinalAppserverName%%\", hubConfig.getDbName(DatabaseKind.FINAL));\n+            customTokens.put(\"%%mlJobAppserverName%%\", hubConfig.getDbName(DatabaseKind.JOB));\n+            customTokens.put(\"%%mlStagingTriggersDbName%%\", hubConfig.getDbName(DatabaseKind.STAGING_TRIGGERS));\n+            customTokens.put(\"%%mlStagingSchemasDbName%%\", hubConfig.getDbName(DatabaseKind.STAGING_SCHEMAS));\n+            customTokens.put(\"%%mlFinalTriggersDbName%%\", hubConfig.getDbName(DatabaseKind.FINAL_TRIGGERS));\n+            customTokens.put(\"%%mlFinalSchemasDbName%%\", hubConfig.getDbName(DatabaseKind.FINAL_SCHEMAS));\n+        }\n+    }\n+\n+    /**\n+     * This list of commands is based on what a user with the data-hub-developer role is permitted to deploy.\n+     *\n+     * @param hubConfig\n+     * @return\n+     */\n+    protected List<Command> buildCommandListForDeployingToDhs(HubConfig hubConfig) {\n+        List<Command> commands = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34cf2a7889e68b061794036fe808fcc67b05cb1"}, "originalPosition": 147}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e34cf2a7889e68b061794036fe808fcc67b05cb1", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e34cf2a7889e68b061794036fe808fcc67b05cb1", "committedDate": "2020-01-14T16:27:22Z", "message": "DHFPROD-4079: dhsDeploy now deploys additional permitted resources\n\nMoved the guts of this from DataHubImpl to DhsDeployer. The \"dhsDeploy\" method in the DataHub interface was only used by the DhsDeployTask and thus is safe to remove (it is really an internal API that never should have been exposed in the DataHub interface). \n\nRemoved LoadHubSchemasCommand, which has been OBE for multiple releases. \n\nAdded some constructors to DHF objects so that they can more easily be reused in a non-Spring context, which is the case for DhsDeployer."}, "afterCommit": {"oid": "af8f8a963ff8f63cfdac759183591f274f9e8021", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/af8f8a963ff8f63cfdac759183591f274f9e8021", "committedDate": "2020-01-14T17:50:12Z", "message": "DHFPROD-4079: dhsDeploy now deploys additional permitted resources\n\nMoved the guts of this from DataHubImpl to DhsDeployer. The \"dhsDeploy\" method in the DataHub interface was only used by the DhsDeployTask and thus is safe to remove (it is really an internal API that never should have been exposed in the DataHub interface). \n\nRemoved LoadHubSchemasCommand, which has been OBE for multiple releases. \n\nAdded some constructors to DHF objects so that they can more easily be reused in a non-Spring context, which is the case for DhsDeployer."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODYyMjQx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3464#pullrequestreview-342862241", "createdAt": "2020-01-14T21:50:27Z", "commit": {"oid": "af8f8a963ff8f63cfdac759183591f274f9e8021"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMTo1MDoyN1rOFdm7mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMTo1MDoyN1rOFdm7mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU5MDg3NA==", "bodyText": "can we make the comment simpler. \"not expected\" followed by \"not have\" is confusing and makes me re-read it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3464#discussion_r366590874", "createdAt": "2020-01-14T21:50:27Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/dhs/DhsDeployer.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package com.marklogic.hub.dhs;\n+\n+import com.marklogic.appdeployer.AppConfig;\n+import com.marklogic.appdeployer.ConfigDir;\n+import com.marklogic.appdeployer.command.Command;\n+import com.marklogic.appdeployer.command.alert.DeployAlertActionsCommand;\n+import com.marklogic.appdeployer.command.alert.DeployAlertConfigsCommand;\n+import com.marklogic.appdeployer.command.alert.DeployAlertRulesCommand;\n+import com.marklogic.appdeployer.command.databases.DeployOtherDatabasesCommand;\n+import com.marklogic.appdeployer.command.schemas.LoadSchemasCommand;\n+import com.marklogic.appdeployer.command.tasks.DeployScheduledTasksCommand;\n+import com.marklogic.appdeployer.command.temporal.DeployTemporalAxesCommand;\n+import com.marklogic.appdeployer.command.temporal.DeployTemporalCollectionsCommand;\n+import com.marklogic.appdeployer.command.triggers.DeployTriggersCommand;\n+import com.marklogic.client.ext.SecurityContextType;\n+import com.marklogic.client.ext.helper.LoggingObject;\n+import com.marklogic.hub.DatabaseKind;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.deploy.HubAppDeployer;\n+import com.marklogic.hub.deploy.commands.DeployDatabaseFieldCommand;\n+import com.marklogic.hub.deploy.commands.HubDeployDatabaseCommandFactory;\n+import com.marklogic.hub.deploy.commands.LoadUserArtifactsCommand;\n+import com.marklogic.hub.deploy.commands.LoadUserModulesCommand;\n+import com.marklogic.hub.impl.HubConfigImpl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * Deploys resources, modules, and schemas to a DHS instance. Assumes that the user used to deploy these objects has\n+ * the \"data-hub-developer\" role.\n+ */\n+public class DhsDeployer extends LoggingObject {\n+\n+    public void deployToDhs(HubConfigImpl hubConfig) {\n+        prepareAppConfigForDeployingToDhs(hubConfig);\n+\n+        HubAppDeployer dhsDeployer = new HubAppDeployer(hubConfig.getManageClient(), hubConfig.getAdminManager(), null, hubConfig.newStagingClient());\n+        dhsDeployer.setCommands(buildCommandListForDeployingToDhs(hubConfig));\n+        dhsDeployer.deploy(hubConfig.getAppConfig());\n+    }\n+\n+    /**\n+     * The AppConfig object belonging to HubConfig can be configured based on known DHS environment settings. This\n+     * minimizes the number of properties that a user needs to specify themselves - i.e. the user shouldn't be expected\n+     * to configure all the properties that are known to be true about a DHS instance.\n+     *\n+     * @param hubConfig\n+     */\n+    protected void prepareAppConfigForDeployingToDhs(HubConfig hubConfig) {\n+        setKnownValuesForDhsDeployment(hubConfig);\n+\n+        AppConfig appConfig = hubConfig.getAppConfig();\n+\n+        // We always want all user modules loaded\n+        appConfig.setModuleTimestampsPath(null);\n+\n+        // We never want forests created, DHS handles that\n+        appConfig.setCreateForests(false);\n+\n+        removeHubInternalConfigDir(appConfig);\n+\n+        // 8000 is not available in DHS\n+        int port = hubConfig.getPort(DatabaseKind.STAGING);\n+        logger.info(\"Setting App-Services port to: \" + port);\n+        appConfig.setAppServicesPort(port);\n+\n+        if (hubConfig.getSimpleSsl(DatabaseKind.STAGING)) {\n+            logger.info(\"Enabling simple SSL for App-Services\");\n+            appConfig.setAppServicesSimpleSslConfig();\n+        }\n+\n+        String authMethod = hubConfig.getAuthMethod(DatabaseKind.STAGING);\n+        if (authMethod != null) {\n+            logger.info(\"Setting security context type for App-Services to: \" + authMethod);\n+            appConfig.setAppServicesSecurityContextType(SecurityContextType.valueOf(authMethod.toUpperCase()));\n+        }\n+    }\n+\n+    /**\n+     * The contents of hub-internal-config should have been deployed to DHS already via the DHF installer. And\n+     * it is not expected that a user will not have permission to deploy all of the resources in this directory.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af8f8a963ff8f63cfdac759183591f274f9e8021"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1771732d4a2d94685b94e51e1c445d6fad2e5fbb", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1771732d4a2d94685b94e51e1c445d6fad2e5fbb", "committedDate": "2020-01-14T22:45:42Z", "message": "DHFPROD-4079: dhsDeploy now deploys additional permitted resources\n\nMoved the guts of this from DataHubImpl to DhsDeployer. The \"dhsDeploy\" method in the DataHub interface was only used by the DhsDeployTask and thus is safe to remove (it is really an internal API that never should have been exposed in the DataHub interface). \n\nRemoved LoadHubSchemasCommand, which has been OBE for multiple releases. \n\nAdded some constructors to DHF objects so that they can more easily be reused in a non-Spring context, which is the case for DhsDeployer."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af8f8a963ff8f63cfdac759183591f274f9e8021", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/af8f8a963ff8f63cfdac759183591f274f9e8021", "committedDate": "2020-01-14T17:50:12Z", "message": "DHFPROD-4079: dhsDeploy now deploys additional permitted resources\n\nMoved the guts of this from DataHubImpl to DhsDeployer. The \"dhsDeploy\" method in the DataHub interface was only used by the DhsDeployTask and thus is safe to remove (it is really an internal API that never should have been exposed in the DataHub interface). \n\nRemoved LoadHubSchemasCommand, which has been OBE for multiple releases. \n\nAdded some constructors to DHF objects so that they can more easily be reused in a non-Spring context, which is the case for DhsDeployer."}, "afterCommit": {"oid": "1771732d4a2d94685b94e51e1c445d6fad2e5fbb", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/1771732d4a2d94685b94e51e1c445d6fad2e5fbb", "committedDate": "2020-01-14T22:45:42Z", "message": "DHFPROD-4079: dhsDeploy now deploys additional permitted resources\n\nMoved the guts of this from DataHubImpl to DhsDeployer. The \"dhsDeploy\" method in the DataHub interface was only used by the DhsDeployTask and thus is safe to remove (it is really an internal API that never should have been exposed in the DataHub interface). \n\nRemoved LoadHubSchemasCommand, which has been OBE for multiple releases. \n\nAdded some constructors to DHF objects so that they can more easily be reused in a non-Spring context, which is the case for DhsDeployer."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODk4ODQ0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3464#pullrequestreview-342898844", "createdAt": "2020-01-14T23:06:53Z", "commit": {"oid": "1771732d4a2d94685b94e51e1c445d6fad2e5fbb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTQxOTYy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3464#pullrequestreview-342941962", "createdAt": "2020-01-15T01:24:12Z", "commit": {"oid": "1771732d4a2d94685b94e51e1c445d6fad2e5fbb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2346, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}