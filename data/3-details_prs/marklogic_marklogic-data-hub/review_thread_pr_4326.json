{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMzU0MjEx", "number": 4326, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTozNDoxNlrOEVleag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTo1OTo0NlrOEVl6ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDY5NTQ2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/reader.spec.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTozNDoxNlrOG8bb5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoyMTo0MFrOG89A7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNzI1Mw==", "bodyText": "wondering why you had to use force: true option.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4326#discussion_r466017253", "createdAt": "2020-08-05T21:34:16Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/reader.spec.tsx", "diffHunk": "@@ -0,0 +1,93 @@\n+/// <reference types=\"cypress\"/>\n+\n+import modelPage from '../../support/pages/model';\n+import {\n+  entityTypeModal,\n+  entityTypeTable,\n+  propertyModal,\n+  propertyTable,\n+} from '../../support/components/model/index';\n+import { confirmationModal, toolbar, tiles } from '../../support/components/common/index';\n+import { Application } from '../../support/application.config';\n+import browsePage from '../../support/pages/browse'\n+import 'cypress-wait-until';\n+\n+describe('Entity Modeling: Reader Role', () => {\n+\n+  //login with valid account\n+  beforeEach(() => {\n+    cy.visit('/');\n+    cy.contains(Application.title);\n+    console.log(Cypress.env('mlHost'));\n+    cy.loginAsTestUserWithRoles(\"hub-central-entity-model-reader\").withRequest()\n+    cy.waitUntil(() => toolbar.getModelToolbarIcon()).click();\n+    entityTypeTable.waitForTableToLoad();\n+  });\n+\n+  after(() => {\n+      //resetting the test user back to only have 'hub-central-user' role\n+      cy.resetTestUser();\n+  });\n+\n+  it('can navigate by clicking instance count and last processed, can not create, edit, or delete entity models', () => {\n+    cy.waitUntil(() => entityTypeTable.getEntityLastProcessed('Person')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity()).should('eq', 'Person');\n+    browsePage.getClearAllButton().should('exist');\n+    \n+    toolbar.getModelToolbarIcon().click();\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    cy.waitUntil(() => entityTypeTable.getEntityInstanceCount('Order')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity().should('eq', 'Order'));\n+    browsePage.getClearAllButton().should('not.exist');\n+\n+    cy.go('back');\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    modelPage.getAddEntityButton().click({ force: true });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "977c635a8ba2b04f90cde942baca6af64ba990d3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzNDAyNQ==", "bodyText": "The test will fail if I don't because they aren't actionable items. Even though the button is disabled, I'm forcing clicks to see if the functionality is there. For edit Entity/Property names in the table, model-reader role displays text instead of links (with the same selector). So for reader tests, I'm clicking the same selectors as writer role, but I don't expect any edit/ add modals to show up.\nRunning the test without force: true", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4326#discussion_r466534025", "createdAt": "2020-08-06T16:25:36Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/reader.spec.tsx", "diffHunk": "@@ -0,0 +1,93 @@\n+/// <reference types=\"cypress\"/>\n+\n+import modelPage from '../../support/pages/model';\n+import {\n+  entityTypeModal,\n+  entityTypeTable,\n+  propertyModal,\n+  propertyTable,\n+} from '../../support/components/model/index';\n+import { confirmationModal, toolbar, tiles } from '../../support/components/common/index';\n+import { Application } from '../../support/application.config';\n+import browsePage from '../../support/pages/browse'\n+import 'cypress-wait-until';\n+\n+describe('Entity Modeling: Reader Role', () => {\n+\n+  //login with valid account\n+  beforeEach(() => {\n+    cy.visit('/');\n+    cy.contains(Application.title);\n+    console.log(Cypress.env('mlHost'));\n+    cy.loginAsTestUserWithRoles(\"hub-central-entity-model-reader\").withRequest()\n+    cy.waitUntil(() => toolbar.getModelToolbarIcon()).click();\n+    entityTypeTable.waitForTableToLoad();\n+  });\n+\n+  after(() => {\n+      //resetting the test user back to only have 'hub-central-user' role\n+      cy.resetTestUser();\n+  });\n+\n+  it('can navigate by clicking instance count and last processed, can not create, edit, or delete entity models', () => {\n+    cy.waitUntil(() => entityTypeTable.getEntityLastProcessed('Person')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity()).should('eq', 'Person');\n+    browsePage.getClearAllButton().should('exist');\n+    \n+    toolbar.getModelToolbarIcon().click();\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    cy.waitUntil(() => entityTypeTable.getEntityInstanceCount('Order')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity().should('eq', 'Order'));\n+    browsePage.getClearAllButton().should('not.exist');\n+\n+    cy.go('back');\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    modelPage.getAddEntityButton().click({ force: true });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNzI1Mw=="}, "originalCommit": {"oid": "977c635a8ba2b04f90cde942baca6af64ba990d3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2NTM4Mw==", "bodyText": "Okay. interesting way to test a reader role. So you are forcing a click action to verify that the user is able to read?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4326#discussion_r466565383", "createdAt": "2020-08-06T17:19:12Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/reader.spec.tsx", "diffHunk": "@@ -0,0 +1,93 @@\n+/// <reference types=\"cypress\"/>\n+\n+import modelPage from '../../support/pages/model';\n+import {\n+  entityTypeModal,\n+  entityTypeTable,\n+  propertyModal,\n+  propertyTable,\n+} from '../../support/components/model/index';\n+import { confirmationModal, toolbar, tiles } from '../../support/components/common/index';\n+import { Application } from '../../support/application.config';\n+import browsePage from '../../support/pages/browse'\n+import 'cypress-wait-until';\n+\n+describe('Entity Modeling: Reader Role', () => {\n+\n+  //login with valid account\n+  beforeEach(() => {\n+    cy.visit('/');\n+    cy.contains(Application.title);\n+    console.log(Cypress.env('mlHost'));\n+    cy.loginAsTestUserWithRoles(\"hub-central-entity-model-reader\").withRequest()\n+    cy.waitUntil(() => toolbar.getModelToolbarIcon()).click();\n+    entityTypeTable.waitForTableToLoad();\n+  });\n+\n+  after(() => {\n+      //resetting the test user back to only have 'hub-central-user' role\n+      cy.resetTestUser();\n+  });\n+\n+  it('can navigate by clicking instance count and last processed, can not create, edit, or delete entity models', () => {\n+    cy.waitUntil(() => entityTypeTable.getEntityLastProcessed('Person')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity()).should('eq', 'Person');\n+    browsePage.getClearAllButton().should('exist');\n+    \n+    toolbar.getModelToolbarIcon().click();\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    cy.waitUntil(() => entityTypeTable.getEntityInstanceCount('Order')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity().should('eq', 'Order'));\n+    browsePage.getClearAllButton().should('not.exist');\n+\n+    cy.go('back');\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    modelPage.getAddEntityButton().click({ force: true });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNzI1Mw=="}, "originalCommit": {"oid": "977c635a8ba2b04f90cde942baca6af64ba990d3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2NzQwNA==", "bodyText": "I'm testing that the reader role doesn't have any of the writer role privileges in the UI. If you add the \"model writer\" role to the reader test, the test will fail.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4326#discussion_r466567404", "createdAt": "2020-08-06T17:21:40Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/modeling/reader.spec.tsx", "diffHunk": "@@ -0,0 +1,93 @@\n+/// <reference types=\"cypress\"/>\n+\n+import modelPage from '../../support/pages/model';\n+import {\n+  entityTypeModal,\n+  entityTypeTable,\n+  propertyModal,\n+  propertyTable,\n+} from '../../support/components/model/index';\n+import { confirmationModal, toolbar, tiles } from '../../support/components/common/index';\n+import { Application } from '../../support/application.config';\n+import browsePage from '../../support/pages/browse'\n+import 'cypress-wait-until';\n+\n+describe('Entity Modeling: Reader Role', () => {\n+\n+  //login with valid account\n+  beforeEach(() => {\n+    cy.visit('/');\n+    cy.contains(Application.title);\n+    console.log(Cypress.env('mlHost'));\n+    cy.loginAsTestUserWithRoles(\"hub-central-entity-model-reader\").withRequest()\n+    cy.waitUntil(() => toolbar.getModelToolbarIcon()).click();\n+    entityTypeTable.waitForTableToLoad();\n+  });\n+\n+  after(() => {\n+      //resetting the test user back to only have 'hub-central-user' role\n+      cy.resetTestUser();\n+  });\n+\n+  it('can navigate by clicking instance count and last processed, can not create, edit, or delete entity models', () => {\n+    cy.waitUntil(() => entityTypeTable.getEntityLastProcessed('Person')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity()).should('eq', 'Person');\n+    browsePage.getClearAllButton().should('exist');\n+    \n+    toolbar.getModelToolbarIcon().click();\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    cy.waitUntil(() => entityTypeTable.getEntityInstanceCount('Order')).click();\n+    cy.url().should('include', '/tiles/explore');\n+    tiles.getExploreTile().should('exist');\n+    cy.waitUntil(() => browsePage.getSelectedEntity().should('eq', 'Order'));\n+    browsePage.getClearAllButton().should('not.exist');\n+\n+    cy.go('back');\n+    cy.url().should('include', '/tiles/model');\n+    tiles.getModelTile().should('exist');\n+\n+    modelPage.getAddEntityButton().click({ force: true });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxNzI1Mw=="}, "originalCommit": {"oid": "977c635a8ba2b04f90cde942baca6af64ba990d3"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDc2ODAzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/confirmation-modal/confirmation-modal.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMTo1OTo0NlrOG8cHog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyNjozN1rOG87AvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyODQ1MA==", "bodyText": "can we verify the actual message here?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4326#discussion_r466028450", "createdAt": "2020-08-05T21:59:46Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/confirmation-modal/confirmation-modal.test.tsx", "diffHunk": "@@ -304,5 +296,39 @@ describe('Confirmation Modal Component', () => {\n     userEvent.click(getByText('Yes'));\n     expect(confirmAction).toBeCalledTimes(1);\n   });\n+\n+  test('can render navigation away confirmation', () => {\n+    let toggleModal = jest.fn();\n+    let confirmAction = jest.fn();\n+\n+    const { queryByLabelText, getByText, rerender, getByLabelText } =  render(\n+      <ConfirmationModal\n+        isVisible={false}\n+        type={ConfirmationType.NavigationWarn}\n+        boldTextArray={[]}\n+        toggleModal={toggleModal}\n+        confirmAction={confirmAction}\n+      />\n+    );\n+\n+    expect(queryByLabelText('navigation-warn-text')).toBeNull();\n+\n+    rerender(<ConfirmationModal\n+      isVisible={true}\n+      type={ConfirmationType.NavigationWarn}\n+      boldTextArray={[]}\n+      toggleModal={toggleModal}\n+      confirmAction={confirmAction}\n+    />);\n+\n+    expect(getByText('Unsaved Changes')).toBeInTheDocument();\n+    expect(getByLabelText('navigation-warn-text')).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "977c635a8ba2b04f90cde942baca6af64ba990d3"}, "originalPosition": 245}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzNDU4OA==", "bodyText": "Yeah, I can change it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4326#discussion_r466534588", "createdAt": "2020-08-06T16:26:37Z", "author": {"login": "brucean52"}, "path": "marklogic-data-hub-central/ui/src/components/confirmation-modal/confirmation-modal.test.tsx", "diffHunk": "@@ -304,5 +296,39 @@ describe('Confirmation Modal Component', () => {\n     userEvent.click(getByText('Yes'));\n     expect(confirmAction).toBeCalledTimes(1);\n   });\n+\n+  test('can render navigation away confirmation', () => {\n+    let toggleModal = jest.fn();\n+    let confirmAction = jest.fn();\n+\n+    const { queryByLabelText, getByText, rerender, getByLabelText } =  render(\n+      <ConfirmationModal\n+        isVisible={false}\n+        type={ConfirmationType.NavigationWarn}\n+        boldTextArray={[]}\n+        toggleModal={toggleModal}\n+        confirmAction={confirmAction}\n+      />\n+    );\n+\n+    expect(queryByLabelText('navigation-warn-text')).toBeNull();\n+\n+    rerender(<ConfirmationModal\n+      isVisible={true}\n+      type={ConfirmationType.NavigationWarn}\n+      boldTextArray={[]}\n+      toggleModal={toggleModal}\n+      confirmAction={confirmAction}\n+    />);\n+\n+    expect(getByText('Unsaved Changes')).toBeInTheDocument();\n+    expect(getByLabelText('navigation-warn-text')).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAyODQ1MA=="}, "originalCommit": {"oid": "977c635a8ba2b04f90cde942baca6af64ba990d3"}, "originalPosition": 245}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3909, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}