{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMzg5NDMz", "number": 3470, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDoyNjozNlrODYWpPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNDo0NzowMFrODZX_FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODYzNDIxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/GenerateFunctionMetadataCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDoyNjozNlrOFeKqig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDoyNjozNlrOFeKqig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NjMzMA==", "bodyText": "I recommend adding a constructor instead", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3470#discussion_r367176330", "createdAt": "2020-01-16T00:26:36Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/GenerateFunctionMetadataCommand.java", "diffHunk": "@@ -91,4 +91,9 @@ public void execute(CommandContext context) {\n             logger.warn(\"GenerateFunctionMetadataCommand is not supported on this MarkLogic server version \");\n         }\n     }\n+\n+    public void setHubConfig(HubConfig hubConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f609e0e46b435b5d16edfe035368567fc70e84"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODYzNTkzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDoyNzo0M1rOFeKrlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDoyNzo0M1rOFeKrlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NjU5OA==", "bodyText": "I recommend using the constructor for each of these", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3470#discussion_r367176598", "createdAt": "2020-01-16T00:27:43Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/DataHubImpl.java", "diffHunk": "@@ -895,10 +895,31 @@ protected void prepareProjectBeforeUpgrading(HubProject hubProject, String curre\n     // only used in test\n     public void setHubConfig(HubConfigImpl hubConfig) {\n         this.hubConfig = hubConfig;\n+        if (this.loadUserModulesCommand != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f609e0e46b435b5d16edfe035368567fc70e84"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODYzNjY1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/EntityManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDoyODowN1rOFeKsAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDoyODowN1rOFeKsAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NjcwNQ==", "bodyText": "I recommend just ditching this, it only complicates things. Just change each reference to hubConfig.getHubProject().", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3470#discussion_r367176705", "createdAt": "2020-01-16T00:28:07Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/EntityManagerImpl.java", "diffHunk": "@@ -35,32 +35,44 @@\n import com.marklogic.hub.EntityManager;\n import com.marklogic.hub.HubConfig;\n import com.marklogic.hub.HubProject;\n-import com.marklogic.hub.entity.*;\n+import com.marklogic.hub.entity.DefinitionType;\n+import com.marklogic.hub.entity.DefinitionsType;\n+import com.marklogic.hub.entity.HubEntity;\n+import com.marklogic.hub.entity.InfoType;\n+import com.marklogic.hub.entity.ItemType;\n+import com.marklogic.hub.entity.PropertyType;\n import com.marklogic.hub.error.EntityServicesGenerationException;\n import com.marklogic.hub.util.HubModuleManager;\n import org.apache.commons.io.FileUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.FileSystemResource;\n import org.springframework.core.io.Resource;\n import org.springframework.stereotype.Component;\n+import org.springframework.web.context.annotation.SessionScope;\n \n+import javax.annotation.PostConstruct;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n import java.util.stream.Collectors;\n \n+@SessionScope\n @Component\n public class EntityManagerImpl extends LoggingObject implements EntityManager {\n     private static final String ENTITY_FILE_EXTENSION = \".entity.json\";\n \n     @Autowired\n     private HubConfig hubConfig;\n \n-    @Autowired\n-    private HubProject hubProject;\n+    private HubProject hubProject = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f609e0e46b435b5d16edfe035368567fc70e84"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTMzOTczOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserModulesCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNDo0NzowMFrOFfuXJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo1OTozNlrOFf66yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgwOTc2NA==", "bodyText": "EntityManagerImpl is the only implementation of EntityManager. Maybe we should add the setHubConfig as an new interface method instead of checking the instance type and do the cast...", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3470#discussion_r368809764", "createdAt": "2020-01-21T04:47:00Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserModulesCommand.java", "diffHunk": "@@ -270,6 +270,12 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\n \n     public void setHubConfig(HubConfig hubConfig) {\n         this.hubConfig = hubConfig;\n+        if (this.entityManager == null) {\n+            this.entityManager = new EntityManagerImpl();\n+        }\n+        if (this.entityManager instanceof EntityManagerImpl) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f609e0e46b435b5d16edfe035368567fc70e84"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxNTQ5OQ==", "bodyText": "Setters for dependencies shouldn't be part of an interface, as that exposes the implementation. EntityManagerImpl(HubConfig) should be used instead when setHubConfig is called (though I don't think there should be a setHubConfig on LoadUserModulesCommand either - it should be LoadUserModulesCommand(HubConfig) instead).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3470#discussion_r369015499", "createdAt": "2020-01-21T13:59:36Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/deploy/commands/LoadUserModulesCommand.java", "diffHunk": "@@ -270,6 +270,12 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\n \n     public void setHubConfig(HubConfig hubConfig) {\n         this.hubConfig = hubConfig;\n+        if (this.entityManager == null) {\n+            this.entityManager = new EntityManagerImpl();\n+        }\n+        if (this.entityManager instanceof EntityManagerImpl) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODgwOTc2NA=="}, "originalCommit": {"oid": "b0f609e0e46b435b5d16edfe035368567fc70e84"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3641, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}