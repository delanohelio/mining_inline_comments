{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTE2MzEw", "number": 4449, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjowNzo1OFrOEauRDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjowNzo1OFrOEauRDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDU2NDYyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjowNzo1OFrOHEU7_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODowNzo1N1rOHE2kAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5OTM4OA==", "bodyText": "This is a good test. Couple of nitpicky items:\n\nDo we need a separate test suite? We tried to test URI navigation and verify source table data, didnt work out at the time. If we are able to assert doc content on navigation, then we can keep this in a separate suite and add more tests later to assert source data.\nuriStart, uriNext, uriReset are really aliases to the same locator?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4449#discussion_r474299388", "createdAt": "2020-08-20T22:07:58Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "diffHunk": "@@ -1084,3 +1084,29 @@ describe('RTL Source Selector/Source Search tests', () => {\n     });\n });\n \n+describe('Source URI navigation', () => {\n+\n+    afterEach(cleanup);\n+\n+    test('Index resets on close of mapping',  async() => {\n+        const { getByLabelText, getByTestId } = render(<SourceToEntityMap {...data.mapProps}  mappingVisible={true}/>);\n+\n+        // URI index starts at 1\n+        let uriStart = within(getByLabelText('uriIndex'));\n+        expect(uriStart.getByText('1')).toBeInTheDocument();\n+\n+        // Click next, URI index is 2\n+        fireEvent.click(getByTestId('navigate-uris-right'));\n+        let uriNext = within(getByLabelText('uriIndex'));\n+        expect(uriNext.getByText('2')).toBeInTheDocument();\n+\n+        // Close mapping modal\n+        fireEvent.click(getByLabelText('icon: close'));\n+\n+        // URI index reset to 1\n+        let uriReset = within(getByLabelText('uriIndex'));\n+        expect(uriReset.getByText('1')).toBeInTheDocument();\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e8c433a310a47580525943411562cea6715408"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg1MDMwNw==", "bodyText": "I moved the test into \"RTL Source-to-entity map tests\" and updated the URI variable.\nThis set of tests should be better organized be given the complexity of the component, that can be taken care of in a future refactor.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4449#discussion_r474850307", "createdAt": "2020-08-21T18:07:57Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "diffHunk": "@@ -1084,3 +1084,29 @@ describe('RTL Source Selector/Source Search tests', () => {\n     });\n });\n \n+describe('Source URI navigation', () => {\n+\n+    afterEach(cleanup);\n+\n+    test('Index resets on close of mapping',  async() => {\n+        const { getByLabelText, getByTestId } = render(<SourceToEntityMap {...data.mapProps}  mappingVisible={true}/>);\n+\n+        // URI index starts at 1\n+        let uriStart = within(getByLabelText('uriIndex'));\n+        expect(uriStart.getByText('1')).toBeInTheDocument();\n+\n+        // Click next, URI index is 2\n+        fireEvent.click(getByTestId('navigate-uris-right'));\n+        let uriNext = within(getByLabelText('uriIndex'));\n+        expect(uriNext.getByText('2')).toBeInTheDocument();\n+\n+        // Close mapping modal\n+        fireEvent.click(getByLabelText('icon: close'));\n+\n+        // URI index reset to 1\n+        let uriReset = within(getByLabelText('uriIndex'));\n+        expect(uriReset.getByText('1')).toBeInTheDocument();\n+    });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5OTM4OA=="}, "originalCommit": {"oid": "06e8c433a310a47580525943411562cea6715408"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3700, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}