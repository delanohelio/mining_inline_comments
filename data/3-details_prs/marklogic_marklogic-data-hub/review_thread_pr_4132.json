{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4ODMxMTcz", "number": 4132, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMjo0ODozOVrOEIKNLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NDoyMlrOEIfQHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTkxMjc3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMjo0ODozOVrOGn9Lhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1Mjo0MVrOGoe5rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1MDAyMw==", "bodyText": "I'm unclear why it is stringifying and then parsing immediately after. Is it is to convert from a JSON node to a plain JSON object? If so, I think that is worth adding a comment for. Also,  selectedPropertyMetadata.toObject() may be a better way.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4132#discussion_r444550023", "createdAt": "2020-06-23T22:48:39Z", "author": {"login": "ryanjdew"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -43,10 +43,13 @@ function addPropertiesToSearchResponse(entityName, searchResponse, propertiesToD\n     selectedPropertyMetadata = buildSelectedPropertiesMetadata(allMetadata, selectedPropertyNames);\n   }\n   selectedPropertyMetadata = selectedPropertyMetadata.length > 0 ? selectedPropertyMetadata : propertyMetadata.slice(0, maxDefaultProperties);\n+  let selectedPropertyMetadataFinal = JSON.parse(JSON.stringify(selectedPropertyMetadata));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feab7ee1b999e84ce1189abda5f34968b97ff7fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1NDA0OA==", "bodyText": "This is to create a deep copy of selectedPropertyMetadata with its own object references, as I later modify the objects inside of selectedPropertyMetadataFinal. I will add a clarifying comment.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4132#discussion_r444554048", "createdAt": "2020-06-23T23:00:52Z", "author": {"login": "saarimrahman"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -43,10 +43,13 @@ function addPropertiesToSearchResponse(entityName, searchResponse, propertiesToD\n     selectedPropertyMetadata = buildSelectedPropertiesMetadata(allMetadata, selectedPropertyNames);\n   }\n   selectedPropertyMetadata = selectedPropertyMetadata.length > 0 ? selectedPropertyMetadata : propertyMetadata.slice(0, maxDefaultProperties);\n+  let selectedPropertyMetadataFinal = JSON.parse(JSON.stringify(selectedPropertyMetadata));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1MDAyMw=="}, "originalCommit": {"oid": "feab7ee1b999e84ce1189abda5f34968b97ff7fb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwMjUwOA==", "bodyText": "Is this no longer needed now that selectedPropertyMetadata isn't being modified?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4132#discussion_r445102508", "createdAt": "2020-06-24T18:52:41Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -43,10 +43,13 @@ function addPropertiesToSearchResponse(entityName, searchResponse, propertiesToD\n     selectedPropertyMetadata = buildSelectedPropertiesMetadata(allMetadata, selectedPropertyNames);\n   }\n   selectedPropertyMetadata = selectedPropertyMetadata.length > 0 ? selectedPropertyMetadata : propertyMetadata.slice(0, maxDefaultProperties);\n+  let selectedPropertyMetadataFinal = JSON.parse(JSON.stringify(selectedPropertyMetadata));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1MDAyMw=="}, "originalCommit": {"oid": "feab7ee1b999e84ce1189abda5f34968b97ff7fb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTk1NzkxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjo1ODozMVrOGoQ70g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjo1ODozMVrOGoQ70g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg3MzY4Mg==", "bodyText": "I was able to comment out most of the new code here and the tests all still pass. I did this:\n            if (entityDef.hasOwnProperty(\"primaryKey\")) {\n              let primaryKey = entityDef.primaryKey;\n              if (entityInstance.hasOwnProperty((primaryKey))) {\n                  result.primaryKey.propertyPath = primaryKey;\n                  result.primaryKey.propertyValue = entityInstance[primaryKey];\n              } else { // no primaryKey in entityInstance, so use uri\n                result.primaryKey.propertyPath = \"uri\";\n                result.primaryKey.propertyValue = result.uri;\n              }\n            }\n\nSo I'm not clear on why all the other logic is needed. If it's for the All Entities view, I don't think we care about selected properties there, right? The user shouldn't be able to do that for that feature. In that context, we know the identifier should always be first.\nAlso, in the above logic, it's not handling the case where there's no primaryKey property defined, right? I think what we really want is a getPrimaryValue(entityInstance, entityDefinition) function that will return an object containing propertyPath/propertyValue, or it will return null. If it returns null, then use URI.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4132#discussion_r444873682", "createdAt": "2020-06-24T12:58:31Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -55,19 +60,56 @@ function addPropertiesToSearchResponse(entityName, searchResponse, propertiesToD\n       console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n     }\n \n+    let entityDef = entityModel.definitions[entityName];\n     if (instance != null) {\n       const entityInstance = instance[entityName];\n       if (!entityInstance) {\n         console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityName}'; will not add entity properties to its search result`);\n       } else {\n         selectedPropertyMetadata.forEach(parentProperty => {\n-          result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n-        });\n+            result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n+\n+            if (entityDef.hasOwnProperty(\"primaryKey\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "267d8974d596366922d55068597ff6ced5afd1f1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTk2MjY2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/entities/search/addPropertiesToSearchResponse.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjo1OTo1MlrOGoQ-2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjo1OTo1MlrOGoQ-2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg3NDQ1OQ==", "bodyText": "@saarimrahman @rahulvudutala All of the functions in here need to return an array of assertions so that they all get reported back (as opposed to JUnit, where you only have to call test functions).\nSo this should be:\n  return [\n    test.assertEqual(101, response.results[0].primaryKey.propertyValue),\n    test.assertEqual(\"customerId\", response.results[0].primaryKey.propertyPath),\n    test.assertEqual(101, response.results[1].primaryKey.propertyValue),\n    test.assertEqual(\"customerId\", response.results[1].primaryKey.propertyPath)\n  ]\n\nThat needs to be done for all of the functions.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4132#discussion_r444874459", "createdAt": "2020-06-24T12:59:52Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/entities/search/addPropertiesToSearchResponse.sjs", "diffHunk": "@@ -373,8 +373,54 @@ function verifyResultsWithoutSelectedProperties() {\n   test.assertEqual(7, response.entityPropertyDefinitions.length);\n }\n \n+function verifyPrimaryKeyWithDefinedEntities() {\n+  const response = {\n+    \"snippet-format\": \"snippet\",\n+    \"total\": 2,\n+    \"results\": [\n+      {\n+        \"index\": 1,\n+        \"uri\": \"/content/jane.json\",\n+      },\n+      {\n+        \"index\": 2,\n+        \"uri\": \"/content/sally.json\",\n+      }\n+    ]\n+  };\n+  entitySearchLib.addPropertiesToSearchResponse(entityName, response);\n+  test.assertEqual(101, response.results[0].primaryKey.propertyValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "267d8974d596366922d55068597ff6ced5afd1f1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzM1NzMzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1MzoxNlrOGoe6-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1MzoxNlrOGoe6-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwMjg0MQ==", "bodyText": "And I think this can just be selectedPropertyMetadata again?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4132#discussion_r445102841", "createdAt": "2020-06-24T18:53:16Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -55,19 +60,30 @@ function addPropertiesToSearchResponse(entityName, searchResponse, propertiesToD\n       console.log(`Unable to obtain entity instance from document with URI '${result.uri}'; will not add entity properties to its search result`);\n     }\n \n+    let entityDef = entityModel.definitions[entityName];\n     if (instance != null) {\n       const entityInstance = instance[entityName];\n       if (!entityInstance) {\n         console.log(`Unable to obtain entity instance from document with URI '${result.uri}' and entity name '${entityName}'; will not add entity properties to its search result`);\n       } else {\n         selectedPropertyMetadata.forEach(parentProperty => {\n-          result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n-        });\n+            result.entityProperties.push(getPropertyValues(parentProperty, entityInstance));\n+            result.primaryKey = getPrimaryValue(entityInstance, entityDef);\n+\n+            // no primaryKey in entity instance, so use URI\n+            if (result.primaryKey === null) {\n+              result.primaryKey = {\n+                \"propertyPath\": \"uri\",\n+                \"propertyValue\": result.uri\n+              }\n+            }\n+          }\n+        );\n       }\n     }\n   });\n   // Make it easy for the client to know which property names were used, and which ones exist\n-  searchResponse.selectedPropertyDefinitions = selectedPropertyMetadata;\n+  searchResponse.selectedPropertyDefinitions = selectedPropertyMetadataFinal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c010037a2c4a26420148d59f2cd6e5b3641c5a50"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzM2MDkzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NDoyMlrOGoe9Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxODo1NDoyMlrOGoe9Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTEwMzQwNg==", "bodyText": "I think there's one more scenario to support here - the primaryKey property exists, but it does not have a value. Would be unusual, but could happen. So if entityInstance[primaryKey] is null or an empty string, return null here as well.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4132#discussion_r445103406", "createdAt": "2020-06-24T18:54:22Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/entities/entity-search-lib.sjs", "diffHunk": "@@ -269,6 +285,23 @@ function getPropertyValues(currentProperty, entityInstance) {\n   return resultObject;\n }\n \n+// returns null to use uri\n+function getPrimaryValue(entityInstance, entityDefinition) {\n+  let primaryKeyData = {}\n+  if (entityDefinition.hasOwnProperty(\"primaryKey\")) {\n+    let primaryKey = entityDefinition.primaryKey;\n+    if (entityInstance.hasOwnProperty((primaryKey))) {\n+      primaryKeyData.propertyPath = primaryKey;\n+      primaryKeyData.propertyValue = entityInstance[primaryKey];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c010037a2c4a26420148d59f2cd6e5b3641c5a50"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3927, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}