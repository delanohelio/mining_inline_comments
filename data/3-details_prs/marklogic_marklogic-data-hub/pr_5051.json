{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTY0MTM5", "number": 5051, "title": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Code passes ESLint tests\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-12-23T18:01:48Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051", "merged": true, "mergeCommit": {"oid": "27f07787cf2a74ee74e83d7c2a240eace7d2c9ab"}, "closed": true, "closedAt": "2021-01-08T17:21:36Z", "author": {"login": "devinnicholson"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrA6EGABqjQxNTU2NzAzOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABduL3hSgFqTU2NDQzMjM3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fec3ea8314950ddbd8958a7d008243e526fe55d6", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fec3ea8314950ddbd8958a7d008243e526fe55d6", "committedDate": "2020-12-23T17:59:09Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}, "afterCommit": {"oid": "9e6fa6bb2607f35d47ff62e62113a626163b1864", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9e6fa6bb2607f35d47ff62e62113a626163b1864", "committedDate": "2020-12-29T20:39:15Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e6fa6bb2607f35d47ff62e62113a626163b1864", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9e6fa6bb2607f35d47ff62e62113a626163b1864", "committedDate": "2020-12-29T20:39:15Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}, "afterCommit": {"oid": "5853377b1515912c85a98976899887b3ff2f81e8", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5853377b1515912c85a98976899887b3ff2f81e8", "committedDate": "2020-12-29T20:41:17Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMTc2NDMz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-560176433", "createdAt": "2020-12-30T19:34:38Z", "commit": {"oid": "5853377b1515912c85a98976899887b3ff2f81e8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxOTozNDozOFrOIMz8Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxOTozNToxMVrOIMz8xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMwNDgxMA==", "bodyText": "Let's not keep the code that is commented out and we don't need for now. Looks like this is a question for PM & UX team to include a sample processor and Custom hook in the tooltip and once its approved then we can add it later.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#discussion_r550304810", "createdAt": "2020-12-30T19:34:38Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.tsx", "diffHunk": "@@ -0,0 +1,681 @@\n+import React from \"react\";\n+\n+/* --- MODELING --- */\n+\n+const ModelingIntros = {\n+  main: 'The entity model is comprised of entity types that describe and standardize your data. You need these entity types to curate your data.'\n+};\n+\n+const ModelingTooltips = {\n+  /* Buttons */\n+  addNewEntity: 'Add a new entity type.',\n+  saveAll: 'Save all changes to all entity types.',\n+  revertAll: 'Discard unsaved changes made to all entity types.',\n+  addProperty: 'Add properties to this entity type.',\n+\n+  /* Values made into links */\n+  entityTypeName: 'Click to view or edit settings for this entity type.',\n+  instanceNumber: 'Click to view all instances of this entity type.',\n+  lastProcessed: 'Click to view all instances of this entity type that were processed by the job that ended at this time.',\n+  entityPropertyName:  'Click to view or edit settings for this entity property.',\n+\n+  /* Icons for entity types */\n+  saveIcon: 'Save changes to this entity type.',\n+  revertIcon: 'Discard unsaved changes to this entity type.',\n+  deleteIcon: 'Delete this entity type.',\n+\n+  /* Icons for entity properties */\n+  addStructuredProperty: 'Add a property to this structured property.',\n+  deleteProperty: 'Delete this property.',\n+\n+  /* Yes/No in modal; column headers in property list */\n+  identifier: 'If enabled, uniquely identifies each instance of this entity type. Restricted to only one property per entity type.',\n+  multiple: 'If enabled, the property holds an array of values.',\n+  sort: 'If enabled, the property can be used to sort the results of queries and filters in ascending or descending order.',\n+  facet: 'If enabled, the property can be used to filter, search for, and categorize documents.',\n+  pii: 'If enabled, the property\\'s value must be safeguarded and handled according to Personally Identifiable Information (PII) protection rules and policies.',\n+  wildcard: 'If enabled, wildcards can be used to search values of the property.',\n+\n+  /* Text fields */\n+  nameEntityType: 'The name of this entity type. ' +\n+    'Names must start with a letter and can contain letters, numbers, hyphens, and underscores.',  /* intended dupe: all names */\n+  descriptionEntityType: 'A description of this entity type.',\n+  nameEntityProperty: 'The name of this entity property. ' +\n+    'Names must start with a letter and can contain letters, numbers, hyphens, and underscores.',  /* intended dupe: all names */\n+  descriptionEntityProperty: 'A description of this entity property.',\n+\n+\n+  /* TO BE DEPRECATED. Use ModelingTooltips.nameEntityType. */\n+  nameRegex: 'Names must start with a letter and can contain letters, numbers, hyphens, and underscores.',\n+\n+  /* TO BE DEPRECATED. Use ModelingTooltips.descriptionEntityType. */\n+  entityDescription: 'A description of this entity type.',\n+\n+  /* TO BE DEPRECATED. Use ModelingMessages.entityEditedAlert. */\n+  entityEditedAlert: 'You have unsaved changes for one or more entity types. You can individually save each modified entity type or save all.',\n+\n+  /* TO BE DEPRECATED. Use ModelingMessages.saveEntityConfirm. */\n+  saveEntityConfirm: 'You have unsaved changes. Saving changes to the entity model could impact features that depend on it or on data that require reindexing due to the changes.',\n+\n+  /* TO BE DEPRECATED. Use SecurityTooltips.missingPermission. */\n+  noWriteAccess: 'Contact your security administrator for access.'\n+};\n+\n+const ModelingPlaceholders = {\n+  nameEntityType: 'Enter the name.',  /* intended dupe (value only): common */\n+  descriptionEntityType: 'Enter the description.',  /* intended dupe (value only): common */\n+  nameEntityProperty: 'Enter the name.',  /* intended dupe (value only): common */\n+  descriptionEntityProperty: 'Enter the description.'  /* intended dupe (value only): common */\n+};\n+\n+const ModelingMessages = {\n+  entityEditedAlert: 'You have unsaved changes for one or more entity types. You can individually save each modified entity type or save all.',\n+  saveEntityConfirm: 'You have unsaved changes. Saving changes to the entity model could impact features that depend on it or on data that require reindexing due to the changes.'\n+};\n+\n+\n+/* --- FLOW --- */\n+\n+const FlowIntros = {\n+};\n+\n+const FlowTooltips = {\n+  name: 'The name of this flow configuration. This cannot be changed after the flow is created.',\n+  nameField: 'The flow name is used as part of filenames, as a collection name, and as metadata in logs. It cannot be changed after the flow is created.',\n+  description: 'A description of this flow configuration.'\n+};\n+\n+const FlowPlaceholders = {\n+  name: 'Enter the flow name.',\n+  description: 'Enter the flow description.'\n+};\n+\n+const FlowMessages = {\n+};\n+\n+\n+/* --- STEPS - COMMON --- */\n+\n+const CommonStepTooltips = {\n+  name: 'The name of this step definition.',\n+  description: 'A description of this step definition.',\n+  sourceQuery: 'The collection tag or CTS query that selects the source data to process in this step.',\n+  sourceDatabase: 'The database where the input data is read from.',\n+  targetDatabase: 'The database where to store the processed data.',\n+  targetFormat: 'The format of the records in the target database.',\n+  targetPermissions: (\n+    <span>A comma-delimited string that defines permissions required to access the processed record. The string must be in the format \n+      <span style={{fontFamily: \"monospace\"}}> role, capability, role, capability,...</span>, where \n+      <i> capability</i> can be <span style={{fontFamily: \"monospace\"}}>read</span>, \n+      <span style={{fontFamily: \"monospace\"}}> insert</span>, \n+      <span style={{fontFamily: \"monospace\"}}> update</span>, or \n+      <span style={{fontFamily: \"monospace\"}}> execute</span>.</span>\n+      ),\n+  headers: 'A JSON object that represents additional metadata to add to the header section of the envelope of each record.',\n+  additionalCollections: 'The collection tags to add to the default tags assigned to the processed record.',\n+  provGranularity: 'The level of detail logged for provenance. Choose *coarse* for the default level or *off* for no provenance logging.',\n+  validateEntity: 'Choose whether to validate each document against the entity type definition and how to handle documents with errors.',\n+  batchSize : 'The maximum number of items to process in a batch.',\n+  processors: 'Custom modules that perform additional processes after the core step processes are completed and before the results are saved.',\n+  customHook: 'A custom module that performs additional processes in its own transaction before or after the core step transaction. Results are saved within a transaction.',\n+  options: 'Key-value pairs to pass as parameters to the custom module.',\n+  customModuleURI: 'The path to your custom step module.'\n+};\n+\n+/* Note: Some of the following are intentionally duplicated in other *Placeholders constants. */\n+const CommonStepPlaceholders = {\n+  name: 'Enter the name.',\n+  description: 'Enter the definition.',\n+  sourceQuery: 'Enter a collection tag or CTS query.',\n+  sourceDatabase: 'Choose where to get the data.',\n+  targetDatabase: 'Choose where to store the processed data.',\n+  targetFormat: 'Choose the format for the resulting documents.',\n+  targetPermissions: 'Enter the permissions.',\n+  headers: 'Enter additional header metadata.',\n+  additionalCollections: 'Enter additional collection tags.',\n+  provGranularity: 'Choose the level of provenance detail.',\n+  validateEntity: 'Choose how to handle documents with errors.',\n+  batchSize : 'Enter the batch size.',\n+  processors: 'Enter the array of processor settings.',\n+    /* Can we use an example like this?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5853377b1515912c85a98976899887b3ff2f81e8"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMwNDk2Nw==", "bodyText": "Same comment as given earlier.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#discussion_r550304967", "createdAt": "2020-12-30T19:35:11Z", "author": {"login": "xnikhil08"}, "path": "marklogic-data-hub-central/ui/src/config/tooltips.config.tsx", "diffHunk": "@@ -0,0 +1,681 @@\n+import React from \"react\";\n+\n+/* --- MODELING --- */\n+\n+const ModelingIntros = {\n+  main: 'The entity model is comprised of entity types that describe and standardize your data. You need these entity types to curate your data.'\n+};\n+\n+const ModelingTooltips = {\n+  /* Buttons */\n+  addNewEntity: 'Add a new entity type.',\n+  saveAll: 'Save all changes to all entity types.',\n+  revertAll: 'Discard unsaved changes made to all entity types.',\n+  addProperty: 'Add properties to this entity type.',\n+\n+  /* Values made into links */\n+  entityTypeName: 'Click to view or edit settings for this entity type.',\n+  instanceNumber: 'Click to view all instances of this entity type.',\n+  lastProcessed: 'Click to view all instances of this entity type that were processed by the job that ended at this time.',\n+  entityPropertyName:  'Click to view or edit settings for this entity property.',\n+\n+  /* Icons for entity types */\n+  saveIcon: 'Save changes to this entity type.',\n+  revertIcon: 'Discard unsaved changes to this entity type.',\n+  deleteIcon: 'Delete this entity type.',\n+\n+  /* Icons for entity properties */\n+  addStructuredProperty: 'Add a property to this structured property.',\n+  deleteProperty: 'Delete this property.',\n+\n+  /* Yes/No in modal; column headers in property list */\n+  identifier: 'If enabled, uniquely identifies each instance of this entity type. Restricted to only one property per entity type.',\n+  multiple: 'If enabled, the property holds an array of values.',\n+  sort: 'If enabled, the property can be used to sort the results of queries and filters in ascending or descending order.',\n+  facet: 'If enabled, the property can be used to filter, search for, and categorize documents.',\n+  pii: 'If enabled, the property\\'s value must be safeguarded and handled according to Personally Identifiable Information (PII) protection rules and policies.',\n+  wildcard: 'If enabled, wildcards can be used to search values of the property.',\n+\n+  /* Text fields */\n+  nameEntityType: 'The name of this entity type. ' +\n+    'Names must start with a letter and can contain letters, numbers, hyphens, and underscores.',  /* intended dupe: all names */\n+  descriptionEntityType: 'A description of this entity type.',\n+  nameEntityProperty: 'The name of this entity property. ' +\n+    'Names must start with a letter and can contain letters, numbers, hyphens, and underscores.',  /* intended dupe: all names */\n+  descriptionEntityProperty: 'A description of this entity property.',\n+\n+\n+  /* TO BE DEPRECATED. Use ModelingTooltips.nameEntityType. */\n+  nameRegex: 'Names must start with a letter and can contain letters, numbers, hyphens, and underscores.',\n+\n+  /* TO BE DEPRECATED. Use ModelingTooltips.descriptionEntityType. */\n+  entityDescription: 'A description of this entity type.',\n+\n+  /* TO BE DEPRECATED. Use ModelingMessages.entityEditedAlert. */\n+  entityEditedAlert: 'You have unsaved changes for one or more entity types. You can individually save each modified entity type or save all.',\n+\n+  /* TO BE DEPRECATED. Use ModelingMessages.saveEntityConfirm. */\n+  saveEntityConfirm: 'You have unsaved changes. Saving changes to the entity model could impact features that depend on it or on data that require reindexing due to the changes.',\n+\n+  /* TO BE DEPRECATED. Use SecurityTooltips.missingPermission. */\n+  noWriteAccess: 'Contact your security administrator for access.'\n+};\n+\n+const ModelingPlaceholders = {\n+  nameEntityType: 'Enter the name.',  /* intended dupe (value only): common */\n+  descriptionEntityType: 'Enter the description.',  /* intended dupe (value only): common */\n+  nameEntityProperty: 'Enter the name.',  /* intended dupe (value only): common */\n+  descriptionEntityProperty: 'Enter the description.'  /* intended dupe (value only): common */\n+};\n+\n+const ModelingMessages = {\n+  entityEditedAlert: 'You have unsaved changes for one or more entity types. You can individually save each modified entity type or save all.',\n+  saveEntityConfirm: 'You have unsaved changes. Saving changes to the entity model could impact features that depend on it or on data that require reindexing due to the changes.'\n+};\n+\n+\n+/* --- FLOW --- */\n+\n+const FlowIntros = {\n+};\n+\n+const FlowTooltips = {\n+  name: 'The name of this flow configuration. This cannot be changed after the flow is created.',\n+  nameField: 'The flow name is used as part of filenames, as a collection name, and as metadata in logs. It cannot be changed after the flow is created.',\n+  description: 'A description of this flow configuration.'\n+};\n+\n+const FlowPlaceholders = {\n+  name: 'Enter the flow name.',\n+  description: 'Enter the flow description.'\n+};\n+\n+const FlowMessages = {\n+};\n+\n+\n+/* --- STEPS - COMMON --- */\n+\n+const CommonStepTooltips = {\n+  name: 'The name of this step definition.',\n+  description: 'A description of this step definition.',\n+  sourceQuery: 'The collection tag or CTS query that selects the source data to process in this step.',\n+  sourceDatabase: 'The database where the input data is read from.',\n+  targetDatabase: 'The database where to store the processed data.',\n+  targetFormat: 'The format of the records in the target database.',\n+  targetPermissions: (\n+    <span>A comma-delimited string that defines permissions required to access the processed record. The string must be in the format \n+      <span style={{fontFamily: \"monospace\"}}> role, capability, role, capability,...</span>, where \n+      <i> capability</i> can be <span style={{fontFamily: \"monospace\"}}>read</span>, \n+      <span style={{fontFamily: \"monospace\"}}> insert</span>, \n+      <span style={{fontFamily: \"monospace\"}}> update</span>, or \n+      <span style={{fontFamily: \"monospace\"}}> execute</span>.</span>\n+      ),\n+  headers: 'A JSON object that represents additional metadata to add to the header section of the envelope of each record.',\n+  additionalCollections: 'The collection tags to add to the default tags assigned to the processed record.',\n+  provGranularity: 'The level of detail logged for provenance. Choose *coarse* for the default level or *off* for no provenance logging.',\n+  validateEntity: 'Choose whether to validate each document against the entity type definition and how to handle documents with errors.',\n+  batchSize : 'The maximum number of items to process in a batch.',\n+  processors: 'Custom modules that perform additional processes after the core step processes are completed and before the results are saved.',\n+  customHook: 'A custom module that performs additional processes in its own transaction before or after the core step transaction. Results are saved within a transaction.',\n+  options: 'Key-value pairs to pass as parameters to the custom module.',\n+  customModuleURI: 'The path to your custom step module.'\n+};\n+\n+/* Note: Some of the following are intentionally duplicated in other *Placeholders constants. */\n+const CommonStepPlaceholders = {\n+  name: 'Enter the name.',\n+  description: 'Enter the definition.',\n+  sourceQuery: 'Enter a collection tag or CTS query.',\n+  sourceDatabase: 'Choose where to get the data.',\n+  targetDatabase: 'Choose where to store the processed data.',\n+  targetFormat: 'Choose the format for the resulting documents.',\n+  targetPermissions: 'Enter the permissions.',\n+  headers: 'Enter additional header metadata.',\n+  additionalCollections: 'Enter additional collection tags.',\n+  provGranularity: 'Choose the level of provenance detail.',\n+  validateEntity: 'Choose how to handle documents with errors.',\n+  batchSize : 'Enter the batch size.',\n+  processors: 'Enter the array of processor settings.',\n+    /* Can we use an example like this?\n+    '[ \\n' +\n+    '  { \\n' +\n+    '    \"path\": \"/uri/of/custom/module/in/modules/database/a.sjs\", \\n' +\n+    '    \"vars\": { \\n' +\n+    '      \"myParameter\": \"myParameterValue\" \\n' +\n+    '    } \\n' +\n+    '    \"when\": \"beforeContentPersisted\", \\n' +\n+    '  } \\n' +\n+    ']',\n+    */\n+  customHook: 'Enter the custom hook settings.',\n+    /* Can we use an example like this?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5853377b1515912c85a98976899887b3ff2f81e8"}, "originalPosition": 152}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjkxNzc4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-560291778", "createdAt": "2020-12-31T08:24:56Z", "commit": {"oid": "5853377b1515912c85a98976899887b3ff2f81e8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODoyNDo1NlrOIM7Zfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODoyNDo1NlrOIM7Zfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyNzAwNw==", "bodyText": "@devinnicholson, the invalidCapabilities monospaced text needs to be updated slightly based on what Eleanor provided, it should look like the following:\n<span style={{fontFamily: \"monospace\"}}>read</span>, <span style={{fontFamily: \"monospace\"}}>insert</span>, <span style={{fontFamily: \"monospace\"}}>update</span>, or <span style={{fontFamily: \"monospace\"}}>execute</span>.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#discussion_r550427007", "createdAt": "2020-12-31T08:24:56Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/config/messages.config.tsx", "diffHunk": "@@ -0,0 +1,24 @@\n+import React from \"react\";\n+\n+const AdvancedSettingsMessages = {\n+    'targetPermissions': {\n+        'incorrectFormat' : (\n+        <span>The format of the string is incorrect. The required format is \n+            <span style={{fontFamily: \"monospace\"}}> role, capability, role, capability,....</span> \n+        </span>),\n+        'invalidCapabilities' : (\n+        <span>The string contains invalid capabilities. Capabilities must be \n+            <span style={{fontFamily: \"monospace\"}}> read, insert, update, or execute</span>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5853377b1515912c85a98976899887b3ff2f81e8"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5853377b1515912c85a98976899887b3ff2f81e8", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/5853377b1515912c85a98976899887b3ff2f81e8", "committedDate": "2020-12-29T20:41:17Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}, "afterCommit": {"oid": "4b32558ee82c44024f56e0c8cbb4086450361140", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/4b32558ee82c44024f56e0c8cbb4086450361140", "committedDate": "2020-12-31T23:55:15Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjM1NTkw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-562235590", "createdAt": "2021-01-06T00:25:06Z", "commit": {"oid": "4b32558ee82c44024f56e0c8cbb4086450361140"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a30bb90ef8ee95d1dc7b6c9a996d7d109293ed2e", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a30bb90ef8ee95d1dc7b6c9a996d7d109293ed2e", "committedDate": "2021-01-06T22:56:03Z", "message": "Merge pull request #3 from marklogic/DHFPROD-5022-update-tooltips-e2e-fix\n\nFix e2e matching test."}, "afterCommit": {"oid": "eac9dc8baf50df06c25fd2127b2c4b345404cd9e", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/eac9dc8baf50df06c25fd2127b2c4b345404cd9e", "committedDate": "2021-01-06T23:12:04Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMzE3Njg1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-563317685", "createdAt": "2021-01-07T09:09:16Z", "commit": {"oid": "eac9dc8baf50df06c25fd2127b2c4b345404cd9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c4c579aea2214731ca2ef0c6189d7304e5d1d21", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9c4c579aea2214731ca2ef0c6189d7304e5d1d21", "committedDate": "2021-01-07T19:43:31Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eac9dc8baf50df06c25fd2127b2c4b345404cd9e", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/eac9dc8baf50df06c25fd2127b2c4b345404cd9e", "committedDate": "2021-01-06T23:12:04Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}, "afterCommit": {"oid": "9c4c579aea2214731ca2ef0c6189d7304e5d1d21", "author": {"user": {"login": "devinnicholson", "name": "devin nicholson"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9c4c579aea2214731ca2ef0c6189d7304e5d1d21", "committedDate": "2021-01-07T19:43:31Z", "message": "DHFPROD-5022: Docs: Hub Central - Update tooltips.config.js"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODYwOTYy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-563860962", "createdAt": "2021-01-07T22:04:10Z", "commit": {"oid": "9c4c579aea2214731ca2ef0c6189d7304e5d1d21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODczNjEy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-563873612", "createdAt": "2021-01-07T22:24:41Z", "commit": {"oid": "9c4c579aea2214731ca2ef0c6189d7304e5d1d21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODc5OTkx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-563879991", "createdAt": "2021-01-07T22:37:13Z", "commit": {"oid": "9c4c579aea2214731ca2ef0c6189d7304e5d1d21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NDMyMzcw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/5051#pullrequestreview-564432370", "createdAt": "2021-01-08T17:07:21Z", "commit": {"oid": "9c4c579aea2214731ca2ef0c6189d7304e5d1d21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1461, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}