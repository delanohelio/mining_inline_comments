{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MjA2NjQ3", "number": 4425, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTozMzo1NlrOEZbrOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjo1MjoyM1rOEZkb6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTAzMjg4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/mapping-card.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTozMzo1NlrOHCPTmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoxMTo1NVrOHCgT0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEwOTk3OA==", "bodyText": "This is fine, but the backend should really provide all of this data - for 5.4, we've gotta do a better job of shifting more of the burden to the backend so that life is as easy as possible for the UI.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4425#discussion_r472109978", "createdAt": "2020-08-18T11:33:56Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -203,8 +203,10 @@ const MappingCard: React.FC<Props> = (props) => {\n                 let parsedDoc: any;\n                 if(typeof(srcDocResp.data) === 'string'){\n                     parsedDoc = getParsedXMLDoc(srcDocResp);\n+                    setSourceFormat('xml');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9de1b1b64346ae83712275e94818ba444baee9f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4ODU2MA==", "bodyText": "Agreed, it would be better to have the backend tell the front end the source format explicitly.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4425#discussion_r472388560", "createdAt": "2020-08-18T18:11:55Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -203,8 +203,10 @@ const MappingCard: React.FC<Props> = (props) => {\n                 let parsedDoc: any;\n                 if(typeof(srcDocResp.data) === 'string'){\n                     parsedDoc = getParsedXMLDoc(srcDocResp);\n+                    setSourceFormat('xml');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjEwOTk3OA=="}, "originalCommit": {"oid": "a9de1b1b64346ae83712275e94818ba444baee9f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjIwMTcwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/mapping-card.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo0NjowOFrOHCav0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0NDoyOFrOHChYjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI5NzQyNg==", "bodyText": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4425#discussion_r472297426", "createdAt": "2020-08-18T15:46:08Z", "author": {"login": "jmakeig"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -368,7 +378,7 @@ const MappingCard: React.FC<Props> = (props) => {\n                     if(parentNamespace !== tempNS){\n                         parentNamespace = tempNS;\n                     }\n-                } else if (val.constructor.name === \"Array\") {\n+                } else if (val && val.constructor && val.constructor.name === \"Array\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9de1b1b64346ae83712275e94818ba444baee9f"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwNjE1OA==", "bodyText": "Thanks, updated with latest force-push.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4425#discussion_r472406158", "createdAt": "2020-08-18T18:44:28Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/mapping-card.tsx", "diffHunk": "@@ -368,7 +378,7 @@ const MappingCard: React.FC<Props> = (props) => {\n                     if(parentNamespace !== tempNS){\n                         parentNamespace = tempNS;\n                     }\n-                } else if (val.constructor.name === \"Array\") {\n+                } else if (val && val.constructor && val.constructor.name === \"Array\") {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI5NzQyNg=="}, "originalCommit": {"oid": "a9de1b1b64346ae83712275e94818ba444baee9f"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjIwODQ4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.scss", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo0NzozNFrOHCazww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo0NzozNFrOHCazww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI5ODQzNQ==", "bodyText": "\ud83d\udc4d\ud83c\udffd", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4425#discussion_r472298435", "createdAt": "2020-08-18T15:47:34Z", "author": {"login": "jmakeig"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.scss", "diffHunk": "@@ -7,3 +7,14 @@\n .ant-table-filter-icon.ant-dropdown-trigger.ant-table-filter-selected{\n     background: #394494; \n }\n+\n+.datatype-string::before {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9de1b1b64346ae83712275e94818ba444baee9f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjQ2ODI1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjo1MjoyM1rOHCdX9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0NDo0OFrOHChZUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM0MDQ3MQ==", "bodyText": "@wooldridge can we pls also add a test for white space here.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4425#discussion_r472340471", "createdAt": "2020-08-18T16:52:23Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "diffHunk": "@@ -29,14 +29,25 @@ describe('RTL Source-to-entity map tests', () => {\n     });\n \n     test('RTL tests with source data',  () => {\n-        const { getByTestId,  getByText, queryByText, rerender} = render(<SourceToEntityMap {...data.mapProps} mappingVisible={true}/>);\n+        const { getByTestId,  getByText, queryByText, rerender } = render(<SourceToEntityMap {...data.mapProps} mappingVisible={true}/>);\n         expect(getByText('Source Data')).toBeInTheDocument();\n         expect(getByText('proteinId')).toBeInTheDocument();\n+        expect(getByText('emptyString')).toBeInTheDocument();\n+        expect(getByText('nullValue')).toBeInTheDocument();\n+        expect(getByText('numberValue')).toBeInTheDocument();\n+        expect(getByText('booleanValue')).toBeInTheDocument();\n         expect(getByTestId(\"entityContainer\")).toBeInTheDocument();\n         expect(getByTestId(\"srcContainer\")).toBeInTheDocument();\n         expect(getByTestId(\"srcContainer\")).toHaveClass(\"sourceContainer\");\n         expect(getByText('Entity: Person')).toBeInTheDocument();\n         expect(getByText('Test')).toBeEnabled();\n+\n+        // Check datatype class names for source values\n+        expect(getByTestId(\"emptyString-srcValue\").children[0].className.includes('datatype-string')).toBe(true);\n+        expect(getByTestId(\"nullValue-srcValue\").children[0].className.includes('datatype-null')).toBe(true);\n+        expect(getByTestId(\"numberValue-srcValue\").children[0].className.includes('datatype-number')).toBe(true);\n+        expect(getByTestId(\"booleanValue-srcValue\").children[0].className.includes('datatype-boolean')).toBe(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9de1b1b64346ae83712275e94818ba444baee9f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwNjM1NQ==", "bodyText": "Thanks, added test for whitespace with latest force-push.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4425#discussion_r472406355", "createdAt": "2020-08-18T18:44:48Z", "author": {"login": "wooldridge"}, "path": "marklogic-data-hub-central/ui/src/components/entities/mapping/source-entity-map/source-to-entity-map.test.tsx", "diffHunk": "@@ -29,14 +29,25 @@ describe('RTL Source-to-entity map tests', () => {\n     });\n \n     test('RTL tests with source data',  () => {\n-        const { getByTestId,  getByText, queryByText, rerender} = render(<SourceToEntityMap {...data.mapProps} mappingVisible={true}/>);\n+        const { getByTestId,  getByText, queryByText, rerender } = render(<SourceToEntityMap {...data.mapProps} mappingVisible={true}/>);\n         expect(getByText('Source Data')).toBeInTheDocument();\n         expect(getByText('proteinId')).toBeInTheDocument();\n+        expect(getByText('emptyString')).toBeInTheDocument();\n+        expect(getByText('nullValue')).toBeInTheDocument();\n+        expect(getByText('numberValue')).toBeInTheDocument();\n+        expect(getByText('booleanValue')).toBeInTheDocument();\n         expect(getByTestId(\"entityContainer\")).toBeInTheDocument();\n         expect(getByTestId(\"srcContainer\")).toBeInTheDocument();\n         expect(getByTestId(\"srcContainer\")).toHaveClass(\"sourceContainer\");\n         expect(getByText('Entity: Person')).toBeInTheDocument();\n         expect(getByText('Test')).toBeEnabled();\n+\n+        // Check datatype class names for source values\n+        expect(getByTestId(\"emptyString-srcValue\").children[0].className.includes('datatype-string')).toBe(true);\n+        expect(getByTestId(\"nullValue-srcValue\").children[0].className.includes('datatype-null')).toBe(true);\n+        expect(getByTestId(\"numberValue-srcValue\").children[0].className.includes('datatype-number')).toBe(true);\n+        expect(getByTestId(\"booleanValue-srcValue\").children[0].className.includes('datatype-boolean')).toBe(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM0MDQ3MQ=="}, "originalCommit": {"oid": "a9de1b1b64346ae83712275e94818ba444baee9f"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3814, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}