{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NzAxODEy", "number": 4995, "title": "DHFPROD-4382: Add matching step to flow", "bodyText": "Description\nThis can be tested by running the matching step from the matching card and seeing the results in query console\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Code passes ESLint tests\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-12-14T18:03:19Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995", "merged": true, "mergeCommit": {"oid": "abae5c151a6b2f3965b5ae990da11f8891325193"}, "closed": true, "closedAt": "2020-12-15T23:25:37Z", "author": {"login": "brucean52"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmJw1zgBqjQxMTA2NDgxNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmigCBgFqTU1MzA0MTg5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8dd83433caf4d4f73505edf63572ad6285e97810", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/8dd83433caf4d4f73505edf63572ad6285e97810", "committedDate": "2020-12-14T18:01:12Z", "message": "DHFPROD-4382: Add matching step to flow"}, "afterCommit": {"oid": "9bc80143ff499bffe6a7ede1d26a0c4d82a10aba", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9bc80143ff499bffe6a7ede1d26a0c4d82a10aba", "committedDate": "2020-12-14T18:08:30Z", "message": "DHFPROD-4382: Add matching step to flow"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bc80143ff499bffe6a7ede1d26a0c4d82a10aba", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/9bc80143ff499bffe6a7ede1d26a0c4d82a10aba", "committedDate": "2020-12-14T18:08:30Z", "message": "DHFPROD-4382: Add matching step to flow"}, "afterCommit": {"oid": "3b307295223f2d04030a5ec748ed85d559cf42b6", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3b307295223f2d04030a5ec748ed85d559cf42b6", "committedDate": "2020-12-14T20:10:22Z", "message": "DHFPROD-4382: Add matching step to flow"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b307295223f2d04030a5ec748ed85d559cf42b6", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3b307295223f2d04030a5ec748ed85d559cf42b6", "committedDate": "2020-12-14T20:10:22Z", "message": "DHFPROD-4382: Add matching step to flow"}, "afterCommit": {"oid": "6abc62a8ff07aa47356f9049e588990176b6bbdc", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6abc62a8ff07aa47356f9049e588990176b6bbdc", "committedDate": "2020-12-15T06:28:25Z", "message": "DHFPROD-4382: Add matching step to flow"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6abc62a8ff07aa47356f9049e588990176b6bbdc", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6abc62a8ff07aa47356f9049e588990176b6bbdc", "committedDate": "2020-12-15T06:28:25Z", "message": "DHFPROD-4382: Add matching step to flow"}, "afterCommit": {"oid": "6bb29109eb3537cd3906f4c4ff274c8aa57683a0", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6bb29109eb3537cd3906f4c4ff274c8aa57683a0", "committedDate": "2020-12-15T06:30:34Z", "message": "DHFPROD-4382: Add matching step to flow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzMxODM2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-552731836", "createdAt": "2020-12-15T18:08:22Z", "commit": {"oid": "6bb29109eb3537cd3906f4c4ff274c8aa57683a0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzYzNzU3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-552763757", "createdAt": "2020-12-15T18:46:47Z", "commit": {"oid": "6bb29109eb3537cd3906f4c4ff274c8aa57683a0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzcxOTQx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-552771941", "createdAt": "2020-12-15T18:56:47Z", "commit": {"oid": "6bb29109eb3537cd3906f4c4ff274c8aa57683a0"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyODU5MDgy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-552859082", "createdAt": "2020-12-15T20:53:19Z", "commit": {"oid": "6bb29109eb3537cd3906f4c4ff274c8aa57683a0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc9143385f28332a71856f7edddefaa883321a6c", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fc9143385f28332a71856f7edddefaa883321a6c", "committedDate": "2020-12-15T21:13:44Z", "message": "DHFPROD-4382: Add matching step to flow"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6bb29109eb3537cd3906f4c4ff274c8aa57683a0", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/6bb29109eb3537cd3906f4c4ff274c8aa57683a0", "committedDate": "2020-12-15T06:30:34Z", "message": "DHFPROD-4382: Add matching step to flow"}, "afterCommit": {"oid": "fc9143385f28332a71856f7edddefaa883321a6c", "author": {"user": null}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fc9143385f28332a71856f7edddefaa883321a6c", "committedDate": "2020-12-15T21:13:44Z", "message": "DHFPROD-4382: Add matching step to flow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTYwNjE5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-552960619", "createdAt": "2020-12-15T22:03:43Z", "commit": {"oid": "fc9143385f28332a71856f7edddefaa883321a6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTY3Njg2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-552967686", "createdAt": "2020-12-15T22:08:16Z", "commit": {"oid": "fc9143385f28332a71856f7edddefaa883321a6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyOTgyNzE1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-552982715", "createdAt": "2020-12-15T22:17:49Z", "commit": {"oid": "fc9143385f28332a71856f7edddefaa883321a6c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxNzo0OVrOIGigCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxNzo0OVrOIGigCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNzYyNQ==", "bodyText": "@brucean52 can we also add validations for checking whether we are getting redirected to flows and the match step is added to the existing flow/the newly added flow.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#discussion_r543727625", "createdAt": "2020-12-15T22:17:49Z", "author": {"login": "ngodugu-marklogic"}, "path": "marklogic-data-hub-central/ui/src/components/entities/matching/matching-card.test.tsx", "diffHunk": "@@ -116,4 +119,161 @@ describe(\"Matching cards view component\", () => {\n     expect(queryAllByText(\"Yes\")).toHaveLength(0);\n     expect(deleteMatchingArtifact).not.toBeCalled();\n   });\n+\n+  it(\"can render/edit match steps with writeMatchMerge authority\", () => {\n+    const deleteMatchingArtifact = jest.fn();\n+    const {getByText, getByLabelText, getByTestId, queryAllByRole} =  render(\n+      <Router>\n+        <MatchingCard\n+          {...defaultProps}\n+          deleteMatchingArtifact={deleteMatchingArtifact}\n+        />\n+      </Router>\n+    );\n+\n+    expect(getByLabelText(\"icon: plus-circle\")).toBeInTheDocument();\n+    expect(getByText(\"matchCustomers\")).toBeInTheDocument();\n+    expect(getByText(\"matchCustomersEmpty\")).toBeInTheDocument();\n+\n+    //Verify if the card renders fine\n+    expect(getByTestId(\"matchCustomers-edit\")).toBeInTheDocument();\n+    expect(getByTestId(\"matchCustomersEmpty-edit\")).toBeInTheDocument();\n+    expect(queryAllByRole(\"disabled-delete-matching\")).toHaveLength(0);\n+\n+    // check if delete tooltip appears and user is able to proceed with deletion of the step\n+    userEvent.hover(getByTestId(\"matchCustomers-delete\"));\n+    wait(() => expect(getByText(\"Delete\")).toBeInTheDocument());\n+    userEvent.click(getByTestId(\"matchCustomers-delete\"));\n+    wait(() => expect(getByLabelText(\"delete-step-text\")).toBeInTheDocument());\n+    userEvent.click(getByText(\"Yes\"));\n+    expect(deleteMatchingArtifact).toBeCalled();\n+  });\n+\n+  it(\"can add a step to a new flow\", () => {\n+    const {getByText, getByTestId} =  render(\n+      <Router>\n+        <MatchingCard {...defaultProps}/>\n+      </Router>\n+    );\n+\n+    expect(getByText(\"matchCustomers\")).toBeInTheDocument();\n+    expect(getByText(\"matchCustomersEmpty\")).toBeInTheDocument();\n+    fireEvent.mouseOver(getByTestId(\"Customer-matchCustomers-step\"));\n+\n+    wait(() => {\n+      expect(getByText(\"Add Step to a new flow\")).toBeInTheDocument();\n+      userEvent.click(getByText(\"Add Step to a new flow\"));\n+    });\n+    wait(() => {\n+      expect(screen.getByText(\"NewFlow\")).toBeInTheDocument();\n+      userEvent.type(screen.getByPlaceholderText(\"Enter name\"), \"testFlow\");\n+      userEvent.click(screen.getByText(\"Save\"));\n+    });\n+    // Check if the /tiles/run/add route has been called\n+    wait(() => { expect(mockHistoryPush).toHaveBeenCalledWith(\"/tiles/run/add\"); });\n+  });\n+\n+  it(\"can add a step to new flow from run menu\", () => {\n+    const {getByText, getByTestId} =  render(\n+      <Router>\n+        <MatchingCard {...defaultProps}/>\n+      </Router>\n+    );\n+\n+    expect(getByText(\"matchCustomers\")).toBeInTheDocument();\n+    expect(getByText(\"matchCustomersEmpty\")).toBeInTheDocument();\n+    userEvent.click(getByTestId(\"matchCustomers-run\"));\n+    wait(() => {\n+      expect(getByText(\"Run Step in a new flow\")).toBeInTheDocument();\n+      userEvent.click(getByText(\"Run Step in a new flow\"));\n+    });\n+    wait(() => {\n+      expect(screen.getByText(\"NewFlow\")).toBeInTheDocument();\n+      userEvent.type(screen.getByPlaceholderText(\"Enter name\"), \"testFlow\");\n+      userEvent.click(screen.getByText(\"Save\"));\n+    });\n+    // Check if the /tiles/run/add route has been called\n+    wait(() => { expect(mockHistoryPush).toHaveBeenCalledWith(\"/tiles/run/add\"); });\n+  });\n+\n+  it(\"can add a step to an existing flow\", () => {\n+    const {getByText, getByTestId, getByLabelText, queryByText} =  render(\n+      <Router>\n+        <MatchingCard {...defaultProps}/>\n+      </Router>\n+    );\n+\n+    expect(getByText(\"matchCustomers\")).toBeInTheDocument();\n+\n+    //mouseover to trigger flow menu\n+    fireEvent.mouseOver(getByTestId(\"Customer-matchCustomers-step\"));\n+    wait(() => {\n+      expect(getByText(\"Run Step in an existing flow\")).toBeInTheDocument();\n+      //mouse out for card view\n+      fireEvent.mouseOut(getByTestId(\"Customer-matchCustomers-step\"));\n+    });\n+\n+    wait(() => {\n+      expect(queryByText(\"Run Step in an existing flow\")).toBeNull();\n+      fireEvent.mouseOver(getByTestId(\"Customer-matchCustomers-step\"));\n+    });\n+\n+    wait(() => {\n+      expect(getByText(\"Run Step in an existing flow\")).toBeInTheDocument();\n+      userEvent.click(getByTestId(\"matchCustomers-flowsList\"));\n+      userEvent.click(getByLabelText(\"customerJSONFlow-option\"));\n+    });\n+\n+    wait(() => {\n+      expect(getByLabelText(\"step-not-in-flow-run\")).toBeInTheDocument();\n+      userEvent.click(getByTestId(\"matchCustomers-to-test-Confirm\"));\n+    });\n+    // Check if the /tiles/run/add route has been called\n+    wait(() => { expect(mockHistoryPush).toHaveBeenCalledWith(\"/tiles/run/add\"); });\n+  });\n+\n+  it(\"can add a step to an existing flow from run menu\", () => {\n+    const {getByText, getByTestId, getByLabelText} =  render(\n+      <Router>\n+        <MatchingCard {...defaultProps}/>\n+      </Router>\n+    );\n+\n+    expect(getByText(\"matchCustomers\")).toBeInTheDocument();\n+    expect(getByText(\"matchCustomersEmpty\")).toBeInTheDocument();\n+    userEvent.click(getByTestId(\"matchCustomers-run\"));\n+    wait(() => {\n+      expect(getByText(\"Run Step in an existing flow\")).toBeInTheDocument();\n+      userEvent.click(getByTestId(\"matchCustomers-run-flowsList\"));\n+      userEvent.click(getByLabelText(\"customerJSONFlow-run-option\"));\n+    });\n+    wait(() => {\n+      expect(getByLabelText(\"step-not-in-flow-run\")).toBeInTheDocument();\n+      userEvent.click(getByTestId(\"matchCustomers-to-test-Confirm\"));\n+    });\n+    // Check if the /tiles/run/add route has been called\n+    wait(() => { expect(mockHistoryPush).toHaveBeenCalledWith(\"/tiles/run/add\"); });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9143385f28332a71856f7edddefaa883321a6c"}, "originalPosition": 248}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMDQxODk0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4995#pullrequestreview-553041894", "createdAt": "2020-12-15T22:58:07Z", "commit": {"oid": "fc9143385f28332a71856f7edddefaa883321a6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1575, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}