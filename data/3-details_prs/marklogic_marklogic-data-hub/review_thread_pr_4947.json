{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTAxMDgy", "number": 4947, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDowMjo0OVrOFB9k4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODozNjozNlrOFCiCVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjAxNzYxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/RedactionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDowMjo0OVrOIA4V-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDo0NjoyNlrOIA59eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5NDA0Mw==", "bodyText": "Let's put this in hub.security and call it RedactionUserTest for consistency with the other role test classes", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r537794043", "createdAt": "2020-12-07T20:02:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/RedactionTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.marklogic.hub.flow;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5630b54965fad09c8cd830356f514e5d64e03122"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyMDUzNg==", "bodyText": "done", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r537820536", "createdAt": "2020-12-07T20:46:26Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/flow/RedactionTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.marklogic.hub.flow;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5NDA0Mw=="}, "originalCommit": {"oid": "5630b54965fad09c8cd830356f514e5d64e03122"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjA2NDAyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/DataHubSecurityAdminTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoxMzo1N1rOIA4wWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDo0NjozNFrOIA595Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMDc5NA==", "bodyText": "Updated the message to reflect this JIRA story and 5.4.0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r537800794", "createdAt": "2020-12-07T20:13:57Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/DataHubSecurityAdminTest.java", "diffHunk": "@@ -97,7 +97,7 @@ void createCustomRoleInheritingCertainDataHubRoles() {\n         Role customRole = new Role(userWithRoleBeingTestedApi, roleName);\n         customRole.setRole(CreateGranularPrivilegesCommand.ROLES_THAT_CAN_BE_INHERITED);\n \n-        assertEquals(42, customRole.getRole().size(), \"As of DHFPROD-5753 in 5.3.0, 42 roles are expected to be \" +\n+        assertEquals(43, customRole.getRole().size(), \"As of DHFPROD-5753 in 5.3.0, 43 roles are expected to be \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5630b54965fad09c8cd830356f514e5d64e03122"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgyMDY0NQ==", "bodyText": "done", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r537820645", "createdAt": "2020-12-07T20:46:34Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/DataHubSecurityAdminTest.java", "diffHunk": "@@ -97,7 +97,7 @@ void createCustomRoleInheritingCertainDataHubRoles() {\n         Role customRole = new Role(userWithRoleBeingTestedApi, roleName);\n         customRole.setRole(CreateGranularPrivilegesCommand.ROLES_THAT_CAN_BE_INHERITED);\n \n-        assertEquals(42, customRole.getRole().size(), \"As of DHFPROD-5753 in 5.3.0, 42 roles are expected to be \" +\n+        assertEquals(43, customRole.getRole().size(), \"As of DHFPROD-5753 in 5.3.0, 43 roles are expected to be \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMDc5NA=="}, "originalCommit": {"oid": "5630b54965fad09c8cd830356f514e5d64e03122"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njc2MjAwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/RedactionUserTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzowOTo0NlrOIA--OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzowOToxNVrOIBqX4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMjY0OA==", "bodyText": "You can remove this, the parent class defaults to this", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r537902648", "createdAt": "2020-12-07T23:09:46Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/RedactionUserTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.marklogic.hub.security;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.appdeployer.command.schemas.LoadSchemasCommand;\n+import com.marklogic.client.ResourceNotFoundException;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.FlowInputs;\n+import com.marklogic.hub.flow.impl.FlowRunnerImpl;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.UPDATE;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class RedactionUserTest extends AbstractHubCoreTest {\n+\n+    @BeforeEach\n+    void setUp() {\n+        runAsDataHubDeveloper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "431e2c88a5cca962f4cef9cda3a93d611c61da8f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxMzczMA==", "bodyText": "Removed", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r538613730", "createdAt": "2020-12-08T17:09:15Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/RedactionUserTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.marklogic.hub.security;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.appdeployer.command.schemas.LoadSchemasCommand;\n+import com.marklogic.client.ResourceNotFoundException;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.FlowInputs;\n+import com.marklogic.hub.flow.impl.FlowRunnerImpl;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.UPDATE;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class RedactionUserTest extends AbstractHubCoreTest {\n+\n+    @BeforeEach\n+    void setUp() {\n+        runAsDataHubDeveloper();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMjY0OA=="}, "originalCommit": {"oid": "431e2c88a5cca962f4cef9cda3a93d611c61da8f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njc2NjY4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/RedactionUserTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzoxMToxOVrOIA_A1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzowOTozOFrOIBqZzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMzMxNw==", "bodyText": "I think we still need to verify that the RunFlowResponse contains an error in stepOutput for the step that failed. It's good to verify that the doc wasn't written too, but the most important thing to verify is that the step failed, and the way to do that is via the RunFlowResponse.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r537903317", "createdAt": "2020-12-07T23:11:19Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/RedactionUserTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.marklogic.hub.security;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.appdeployer.command.schemas.LoadSchemasCommand;\n+import com.marklogic.client.ResourceNotFoundException;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.FlowInputs;\n+import com.marklogic.hub.flow.impl.FlowRunnerImpl;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.UPDATE;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class RedactionUserTest extends AbstractHubCoreTest {\n+\n+    @BeforeEach\n+    void setUp() {\n+        runAsDataHubDeveloper();\n+        installProjectInFolder(\"test-projects/redaction-test\");\n+        new LoadSchemasCommand().execute(newCommandContext());\n+\n+        ingestDocument();\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        runAsAdmin();\n+        new DatabaseManager(getHubConfig().getManageClient()).clearDatabase(HubConfig.DEFAULT_STAGING_SCHEMAS_DB_NAME);\n+    }\n+\n+    @Test\n+    void testRedactionAsDataHubOperator() {\n+        runFlowAsUser(this::runAsDataHubOperator);\n+        verifyRedactedDoc();\n+    }\n+\n+    @Test\n+    void testRedactionAsHubCentralOperator() {\n+        runFlowAsUser(() -> runAsTestUserWithRoles(\"hub-central-operator\"));\n+        verifyRedactedDoc();\n+    }\n+\n+    @Test\n+    void testRedactionAsAForbiddenUser() {\n+        runFlowAsUser(() -> runAsTestUserWithRoles(\"hub-central-step-runner\"));\n+        verifyRedactedDocNotPresent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "431e2c88a5cca962f4cef9cda3a93d611c61da8f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODYxNDIyMg==", "bodyText": "Done", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r538614222", "createdAt": "2020-12-08T17:09:38Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/hub/security/RedactionUserTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package com.marklogic.hub.security;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.marklogic.appdeployer.command.schemas.LoadSchemasCommand;\n+import com.marklogic.client.ResourceNotFoundException;\n+import com.marklogic.client.io.DocumentMetadataHandle;\n+import com.marklogic.client.io.JacksonHandle;\n+import com.marklogic.hub.AbstractHubCoreTest;\n+import com.marklogic.hub.HubConfig;\n+import com.marklogic.hub.flow.FlowInputs;\n+import com.marklogic.hub.flow.impl.FlowRunnerImpl;\n+import com.marklogic.mgmt.resource.databases.DatabaseManager;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.READ;\n+import static com.marklogic.client.io.DocumentMetadataHandle.Capability.UPDATE;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class RedactionUserTest extends AbstractHubCoreTest {\n+\n+    @BeforeEach\n+    void setUp() {\n+        runAsDataHubDeveloper();\n+        installProjectInFolder(\"test-projects/redaction-test\");\n+        new LoadSchemasCommand().execute(newCommandContext());\n+\n+        ingestDocument();\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        runAsAdmin();\n+        new DatabaseManager(getHubConfig().getManageClient()).clearDatabase(HubConfig.DEFAULT_STAGING_SCHEMAS_DB_NAME);\n+    }\n+\n+    @Test\n+    void testRedactionAsDataHubOperator() {\n+        runFlowAsUser(this::runAsDataHubOperator);\n+        verifyRedactedDoc();\n+    }\n+\n+    @Test\n+    void testRedactionAsHubCentralOperator() {\n+        runFlowAsUser(() -> runAsTestUserWithRoles(\"hub-central-operator\"));\n+        verifyRedactedDoc();\n+    }\n+\n+    @Test\n+    void testRedactionAsAForbiddenUser() {\n+        runFlowAsUser(() -> runAsTestUserWithRoles(\"hub-central-step-runner\"));\n+        verifyRedactedDocNotPresent();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMzMxNw=="}, "originalCommit": {"oid": "431e2c88a5cca962f4cef9cda3a93d611c61da8f"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTk5MTI1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/hub-central-operator.json", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODozNjozNlrOIBwAWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODo0OTowOFrOIBwpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwNjAxMQ==", "bodyText": "Per DHFPROD-6297, \"redaction-user\" should be assigned to \u201chub-central-entity-exporter\u201d which is inherited by hub-central-developer,  hub-central-operator & hub-central-explorer)", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r538706011", "createdAt": "2020-12-08T18:36:36Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/hub-central-operator.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"hub-central-custom-reader\",\n     \"hub-central-step-runner\",\n     \"hub-central-saved-query-user\",\n-    \"hub-central-entity-exporter\"\n+    \"hub-central-entity-exporter\",\n+    \"redaction-user\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a405e23976563b66772f5ba978e943953b440802"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxMTcxNw==", "bodyText": "It was not assigned as per Shannon's comment https://project.marklogic.com/jira/browse/DHFPROD-6297?focusedCommentId=188979&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-188979\nI'll update the AC.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r538711717", "createdAt": "2020-12-08T18:42:14Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/hub-central-operator.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"hub-central-custom-reader\",\n     \"hub-central-step-runner\",\n     \"hub-central-saved-query-user\",\n-    \"hub-central-entity-exporter\"\n+    \"hub-central-entity-exporter\",\n+    \"redaction-user\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwNjAxMQ=="}, "originalCommit": {"oid": "a405e23976563b66772f5ba978e943953b440802"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxNDQwOQ==", "bodyText": "So should it be added to \"hub-central-operator\" as I don't see that in the story ?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r538714409", "createdAt": "2020-12-08T18:46:05Z", "author": {"login": "srinathgit"}, "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/hub-central-operator.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"hub-central-custom-reader\",\n     \"hub-central-step-runner\",\n     \"hub-central-saved-query-user\",\n-    \"hub-central-entity-exporter\"\n+    \"hub-central-entity-exporter\",\n+    \"redaction-user\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwNjAxMQ=="}, "originalCommit": {"oid": "a405e23976563b66772f5ba978e943953b440802"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxNjQ5Mg==", "bodyText": "It should be since we can run custom steps via HC.\nIt's mentioned in the AC part of the story.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/4947#discussion_r538716492", "createdAt": "2020-12-08T18:49:08Z", "author": {"login": "akshaysonvane"}, "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/hub-central-operator.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"hub-central-custom-reader\",\n     \"hub-central-step-runner\",\n     \"hub-central-saved-query-user\",\n-    \"hub-central-entity-exporter\"\n+    \"hub-central-entity-exporter\",\n+    \"redaction-user\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcwNjAxMQ=="}, "originalCommit": {"oid": "a405e23976563b66772f5ba978e943953b440802"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3012, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}