{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MzkxOTAy", "number": 3827, "title": "DHFPROD-4440: Steps now support custom processors", "bodyText": "Included a new \"step-processors\" example project to document the feature.\nThere are a lot of changes in flow.sjs, but much of this was due to 1) renaming variables for consistency, and 2) moving existing code into two new functions - writeProvenanceData and updateBatchDocument - so that \"runFlow\" isn't quite so big.\nThe actual new stuff in flow.sjs is fairly minimal - it's the new applyProcessorsBeforeContentPersisted function, and I had to change the if/else that invokes a step module based on acceptsBatch=true. That block of code no longer adds content objects to the writeQueue, because it first needs to apply processors before adding content to the writeQueue.\nDescription\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-04-16T14:00:17Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827", "merged": true, "mergeCommit": {"oid": "befa11ae79f38ffc4535601a1f4fc5ac08343628"}, "closed": true, "closedAt": "2020-04-18T17:42:17Z", "author": {"login": "rjrudin"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYNHlhgH2gAyNDA0MzkxOTAyOjgyMzc3MWI2YTA2M2U3OTJlN2UzMzM5Nzc1MmViYTU2OWJkZmEyNDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYqIoHAFqTM5NTgyODEwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242", "author": {"user": {"login": "rjrudin", "name": null}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/823771b6a063e792e7e33397752eba569bdfa242", "committedDate": "2020-04-16T13:57:19Z", "message": "DHFPROD-4440: Steps now support custom processors\n\nIncluded a new \"step-processors\" example project to document the feature. \n\nThere are a lot of changes in flow.sjs, but much of this was due to 1) renaming variables for consistency, and 2) moving existing code into two new functions - writeProvenanceData and updateBatchDocument - so that \"runFlow\" isn't quite so big. \n\nThe actual new stuff in flow.sjs is fairly minimal - it's the new applyProcessorsBeforeContentPersisted function, and I had to change the if/else that invokes a step module based on acceptsBatch=true. That block of code no longer adds content objects to the writeQueue, because it first needs to apply processors before adding content to the writeQueue."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjY0MzU0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#pullrequestreview-394664354", "createdAt": "2020-04-16T14:02:46Z", "commit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowMjo0N1rOGGm3Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowMjo0N1rOGGm3Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4MTMyNg==", "bodyText": "I opted for \"stepDefinition\" and \"flowStep\" to distinguish between step config in the step definition document, and step config in the step as it's defined in a flow. \"stepDetails\" confused me too much.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#discussion_r409581326", "createdAt": "2020-04-16T14:02:47Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -143,8 +135,8 @@ class Flow {\n   findMatchingContent(flowName, stepNumber, options, filterQuery) {\n     const flow = this.getFlow(flowName);\n     const flowStep = flow.steps[stepNumber];\n-    const stepDetails = this.step.getStepByNameAndType(flowStep.stepDefinitionName, flowStep.stepDefinitionType);\n-    const combinedOptions = Object.assign({}, stepDetails.options || {}, flow.options || {}, flowStep.options || {}, options);\n+    const stepDefinition = this.step.getStepByNameAndType(flowStep.stepDefinitionName, flowStep.stepDefinitionType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjY0NjY1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#pullrequestreview-394664665", "createdAt": "2020-04-16T14:03:05Z", "commit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowMzowNVrOGGm4Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowMzowNVrOGGm4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4MTYyMg==", "bodyText": "Moved this to where it's needed", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#discussion_r409581622", "createdAt": "2020-04-16T14:03:05Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -214,30 +206,23 @@ class Flow {\n     //set the context for the attempted step\n     this.globalContext.attemptStep = stepNumber;\n \n-    let stepRef = this.globalContext.flow.steps[stepNumber];\n-    if(!stepRef) {\n+    const flowStep = this.globalContext.flow.steps[stepNumber];\n+    if(!flowStep) {\n       this.datahub.debug.log({message: 'Step '+stepNumber+' for the flow: '+flowName+' could not be found.', type: 'error'});\n       throw Error('Step '+stepNumber+' for the flow: '+flowName+' could not be found.');\n     }\n-    let stepDetails = this.step.getStepByNameAndType(stepRef.stepDefinitionName, stepRef.stepDefinitionType);\n+    const stepDefinition = this.step.getStepByNameAndType(flowStep.stepDefinitionName, flowStep.stepDefinitionType);\n \n     //here we consolidate options and override in order of priority: runtime flow options, step defined options, process defined options\n-    let combinedOptions = Object.assign({}, stepDetails.options, flow.options, stepRef.options, options);\n+    let combinedOptions = Object.assign({}, stepDefinition.options, flow.options, flowStep.options, options);\n     // set provenance granularity based off of combined options\n     this.datahub.prov.granularityLevel(combinedOptions.provenanceGranularityLevel);\n-    // combine all collections", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjY1ODgz", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#pullrequestreview-394665883", "createdAt": "2020-04-16T14:04:13Z", "commit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowNDoxM1rOGGm8Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowNDoxM1rOGGm8Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4MjY0Ng==", "bodyText": "Used to be called processResults;  no longer adds anything to the writeQueue", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#discussion_r409582646", "createdAt": "2020-04-16T14:04:13Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/flow.sjs", "diffHunk": "@@ -400,11 +360,54 @@ class Flow {\n       }\n     }\n     flowInstance.globalContext.uri = null;\n+\n+    this.applyProcessorsBeforeContentPersisted(flowStep, contentArray, combinedOptions);\n+\n+    // Add everything to the writeQueue\n+    contentArray.forEach(content => {\n+      if (content.uri) {\n+        this.writeQueue.push(content);\n+      } else {\n+        this.datahub.debug.log({ type: 'error', message: `Couldn't add '${xdmp.toJsonString(content)}' to the write queue due to missing uri.`});\n+      }\n+    });\n+\n     if (hook && !hook.runBefore) {\n       hookOperation();\n     }\n   }\n \n+  applyProcessorsBeforeContentPersisted(flowStep, contentArray, combinedOptions) {\n+    if (flowStep.processors) {\n+      flowStep.processors.filter((processor => \"beforeContentPersisted\" == processor.when)).forEach(processor => {\n+        const vars = Object.assign({}, processor.vars);\n+        vars.contentArray = contentArray;\n+        vars.options = combinedOptions;\n+        contentArray = fn.head(xdmp.invoke(processor.path, vars));\n+      });\n+    }\n+    return contentArray;\n+  }\n+\n+  addMetadataToContent(content, combinedOptions, flowName, flowStep) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "originalPosition": 265}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1Njk2MDI0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#pullrequestreview-395696024", "createdAt": "2020-04-17T18:51:34Z", "commit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1ODI4MTAx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3827#pullrequestreview-395828101", "createdAt": "2020-04-17T23:45:42Z", "commit": {"oid": "823771b6a063e792e7e33397752eba569bdfa242"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3031, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}