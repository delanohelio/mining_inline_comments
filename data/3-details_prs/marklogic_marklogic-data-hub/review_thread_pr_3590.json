{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2OTE0MDYw", "number": 3590, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDoyNToyMFrODhFvtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowNjowM1rODjiXxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDIzNzMyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/bootstrap/Installer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDoyNToyMFrOFrqFeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDoyNToyMFrOFrqFeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyMjYxNw==", "bodyText": "I think this is a good example of where moving this code to a separate private method is a good way to document what it's doing - i.e. \"copyTestIndexesFileToProject\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381322617", "createdAt": "2020-02-19T14:25:20Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/bootstrap/Installer.java", "diffHunk": "@@ -40,6 +46,14 @@ public void bootstrapHub() {\n         }\n \n         if (!isInstalled) {\n+            try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDI0MDk5OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/java/com/marklogic/bootstrap/Installer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDoyNjoxMVrOFrqHuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDoyNjoxMVrOFrqHuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyMzE5Mw==", "bodyText": "If this file can't be copied, then the tests that depend on it are going to fail. Best to throw an exception now as opposed to letting the system be in a misconfigured state - e.g. throw new RuntimeException(\"Unable to copy test indexes file to project\", ioe);", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381323193", "createdAt": "2020-02-19T14:26:11Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/java/com/marklogic/bootstrap/Installer.java", "diffHunk": "@@ -40,6 +46,14 @@ public void bootstrapHub() {\n         }\n \n         if (!isInstalled) {\n+            try {\n+                Path srcDir = Paths.get(\"src\", \"test\", \"ml-config\", \"databases\",\"final-database.json\");\n+                Path dstDir = Paths.get(adminHubConfig.getUserDatabaseDir().toString(), \"test-final-database.json\");\n+                FileUtils.copyFile(srcDir.toAbsolutePath().toFile(), dstDir.toAbsolutePath().toFile());\n+            } catch (IOException ioe) {\n+                ioe.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDI2NjEyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/numericFacetValuesRange/service.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDozMTo0OVrOFrqXSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDozMTo0OVrOFrqXSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMyNzE3OA==", "bodyText": "Pinging @ryanjdew - I think this is too fine-grained for an interface. We want interfaces that are broadly scoped against higher level features in DHF, and each method/endpoint can have a well-defined, narrow scope.\nBoth of these new endpoints pertain to searching entities. So let's call this service \"entitySearch\".\nNow let's name these methods more from a client perspective, as it's not clear what \"numericFacetValuesRange\" means (nor does it appear to be bound to numbers). The use case appears to be - get me the min and max values for an entity property. So let's call the method \"getMinAndMaxPropertyValues\". And let's rename \"facetName\" to \"properetyPath\" - this endpoint doesn't need to care about facets, it only cares about indexes.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381327178", "createdAt": "2020-02-19T14:31:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/numericFacetValuesRange/service.json", "diffHunk": "@@ -0,0 +1,4 @@\n+{\n+  \"endpointDirectory\": \"/data-hub/5/data-services/numericFacetValuesRange/\",\n+  \"$javaClass\": \"com.marklogic.hub.dataservices.NumericFacetValuesRange\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDMwODk0OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MTo0N1rOFrqyBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MTo0N1rOFrqyBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNDAyMA==", "bodyText": "Should call this propertyPath as well", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381334020", "createdAt": "2020-02-19T14:41:47Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDMxMjYyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MjozOFrOFrq0Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0MjozOFrOFrq0Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNDU4Nw==", "bodyText": "Let's call this \"pattern\", which is the same term that the underlying functions use - http://docs.marklogic.com/cts.valueMatch .", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381334587", "createdAt": "2020-02-19T14:42:38Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;\n+var searchStr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDMxODY2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0NDoxMFrOFrq4SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0NDoxMFrOFrq4SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNTYyNQ==", "bodyText": "Looking at these conditionals, I'm thinking two things:\n\n\"indexType\" should be called \"referenceType\", as that's what we're figuring out here - what type of reference should we use?\nThe values should then correspond to the reference functions - e.g. \"element\" instead of \"elementRangeIndex\", \"field\" instead of \"fieldRangeIndex\", and then \"collection\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381335625", "createdAt": "2020-02-19T14:44:10Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;\n+var searchStr;\n+var limit;\n+\n+var query;\n+\n+if(indexType === 'elementRangeIndex') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDMzMDEzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0Njo1MFrOFrq_PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo0Njo1MFrOFrq_PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzNzQwNQ==", "bodyText": "Because this is using valueMatch, then from a client's perspective, the requirement appears to be - \"get me entity property values that match a pattern\". So the endpoint name could be \"getMatchingPropertyValues\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381337405", "createdAt": "2020-02-19T14:46:50Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/searchFacetValues/searchFacetValues.sjs", "diffHunk": "@@ -0,0 +1,31 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;\n+var searchStr;\n+var limit;\n+\n+var query;\n+\n+if(indexType === 'elementRangeIndex') {\n+  query = cts.elementReference(facetName);\n+} else if(indexType === 'fieldRangeIndex') {\n+  query = cts.fieldReference(facetName);\n+} else if(indexType === 'collection') {\n+  query = cts.collectionReference();\n+} else {\n+  query = cts.pathReference(\"//*:instance/\" + entityName + \"/\" + facetName);\n+}\n+\n+var facetValues = cts.valueMatch(query, searchStr + \"*\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTY0NzkwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/numericFacetValuesRange/numericFacetValuesRange.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxNDoyMFrOFr32Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxNDoyMFrOFr32Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0ODEwNg==", "bodyText": "Should be able to derive this from the entity model so that the client doesn't have to pass it in or care about it", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381548106", "createdAt": "2020-02-19T21:14:20Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/numericFacetValuesRange/numericFacetValuesRange.sjs", "diffHunk": "@@ -0,0 +1,22 @@\n+'use strict';\n+\n+var entityName;\n+var facetName;\n+var indexType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTY1MTIwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/searchFacetValues/numericFacetValuesRangeTest.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxNTozNFrOFr34UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxNTozNFrOFr34UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0ODYyNQ==", "bodyText": "Should rename this test modules based on the proposed function names above.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381548625", "createdAt": "2020-02-19T21:15:34Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/searchFacetValues/numericFacetValuesRangeTest.sjs", "diffHunk": "@@ -0,0 +1,59 @@\n+const test = require(\"/test/test-helper.xqy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTY1NzM1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/searchFacetValues/searchStringFacetValuesTest.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxNzo0MFrOFr38FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToxNzo0MFrOFr38FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0OTU4OQ==", "bodyText": "Is there a scenario that tests the logic for performing an additional cts.valueMatch query based on a looser pattern? If so, add an assertion message to the test.assertEqual function that states that it's expecting a value based on that second search.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r381549589", "createdAt": "2020-02-19T21:17:40Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-modules/root/test/suites/data-hub/5/data-services/searchFacetValues/searchStringFacetValuesTest.sjs", "diffHunk": "@@ -0,0 +1,62 @@\n+const test = require(\"/test/test-helper.xqy\");\n+\n+function invokeService(entityName, facetName, indexType, searchStr, limit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb1122ffcf1742abc194d78cc25ebcaa5e24c18"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg3NzkwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMinAndMaxPropertyValues.api", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMDozMFrOFvZWbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMDozMFrOFvZWbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjczMw==", "bodyText": "For simplicity and consistency, the functionName should match the name of the endpoint file.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385242733", "createdAt": "2020-02-27T17:00:30Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMinAndMaxPropertyValues.api", "diffHunk": "@@ -0,0 +1,21 @@\n+{\n+  \"functionName\": \"getNumericFacetsRange\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg3OTAzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMinAndMaxPropertyValues.api", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMDo0OVrOFvZXJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMDo0OVrOFvZXJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjkxNw==", "bodyText": "As long as this function name needs to be changed, let's change this name too - we know this will now be \"entityTypeId\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385242917", "createdAt": "2020-02-27T17:00:49Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMinAndMaxPropertyValues.api", "diffHunk": "@@ -0,0 +1,21 @@\n+{\n+  \"functionName\": \"getNumericFacetsRange\",\n+  \"params\": [\n+    {\n+      \"name\": \"entityIRI\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg4MDEyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMatchingPropertyValues.api", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMTowMlrOFvZXxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMTowMlrOFvZXxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MzA3Ng==", "bodyText": "Change to entityTypeId", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385243076", "createdAt": "2020-02-27T17:01:02Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/data-services/entitySearch/getMatchingPropertyValues.api", "diffHunk": "@@ -0,0 +1,29 @@\n+{\n+  \"functionName\": \"getMatchingPropertyValues\",\n+  \"params\": [\n+    {\n+      \"name\": \"entityIRI\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg4NDUxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-es.sjs", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMjoxNlrOFvZadw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMjoxNlrOFvZadw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0Mzc2Nw==", "bodyText": "@ryanjdew I think this is fine here for 5.2.0, I'm thinking we can combine this with entity-lib.sjs in my DHFPROD-4379 PR for 5.3.0.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385243767", "createdAt": "2020-02-27T17:02:16Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/resources/ml-modules/root/data-hub/5/impl/hub-es.sjs", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ Copyright 2012-2019 MarkLogic Corporation\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ */\n+\n+'use strict';\n+const sem = require(\"/MarkLogic/semantics.xqy\");\n+\n+function getPropertyRangePath(entityIRI, propertyPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg4ODI2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMzoxMFrOFvZcxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMzoxMFrOFvZcxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NDM1Ng==", "bodyText": "Just do \"stringNameProp\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385244356", "createdAt": "2020-02-27T17:03:10Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg4OTg1OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMzozNVrOFvZdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMzozNVrOFvZdwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NDYxMA==", "bodyText": "\"stringCityProp\" and \"NumericStringEntity\"", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385244610", "createdAt": "2020-02-27T17:03:35Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"srchEntyProp1\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    }\n+  ],\n+  \"range-path-index\": [\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumericEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"long\",\n+      \"path-expression\": \"//*:instance/NumericEntity/longProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"string\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/strCityProp\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg5MDk3OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMzo1N1rOFvZeeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMzo1N1rOFvZeeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NDc5Mw==", "bodyText": "Since \"entitySearch\" is used above, let's do \"EntitySearchEntity\" here.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385244793", "createdAt": "2020-02-27T17:03:57Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"srchEntyProp1\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    }\n+  ],\n+  \"range-path-index\": [\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumericEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"long\",\n+      \"path-expression\": \"//*:instance/NumericEntity/longProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"int\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/intProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"string\",\n+      \"path-expression\": \"//*:instance/NumStringEntity/strCityProp\",\n+      \"collation\": \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"string\",\n+      \"path-expression\": \"//*:instance/EntitiesSearchEntity/srchEntyProp2\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg5ODkyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowNjowM1rOFvZjRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowNjowM1rOFvZjRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NjAyMQ==", "bodyText": "Let's not omit any letters in words, there's no benefit in doing that - just do \"searchEntityProp1\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3590#discussion_r385246021", "createdAt": "2020-02-27T17:06:03Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/test/ml-config/databases/final-database.json", "diffHunk": "@@ -18,6 +18,83 @@\n       \"collation\" : \"http://marklogic.com/collation//S1\",\n       \"range-value-positions\" : false,\n       \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"decimal\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"decimalProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"double\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"doubleProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\": \"float\",\n+      \"namespace-uri\": \"\",\n+      \"localname\": \"floatProp\",\n+      \"collation\": \"\",\n+      \"range-value-positions\": false,\n+      \"invalid-values\": \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"strNameProp\",\n+      \"collation\" : \"http://marklogic.com/collation/codepoint\",\n+      \"range-value-positions\" : false,\n+      \"invalid-values\" : \"reject\"\n+    },\n+    {\n+      \"scalar-type\" : \"string\",\n+      \"namespace-uri\" : \"\",\n+      \"localname\" : \"srchEntyProp1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e619c9ca3104dca7215b7264e895adee8a2fe8"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3549, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}