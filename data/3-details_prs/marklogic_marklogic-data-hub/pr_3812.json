{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTAyMTA5", "number": 3812, "title": "DHFPROD-4625: Hub Central Security functional spec", "bodyText": "Description\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-04-14T00:14:57Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812", "merged": true, "mergeCommit": {"oid": "1b43746a7baaa1ac775f504beadf3a6a37d49c61"}, "closed": true, "closedAt": "2020-04-16T15:08:00Z", "author": {"login": "ryanjdew"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXctu1ABqjMyMjk1Mzg3MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX-nUWAFqTM5NDEzMzI3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23a61a0eefa43257602ddb45cf3f189986761258", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/23a61a0eefa43257602ddb45cf3f189986761258", "committedDate": "2020-04-14T00:12:29Z", "message": "DHFPROD-4625: Hub Central Security functional spec"}, "afterCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c48e8c687e2419a027317d425227681affc77acb", "committedDate": "2020-04-14T05:33:05Z", "message": "DHFPROD-4625: Hub Central Security functional spec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNjY1NTM1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-392665535", "createdAt": "2020-04-14T07:25:46Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoyNTo0NlrOGFBf_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoyNTo0NlrOGFBf_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyMDYzOQ==", "bodyText": "IIRC, a hub-central-step-runner should only be able to see the steps in a flow(Run tile) but not the step configurations(Entities tile). So should not inherit load-data/mapping/match-merge/step-definition reader.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r407920639", "createdAt": "2020-04-14T07:25:46Z", "author": {"login": "bsrikan"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.\n+\n+#### Associate Authorities\n+ - canClearData\n+\n+#### Inherited Roles\n+ - data-hub-common-writer\n+\n+### hub-central-step-runner\n+\n+Can run steps through Hub Central\n+\n+#### Associate Authorities\n+ - canReadStep\n+ - canRunStep\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-common-writer\n+ - data-hub-flow-reader\n+ - data-hub-load-data-reader\n+ - data-hub-mapping-reader\n+ - data-hub-match-merge-reader\n+ - data-hub-step-definition-reader", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODYwODM2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-392860836", "createdAt": "2020-04-14T12:05:01Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowNTowMVrOGFLaRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjoxMToyMVrOGFLm8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4MzAxMw==", "bodyText": "This is great information, but I'm wondering if it should go into github yet. I don't believe we have any docs like this in github; currently, I think this information should go into a design spec on our internal Wiki. That's primarily for consistency. I do think there's long-term value in exposing this value to the public, I'm just not at the moment how best to do that - i.e. what's the right mix of info in github vs in our public docs? So for now, I think it's best to put this into a \"Hub Central Security\" design spec page on the Wiki.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408083013", "createdAt": "2020-04-14T12:05:01Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NjI1Ng==", "bodyText": "I know we have a \"SecurityService\" already (I may have been the one to suggest that name, can't remember), but I'm wondering if we should rename it to \"UserService\" because \"getAuthorities\" is specific to a user. I'm wondering what other functions we would add to this... and I'm not sure. So I don't really know a good name, but I lean towards UserService since this is currently specific to the user calling it. Thoughts?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408086256", "createdAt": "2020-04-14T12:11:21Z", "author": {"login": "rjrudin"}, "path": "specs/reference/data-services/security.v1.json", "diffHunk": "@@ -0,0 +1,56 @@\n+{\n+  \"openapi\": \"3.0.0\",\n+  \"tags\":[{\n+    \"name\": \"security\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDM1NTQ5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393035549", "createdAt": "2020-04-14T15:20:46Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyMDo0NlrOGFT7_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyMDo0NlrOGFT7_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyMjcxOQ==", "bodyText": "hub-central-load-reader inherits data-hub-load-data-reader already.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408222719", "createdAt": "2020-04-14T15:20:46Z", "author": {"login": "bsrikan"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.\n+\n+#### Associate Authorities\n+ - canClearData\n+\n+#### Inherited Roles\n+ - data-hub-common-writer\n+\n+### hub-central-step-runner\n+\n+Can run steps through Hub Central\n+\n+#### Associate Authorities\n+ - canReadStep\n+ - canRunStep\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-common-writer\n+ - data-hub-flow-reader\n+ - data-hub-load-data-reader\n+ - data-hub-mapping-reader\n+ - data-hub-match-merge-reader\n+ - data-hub-step-definition-reader\n+\n+### hub-central-step-writer\n+\n+Can create and run steps though Hub Central\n+\n+#### Associate Authorities\n+ - canWriteStep\n+\n+#### Inherited Roles\n+ - hub-central-step-runner\n+ - data-hub-flow-writer\n+\n+### hub-central-load-reader\n+\n+Can read load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadLoadData\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-load-data-reader\n+\n+### hub-central-load-writer\n+\n+Can read and write load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteLoadData\n+\n+#### Inherited Roles\n+ - hub-central-load-reader\n+ - data-hub-common-writer\n+ - data-hub-load-data-reader", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 165}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDM2MTEy", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393036112", "createdAt": "2020-04-14T15:21:21Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyMToyMlrOGFT9wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyMToyMlrOGFT9wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyMzE3MA==", "bodyText": "hub-central-mapping-reader inherits data-hub-mapping-writer", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408223170", "createdAt": "2020-04-14T15:21:22Z", "author": {"login": "bsrikan"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.\n+\n+#### Associate Authorities\n+ - canClearData\n+\n+#### Inherited Roles\n+ - data-hub-common-writer\n+\n+### hub-central-step-runner\n+\n+Can run steps through Hub Central\n+\n+#### Associate Authorities\n+ - canReadStep\n+ - canRunStep\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-common-writer\n+ - data-hub-flow-reader\n+ - data-hub-load-data-reader\n+ - data-hub-mapping-reader\n+ - data-hub-match-merge-reader\n+ - data-hub-step-definition-reader\n+\n+### hub-central-step-writer\n+\n+Can create and run steps though Hub Central\n+\n+#### Associate Authorities\n+ - canWriteStep\n+\n+#### Inherited Roles\n+ - hub-central-step-runner\n+ - data-hub-flow-writer\n+\n+### hub-central-load-reader\n+\n+Can read load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadLoadData\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-load-data-reader\n+\n+### hub-central-load-writer\n+\n+Can read and write load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteLoadData\n+\n+#### Inherited Roles\n+ - hub-central-load-reader\n+ - data-hub-common-writer\n+ - data-hub-load-data-reader\n+\n+### hub-central-mapping-reader\n+\n+Can read mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadMapping\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-mapping-reader\n+\n+### hub-central-mapping-writer\n+\n+Can read and write mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteMapping\n+\n+#### Inherited Roles\n+ - hub-central-mapping-reader\n+ - data-hub-common-writer\n+ - data-hub-mapping-writer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 188}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDQyMjA1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393042205", "createdAt": "2020-04-14T15:27:34Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyNzozNVrOGFUQqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyNzozNVrOGFUQqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyODAxMQ==", "bodyText": "Should hub-central-custom-writer inherit hub-central-custom-reader, so we can do away with inheriting data-hub-step-definition-writer.\nTypo in modules-writer, should be data-hub-module-writer. Should data-hub-common-writer inherit data-hub-module-writer?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408228011", "createdAt": "2020-04-14T15:27:35Z", "author": {"login": "bsrikan"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.\n+\n+#### Associate Authorities\n+ - canClearData\n+\n+#### Inherited Roles\n+ - data-hub-common-writer\n+\n+### hub-central-step-runner\n+\n+Can run steps through Hub Central\n+\n+#### Associate Authorities\n+ - canReadStep\n+ - canRunStep\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-common-writer\n+ - data-hub-flow-reader\n+ - data-hub-load-data-reader\n+ - data-hub-mapping-reader\n+ - data-hub-match-merge-reader\n+ - data-hub-step-definition-reader\n+\n+### hub-central-step-writer\n+\n+Can create and run steps though Hub Central\n+\n+#### Associate Authorities\n+ - canWriteStep\n+\n+#### Inherited Roles\n+ - hub-central-step-runner\n+ - data-hub-flow-writer\n+\n+### hub-central-load-reader\n+\n+Can read load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadLoadData\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-load-data-reader\n+\n+### hub-central-load-writer\n+\n+Can read and write load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteLoadData\n+\n+#### Inherited Roles\n+ - hub-central-load-reader\n+ - data-hub-common-writer\n+ - data-hub-load-data-reader\n+\n+### hub-central-mapping-reader\n+\n+Can read mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadMapping\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-mapping-reader\n+\n+### hub-central-mapping-writer\n+\n+Can read and write mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteMapping\n+\n+#### Inherited Roles\n+ - hub-central-mapping-reader\n+ - data-hub-common-writer\n+ - data-hub-mapping-writer\n+\n+### hub-central-match-merge-reader\n+\n+Can read match and merge artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadMatching\n+ - canReadMerge\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-match-merge-reader\n+\n+### hub-central-match-merge-writer\n+\n+Can read and write match and merge artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteMatching\n+ - canWriteMerge\n+\n+#### Inherited Roles\n+ - hub-central-match-merge-reader\n+ - data-hub-common-writer\n+ - data-hub-match-merge-writer\n+\n+### hub-central-custom-reader\n+\n+Can read custom artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadCustom\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-step-definition-reader\n+\n+### hub-central-custom-writer\n+\n+Can read and write custom artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteCustom\n+\n+#### Inherited Roles\n+ - hub-central-mapping-reader\n+ - data-hub-common-writer\n+ - data-hub-step-definition-writer\n+ - data-hub-modules-writer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 237}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDQzNTE1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393043515", "createdAt": "2020-04-14T15:28:53Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyODo1M1rOGFUU8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyODo1M1rOGFUU8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyOTEwNg==", "bodyText": "Typo, should be hub-central-operator", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408229106", "createdAt": "2020-04-14T15:28:53Z", "author": {"login": "bsrikan"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.\n+\n+#### Associate Authorities\n+ - canClearData\n+\n+#### Inherited Roles\n+ - data-hub-common-writer\n+\n+### hub-central-step-runner\n+\n+Can run steps through Hub Central\n+\n+#### Associate Authorities\n+ - canReadStep\n+ - canRunStep\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-common-writer\n+ - data-hub-flow-reader\n+ - data-hub-load-data-reader\n+ - data-hub-mapping-reader\n+ - data-hub-match-merge-reader\n+ - data-hub-step-definition-reader\n+\n+### hub-central-step-writer\n+\n+Can create and run steps though Hub Central\n+\n+#### Associate Authorities\n+ - canWriteStep\n+\n+#### Inherited Roles\n+ - hub-central-step-runner\n+ - data-hub-flow-writer\n+\n+### hub-central-load-reader\n+\n+Can read load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadLoadData\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-load-data-reader\n+\n+### hub-central-load-writer\n+\n+Can read and write load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteLoadData\n+\n+#### Inherited Roles\n+ - hub-central-load-reader\n+ - data-hub-common-writer\n+ - data-hub-load-data-reader\n+\n+### hub-central-mapping-reader\n+\n+Can read mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadMapping\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-mapping-reader\n+\n+### hub-central-mapping-writer\n+\n+Can read and write mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteMapping\n+\n+#### Inherited Roles\n+ - hub-central-mapping-reader\n+ - data-hub-common-writer\n+ - data-hub-mapping-writer\n+\n+### hub-central-match-merge-reader\n+\n+Can read match and merge artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadMatching\n+ - canReadMerge\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-match-merge-reader\n+\n+### hub-central-match-merge-writer\n+\n+Can read and write match and merge artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteMatching\n+ - canWriteMerge\n+\n+#### Inherited Roles\n+ - hub-central-match-merge-reader\n+ - data-hub-common-writer\n+ - data-hub-match-merge-writer\n+\n+### hub-central-custom-reader\n+\n+Can read custom artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadCustom\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-step-definition-reader\n+\n+### hub-central-custom-writer\n+\n+Can read and write custom artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteCustom\n+\n+#### Inherited Roles\n+ - hub-central-mapping-reader\n+ - data-hub-common-writer\n+ - data-hub-step-definition-writer\n+ - data-hub-modules-writer\n+\n+### hub-central-developer\n+\n+Can create any type of step and run steps through Hub Central\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - hub-central-step-writer\n+ - hub-central-load-writer\n+ - hub-central-mapping-writer\n+ - hub-central-match-merge-writer\n+ - hub-central-custom-writer\n+ - hub-central-downloader\n+\n+### hub-central-custom-writer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 252}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDQ0NDgx", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393044481", "createdAt": "2020-04-14T15:29:49Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyOTo1MFrOGFUX0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToyOTo1MFrOGFUX0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyOTg0MQ==", "bodyText": "Should a HC developer inherit HC operator like its data-hub-* counterpart?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408229841", "createdAt": "2020-04-14T15:29:50Z", "author": {"login": "bsrikan"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.\n+\n+#### Associate Authorities\n+ - canClearData\n+\n+#### Inherited Roles\n+ - data-hub-common-writer\n+\n+### hub-central-step-runner\n+\n+Can run steps through Hub Central\n+\n+#### Associate Authorities\n+ - canReadStep\n+ - canRunStep\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-common-writer\n+ - data-hub-flow-reader\n+ - data-hub-load-data-reader\n+ - data-hub-mapping-reader\n+ - data-hub-match-merge-reader\n+ - data-hub-step-definition-reader\n+\n+### hub-central-step-writer\n+\n+Can create and run steps though Hub Central\n+\n+#### Associate Authorities\n+ - canWriteStep\n+\n+#### Inherited Roles\n+ - hub-central-step-runner\n+ - data-hub-flow-writer\n+\n+### hub-central-load-reader\n+\n+Can read load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadLoadData\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-load-data-reader\n+\n+### hub-central-load-writer\n+\n+Can read and write load data artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteLoadData\n+\n+#### Inherited Roles\n+ - hub-central-load-reader\n+ - data-hub-common-writer\n+ - data-hub-load-data-reader\n+\n+### hub-central-mapping-reader\n+\n+Can read mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadMapping\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-mapping-reader\n+\n+### hub-central-mapping-writer\n+\n+Can read and write mapping artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteMapping\n+\n+#### Inherited Roles\n+ - hub-central-mapping-reader\n+ - data-hub-common-writer\n+ - data-hub-mapping-writer\n+\n+### hub-central-match-merge-reader\n+\n+Can read match and merge artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadMatching\n+ - canReadMerge\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-match-merge-reader\n+\n+### hub-central-match-merge-writer\n+\n+Can read and write match and merge artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteMatching\n+ - canWriteMerge\n+\n+#### Inherited Roles\n+ - hub-central-match-merge-reader\n+ - data-hub-common-writer\n+ - data-hub-match-merge-writer\n+\n+### hub-central-custom-reader\n+\n+Can read custom artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canReadCustom\n+\n+#### Inherited Roles\n+ - hub-central-user\n+ - data-hub-step-definition-reader\n+\n+### hub-central-custom-writer\n+\n+Can read and write custom artifacts through Hub Central\n+\n+#### Associate Authorities\n+ - canWriteCustom\n+\n+#### Inherited Roles\n+ - hub-central-mapping-reader\n+ - data-hub-common-writer\n+ - data-hub-step-definition-writer\n+ - data-hub-modules-writer\n+\n+### hub-central-developer\n+\n+Can create any type of step and run steps through Hub Central\n+\n+#### Inherited Roles", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 243}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDgzNTQ2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393083546", "createdAt": "2020-04-14T16:12:42Z", "commit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjoxMjo0MlrOGFWSRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjoxMjo0MlrOGFWSRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MTE4OA==", "bodyText": "clear data from Staging, Final and Jobs only? Will this role be allowed to delete provenance?\nAre these the artifacts this role is allowed to delete: /entities,/flows(user and default?), /step-definitions(user and default?), /loadData, /mappings, /matching, activity-settings, /jobs, /batch, all the ingested/mapped/mastered documents including triples/graph.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408261188", "createdAt": "2020-04-14T16:12:42Z", "author": {"login": "bsrikan"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 108}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c48e8c687e2419a027317d425227681affc77acb", "committedDate": "2020-04-14T05:33:05Z", "message": "DHFPROD-4625: Hub Central Security functional spec"}, "afterCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/70e5ba073fbf894ae44bc5c4e81ac238649f618b", "committedDate": "2020-04-14T17:53:11Z", "message": "DHFPROD-4625: Hub Central Security functional spec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzM4OTky", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393338992", "createdAt": "2020-04-14T22:27:17Z", "commit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjoyNzoxN1rOGFjMlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjoyNzoxN1rOGFjMlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3MjcyNA==", "bodyText": "do we need to inherit data-hub-module-writer here?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408472724", "createdAt": "2020-04-14T22:27:17Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub/src/main/resources/hub-internal-config/security/roles/data-hub-common-writer.json", "diffHunk": "@@ -0,0 +1,30 @@\n+{\n+  \"role-name\": \"data-hub-common-writer\",\n+  \"description\": \"Contains a common set of privileges/roles needed for Data Hub 5+ write operations\",\n+  \"role\": [\n+    \"data-hub-common\",\n+    \"rest-writer\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzYwODE3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-393760817", "createdAt": "2020-04-15T13:15:02Z", "commit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzoxNTowMlrOGF5GDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo0Njo1M1rOGF6f4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzMTUwMQ==", "bodyText": "I'm all for guarding every DS endpoint with this. On one project, we wrote a little tool to parse the xdmp.securityAssert call on the first line that it was found in an endpoint module and then constructed an HTML table output of every endpoint + the privilege that it required. Very handy, may be worth doing in the future.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408831501", "createdAt": "2020-04-15T13:15:02Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,267 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0NTI2OQ==", "bodyText": "I think we need rest-extension-user here as well. I ran into some surprising issues that were new to me, where if any module imported by a REST extension doesn't have at least one common read permission with every other module, an error will be thrown. So we guarantee that rest-extension-user is always present, and thus I think data-hub-common should have it.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408845269", "createdAt": "2020-04-15T13:34:42Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,267 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0NTgzNA==", "bodyText": "We don't want to inherit this role, because it includes default permissions that work against document-level security. Need to inherit the rest-writer privilege instead.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408845834", "createdAt": "2020-04-15T13:35:29Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,267 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1MTY5Mg==", "bodyText": "I think \"canDownloadUserArtifacts\" may be better here, since the entire project cannot be downloaded, just what we internally call \"user artifacts\".", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408851692", "createdAt": "2020-04-15T13:43:12Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,267 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1MjY5MQ==", "bodyText": "Also, I don't know yet if this role should have all the read-access roles for user artifacts, or if we'd used an amp in the DS endpoint to grab all of them. The latter is certainly possible - I did a little prototype of using xdmp.zip. So a DS endpoint that requires a certain privilege and then uses an amp to construct the zip is possible. But I don't know if that's worth calling out here - it would seem a little early to do that.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408852691", "createdAt": "2020-04-15T13:44:28Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,267 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1MTY5Mg=="}, "originalCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NDI1Mw==", "bodyText": "So I said \"clear data\" yesterday, and now I'm regretting it. :)\nThe problem with \"clear data\" is that I think the expectation from clearing a database is that it's empty. But that won't be the case - the DH and user artifacts will still be present. We expect to do a clear first, and then add those artifacts back, but the net result is not a \"clear\".\nI think \"clear user data\" would work. I'd prefer if we had a noun here for consistency with other roles, but I don't have a good suggestion. Think we'll have to accept some verbs here, which is consistent with ML roles - many are nouns, some are verbs.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408854253", "createdAt": "2020-04-15T13:46:32Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MTE4OA=="}, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NDQ5Ng==", "bodyText": "Also, I think \"clear user data\" to me implies that it applies to staging/final/jobs.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#discussion_r408854496", "createdAt": "2020-04-15T13:46:53Z", "author": {"login": "rjrudin"}, "path": "specs/docs/security/DataHubSecurity.md", "diffHunk": "@@ -0,0 +1,266 @@\n+---\n+tags: [security]\n+---\n+\n+# Data Hub Security\n+\n+This document briefly covers best practices to follow in MarkLogic security with links to more indepth documentation. In addition, this document covers the privileges given to each role and the rationale behind the assigned privilege.\n+\n+## MarkLogic Security Practices\n+\n+### Checking Execute Privileges\n+\n+Execute privileges are used to protect functions from being called by users without the proper level of authorization. Functions can be guarded by calling the [`xdmp.securityAssert`](https://docs.marklogic.com/xdmp.securityAssert) function at the beginning of its execution to ensure the user has the proper execution privileges. See [Protecting Your XQuery and JavaScript Code with Execute Privileges](https://docs.marklogic.com/guide/security/execute#id_69547).\n+\n+#### Example xdmp.securityAssert call\n+```javascript\n+xdmp.securityAssert(\"http://marklogic.com/data-hub/function-access\", \"execute\");\n+```\n+\n+### Granting Privileges To Function Via Amps\n+\n+Execute privileges for a given role should never be broader than needed for the operations a role needs to execute. Amps are a way to grant temporary roles inside a designated function. The function can then institute guardrails to ensure the roles are only used for the narrow intended purpose. See [Temporarily Increasing Privileges with Amps](https://docs.marklogic.com/guide/security/execute#id_54880).\n+\n+#### Example amp configuration\n+```javascript\n+{\n+  \"local-name\" : \"updateJob\",\n+  \"document-uri\" : \"/data-hub/5/impl/jobs.sjs\",\n+  \"modules-database\" : \"%%mlModulesDbName%%\",\n+  \"role\" : [ \"data-hub-job-internal\" ]\n+}\n+```\n+\n+In JavaScript, in addition to the amp configuration file, you need to make use of the `module.amp` function to wrap your function on export. See [Amps and the module.amp Function](https://docs.marklogic.com/guide/jsref/functions#id_13020) \n+\n+#### Example JavaScript amp using module.amp\n+```javascript\n+module.exports.updateJob = module.amp(\n+  function updateJob(datahub, jobId, status, flow, step, lastCompleted, stepResponse) {\n+  //...\n+  }\n+);\n+```\n+### When To Grant Privileges To User Roles And When To Use Amps\n+\n+User roles should be assigned privileges when the privilege is sufficiently restrictive and does not allow arbitrary code execution.\n+\n+If the privilege would allow arbitrary code execution, that is a sure indication that an amp should be used. For other privileges, consider if the privilege can be used beyond the intended purpose. Where possible use granular privileges (See [Granular Privileges](https://docs.marklogic.com/guide/security/granular)). If the user role can't use granular privileges and the required privilege would be too broad, (1) a new narrow execute privilege should be created, (2) the function that requires the privilege should check for the narrow privilege, and (3) the function should be amped with the broader privilege.\n+\n+Roles to be used with amps should be suffixed with `-internal` to indicate that the role is used for amps and NOT intended to be assigned to users.\n+\n+## Data Hub Roles and Privileges\n+\n+### data-hub-common\n+\n+Data Hub role containing the common privileges across Data Hub roles.\n+\n+#### Inherited Roles\n+ - data-hub-module-reader\n+ - rest-reader\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ xdmp-eval-in | Required to specify database for REST Client. (Note: This privilege alone doesn't allow eval to be called. The REST API code does the neccesary amping for eval execution)\n+ xdbc-eval-in | Same as xdmp-eval-in\n+\n+### data-hub-common-writer\n+\n+Data Hub role containing the common privileges across Data Hub writer roles.\n+\n+#### Inherited Roles\n+ - data-hub-common\n+ - rest-writer\n+\n+#### Privileges\n+\n+Privilege | Notes\n+---------|----------\n+ ps-user | Needed to record provenance data\n+ xdmp-document-load | Needed to load data directly in the database\n+ any-uri | Required to write documents to any URI without explicit privileges granted\n+ any-collection | Required to write documents to any collection without explicit privileges granted\n+\n+### hub-central-user\n+\n+All Data Hub roles intended for Hub Central users inherit this role.\n+\n+#### Associate Authorities\n+ - canLoginToHubCentral\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-downloader\n+\n+Role to determine if a user can download the Hub Central project.\n+\n+#### Associate Authorities\n+ - canDownloadProject\n+\n+#### Inherited Roles\n+ - data-hub-common\n+\n+### hub-central-clear-data\n+\n+Role to determine if a user can clear data through Hub Central.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MTE4OA=="}, "originalCommit": {"oid": "c48e8c687e2419a027317d425227681affc77acb"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19f3c60b53ab934a0e008aae9718f21c529985f0", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/19f3c60b53ab934a0e008aae9718f21c529985f0", "committedDate": "2020-04-15T19:37:08Z", "message": "DHFPROD-4625: Hub Central Security functional spec"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70e5ba073fbf894ae44bc5c4e81ac238649f618b", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/70e5ba073fbf894ae44bc5c4e81ac238649f618b", "committedDate": "2020-04-14T17:53:11Z", "message": "DHFPROD-4625: Hub Central Security functional spec"}, "afterCommit": {"oid": "19f3c60b53ab934a0e008aae9718f21c529985f0", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/19f3c60b53ab934a0e008aae9718f21c529985f0", "committedDate": "2020-04-15T19:37:08Z", "message": "DHFPROD-4625: Hub Central Security functional spec"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTI0NzU1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-394124755", "createdAt": "2020-04-15T20:50:09Z", "commit": {"oid": "19f3c60b53ab934a0e008aae9718f21c529985f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTMzMjcw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3812#pullrequestreview-394133270", "createdAt": "2020-04-15T21:03:24Z", "commit": {"oid": "19f3c60b53ab934a0e008aae9718f21c529985f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3022, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}