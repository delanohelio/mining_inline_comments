{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MjAyOTAx", "number": 3843, "title": "DHFPROD-3992: Add mapping step to flow and run it ", "bodyText": "Description\nThis PR contains the following\n\nFront end code for adding/running a mapping step in a  flow\nBackend code and tests for adding/running a mapping step in a flow\n\n@wooldridge is working on front end tests and will add them in new PR. Since the backend work is required for other stories, I am creating the PR now\nChecklist:\n- Note: do not change the below\n\n\nOwner:\n\n\n JIRA_ID included in all the commit messages\n\n\n PR title is in the format JIRA_ID:Title\n\n\n Rebase the branch with upstream\n\n\n Squashed all commits into a single commit\n\n\n Added Tests\n\n\nReviewer:\n\n\n Reviewed Tests", "createdAt": "2020-04-20T17:36:50Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843", "merged": true, "mergeCommit": {"oid": "706232e60e4af0c7bdaf4716f0e7ba9da5708278"}, "closed": true, "closedAt": "2020-04-20T23:11:47Z", "author": {"login": "srinathgit"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZi9ybgFqTM5NjY4NTM0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZnPKhgFqTM5Njg2ODg4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Njg1MzQ2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#pullrequestreview-396685346", "createdAt": "2020-04-20T17:58:27Z", "commit": {"oid": "f30208c4ea6a4f88d30b2b6c1e2e59256f9777ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1ODoyN1rOGIgy1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1ODoyN1rOGIgy1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3OTA5Mg==", "bodyText": "Can we please get rid of all the console.log and only have console.error where applicable.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#discussion_r411579092", "createdAt": "2020-04-20T17:58:27Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/EntityTypes.tsx", "diffHunk": "@@ -43,18 +47,92 @@ const EntityTypes: React.FC = () => {\n           }\n \n     }\n+\n+  //GET all the flow artifacts\n+  const getFlows = async () => {\n+        try {\n+            let response = await axios.get('/api/flows');\n+            if (response.status === 200) {\n+                setFlows(response.data);\n+                console.log('GET flows successful', response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30208c4ea6a4f88d30b2b6c1e2e59256f9777ec"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Njg4Njk3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#pullrequestreview-396688697", "createdAt": "2020-04-20T18:03:06Z", "commit": {"oid": "f30208c4ea6a4f88d30b2b6c1e2e59256f9777ec"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowMzowNlrOGIg-Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODowNToyNFrOGIhD3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MjA1MQ==", "bodyText": "Are these specific to loadData?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#discussion_r411582051", "createdAt": "2020-04-20T18:03:06Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/EntityTypes.tsx", "diffHunk": "@@ -43,18 +47,92 @@ const EntityTypes: React.FC = () => {\n           }\n \n     }\n+\n+  //GET all the flow artifacts\n+  const getFlows = async () => {\n+        try {\n+            let response = await axios.get('/api/flows');\n+            if (response.status === 200) {\n+                setFlows(response.data);\n+                console.log('GET flows successful', response);\n+            } \n+        } catch (error) {\n+            let message = error.response.data.message;\n+            console.log('Error getting flows', message);\n+        } finally {\n+        resetSessionTime();\n+        }\n+    }\n+\n+  // POST load data step to new flow\n+  const addStepToNew = async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30208c4ea6a4f88d30b2b6c1e2e59256f9777ec"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MjYyMg==", "bodyText": "Same as above. Is this specific to loadData?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#discussion_r411582622", "createdAt": "2020-04-20T18:03:57Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/EntityTypes.tsx", "diffHunk": "@@ -43,18 +47,92 @@ const EntityTypes: React.FC = () => {\n           }\n \n     }\n+\n+  //GET all the flow artifacts\n+  const getFlows = async () => {\n+        try {\n+            let response = await axios.get('/api/flows');\n+            if (response.status === 200) {\n+                setFlows(response.data);\n+                console.log('GET flows successful', response);\n+            } \n+        } catch (error) {\n+            let message = error.response.data.message;\n+            console.log('Error getting flows', message);\n+        } finally {\n+        resetSessionTime();\n+        }\n+    }\n+\n+  // POST load data step to new flow\n+  const addStepToNew = async () => {\n+    try {\n+      setIsLoading(true);\n+      //let response = await axios.post(`/api/artifacts/????/${flowName}`);\n+      \n+      //if (response.status === 200) {\n+        console.log('POST addStepToNew');\n+        setIsLoading(false);\n+      //} \n+    } catch (error) {\n+        let message = error.response.data.message;\n+        console.log('Error while adding load data step to new flow.', message);\n+        setIsLoading(false);\n+        handleError(error);\n+    } finally {\n+      resetSessionTime();\n+    }\n+  }\n+\n+  // POST load data step to existing flow\n+  const addStepToFlow = async (loadArtifactName, flowName) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30208c4ea6a4f88d30b2b6c1e2e59256f9777ec"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4MzQ1Mg==", "bodyText": "We should try and refactor api calls under \" marklogic-data-hub-central/ui/src/api/\" for anything that gets committed to develop. I will create a story for refactoring existing axios get and post requests in develop branch.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#discussion_r411583452", "createdAt": "2020-04-20T18:05:24Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/pages/EntityTypes.tsx", "diffHunk": "@@ -43,18 +47,92 @@ const EntityTypes: React.FC = () => {\n           }\n \n     }\n+\n+  //GET all the flow artifacts\n+  const getFlows = async () => {\n+        try {\n+            let response = await axios.get('/api/flows');\n+            if (response.status === 200) {\n+                setFlows(response.data);\n+                console.log('GET flows successful', response);\n+            } \n+        } catch (error) {\n+            let message = error.response.data.message;\n+            console.log('Error getting flows', message);\n+        } finally {\n+        resetSessionTime();\n+        }\n+    }\n+\n+  // POST load data step to new flow\n+  const addStepToNew = async () => {\n+    try {\n+      setIsLoading(true);\n+      //let response = await axios.post(`/api/artifacts/????/${flowName}`);\n+      \n+      //if (response.status === 200) {\n+        console.log('POST addStepToNew');\n+        setIsLoading(false);\n+      //} \n+    } catch (error) {\n+        let message = error.response.data.message;\n+        console.log('Error while adding load data step to new flow.', message);\n+        setIsLoading(false);\n+        handleError(error);\n+    } finally {\n+      resetSessionTime();\n+    }\n+  }\n+\n+  // POST load data step to existing flow\n+  const addStepToFlow = async (loadArtifactName, flowName) => {\n+    let stepToAdd = {\n+      \"name\": loadArtifactName,\n+      \"stepDefinitionName\": \"default-ingestion\",\n+      \"stepDefinitionType\": \"INGESTION\",\n+      options: {\n+        \"loadData\": { \n+          \"name\": loadArtifactName\n+        }\n+      }\n+    };\n+    try {\n+      setIsLoading(true);\n+      let url = '/api/flows/' + flowName + '/steps';\n+      let body = stepToAdd;\n+      let response = await axios.post(url, body);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30208c4ea6a4f88d30b2b6c1e2e59256f9777ec"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9dbdc21554b96a126005975ec350341c27788a3", "author": {"user": {"login": "wooldridge", "name": "Mike Wooldridge"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/a9dbdc21554b96a126005975ec350341c27788a3", "committedDate": "2020-04-20T19:02:38Z", "message": "DHFPROD-3992: Add mouseover links to mapping card\n\nDHFPROD-3992: Get \"add step to flow\" working for mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4dacea0f74596cb2e1a443b1757b7ed116f4e14", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c4dacea0f74596cb2e1a443b1757b7ed116f4e14", "committedDate": "2020-04-20T19:13:23Z", "message": "DHFPROD-3992:Backend work for running the mapping"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d258ed0fab4240f901efb6500c13e2e0a8584565", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/d258ed0fab4240f901efb6500c13e2e0a8584565", "committedDate": "2020-04-20T17:25:01Z", "message": "DHFPROD-3992:Backend work for running the mapping"}, "afterCommit": {"oid": "c4dacea0f74596cb2e1a443b1757b7ed116f4e14", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c4dacea0f74596cb2e1a443b1757b7ed116f4e14", "committedDate": "2020-04-20T19:13:23Z", "message": "DHFPROD-3992:Backend work for running the mapping"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzgyMDI5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#pullrequestreview-396782029", "createdAt": "2020-04-20T20:19:54Z", "commit": {"oid": "c4dacea0f74596cb2e1a443b1757b7ed116f4e14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODExOTI0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#pullrequestreview-396811924", "createdAt": "2020-04-20T21:05:08Z", "commit": {"oid": "c4dacea0f74596cb2e1a443b1757b7ed116f4e14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODY4ODg4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3843#pullrequestreview-396868888", "createdAt": "2020-04-20T22:57:03Z", "commit": {"oid": "c4dacea0f74596cb2e1a443b1757b7ed116f4e14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3056, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}