{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NzQ0MTg4", "number": 3512, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNTozOFrODbD2Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNzo1OFrODbD3xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzAxMTI2OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNTozOFrOFiVJNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNTozOFrOFiVJNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MjMyNQ==", "bodyText": "We can get this done in one write - instead of calling this method, add an overloaded method to HubProject - e.g. exportProject(OutputStream) - and then pass in response.getOutputStream. That method will wrap a ZipOutputStream around it and write the contents directly to the HTTP response. That avoids messing around with files.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3512#discussion_r371542325", "createdAt": "2020-01-27T23:35:38Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -114,6 +121,23 @@ public void onError(String commandName, Exception exception) {\n         return payload;\n     }\n \n+    @RequestMapping(value = \"/project-download\", produces = \"application/zip\")\n+    public void downloadProject(HttpServletRequest request, HttpServletResponse response) {\n+        HubProject project = hubConfig.getHubProject();\n+        File exportFile = project.getProjectDir().resolve(\"build\").resolve(\"datahub-project.zip\").toFile();\n+        project.exportProject(exportFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5d528c373bfddc35c8a952fa61d9ec07ebe831a"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzAxMzM3OnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNjo0MFrOFiVKfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNjo0MFrOFiVKfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MjY1Mw==", "bodyText": "Hmm - I see this, as I don't think this is necessary to call - at least I'm hoping it isn't, as it would force us to write the data out to a file first. But I'm pretty certain it doesn't need to be called, and thus shouldn't if we can write the zip directly to the response.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3512#discussion_r371542653", "createdAt": "2020-01-27T23:36:40Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -114,6 +121,23 @@ public void onError(String commandName, Exception exception) {\n         return payload;\n     }\n \n+    @RequestMapping(value = \"/project-download\", produces = \"application/zip\")\n+    public void downloadProject(HttpServletRequest request, HttpServletResponse response) {\n+        HubProject project = hubConfig.getHubProject();\n+        File exportFile = project.getProjectDir().resolve(\"build\").resolve(\"datahub-project.zip\").toFile();\n+        project.exportProject(exportFile);\n+\n+        response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);\n+        response.addHeader(\"Content-Disposition\", \"attachment; filename=\" + exportFile.getName());\n+        response.setContentLength((int) exportFile.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5d528c373bfddc35c8a952fa61d9ec07ebe831a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzAxNTczOnYy", "diffSide": "RIGHT", "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNzo1OFrOFiVL5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozNzo1OFrOFiVL5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MzAxMw==", "bodyText": "You can test this by using Spring's MockHttpServletRequest (which can be empty) and MockHttpServletResponse. After calling the method, you can get the response bytes from the Mock response. And you should be able to open a ZipInputStream on that and verify a couple entries (no need to verify every single entry - I think verifying 2 of them is enough of a test).", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3512#discussion_r371543013", "createdAt": "2020-01-27T23:37:58Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/oneui/controllers/EnvironmentController.java", "diffHunk": "@@ -114,6 +121,23 @@ public void onError(String commandName, Exception exception) {\n         return payload;\n     }\n \n+    @RequestMapping(value = \"/project-download\", produces = \"application/zip\")\n+    public void downloadProject(HttpServletRequest request, HttpServletResponse response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5d528c373bfddc35c8a952fa61d9ec07ebe831a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3666, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}