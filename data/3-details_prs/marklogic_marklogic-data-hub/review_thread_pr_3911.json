{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTUyMDAz", "number": 3911, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDowMjo0MFrOD5JN1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoxMjowOVrOD54-YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjQ2NDIzOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/fixtures/users/developer.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDowMjo0MFrOGQQEsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDoxNDo1NlrOGQQeig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mzc0NQ==", "bodyText": "Do the Cypress tests actually hit ML? I thought UI tests were just operating against mocks.\nIf they do hit ML, I recommend having a generic \"test user\" and then enhancing the test framework so that it's easy to change roles on that user. That's something we have in the HC JUnit tests.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3911#discussion_r419693745", "createdAt": "2020-05-04T20:02:40Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/fixtures/users/developer.json", "diffHunk": "@@ -2,5 +2,5 @@\n     \"user-name\": \"dh-dev\",\n     \"description\": \"A data hub dev user\",\n     \"password\": \"dh-dev\",\n-    \"role\": [\"data-hub-developer\"]\n+    \"role\": [\"data-hub-developer\", \"hub-central-entity-exporter\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b562a9d85b8a3f118b1eb5b6e4b7ee7d5adfaccd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwMDM2Mg==", "bodyText": "Yes, Cypress hits ML. Since we deploy data-hub project with all the test users and data before running tests it may be difficult to achieve that at test running stage. I will sync with Srikanth about that.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3911#discussion_r419700362", "createdAt": "2020-05-04T20:14:56Z", "author": {"login": "timur-isangulov"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/fixtures/users/developer.json", "diffHunk": "@@ -2,5 +2,5 @@\n     \"user-name\": \"dh-dev\",\n     \"description\": \"A data hub dev user\",\n     \"password\": \"dh-dev\",\n-    \"role\": [\"data-hub-developer\"]\n+    \"role\": [\"data-hub-developer\", \"hub-central-entity-exporter\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5Mzc0NQ=="}, "originalCommit": {"oid": "b562a9d85b8a3f118b1eb5b6e4b7ee7d5adfaccd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjk1NDkxOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.queries.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDo0NTo1NlrOGQ641w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDo0NTo1NlrOGQ641w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5NTIyMw==", "bodyText": "This test can be verified via RTL and not e2e worthy.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3911#discussion_r420395223", "createdAt": "2020-05-05T20:45:56Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.queries.tsx", "diffHunk": "@@ -59,6 +59,13 @@ describe('save/manage queries scenarios', () => {\n         queryComponent.getSubmitButton().click();\n     });\n \n+    it('check export icon displays', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b562a9d85b8a3f118b1eb5b6e4b7ee7d5adfaccd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjk1ODUyOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.queries.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDo0NzowMlrOGQ67KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDo0NzowMlrOGQ67KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5NTgxNg==", "bodyText": "not e2e worthy. Should be covered using RTL.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3911#discussion_r420395816", "createdAt": "2020-05-05T20:47:02Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.queries.tsx", "diffHunk": "@@ -74,6 +81,51 @@ describe('save/manage queries scenarios', () => {\n         queryComponent.getDeleteQueryYesButton().click({force: true})\n     });\n \n+});\n+\n+describe('save/manage queries scenarios, operator role', () => {\n+\n+    beforeEach(() => {\n+        cy.visit('/');\n+        cy.contains('MarkLogic Data Hub');\n+        cy.loginAsOperator();\n+        cy.wait(500);\n+        homePage.getBrowseEntities().click();\n+        cy.wait(1000);\n+        browsePage.getFacetView();\n+        browsePage.selectEntity('All Entities');\n+    });\n+\n+    it('apply facet search,open save modal and save queries', () => {\n+        browsePage.selectEntity('Customer');\n+        browsePage.getSelectedEntity().should('contain', 'Customer');\n+        cy.wait(500);\n+        browsePage.getFacetItemCheckbox('firstname', 'Kelley').click();\n+        browsePage.getFacetItemCheckbox('firstname', 'Lara').click();\n+        browsePage.getSelectedFacets().should('exist');\n+        browsePage.getGreySelectedFacets('Kelley').should('exist');\n+        browsePage.getFacetApplyButton().should('exist');\n+        browsePage.getFacetApplyButton().click();\n+        browsePage.getSaveModalIcon().click();\n+        cy.wait(500);\n+        browsePage.getSaveQueryName().should('be.visible');\n+        browsePage.getSaveQueryName().type('new-query');\n+        browsePage.getSaveQueryDescription().should('be.visible');\n+        browsePage.getSaveQueryDescription().type('new-query description');\n+        browsePage.getSaveQueryButton().click();\n+        cy.wait(500);\n+        browsePage.getSelectedQuery().should('contain', 'new-query');\n+        browsePage.getSaveQueryButton().should('not.be.visible');\n+        browsePage.getSaveQueriesDropdown().should('be.visible');\n+    });\n+\n+    it('check export icon does not display', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b562a9d85b8a3f118b1eb5b6e4b7ee7d5adfaccd"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjk3MzIwOnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.queries.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDo1MToxN1rOGQ7EVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMDo1MToxN1rOGQ7EVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM5ODE2Nw==", "bodyText": "I would recommend trying to achieve this using RTL as well. The story is for export data and this test seems to be for search/save queries. Exporting data could be an e2e scenario, although I would recommend trying to use RTL first.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3911#discussion_r420398167", "createdAt": "2020-05-05T20:51:17Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/e2e/cypress/integration/scenarios.queries.tsx", "diffHunk": "@@ -74,6 +81,51 @@ describe('save/manage queries scenarios', () => {\n         queryComponent.getDeleteQueryYesButton().click({force: true})\n     });\n \n+});\n+\n+describe('save/manage queries scenarios, operator role', () => {\n+\n+    beforeEach(() => {\n+        cy.visit('/');\n+        cy.contains('MarkLogic Data Hub');\n+        cy.loginAsOperator();\n+        cy.wait(500);\n+        homePage.getBrowseEntities().click();\n+        cy.wait(1000);\n+        browsePage.getFacetView();\n+        browsePage.selectEntity('All Entities');\n+    });\n+\n+    it('apply facet search,open save modal and save queries', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b562a9d85b8a3f118b1eb5b6e4b7ee7d5adfaccd"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDI2NTg4OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query-modal/manage-query.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjowNjozM1rOGRaYvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjowNjozM1rOGRaYvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxMTI5NA==", "bodyText": "I will approve this now. Just a thought for future tests we add, that the 2 modal visibility tests can be combined with a description \"Verify modal visibility\" and the assertion for not visible until you click on the modal icon can be moved into that test.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3911#discussion_r420911294", "createdAt": "2020-05-06T16:06:33Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query-modal/manage-query.test.tsx", "diffHunk": "@@ -5,18 +5,35 @@ import ManageQuery from './manage-query';\n \n describe('Query Modal Component', () => {\n \n-    test('Modal is not visible', () => {\n-      const { queryByTestId } =  render(<ManageQuery />);\n+  let query = [{ \"savedQuery\": { \"id\": \"00529904-ed6e-4539-b7d8-eeddaf15aaa4\", \"name\": \"Lee\", \"description\": \"\", \"query\": { \"searchText\": \"\", \"entityTypeIds\": [\"Customer\"], \"selectedFacets\": { \"firstname\": { \"dataType\": \"xs:string\", \"stringValues\": [\"Lee\"] } } }, \"propertiesToDisplay\": [\"id\"], \"owner\": \"admin\", \"systemMetadata\": { \"createdBy\": \"admin\", \"createdDateTime\": \"2020-05-05T14:48:53.206721-07:00\", \"lastUpdatedBy\": \"admin\", \"lastUpdatedDateTime\": \"2020-05-05T14:48:53.206721-07:00\" } } }]\n \n-      expect(queryByTestId('manage-queries-modal')).toBeNull();\n-    });\n+  test('Modal is not visible', () => {\n+    const { queryByTestId } = render(<ManageQuery />);\n+    expect(queryByTestId('manage-queries-modal')).toBeNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538712361c50894f6b813fa425c5436f538d9571"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDI4ODk2OnYy", "diffSide": "RIGHT", "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query-modal/manage-query.test.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoxMjowOVrOGRansQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoxMjowOVrOGRansQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxNTEyMQ==", "bodyText": "click event will fail if the testid is not in the document. I would like to avoid assertions that dont add value to a test.\nMoreover I see a patter here, which we should avoid as well.\nAll 3 test steps in 'Modal is visible' is duplicated in subsequent steps. We have to click on the icon, there is no way around it, but in doing so 'Modal is visible' is getting tested automatically and so we dont need a separate test doing just that.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3911#discussion_r420915121", "createdAt": "2020-05-06T16:12:09Z", "author": {"login": "bsrikan"}, "path": "marklogic-data-hub-central/ui/src/components/queries/managing/manage-query-modal/manage-query.test.tsx", "diffHunk": "@@ -5,18 +5,35 @@ import ManageQuery from './manage-query';\n \n describe('Query Modal Component', () => {\n \n-    test('Modal is not visible', () => {\n-      const { queryByTestId } =  render(<ManageQuery />);\n+  let query = [{ \"savedQuery\": { \"id\": \"00529904-ed6e-4539-b7d8-eeddaf15aaa4\", \"name\": \"Lee\", \"description\": \"\", \"query\": { \"searchText\": \"\", \"entityTypeIds\": [\"Customer\"], \"selectedFacets\": { \"firstname\": { \"dataType\": \"xs:string\", \"stringValues\": [\"Lee\"] } } }, \"propertiesToDisplay\": [\"id\"], \"owner\": \"admin\", \"systemMetadata\": { \"createdBy\": \"admin\", \"createdDateTime\": \"2020-05-05T14:48:53.206721-07:00\", \"lastUpdatedBy\": \"admin\", \"lastUpdatedDateTime\": \"2020-05-05T14:48:53.206721-07:00\" } } }]\n \n-      expect(queryByTestId('manage-queries-modal')).toBeNull();\n-    });\n+  test('Modal is not visible', () => {\n+    const { queryByTestId } = render(<ManageQuery />);\n+    expect(queryByTestId('manage-queries-modal')).toBeNull();\n+  });\n \n-    test('Modal is visible', () => {\n-        const { getByTestId } =  render(<ManageQuery />);    \n+  test('Modal is visible', () => {\n+    const { getByTestId } = render(<ManageQuery />);\n+    expect(getByTestId('manage-queries-modal-icon')).toBeInTheDocument();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538712361c50894f6b813fa425c5436f538d9571"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4092, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}