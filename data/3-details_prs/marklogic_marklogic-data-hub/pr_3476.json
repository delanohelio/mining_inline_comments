{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NjYxNTc2", "number": 3476, "title": "DHFPROD-4104:Use DS to perform flow/step CRUD operations", "bodyText": "As per requirement for this task, CRUD operations must be performed first on db and then to project.\nThe corresponding PR for CRUD APIs  in one UI repo is\nhttps://project.marklogic.com/repo/projects/PROD/repos/one-ui/pull-requests/23/diff", "createdAt": "2020-01-20T06:14:54Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476", "merged": true, "mergeCommit": {"oid": "5435f79e194b8f1cb9ee7ec819c6f8be1573c74d"}, "closed": true, "closedAt": "2020-01-21T22:09:49Z", "author": {"login": "srinathgit"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8M_rcAFqTM0NTMyNTI1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8nYDGgFqTM0NjE3NzcwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MzI1MjU5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#pullrequestreview-345325259", "createdAt": "2020-01-20T13:58:48Z", "commit": {"oid": "352248cad5d4d988e061d5e54de7c476088f5f9a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "352248cad5d4d988e061d5e54de7c476088f5f9a", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/352248cad5d4d988e061d5e54de7c476088f5f9a", "committedDate": "2020-01-20T06:10:09Z", "message": "DHFPROD-4104:Read/write flows from db first and then to project"}, "afterCommit": {"oid": "3bd23e6b4bd0311adbe029d253451556078f1119", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3bd23e6b4bd0311adbe029d253451556078f1119", "committedDate": "2020-01-21T05:56:21Z", "message": "DHFPROD-4046:Use DS to perform flow/step CRUD operations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bd23e6b4bd0311adbe029d253451556078f1119", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/3bd23e6b4bd0311adbe029d253451556078f1119", "committedDate": "2020-01-21T05:56:21Z", "message": "DHFPROD-4046:Use DS to perform flow/step CRUD operations"}, "afterCommit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c4538a89ced362510d01b277cca6796d47ed5e71", "committedDate": "2020-01-21T06:05:31Z", "message": "DHFPROD-4104:Use DS to perform flow/step CRUD operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NjU2ODI4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#pullrequestreview-345656828", "createdAt": "2020-01-21T06:30:33Z", "commit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODk4MTg4", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#pullrequestreview-345898188", "createdAt": "2020-01-21T14:02:33Z", "commit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71"}, "state": "DISMISSED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDowMjozM1rOFf7BMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoxNDozOVrOFf7bAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxNzEzNw==", "bodyText": "I don't think we want this as a field of the class. Since ArtifactService is bound to a DatabaseClient, storing this as a field binds this class to a DatabaseClient, and thus to a single user. That's the main problem with all the DHF Service/Manager classes - they have HubConfig as a field, and thus they're bound to a single user.\nIf the intent was for Service/Manager classes to be Spring-managed singletons, they should be stateless / threadsafe classes. That's unfortunately not the case, due to the HubConfig field. Ideally, HubConfig - or some subset of it - would be passed in as an argument to methods that need it. In the absence of that, an ArtifactService should be instantiated each time it's needed and not stored as a field.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#discussion_r369017137", "createdAt": "2020-01-21T14:02:33Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/FlowManagerImpl.java", "diffHunk": "@@ -59,37 +65,27 @@\n     @Autowired\n     private StepDefinitionManager stepDefinitionManager;\n \n+    private ArtifactService artifactService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMDI4OQ==", "bodyText": "@srinathgit  @ryanjdew @aebadirad  I think this is an argument here for a new \"getStagingClient()\" method instead of \"newStagingClient()\".  \"new\" implies that the caller should own the lifecycle of the DatabaseClient, and thus that the caller is free to call \"release\" on it - i.e. \"Give me a new DatabaseClient, and don't worry, I'll release it when I decide I'm done with it\". Whereas \"get\" implies - \"Give me your staging DatabaseClient, instantiating it as needed. I recognize it as 'yours', and thus I won't call release on it.\"\nArguably, \"newStagingClient\" should have been called \"getStagingClient\" in a single-user context as well. But my main point is that \"new\" implies that a new object is being created and thus the caller owns it, whereas \"get\" implies that HubConfig owns the object being returned.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#discussion_r369020289", "createdAt": "2020-01-21T14:08:31Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/FlowManagerImpl.java", "diffHunk": "@@ -344,21 +368,14 @@ protected void deleteDocumentsInDirectory(String directory) {\n             logger.info(format(\"Deleting documents in directory '%s' in staging database\", directory));\n         }\n         DatabaseClient stagingClient = hubConfig.newStagingClient();\n-        try {\n-            stagingClient.newServerEval().javascript(query).evalAs(String.class);\n-        } finally {\n-            stagingClient.release();\n-        }\n+        //Since client is getting reused in one UI, client.release() has to be removed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMDgzNA==", "bodyText": "Same thing - unless this class is intended to be bound to a single user/thread, it should not sure ArtifactService as a field.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#discussion_r369020834", "createdAt": "2020-01-21T14:09:30Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/StepDefinitionManagerImpl.java", "diffHunk": "@@ -42,13 +44,16 @@\n     @Autowired\n     private HubConfig hubConfig;\n \n+    private ArtifactService artifactService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMTU1Nw==", "bodyText": "The duplication of calling \"valueToTree\" here to convert an object into a JsonNode suggests the concept of an abstract Artifact class that Mapping, StepDefinition, EntityModel, and Flow all extend. Artifact would have an e.g. \"JsonNode toJsonNode()\" method on it. That encapsulates the logic of converting an object to a JsonNode into the object itself, as opposed to exposing and duplicating it across N Manager classes.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#discussion_r369021557", "createdAt": "2020-01-21T14:10:48Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/StepDefinitionManagerImpl.java", "diffHunk": "@@ -68,6 +73,7 @@ public void saveStepDefinition(StepDefinition stepDefinition, boolean autoIncrem\n         } catch (IOException e) {\n             throw new DataHubProjectException(\"Could not write Step to disk for project.\");\n         }\n+        getArtifactService().setArtifact(\"stepDefinitions\", stepDefinition.getName(),mapper.valueToTree(stepDefinition));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMzc0Ng==", "bodyText": "Why even store this as a field? The class already has a dependency on HubConfig. When a HubProject is needed, why not just call hubConfig.getHubProject? Then we don't need a field, and we don't need a PostConstruct method either.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#discussion_r369023746", "createdAt": "2020-01-21T14:14:39Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ScaffoldingImpl.java", "diffHunk": "@@ -34,19 +34,21 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n+import org.springframework.web.context.annotation.SessionScope;\n \n+import javax.annotation.PostConstruct;\n import java.io.*;\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.util.HashMap;\n import java.util.Map;\n \n+@SessionScope\n @Component\n public class ScaffoldingImpl implements Scaffolding {\n \n-    @Autowired\n-    private HubProject project;\n+    private HubProject project = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e52c33ef715f89cae3eaef7d04abb068047835b4", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e52c33ef715f89cae3eaef7d04abb068047835b4", "committedDate": "2020-01-21T18:17:10Z", "message": "DHFPROD-4104:Use DS to perform flow/step CRUD operations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4538a89ced362510d01b277cca6796d47ed5e71", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c4538a89ced362510d01b277cca6796d47ed5e71", "committedDate": "2020-01-21T06:05:31Z", "message": "DHFPROD-4104:Use DS to perform flow/step CRUD operations"}, "afterCommit": {"oid": "e52c33ef715f89cae3eaef7d04abb068047835b4", "author": {"user": {"login": "srinathgit", "name": "Srinath S"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e52c33ef715f89cae3eaef7d04abb068047835b4", "committedDate": "2020-01-21T18:17:10Z", "message": "DHFPROD-4104:Use DS to perform flow/step CRUD operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MTc3NzA0", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3476#pullrequestreview-346177704", "createdAt": "2020-01-21T20:42:57Z", "commit": {"oid": "e52c33ef715f89cae3eaef7d04abb068047835b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2358, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}