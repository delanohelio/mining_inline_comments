{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNjI5NDky", "number": 3634, "title": "DHFPROD-4544: Make FlowRunner compatible with session based HubConfig", "bodyText": "", "createdAt": "2020-03-02T21:57:49Z", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634", "merged": true, "mergeCommit": {"oid": "f3bfb8be93474d73f8ae044745398f7cbcffc5ab"}, "closed": true, "closedAt": "2020-03-04T16:38:13Z", "author": {"login": "ryanjdew"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJ1I1SgFqTM2NzU2Mzc0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKNrqfgFqTM2ODQ2OTM3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTYzNzQw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-367563740", "createdAt": "2020-03-02T22:06:00Z", "commit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowNjowMFrOFwxCYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowNjowMFrOFwxCYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3OTM5Mg==", "bodyText": "It does not relate to PR. But the condition does not seem correct.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(!(threadPool != null && threadPool.isTerminating())) {\n          \n          \n            \n                                if (threadPool != null && !threadPool.isTerminating()) {", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r386679392", "createdAt": "2020-03-02T22:06:00Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -545,7 +551,7 @@ public void afterExecute(Runnable r, Throwable t) {\n                 //Run the next step\n                 else {\n                     if(!(threadPool != null && threadPool.isTerminating())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTY4NDI2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-367568426", "createdAt": "2020-03-02T22:13:57Z", "commit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoxMzo1OFrOFwxRLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjoxMzo1OFrOFwxRLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY4MzE4Mw==", "bodyText": "still @Autowired?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r386683183", "createdAt": "2020-03-02T22:13:58Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/ScaffoldingImpl.java", "diffHunk": "@@ -43,7 +43,7 @@\n \n @Component\n public class ScaffoldingImpl implements Scaffolding {\n-    \n+\n     @Autowired", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTk4NjU2", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-367598656", "createdAt": "2020-03-02T23:13:07Z", "commit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzoxMzowN1rOFwyygQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMzoxMzowN1rOFwyygQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwODA5Nw==", "bodyText": "My gut feeling is the StepRunnerFactory can be implemented as a singleton object.   StepRunnerFactory does not need to keep those states' reference when getStepRunner gets called. MarkLogicStepDefinitionProvider can be implemented as a singleton object. I am not sure why we have to pass stepRunnerFactory to the Runnable?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r386708097", "createdAt": "2020-03-02T23:13:07Z", "author": {"login": "hao1st"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -112,8 +113,9 @@ public FlowRunnerImpl(String host, String username, String password) {\n      */\n     public FlowRunnerImpl(HubConfig hubConfig) {\n         this.hubConfig = hubConfig;\n-        this.stepRunnerFactory = new StepRunnerFactory(this.hubConfig);\n-        this.stepRunnerFactory.setStepDefinitionProvider(new MarkLogicStepDefinitionProvider(this.hubConfig.newStagingClient(null)));\n+        this.flowManager = new FlowManagerImpl(hubConfig);\n+        this.stepRunnerFactory = new StepRunnerFactory(hubConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NjEyMDQ3", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-367612047", "createdAt": "2020-03-02T23:47:00Z", "commit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/cc54bd88b9b14c52cd89c0e3fe71cd370186a16d", "committedDate": "2020-03-03T00:58:43Z", "message": "DHFPROD-4544: Make FlowRunner compatible with session based HubConfig"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/fb2cc361fc3fa65223d29002e307e58273373c29", "committedDate": "2020-03-02T21:56:27Z", "message": "DHFPROD-4544: Make FlowRunner compatible with session based HubConfig"}, "afterCommit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/cc54bd88b9b14c52cd89c0e3fe71cd370186a16d", "committedDate": "2020-03-03T00:58:43Z", "message": "DHFPROD-4544: Make FlowRunner compatible with session based HubConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Njg1Mzc5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-367685379", "createdAt": "2020-03-03T03:43:16Z", "commit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTU3OTYw", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-367957960", "createdAt": "2020-03-03T13:02:09Z", "commit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzowMjowOVrOFxE1OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMzoxNjowNVrOFxFQMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwMzcwNA==", "bodyText": "The StepDefinitionProvider can't easily be a singleton because we have multiple implementations of it. As for FlowRunnerTask depending on StepRunnerFactory - it's likely that whole design can change, as I don't know that a FlowRunnerImpl is ever really used to run multiple flows at once. But I don't think it's worth changing anything about that right now.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r387003704", "createdAt": "2020-03-03T13:02:09Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -112,8 +113,9 @@ public FlowRunnerImpl(String host, String username, String password) {\n      */\n     public FlowRunnerImpl(HubConfig hubConfig) {\n         this.hubConfig = hubConfig;\n-        this.stepRunnerFactory = new StepRunnerFactory(this.hubConfig);\n-        this.stepRunnerFactory.setStepDefinitionProvider(new MarkLogicStepDefinitionProvider(this.hubConfig.newStagingClient(null)));\n+        this.flowManager = new FlowManagerImpl(hubConfig);\n+        this.stepRunnerFactory = new StepRunnerFactory(hubConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcwODA5Nw=="}, "originalCommit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNTEwNw==", "bodyText": "I think that's correct, because it avoids a null-pointer issue if the threadPool is null, since the next line tries to do something with the threadPool.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r387005107", "createdAt": "2020-03-03T13:05:03Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -545,7 +551,7 @@ public void afterExecute(Runnable r, Throwable t) {\n                 //Run the next step\n                 else {\n                     if(!(threadPool != null && threadPool.isTerminating())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3OTM5Mg=="}, "originalCommit": {"oid": "fb2cc361fc3fa65223d29002e307e58273373c29"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNTYwMg==", "bodyText": "If we're not autowiring this anymore, I think the Component annotation should be removed.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r387005602", "createdAt": "2020-03-03T13:06:03Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/impl/MappingManagerImpl.java", "diffHunk": "@@ -47,18 +46,20 @@\n @Component", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwNjk4OA==", "bodyText": "You can get rid of this line of code now that StepRunnerFactory is doing this part itself in its constructor.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r387006988", "createdAt": "2020-03-03T13:08:52Z", "author": {"login": "rjrudin"}, "path": "marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java", "diffHunk": "@@ -118,8 +119,9 @@ public FlowRunnerImpl(String host, String username, String password) {\n      */\n     public FlowRunnerImpl(HubConfig hubConfig) {\n         this.hubConfig = hubConfig;\n-        this.stepRunnerFactory = new StepRunnerFactory(this.hubConfig);\n-        this.stepRunnerFactory.setStepDefinitionProvider(new MarkLogicStepDefinitionProvider(this.hubConfig.newStagingClient(null)));\n+        this.flowManager = new FlowManagerImpl(hubConfig);\n+        this.stepRunnerFactory = new StepRunnerFactory(hubConfig);\n+        this.stepRunnerFactory.setStepDefinitionProvider(new MarkLogicStepDefinitionProvider(hubConfig.newStagingClient(null)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwODY3OQ==", "bodyText": "I think this introduces a race condition between two threads hitting this controller. Both threads could hit line 167 at the same time, and then lastFlowManagerService would be equal to whichever thread finished 167 last, and both threads would use the same one.\nIs \"lastFlowManagerService\" only needed for unit testing purposes? If so, the way to get a reference to it is to subclass FlowController in your test and override this method to do the same thing - i.e. hang onto a reference of the FlowManagerService that is constructed.", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r387008679", "createdAt": "2020-03-03T13:12:16Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/controllers/FlowController.java", "diffHunk": "@@ -163,4 +163,13 @@ protected ArtifactService getArtifactService() {\n         return ArtifactService.on(dataServicesClient);\n     }\n \n+    private FlowManagerService getFlowManagerService() {\n+        lastFlowManagerService = new FlowManagerService(this.hubConfig.getHubConfigImpl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAxMDYwOQ==", "bodyText": "FlowManagerService isn't accomplishing anything in terms of reuse - FlowController is its only client (just like in QS). Its name doesn't fit with our naming conventions either. How about just shoving all of it into FlowController, and then you can just do the trick I mentioned above for getting a reference to lastFlowRunner?", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#discussion_r387010609", "createdAt": "2020-03-03T13:16:05Z", "author": {"login": "rjrudin"}, "path": "one-ui/src/main/java/com/marklogic/hub/curation/services/FlowManagerService.java", "diffHunk": "@@ -365,4 +370,13 @@ public Flow stop(String flowName) {\n         return getFlow(flowName);\n     }\n \n+    protected FlowRunnerImpl getFlowRunner() {\n+        lastFlowRunner = new FlowRunnerImpl(this.hubConfig);\n+        return lastFlowRunner;\n+    }\n+\n+    // TODO public so the FlowControllerTest can see it\n+    public FlowRunnerImpl getLastFlowRunner() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc54bd88b9b14c52cd89c0e3fe71cd370186a16d"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1e5db6183ea386d31eda0c15ee814a95aec276b", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/e1e5db6183ea386d31eda0c15ee814a95aec276b", "committedDate": "2020-03-03T19:43:28Z", "message": "DHFPROD-3922: Legacy FlowRunner still needs some of the Autowire annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8bce169b83628d80d509db3bd4bbe4df38035d3", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/c8bce169b83628d80d509db3bd4bbe4df38035d3", "committedDate": "2020-03-03T20:49:07Z", "message": "DHFPROD-3922: Implement refactoring that removes FlowManagerService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69be94623f3d3940057fbb4759ad1dc179e77057", "author": {"user": {"login": "ryanjdew", "name": "Ryan Dew"}}, "url": "https://github.com/marklogic/marklogic-data-hub/commit/69be94623f3d3940057fbb4759ad1dc179e77057", "committedDate": "2020-03-03T23:25:31Z", "message": "Update marklogic-data-hub/src/main/java/com/marklogic/hub/flow/impl/FlowRunnerImpl.java\n\nCo-Authored-By: Hao Liu <hao.liu@marklogic.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDI2NDU1", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-368426455", "createdAt": "2020-03-04T00:37:25Z", "commit": {"oid": "69be94623f3d3940057fbb4759ad1dc179e77057"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDY5Mzc5", "url": "https://github.com/marklogic/marklogic-data-hub/pull/3634#pullrequestreview-368469379", "createdAt": "2020-03-04T02:41:47Z", "commit": {"oid": "69be94623f3d3940057fbb4759ad1dc179e77057"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2278, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}