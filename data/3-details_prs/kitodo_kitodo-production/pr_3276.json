{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTc4MTE5", "number": 3276, "title": "Not export links to unexported children", "bodyText": "Resolves #3218", "createdAt": "2020-03-10T07:33:34Z", "url": "https://github.com/kitodo/kitodo-production/pull/3276", "merged": true, "mergeCommit": {"oid": "1cd5c3a2d1e928613b0f992fa84bd1a4d03d3f31"}, "closed": true, "closedAt": "2020-03-23T07:20:48Z", "author": {"login": "matthias-ronge"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMNbGCAH2gAyMzg1OTc4MTE5OmY3NjA2M2ZlNzAwMmZhYTRhZDYyNzlhYmI3M2ZmOGRmYmM1N2QzM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPJJDlgH2gAyMzg1OTc4MTE5OmIyZDhkMDFmNThjNDExYWUwNzk0OGViMTg0NWQ0YjYyMzQ2ZTViYzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f76063fe7002faa4ad6279abb73ff8dfbc57d33f", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/f76063fe7002faa4ad6279abb73ff8dfbc57d33f", "committedDate": "2020-03-10T07:31:32Z", "message": "Not export links to unexported children"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxOTQwMjM4", "url": "https://github.com/kitodo/kitodo-production/pull/3276#pullrequestreview-371940238", "createdAt": "2020-03-10T13:17:59Z", "commit": {"oid": "f76063fe7002faa4ad6279abb73ff8dfbc57d33f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzoxODo0NVrOF0OWRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzoxODo0NVrOF0OWRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwNTM0OQ==", "bodyText": "If it is not exported, then the childLinksForExport should not be converted. So \"false\" is more intuitive here, isn't it?", "url": "https://github.com/kitodo/kitodo-production/pull/3276#discussion_r390305349", "createdAt": "2020-03-10T13:18:45Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/schema/SchemaService.java", "diffHunk": "@@ -225,18 +226,24 @@ private void addUse(Subfolder useFolder, String canonical, MediaUnit mediaUnit)\n         mediaUnit.getMediaFiles().put(mediaVariant, mediaFile);\n     }\n \n-    private void convertChildrenLinksForExport(Workpiece workpiece, IncludedStructuralElement structure,\n+    private boolean convertChildrenLinksForExport(Workpiece workpiece, IncludedStructuralElement structure,\n                                                LegacyPrefsHelper prefs) throws DAOException, IOException {\n \n         LinkedMetsResource link = structure.getLink();\n         if (Objects.nonNull(link)) {\n             int linkedProcessId = ServiceManager.getProcessService().processIdFromUri(link.getUri());\n             Process process = ServiceManager.getProcessService().getById(linkedProcessId);\n+            if (!process.isExported()) {\n+                return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76063fe7002faa4ad6279abb73ff8dfbc57d33f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f94367d0fce65f89a1643b781472933ed3d4921f", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/f94367d0fce65f89a1643b781472933ed3d4921f", "committedDate": "2020-03-12T06:55:07Z", "message": "Reverse if condition"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "154f409e4c49b633b5234d82f076fb10ed80a160", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/154f409e4c49b633b5234d82f076fb10ed80a160", "committedDate": "2020-03-12T06:44:07Z", "message": "Add javadoc"}, "afterCommit": {"oid": "f94367d0fce65f89a1643b781472933ed3d4921f", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/f94367d0fce65f89a1643b781472933ed3d4921f", "committedDate": "2020-03-12T06:55:07Z", "message": "Reverse if condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODU3NTQx", "url": "https://github.com/kitodo/kitodo-production/pull/3276#pullrequestreview-375857541", "createdAt": "2020-03-17T09:18:36Z", "commit": {"oid": "f94367d0fce65f89a1643b781472933ed3d4921f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToxODozNlrOF3TtMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToxOTowMlrOF3TuGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUzODg2Nw==", "bodyText": "now you have even two negative conditions. Please swap the if contents", "url": "https://github.com/kitodo/kitodo-production/pull/3276#discussion_r393538867", "createdAt": "2020-03-17T09:18:36Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/schema/SchemaService.java", "diffHunk": "@@ -226,24 +226,38 @@ private void addUse(Subfolder useFolder, String canonical, MediaUnit mediaUnit)\n         mediaUnit.getMediaFiles().put(mediaVariant, mediaFile);\n     }\n \n-    private boolean convertChildrenLinksForExport(Workpiece workpiece, IncludedStructuralElement structure,\n+    /**\n+     * Replaces internal links in child structure elements with a publicly\n+     * resolvable link. Checks whether the linked process has not yet been\n+     * exported, in which case false is returned to delete the link from the\n+     * parental list.\n+     *\n+     * @param workpiece\n+     *            current workpiece\n+     * @param structure\n+     *            current structure\n+     * @param prefs\n+     *            legacy ruleset wrapper\n+     * @return whether the current structure shall not be deleted\n+     */\n+    private boolean convertChildrenLinksForExportRecursive(Workpiece workpiece, IncludedStructuralElement structure,\n                                                LegacyPrefsHelper prefs) throws DAOException, IOException {\n \n         LinkedMetsResource link = structure.getLink();\n         if (Objects.nonNull(link)) {\n             int linkedProcessId = ServiceManager.getProcessService().processIdFromUri(link.getUri());\n             Process process = ServiceManager.getProcessService().getById(linkedProcessId);\n             if (!process.isExported()) {\n-                return true;\n+                return false;\n             }\n             setLinkForExport(structure, process, prefs, workpiece);\n         }\n         for (Iterator<IncludedStructuralElement> iterator = structure.getChildren().iterator(); iterator.hasNext();) {\n-            if (convertChildrenLinksForExport(workpiece, iterator.next(), prefs)) {\n+            if (!convertChildrenLinksForExportRecursive(workpiece, iterator.next(), prefs)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f94367d0fce65f89a1643b781472933ed3d4921f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUzOTA5Ng==", "bodyText": "please don't use the word \"recursive\" in a method.", "url": "https://github.com/kitodo/kitodo-production/pull/3276#discussion_r393539096", "createdAt": "2020-03-17T09:19:02Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/schema/SchemaService.java", "diffHunk": "@@ -86,7 +86,7 @@\n         set(workpiece, MdSec.TECH_MD, \"purlUrl\", vp.replace(process.getProject().getMetsPurl()));\n         set(workpiece, MdSec.TECH_MD, \"contentIDs\", vp.replace(process.getProject().getMetsContentIDs()));\n \n-        convertChildrenLinksForExport(workpiece, workpiece.getRootElement(), prefs);\n+        convertChildrenLinksForExportRecursive(workpiece, workpiece.getRootElement(), prefs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f94367d0fce65f89a1643b781472933ed3d4921f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2d8d01f58c411ae07948eb1845d4b62346e5bc1", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/b2d8d01f58c411ae07948eb1845d4b62346e5bc1", "committedDate": "2020-03-19T10:13:59Z", "message": "Reverse if condition"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2679, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}