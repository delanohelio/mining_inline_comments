{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMzkxNjc5", "number": 3248, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzo0MToxM1rODj0QOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzo0MToxM1rODj0QOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODgyODcyOnYy", "diffSide": "RIGHT", "path": "Kitodo/src/main/java/org/kitodo/production/forms/ProcessForm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzo0MToxM1rOFv1SMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMzo0MToxM1rOFv1SMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTcwMDQwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        List<Property> workpieceProperties = process.getWorkpieces();\n          \n          \n            \n                        String docType = \"\";\n          \n          \n            \n                        for (Property workpieceProperty : workpieceProperties) {\n          \n          \n            \n                        String docType = \"\";\n          \n          \n            \n                        for (Property workpieceProperty : process.getWorkpieces()) {", "url": "https://github.com/kitodo/kitodo-production/pull/3248#discussion_r385700403", "createdAt": "2020-02-28T13:41:13Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/forms/ProcessForm.java", "diffHunk": "@@ -262,8 +261,14 @@ public boolean createProcessesWithCalendar(ProcessDTO processDTO) {\n         try {\n             Process process = ServiceManager.getProcessService().getById(processDTO.getId());\n             Integer rulesetId = process.getRuleset().getId();\n-            String docType = ServiceManager.getMetsService()\n-                    .getBaseType(ServiceManager.getProcessService().getMetadataFileUri(process));\n+            List<Property> workpieceProperties = process.getWorkpieces();\n+            String docType = \"\";\n+            for (Property workpieceProperty : workpieceProperties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28e5c3a691f3f8d81cb2613803974201c221e9c9"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4004, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}