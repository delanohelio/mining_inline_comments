{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTYxMjU5", "number": 3374, "title": "Update import module to make it usable for arbitrary search queries by URL", "bodyText": "rename SRUImport to QueryURLImport\nadd attribute prefix to element identifierParameter in kitodo_opac.xml (specifies an optional prefix to be prepended before IDs when submitting queries by identifier)\nadd enum InterfaceType to allow distinguishing between multiple types and available interface parameters (right now SRU and OAI)\n\nCloses #3373", "createdAt": "2020-04-01T12:24:13Z", "url": "https://github.com/kitodo/kitodo-production/pull/3374", "merged": true, "mergeCommit": {"oid": "a7f2e9497f0a306c29a4771f9a7566b5c9a54705"}, "closed": true, "closedAt": "2020-04-06T17:24:41Z", "author": {"login": "solth"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTWuJ1AH2gAyMzk2OTYxMjU5OjEzYTg0ZGY2ZGQ2M2VjNzYwZWViM2I0MTBkOTAyNjEyMzRkY2M4OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUGBwbgH2gAyMzk2OTYxMjU5OjcxN2NkMGIzZDI0MzM5OTZiNTA1MjY5YjZjZTQ3NGFmYjhiNTQ0MWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "13a84df6dd63ec760eeb3b410d90261234dcc891", "author": {"user": {"login": "solth", "name": "Arved Solth"}}, "url": "https://github.com/kitodo/kitodo-production/commit/13a84df6dd63ec760eeb3b410d90261234dcc891", "committedDate": "2020-04-01T12:18:58Z", "message": "Update import module to make it usable for arbitrary query URLs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjAzNTIw", "url": "https://github.com/kitodo/kitodo-production/pull/3374#pullrequestreview-385603520", "createdAt": "2020-04-01T13:49:19Z", "commit": {"oid": "13a84df6dd63ec760eeb3b410d90261234dcc891"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0OToxOVrOF_BiUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzo0OToxOVrOF_BiUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYyOTc3OA==", "bodyText": "How does the condition effect the execution of the concatenation?", "url": "https://github.com/kitodo/kitodo-production/pull/3374#discussion_r401629778", "createdAt": "2020-04-01T13:49:19Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo-Query-URL-Import/src/main/java/org/kitodo/queryurlimport/QueryURLImport.java", "diffHunk": "@@ -130,17 +133,24 @@ public DataRecord getFullRecordById(String catalogId, String identifier) throws\n         if (searchFieldMapping.keySet().containsAll(searchFields.keySet())) {\n             // Query parameters for HTTP request\n             LinkedHashMap<String, String> queryParameters = new LinkedHashMap<>(parameters);\n-\n             // Search fields and terms of query\n-            LinkedHashMap<String, String> searchFieldMap = new LinkedHashMap<>();\n-            for (Map.Entry<String, String> entry : searchFields.entrySet()) {\n-                searchFieldMap.put(searchFieldMapping.get(entry.getKey()), entry.getValue());\n-            }\n+            LinkedHashMap<String, String> searchFieldMap = getSearchFieldMap(searchFields);\n+\n             try {\n                 URI queryURL = createQueryURI(queryParameters);\n-                String queryString = queryURL.toString();\n-                queryString = queryString + \"&startRecord=0&maximumRecords=\" + rows + \"&query=\"\n-                        + createSearchFieldString(searchFieldMap);\n+                String queryString = queryURL.toString() + \"&\";\n+                if (Objects.nonNull(interfaceType)) {\n+                    if (Objects.nonNull(interfaceType.getStartRecordString())) {\n+                        queryString = queryString + interfaceType.getStartRecordString() + equalsOperand + \"0&\";\n+                    }\n+                    if (Objects.nonNull(interfaceType.getMaxRecordsString())) {\n+                        queryString = queryString + interfaceType.getMaxRecordsString() + equalsOperand + rows + \"&\";\n+                    }\n+                    if (Objects.nonNull(interfaceType.getQueryString())) {\n+                        queryString = queryString + equalsOperand;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13a84df6dd63ec760eeb3b410d90261234dcc891"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f18b2d2fa396e286cc57b274b78613c5b77bdff4", "author": {"user": {"login": "solth", "name": "Arved Solth"}}, "url": "https://github.com/kitodo/kitodo-production/commit/f18b2d2fa396e286cc57b274b78613c5b77bdff4", "committedDate": "2020-04-02T07:49:04Z", "message": "Add missing query string parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f5b37488cbb9e0d5a00520faa95516b17056960", "author": {"user": {"login": "solth", "name": "Arved Solth"}}, "url": "https://github.com/kitodo/kitodo-production/commit/0f5b37488cbb9e0d5a00520faa95516b17056960", "committedDate": "2020-04-03T19:02:49Z", "message": "Display error messages returned by search interfaces during OPAC import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717cd0b3d2433996b505269b6ce474afb8b5441d", "author": {"user": {"login": "solth", "name": "Arved Solth"}}, "url": "https://github.com/kitodo/kitodo-production/commit/717cd0b3d2433996b505269b6ce474afb8b5441d", "committedDate": "2020-04-03T19:25:55Z", "message": "Prepend optional 'idPrefix' before every ID search parameter"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2701, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}