{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTAwNTAy", "number": 3806, "title": "Add columns for last processed task", "bodyText": "Add columns to process list and task lists displaying\n\nlast user working on a task\nprocessing begin of task\nprocessing end of task\n\nIn the process list, the information is displayed for tasks currently INWORK. If no task is currently in work, it is instead displayed for the last CLOSED task.", "createdAt": "2020-07-03T15:02:50Z", "url": "https://github.com/kitodo/kitodo-production/pull/3806", "merged": true, "mergeCommit": {"oid": "5b148979d193bffdff10f6ad4b9258155c6a0e9d"}, "closed": true, "closedAt": "2020-07-09T08:14:21Z", "author": {"login": "solth"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxUtUDAH2gAyNDQ0MTAwNTAyOjg0MjgzMGI5YTkxZjFmY2JhOWI0NWUzY2I5YzViYjRkZTQ5NzI5OGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy5QwNgH2gAyNDQ0MTAwNTAyOjUxNzJjMTFhOTlmY2ExNTRhMDdjMjExM2Y1MDlkMjBmNzVlMTY3ZjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "842830b9a91f1fcba9b45e3cb9c5bb4de497298e", "author": {"user": {"login": "solth", "name": "Arved Solth"}}, "url": "https://github.com/kitodo/kitodo-production/commit/842830b9a91f1fcba9b45e3cb9c5bb4de497298e", "committedDate": "2020-07-03T14:55:58Z", "message": "Add columns for last processed task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "305d6fb218ffa53d903089abd29a068b2b5859e5", "author": {"user": {"login": "solth", "name": "Arved Solth"}}, "url": "https://github.com/kitodo/kitodo-production/commit/305d6fb218ffa53d903089abd29a068b2b5859e5", "committedDate": "2020-07-06T12:52:19Z", "message": "Fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NTUzODEy", "url": "https://github.com/kitodo/kitodo-production/pull/3806#pullrequestreview-444553812", "createdAt": "2020-07-08T09:07:35Z", "commit": {"oid": "305d6fb218ffa53d903089abd29a068b2b5859e5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOTowNzozNVrOGufDQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOTowNzo0OFrOGufDuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NjQxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String getLastUserProcessingStart(ProcessDTO processDTO) {\n          \n          \n            \n                public String getLastProcessingStart(ProcessDTO processDTO) {", "url": "https://github.com/kitodo/kitodo-production/pull/3806#discussion_r451396418", "createdAt": "2020-07-08T09:07:35Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java", "diffHunk": "@@ -2505,4 +2510,64 @@ private String createCommentTooltip(List<Comment> comments) {\n                         + \" (\" + Helper.getTranslation(\"fixed\") + \": \" + c.isCorrected() + \")\")\n                 .collect(Collectors.joining(NEW_LINE_ENTITY));\n     }\n+\n+    private TaskDTO getLastProcessedTask(ProcessDTO processDTO) {\n+        List<TaskDTO> tasks = getTasksInWork(processDTO);\n+        if (tasks.isEmpty()) {\n+            tasks = getCompletedTasks(processDTO);\n+        }\n+        tasks = tasks.stream().filter(t -> Objects.nonNull(t.getProcessingUser())).collect(Collectors.toList());\n+        if (tasks.isEmpty()) {\n+            return null;\n+        } else {\n+            tasks.sort(Comparator.comparing(TaskDTO::getProcessingBegin));\n+            return tasks.get(0);\n+        }\n+    }\n+\n+    /**\n+     * Return UserName of user that handled the last task of the given process (either the newest task INWORK or the\n+     * newest DONE task, if no task is INWORK). Return an empty String if no task is INWORK or DONE.\n+     *\n+     * @param processDTO Process\n+     * @return name of processing user\n+     */\n+    public String getUserHandlingLastTask(ProcessDTO processDTO) {\n+        TaskDTO lastTask = getLastProcessedTask(processDTO);\n+        if (Objects.isNull(lastTask)) {\n+            return \"\";\n+        } else {\n+            return lastTask.getProcessingUser().getFullName();\n+        }\n+    }\n+\n+    /**\n+     * Return processing begin of last processed task of given process.\n+     *\n+     * @param processDTO Process\n+     * @return processing begin of last processed task\n+     */\n+    public String getLastUserProcessingStart(ProcessDTO processDTO) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305d6fb218ffa53d903089abd29a068b2b5859e5"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NjUzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String getLastUserProcessingEnd(ProcessDTO processDTO) {\n          \n          \n            \n                public String getLastProcessingEnd(ProcessDTO processDTO) {", "url": "https://github.com/kitodo/kitodo-production/pull/3806#discussion_r451396536", "createdAt": "2020-07-08T09:07:48Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java", "diffHunk": "@@ -2505,4 +2510,64 @@ private String createCommentTooltip(List<Comment> comments) {\n                         + \" (\" + Helper.getTranslation(\"fixed\") + \": \" + c.isCorrected() + \")\")\n                 .collect(Collectors.joining(NEW_LINE_ENTITY));\n     }\n+\n+    private TaskDTO getLastProcessedTask(ProcessDTO processDTO) {\n+        List<TaskDTO> tasks = getTasksInWork(processDTO);\n+        if (tasks.isEmpty()) {\n+            tasks = getCompletedTasks(processDTO);\n+        }\n+        tasks = tasks.stream().filter(t -> Objects.nonNull(t.getProcessingUser())).collect(Collectors.toList());\n+        if (tasks.isEmpty()) {\n+            return null;\n+        } else {\n+            tasks.sort(Comparator.comparing(TaskDTO::getProcessingBegin));\n+            return tasks.get(0);\n+        }\n+    }\n+\n+    /**\n+     * Return UserName of user that handled the last task of the given process (either the newest task INWORK or the\n+     * newest DONE task, if no task is INWORK). Return an empty String if no task is INWORK or DONE.\n+     *\n+     * @param processDTO Process\n+     * @return name of processing user\n+     */\n+    public String getUserHandlingLastTask(ProcessDTO processDTO) {\n+        TaskDTO lastTask = getLastProcessedTask(processDTO);\n+        if (Objects.isNull(lastTask)) {\n+            return \"\";\n+        } else {\n+            return lastTask.getProcessingUser().getFullName();\n+        }\n+    }\n+\n+    /**\n+     * Return processing begin of last processed task of given process.\n+     *\n+     * @param processDTO Process\n+     * @return processing begin of last processed task\n+     */\n+    public String getLastUserProcessingStart(ProcessDTO processDTO) {\n+        TaskDTO lastTask = getLastProcessedTask(processDTO);\n+        if (Objects.isNull(lastTask)) {\n+            return \"\";\n+        } else {\n+            return lastTask.getProcessingBegin();\n+        }\n+    }\n+\n+    /**\n+     * Return processing end of last processed task of given process.\n+     *\n+     * @param processDTO Process\n+     * @return processing end of last processed task\n+     */\n+    public String getLastUserProcessingEnd(ProcessDTO processDTO) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305d6fb218ffa53d903089abd29a068b2b5859e5"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5172c11a99fca154a07c2113f509d20f75e167f5", "author": {"user": {"login": "solth", "name": "Arved Solth"}}, "url": "https://github.com/kitodo/kitodo-production/commit/5172c11a99fca154a07c2113f509d20f75e167f5", "committedDate": "2020-07-08T12:05:11Z", "message": "Rename methods"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2619, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}