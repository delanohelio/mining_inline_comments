{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTg1ODI3", "number": 4118, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1MDo0MlrOFFeDgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1NTo0NVrOFFeMQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjc5NjE3OnYy", "diffSide": "RIGHT", "path": "Kitodo-API/src/main/java/org/kitodo/config/OPACConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1MDo0MlrOIF_lcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1MDo0MlrOIF_lcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1NTU2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return configration for catalog's \"queryDelimiter\"\n          \n          \n            \n                 * @return configuration for catalog's \"queryDelimiter\"", "url": "https://github.com/kitodo/kitodo-production/pull/4118#discussion_r543155569", "createdAt": "2020-12-15T08:50:42Z", "author": {"login": "solth"}, "path": "Kitodo-API/src/main/java/org/kitodo/config/OPACConfig.java", "diffHunk": "@@ -113,6 +113,15 @@ public static HierarchicalConfiguration getUrlParameters(String catalogName) {\n                 .map(c -> c.getRoot().getValue().toString()).collect(Collectors.toList());\n     }\n \n+    /**\n+     * Retrieve the \"queryDelimiter\" of the catalog identified by its title.\n+     * @param catalogName String identifying the catalog by its title\n+     * @return configration for catalog's \"queryDelimiter\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69b95b9a211b4eb358a21dd5697964aa6aeb9dc"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjgxODA0OnYy", "diffSide": "RIGHT", "path": "Kitodo/src/main/java/org/kitodo/production/model/LazyHitModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1NTozN1rOIF_ylQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1NTozN1rOIF_ylQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1ODkzMw==", "bodyText": "Could this method be moved to ImportService and be called inside performSearch there instead? ImportService already imports OPACConfig and I think it would be cleaner if the LazyHitModel itself wouldnt need to manipulate any of the search parameters passed by the user but instead would let the ImportService` handle all that (which is already the case with all other catalog specific settings).", "url": "https://github.com/kitodo/kitodo-production/pull/4118#discussion_r543158933", "createdAt": "2020-12-15T08:55:37Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/model/LazyHitModel.java", "diffHunk": "@@ -54,14 +55,28 @@ public int getRowCount() {\n     public List<Object> load(int first, int resultSize, String sortField, SortOrder sortOrder, Map filters) {\n \n         searchResult = ServiceManager.getImportService().performSearch(\n-                this.selectedField, this.searchTerm, this.selectedCatalog, first, resultSize);\n+                this.selectedField, getSearchTermWithDelimiter(this.searchTerm), this.selectedCatalog, first, resultSize);\n \n         if (Objects.isNull(searchResult) || Objects.isNull(searchResult.getHits())) {\n             return Collections.emptyList();\n         }\n         return searchResult.getHits().stream().map(r -> (Object)r).collect(Collectors.toList());\n     }\n \n+    /**\n+     * Returns the searchTerm with configured Delimiter.\n+     * @param searchTerm the searchterm to add delimiters.\n+     * @return searchTermWithDelimiter\n+     */\n+    public String getSearchTermWithDelimiter(String searchTerm) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69b95b9a211b4eb358a21dd5697964aa6aeb9dc"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjgxODU5OnYy", "diffSide": "RIGHT", "path": "Kitodo/src/main/java/org/kitodo/production/model/LazyHitModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1NTo0NVrOIF_y6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1NTo0NVrOIF_y6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1OTAxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param searchTerm the searchterm to add delimiters.\n          \n          \n            \n                 * @param searchTerm the search term to add delimiters.", "url": "https://github.com/kitodo/kitodo-production/pull/4118#discussion_r543159017", "createdAt": "2020-12-15T08:55:45Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/model/LazyHitModel.java", "diffHunk": "@@ -54,14 +55,28 @@ public int getRowCount() {\n     public List<Object> load(int first, int resultSize, String sortField, SortOrder sortOrder, Map filters) {\n \n         searchResult = ServiceManager.getImportService().performSearch(\n-                this.selectedField, this.searchTerm, this.selectedCatalog, first, resultSize);\n+                this.selectedField, getSearchTermWithDelimiter(this.searchTerm), this.selectedCatalog, first, resultSize);\n \n         if (Objects.isNull(searchResult) || Objects.isNull(searchResult.getHits())) {\n             return Collections.emptyList();\n         }\n         return searchResult.getHits().stream().map(r -> (Object)r).collect(Collectors.toList());\n     }\n \n+    /**\n+     * Returns the searchTerm with configured Delimiter.\n+     * @param searchTerm the searchterm to add delimiters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69b95b9a211b4eb358a21dd5697964aa6aeb9dc"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3878, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}