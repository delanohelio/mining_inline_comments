{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODk3MzQw", "number": 3345, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDoyMDo0OFrODquhUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzo0OToxNFrODrGIog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTI4OTc5OnYy", "diffSide": "RIGHT", "path": "Kitodo/src/main/java/org/kitodo/export/ExportDms.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDoyMDo0OFrOF6pl6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDoyMDo0OFrOF6pl6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA0MzE3Nw==", "bodyText": "Why do you not create a new exception class as this class has nothing to do with Kitodo.Production export.", "url": "https://github.com/kitodo/kitodo-production/pull/3345#discussion_r397043177", "createdAt": "2020-03-24T10:20:48Z", "author": {"login": "henning-gerhardt"}, "path": "Kitodo/src/main/java/org/kitodo/export/ExportDms.java", "diffHunk": "@@ -15,6 +15,7 @@\n import java.io.IOException;\n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.rmi.server.ExportException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abf299cb05bbd3c170fb1b379f2ec98d81d73885"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTE1MTA2OnYy", "diffSide": "RIGHT", "path": "Kitodo/src/main/java/org/kitodo/exceptions/ExportException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzo0NjozNlrOF7PKzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzo0NjozNlrOF7PKzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1ODgzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param s the detail message\n          \n          \n            \n                 */\n          \n          \n            \n                public ExportException(String s) {\n          \n          \n            \n                    super(s);\n          \n          \n            \n                }\n          \n          \n            \n                 * @param exceptionMessage the detail message\n          \n          \n            \n                 */\n          \n          \n            \n                public ExportException(String exceptionMessage) {\n          \n          \n            \n                    super(exceptionMessage);\n          \n          \n            \n                }", "url": "https://github.com/kitodo/kitodo-production/pull/3345#discussion_r397658831", "createdAt": "2020-03-25T07:46:36Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/exceptions/ExportException.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>\n+ *\n+ * This file is part of the Kitodo project.\n+ *\n+ * It is licensed under GNU General Public License version 3 or later.\n+ *\n+ * For the full copyright and license information, please read the\n+ * GPL3-License.txt file that was distributed with this source code.\n+ */\n+\n+package org.kitodo.exceptions;\n+\n+/**\n+ * An exception thrown to indicate that an attempt to export a process failed.\n+ */\n+public class ExportException extends RuntimeException {\n+\n+    /**\n+     * Constructs an {@code ExportException} with the specified detail message.\n+     *\n+     * @param s the detail message\n+     */\n+    public ExportException(String s) {\n+        super(s);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62a6efea5162498778bbe03f7d7275858b520456"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTE1ODc0OnYy", "diffSide": "RIGHT", "path": "Kitodo/src/main/java/org/kitodo/export/ExportDms.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNzo0OToxNFrOF7PPRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwODo0MDo0NVrOF7QwSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1OTk3NQ==", "bodyText": "if it is unused, remove it", "url": "https://github.com/kitodo/kitodo-production/pull/3345#discussion_r397659975", "createdAt": "2020-03-25T07:49:14Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/export/ExportDms.java", "diffHunk": "@@ -70,23 +64,22 @@ public ExportDms(boolean exportImages) {\n     }\n \n     /**\n-     * DMS-Export an eine gew\u00fcnschte Stelle.\n+     * Export to the DMS.\n      *\n      * @param process\n-     *            object\n-     * @param destination\n-     *            String\n+     *            process to export\n+     * @param unused\n+     *            user home directory\n      */\n     @Override\n-    public boolean startExport(Process process, URI destination) {\n-        if (process.getProject().isUseDmsImport()\n-                && ConfigCore.getBooleanParameterOrDefaultValue(ParameterCore.ASYNCHRONOUS_AUTOMATIC_EXPORT)) {\n-            TaskManager.addTask(new ExportDmsTask(this, process, destination));\n+    public boolean startExport(Process process, URI unused) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62a6efea5162498778bbe03f7d7275858b520456"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY4NDgxMQ==", "bodyText": "This method overrides a method in a superclass which uses it. Therefore I cannot remove it.", "url": "https://github.com/kitodo/kitodo-production/pull/3345#discussion_r397684811", "createdAt": "2020-03-25T08:40:45Z", "author": {"login": "matthias-ronge"}, "path": "Kitodo/src/main/java/org/kitodo/export/ExportDms.java", "diffHunk": "@@ -70,23 +64,22 @@ public ExportDms(boolean exportImages) {\n     }\n \n     /**\n-     * DMS-Export an eine gew\u00fcnschte Stelle.\n+     * Export to the DMS.\n      *\n      * @param process\n-     *            object\n-     * @param destination\n-     *            String\n+     *            process to export\n+     * @param unused\n+     *            user home directory\n      */\n     @Override\n-    public boolean startExport(Process process, URI destination) {\n-        if (process.getProject().isUseDmsImport()\n-                && ConfigCore.getBooleanParameterOrDefaultValue(ParameterCore.ASYNCHRONOUS_AUTOMATIC_EXPORT)) {\n-            TaskManager.addTask(new ExportDmsTask(this, process, destination));\n+    public boolean startExport(Process process, URI unused) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1OTk3NQ=="}, "originalCommit": {"oid": "62a6efea5162498778bbe03f7d7275858b520456"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4028, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}