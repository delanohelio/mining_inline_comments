{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMjk3Mzg5", "number": 3793, "title": "remove property type and save properties on process type", "bodyText": "Writes properties in ProcessType instead of indexing them separately which highly enhances the indexing-all speed.\nThis PR disables extendedSearch by Property, which will be fixed in a follow-up PR.", "createdAt": "2020-06-29T08:56:48Z", "url": "https://github.com/kitodo/kitodo-production/pull/3793", "merged": true, "mergeCommit": {"oid": "95bd961f550304027daf760db9334cbcdcc5b36d"}, "closed": true, "closedAt": "2020-07-23T09:43:32Z", "author": {"login": "Kathrin-Huber"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcv9RbVABqjM0OTE5OTk5MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3Xj9wgBqjM1NzQ5NDQxODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e828de62f3399f376cf5d39d0d02dd6ec9c47c9c", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/e828de62f3399f376cf5d39d0d02dd6ec9c47c9c", "committedDate": "2020-06-29T08:53:28Z", "message": "remove property type and save properties on process type"}, "afterCommit": {"oid": "9e552e07ee697e8b70bfc53e421a05a366ef205f", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/9e552e07ee697e8b70bfc53e421a05a366ef205f", "committedDate": "2020-06-29T09:03:23Z", "message": "remove property type and save properties on process type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e552e07ee697e8b70bfc53e421a05a366ef205f", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/9e552e07ee697e8b70bfc53e421a05a366ef205f", "committedDate": "2020-06-29T09:03:23Z", "message": "remove property type and save properties on process type"}, "afterCommit": {"oid": "5a2805541a3d0cdafbb32807302409abcbca1224", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/5a2805541a3d0cdafbb32807302409abcbca1224", "committedDate": "2020-06-29T09:04:22Z", "message": "remove property type and save properties on process type"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d65c852dab27eda23d489580c150b2c37ffc44a", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/2d65c852dab27eda23d489580c150b2c37ffc44a", "committedDate": "2020-07-01T10:55:08Z", "message": "fix sql query"}, "afterCommit": {"oid": "a0ab8468bf4708c48b4e4f005acb5f78d118aa09", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/a0ab8468bf4708c48b4e4f005acb5f78d118aa09", "committedDate": "2020-07-01T11:16:56Z", "message": "fix sql query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0ab8468bf4708c48b4e4f005acb5f78d118aa09", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/a0ab8468bf4708c48b4e4f005acb5f78d118aa09", "committedDate": "2020-07-01T11:16:56Z", "message": "fix sql query"}, "afterCommit": {"oid": "0d492a2157372d1828b4f218595429857fb20713", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/0d492a2157372d1828b4f218595429857fb20713", "committedDate": "2020-07-01T11:26:41Z", "message": "fix sql query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d492a2157372d1828b4f218595429857fb20713", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/0d492a2157372d1828b4f218595429857fb20713", "committedDate": "2020-07-01T11:26:41Z", "message": "fix sql query"}, "afterCommit": {"oid": "0e8543cb7f7bf421bc6f910413920e371c5afaed", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/0e8543cb7f7bf421bc6f910413920e371c5afaed", "committedDate": "2020-07-01T11:57:34Z", "message": "fix sql query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e8543cb7f7bf421bc6f910413920e371c5afaed", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/0e8543cb7f7bf421bc6f910413920e371c5afaed", "committedDate": "2020-07-01T11:57:34Z", "message": "fix sql query"}, "afterCommit": {"oid": "9b869f992d22c3dcdfc09cb79e41e07cc836412a", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/9b869f992d22c3dcdfc09cb79e41e07cc836412a", "committedDate": "2020-07-01T12:38:06Z", "message": "fix sql query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b869f992d22c3dcdfc09cb79e41e07cc836412a", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/9b869f992d22c3dcdfc09cb79e41e07cc836412a", "committedDate": "2020-07-01T12:38:06Z", "message": "fix sql query"}, "afterCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/abc721898ce8e20e7e5b6f0e19848531a4e3b1c3", "committedDate": "2020-07-01T12:43:48Z", "message": "fix sql query"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTMzNzAz", "url": "https://github.com/kitodo/kitodo-production/pull/3793#pullrequestreview-441533703", "createdAt": "2020-07-02T10:03:04Z", "commit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDo0MzoxMVrOGsQCkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDo0OTo1NlrOGsQUPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1MzMzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    properties = process.getWorkpieces();\n          \n          \n            \n                    for (Property property : properties) {\n          \n          \n            \n                    for (Property property : process.getWorkpieces()) {", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449053330", "createdAt": "2020-07-02T14:43:11Z", "author": {"login": "solth"}, "path": "Kitodo-DataManagement/src/main/java/org/kitodo/data/elasticsearch/index/type/ProcessType.java", "diffHunk": "@@ -57,14 +59,35 @@\n         jsonObject.put(ProcessTypeField.HAS_CHILDREN.getKey(), process.getChildren().size() > 0);\n         jsonObject.put(ProcessTypeField.PARENT_ID.getKey(), processParentId);\n         jsonObject.put(ProcessTypeField.TASKS.getKey(), addObjectRelation(process.getTasks(), true));\n-        jsonObject.put(ProcessTypeField.PROPERTIES.getKey(), addObjectRelation(process.getProperties(), true));\n-        jsonObject.put(ProcessTypeField.TEMPLATES.getKey(), addObjectRelation(process.getTemplates()));\n-        jsonObject.put(ProcessTypeField.WORKPIECES.getKey(), addObjectRelation(process.getWorkpieces()));\n         jsonObject.put(ProcessTypeField.METADATA.getKey(), process.getMetadata());\n+        jsonObject.put(ProcessTypeField.PROPERTIES.getKey(), getProperties(process));\n         jsonObject.put(ProcessTypeField.BASE_TYPE.getKey(), process.getBaseType());\n         return jsonObject;\n     }\n \n+    private List<Map<String, String>> getProperties(Process process) {\n+        List<Property> properties = process.getProperties();\n+        List<Map<String, String>> propertiesForIndex = new ArrayList<>();\n+        for (Property property : properties) {\n+            HashMap<String, String> propertyMap = new HashMap<>();\n+            propertyMap.put(property.getTitle(), property.getValue());\n+            propertiesForIndex.add(propertyMap);\n+        }\n+        properties = process.getTemplates();\n+        for (Property property : properties) {\n+            HashMap<String, String> propertyMap = new HashMap<>();\n+            propertyMap.put(property.getTitle(), property.getValue());\n+            propertiesForIndex.add(propertyMap);\n+        }\n+        properties = process.getWorkpieces();\n+        for (Property property : properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1MzY0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    properties = process.getTemplates();\n          \n          \n            \n                    for (Property property : properties) {\n          \n          \n            \n                    for (Property property : process.getTemplates()) {", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449053640", "createdAt": "2020-07-02T14:43:40Z", "author": {"login": "solth"}, "path": "Kitodo-DataManagement/src/main/java/org/kitodo/data/elasticsearch/index/type/ProcessType.java", "diffHunk": "@@ -57,14 +59,35 @@\n         jsonObject.put(ProcessTypeField.HAS_CHILDREN.getKey(), process.getChildren().size() > 0);\n         jsonObject.put(ProcessTypeField.PARENT_ID.getKey(), processParentId);\n         jsonObject.put(ProcessTypeField.TASKS.getKey(), addObjectRelation(process.getTasks(), true));\n-        jsonObject.put(ProcessTypeField.PROPERTIES.getKey(), addObjectRelation(process.getProperties(), true));\n-        jsonObject.put(ProcessTypeField.TEMPLATES.getKey(), addObjectRelation(process.getTemplates()));\n-        jsonObject.put(ProcessTypeField.WORKPIECES.getKey(), addObjectRelation(process.getWorkpieces()));\n         jsonObject.put(ProcessTypeField.METADATA.getKey(), process.getMetadata());\n+        jsonObject.put(ProcessTypeField.PROPERTIES.getKey(), getProperties(process));\n         jsonObject.put(ProcessTypeField.BASE_TYPE.getKey(), process.getBaseType());\n         return jsonObject;\n     }\n \n+    private List<Map<String, String>> getProperties(Process process) {\n+        List<Property> properties = process.getProperties();\n+        List<Map<String, String>> propertiesForIndex = new ArrayList<>();\n+        for (Property property : properties) {\n+            HashMap<String, String> propertyMap = new HashMap<>();\n+            propertyMap.put(property.getTitle(), property.getValue());\n+            propertiesForIndex.add(propertyMap);\n+        }\n+        properties = process.getTemplates();\n+        for (Property property : properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1NDAzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<Property> properties = process.getProperties();\n          \n          \n            \n                    List<Map<String, String>> propertiesForIndex = new ArrayList<>();\n          \n          \n            \n                    for (Property property : properties) {\n          \n          \n            \n                    List<Map<String, String>> propertiesForIndex = new ArrayList<>();\n          \n          \n            \n                    for (Property property : process.getProperties()) {", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449054035", "createdAt": "2020-07-02T14:44:17Z", "author": {"login": "solth"}, "path": "Kitodo-DataManagement/src/main/java/org/kitodo/data/elasticsearch/index/type/ProcessType.java", "diffHunk": "@@ -57,14 +59,35 @@\n         jsonObject.put(ProcessTypeField.HAS_CHILDREN.getKey(), process.getChildren().size() > 0);\n         jsonObject.put(ProcessTypeField.PARENT_ID.getKey(), processParentId);\n         jsonObject.put(ProcessTypeField.TASKS.getKey(), addObjectRelation(process.getTasks(), true));\n-        jsonObject.put(ProcessTypeField.PROPERTIES.getKey(), addObjectRelation(process.getProperties(), true));\n-        jsonObject.put(ProcessTypeField.TEMPLATES.getKey(), addObjectRelation(process.getTemplates()));\n-        jsonObject.put(ProcessTypeField.WORKPIECES.getKey(), addObjectRelation(process.getWorkpieces()));\n         jsonObject.put(ProcessTypeField.METADATA.getKey(), process.getMetadata());\n+        jsonObject.put(ProcessTypeField.PROPERTIES.getKey(), getProperties(process));\n         jsonObject.put(ProcessTypeField.BASE_TYPE.getKey(), process.getBaseType());\n         return jsonObject;\n     }\n \n+    private List<Map<String, String>> getProperties(Process process) {\n+        List<Property> properties = process.getProperties();\n+        List<Map<String, String>> propertiesForIndex = new ArrayList<>();\n+        for (Property property : properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1NzQ3Ng==", "bodyText": "Why do we need to keep this method if it always returns null?\nAlso, I think this will provoke a NullPointerException in FilterService.filterProcessProperty:899, where the result of calling findProcessProperty is passed to FilterService.createSetQuery.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449057476", "createdAt": "2020-07-02T14:49:23Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java", "diffHunk": "@@ -665,9 +602,8 @@ public QueryBuilder getQueryProjectId(Integer projectId) {\n      *            true or false\n      * @return list of process JSONObjects\n      */\n-    public List<Map<String, Object>> findByProcessProperty(String title, String value, boolean contains)\n-            throws DataException {\n-        return findByProperty(title, value, \"process\", \"properties.id\", contains);\n+    public List<Map<String, Object>> findByProcessProperty(String title, String value, boolean contains) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1NzU4Mw==", "bodyText": "See above.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449057583", "createdAt": "2020-07-02T14:49:33Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java", "diffHunk": "@@ -681,9 +617,8 @@ public QueryBuilder getQueryProjectId(Integer projectId) {\n      *            true or false\n      * @return list of process JSONObjects\n      */\n-    public List<Map<String, Object>> findByTemplateProperty(String title, String value, boolean contains)\n-            throws DataException {\n-        return findByProperty(title, value, \"template\", \"templates.id\", contains);\n+    public List<Map<String, Object>> findByTemplateProperty(String title, String value, boolean contains) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1Nzg1Mw==", "bodyText": "See above.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449057853", "createdAt": "2020-07-02T14:49:56Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/ProcessService.java", "diffHunk": "@@ -699,7 +634,7 @@ public QueryBuilder getQueryProjectId(Integer projectId) {\n      */\n     public List<Map<String, Object>> findByWorkpieceProperty(String title, String value, boolean contains)\n             throws DataException {\n-        return findByProperty(title, value, \"workpiece\", \"workpieces.id\", contains);\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODQ1NDU3", "url": "https://github.com/kitodo/kitodo-production/pull/3793#pullrequestreview-441845457", "createdAt": "2020-07-02T16:21:18Z", "commit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMToxOVrOGsUyDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjoyMTozNFrOGsUyuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMTAyMw==", "bodyText": "Please use getByQuery with second parameter with list of to map values. If not this is introducing a possible SQL injection. Would look like this:\npublic List<Property> findByTitle(String title, String type, boolean contains) { \n   Hashmap parameters = new Hashmap<String, String>();\n   parameters.put(\"title\", title);\n   return getByQuery(\"from Property as property where property.title=:title\", parameters);\n}", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449131023", "createdAt": "2020-07-02T16:21:19Z", "author": {"login": "henning-gerhardt"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/PropertyService.java", "diffHunk": "@@ -156,8 +115,8 @@ private QueryBuilder getQueryForType(String type) {\n      *            of the searched property\n      * @return list of JSON objects with properties\n      */\n-    public List<Map<String,Object>> findByTitle(String title, String type, boolean contains) throws DataException {\n-        return findProperty(PropertyTypeField.TITLE.getKey(), title, type, contains);\n+    public List<Property> findByTitle(String title, String type, boolean contains) {\n+        return getByQuery(\"from Property as property where property.title='\" + title + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMTEyMA==", "bodyText": "Please use getByQuery with second parameter with list of to map values. If not this is introducing a possible SQL injection.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449131120", "createdAt": "2020-07-02T16:21:27Z", "author": {"login": "henning-gerhardt"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/PropertyService.java", "diffHunk": "@@ -171,17 +130,8 @@ private QueryBuilder getQueryForType(String type) {\n      *            of the searched property\n      * @return list of JSON objects with properties\n      */\n-    List<Map<String,Object>> findByValue(String value, String type, boolean contains) throws DataException {\n-        return findProperty(PropertyTypeField.VALUE.getKey(), value, type, contains);\n-    }\n-\n-    private List<Map<String,Object>> findProperty(String key, String value, String type, boolean contains) throws DataException {\n-        BoolQueryBuilder query = new BoolQueryBuilder();\n-        query.must(createSimpleQuery(key, value, contains, Operator.AND));\n-        if (Objects.nonNull(type)) {\n-            query.must(createSimpleQuery(PropertyTypeField.TYPE.getKey(), type, true));\n-        }\n-        return findDocuments(query);\n+    List<Property> findByValue(String value, String type, boolean contains) {\n+        return getByQuery(\"from Property as property where property.value='\" + value + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEzMTE5Mw==", "bodyText": "Please use getByQuery with second parameter with list of to map values. If not this is introducing a possible SQL injection.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r449131193", "createdAt": "2020-07-02T16:21:34Z", "author": {"login": "henning-gerhardt"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/PropertyService.java", "diffHunk": "@@ -198,25 +148,8 @@ private QueryBuilder getQueryForType(String type) {\n      *            true or false\n      * @return list of JSON objects with batches of exact type\n      */\n-    List<Map<String, Object>> findByTitleAndValue(String title, String value, String type, boolean contains)\n-            throws DataException {\n-        BoolQueryBuilder query = new BoolQueryBuilder();\n-        query.must(createSimpleQuery(PropertyTypeField.TITLE.getKey(), title, contains, Operator.AND));\n-        query.must(createSimpleQuery(PropertyTypeField.VALUE.getKey(), value, contains, Operator.AND));\n-        if (Objects.nonNull(type)) {\n-            query.must(createSimpleQuery(PropertyTypeField.TYPE.getKey(), type, true));\n-        }\n-        return findDocuments(query);\n-    }\n-\n-    @Override\n-    public PropertyDTO convertJSONObjectToDTO(Map<String, Object> jsonObject, boolean related) throws DataException {\n-        PropertyDTO propertyDTO = new PropertyDTO();\n-        propertyDTO.setId(getIdFromJSONObject(jsonObject));\n-        propertyDTO.setTitle(PropertyTypeField.TITLE.getStringValue(jsonObject));\n-        propertyDTO.setValue(PropertyTypeField.VALUE.getStringValue(jsonObject));\n-        propertyDTO.setCreationDate(PropertyTypeField.CREATION_DATE.getStringValue(jsonObject));\n-        return propertyDTO;\n+    List<Property> findByTitleAndValue(String title, String value, String type, boolean contains) {\n+        return getByQuery(\"from Property as property where property.title='\" + title + \"' and property.value='\" + value + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc721898ce8e20e7e5b6f0e19848531a4e3b1c3"}, "originalPosition": 188}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2338fb0986f702dae885de4ec637fc8c6752d050", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/2338fb0986f702dae885de4ec637fc8c6752d050", "committedDate": "2020-07-06T11:15:18Z", "message": "change import"}, "afterCommit": {"oid": "54942150a7e1742cb8234e18762349d0a24d3e21", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/54942150a7e1742cb8234e18762349d0a24d3e21", "committedDate": "2020-07-06T12:05:07Z", "message": "change import"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54942150a7e1742cb8234e18762349d0a24d3e21", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/54942150a7e1742cb8234e18762349d0a24d3e21", "committedDate": "2020-07-06T12:05:07Z", "message": "change import"}, "afterCommit": {"oid": "f67a5aa42633f1730b04643f5eb7624831cc1b09", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/f67a5aa42633f1730b04643f5eb7624831cc1b09", "committedDate": "2020-07-07T13:45:10Z", "message": "change import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTIyMDU1", "url": "https://github.com/kitodo/kitodo-production/pull/3793#pullrequestreview-443922055", "createdAt": "2020-07-07T14:02:50Z", "commit": {"oid": "f67a5aa42633f1730b04643f5eb7624831cc1b09"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDowMjo1MFrOGuADug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDowNDowM1rOGuAHPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg4ODYzNA==", "bodyText": "Parameter type is never used.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r450888634", "createdAt": "2020-07-07T14:02:50Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/PropertyService.java", "diffHunk": "@@ -133,16 +92,17 @@ public Long countResults(Map filters) throws DataException {\n      *\n      * @return a list of titles.\n      */\n-    public List<String> findProcessPropertiesTitlesDistinct() throws DataException, DAOException {\n+    public List<String> findProcessPropertiesTitlesDistinct() {\n         return findDistinctTitles(\"process\");\n     }\n \n-    private List<String> findDistinctTitles(String type) throws DataException, DAOException {\n-        return findDistinctValues(getQueryForType(type), \"title.keyword\", true, countDatabaseRows());\n-    }\n-\n-    private QueryBuilder getQueryForType(String type) {\n-        return createSimpleQuery(PropertyTypeField.TYPE.getKey(), type, true, Operator.AND);\n+    private List<String> findDistinctTitles(String type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67a5aa42633f1730b04643f5eb7624831cc1b09"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg4OTA5NQ==", "bodyText": "Parameters type and contains are never used.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r450889095", "createdAt": "2020-07-07T14:03:27Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/PropertyService.java", "diffHunk": "@@ -156,8 +116,10 @@ private QueryBuilder getQueryForType(String type) {\n      *            of the searched property\n      * @return list of JSON objects with properties\n      */\n-    public List<Map<String,Object>> findByTitle(String title, String type, boolean contains) throws DataException {\n-        return findProperty(PropertyTypeField.TITLE.getKey(), title, type, contains);\n+    public List<Property> findByTitle(String title, String type, boolean contains) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67a5aa42633f1730b04643f5eb7624831cc1b09"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg4OTMzNw==", "bodyText": "See above.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r450889337", "createdAt": "2020-07-07T14:03:48Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/PropertyService.java", "diffHunk": "@@ -171,17 +133,10 @@ private QueryBuilder getQueryForType(String type) {\n      *            of the searched property\n      * @return list of JSON objects with properties\n      */\n-    List<Map<String,Object>> findByValue(String value, String type, boolean contains) throws DataException {\n-        return findProperty(PropertyTypeField.VALUE.getKey(), value, type, contains);\n-    }\n-\n-    private List<Map<String,Object>> findProperty(String key, String value, String type, boolean contains) throws DataException {\n-        BoolQueryBuilder query = new BoolQueryBuilder();\n-        query.must(createSimpleQuery(key, value, contains, Operator.AND));\n-        if (Objects.nonNull(type)) {\n-            query.must(createSimpleQuery(PropertyTypeField.TYPE.getKey(), type, true));\n-        }\n-        return findDocuments(query);\n+    List<Property> findByValue(String value, String type, boolean contains) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67a5aa42633f1730b04643f5eb7624831cc1b09"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg4OTUzMw==", "bodyText": "See above.", "url": "https://github.com/kitodo/kitodo-production/pull/3793#discussion_r450889533", "createdAt": "2020-07-07T14:04:03Z", "author": {"login": "solth"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/data/PropertyService.java", "diffHunk": "@@ -198,25 +153,11 @@ private QueryBuilder getQueryForType(String type) {\n      *            true or false\n      * @return list of JSON objects with batches of exact type\n      */\n-    List<Map<String, Object>> findByTitleAndValue(String title, String value, String type, boolean contains)\n-            throws DataException {\n-        BoolQueryBuilder query = new BoolQueryBuilder();\n-        query.must(createSimpleQuery(PropertyTypeField.TITLE.getKey(), title, contains, Operator.AND));\n-        query.must(createSimpleQuery(PropertyTypeField.VALUE.getKey(), value, contains, Operator.AND));\n-        if (Objects.nonNull(type)) {\n-            query.must(createSimpleQuery(PropertyTypeField.TYPE.getKey(), type, true));\n-        }\n-        return findDocuments(query);\n-    }\n-\n-    @Override\n-    public PropertyDTO convertJSONObjectToDTO(Map<String, Object> jsonObject, boolean related) throws DataException {\n-        PropertyDTO propertyDTO = new PropertyDTO();\n-        propertyDTO.setId(getIdFromJSONObject(jsonObject));\n-        propertyDTO.setTitle(PropertyTypeField.TITLE.getStringValue(jsonObject));\n-        propertyDTO.setValue(PropertyTypeField.VALUE.getStringValue(jsonObject));\n-        propertyDTO.setCreationDate(PropertyTypeField.CREATION_DATE.getStringValue(jsonObject));\n-        return propertyDTO;\n+    List<Property> findByTitleAndValue(String title, String value, String type, boolean contains) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67a5aa42633f1730b04643f5eb7624831cc1b09"}, "originalPosition": 192}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NDcwMTE5", "url": "https://github.com/kitodo/kitodo-production/pull/3793#pullrequestreview-444470119", "createdAt": "2020-07-08T07:14:26Z", "commit": {"oid": "f67a5aa42633f1730b04643f5eb7624831cc1b09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df67d46fa765c1b45a2d5c87463eac67de105a53", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/df67d46fa765c1b45a2d5c87463eac67de105a53", "committedDate": "2020-07-09T09:47:11Z", "message": "ignore Working ST"}, "afterCommit": {"oid": "997b237fe3ee2bfafd4145a9d4811929e45d4158", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/997b237fe3ee2bfafd4145a9d4811929e45d4158", "committedDate": "2020-07-10T12:17:32Z", "message": "fix import"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "997b237fe3ee2bfafd4145a9d4811929e45d4158", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/997b237fe3ee2bfafd4145a9d4811929e45d4158", "committedDate": "2020-07-10T12:17:32Z", "message": "fix import"}, "afterCommit": {"oid": "075317eb6decd9d0ed6b234d46a46f3dd10080b9", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/075317eb6decd9d0ed6b234d46a46f3dd10080b9", "committedDate": "2020-07-14T12:36:09Z", "message": "fix import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b7ce0e668aae62accad9b76ace568732dc4c262", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/5b7ce0e668aae62accad9b76ace568732dc4c262", "committedDate": "2020-07-22T09:38:48Z", "message": "remove property type and save properties on process type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b66854395c492051147daa60ba2a58a79764087", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/5b66854395c492051147daa60ba2a58a79764087", "committedDate": "2020-07-22T09:38:48Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d25bfadefeab623353a40062df561cfc7b100557", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/d25bfadefeab623353a40062df561cfc7b100557", "committedDate": "2020-07-22T09:38:48Z", "message": "fix entendation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5562aaa987c64a59f13cbe7278002ef1ec7e4b7d", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/5562aaa987c64a59f13cbe7278002ef1ec7e4b7d", "committedDate": "2020-07-22T09:38:48Z", "message": "change mapping to strict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2de70af4b530e9d813e84b35a0c49c8992ef9679", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/2de70af4b530e9d813e84b35a0c49c8992ef9679", "committedDate": "2020-07-22T09:38:48Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a3de04b8ae161290be54aa05fdb552bfd4de52d", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/5a3de04b8ae161290be54aa05fdb552bfd4de52d", "committedDate": "2020-07-22T09:38:48Z", "message": "fix sql query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0885e052a19d0075e021e2ce1d395ef9bb8da9df", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/0885e052a19d0075e021e2ce1d395ef9bb8da9df", "committedDate": "2020-07-22T09:38:49Z", "message": "remove search by property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19d55729d4be5828b9bda89399d97201fc72fe7d", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/19d55729d4be5828b9bda89399d97201fc72fe7d", "committedDate": "2020-07-22T09:38:49Z", "message": "change import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5edb810148560c1f17586697587ca6e07c5081b7", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/5edb810148560c1f17586697587ca6e07c5081b7", "committedDate": "2020-07-22T09:38:49Z", "message": "ignore Working ST"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d402ec2e876f7d99bfa469877e9e2352d5bc7f0", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/7d402ec2e876f7d99bfa469877e9e2352d5bc7f0", "committedDate": "2020-07-22T09:38:49Z", "message": "fix import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08abfb7aa3df63bdd183adbf0dd2af3aa96c0f28", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/08abfb7aa3df63bdd183adbf0dd2af3aa96c0f28", "committedDate": "2020-07-22T09:38:49Z", "message": "fix sorting on desktop"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "075317eb6decd9d0ed6b234d46a46f3dd10080b9", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/075317eb6decd9d0ed6b234d46a46f3dd10080b9", "committedDate": "2020-07-14T12:36:09Z", "message": "fix import"}, "afterCommit": {"oid": "08abfb7aa3df63bdd183adbf0dd2af3aa96c0f28", "author": {"user": {"login": "Kathrin-Huber", "name": "Kathrin Huber"}}, "url": "https://github.com/kitodo/kitodo-production/commit/08abfb7aa3df63bdd183adbf0dd2af3aa96c0f28", "committedDate": "2020-07-22T09:38:49Z", "message": "fix sorting on desktop"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2615, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}