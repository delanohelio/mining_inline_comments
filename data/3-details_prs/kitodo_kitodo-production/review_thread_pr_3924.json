{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MTg1NDc5", "number": 3924, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzo0MjoxNlrOEY7teg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzo0MzowMFrOEY7uRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTc5NTc4OnYy", "diffSide": "RIGHT", "path": "Kitodo-API/src/main/java/org/kitodo/api/dataformat/View.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzo0MjoxNlrOHBdxuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjo0MDoyNlrOHBnC6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5ODQ5MQ==", "bodyText": "Please give a more descriptive name", "url": "https://github.com/kitodo/kitodo-production/pull/3924#discussion_r471298491", "createdAt": "2020-08-17T07:42:16Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo-API/src/main/java/org/kitodo/api/dataformat/View.java", "diffHunk": "@@ -20,6 +20,20 @@\n  * {@code MediaUnit} as a whole.\n  */\n public class View {\n+\n+    /**\n+     * Creates a new view with a media unit.\n+     * \n+     * @param mediaUnit\n+     *            media unit to set in the view\n+     * @return a new view with a media unit\n+     */\n+    public static View of(MediaUnit mediaUnit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0101a9dc268bd04bc1cfb0e8205db4c6196f77d4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ1MDM0Ng==", "bodyText": "This is a common pattern, as you find it in Optional<T> Optional.of(T value), Pair<L, R> Pair.of(L left, R right), Stream<T> Stream.of(T t) or LocalDate.of(int year, int month, int dayOfMonth). If you don\u2019t like it, please suggest a better one.", "url": "https://github.com/kitodo/kitodo-production/pull/3924#discussion_r471450346", "createdAt": "2020-08-17T12:40:26Z", "author": {"login": "matthias-ronge"}, "path": "Kitodo-API/src/main/java/org/kitodo/api/dataformat/View.java", "diffHunk": "@@ -20,6 +20,20 @@\n  * {@code MediaUnit} as a whole.\n  */\n public class View {\n+\n+    /**\n+     * Creates a new view with a media unit.\n+     * \n+     * @param mediaUnit\n+     *            media unit to set in the view\n+     * @return a new view with a media unit\n+     */\n+    public static View of(MediaUnit mediaUnit) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5ODQ5MQ=="}, "originalCommit": {"oid": "0101a9dc268bd04bc1cfb0e8205db4c6196f77d4"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTc5NzgzOnYy", "diffSide": "RIGHT", "path": "Kitodo/src/main/java/org/kitodo/production/services/file/FileService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNzo0MzowMFrOHBdy9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjo0MjoyMFrOHBnHBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5ODgwNw==", "bodyText": "why \"automatically\" ? Please remove this prefix", "url": "https://github.com/kitodo/kitodo-production/pull/3924#discussion_r471298807", "createdAt": "2020-08-17T07:43:00Z", "author": {"login": "Kathrin-Huber"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/file/FileService.java", "diffHunk": "@@ -1017,18 +1018,34 @@ public void searchForMedia(Process process, Workpiece workpiece) throws InvalidI\n         }\n         List<String> canonicals = getCanonicalFileNamePartsAndSanitizeAbsoluteURIs(workpiece, subfolders,\n             process.getProcessBaseUri());\n-        addNewURIsToExistingMediaUnits(mediaToAdd, workpiece.getAllMediaUnitsSorted(), canonicals);\n+        addNewURIsToExistingMediaUnits(mediaToAdd, workpiece.getAllMediaUnitsFilteredByTypePageAndSorted(), canonicals);\n         mediaToAdd.keySet().removeAll(canonicals);\n         addNewMediaToWorkpiece(canonicals, mediaToAdd, workpiece);\n         renumberMediaUnits(workpiece, true);\n         if (ConfigCore.getBooleanParameter(ParameterCore.WITH_AUTOMATIC_PAGINATION)) {\n             repaginateMediaUnits(workpiece);\n         }\n+        if (Workpiece.treeStream(workpiece.getRootElement())\n+                .allMatch(includedStructuralElement -> includedStructuralElement.getViews().isEmpty())) {\n+            automaticallyAssignMediaUnitsToEffectiveRootRecursive(workpiece, workpiece.getRootElement());\n+        }\n         if (logger.isTraceEnabled()) {\n             logger.trace(\"Searching for media took {} ms\", TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - begin));\n         }\n     }\n \n+    private void automaticallyAssignMediaUnitsToEffectiveRootRecursive(Workpiece workpiece,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0101a9dc268bd04bc1cfb0e8205db4c6196f77d4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ1MTM5OQ==", "bodyText": "Automatically, because you no longer have to manually assign it to the included structural element using drag and drop.", "url": "https://github.com/kitodo/kitodo-production/pull/3924#discussion_r471451399", "createdAt": "2020-08-17T12:42:20Z", "author": {"login": "matthias-ronge"}, "path": "Kitodo/src/main/java/org/kitodo/production/services/file/FileService.java", "diffHunk": "@@ -1017,18 +1018,34 @@ public void searchForMedia(Process process, Workpiece workpiece) throws InvalidI\n         }\n         List<String> canonicals = getCanonicalFileNamePartsAndSanitizeAbsoluteURIs(workpiece, subfolders,\n             process.getProcessBaseUri());\n-        addNewURIsToExistingMediaUnits(mediaToAdd, workpiece.getAllMediaUnitsSorted(), canonicals);\n+        addNewURIsToExistingMediaUnits(mediaToAdd, workpiece.getAllMediaUnitsFilteredByTypePageAndSorted(), canonicals);\n         mediaToAdd.keySet().removeAll(canonicals);\n         addNewMediaToWorkpiece(canonicals, mediaToAdd, workpiece);\n         renumberMediaUnits(workpiece, true);\n         if (ConfigCore.getBooleanParameter(ParameterCore.WITH_AUTOMATIC_PAGINATION)) {\n             repaginateMediaUnits(workpiece);\n         }\n+        if (Workpiece.treeStream(workpiece.getRootElement())\n+                .allMatch(includedStructuralElement -> includedStructuralElement.getViews().isEmpty())) {\n+            automaticallyAssignMediaUnitsToEffectiveRootRecursive(workpiece, workpiece.getRootElement());\n+        }\n         if (logger.isTraceEnabled()) {\n             logger.trace(\"Searching for media took {} ms\", TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - begin));\n         }\n     }\n \n+    private void automaticallyAssignMediaUnitsToEffectiveRootRecursive(Workpiece workpiece,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5ODgwNw=="}, "originalCommit": {"oid": "0101a9dc268bd04bc1cfb0e8205db4c6196f77d4"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3905, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}