{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1OTM2MzIx", "number": 3921, "title": "Refactor Workpiece.getAll\u2026() methods", "bodyText": "This looked odd, and refactoring it makes the code (and possible bugs) easier to spot.", "createdAt": "2020-08-11T07:57:40Z", "url": "https://github.com/kitodo/kitodo-production/pull/3921", "merged": true, "mergeCommit": {"oid": "c53cc72750bed5445f79030dffe0f10fa3106d53"}, "closed": true, "closedAt": "2020-08-18T08:37:46Z", "author": {"login": "matthias-ronge"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9zQbhABqjM2NDIyMzQ0MDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_ywlhAH2gAyNDY1OTM2MzIxOjhhYjQzMjc1NzI5OTg2OTZmMGVmZjQxZDliNDk3NWM1NmQ2MDFmYzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b45c69c3a152ef10e9b5f03381796cac7281ae33", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/b45c69c3a152ef10e9b5f03381796cac7281ae33", "committedDate": "2020-08-11T08:02:57Z", "message": "Not collect the stream for just counting it"}, "afterCommit": {"oid": "7bb3ea0e1515289c2bb9c1064b111ccc4020ef5f", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/7bb3ea0e1515289c2bb9c1064b111ccc4020ef5f", "committedDate": "2020-08-11T09:17:51Z", "message": "Not collect the stream for just counting it"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bb3ea0e1515289c2bb9c1064b111ccc4020ef5f", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/7bb3ea0e1515289c2bb9c1064b111ccc4020ef5f", "committedDate": "2020-08-11T09:17:51Z", "message": "Not collect the stream for just counting it"}, "afterCommit": {"oid": "7d8b075cdcc9544e299acd769b22e90f9c2068bf", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/7d8b075cdcc9544e299acd769b22e90f9c2068bf", "committedDate": "2020-08-11T09:20:47Z", "message": "Not collect the stream for just counting it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjkyMTg4", "url": "https://github.com/kitodo/kitodo-production/pull/3921#pullrequestreview-468292188", "createdAt": "2020-08-17T09:06:21Z", "commit": {"oid": "7d8b075cdcc9544e299acd769b22e90f9c2068bf"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwOTowNjoyMVrOHBgg9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwOTowNzoyNlrOHBgjPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0MzM0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .collect(Collectors.toList());\n          \n          \n            \n                    mediaUnits.sort(Comparator.comparing(MediaUnit::getOrder));\n          \n          \n            \n                            .sorted(Comparator.comparing(MediaUnit::getOrder)).collect(Collectors.toList());", "url": "https://github.com/kitodo/kitodo-production/pull/3921#discussion_r471343349", "createdAt": "2020-08-17T09:06:21Z", "author": {"login": "solth"}, "path": "Kitodo-API/src/main/java/org/kitodo/api/dataformat/Workpiece.java", "diffHunk": "@@ -180,42 +178,41 @@ public boolean equals(Object o) {\n     }\n \n     /**\n-     * Recursively search for all logical elements.\n+     * Returns all included structural elements of the root element of the\n+     * workpiece as a flat list. The list isn\u2019t backed by the included\n+     * structural elements, which means that insertions and deletions in the\n+     * list would not change the included structural elements. Therefore a list\n+     * that cannot be modified is returned.\n      *\n-     * @return list of all logical elements\n+     * @return all included structural elements as an unmodifiable list\n      */\n     public List<IncludedStructuralElement> getAllIncludedStructuralElements() {\n-        List<IncludedStructuralElement> includedStructuralElements = new LinkedList<>();\n-        includedStructuralElements.add(rootElement);\n-        includedStructuralElements.addAll(getAllIncludedStructuralElementsRecursive(rootElement));\n-        return includedStructuralElements;\n-    }\n-\n-    private List<IncludedStructuralElement> getAllIncludedStructuralElementsRecursive(IncludedStructuralElement parent) {\n-        List<IncludedStructuralElement> includedStructuralElements = new LinkedList<>(parent.getChildren());\n-        for (IncludedStructuralElement child : parent.getChildren()) {\n-            if (Objects.nonNull(child)) {\n-                includedStructuralElements.addAll(getAllIncludedStructuralElementsRecursive(child));\n-            }\n-        }\n-        return includedStructuralElements;\n+        return Collections.unmodifiableList(treeStream(rootElement).collect(Collectors.toList()));\n     }\n \n     /**\n-     * Recursively search for all media units with type \"page\".\n+     * Returns all media units of the media unit of the workpiece with type\n+     * \"page\" sorted by their {@code order} as a flat list. The list isn\u2019t\n+     * backed by the media units, which means that insertions and deletions in\n+     * the list would not change the media units. Therefore a list that cannot\n+     * be modified is returned.\n      *\n-     * @return list of all media units with type \"page\", sorted by their \"ORDER\" attribute.\n+     * @return all media units with type \"page\", sorted by their {@code order}\n      */\n-    public List<MediaUnit> getAllMediaUnitsSorted() {\n-        List<MediaUnit> mediaUnits = getAllMediaUnits();\n+    public List<MediaUnit> getAllMediaUnitsFilteredByTypePageAndSorted() {\n+        List<MediaUnit> mediaUnits = treeStream(mediaUnit).filter(m -> Objects.equals(m.getType(), MediaUnit.TYPE_PAGE))\n+                .collect(Collectors.toList());\n         mediaUnits.sort(Comparator.comparing(MediaUnit::getOrder));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d8b075cdcc9544e299acd769b22e90f9c2068bf"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0MzkzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Stream.concat(Stream.of((T) tree), tree.getChildren().stream().flatMap(child -> treeStream(child)));\n          \n          \n            \n                    return Stream.concat(Stream.of((T) tree), tree.getChildren().stream().flatMap(Workpiece::treeStream));", "url": "https://github.com/kitodo/kitodo-production/pull/3921#discussion_r471343934", "createdAt": "2020-08-17T09:07:26Z", "author": {"login": "solth"}, "path": "Kitodo-API/src/main/java/org/kitodo/api/dataformat/Workpiece.java", "diffHunk": "@@ -239,4 +236,16 @@ public boolean equals(Object o) {\n         }\n         return allMediaUnits;\n     }\n+\n+    /**\n+     * Generates a stream of nodes from structure tree.\n+     *\n+     * @param tree\n+     *            starting node\n+     * @return all nodes as stream\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T extends Parent<T>> Stream<T> treeStream(Parent<T> tree) {\n+        return Stream.concat(Stream.of((T) tree), tree.getChildren().stream().flatMap(child -> treeStream(child)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d8b075cdcc9544e299acd769b22e90f9c2068bf"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d018379c6641fa507754f295472131980449598a", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/d018379c6641fa507754f295472131980449598a", "committedDate": "2020-08-17T12:30:13Z", "message": "Deduplicate method treeStream() into class Workpiece"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02592a34a6089edf16040aff99f600cfa6413d9d", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/02592a34a6089edf16040aff99f600cfa6413d9d", "committedDate": "2020-08-17T12:31:52Z", "message": "Extract media unit type strings into constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "423a1cefdf34751e706aafcc47501e1726e76284", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/423a1cefdf34751e706aafcc47501e1726e76284", "committedDate": "2020-08-17T12:31:52Z", "message": "Rename method to better make explicit what it does"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d76fb8e24c3f152b8d997607d72dd7d59454f9d9", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/d76fb8e24c3f152b8d997607d72dd7d59454f9d9", "committedDate": "2020-08-17T12:11:59Z", "message": "Update Kitodo-API/src/main/java/org/kitodo/api/dataformat/Workpiece.java\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>"}, "afterCommit": {"oid": "78458e5148f622f7902fd317857eed0d37b73755", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/78458e5148f622f7902fd317857eed0d37b73755", "committedDate": "2020-08-17T12:33:24Z", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78458e5148f622f7902fd317857eed0d37b73755", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/78458e5148f622f7902fd317857eed0d37b73755", "committedDate": "2020-08-17T12:33:24Z", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>"}, "afterCommit": {"oid": "3912b7ca6ad9cbc6eb03c8cc4c9d928418702c11", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/3912b7ca6ad9cbc6eb03c8cc4c9d928418702c11", "committedDate": "2020-08-17T12:51:18Z", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDM0MTU4", "url": "https://github.com/kitodo/kitodo-production/pull/3921#pullrequestreview-468434158", "createdAt": "2020-08-17T12:53:03Z", "commit": {"oid": "3912b7ca6ad9cbc6eb03c8cc4c9d928418702c11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72ac8ab563e2b64a28dcada9dc5731f17194ff62", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/72ac8ab563e2b64a28dcada9dc5731f17194ff62", "committedDate": "2020-08-17T13:34:58Z", "message": "Rewrite suspicious recursive list building methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bd1da63cb65d4cd698aaaa20ceb57b76577b1a0", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/1bd1da63cb65d4cd698aaaa20ceb57b76577b1a0", "committedDate": "2020-08-17T13:35:00Z", "message": "Use getters for flat lists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ad2ac0b867b87adba251373a43dff1c262648ce", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/0ad2ac0b867b87adba251373a43dff1c262648ce", "committedDate": "2020-08-17T13:35:03Z", "message": "Not collect the stream for just counting it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172901083170b8ed56000386f1043a742df524a0", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/172901083170b8ed56000386f1043a742df524a0", "committedDate": "2020-08-17T13:35:05Z", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3912b7ca6ad9cbc6eb03c8cc4c9d928418702c11", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/3912b7ca6ad9cbc6eb03c8cc4c9d928418702c11", "committedDate": "2020-08-17T12:51:18Z", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>"}, "afterCommit": {"oid": "172901083170b8ed56000386f1043a742df524a0", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/172901083170b8ed56000386f1043a742df524a0", "committedDate": "2020-08-17T13:35:05Z", "message": "Commit suggested changes\n\nCo-authored-by: Arved Solth <solth@effective-webwork.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ab4327572998696f0eff41d9b4975c56d601fc1", "author": {"user": null}, "url": "https://github.com/kitodo/kitodo-production/commit/8ab4327572998696f0eff41d9b4975c56d601fc1", "committedDate": "2020-08-17T13:51:38Z", "message": "Rename stub variable 'm' to 'mediaUnitToCheck'"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2835, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}