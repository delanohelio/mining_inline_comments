{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNTE1MjYw", "number": 1466, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzoyMzo0MFrODwfvXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzoyMzo0MFrODwfvXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTc4MjcwOnYy", "diffSide": "RIGHT", "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzoyMzo0MFrOGDiMfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzoyNzowMlrOGDiUfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE2NA==", "bodyText": "Actually SSLException is an IOException, so we don't have to do this if-else statement.", "url": "https://github.com/linkedin/ambry/pull/1466#discussion_r406359164", "createdAt": "2020-04-09T17:23:40Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -1026,8 +1030,14 @@ public static void shutDownExecutorService(ExecutorService executorService, long\n    * @return {@code true} this cause indicates a possible early termination from the client. {@code false} otherwise.\n    */\n   public static boolean isPossibleClientTermination(Throwable cause) {\n-    return cause instanceof IOException && (CLIENT_RESET_EXCEPTION_MSG.equals(cause.getMessage())\n-        || CLIENT_BROKEN_PIPE_EXCEPTION_MSG.equals(cause.getMessage()));\n+    if (cause instanceof SSLException) {\n+      return SSL_ENGINE_CLOSED_EXCEPTION_MSG.equals(cause.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1610ceb3597fd398cd6fdbd6db38cd1a212c80"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2MTIxMw==", "bodyText": "That is true, it is an IOException. I will simplify this code block by just checking the message. The one thing we lose out on by doing that is if there is a rogue IOException that is not an SSLException with the same message, but that is not likely (and we may want to catch it anyways).", "url": "https://github.com/linkedin/ambry/pull/1466#discussion_r406361213", "createdAt": "2020-04-09T17:27:02Z", "author": {"login": "cgtz"}, "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -1026,8 +1030,14 @@ public static void shutDownExecutorService(ExecutorService executorService, long\n    * @return {@code true} this cause indicates a possible early termination from the client. {@code false} otherwise.\n    */\n   public static boolean isPossibleClientTermination(Throwable cause) {\n-    return cause instanceof IOException && (CLIENT_RESET_EXCEPTION_MSG.equals(cause.getMessage())\n-        || CLIENT_BROKEN_PIPE_EXCEPTION_MSG.equals(cause.getMessage()));\n+    if (cause instanceof SSLException) {\n+      return SSL_ENGINE_CLOSED_EXCEPTION_MSG.equals(cause.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE2NA=="}, "originalCommit": {"oid": "4e1610ceb3597fd398cd6fdbd6db38cd1a212c80"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1481, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}