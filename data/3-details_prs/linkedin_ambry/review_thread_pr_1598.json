{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMDIyMzA0", "number": 1598, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo0Nzo1MlrOEVmm5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo0Nzo1MlrOEVmm5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDg4MTAyOnYy", "diffSide": "RIGHT", "path": "ambry-router/src/main/java/com/github/ambry/router/DeleteOperation.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo0Nzo1MlrOG8dLNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDozNTowMVrOG8fK4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0NTc0OQ==", "bodyText": "deleteRequest should be able to get blob id, this may be worthwhile to log.\nSame for replica id.", "url": "https://github.com/linkedin/ambry/pull/1598#discussion_r466045749", "createdAt": "2020-08-05T22:47:52Z", "author": {"login": "jsjtzyy"}, "path": "ambry-router/src/main/java/com/github/ambry/router/DeleteOperation.java", "diffHunk": "@@ -176,7 +176,9 @@ void handleResponse(ResponseInfo responseInfo, DeleteResponse deleteResponse) {\n     if (responseInfo.getError() != null) {\n       logger.trace(\"DeleteRequest with response correlationId {} timed out for replica {} \",\n           deleteRequest.getCorrelationId(), replica.getDataNodeId());\n-      onErrorResponse(replica, new RouterException(\"Operation timed out\", RouterErrorCode.OperationTimedOut));\n+      onErrorResponse(replica, new RouterException(\n+          \"Operation timed out because of \" + responseInfo.getError() + \" at DataNode \" + responseInfo.getDataNode(),\n+          RouterErrorCode.OperationTimedOut));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0edfb14d1dc82c5992684a5b256193e7948fe2a5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MTE0Nw==", "bodyText": "you mean log out the blob id and replica id?", "url": "https://github.com/linkedin/ambry/pull/1598#discussion_r466071147", "createdAt": "2020-08-06T00:08:56Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-router/src/main/java/com/github/ambry/router/DeleteOperation.java", "diffHunk": "@@ -176,7 +176,9 @@ void handleResponse(ResponseInfo responseInfo, DeleteResponse deleteResponse) {\n     if (responseInfo.getError() != null) {\n       logger.trace(\"DeleteRequest with response correlationId {} timed out for replica {} \",\n           deleteRequest.getCorrelationId(), replica.getDataNodeId());\n-      onErrorResponse(replica, new RouterException(\"Operation timed out\", RouterErrorCode.OperationTimedOut));\n+      onErrorResponse(replica, new RouterException(\n+          \"Operation timed out because of \" + responseInfo.getError() + \" at DataNode \" + responseInfo.getDataNode(),\n+          RouterErrorCode.OperationTimedOut));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0NTc0OQ=="}, "originalCommit": {"oid": "0edfb14d1dc82c5992684a5b256193e7948fe2a5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3MTQwOQ==", "bodyText": "yes", "url": "https://github.com/linkedin/ambry/pull/1598#discussion_r466071409", "createdAt": "2020-08-06T00:09:52Z", "author": {"login": "jsjtzyy"}, "path": "ambry-router/src/main/java/com/github/ambry/router/DeleteOperation.java", "diffHunk": "@@ -176,7 +176,9 @@ void handleResponse(ResponseInfo responseInfo, DeleteResponse deleteResponse) {\n     if (responseInfo.getError() != null) {\n       logger.trace(\"DeleteRequest with response correlationId {} timed out for replica {} \",\n           deleteRequest.getCorrelationId(), replica.getDataNodeId());\n-      onErrorResponse(replica, new RouterException(\"Operation timed out\", RouterErrorCode.OperationTimedOut));\n+      onErrorResponse(replica, new RouterException(\n+          \"Operation timed out because of \" + responseInfo.getError() + \" at DataNode \" + responseInfo.getDataNode(),\n+          RouterErrorCode.OperationTimedOut));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0NTc0OQ=="}, "originalCommit": {"oid": "0edfb14d1dc82c5992684a5b256193e7948fe2a5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NDIxNQ==", "bodyText": "replica id is the same ad datanode here so I just log out blob id.", "url": "https://github.com/linkedin/ambry/pull/1598#discussion_r466074215", "createdAt": "2020-08-06T00:20:05Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-router/src/main/java/com/github/ambry/router/DeleteOperation.java", "diffHunk": "@@ -176,7 +176,9 @@ void handleResponse(ResponseInfo responseInfo, DeleteResponse deleteResponse) {\n     if (responseInfo.getError() != null) {\n       logger.trace(\"DeleteRequest with response correlationId {} timed out for replica {} \",\n           deleteRequest.getCorrelationId(), replica.getDataNodeId());\n-      onErrorResponse(replica, new RouterException(\"Operation timed out\", RouterErrorCode.OperationTimedOut));\n+      onErrorResponse(replica, new RouterException(\n+          \"Operation timed out because of \" + responseInfo.getError() + \" at DataNode \" + responseInfo.getDataNode(),\n+          RouterErrorCode.OperationTimedOut));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0NTc0OQ=="}, "originalCommit": {"oid": "0edfb14d1dc82c5992684a5b256193e7948fe2a5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3NzA4NQ==", "bodyText": "actually replicaId contains datanode info but datanode has no info about replica", "url": "https://github.com/linkedin/ambry/pull/1598#discussion_r466077085", "createdAt": "2020-08-06T00:29:57Z", "author": {"login": "jsjtzyy"}, "path": "ambry-router/src/main/java/com/github/ambry/router/DeleteOperation.java", "diffHunk": "@@ -176,7 +176,9 @@ void handleResponse(ResponseInfo responseInfo, DeleteResponse deleteResponse) {\n     if (responseInfo.getError() != null) {\n       logger.trace(\"DeleteRequest with response correlationId {} timed out for replica {} \",\n           deleteRequest.getCorrelationId(), replica.getDataNodeId());\n-      onErrorResponse(replica, new RouterException(\"Operation timed out\", RouterErrorCode.OperationTimedOut));\n+      onErrorResponse(replica, new RouterException(\n+          \"Operation timed out because of \" + responseInfo.getError() + \" at DataNode \" + responseInfo.getDataNode(),\n+          RouterErrorCode.OperationTimedOut));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0NTc0OQ=="}, "originalCommit": {"oid": "0edfb14d1dc82c5992684a5b256193e7948fe2a5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3ODQzNA==", "bodyText": "I mean we only want to know which host failed, datanode can provide that info.", "url": "https://github.com/linkedin/ambry/pull/1598#discussion_r466078434", "createdAt": "2020-08-06T00:35:01Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-router/src/main/java/com/github/ambry/router/DeleteOperation.java", "diffHunk": "@@ -176,7 +176,9 @@ void handleResponse(ResponseInfo responseInfo, DeleteResponse deleteResponse) {\n     if (responseInfo.getError() != null) {\n       logger.trace(\"DeleteRequest with response correlationId {} timed out for replica {} \",\n           deleteRequest.getCorrelationId(), replica.getDataNodeId());\n-      onErrorResponse(replica, new RouterException(\"Operation timed out\", RouterErrorCode.OperationTimedOut));\n+      onErrorResponse(replica, new RouterException(\n+          \"Operation timed out because of \" + responseInfo.getError() + \" at DataNode \" + responseInfo.getDataNode(),\n+          RouterErrorCode.OperationTimedOut));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0NTc0OQ=="}, "originalCommit": {"oid": "0edfb14d1dc82c5992684a5b256193e7948fe2a5"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1333, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}