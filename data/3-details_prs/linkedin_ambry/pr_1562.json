{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNDQ2MDgx", "number": 1562, "title": "Support querying sealed partitions in cluster by HelixBootstrapTool", "bodyText": "This PR introduces a new option in Helix bootstrap tool that allows user\nto query current sealed partitions across all datacenters. The tool prints\nout detailed info (such as sealed replicas on each host) and also the aggregated\nresult (sealed partition across all colos)\nExample result is as follows:\n[2020-06-11 20:40:01,137] INFO Associating static Ambry cluster \"ToolTestStatic\" with cluster\"Ambry-ToolTestStatic\" in Helix (Helix bootstrap tool)\n[2020-06-11 20:40:01,137] INFO Aggregating sealed partitions from cluster Ambry-ToolTestStatic in Helix (Helix bootstrap tool)\n[2020-06-11 20:40:01,142] INFO Replica 42 is sealed on localhost_18088 (Helix bootstrap tool)\n[2020-06-11 20:40:01,144] INFO Replica 17 is sealed on localhost_18089 (Helix bootstrap tool)\n[2020-06-11 20:40:01,144] INFO Replica 30 is sealed on localhost_18089 (Helix bootstrap tool)\n[2020-06-11 20:40:01,146] INFO Replica 46 is sealed on localhost_18090 (Helix bootstrap tool)\n[2020-06-11 20:40:01,146] INFO Replica 17 is sealed on localhost_18090 (Helix bootstrap tool)\n[2020-06-11 20:40:01,146] INFO Replica 30 is sealed on localhost_18090 (Helix bootstrap tool)\n[2020-06-11 20:40:01,146] INFO Replica 75 is sealed on localhost_18090 (Helix bootstrap tool)\n[2020-06-11 20:40:01,147] INFO Replica 30 is sealed on localhost_18094 (Helix bootstrap tool)\n[2020-06-11 20:40:01,147] INFO Replica 75 is sealed on localhost_18094 (Helix bootstrap tool)\n[2020-06-11 20:40:01,147] INFO Replica 46 is sealed on localhost_18091 (Helix bootstrap tool)\n[2020-06-11 20:40:01,147] INFO Replica 30 is sealed on localhost_18091 (Helix bootstrap tool)\n[2020-06-11 20:40:01,147] INFO Replica 42 is sealed on localhost_18091 (Helix bootstrap tool)\n[2020-06-11 20:40:01,148] INFO Replica 46 is sealed on localhost_18095 (Helix bootstrap tool)\n[2020-06-11 20:40:01,148] INFO Replica 17 is sealed on localhost_18095 (Helix bootstrap tool)\n[2020-06-11 20:40:01,150] INFO Replica 46 is sealed on localhost_18092 (Helix bootstrap tool)\n[2020-06-11 20:40:01,150] INFO Replica 75 is sealed on localhost_18092 (Helix bootstrap tool)\n[2020-06-11 20:40:01,150] INFO Replica 17 is sealed on localhost_18096 (Helix bootstrap tool)\n[2020-06-11 20:40:01,151] INFO Replica 17 is sealed on localhost_18093 (Helix bootstrap tool)\n[2020-06-11 20:40:01,151] INFO Replica 75 is sealed on localhost_18093 (Helix bootstrap tool)\n[2020-06-11 20:40:01,151] INFO Replica 42 is sealed on localhost_18093 (Helix bootstrap tool)\n[2020-06-11 20:40:01,236] INFO Replica 46 is sealed on localhost_18097 (Helix bootstrap tool)\n[2020-06-11 20:40:01,237] INFO Replica 17 is sealed on localhost_18097 (Helix bootstrap tool)\n[2020-06-11 20:40:01,237] INFO Replica 30 is sealed on localhost_18097 (Helix bootstrap tool)\n[2020-06-11 20:40:01,237] INFO Replica 75 is sealed on localhost_18097 (Helix bootstrap tool)\n[2020-06-11 20:40:01,237] INFO Replica 42 is sealed on localhost_18097 (Helix bootstrap tool)\n[2020-06-11 20:40:01,239] INFO Replica 42 is sealed on localhost_18098 (Helix bootstrap tool)\n[2020-06-11 20:40:01,240] INFO Replica 46 is sealed on localhost_18099 (Helix bootstrap tool)\n[2020-06-11 20:40:01,240] INFO Replica 30 is sealed on localhost_18099 (Helix bootstrap tool)\n[2020-06-11 20:40:01,240] INFO Replica 75 is sealed on localhost_18099 (Helix bootstrap tool)\n[2020-06-11 20:40:01,240] INFO Replica 42 is sealed on localhost_18099 (Helix bootstrap tool)\n[2020-06-11 20:40:01,241] INFO ========================= Summary ========================= (Helix bootstrap tool)\n[2020-06-11 20:40:01,241] INFO Dc DC0 has 5 sealed partitions. (Helix bootstrap tool)\n[2020-06-11 20:40:01,241] INFO Dc DC1 has 5 sealed partitions. (Helix bootstrap tool)\n[2020-06-11 20:40:01,241] INFO ========================= Sealed Partitions across All DCs ========================= (Helix bootstrap tool)\n[2020-06-11 20:40:01,241] INFO Total number of sealed partitions in cluster = 5 (Helix bootstrap tool)\n[2020-06-11 20:40:01,241] INFO Sealed partitions are [46, 17, 30, 42, 75] (Helix bootstrap tool)\n[2020-06-11 20:40:01,241] INFO Successfully aggregate sealed from cluster Ambry-ToolTestStatic in Helix (Helix bootstrap tool)", "createdAt": "2020-06-12T03:42:14Z", "url": "https://github.com/linkedin/ambry/pull/1562", "merged": true, "mergeCommit": {"oid": "27b24be1f23861a66b7e007fa31a48c71acef4b7"}, "closed": true, "closedAt": "2020-06-18T21:19:13Z", "author": {"login": "jsjtzyy"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqaXHggH2gAyNDMzNDQ2MDgxOmFiYTFjZWZjMDdiZTkzYmNhYTM2N2I2MTM0ZDdjNTY5NDBlNTUyNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcslLm7gFqTQzMzY1NDE3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aba1cefc07be93bcaa367b6134d7c56940e55266", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/aba1cefc07be93bcaa367b6134d7c56940e55266", "committedDate": "2020-06-12T03:33:41Z", "message": "Support querying sealed partitions in cluster by HelixBootstrapTool\n\nThis PR introduces a new option in Helix bootstrap tool that allows user\nto query current sealed partitions across all datacenters. The tool prints\nout detailed info (such as sealed replicas on each host) and also the aggregated\nresult (sealed partition across all colos)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "155ee6e5c8904434716a7ac48a37da940fd150d7", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/155ee6e5c8904434716a7ac48a37da940fd150d7", "committedDate": "2020-06-16T03:13:49Z", "message": "print out non-existent sealed replicas"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODMzMzY3", "url": "https://github.com/linkedin/ambry/pull/1562#pullrequestreview-432833367", "createdAt": "2020-06-17T23:01:59Z", "commit": {"oid": "155ee6e5c8904434716a7ac48a37da940fd150d7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzowMTo1OVrOGlaKgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoxMzowNVrOGl2gQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3OTE3MA==", "bodyText": "return the set of sealed partitions...", "url": "https://github.com/linkedin/ambry/pull/1562#discussion_r441879170", "createdAt": "2020-06-17T23:01:59Z", "author": {"login": "xuhao417347761"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -1298,6 +1324,93 @@ private void validateAndClose() {\n     }\n   }\n \n+  /**\n+   * Get sealed partitions from Helix cluster.\n+   * @return the total number of sealed partitions across all DCs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155ee6e5c8904434716a7ac48a37da940fd150d7"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MzQ5MA==", "bodyText": "replicasOnNode is a set of all replicas on a node, you may want to log the node id here.", "url": "https://github.com/linkedin/ambry/pull/1562#discussion_r442343490", "createdAt": "2020-06-18T16:13:05Z", "author": {"login": "xuhao417347761"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -1298,6 +1324,93 @@ private void validateAndClose() {\n     }\n   }\n \n+  /**\n+   * Get sealed partitions from Helix cluster.\n+   * @return the total number of sealed partitions across all DCs.\n+   */\n+  private Set<String> getSealedPartitionsInHelixCluster() throws Exception {\n+    info(\"Aggregating sealed partitions from cluster {} in Helix\", clusterName);\n+    CountDownLatch sealedPartitionLatch = new CountDownLatch(adminForDc.size());\n+    AtomicInteger errorCount = new AtomicInteger();\n+    Map<String, Set<String>> dcToSealedPartitions = new ConcurrentHashMap<>();\n+    Map<String, Set<String>> nodeToNonExistentReplicas = new ConcurrentHashMap<>();\n+    for (Datacenter dc : staticClusterMap.hardwareLayout.getDatacenters()) {\n+      HelixAdmin admin = adminForDc.get(dc.getName());\n+      if (admin == null) {\n+        info(\"Skipping {}\", dc.getName());\n+        continue;\n+      }\n+      ensureOrThrow(zkClientForDc.get(dc.getName()) == null ? admin.getClusters().contains(clusterName)\n+              : ZKUtil.isClusterSetup(clusterName, zkClientForDc.get(dc.getName())),\n+          \"Cluster not found in ZK \" + dataCenterToZkAddress.get(dc.getName()));\n+      Utils.newThread(() -> {\n+        try {\n+          getSealedPartitionsInDc(dc, dcToSealedPartitions, nodeToNonExistentReplicas);\n+        } catch (Throwable t) {\n+          logger.error(\"[{}] error message: {}\", dc.getName().toUpperCase(), t.getMessage());\n+          errorCount.getAndIncrement();\n+        } finally {\n+          sealedPartitionLatch.countDown();\n+        }\n+      }, false).start();\n+    }\n+    sealedPartitionLatch.await(10, TimeUnit.MINUTES);\n+    ensureOrThrow(errorCount.get() == 0, \"Error occurred when aggregating sealed partitions in cluster \" + clusterName);\n+    Set<String> sealedPartitionsInCluster = new HashSet<>();\n+    info(\"========================= Summary =========================\");\n+    for (Map.Entry<String, Set<String>> entry : dcToSealedPartitions.entrySet()) {\n+      info(\"Dc {} has {} sealed partitions.\", entry.getKey(), entry.getValue().size());\n+      sealedPartitionsInCluster.addAll(entry.getValue());\n+    }\n+    info(\"========================= Sealed Partitions across All DCs =========================\");\n+    info(\"Total number of sealed partitions in cluster = {}\", sealedPartitionsInCluster.size());\n+    info(\"Sealed partitions are {}\", sealedPartitionsInCluster.toString());\n+    if (!nodeToNonExistentReplicas.isEmpty()) {\n+      info(\"Following {} nodes have sealed replica that are not actually present\", nodeToNonExistentReplicas.size());\n+      for (Map.Entry<String, Set<String>> entry : nodeToNonExistentReplicas.entrySet()) {\n+        info(\"{} has non-existent replicas: {}\", entry.getKey(), entry.getValue().toString());\n+      }\n+    }\n+    info(\"Successfully aggregate sealed from cluster {} in Helix\", clusterName);\n+    return sealedPartitionsInCluster;\n+  }\n+\n+  /**\n+   * Get sealed partitions from given datacenter.\n+   * @param dc the datacenter where sealed partitions come from.\n+   * @param dcToSealedPartitions a map to track sealed partitions in each dc. This entry associated with given dc will\n+   *                             be populated in this method.\n+   * @param nodeToNonExistentReplicas a map to track if any replica is in sealed list but not actually on local node.\n+   */\n+  private void getSealedPartitionsInDc(Datacenter dc, Map<String, Set<String>> dcToSealedPartitions,\n+      Map<String, Set<String>> nodeToNonExistentReplicas) {\n+    String dcName = dc.getName();\n+    dcToSealedPartitions.put(dcName, new HashSet<>());\n+    HelixAdmin admin = adminForDc.get(dcName);\n+    Set<String> allInstancesInHelix = new HashSet<>(admin.getInstancesInCluster(clusterName));\n+    for (DataNodeId dataNodeId : dc.getDataNodes()) {\n+      DataNode dataNode = (DataNode) dataNodeId;\n+      Set<String> replicasOnNode = staticClusterMap.getReplicas(dataNode)\n+          .stream()\n+          .map(replicaId -> replicaId.getPartitionId().toPathString())\n+          .collect(Collectors.toSet());\n+      String instanceName = getInstanceName(dataNode);\n+      ensureOrThrow(allInstancesInHelix.contains(instanceName), \"Instance not present in Helix \" + instanceName);\n+      InstanceConfig instanceConfig = admin.getInstanceConfig(clusterName, instanceName);\n+      List<String> sealedReplicas = instanceConfig.getRecord().getListField(ClusterMapUtils.SEALED_STR);\n+      if (sealedReplicas != null) {\n+        for (String sealedReplica : sealedReplicas) {\n+          info(\"Replica {} is sealed on {}\", sealedReplica, instanceName);\n+          dcToSealedPartitions.get(dcName).add(sealedReplica);\n+          if (!replicasOnNode.contains(sealedReplica)) {\n+            logger.warn(\"Replica {} is in sealed list but not on node {}\", sealedReplica, replicasOnNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155ee6e5c8904434716a7ac48a37da940fd150d7"}, "originalPosition": 125}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecdfa5f7e4e08394e6cf32deb600ee0531ef0d2d", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/ecdfa5f7e4e08394e6cf32deb600ee0531ef0d2d", "committedDate": "2020-06-18T17:10:04Z", "message": "address Hao's comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjU0MTcw", "url": "https://github.com/linkedin/ambry/pull/1562#pullrequestreview-433654170", "createdAt": "2020-06-18T21:17:55Z", "commit": {"oid": "ecdfa5f7e4e08394e6cf32deb600ee0531ef0d2d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1131, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}