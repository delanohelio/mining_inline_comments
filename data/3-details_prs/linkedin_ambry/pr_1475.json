{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDI4MDE2", "number": 1475, "title": "Create config for datacenter from which cloud replication is allowed.", "bodyText": "We need a datacenter to replicate from. For DR, we currently deploy VCR nodes on same datacenter as ambry-server. So we use local datacenter replicas as remote replicas.\nFor serving data from cloud, we must specify the ambry-server datacenter(s) from which to replicate. This PR introduces configs and code changes for getting the peer replicas for cloud.", "createdAt": "2020-04-15T22:53:08Z", "url": "https://github.com/linkedin/ambry/pull/1475", "merged": true, "mergeCommit": {"oid": "097624612990ecb5388ed2520bd1dd7726d0d71f"}, "closed": true, "closedAt": "2020-04-21T19:15:44Z", "author": {"login": "ankagrawal"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYRhKCAFqTM5NDkyMDA1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ4grdAFqTM5NzU5MzA2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTIwMDUw", "url": "https://github.com/linkedin/ambry/pull/1475#pullrequestreview-394920050", "createdAt": "2020-04-16T19:04:51Z", "commit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTowNDo1MVrOGGzQ2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTowNDo1MVrOGGzQ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc4NDUzOQ==", "bodyText": "I don't have much context of cloud but I am trying to understand the config cloudIsVcr, so there are two types of nodes related to Cloud. One is VCR, in my impression, it is supposed to replicate blobs from regular ambry server to Azure (correct me if I am wrong). What is the other type of cloud node?", "url": "https://github.com/linkedin/ambry/pull/1475#discussion_r409784539", "createdAt": "2020-04-16T19:04:51Z", "author": {"login": "jsjtzyy"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "diffHunk": "@@ -79,6 +77,12 @@ public VcrReplicationManager(VerifiableProperties properties, CloudConfig cloudC\n     this.cloudStorageCompactor =\n         cloudConfig.cloudBlobCompactionEnabled ? new CloudStorageCompactor(cloudDestination, cloudConfig,\n             partitionToPartitionInfo.keySet(), vcrMetrics) : null;\n+    // We need a datacenter to replicate from. For DR, we currently deploy VCR nodes on same datacenter as ambry-server.\n+    // For serving data from cloud, we must specify the ambry-server datacenter(s) from which to replicate.\n+    if (!cloudConfig.cloudIsVcr && cloudConfig.vcrCrossColoReplicationPeerDatacenters.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTI3OTM1", "url": "https://github.com/linkedin/ambry/pull/1475#pullrequestreview-394927935", "createdAt": "2020-04-16T19:16:24Z", "commit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToxNjoyNFrOGGzpQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOToyNTo1OFrOGGz-CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MDc4NA==", "bodyText": "This is very long.  How about VCR_SOURCE_DATACENTERS and a comment explaining it?", "url": "https://github.com/linkedin/ambry/pull/1475#discussion_r409790784", "createdAt": "2020-04-16T19:16:24Z", "author": {"login": "lightningrob"}, "path": "ambry-api/src/main/java/com/github/ambry/config/CloudConfig.java", "diffHunk": "@@ -45,6 +50,7 @@\n   public static final String VCR_PROXY_HOST = \"vcr.proxy.host\";\n   public static final String VCR_PROXY_PORT = \"vcr.proxy.port\";\n   public static final String VCR_CLUSTER_SPECTATOR_FACTORY_CLASS = \"vcr.cluster.spectator.factory.class\";\n+  public static final String VCR_CROSS_COLO_REPLICATION_PEER_DATACENTERS = \"vcr.cross.colo.replication.peer.datacenter\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5MTgwNA==", "bodyText": "vcrSourceDataCenters", "url": "https://github.com/linkedin/ambry/pull/1475#discussion_r409791804", "createdAt": "2020-04-16T19:18:14Z", "author": {"login": "lightningrob"}, "path": "ambry-api/src/main/java/com/github/ambry/config/CloudConfig.java", "diffHunk": "@@ -262,6 +268,13 @@\n   @Default(DEFAULT_VCR_CLUSTER_SPECTATOR_FACTORY_CLASS)\n   public final String vcrClusterSpectatorFactoryClass;\n \n+  /**\n+   * Comma separated set of datacenters which can act as peer for cross colo replication.\n+   */\n+  @Config(VCR_CROSS_COLO_REPLICATION_PEER_DATACENTERS)\n+  @Default(\"\")\n+  public final Set<String> vcrCrossColoReplicationPeerDatacenters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5Mjg3NQ==", "bodyText": "If cloudIsVcr is false here, that alone would be an illegal state.", "url": "https://github.com/linkedin/ambry/pull/1475#discussion_r409792875", "createdAt": "2020-04-16T19:20:04Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "diffHunk": "@@ -79,6 +77,12 @@ public VcrReplicationManager(VerifiableProperties properties, CloudConfig cloudC\n     this.cloudStorageCompactor =\n         cloudConfig.cloudBlobCompactionEnabled ? new CloudStorageCompactor(cloudDestination, cloudConfig,\n             partitionToPartitionInfo.keySet(), vcrMetrics) : null;\n+    // We need a datacenter to replicate from. For DR, we currently deploy VCR nodes on same datacenter as ambry-server.\n+    // For serving data from cloud, we must specify the ambry-server datacenter(s) from which to replicate.\n+    if (!cloudConfig.cloudIsVcr && cloudConfig.vcrCrossColoReplicationPeerDatacenters.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5Mzg2Mg==", "bodyText": "Simplify to \"One or more VCR cross colo replication peer datacenter should be specified\"", "url": "https://github.com/linkedin/ambry/pull/1475#discussion_r409793862", "createdAt": "2020-04-16T19:21:52Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "diffHunk": "@@ -79,6 +77,12 @@ public VcrReplicationManager(VerifiableProperties properties, CloudConfig cloudC\n     this.cloudStorageCompactor =\n         cloudConfig.cloudBlobCompactionEnabled ? new CloudStorageCompactor(cloudDestination, cloudConfig,\n             partitionToPartitionInfo.keySet(), vcrMetrics) : null;\n+    // We need a datacenter to replicate from. For DR, we currently deploy VCR nodes on same datacenter as ambry-server.\n+    // For serving data from cloud, we must specify the ambry-server datacenter(s) from which to replicate.\n+    if (!cloudConfig.cloudIsVcr && cloudConfig.vcrCrossColoReplicationPeerDatacenters.isEmpty()) {\n+      throw new IllegalStateException(\n+          \"Either this should be a vcr replicator OR one or more vcr cross colo replication peer datacenter should be specified\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5NjEwNA==", "bodyText": "cloudIsVcr will be true in both cases.  Perhaps it's time to add another config property like isBackup?\nBut I think we can use the new logic for both scenarios, and update the DR config to tell it which DC to use.", "url": "https://github.com/linkedin/ambry/pull/1475#discussion_r409796104", "createdAt": "2020-04-16T19:25:58Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "diffHunk": "@@ -236,4 +240,18 @@ public long getRemoteReplicaLagFromLocalInBytes(PartitionId partitionId, String\n     // TODO get replica lag from cosmos?\n     return -1;\n   }\n+\n+  /**\n+   * Check if replication is allowed from given datacenter.\n+   * @param datacenterName datacenter name to check.\n+   * @return true if replication is allowed. false otherwise.\n+   */\n+  private boolean shouldReplicateFromDc(String datacenterName) {\n+    if (cloudConfig.cloudIsVcr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0274726e91b61ac65bdcbc2e806f73e37d1ad83", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/b0274726e91b61ac65bdcbc2e806f73e37d1ad83", "committedDate": "2020-04-15T22:31:13Z", "message": "Create config for datacenter from which cloud replication is allowed."}, "afterCommit": {"oid": "f3a40e462e88b700ce17261e82e906eabf932de4", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/f3a40e462e88b700ce17261e82e906eabf932de4", "committedDate": "2020-04-16T20:46:13Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df751e884c19a0a221a691fb7796e7330353de46", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/df751e884c19a0a221a691fb7796e7330353de46", "committedDate": "2020-04-20T19:58:19Z", "message": "Create config for datacenter from which cloud replication is allowed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d87aa9425cfe4a07c3d1e7b39d656fdce6203077", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/d87aa9425cfe4a07c3d1e7b39d656fdce6203077", "committedDate": "2020-04-20T19:58:19Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a68862fccf2f33f0d054ea3cab06ffd547a4a7e6", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/a68862fccf2f33f0d054ea3cab06ffd547a4a7e6", "committedDate": "2020-04-20T19:58:19Z", "message": "Add missing newline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c0a1af095a28139a21216770346fdb0ee6d8ba1", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/3c0a1af095a28139a21216770346fdb0ee6d8ba1", "committedDate": "2020-04-20T20:30:02Z", "message": "Fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "420a4ccfd1f1583b36d8a92a5ec7a56d4e8135c5", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/420a4ccfd1f1583b36d8a92a5ec7a56d4e8135c5", "committedDate": "2020-04-16T20:48:13Z", "message": "Add missing newline"}, "afterCommit": {"oid": "3c0a1af095a28139a21216770346fdb0ee6d8ba1", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/3c0a1af095a28139a21216770346fdb0ee6d8ba1", "committedDate": "2020-04-20T20:30:02Z", "message": "Fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTkyMTEw", "url": "https://github.com/linkedin/ambry/pull/1475#pullrequestreview-397592110", "createdAt": "2020-04-21T19:03:18Z", "commit": {"oid": "3c0a1af095a28139a21216770346fdb0ee6d8ba1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTkzMDY0", "url": "https://github.com/linkedin/ambry/pull/1475#pullrequestreview-397593064", "createdAt": "2020-04-21T19:04:34Z", "commit": {"oid": "3c0a1af095a28139a21216770346fdb0ee6d8ba1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1396, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}