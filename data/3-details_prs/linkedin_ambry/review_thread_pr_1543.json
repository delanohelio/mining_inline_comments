{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MjQ0OTE5", "number": 1543, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzozOTo1NFrOEBFQVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzo0NzoyOVrOEBFRiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTcwMTM1OnYy", "diffSide": "RIGHT", "path": "ambry-server/src/main/java/com/github/ambry/server/ParticipantsConsistencyChecker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzozOTo1NFrOGcwZ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzo1MDoxN1rOGcwcGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNjM5NQ==", "bodyText": "do we need these info logs?", "url": "https://github.com/linkedin/ambry/pull/1543#discussion_r432806395", "createdAt": "2020-05-30T03:39:54Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-server/src/main/java/com/github/ambry/server/ParticipantsConsistencyChecker.java", "diffHunk": "@@ -39,22 +39,29 @@ public ParticipantsConsistencyChecker(List<ClusterParticipant> participants, Ser\n \n   @Override\n   public void run() {\n-    // when code reaches here, it means there are at least two participants.\n-    ClusterParticipant clusterParticipant = participants.get(0);\n-    Set<String> sealedReplicas1 = new HashSet<>(clusterParticipant.getSealedReplicas());\n-    Set<String> stoppedReplicas1 = new HashSet<>(clusterParticipant.getStoppedReplicas());\n-    for (int i = 1; i < participants.size(); ++i) {\n-      Set<String> sealedReplicas2 = new HashSet<>(participants.get(i).getSealedReplicas());\n-      if (!sealedReplicas1.equals(sealedReplicas2)) {\n-        logger.warn(\"Mismatch in sealed replicas. Set {} is different from set {}\", sealedReplicas1, sealedReplicas2);\n-        metrics.sealedReplicasMismatchCount.inc();\n-      }\n-      Set<String> stoppedReplicas2 = new HashSet<>(participants.get(i).getStoppedReplicas());\n-      if (!stoppedReplicas1.equals(stoppedReplicas2)) {\n-        logger.warn(\"Mismatch in stopped replicas. Set {} is different from set {}\", stoppedReplicas1,\n-            stoppedReplicas2);\n-        metrics.stoppedReplicasMismatchCount.inc();\n+    logger.info(\"Participant consistency checker is initiated. Participants count = {}\", participants.size());\n+    try {\n+      // when code reaches here, it means there are at least two participants.\n+      ClusterParticipant clusterParticipant = participants.get(0);\n+      Set<String> sealedReplicas1 = new HashSet<>(clusterParticipant.getSealedReplicas());\n+      Set<String> stoppedReplicas1 = new HashSet<>(clusterParticipant.getStoppedReplicas());\n+      for (int i = 1; i < participants.size(); ++i) {\n+        logger.info(\"Checking sealed replica list\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8417cd46520129fcc97fbeceb61a62ec2561aa8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNjkzOA==", "bodyText": "I added to debug where the exception was thrown when running this checker. Will change it to DEBUG.", "url": "https://github.com/linkedin/ambry/pull/1543#discussion_r432806938", "createdAt": "2020-05-30T03:50:17Z", "author": {"login": "jsjtzyy"}, "path": "ambry-server/src/main/java/com/github/ambry/server/ParticipantsConsistencyChecker.java", "diffHunk": "@@ -39,22 +39,29 @@ public ParticipantsConsistencyChecker(List<ClusterParticipant> participants, Ser\n \n   @Override\n   public void run() {\n-    // when code reaches here, it means there are at least two participants.\n-    ClusterParticipant clusterParticipant = participants.get(0);\n-    Set<String> sealedReplicas1 = new HashSet<>(clusterParticipant.getSealedReplicas());\n-    Set<String> stoppedReplicas1 = new HashSet<>(clusterParticipant.getStoppedReplicas());\n-    for (int i = 1; i < participants.size(); ++i) {\n-      Set<String> sealedReplicas2 = new HashSet<>(participants.get(i).getSealedReplicas());\n-      if (!sealedReplicas1.equals(sealedReplicas2)) {\n-        logger.warn(\"Mismatch in sealed replicas. Set {} is different from set {}\", sealedReplicas1, sealedReplicas2);\n-        metrics.sealedReplicasMismatchCount.inc();\n-      }\n-      Set<String> stoppedReplicas2 = new HashSet<>(participants.get(i).getStoppedReplicas());\n-      if (!stoppedReplicas1.equals(stoppedReplicas2)) {\n-        logger.warn(\"Mismatch in stopped replicas. Set {} is different from set {}\", stoppedReplicas1,\n-            stoppedReplicas2);\n-        metrics.stoppedReplicasMismatchCount.inc();\n+    logger.info(\"Participant consistency checker is initiated. Participants count = {}\", participants.size());\n+    try {\n+      // when code reaches here, it means there are at least two participants.\n+      ClusterParticipant clusterParticipant = participants.get(0);\n+      Set<String> sealedReplicas1 = new HashSet<>(clusterParticipant.getSealedReplicas());\n+      Set<String> stoppedReplicas1 = new HashSet<>(clusterParticipant.getStoppedReplicas());\n+      for (int i = 1; i < participants.size(); ++i) {\n+        logger.info(\"Checking sealed replica list\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNjM5NQ=="}, "originalCommit": {"oid": "e8417cd46520129fcc97fbeceb61a62ec2561aa8"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTcwNDQxOnYy", "diffSide": "RIGHT", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzo0NzoyOVrOGcwbeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMzo1MjoxNFrOGcwcmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNjc3Nw==", "bodyText": "nit: this can be else if following the statement above.", "url": "https://github.com/linkedin/ambry/pull/1543#discussion_r432806777", "createdAt": "2020-05-30T03:47:29Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStore.java", "diffHunk": "@@ -383,6 +393,26 @@ private void checkCapacityAndUpdateReplicaStatusDelegate() {\n           }\n         }\n       }\n+      // During startup, we also need to reconcile the replica state from both ZK clusters.\n+      if (!started && replicaStatusDelegates.size() > 1 && thresholdBytesLow < index.getLogUsedCapacity()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8417cd46520129fcc97fbeceb61a62ec2561aa8"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNzA2Nw==", "bodyText": "True, but I think maybe it's good to separate it from previous code block. This is a one-off code path which is only called during startup. (In the future, this piece can be removed when migration is complete.)", "url": "https://github.com/linkedin/ambry/pull/1543#discussion_r432807067", "createdAt": "2020-05-30T03:52:14Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStore.java", "diffHunk": "@@ -383,6 +393,26 @@ private void checkCapacityAndUpdateReplicaStatusDelegate() {\n           }\n         }\n       }\n+      // During startup, we also need to reconcile the replica state from both ZK clusters.\n+      if (!started && replicaStatusDelegates.size() > 1 && thresholdBytesLow < index.getLogUsedCapacity()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgwNjc3Nw=="}, "originalCommit": {"oid": "e8417cd46520129fcc97fbeceb61a62ec2561aa8"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1210, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}