{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTg3Mjc3", "number": 1738, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDowNjoxMVrOFL8U_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNTo1OTo1MlrOFMATmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDY3MDcxOnYy", "diffSide": "RIGHT", "path": "ambry-api/src/main/java/com/github/ambry/config/StorageQuotaConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDowNjoxMVrOIPaGCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMToyOTowNFrOIPcAHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyNzA4MQ==", "bodyText": "The trimmed result is ignored.", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553027081", "createdAt": "2021-01-07T00:06:11Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com/github/ambry/config/StorageQuotaConfig.java", "diffHunk": "@@ -127,5 +138,14 @@ public StorageQuotaConfig(VerifiableProperties verifiableProperties) {\n     mysqlStoreRetryBackoffMs = verifiableProperties.getLong(MYSQL_STORE_RETRY_BACKOFF_MS, 10 * 60 * 1000);\n     mysqlStoreRetryMaxCount = verifiableProperties.getInt(MYSQL_STORE_RETRY_MAX_COUNT, 1);\n     mysqlMonthlyBaseFetchOffsetSec = verifiableProperties.getLong(MYSQL_MONTHLY_BASE_FETCH_OFFSET_SEC, 60 * 60);\n+    enforcerMode = QuotaMode.valueOf(\n+        capitalize(verifiableProperties.getString(ENFORCER_MODE, DEFAULT_VALUE_ENFORCE_MODE).toLowerCase()));\n+  }\n+\n+  private String capitalize(String str) {\n+    if (str == null || str.isEmpty() || str.trim().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808e192c72bbb9811272eebc2b4bd53f16b91591"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1ODMzNQ==", "bodyText": "updated.", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553058335", "createdAt": "2021-01-07T01:29:04Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-api/src/main/java/com/github/ambry/config/StorageQuotaConfig.java", "diffHunk": "@@ -127,5 +138,14 @@ public StorageQuotaConfig(VerifiableProperties verifiableProperties) {\n     mysqlStoreRetryBackoffMs = verifiableProperties.getLong(MYSQL_STORE_RETRY_BACKOFF_MS, 10 * 60 * 1000);\n     mysqlStoreRetryMaxCount = verifiableProperties.getInt(MYSQL_STORE_RETRY_MAX_COUNT, 1);\n     mysqlMonthlyBaseFetchOffsetSec = verifiableProperties.getLong(MYSQL_MONTHLY_BASE_FETCH_OFFSET_SEC, 60 * 60);\n+    enforcerMode = QuotaMode.valueOf(\n+        capitalize(verifiableProperties.getString(ENFORCER_MODE, DEFAULT_VALUE_ENFORCE_MODE).toLowerCase()));\n+  }\n+\n+  private String capitalize(String str) {\n+    if (str == null || str.isEmpty() || str.trim().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyNzA4MQ=="}, "originalCommit": {"oid": "808e192c72bbb9811272eebc2b4bd53f16b91591"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDY4NjgwOnYy", "diffSide": "RIGHT", "path": "ambry-api/src/main/java/com/github/ambry/quota/StorageQuotaEnforcer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDoxNDo1N1rOIPaPaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDoxNDo1N1rOIPaPaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyOTQ4MQ==", "bodyText": "Could you add java doc for this method?", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553029481", "createdAt": "2021-01-07T00:14:57Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com/github/ambry/quota/StorageQuotaEnforcer.java", "diffHunk": "@@ -71,4 +71,12 @@\n    * @param mode The new value for {@link QuotaMode}.\n    */\n   void setQuotaMode(QuotaMode mode);\n+\n+  /**\n+   * Interface of callback method when the quota of certain account and container's quota is exceeded.\n+   */\n+  interface QuotaExceededCallback {\n+    void onQuotaExceeded(QuotaMode quotaMode, short accountId, short containerId, QuotaOperation op, long quota,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808e192c72bbb9811272eebc2b4bd53f16b91591"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDcwNTM2OnYy", "diffSide": "RIGHT", "path": "ambry-mysql/src/main/java/com/github/ambry/mysql/MySqlDataAccessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDoyNDo0OFrOIPaZ9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMToyOToyNVrOIPcAbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAzMjE4MA==", "bodyText": "I am thinking if we can move this to caller method and use separate metrics for AccountService and AccountStatsReport. Thus, we have a clear view that how may QPS from AccountService, how many from Account Stats/ Quota Service.", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553032180", "createdAt": "2021-01-07T00:24:48Z", "author": {"login": "jsjtzyy"}, "path": "ambry-mysql/src/main/java/com/github/ambry/mysql/MySqlDataAccessor.java", "diffHunk": "@@ -271,10 +271,13 @@ public static boolean isCredentialError(SQLException e) {\n   public void onException(SQLException e, OperationType operationType) {\n     if (e instanceof SQLTransientConnectionException) {\n       if (operationType == OperationType.Write) {\n+        metrics.writeRate.mark();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808e192c72bbb9811272eebc2b4bd53f16b91591"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1ODQxNA==", "bodyText": "the metrics takes the store class as part of the metric name, so it's already separated.", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553058414", "createdAt": "2021-01-07T01:29:25Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-mysql/src/main/java/com/github/ambry/mysql/MySqlDataAccessor.java", "diffHunk": "@@ -271,10 +271,13 @@ public static boolean isCredentialError(SQLException e) {\n   public void onException(SQLException e, OperationType operationType) {\n     if (e instanceof SQLTransientConnectionException) {\n       if (operationType == OperationType.Write) {\n+        metrics.writeRate.mark();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAzMjE4MA=="}, "originalCommit": {"oid": "808e192c72bbb9811272eebc2b4bd53f16b91591"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDc0NTc4OnYy", "diffSide": "RIGHT", "path": "ambry-quota/src/main/java/com/github/ambry/quota/AmbryStorageQuotaEnforcer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDozNDoxOVrOIPa3Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDozNDoxOVrOIPa3Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAzOTcxMQ==", "bodyText": "nit: try to avoid string concatenation in the log.\nlogger.info(\"Setting Quota mode to {}\", mode.name());", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553039711", "createdAt": "2021-01-07T00:34:19Z", "author": {"login": "jsjtzyy"}, "path": "ambry-quota/src/main/java/com/github/ambry/quota/AmbryStorageQuotaEnforcer.java", "diffHunk": "@@ -54,28 +69,35 @@ public boolean shouldThrottle(short accountId, short containerId, QuotaOperation\n             return v;\n           }\n         });\n+    if (exceedQuota.get() && quota != Long.MAX_VALUE && quotaExceededCallback != null) {\n+      quotaExceededCallback.onQuotaExceeded(mode, accountId, containerId, op, quota, existingUsage.get(), size);\n+    }\n     return mode == QuotaMode.Throttling ? exceedQuota.get() : false;\n   }\n \n   @Override\n   public void setQuotaMode(QuotaMode mode) {\n+    logger.info(\"Setting Quota mode to \" + mode.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808e192c72bbb9811272eebc2b4bd53f16b91591"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDc0NzAzOnYy", "diffSide": "RIGHT", "path": "ambry-quota/src/main/java/com/github/ambry/quota/AmbryStorageQuotaEnforcer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDozNDo1MVrOIPa4Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDozNDo1MVrOIPa4Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAzOTk3MQ==", "bodyText": "same here and please update whole class.", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553039971", "createdAt": "2021-01-07T00:34:51Z", "author": {"login": "jsjtzyy"}, "path": "ambry-quota/src/main/java/com/github/ambry/quota/AmbryStorageQuotaEnforcer.java", "diffHunk": "@@ -54,28 +69,35 @@ public boolean shouldThrottle(short accountId, short containerId, QuotaOperation\n             return v;\n           }\n         });\n+    if (exceedQuota.get() && quota != Long.MAX_VALUE && quotaExceededCallback != null) {\n+      quotaExceededCallback.onQuotaExceeded(mode, accountId, containerId, op, quota, existingUsage.get(), size);\n+    }\n     return mode == QuotaMode.Throttling ? exceedQuota.get() : false;\n   }\n \n   @Override\n   public void setQuotaMode(QuotaMode mode) {\n+    logger.info(\"Setting Quota mode to \" + mode.name());\n     this.mode = mode;\n   }\n \n   @Override\n   public void initStorageUsage(Map<String, Map<String, Long>> usage) {\n+    logger.info(\"Initializing storage usage for \" + usage.size() + \" accounts\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808e192c72bbb9811272eebc2b4bd53f16b91591"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTMxODkxOnYy", "diffSide": "RIGHT", "path": "ambry-mysql/src/main/java/com/github/ambry/mysql/MySqlMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNTo1Nzo0NlrOIPgBtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNjozMDoyNVrOIPgmMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEyNDI3Nw==", "bodyText": "in practice, rate metrics behave pretty similarly to count metrics (since count metrics are partitioned into count/sec by the metrics sensors). Is there a specific reason for having both?", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553124277", "createdAt": "2021-01-07T05:57:46Z", "author": {"login": "cgtz"}, "path": "ambry-mysql/src/main/java/com/github/ambry/mysql/MySqlMetrics.java", "diffHunk": "@@ -38,6 +42,9 @@\n   public final Histogram writeTimeMs;\n   public final Histogram readTimeMs;\n   public final Histogram copyTimeMs;\n+  public final Meter writeRate;\n+  public final Meter readRate;\n+  public final Meter copyRate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1fcea3c5d1cccbac46bf2a430b007932dc3c255"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEzMzYxNg==", "bodyText": "Didn't think counter does that. If so, i will remove the meter.", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553133616", "createdAt": "2021-01-07T06:30:25Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-mysql/src/main/java/com/github/ambry/mysql/MySqlMetrics.java", "diffHunk": "@@ -38,6 +42,9 @@\n   public final Histogram writeTimeMs;\n   public final Histogram readTimeMs;\n   public final Histogram copyTimeMs;\n+  public final Meter writeRate;\n+  public final Meter readRate;\n+  public final Meter copyRate;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEyNDI3Nw=="}, "originalCommit": {"oid": "a1fcea3c5d1cccbac46bf2a430b007932dc3c255"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTMyMjQ4OnYy", "diffSide": "RIGHT", "path": "ambry-quota/src/main/java/com/github/ambry/quota/MySqlStorageUsageRefresher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNTo1OTo1MlrOIPgD6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNjozMDowNVrOIPglvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEyNDg0Mg==", "bodyText": "nit: some remaining string concats in this class", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553124842", "createdAt": "2021-01-07T05:59:52Z", "author": {"login": "cgtz"}, "path": "ambry-quota/src/main/java/com/github/ambry/quota/MySqlStorageUsageRefresher.java", "diffHunk": "@@ -388,6 +390,7 @@ void persistentBackupFile(String filename, Map<String, Map<String, Long>> usage)\n       if (backupFiles.contains(filename)) {\n         return;\n       }\n+      logger.trace(\"Persist container usage for \" + filename);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1fcea3c5d1cccbac46bf2a430b007932dc3c255"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEzMzUwMg==", "bodyText": "updated.", "url": "https://github.com/linkedin/ambry/pull/1738#discussion_r553133502", "createdAt": "2021-01-07T06:30:05Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-quota/src/main/java/com/github/ambry/quota/MySqlStorageUsageRefresher.java", "diffHunk": "@@ -388,6 +390,7 @@ void persistentBackupFile(String filename, Map<String, Map<String, Long>> usage)\n       if (backupFiles.contains(filename)) {\n         return;\n       }\n+      logger.trace(\"Persist container usage for \" + filename);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEyNDg0Mg=="}, "originalCommit": {"oid": "a1fcea3c5d1cccbac46bf2a430b007932dc3c255"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1193, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}