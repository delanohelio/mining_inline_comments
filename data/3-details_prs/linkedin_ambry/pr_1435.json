{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTg0NzA4", "number": 1435, "title": "Fix two instances of same replica during replica addition", "bodyText": "When adding a new replica to certain node, the node first creates a bootstrap replica and uses it to perform bootstrap work(i.e. allocate files and create new store). Afterwards, the node updates Helix\nInstanceConfig which notifies all listeners in cluster (including itself). When dealing with InstanceConfig change, this node creates a second instance of same replica and adds it into in-mem clustermap.\nThe consequence is storage manager holds a different instance from Helix Cluster Manager, which mistakenly adds self replica into peer replicas when performing replication catchup. It blocks decommission process because there is always a self replica that will never catch up.\nThis PR fixes this problem by maintaining bootstrap replica set in cluster manager and it checks if there are existing replica instances when handling InstanceConfig change.", "createdAt": "2020-03-24T18:26:58Z", "url": "https://github.com/linkedin/ambry/pull/1435", "merged": true, "mergeCommit": {"oid": "0720f5a213a69f15d95fb08447c8c3050095e9cf"}, "closed": true, "closedAt": "2020-03-28T00:22:51Z", "author": {"login": "jsjtzyy"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ29qpAH2gAyMzkzMTg0NzA4OmUxNTMzMmRhNTZmYjM4MTQyNjhiOWNlZjNiNmU2M2ZlODUzZjkzZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR6EjsAFqTM4MzI2MTcxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e15332da56fb3814268b9cef3b6e63fe853f93fb", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/e15332da56fb3814268b9cef3b6e63fe853f93fb", "committedDate": "2020-03-24T18:11:06Z", "message": "WIP: Fix two instances of same replica during replica addition\n\nWhen adding a new replica to certain node, the node first creates a\nbootstrap replica and uses it to perform boostrap work(i.e. allocate\nfiles and create new store). Afterwards, the node updates Helix\nInstanceConfig which notifies all listeners in cluster (including itself).\nWhen dealing with InstanceConfig change, this node creates a second\ninstance of same replica and adds it into in-mem clustermap.\nThe consequence is storage manager holds a different instance from Helix\nCluster Manager, which mistakenly adds self replica into peer replicas\nwhen performing replication catchup. It blocks decommission process\nbecause there is always a self replica that will never catch up.\nThis PR fixes this problem by maintaining boostrap replica set in\ncluster manager and it checks if there are existing replica instances when\nhanlding InstanceConfig change."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4c60b0bdfd6d73f8c2ac9e3be142157f9f77dd1", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/b4c60b0bdfd6d73f8c2ac9e3be142157f9f77dd1", "committedDate": "2020-03-25T16:09:17Z", "message": "fix test failure and add unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44b41c1d5529383ce1ac5c25cf0809e17f84b371", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/44b41c1d5529383ce1ac5c25cf0809e17f84b371", "committedDate": "2020-03-25T16:37:38Z", "message": "minor cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTU0NTA4", "url": "https://github.com/linkedin/ambry/pull/1435#pullrequestreview-382554508", "createdAt": "2020-03-27T03:10:27Z", "commit": {"oid": "44b41c1d5529383ce1ac5c25cf0809e17f84b371"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzoxMDoyOFrOF8huww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzoyNzoxMFrOF8h9eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxMTUyMw==", "bodyText": "Would it be worth having a metric for this event? Would this mean that the replica never gets added until the machine is restarted or will it get added eventually?", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399011523", "createdAt": "2020-03-27T03:10:28Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -360,10 +363,20 @@ private void addOrUpdateInstanceInfos(List<InstanceConfig> instanceConfigs) thro\n             // Ensure only one AmbryPartition instance exists for specific partition.\n             mappedPartition = clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition, replicaCapacity);\n             ensurePartitionAbsenceOnNodeAndValidateCapacity(mappedPartition, dataNode, replicaCapacity);\n-            // create new replica belonging to this partition\n-            AmbryReplica replica =\n-                new AmbryServerReplica(clusterMapConfig, mappedPartition, disk, stoppedReplicas.contains(partitionName),\n-                    replicaCapacity, sealedReplicas.contains(partitionName));\n+            // create new replica belonging to this partition or find the existing replica from bootstrapReplicas map.\n+            AmbryReplica replica;\n+            if (selfInstanceName.equals(instanceName)) {\n+              // if this is a newly added replica on current instance, it should be present in bootstrapReplicas map.\n+              replica = (AmbryReplica) bootstrapReplicas.remove(mappedPartition.toPathString());\n+              if (replica == null) {\n+                logger.warn(\"Replica {} is not present in bootstrap replica set, skip adding it to clustermap\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44b41c1d5529383ce1ac5c25cf0809e17f84b371"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNDUzNw==", "bodyText": "Instead of passing the map directly to DynamicClusterChangeHandler, could you add a AmbryReplica popBootstrapReplica(String partition) method to ClusterChangeHandlerCallback?", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399014537", "createdAt": "2020-03-27T03:23:55Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -360,10 +363,20 @@ private void addOrUpdateInstanceInfos(List<InstanceConfig> instanceConfigs) thro\n             // Ensure only one AmbryPartition instance exists for specific partition.\n             mappedPartition = clusterChangeHandlerCallback.addPartitionIfAbsent(mappedPartition, replicaCapacity);\n             ensurePartitionAbsenceOnNodeAndValidateCapacity(mappedPartition, dataNode, replicaCapacity);\n-            // create new replica belonging to this partition\n-            AmbryReplica replica =\n-                new AmbryServerReplica(clusterMapConfig, mappedPartition, disk, stoppedReplicas.contains(partitionName),\n-                    replicaCapacity, sealedReplicas.contains(partitionName));\n+            // create new replica belonging to this partition or find the existing replica from bootstrapReplicas map.\n+            AmbryReplica replica;\n+            if (selfInstanceName.equals(instanceName)) {\n+              // if this is a newly added replica on current instance, it should be present in bootstrapReplicas map.\n+              replica = (AmbryReplica) bootstrapReplicas.remove(mappedPartition.toPathString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44b41c1d5529383ce1ac5c25cf0809e17f84b371"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAxNTI5MA==", "bodyText": "No need to remove these, but for some reason, my formatter keeps the enum like this without compressing it onto one line like it used to. It may be different on different versions of LI intellij.", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399015290", "createdAt": "2020-03-27T03:27:10Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/test/java/com.github.ambry.clustermap/TestUtils.java", "diffHunk": "@@ -39,20 +39,24 @@\n   static final int DEFAULT_XID = 64;\n \n   enum ReplicaStateType {\n+    // @formatter:off\n     SealedState,\n     StoppedState\n+    // @formatter:om\n   }\n \n   /**\n    * Resource state associated with datanode, disk and replica.\n    */\n   enum ResourceState {\n+    // @formatter:off\n     Node_Up,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44b41c1d5529383ce1ac5c25cf0809e17f84b371"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a334651e1184c6c3d5bf7122443d4e049da3189", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/1a334651e1184c6c3d5bf7122443d4e049da3189", "committedDate": "2020-03-27T05:31:37Z", "message": "addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTU5MTcz", "url": "https://github.com/linkedin/ambry/pull/1435#pullrequestreview-383159173", "createdAt": "2020-03-27T19:53:50Z", "commit": {"oid": "1a334651e1184c6c3d5bf7122443d4e049da3189"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTo1Mzo1MFrOF8_5NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTo1NjowM1rOF8_9rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNTcxNg==", "bodyText": "Can this be just Map?", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399505716", "createdAt": "2020-03-27T19:53:50Z", "author": {"login": "lightningrob"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "diffHunk": "@@ -73,6 +73,7 @@\n   private final AtomicLong sealedStateChangeCounter = new AtomicLong(0);\n   private final PartitionSelectionHelper partitionSelectionHelper;\n   private final Map<String, Map<String, String>> partitionOverrideInfoMap = new HashMap<>();\n+  private final ConcurrentHashMap<String, ReplicaId> bootstrapReplicas = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a334651e1184c6c3d5bf7122443d4e049da3189"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwNjg2Mg==", "bodyText": "Pop makes it sound like a stack.  How about removeBootstrapReplica?", "url": "https://github.com/linkedin/ambry/pull/1435#discussion_r399506862", "createdAt": "2020-03-27T19:56:03Z", "author": {"login": "lightningrob"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "diffHunk": "@@ -617,6 +637,16 @@ void removeReplicasFromPartition(AmbryPartition partition, List<AmbryReplica> re\n     void addClusterWideRawCapacity(long diskRawCapacityBytes) {\n       clusterWideRawCapacityBytes.getAndAdd(diskRawCapacityBytes);\n     }\n+\n+    /**\n+     * Pop out bootstrap replica (if any) on current instance. A bootstrap replica is a replica dynamically added to\n+     * current node at runtime.\n+     * @param partitionName the partition name of bootstrap replica.\n+     * @return bootstrap replica or {@code null} if not found.\n+     */\n+    AmbryReplica popBootstrapReplica(String partitionName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a334651e1184c6c3d5bf7122443d4e049da3189"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTY5NTMw", "url": "https://github.com/linkedin/ambry/pull/1435#pullrequestreview-383169530", "createdAt": "2020-03-27T20:11:51Z", "commit": {"oid": "1a334651e1184c6c3d5bf7122443d4e049da3189"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "173928d0275d048d6d34841233e939a0d5d51236", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/173928d0275d048d6d34841233e939a0d5d51236", "committedDate": "2020-03-27T20:44:27Z", "message": "address Rob's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjYxNzE4", "url": "https://github.com/linkedin/ambry/pull/1435#pullrequestreview-383261718", "createdAt": "2020-03-28T00:22:16Z", "commit": {"oid": "173928d0275d048d6d34841233e939a0d5d51236"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1320, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}