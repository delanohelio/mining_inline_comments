{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NTM4MjAy", "number": 1594, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODoxMDo0NlrOEUtSEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo0NDozM1rOEUt7wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTQ4ODgzOnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODoxMDo0NlrOG7DuLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNToyMDoxMlrOG7lWQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4MDE0Mw==", "bodyText": "Optional: considering making this multi-threaded (one thread  per colo).\n(Never mind, it should be fine, as it's one-off operation)", "url": "https://github.com/linkedin/ambry/pull/1594#discussion_r464580143", "createdAt": "2020-08-03T18:10:46Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -700,20 +718,47 @@ private void uploadClusterAdminInfos(Map<String, Map<String, Map<String, String>\n    * @param adminConfigZNodePath the znode path of admin config.\n    */\n   private void deleteClusterAdminInfos(String clusterAdminType, String adminConfigZNodePath) {\n-    Properties storeProps = new Properties();\n-    storeProps.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n-    HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(storeProps));\n     for (Map.Entry<String, ClusterMapUtils.DcZkInfo> entry : dataCenterToZkAddress.entrySet()) {\n       info(\"Deleting {} infos for datacenter {}.\", clusterAdminType, entry.getKey());\n-      HelixPropertyStore<ZNRecord> helixPropertyStore =\n-          CommonUtils.createHelixPropertyStore(entry.getValue().getZkConnectStrs().get(0), propertyStoreConfig, null);\n+      HelixPropertyStore<ZNRecord> helixPropertyStore = createHelixPropertyStore(entry.getKey());\n       if (!helixPropertyStore.remove(adminConfigZNodePath, AccessOption.PERSISTENT)) {\n         logger.error(\"Failed to remove {} infos from datacenter {}\", clusterAdminType, entry.getKey());\n       }\n       helixPropertyStore.stop();\n     }\n   }\n \n+  /**\n+   * Convert instance configs to the new DataNodeConfig format and persist them in the property store.\n+   */\n+  private void migrateToPropertyStore() {\n+    adminForDc.forEach((dcName, helixAdmin) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec5614e239794de15b0218e20972645eceea7f9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEzMTA3NA==", "bodyText": "Parallelism is a good idea anyways. I made this multi-threaded since it doesn't add much complexity to the code.", "url": "https://github.com/linkedin/ambry/pull/1594#discussion_r465131074", "createdAt": "2020-08-04T15:20:12Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -700,20 +718,47 @@ private void uploadClusterAdminInfos(Map<String, Map<String, Map<String, String>\n    * @param adminConfigZNodePath the znode path of admin config.\n    */\n   private void deleteClusterAdminInfos(String clusterAdminType, String adminConfigZNodePath) {\n-    Properties storeProps = new Properties();\n-    storeProps.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n-    HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(storeProps));\n     for (Map.Entry<String, ClusterMapUtils.DcZkInfo> entry : dataCenterToZkAddress.entrySet()) {\n       info(\"Deleting {} infos for datacenter {}.\", clusterAdminType, entry.getKey());\n-      HelixPropertyStore<ZNRecord> helixPropertyStore =\n-          CommonUtils.createHelixPropertyStore(entry.getValue().getZkConnectStrs().get(0), propertyStoreConfig, null);\n+      HelixPropertyStore<ZNRecord> helixPropertyStore = createHelixPropertyStore(entry.getKey());\n       if (!helixPropertyStore.remove(adminConfigZNodePath, AccessOption.PERSISTENT)) {\n         logger.error(\"Failed to remove {} infos from datacenter {}\", clusterAdminType, entry.getKey());\n       }\n       helixPropertyStore.stop();\n     }\n   }\n \n+  /**\n+   * Convert instance configs to the new DataNodeConfig format and persist them in the property store.\n+   */\n+  private void migrateToPropertyStore() {\n+    adminForDc.forEach((dcName, helixAdmin) -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU4MDE0Mw=="}, "originalCommit": {"oid": "aec5614e239794de15b0218e20972645eceea7f9"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTU5NTUzOnYy", "diffSide": "LEFT", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo0NDozM1rOG7EuSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNToyNDozNVrOG7liWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU5NjU1NA==", "bodyText": "Thanks for simplifying this. Could you also make the change for uploadClusterAdminInfos method as well (line 701 ~ 705)?", "url": "https://github.com/linkedin/ambry/pull/1594#discussion_r464596554", "createdAt": "2020-08-03T18:44:33Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -700,20 +718,47 @@ private void uploadClusterAdminInfos(Map<String, Map<String, Map<String, String>\n    * @param adminConfigZNodePath the znode path of admin config.\n    */\n   private void deleteClusterAdminInfos(String clusterAdminType, String adminConfigZNodePath) {\n-    Properties storeProps = new Properties();\n-    storeProps.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n-    HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(storeProps));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec5614e239794de15b0218e20972645eceea7f9"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEzNDE3MQ==", "bodyText": "done", "url": "https://github.com/linkedin/ambry/pull/1594#discussion_r465134171", "createdAt": "2020-08-04T15:24:35Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -700,20 +718,47 @@ private void uploadClusterAdminInfos(Map<String, Map<String, Map<String, String>\n    * @param adminConfigZNodePath the znode path of admin config.\n    */\n   private void deleteClusterAdminInfos(String clusterAdminType, String adminConfigZNodePath) {\n-    Properties storeProps = new Properties();\n-    storeProps.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n-    HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(storeProps));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU5NjU1NA=="}, "originalCommit": {"oid": "aec5614e239794de15b0218e20972645eceea7f9"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1328, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}