{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzU4MDA1", "number": 1567, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMDo0NFrOEGCRbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMToyOFrOEGCSZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzY0MTQxOnYy", "diffSide": "RIGHT", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMDo0NFrOGklh8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyNToyNVrOGklsjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNjgxNw==", "bodyText": "Do we have a toString() for skipPredicate?", "url": "https://github.com/linkedin/ambry/pull/1567#discussion_r441016817", "createdAt": "2020-06-16T17:20:44Z", "author": {"login": "jsjtzyy"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -660,6 +660,7 @@ ReplicaMetadataResponse getReplicaMetadataResponse(List<RemoteReplicaInfo> repli\n       logger.trace(\"Remote node: {} Thread name: {} Remote replica: {} Key from remote: {}\", remoteNode, threadName,\n           remoteReplicaInfo.getReplicaId(), storeKey);\n       StoreKey convertedKey = storeKeyConverter.getConverted(storeKey);\n+      logger.trace(\"SkipPredicate: {}\", skipPredicate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3267b8b799042b0dfcc031fd052138af2790484"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTUzNA==", "bodyText": "Updated.", "url": "https://github.com/linkedin/ambry/pull/1567#discussion_r441019534", "createdAt": "2020-06-16T17:25:25Z", "author": {"login": "SophieGuo410"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -660,6 +660,7 @@ ReplicaMetadataResponse getReplicaMetadataResponse(List<RemoteReplicaInfo> repli\n       logger.trace(\"Remote node: {} Thread name: {} Remote replica: {} Key from remote: {}\", remoteNode, threadName,\n           remoteReplicaInfo.getReplicaId(), storeKey);\n       StoreKey convertedKey = storeKeyConverter.getConverted(storeKey);\n+      logger.trace(\"SkipPredicate: {}\", skipPredicate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNjgxNw=="}, "originalCommit": {"oid": "d3267b8b799042b0dfcc031fd052138af2790484"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzY0MzkwOnYy", "diffSide": "RIGHT", "path": "ambry-api/src/main/java/com/github/ambry/replication/ReplicationSkipPredicate.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyMToyOVrOGkljng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyNTozNFrOGkls1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzI0Ng==", "bodyText": "How about changing all trace to logger.debug?", "url": "https://github.com/linkedin/ambry/pull/1567#discussion_r441017246", "createdAt": "2020-06-16T17:21:29Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com/github/ambry/replication/ReplicationSkipPredicate.java", "diffHunk": "@@ -62,15 +62,18 @@ public boolean test(MessageInfo messageInfo) {\n       if (status == Container.ContainerStatus.DELETE_IN_PROGRESS &&\n           container.getDeleteTriggerTime() + TimeUnit.DAYS.toMillis(\n               replicationConfig.replicationContainerDeletionRetentionDays) < System.currentTimeMillis()) {\n+        logger.trace(\"Container {} is not qualified with retention time yet\", container);\n         return false;\n       }\n       if (status == Container.ContainerStatus.DELETE_IN_PROGRESS || status == Container.ContainerStatus.INACTIVE) {\n-        logger.info(\"Container {} will be skipped during replication\", container);\n+        logger.trace(\"Container {} will be skipped during replication\", container);\n         return true;\n       } else {\n+        logger.trace(\"Container {} is Active\", container);\n         return false;\n       }\n     } else {\n+      logger.trace(\"Current accountService : {}\", accountService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3267b8b799042b0dfcc031fd052138af2790484"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTYwNQ==", "bodyText": "Updated.", "url": "https://github.com/linkedin/ambry/pull/1567#discussion_r441019605", "createdAt": "2020-06-16T17:25:34Z", "author": {"login": "SophieGuo410"}, "path": "ambry-api/src/main/java/com/github/ambry/replication/ReplicationSkipPredicate.java", "diffHunk": "@@ -62,15 +62,18 @@ public boolean test(MessageInfo messageInfo) {\n       if (status == Container.ContainerStatus.DELETE_IN_PROGRESS &&\n           container.getDeleteTriggerTime() + TimeUnit.DAYS.toMillis(\n               replicationConfig.replicationContainerDeletionRetentionDays) < System.currentTimeMillis()) {\n+        logger.trace(\"Container {} is not qualified with retention time yet\", container);\n         return false;\n       }\n       if (status == Container.ContainerStatus.DELETE_IN_PROGRESS || status == Container.ContainerStatus.INACTIVE) {\n-        logger.info(\"Container {} will be skipped during replication\", container);\n+        logger.trace(\"Container {} will be skipped during replication\", container);\n         return true;\n       } else {\n+        logger.trace(\"Container {} is Active\", container);\n         return false;\n       }\n     } else {\n+      logger.trace(\"Current accountService : {}\", accountService);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNzI0Ng=="}, "originalCommit": {"oid": "d3267b8b799042b0dfcc031fd052138af2790484"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1283, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}