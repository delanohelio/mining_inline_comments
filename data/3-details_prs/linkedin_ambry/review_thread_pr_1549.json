{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTI5NzA1", "number": 1549, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0Nzo0MVrOECn9FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0Nzo0MVrOECn9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTg3MjIxOnYy", "diffSide": "RIGHT", "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreStats.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0Nzo0MVrOGfMeKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0Nzo0MVrOGfMeKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MzM2OA==", "bodyText": "I added a new interface instead of using Consumer<IndexEntry> or ThrowingConsumer<IndexEntry> since these some of these methods need to throw StoreException specifically unless many method signatures are changed", "url": "https://github.com/linkedin/ambry/pull/1549#discussion_r435363368", "createdAt": "2020-06-04T15:47:41Z", "author": {"login": "cgtz"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreStats.java", "diffHunk": "@@ -1130,4 +1116,16 @@ void cancel() {\n       cancelled = true;\n     }\n   }\n+\n+  /**\n+   * An action to take on a single {@link IndexEntry}\n+   */\n+  @FunctionalInterface\n+  private interface IndexEntryAction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bbdd0c75fa5734ca5e720aea306c19cf0973d2"}, "originalPosition": 205}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1230, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}