{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjQ2MTgz", "number": 1396, "title": "Support failure recovery for replica removal", "bodyText": "When decommissioning a replica(remove replica), there are three transitions to go through and node may crash at any point. This PR adds additional logic to help node resume decommission after restart. One thing to keep in mind is, if replica has been removed from IdealState in Helix, after rebooting the node, Helix always drags replica being removed to OFFLINE state (no matter what previous state it was before\nfailure) and directly triggers OFFLINE -> DROPPED. Hence, most of failure recovery logic is inserted into Offline-To-Dropped transition.", "createdAt": "2020-02-23T00:27:12Z", "url": "https://github.com/linkedin/ambry/pull/1396", "merged": true, "mergeCommit": {"oid": "237777498f5c1456469cef50961b427148b7b7aa"}, "closed": true, "closedAt": "2020-03-03T21:35:02Z", "author": {"login": "jsjtzyy"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcI0vxPgFqTM2NjEwNzgwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKJSYigFqTM2ODM0MTM0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTA3ODA5", "url": "https://github.com/linkedin/ambry/pull/1396#pullrequestreview-366107809", "createdAt": "2020-02-28T01:17:39Z", "commit": {"oid": "09aff284b7d3d5e77778db3b9e890e24fdeac0ab"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMToxNzo0MFrOFvmrlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTowNDo0MFrOFv_oBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2MTE0Mw==", "bodyText": "throw an unsupported error?", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r385461143", "createdAt": "2020-02-28T01:17:40Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/CloudStorageManager.java", "diffHunk": "@@ -136,6 +143,10 @@ public ServerErrorCode checkLocalPartitionStatus(PartitionId partition, ReplicaI\n     return ServerErrorCode.No_Error;\n   }\n \n+  @Override\n+  public void registerDecommissionCallback(Callback<ReplicaId> callback) {\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aff284b7d3d5e77778db3b9e890e24fdeac0ab"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3MDQzNw==", "bodyText": "should keep these two method accessible only within the package.", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r385470437", "createdAt": "2020-02-28T01:53:27Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryReplicaSyncUpManager.java", "diffHunk": "@@ -209,6 +209,20 @@ public void onDisconnectionError(ReplicaId replicaId) {\n     countDownLatch(partitionToDisconnectionLatch, replicaId.getPartitionId().toPathString());\n   }\n \n+  /**\n+   * @return the map whose key is partition name and the value is corresponding deactivation latch.\n+   */\n+  public ConcurrentHashMap<String, CountDownLatch> getPartitionToDeactivationLatch() {\n+    return partitionToDeactivationLatch;\n+  }\n+\n+  /**\n+   * @return the map whose key is partition name and the value is corresponding disconnection latch.\n+   */\n+  public ConcurrentHashMap<String, CountDownLatch> getPartitionToDisconnectionLatch() {\n+    return partitionToDisconnectionLatch;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aff284b7d3d5e77778db3b9e890e24fdeac0ab"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2OTgzMQ==", "bodyText": "Can we structure the code so that we don't copy the logic from replication manager and stats manager here?\nWe can probably having a reference of ReplicationManagerListener and StatsManagerListener here and just call\nlistener.becomeInactiveFromStandby and listener.becomeOfflineFromInactive.", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r385869831", "createdAt": "2020-02-28T19:04:40Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com.github.ambry.store/StorageManager.java", "diffHunk": "@@ -376,6 +396,67 @@ int getCompactionThreadCount() {\n     return count;\n   }\n \n+  /**\n+   * This method is called by Offline-To-Dropped transition. Any errors/exceptions will be thrown and converted to\n+   * {@link StateTransitionException}. The error/exception is also recorded in certain metric for alerting purpose.\n+   */\n+  private void resumeDecommission(ReplicaId replica) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09aff284b7d3d5e77778db3b9e890e24fdeac0ab"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14da828da09b6bae09d3e4d1726840359ebaf0bb", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/14da828da09b6bae09d3e4d1726840359ebaf0bb", "committedDate": "2020-03-01T18:56:35Z", "message": "Support failure recovery for replica removal\n\nWhen decommissioning a replica(remove replica), there are three\ntransitions to go through and node may crash at any point. This PR adds\nadditional logic to help node resume decommission after restart. One\nthing to keep in mind is, if replica has been removed from IdealState in\nHelix, after rebooting the node, Helix always drags replica being\nremoved to OFFLINE state (no matter what previous state it was before\nfailure) and directly triggers OFFLINE -> DROPPED. Hence, most of\nfailure recovery logic is inserted into Offline-To-Dropped transition."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ab90fcf799c88cdf495e6dca087915912818ece", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/4ab90fcf799c88cdf495e6dca087915912818ece", "committedDate": "2020-03-01T18:56:35Z", "message": "clean up and add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a04f9a5cbb549e73dcd55d01ce81825ede41340", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/0a04f9a5cbb549e73dcd55d01ce81825ede41340", "committedDate": "2020-03-01T18:56:35Z", "message": "add one more unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b653dd2ef21737f9919d1ad1c91f87584e12182", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/7b653dd2ef21737f9919d1ad1c91f87584e12182", "committedDate": "2020-03-01T18:56:36Z", "message": "add test case and remove unnecessary code in AmbryServerRequests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86994da1ac399a6f939cc2d1878287ed6ee55d10", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/86994da1ac399a6f939cc2d1878287ed6ee55d10", "committedDate": "2020-03-02T07:06:36Z", "message": "addressed comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09aff284b7d3d5e77778db3b9e890e24fdeac0ab", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/09aff284b7d3d5e77778db3b9e890e24fdeac0ab", "committedDate": "2020-02-26T22:38:02Z", "message": "add test case and remove unnecessary code in AmbryServerRequests"}, "afterCommit": {"oid": "86994da1ac399a6f939cc2d1878287ed6ee55d10", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/86994da1ac399a6f939cc2d1878287ed6ee55d10", "committedDate": "2020-03-02T07:06:36Z", "message": "addressed comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a1767e71431d971729360a9e6f0f417099ee347", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/8a1767e71431d971729360a9e6f0f417099ee347", "committedDate": "2020-03-02T18:00:39Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NjIyMTQx", "url": "https://github.com/linkedin/ambry/pull/1396#pullrequestreview-367622141", "createdAt": "2020-03-03T00:14:11Z", "commit": {"oid": "8a1767e71431d971729360a9e6f0f417099ee347"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMDoxNDoxMVrOFw0COA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMDoyMToxMFrOFw0Kpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyODUwNA==", "bodyText": "not used.", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r386728504", "createdAt": "2020-03-03T00:14:11Z", "author": {"login": "zzmao"}, "path": "ambry-api/src/main/java/com.github.ambry/server/StoreManager.java", "diffHunk": "@@ -15,7 +15,9 @@\n \n import com.github.ambry.clustermap.PartitionId;\n import com.github.ambry.clustermap.ReplicaId;\n+import com.github.ambry.router.Callback;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a1767e71431d971729360a9e6f0f417099ee347"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjczMDM0Mw==", "bodyText": "not used.", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r386730343", "createdAt": "2020-03-03T00:20:16Z", "author": {"login": "zzmao"}, "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/CloudStorageManager.java", "diffHunk": "@@ -17,9 +17,11 @@\n import com.github.ambry.clustermap.PartitionId;\n import com.github.ambry.clustermap.ReplicaId;\n import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.router.Callback;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a1767e71431d971729360a9e6f0f417099ee347"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjczMDY2Mw==", "bodyText": "not used.", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r386730663", "createdAt": "2020-03-03T00:21:10Z", "author": {"login": "zzmao"}, "path": "ambry-replication/src/main/java/com.github.ambry.replication/ReplicationManager.java", "diffHunk": "@@ -29,6 +29,7 @@\n import com.github.ambry.config.StoreConfig;\n import com.github.ambry.network.ConnectionPool;\n import com.github.ambry.notification.NotificationSystem;\n+import com.github.ambry.router.Callback;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a1767e71431d971729360a9e6f0f417099ee347"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a56c96a86161efe73a2969e2ea867d54074c68", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/16a56c96a86161efe73a2969e2ea867d54074c68", "committedDate": "2020-03-03T00:55:23Z", "message": "address Ze's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NjUyOTE1", "url": "https://github.com/linkedin/ambry/pull/1396#pullrequestreview-367652915", "createdAt": "2020-03-03T01:47:30Z", "commit": {"oid": "16a56c96a86161efe73a2969e2ea867d54074c68"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMTo0NzozMFrOFw1szQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMjowODoxOVrOFw2Cow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc1NTc4OQ==", "bodyText": "please add Override annotation to HelixParticipant's implementation on this method.", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r386755789", "createdAt": "2020-03-03T01:47:30Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-api/src/main/java/com.github.ambry/clustermap/ClusterParticipant.java", "diffHunk": "@@ -91,6 +92,11 @@ void registerPartitionStateChangeListener(StateModelListenerType listenerType,\n   default void initializeParticipantMetrics(int localPartitionCount) {\n   }\n \n+  /**\n+   * @return a map of registered state change listeners (if there are any) in this cluster participant.\n+   */\n+  Map<StateModelListenerType, PartitionStateChangeListener> getPartitionStateChangeListeners();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a56c96a86161efe73a2969e2ea867d54074c68"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc2MTM3OQ==", "bodyText": "can you add comment to this method to explain why we have to perform those actions in this order?", "url": "https://github.com/linkedin/ambry/pull/1396#discussion_r386761379", "createdAt": "2020-03-03T02:08:19Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com.github.ambry.store/StorageManager.java", "diffHunk": "@@ -536,5 +615,26 @@ public void onPartitionBecomeDroppedFromOffline(String partitionName) {\n       partitionNameToReplicaId.remove(partitionName);\n       logger.info(\"Partition {} is successfully dropped on current node\", partitionName);\n     }\n+\n+    /**\n+     * This method is called by Offline-To-Dropped transition. Any errors/exceptions will be thrown and converted to\n+     * {@link StateTransitionException}. The error/exception is also recorded in certain metric for alerting purpose.\n+     */\n+    private void resumeDecommission(String partitionName) throws Exception {\n+      logger.info(\"Resuming decommission on replica {}\", partitionName);\n+      // 1. perform Standby-To-Inactive transition in StorageManager\n+      onPartitionBecomeInactiveFromStandby(partitionName);\n+      if (replicationManagerListener != null && replicaSyncUpManager != null) {\n+        // 2. perform Standby-To-Inactive transition in ReplicationManager\n+        replicationManagerListener.onPartitionBecomeInactiveFromStandby(partitionName);\n+        replicaSyncUpManager.waitDeactivationCompleted(partitionName);\n+        // 3. perform Inactive-To-Offline transition in ReplicationManager\n+        replicationManagerListener.onPartitionBecomeOfflineFromInactive(partitionName);\n+        replicaSyncUpManager.waitDisconnectionCompleted(partitionName);\n+      }\n+      // 4. perform Inactive-To-Offline transition in StorageManager\n+      onPartitionBecomeOfflineFromInactive(partitionName);\n+      logger.info(\"Decommission on replica {} is almost done, dropping it from current node\", partitionName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a56c96a86161efe73a2969e2ea867d54074c68"}, "originalPosition": 182}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c849d22d091487eda0afef0e758ccd5fb890a64", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/3c849d22d091487eda0afef0e758ccd5fb890a64", "committedDate": "2020-03-03T05:08:35Z", "message": "address Justin's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzQxMzQ5", "url": "https://github.com/linkedin/ambry/pull/1396#pullrequestreview-368341349", "createdAt": "2020-03-03T21:34:33Z", "commit": {"oid": "3c849d22d091487eda0afef0e758ccd5fb890a64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1637, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}