{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTM3NzY3", "number": 1405, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo0OToyMFrODkGzyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDowOToxN1rODloapQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTg2ODg4OnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo0OToyMFrOFwQFYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo0OToyMFrOFwQFYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTQ4OA==", "bodyText": "Instead of copying the list and requiring a (potentially) unsafe cast. I think we could make more use of generics in ClusterManagerCallback.", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386139488", "createdAt": "2020-03-01T20:49:20Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "diffHunk": "@@ -64,12 +65,18 @@\n \n   @Override\n   public List<AmbryReplica> getReplicaIds() {\n-    return clusterManagerCallback.getReplicaIdsForPartition(this);\n+    return clusterManagerCallback.getReplicaIdsForPartition(this)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTg2OTQzOnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo1MDozNFrOFwQFqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTo0ODo1NlrOFxXyHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTU2MQ==", "bodyText": "ClusterManagerCallback<R extends ReplicaId, D extends DiskId, P extends PartitionId>", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386139561", "createdAt": "2020-03-01T20:50:34Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java", "diffHunk": "@@ -18,26 +18,25 @@\n \n \n /**\n- * A callback that needs to be implemented by dynamic implementations of the cluster manager which can be\n- * used by dynamic cluster manager components such as {@link AmbryDataNode}, {@link AmbryDisk},\n- * {@link AmbryPartition}, and {@link AmbryReplica}\n+ * A callback that needs to be implemented by different implementations of the cluster manager. External components may\n+ * get resources (i.e. {@link ReplicaId}, {@link PartitionId}, {@link DiskId}) via this callback.\n  */\n interface ClusterManagerCallback {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMxNDIwNw==", "bodyText": "good point, changes are made", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r387314207", "createdAt": "2020-03-03T21:48:56Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/ClusterManagerCallback.java", "diffHunk": "@@ -18,26 +18,25 @@\n \n \n /**\n- * A callback that needs to be implemented by dynamic implementations of the cluster manager which can be\n- * used by dynamic cluster manager components such as {@link AmbryDataNode}, {@link AmbryDisk},\n- * {@link AmbryPartition}, and {@link AmbryReplica}\n+ * A callback that needs to be implemented by different implementations of the cluster manager. External components may\n+ * get resources (i.e. {@link ReplicaId}, {@link PartitionId}, {@link DiskId}) via this callback.\n  */\n interface ClusterManagerCallback {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTU2MQ=="}, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MTg3MDYxOnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo1Mjo0MFrOFwQGQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMDo1Mjo0MFrOFwQGQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzOTcxNQ==", "bodyText": "And then pass in ClusterManagerCallback<AmbryReplica, AmbryDisk, AmbryPartition> here and in other similar classes, which will get rid of the need for the copies/casts.", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386139715", "createdAt": "2020-03-01T20:52:40Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "diffHunk": "@@ -46,7 +47,7 @@\n    * Instantiate an AmbryPartition instance.\n    * @param id the id associated with this partition.\n    * @param partitionClass the partition class that this partition belongs to\n-   * @param clusterManagerCallback the {@link ClusterManagerCallback} to use to make callbacks\n+   * @param clusterManagerCallback the {@link HelixClusterManager.HelixClusterManagerCallback} to use to make callbacks\n    *                               to the {@link HelixClusterManager}\n    * The initial state defaults to {@link PartitionState#READ_WRITE}.\n    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjI4NzgwOnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNToxNDoxM1rOFwTzkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMToxNTowNFrOFy1VMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMDQ2NQ==", "bodyText": "why not just return the added replicas instead of pair?", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386200465", "createdAt": "2020-03-02T05:14:13Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -393,11 +421,12 @@ private void updateReplicaStateAndOverrideIfNeeded(AmbryReplica replica, List<St\n   /**\n    * Create a new instance(node) and initialize disks/replicas on it.\n    * @param instanceConfig the {@link InstanceConfig} to create new instance\n+   * @return a pair of lists: (1) newly added replicas; (2) removed old replicas(in this method, it should be empty)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg0Njg5OQ==", "bodyText": "Return a pair instead of return multiple values in java function(not allowed)? Just curious about this.", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r388846899", "createdAt": "2020-03-06T11:15:04Z", "author": {"login": "xuhao417347761"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/DynamicClusterChangeHandler.java", "diffHunk": "@@ -393,11 +421,12 @@ private void updateReplicaStateAndOverrideIfNeeded(AmbryReplica replica, List<St\n   /**\n    * Create a new instance(node) and initialize disks/replicas on it.\n    * @param instanceConfig the {@link InstanceConfig} to create new instance\n+   * @return a pair of lists: (1) newly added replicas; (2) removed old replicas(in this method, it should be empty)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMDQ2NQ=="}, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MjMzNjA0OnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNTo1MjozOFrOFwUQMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMjowMTozNVrOFxYK2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwNzc5Mg==", "bodyText": "Any reason to hook into the cluster change handler instead of ClusterChangeHandlerCallback? I was considering adding some logic that would call a hook directly from addPartitionIfAbsent", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r386207792", "createdAt": "2020-03-02T05:52:38Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "diffHunk": "@@ -510,7 +512,9 @@ public ReplicaId getBootstrapReplica(String partitionIdStr, DataNodeId dataNodeI\n \n   @Override\n   public void registerClusterMapListener(ClusterMapChangeListener clusterMapChangeListener) {\n-    clusterMapChangeListeners.add(clusterMapChangeListener);\n+    for (DcInfo dcInfo : dcToDcZkInfo.values()) {\n+      dcInfo.clusterChangeHandler.registerClusterMapListener(clusterMapChangeListener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzMyMDUzNg==", "bodyText": "Discussed offline. Basically, the ClusterChangeHandlerCallback. addPartitionIfAbsent() might be called multiple times in the for-loop (see updateInstanceInfo method in DynamicClusterChangeHandler). What I am doing is to aggregate the added replicas and invoke callback in PartitionSelectionHelper only once.", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r387320536", "createdAt": "2020-03-03T22:01:35Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/HelixClusterManager.java", "diffHunk": "@@ -510,7 +512,9 @@ public ReplicaId getBootstrapReplica(String partitionIdStr, DataNodeId dataNodeI\n \n   @Override\n   public void registerClusterMapListener(ClusterMapChangeListener clusterMapChangeListener) {\n-    clusterMapChangeListeners.add(clusterMapChangeListener);\n+    for (DcInfo dcInfo : dcToDcZkInfo.values()) {\n+      dcInfo.clusterChangeHandler.registerClusterMapListener(clusterMapChangeListener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwNzc5Mg=="}, "originalCommit": {"oid": "41f31387ea6be5d992961efb7d73f981c2efa2b6"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzg2MDg1OnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDowOToxN1rOFyoh4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDowOToxN1rOFyoh4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODYzNzE1NQ==", "bodyText": "For long type names like this, I wish java had typedef statements, but alas it does not", "url": "https://github.com/linkedin/ambry/pull/1405#discussion_r388637155", "createdAt": "2020-03-06T00:09:17Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com.github.ambry.clustermap/AmbryPartition.java", "diffHunk": "@@ -32,7 +32,7 @@\n public class AmbryPartition implements PartitionId {\n   private final Long id;\n   private final String partitionClass;\n-  private final ClusterManagerCallback clusterManagerCallback;\n+  private final ClusterManagerCallback<AmbryReplica, AmbryDisk, AmbryPartition, AmbryDataNode> clusterManagerCallback;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c0f95891aab57f8c85d16d0ef212f6bda9967ba"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1746, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}