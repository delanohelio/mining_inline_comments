{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxODg1ODQ2", "number": 1656, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoyMTozNFrOEtKzxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODozMzo0OVrOEtLENQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Nzk4NDY5OnYy", "diffSide": "RIGHT", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoyMTozNFrOHgz6IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoyMTozNFrOHgz6IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2Njk0NQ==", "bodyText": "+1 to AtomicReference", "url": "https://github.com/linkedin/ambry/pull/1656#discussion_r504166945", "createdAt": "2020-10-13T18:21:34Z", "author": {"login": "lightningrob"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -1549,15 +1557,15 @@ private void onInvalidRange(Exception exception) {\n class DecryptCallBackResultInfo {\n   volatile boolean decryptJobComplete;\n   volatile Exception exception;\n-  volatile DecryptJob.DecryptJobResult result;\n+  AtomicReference<DecryptJob.DecryptJobResult> result = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142597248818fafb0895366890f8b971030b97b8"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODAyMzc5OnYy", "diffSide": "RIGHT", "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreStatsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODozMjo1NVrOHg0Sng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODozMjo1NVrOHg0Sng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3MzIxNA==", "bodyText": "If you pull latest master branch, you can use:\nif (!TestUtils.checkAndSleep(() -> blobStoreStats.isRecentEntryQueueEnabled(), 10000)) {\n  throw new TimeoutException(\"Time out to wait for IndexScanner to finish\");\n}", "url": "https://github.com/linkedin/ambry/pull/1656#discussion_r504173214", "createdAt": "2020-10-13T18:32:55Z", "author": {"login": "lightningrob"}, "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreStatsTest.java", "diffHunk": "@@ -752,7 +754,15 @@ public void testBucketingWithEmptyIndexToBegin()\n     throttlers.put(BlobStoreStats.IO_SCHEDULER_JOB_TYPE, mockThrottler);\n     int bucketCount = 50;\n     BlobStoreStats blobStoreStats = setupBlobStoreStats(bucketCount, 0);\n-    int expectedThrottleCount = state.referenceIndex.size();\n+    // Make sure the index scanner is finished and we can enqueue\n+    long recentEntryQueueTimeout = 10 * SystemTime.MsPerSec + System.currentTimeMillis();\n+    while (!blobStoreStats.isRecentEntryQueueEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142597248818fafb0895366890f8b971030b97b8"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODAyNjc3OnYy", "diffSide": "RIGHT", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODozMzo0OVrOHg0UhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODozMzo0OVrOHg0UhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3MzcwMA==", "bodyText": "nit, it may be a bit more readable to do the getandset on this line:\nDecryptJob.DecryptJobResult result = decryptCallbackResultInfo.result.getAndSet(null);\nif (result != null) {...", "url": "https://github.com/linkedin/ambry/pull/1656#discussion_r504173700", "createdAt": "2020-10-13T18:33:49Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -715,13 +716,17 @@ protected void maybeProcessCallbacks() {\n         // Only when the blob is encrypted should we need to call this method. When finish decryption, we don't need\n         // response info anymore.\n         if (decryptCallbackResultInfo.exception == null) {\n-          chunkIndexToBuf.put(chunkIndex,\n-              filterChunkToRange(decryptCallbackResultInfo.result.getDecryptedBlobContent()));\n-          numChunksRetrieved.incrementAndGet();\n+          DecryptJob.DecryptJobResult result = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142597248818fafb0895366890f8b971030b97b8"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1075, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}