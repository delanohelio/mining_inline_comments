{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzg4OTg4", "number": 1713, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzo1MzowOVrOFAnLhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNTo1NzozM1rOFAo6Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTg2MjQ1OnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/DeprecatedContainerCloudSyncTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzo1MzowOVrOH-_q6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODoyNjo0NVrOH_F6KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNjkzOA==", "bodyText": "Minor: Don't need String..format in logger call, use {} instead.", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535816938", "createdAt": "2020-12-04T03:53:09Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/DeprecatedContainerCloudSyncTask.java", "diffHunk": "@@ -40,20 +42,29 @@\n    * @param cloudDestination the {@link CloudDestination} object where deprecated container information will be updated.\n    */\n   public DeprecatedContainerCloudSyncTask(AccountService accountService, long containerDeletionRetentionDays,\n-      CloudDestination cloudDestination) {\n+      CloudDestination cloudDestination, VcrMetrics vcrMetrics) {\n     this.accountService = accountService;\n     this.containerDeletionRetentionDays = containerDeletionRetentionDays;\n     this.cloudDestination = cloudDestination;\n+    this.vcrMetrics = vcrMetrics;\n   }\n \n   @Override\n   public TaskResult run() {\n+    Timer.Context deprecationTaskRunTimer = vcrMetrics.deprecationTaskRunTime.time();\n     try {\n+      logger.info(\"DeprecatedContainerCloudSyncTask run started.\");\n+      Timer.Context accountServiceFetchTimer = vcrMetrics.accountServiceFetchTime.time();\n       Set<Container> deprecatedContainers =\n           AccountUtils.getDeprecatedContainers(accountService, containerDeletionRetentionDays);\n+      accountServiceFetchTimer.stop();\n+      logger.info(String.format(\"Attempting deprecation of %d containers.\", deprecatedContainers.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkxOTE0NA==", "bodyText": "fixed.", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535919144", "createdAt": "2020-12-04T08:26:45Z", "author": {"login": "ankagrawal"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/DeprecatedContainerCloudSyncTask.java", "diffHunk": "@@ -40,20 +42,29 @@\n    * @param cloudDestination the {@link CloudDestination} object where deprecated container information will be updated.\n    */\n   public DeprecatedContainerCloudSyncTask(AccountService accountService, long containerDeletionRetentionDays,\n-      CloudDestination cloudDestination) {\n+      CloudDestination cloudDestination, VcrMetrics vcrMetrics) {\n     this.accountService = accountService;\n     this.containerDeletionRetentionDays = containerDeletionRetentionDays;\n     this.cloudDestination = cloudDestination;\n+    this.vcrMetrics = vcrMetrics;\n   }\n \n   @Override\n   public TaskResult run() {\n+    Timer.Context deprecationTaskRunTimer = vcrMetrics.deprecationTaskRunTime.time();\n     try {\n+      logger.info(\"DeprecatedContainerCloudSyncTask run started.\");\n+      Timer.Context accountServiceFetchTimer = vcrMetrics.accountServiceFetchTime.time();\n       Set<Container> deprecatedContainers =\n           AccountUtils.getDeprecatedContainers(accountService, containerDeletionRetentionDays);\n+      accountServiceFetchTimer.stop();\n+      logger.info(String.format(\"Attempting deprecation of %d containers.\", deprecatedContainers.size()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxNjkzOA=="}, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTg3MjYwOnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/HelixVcrCluster.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzo1NzoyNlrOH-_wOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODozNjoxNVrOH_GOkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxODI5OQ==", "bodyText": "What's the effect of the failure?  Is it safe to just log and continue?  I guess container deprecation isn't fail fast situation, but how will we know something is wrong if we don't see the log message?", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535818299", "createdAt": "2020-12-04T03:57:26Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/HelixVcrCluster.java", "diffHunk": "@@ -181,12 +184,16 @@ private void registerContainerDeletionSyncTask(StateMachineEngine engine) {\n         @Override\n         public Task createNewTask(TaskCallbackContext context) {\n           return new DeprecatedContainerCloudSyncTask(accountService, storeConfig.storeContainerDeletionRetentionDays,\n-              cloudDestination);\n+              cloudDestination, vcrMetrics);\n         }\n       });\n       if (!taskFactoryMap.isEmpty()) {\n-        engine.registerStateModelFactory(TaskConstants.STATE_MODEL_NAME,\n-            new TaskStateModelFactory(manager, taskFactoryMap));\n+        if (engine.registerStateModelFactory(TaskConstants.STATE_MODEL_NAME,\n+            new TaskStateModelFactory(manager, taskFactoryMap))) {\n+          logger.info(\"Container deletion sync task registered with helix.\");\n+        } else {\n+          logger.error(\"Container deletion sync task registration with helix failed.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyNDM3MQ==", "bodyText": "The sync task will fail if the registration fails. In this case no new containers will be deprecated in cloud.\nAdded a metrics to track task registration failures. We can create an alert on this metric.", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535924371", "createdAt": "2020-12-04T08:36:15Z", "author": {"login": "ankagrawal"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/HelixVcrCluster.java", "diffHunk": "@@ -181,12 +184,16 @@ private void registerContainerDeletionSyncTask(StateMachineEngine engine) {\n         @Override\n         public Task createNewTask(TaskCallbackContext context) {\n           return new DeprecatedContainerCloudSyncTask(accountService, storeConfig.storeContainerDeletionRetentionDays,\n-              cloudDestination);\n+              cloudDestination, vcrMetrics);\n         }\n       });\n       if (!taskFactoryMap.isEmpty()) {\n-        engine.registerStateModelFactory(TaskConstants.STATE_MODEL_NAME,\n-            new TaskStateModelFactory(manager, taskFactoryMap));\n+        if (engine.registerStateModelFactory(TaskConstants.STATE_MODEL_NAME,\n+            new TaskStateModelFactory(manager, taskFactoryMap))) {\n+          logger.info(\"Container deletion sync task registered with helix.\");\n+        } else {\n+          logger.error(\"Container deletion sync task registration with helix failed.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxODI5OQ=="}, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTg3NzMxOnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMzo1OTo0NlrOH-_yyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODo1MDowNFrOH_Gvsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxODk1NA==", "bodyText": "Same here.", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535818954", "createdAt": "2020-12-04T03:59:46Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "diffHunk": "@@ -122,9 +132,14 @@ public void compactAssignedDeprecatedContainers(Collection<? extends PartitionId\n         containerDeletionEntrySet.remove(containerDeletionEntry);\n         for (String partitionId : containerDeletionEntry.getDeletePendingPartitions()) {\n           try {\n+            logger.info(String.format(\"Starting compaction of container %d, account %d in partition %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzMjg1MQ==", "bodyText": "fixed.", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535932851", "createdAt": "2020-12-04T08:50:04Z", "author": {"login": "ankagrawal"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "diffHunk": "@@ -122,9 +132,14 @@ public void compactAssignedDeprecatedContainers(Collection<? extends PartitionId\n         containerDeletionEntrySet.remove(containerDeletionEntry);\n         for (String partitionId : containerDeletionEntry.getDeletePendingPartitions()) {\n           try {\n+            logger.info(String.format(\"Starting compaction of container %d, account %d in partition %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgxODk1NA=="}, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTg4OTcyOnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDowNTozMVrOH-_5ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODo0MjozOFrOH_GdXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDY1MA==", "bodyText": "When does this throw CloudStorageException?", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535820650", "createdAt": "2020-12-04T04:05:31Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "diffHunk": "@@ -67,16 +68,20 @@\n    * @param cloudConfig {@link CloudConfig} object.\n    * @param vcrMetrics {@link VcrMetrics} object.\n    * @param azureMetrics {@link AzureMetrics} object.\n+   * @throws CloudStorageException if case of any error.\n    */\n   public AzureContainerCompactor(AzureBlobDataAccessor azureBlobDataAccessor, CosmosDataAccessor cosmosDataAccessor,\n-      CloudConfig cloudConfig, AzureCloudConfig azureCloudConfig, VcrMetrics vcrMetrics, AzureMetrics azureMetrics) {\n+      CloudConfig cloudConfig, AzureCloudConfig azureCloudConfig, VcrMetrics vcrMetrics, AzureMetrics azureMetrics)\n+      throws CloudStorageException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkyODE1Ng==", "bodyText": "It throws CloudStorageException due to this.latestContainerDeletionTimestamp = getLatestContainerDeletionTime() at line 83. This fetches the last timestamp upto which cosmos db container deprecation table is in sync with account service.", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535928156", "createdAt": "2020-12-04T08:42:38Z", "author": {"login": "ankagrawal"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "diffHunk": "@@ -67,16 +68,20 @@\n    * @param cloudConfig {@link CloudConfig} object.\n    * @param vcrMetrics {@link VcrMetrics} object.\n    * @param azureMetrics {@link AzureMetrics} object.\n+   * @throws CloudStorageException if case of any error.\n    */\n   public AzureContainerCompactor(AzureBlobDataAccessor azureBlobDataAccessor, CosmosDataAccessor cosmosDataAccessor,\n-      CloudConfig cloudConfig, AzureCloudConfig azureCloudConfig, VcrMetrics vcrMetrics, AzureMetrics azureMetrics) {\n+      CloudConfig cloudConfig, AzureCloudConfig azureCloudConfig, VcrMetrics vcrMetrics, AzureMetrics azureMetrics)\n+      throws CloudStorageException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMDY1MA=="}, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjE0NTk4OnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNTo1NzozM1rOH_CBOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwODo1MTowMFrOH_GyAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NTQxNw==", "bodyText": "minor: will this be used in the future pr?", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535855417", "createdAt": "2020-12-04T05:57:33Z", "author": {"login": "SophieGuo410"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "diffHunk": "@@ -139,6 +154,13 @@ public void compactAssignedDeprecatedContainers(Collection<? extends PartitionId\n     }\n   }\n \n+  /**\n+   * @return the latest container deletion timestamp.\n+   */\n+  public long getLatestContainerDeletionTimestamp() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzMzQ0MA==", "bodyText": "Its being used in AzureMetrics class.", "url": "https://github.com/linkedin/ambry/pull/1713#discussion_r535933440", "createdAt": "2020-12-04T08:51:00Z", "author": {"login": "ankagrawal"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureContainerCompactor.java", "diffHunk": "@@ -139,6 +154,13 @@ public void compactAssignedDeprecatedContainers(Collection<? extends PartitionId\n     }\n   }\n \n+  /**\n+   * @return the latest container deletion timestamp.\n+   */\n+  public long getLatestContainerDeletionTimestamp() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1NTQxNw=="}, "originalCommit": {"oid": "919e75fb0bf98e710c6d4808c451a454d2a845bc"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1160, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}