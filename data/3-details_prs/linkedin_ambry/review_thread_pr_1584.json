{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDkwNDM1", "number": 1584, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzowMzowN1rOEO8bAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowOToxNVrOEPLNNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTA1NDcyOnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzowMzowN1rOGyYYJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzozNzoxM1rOGyY6fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MTM4MA==", "bodyText": "Do we have to call the helixPropertyStore.stop() and close() methods after we are done using the property store? Same comment for its usage in HelixParticipant.", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455481380", "createdAt": "2020-07-16T03:03:07Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -1072,6 +1074,24 @@ private void addUpdateResources(String dcName, Map<String, Set<String>> partitio\n         }\n       }\n     }\n+    // if there are some partitions are disabled, mark whole disabling process complete in Helix PropertyStore\n+    if (helixAdminOperation == HelixAdminOperation.DisablePartition && !instancesWithDisabledPartition.isEmpty()) {\n+      // create znode under admin configs\n+      Properties storeProps = new Properties();\n+      storeProps.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n+      HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(storeProps));\n+      String zkConnectStr = dataCenterToZkAddress.get(dcName).getZkConnectStrs().get(0);\n+      HelixPropertyStore<ZNRecord> helixPropertyStore =\n+          CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5MDE3Mg==", "bodyText": "Good point. Since this is one-off change, we should close it after updating the property store in Helix.", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455490172", "createdAt": "2020-07-16T03:37:13Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -1072,6 +1074,24 @@ private void addUpdateResources(String dcName, Map<String, Set<String>> partitio\n         }\n       }\n     }\n+    // if there are some partitions are disabled, mark whole disabling process complete in Helix PropertyStore\n+    if (helixAdminOperation == HelixAdminOperation.DisablePartition && !instancesWithDisabledPartition.isEmpty()) {\n+      // create znode under admin configs\n+      Properties storeProps = new Properties();\n+      storeProps.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n+      HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(storeProps));\n+      String zkConnectStr = dataCenterToZkAddress.get(dcName).getZkConnectStrs().get(0);\n+      HelixPropertyStore<ZNRecord> helixPropertyStore =\n+          CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MTM4MA=="}, "originalCommit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTA2Njc3OnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzowOTo0NVrOGyYfCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1NDoyM1rOGyZLXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzE0NQ==", "bodyText": "Do these paths have to be manually removed using a zookeeper client after the decommission is complete and all replicas have called removeOldReplicaInfo()?\nWhat if, instead, HelixBootStrapUpgradeTool created a znode before it begins updating using HelixAdmin and then deletes it after it is finished? Than, this loop could wait for the znode to stop existing.", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455483145", "createdAt": "2020-07-16T03:09:45Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "diffHunk": "@@ -415,6 +437,27 @@ private boolean removeOldReplicaInfo(ReplicaId replicaId, InstanceConfig instanc\n     return removalResult;\n   }\n \n+  /**\n+   * Wait until disabling partition process has completed. This is to avoid race condition where server and Helix may\n+   * modify same InstanceConfig.\n+   * TODO remove this method after migrating ambry to PropertyStore (in Helix).\n+   * @throws InterruptedException\n+   */\n+  private void awaitDisablingPartition() throws InterruptedException {\n+    Properties properties = new Properties();\n+    properties.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n+    HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(properties));\n+    HelixPropertyStore<ZNRecord> helixPropertyStore =\n+        CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);\n+    String path = PARTITION_DISABLED_ZNODE_PATH + instanceName;\n+    int count = 1;\n+    while (!helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDQ5Mw==", "bodyText": "Yeah, I was thinking to remove those ZNodes after decommission is done (by using HelixBootstrapTool). However, you suggestion is even better, I will take it.", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455494493", "createdAt": "2020-07-16T03:54:23Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "diffHunk": "@@ -415,6 +437,27 @@ private boolean removeOldReplicaInfo(ReplicaId replicaId, InstanceConfig instanc\n     return removalResult;\n   }\n \n+  /**\n+   * Wait until disabling partition process has completed. This is to avoid race condition where server and Helix may\n+   * modify same InstanceConfig.\n+   * TODO remove this method after migrating ambry to PropertyStore (in Helix).\n+   * @throws InterruptedException\n+   */\n+  private void awaitDisablingPartition() throws InterruptedException {\n+    Properties properties = new Properties();\n+    properties.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n+    HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(properties));\n+    HelixPropertyStore<ZNRecord> helixPropertyStore =\n+        CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);\n+    String path = PARTITION_DISABLED_ZNODE_PATH + instanceName;\n+    int count = 1;\n+    while (!helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzE0NQ=="}, "originalCommit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzQ3NzAzOnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowOToxNVrOGyvhIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjoxMjoyN1rOGyyQHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDUxNQ==", "bodyText": "one weird thing I noticed was that the stop() method in ZkCacheBaseDataAccessor does more than the close() method. It also stops the background event handling thread in addition to shutting down the zkClient. We may want to call stop() instead", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455860515", "createdAt": "2020-07-16T15:09:15Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "diffHunk": "@@ -451,11 +451,12 @@ private void awaitDisablingPartition() throws InterruptedException {\n         CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);\n     String path = PARTITION_DISABLED_ZNODE_PATH + instanceName;\n     int count = 1;\n-    while (!helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {\n+    while (helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {\n       // Thread.sleep() pauses the current thread but does not release any locks\n       Thread.sleep(clusterMapConfig.clustermapRetryDisablePartitionCompletionBackoffMs);\n       logger.info(\"{} th attempt on checking the completion of disabling partition.\", ++count);\n     }\n+    helixPropertyStore.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2d7b70dfb5c40f141a0d22e8d12a99071dfb4d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkwNTMxMQ==", "bodyText": "sure, let me update the method.", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455905311", "createdAt": "2020-07-16T16:12:27Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "diffHunk": "@@ -451,11 +451,12 @@ private void awaitDisablingPartition() throws InterruptedException {\n         CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);\n     String path = PARTITION_DISABLED_ZNODE_PATH + instanceName;\n     int count = 1;\n-    while (!helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {\n+    while (helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {\n       // Thread.sleep() pauses the current thread but does not release any locks\n       Thread.sleep(clusterMapConfig.clustermapRetryDisablePartitionCompletionBackoffMs);\n       logger.info(\"{} th attempt on checking the completion of disabling partition.\", ++count);\n     }\n+    helixPropertyStore.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDUxNQ=="}, "originalCommit": {"oid": "dd2d7b70dfb5c40f141a0d22e8d12a99071dfb4d"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1305, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}