{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNjIzNjQz", "number": 1409, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo1NTo1OVrODlO4_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzoxMTowNVrODlPGww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzY3ODcxOnYy", "diffSide": "RIGHT", "path": "ambry-rest/src/main/java/com.github.ambry.rest/NettyRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo1NTo1OVrOFyArBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo1NTo1OVrOFyArBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4NDEzNQ==", "bodyText": "double space here", "url": "https://github.com/linkedin/ambry/pull/1409#discussion_r387984135", "createdAt": "2020-03-04T22:55:59Z", "author": {"login": "cgtz"}, "path": "ambry-rest/src/main/java/com.github.ambry.rest/NettyRequest.java", "diffHunk": "@@ -453,56 +454,36 @@ protected boolean isMultipart() {\n    */\n   protected void writeContent(AsyncWritableChannel writeChannel, ReadIntoCallbackWrapper callbackWrapper,\n       HttpContent httpContent) {\n-    boolean retained = false;\n     ByteBuffer[] contentBuffers;\n-    Callback<Long>[] writeCallbacks;\n     // LastHttpContent in the end marker in netty http world.\n     boolean isLast = httpContent instanceof LastHttpContent;\n     if (isLast) {\n       setAutoRead(true);\n     }\n     if (httpContent.content().nioBufferCount() > 0) {\n-      // not a copy.\n-      httpContent = ReferenceCountUtil.retain(httpContent);\n-      retained = true;\n       contentBuffers = httpContent.content().nioBuffers();\n-      writeCallbacks = new ContentWriteCallback[contentBuffers.length];\n-      int i = 0;\n-      for (; i < contentBuffers.length - 1; i++) {\n-        writeCallbacks[i] = new ContentWriteCallback(null, false, callbackWrapper);\n-      }\n-      writeCallbacks[i] = new ContentWriteCallback(httpContent, isLast, callbackWrapper);\n     } else {\n       // this will not happen (looking at current implementations of ByteBuf in Netty), but if it does, we cannot avoid\n       // a copy (or we can introduce a read(GatheringByteChannel) method in ReadableStreamChannel if required).\n       nettyMetrics.contentCopyCount.inc();\n+      ByteBuf  content = httpContent.content();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6179acfbae04360234ae76323897f3a12fc55e08"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzcxMzk1OnYy", "diffSide": "RIGHT", "path": "ambry-rest/src/test/java/com.github.ambry.rest/NettyRequestTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzoxMTowNVrOFyBAuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzoxMTowNVrOFyBAuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4OTY5MQ==", "bodyText": "Remove this ^", "url": "https://github.com/linkedin/ambry/pull/1409#discussion_r387989691", "createdAt": "2020-03-04T23:11:05Z", "author": {"login": "cgtz"}, "path": "ambry-rest/src/test/java/com.github.ambry.rest/NettyRequestTest.java", "diffHunk": "@@ -293,6 +293,7 @@ public void operationsAfterCloseTest() throws Exception {\n   }\n \n   /**\n+   * sed(line('.')) < 0) ? 'zc' : 'zo')<CR></CR>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6179acfbae04360234ae76323897f3a12fc55e08"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1753, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}