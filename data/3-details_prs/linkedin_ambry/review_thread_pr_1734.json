{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyODg5NTEw", "number": 1734, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoyNjo0OFrOFH49eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODo0MzowMlrOFH5PPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzODE3NTk0OnYy", "diffSide": "LEFT", "path": "ambry-protocol/src/test/java/com/github/ambry/protocol/RequestResponseTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoyNjo0OFrOIJhwpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoyNjo0OFrOIJhwpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2MTIyMg==", "bodyText": "Changes in this file are some cleanup and not related to user metadata change. (there was a travis failure, although this doesn't really fix the intermittent test error, it removes redundant code)", "url": "https://github.com/linkedin/ambry/pull/1734#discussion_r546861222", "createdAt": "2020-12-21T18:26:48Z", "author": {"login": "jsjtzyy"}, "path": "ambry-protocol/src/test/java/com/github/ambry/protocol/RequestResponseTest.java", "diffHunk": "@@ -369,14 +364,12 @@ public void putRequestResponseTest() throws IOException {\n         blob, blobSize, blobKey);\n \n     // Response test\n-    for (boolean useByteBufContent : new boolean[]{true, false}) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a0ad12285dc7dd8ffb4abb86ddf566fe5b2c5dd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzODIyMTQwOnYy", "diffSide": "RIGHT", "path": "ambry-api/src/main/java/com/github/ambry/rest/RestUtils.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODo0MzowMlrOIJiLzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQyMToxMDoyMFrOIJmA3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2ODE3Mg==", "bodyText": "What happens if the value contains non ascii characters and you pass it to setHeader() as before?  Does it not throw IllegalArgumentException?", "url": "https://github.com/linkedin/ambry/pull/1734#discussion_r546868172", "createdAt": "2020-12-21T18:43:02Z", "author": {"login": "lightningrob"}, "path": "ambry-api/src/main/java/com/github/ambry/rest/RestUtils.java", "diffHunk": "@@ -910,21 +908,16 @@ public static void setUserMetadataHeaders(Map<String, String> userMetadataMap,\n       if (!headerName.startsWith(Headers.USER_META_DATA_HEADER_PREFIX)) {\n         headerName = Headers.USER_META_DATA_HEADER_PREFIX + headerName;\n       }\n-      try {\n-        restResponseChannel.setHeader(headerName, headerValue);\n-      } catch (IllegalArgumentException iae) {\n+      if (StandardCharsets.US_ASCII.newEncoder().canEncode(headerValue)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a0ad12285dc7dd8ffb4abb86ddf566fe5b2c5dd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg3MTcwOA==", "bodyText": "It's hard to say, I would prefer merging @cgtz 's ambry-client change and verify. If it doesn't work (not able to display foreign language characters), we can use this piece of code to explicitly and proactively encode the head value.", "url": "https://github.com/linkedin/ambry/pull/1734#discussion_r546871708", "createdAt": "2020-12-21T18:50:40Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com/github/ambry/rest/RestUtils.java", "diffHunk": "@@ -910,21 +908,16 @@ public static void setUserMetadataHeaders(Map<String, String> userMetadataMap,\n       if (!headerName.startsWith(Headers.USER_META_DATA_HEADER_PREFIX)) {\n         headerName = Headers.USER_META_DATA_HEADER_PREFIX + headerName;\n       }\n-      try {\n-        restResponseChannel.setHeader(headerName, headerValue);\n-      } catch (IllegalArgumentException iae) {\n+      if (StandardCharsets.US_ASCII.newEncoder().canEncode(headerValue)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2ODE3Mg=="}, "originalCommit": {"oid": "7a0ad12285dc7dd8ffb4abb86ddf566fe5b2c5dd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg4ODI0Ng==", "bodyText": "Before, setHeader() would convert the value into valid ASCII by replacing any non-ascii characters with \"?\" symbols. If , after this step, this ascii encoded string did not contain any characters prohibited in headers but still valid ascii (like newline), the setHeader() call will succeed. However, if it did contain something like a newline, it would throw an exception.\nEdit: I may be slightly wrong about this. It seems like the utf-8 string is still maintained in the in-memory map, but may get replaced with ? somewhere else", "url": "https://github.com/linkedin/ambry/pull/1734#discussion_r546888246", "createdAt": "2020-12-21T19:26:50Z", "author": {"login": "cgtz"}, "path": "ambry-api/src/main/java/com/github/ambry/rest/RestUtils.java", "diffHunk": "@@ -910,21 +908,16 @@ public static void setUserMetadataHeaders(Map<String, String> userMetadataMap,\n       if (!headerName.startsWith(Headers.USER_META_DATA_HEADER_PREFIX)) {\n         headerName = Headers.USER_META_DATA_HEADER_PREFIX + headerName;\n       }\n-      try {\n-        restResponseChannel.setHeader(headerName, headerValue);\n-      } catch (IllegalArgumentException iae) {\n+      if (StandardCharsets.US_ASCII.newEncoder().canEncode(headerValue)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2ODE3Mg=="}, "originalCommit": {"oid": "7a0ad12285dc7dd8ffb4abb86ddf566fe5b2c5dd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkwNDY3OA==", "bodyText": "Here is the actual behavior. The conversion from unicode to question mark happens in the HttpResponseEncoder:\n  @Test\n  public void headerBehavior() {\n    HttpResponse response = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK);\n\n    String nonASCIIStr = \"\u00e5\u222b \\uD83D\\uDE1D\\uD83D\\uDE31abcd\";\n    response.headers().set(\"non-ascii\", nonASCIIStr);\n\n    try {\n      response.headers().set(\"ascii-with-non-header-chars\", \"word word \\n\\r next line\");\n    } catch (Exception exception) {\n      System.out.println(\"Got exception while setting \\n\\r in httpheaders:  \" + exception);\n    }\n\n    System.out.println(\"HttpHeaders object\" + response.headers());\n\n    EmbeddedChannel channel = new EmbeddedChannel(new HttpResponseEncoder());\n    assertTrue(channel.writeOutbound(response));\n    channel.flushOutbound();\n    System.out.println(\"Actual HTTP response buffer:\");\n    ByteBuf buffer = channel.readOutbound();\n    System.out.println(buffer.toString(Charset.defaultCharset()));\n  }\nGot exception while setting \n in httpheaders:  java.lang.IllegalArgumentException: only ' ' and '\\t' are allowed after '\\n': word word \n next line\nHttpHeaders objectDefaultHttpHeaders[non-ascii: \u00e5\u222b \ud83d\ude1d\ud83d\ude31abcd]\nActual HTTP response buffer:\nHTTP/1.1 200 OK\nnon-ascii: \ufffd? ????abcd", "url": "https://github.com/linkedin/ambry/pull/1734#discussion_r546904678", "createdAt": "2020-12-21T20:04:03Z", "author": {"login": "cgtz"}, "path": "ambry-api/src/main/java/com/github/ambry/rest/RestUtils.java", "diffHunk": "@@ -910,21 +908,16 @@ public static void setUserMetadataHeaders(Map<String, String> userMetadataMap,\n       if (!headerName.startsWith(Headers.USER_META_DATA_HEADER_PREFIX)) {\n         headerName = Headers.USER_META_DATA_HEADER_PREFIX + headerName;\n       }\n-      try {\n-        restResponseChannel.setHeader(headerName, headerValue);\n-      } catch (IllegalArgumentException iae) {\n+      if (StandardCharsets.US_ASCII.newEncoder().canEncode(headerValue)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2ODE3Mg=="}, "originalCommit": {"oid": "7a0ad12285dc7dd8ffb4abb86ddf566fe5b2c5dd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkzMDkxMA==", "bodyText": "Good find! Thanks for writing a unit test to narrow down the root cause. So, we can conclude that if head value has non-ascii but no new line character, setHeader() doesn't throw exception and non-ascii characters will be silently replaced with question mark in HttpResponseEncoder.", "url": "https://github.com/linkedin/ambry/pull/1734#discussion_r546930910", "createdAt": "2020-12-21T21:10:20Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com/github/ambry/rest/RestUtils.java", "diffHunk": "@@ -910,21 +908,16 @@ public static void setUserMetadataHeaders(Map<String, String> userMetadataMap,\n       if (!headerName.startsWith(Headers.USER_META_DATA_HEADER_PREFIX)) {\n         headerName = Headers.USER_META_DATA_HEADER_PREFIX + headerName;\n       }\n-      try {\n-        restResponseChannel.setHeader(headerName, headerValue);\n-      } catch (IllegalArgumentException iae) {\n+      if (StandardCharsets.US_ASCII.newEncoder().canEncode(headerValue)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg2ODE3Mg=="}, "originalCommit": {"oid": "7a0ad12285dc7dd8ffb4abb86ddf566fe5b2c5dd"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1188, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}