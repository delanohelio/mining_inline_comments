{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjE5MTU1", "number": 1465, "title": "Bugfixes and noisy error suppression", "bodyText": "", "createdAt": "2020-04-09T05:36:14Z", "url": "https://github.com/linkedin/ambry/pull/1465", "merged": true, "mergeCommit": {"oid": "090f8da160093218a9d36cc17adec472e5c19e11"}, "closed": true, "closedAt": "2020-04-09T22:21:21Z", "author": {"login": "lightningrob"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV1u8SAH2gAyNDAxMjE5MTU1OmNiOWYwOGYxZmJmZDNjNzZmN2ZhNTIwYTg4ZjljOTJlNDQ0YjA3YTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWEIDdAFqTM5MTE2OTg1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2", "author": {"user": {"login": "shipkit-org", "name": "shipkit.org automated bot"}}, "url": "https://github.com/linkedin/ambry/commit/cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2", "committedDate": "2020-04-09T05:34:44Z", "message": "Bugfixes and noisy error suppression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f39db99fd55cdd84af90f694a6f9aac84cbfb396", "author": {"user": {"login": "shipkit-org", "name": "shipkit.org automated bot"}}, "url": "https://github.com/linkedin/ambry/commit/f39db99fd55cdd84af90f694a6f9aac84cbfb396", "committedDate": "2020-04-09T17:09:13Z", "message": "Minor: lower verbose log message to debug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwOTQyMzk4", "url": "https://github.com/linkedin/ambry/pull/1465#pullrequestreview-390942398", "createdAt": "2020-04-09T16:21:17Z", "commit": {"oid": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjoyMToxN1rOGDf9Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjo1ODowN1rOGDhT8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyMjUxMQ==", "bodyText": "nit: better say Local store not started for remote replica", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406322511", "createdAt": "2020-04-09T16:21:17Z", "author": {"login": "jsjtzyy"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -457,14 +461,19 @@ public void replicate() {\n               replicationMetrics.updateLagMetricForRemoteReplica(remoteReplicaInfo,\n                   exchangeMetadataResponse.localLagFromRemoteInBytes);\n             } catch (Exception e) {\n-              logger.error(\n-                  \"Remote node: \" + remoteNode + \" Thread name: \" + threadName + \" Remote replica: \" + remoteReplicaInfo\n-                      .getReplicaId(), e);\n-              replicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\n-              responseHandler.onEvent(remoteReplicaInfo.getReplicaId(), e);\n-              ExchangeMetadataResponse exchangeMetadataResponse =\n-                  new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\n-              exchangeMetadataResponseList.add(exchangeMetadataResponse);\n+              if (e instanceof StoreException\n+                  && ((StoreException) e).getErrorCode() == StoreErrorCodes.Store_Not_Started) {\n+                // Must have just been stopped, just skip it and move on.\n+                logger.info(\"Store not started for remote replica: {}\", remoteReplicaInfo.getReplicaId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNDk1Ng==", "bodyText": "eplicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\nExchangeMetadataResponse exchangeMetadataResponse =\n                    new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\nexchangeMetadataResponseList.add(exchangeMetadataResponse);\n\nThese lines are supposed to be in the if block as well. Otherwise,  exchangeMetadataResponse has less elements than replicasToReplicatePerNode and IllegalArgumentException will be thrown at the beginning of fixMissingStoreKeys.", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406334956", "createdAt": "2020-04-09T16:41:29Z", "author": {"login": "jsjtzyy"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -457,14 +461,19 @@ public void replicate() {\n               replicationMetrics.updateLagMetricForRemoteReplica(remoteReplicaInfo,\n                   exchangeMetadataResponse.localLagFromRemoteInBytes);\n             } catch (Exception e) {\n-              logger.error(\n-                  \"Remote node: \" + remoteNode + \" Thread name: \" + threadName + \" Remote replica: \" + remoteReplicaInfo\n-                      .getReplicaId(), e);\n-              replicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\n-              responseHandler.onEvent(remoteReplicaInfo.getReplicaId(), e);\n-              ExchangeMetadataResponse exchangeMetadataResponse =\n-                  new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\n-              exchangeMetadataResponseList.add(exchangeMetadataResponse);\n+              if (e instanceof StoreException\n+                  && ((StoreException) e).getErrorCode() == StoreErrorCodes.Store_Not_Started) {\n+                // Must have just been stopped, just skip it and move on.\n+                logger.info(\"Store not started for remote replica: {}\", remoteReplicaInfo.getReplicaId());\n+              } else {\n+                logger.error(\"Remote node: {} Thread name: {} Remote replica: {}\", remoteNode, threadName,\n+                    remoteReplicaInfo.getReplicaId(), e);\n+                replicationMetrics.updateLocalStoreError(remoteReplicaInfo.getReplicaId());\n+                responseHandler.onEvent(remoteReplicaInfo.getReplicaId(), e);\n+                ExchangeMetadataResponse exchangeMetadataResponse =\n+                    new ExchangeMetadataResponse(ServerErrorCode.Unknown_Error);\n+                exchangeMetadataResponseList.add(exchangeMetadataResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM0NDY4OQ==", "bodyText": "I wonder in which case PUT is not found when updating Ttl for certain key. And it might be worth a warn here.", "url": "https://github.com/linkedin/ambry/pull/1465#discussion_r406344689", "createdAt": "2020-04-09T16:58:07Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreStats.java", "diffHunk": "@@ -550,10 +550,15 @@ private void addPutEntriesForDelete(long indexSegmentStartOffset, List<IndexEntr\n    */\n   private void updateExpiryTimeForAllPuts(List<IndexEntry> indexEntries) throws StoreException {\n     for (IndexEntry entry : indexEntries) {\n-      if (!entry.getValue().isFlagSet(IndexValue.Flags.Ttl_Update_Index) && !entry.getValue()\n-          .isFlagSet(IndexValue.Flags.Delete_Index)) {\n-        long expiryTimeMs = index.findKey(entry.getKey()).getExpiresAtMs();\n-        entry.getValue().setExpiresAtMs(expiryTimeMs);\n+      IndexValue entryValue = entry.getValue();\n+      if (!entryValue.isFlagSet(IndexValue.Flags.Ttl_Update_Index) && !entryValue.isFlagSet(\n+          IndexValue.Flags.Delete_Index)) {\n+        IndexValue indexValue = index.findKey(entry.getKey());\n+        if (indexValue != null) {\n+          entryValue.setExpiresAtMs(indexValue.getExpiresAtMs());\n+        } else {\n+          logger.info(\"No index value found for {}\", entry.getKey().getID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9f08f1fbfd3c76f7fa520a88f9c92e444b07a2"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c31b45812742c3b079f5eca05af925ecace1026", "author": {"user": {"login": "shipkit-org", "name": "shipkit.org automated bot"}}, "url": "https://github.com/linkedin/ambry/commit/5c31b45812742c3b079f5eca05af925ecace1026", "committedDate": "2020-04-09T17:53:26Z", "message": "Address Yingyi's review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTQzNDY0", "url": "https://github.com/linkedin/ambry/pull/1465#pullrequestreview-391143464", "createdAt": "2020-04-09T21:26:06Z", "commit": {"oid": "5c31b45812742c3b079f5eca05af925ecace1026"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTY5ODU3", "url": "https://github.com/linkedin/ambry/pull/1465#pullrequestreview-391169857", "createdAt": "2020-04-09T22:20:50Z", "commit": {"oid": "5c31b45812742c3b079f5eca05af925ecace1026"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1369, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}