{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTU2MTI1", "number": 1513, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoxODowMlrOD7WfnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMjo0NzoxNFrOD75AkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTYxMTE3OnYy", "diffSide": "RIGHT", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobInfoOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoxODowMlrOGTn4pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoxODowMlrOGTn4pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyOTYwNA==", "bodyText": "It seems like in most places, setLifeVersion is called right after new BlobInfo. Instead of adding a new setter, one alternative could be making the BlobInfo.lifeVersion final and adding a new constructor that takes life version as an argument.", "url": "https://github.com/linkedin/ambry/pull/1513#discussion_r423229604", "createdAt": "2020-05-11T18:18:02Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobInfoOperation.java", "diffHunk": "@@ -353,9 +353,9 @@ private void handleBody(InputStream payload, MessageMetadata messageMetadata, Me\n     ByteBuffer userMetadata = MessageFormatRecord.deserializeUserMetadata(payload);\n     if (encryptionKey == null) {\n       // if blob is not encrypted, move the state to Complete\n-      operationResult =\n-          new GetBlobResultInternal(new GetBlobResult(new BlobInfo(serverBlobProperties, userMetadata.array()), null),\n-              null);\n+      BlobInfo blobInfo = new BlobInfo(serverBlobProperties, userMetadata.array());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f140c3064b2af292ec9f42a87c397d2adc42949e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTYxOTE1OnYy", "diffSide": "RIGHT", "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoyMDozMVrOGTn9yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoyMDozMVrOGTn9yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzMDkyMw==", "bodyText": "just save life version instead of the entire messageInfo?", "url": "https://github.com/linkedin/ambry/pull/1513#discussion_r423230923", "createdAt": "2020-05-11T18:20:31Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -1100,6 +1100,7 @@ private RouterException buildChunkException(String message, RouterErrorCode erro\n     private BlobType blobType;\n     private List<CompositeBlobInfo.ChunkMetadata> chunkMetadataList;\n     private BlobProperties serverBlobProperties;\n+    private MessageInfo serverMessageInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f140c3064b2af292ec9f42a87c397d2adc42949e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTI2NjA5OnYy", "diffSide": "RIGHT", "path": "ambry-api/src/main/java/com/github/ambry/messageformat/BlobInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMjo0NzoxNFrOGUfntQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMjo0NzoxNFrOGUfntQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE0Mjc3Mw==", "bodyText": "creat -> create (also line 34)", "url": "https://github.com/linkedin/ambry/pull/1513#discussion_r424142773", "createdAt": "2020-05-13T02:47:14Z", "author": {"login": "cgtz"}, "path": "ambry-api/src/main/java/com/github/ambry/messageformat/BlobInfo.java", "diffHunk": "@@ -14,26 +14,44 @@\n package com.github.ambry.messageformat;\n \n /**\n- * A BlobInfo class that contains both the blob property and the usermetadata for the blob\n+ * A BlobInfo class that contains both the blob property, the usermetadata and the lifeVersion for the blob.\n  */\n public class BlobInfo {\n-\n   private BlobProperties blobProperties;\n-\n   private byte[] userMetadata;\n-\n   private short lifeVersion;\n \n+  /**\n+   * Constructor to creat a {@link BlobInfo}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d120aa91729fefbab590f72b74641764785e6ed3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1575, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}