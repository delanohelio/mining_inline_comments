{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjkzNjQ1", "number": 1715, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNjoyMTo1MlrOFA4AYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTo1NTowM1rOFA_tdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDYxOTIxOnYy", "diffSide": "RIGHT", "path": "ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNjoyMTo1MlrOH_YHew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjoyOTo0M1rOH_klJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxNzQ2Nw==", "bodyText": "I think this null handling case is not actually required, although I see that this pattern was used before in this method.\nsb.append(\"ContentEncoding=\").append(null) will work and return \"ContentEncoding=null\"", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536217467", "createdAt": "2020-12-04T16:21:52Z", "author": {"login": "cgtz"}, "path": "ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java", "diffHunk": "@@ -209,6 +227,16 @@ public String toString() {\n     sb.append(\", \").append(\"ContainerId=\").append(getContainerId());\n     sb.append(\", \").append(\"IsEncrypted=\").append(isEncrypted());\n     sb.append(\", \").append(\"externalAssetTag=\").append(getExternalAssetTag());\n+    if (getContentEncoding() != null) {\n+      sb.append(\", \").append(\"ContentEncoding=\").append(getContentEncoding());\n+    } else {\n+      sb.append(\", \").append(\"ContentEncoding=Null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMTY3MQ==", "bodyText": "Removed all the redundant part.", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536421671", "createdAt": "2020-12-04T22:29:43Z", "author": {"login": "SophieGuo410"}, "path": "ambry-api/src/main/java/com/github/ambry/messageformat/BlobProperties.java", "diffHunk": "@@ -209,6 +227,16 @@ public String toString() {\n     sb.append(\", \").append(\"ContainerId=\").append(getContainerId());\n     sb.append(\", \").append(\"IsEncrypted=\").append(isEncrypted());\n     sb.append(\", \").append(\"externalAssetTag=\").append(getExternalAssetTag());\n+    if (getContentEncoding() != null) {\n+      sb.append(\", \").append(\"ContentEncoding=\").append(getContentEncoding());\n+    } else {\n+      sb.append(\", \").append(\"ContentEncoding=Null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxNzQ2Nw=="}, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDYzMzQ5OnYy", "diffSide": "RIGHT", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNjoyNDo1OFrOH_YPyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjozMDowM1rOH_klqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxOTU5Mw==", "bodyText": "For a get blob response, this should be set as the HTTP standard Content-Encoding header instead of x-ambry-content-encoding", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536219593", "createdAt": "2020-12-04T16:24:58Z", "author": {"login": "cgtz"}, "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -314,6 +320,12 @@ private void setGetBlobResponseHeaders(BlobInfo blobInfo, GetBlobOptions options\n         restResponseChannel.setHeader(\"Content-Disposition\", \"attachment\");\n       }\n     }\n+    if (blobProperties.getContentEncoding() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMTgwMA==", "bodyText": "Sure. Thanks for catching that, fixed it.", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536421800", "createdAt": "2020-12-04T22:30:03Z", "author": {"login": "SophieGuo410"}, "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -314,6 +320,12 @@ private void setGetBlobResponseHeaders(BlobInfo blobInfo, GetBlobOptions options\n         restResponseChannel.setHeader(\"Content-Disposition\", \"attachment\");\n       }\n     }\n+    if (blobProperties.getContentEncoding() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxOTU5Mw=="}, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDY1MTU5OnYy", "diffSide": "RIGHT", "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNjoyODozM1rOH_YaeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjozMDoxNVrOH_kmFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIyMjMyOA==", "bodyText": "In our LinkedIn SecurityService, we use the filename to set the value of the Content-Disposition. Not sure if we want to port that behavior here.", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536222328", "createdAt": "2020-12-04T16:28:33Z", "author": {"login": "cgtz"}, "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -314,6 +320,12 @@ private void setGetBlobResponseHeaders(BlobInfo blobInfo, GetBlobOptions options\n         restResponseChannel.setHeader(\"Content-Disposition\", \"attachment\");\n       }\n     }\n+    if (blobProperties.getContentEncoding() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());\n+    }\n+    if (blobProperties.getFilename() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_FILENAME, blobProperties.getFilename());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMTkxMQ==", "bodyText": "Removed.", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536421911", "createdAt": "2020-12-04T22:30:15Z", "author": {"login": "SophieGuo410"}, "path": "ambry-frontend/src/main/java/com/github/ambry/frontend/AmbrySecurityService.java", "diffHunk": "@@ -314,6 +320,12 @@ private void setGetBlobResponseHeaders(BlobInfo blobInfo, GetBlobOptions options\n         restResponseChannel.setHeader(\"Content-Disposition\", \"attachment\");\n       }\n     }\n+    if (blobProperties.getContentEncoding() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_CONTENT_ENCODING, blobProperties.getContentEncoding());\n+    }\n+    if (blobProperties.getFilename() != null) {\n+      restResponseChannel.setHeader(Headers.AMBRY_FILENAME, blobProperties.getFilename());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIyMjMyOA=="}, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTg4MTUxOnYy", "diffSide": "RIGHT", "path": "ambry-replication/src/test/java/com/github/ambry/replication/BlobIdTransformerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTo1NTowM1rOH_jmKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjozNTowN1rOH_ktvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwNTU0NA==", "bodyText": "minor: is there a unit test to verify these two properties in BlobIdTransformerTest?", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536405544", "createdAt": "2020-12-04T21:55:03Z", "author": {"login": "jsjtzyy"}, "path": "ambry-replication/src/test/java/com/github/ambry/replication/BlobIdTransformerTest.java", "diffHunk": "@@ -527,7 +527,7 @@ private Message buildMessage(String blobIdString, Class clazz, boolean hasEncryp\n       MessageInfo messageInfo;\n       BlobProperties blobProperties =\n           new BlobProperties(blobPropertiesSize, \"serviceId\", \"ownerId\", \"contentType\", false, 0, 0,\n-              blobId.getAccountId(), blobId.getContainerId(), hasEncryption, null);\n+              blobId.getAccountId(), blobId.getContainerId(), hasEncryption, null, \"gzip\", \"filename\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyMzg2OQ==", "bodyText": "Will add the test cases once the serialize part is done.", "url": "https://github.com/linkedin/ambry/pull/1715#discussion_r536423869", "createdAt": "2020-12-04T22:35:07Z", "author": {"login": "SophieGuo410"}, "path": "ambry-replication/src/test/java/com/github/ambry/replication/BlobIdTransformerTest.java", "diffHunk": "@@ -527,7 +527,7 @@ private Message buildMessage(String blobIdString, Class clazz, boolean hasEncryp\n       MessageInfo messageInfo;\n       BlobProperties blobProperties =\n           new BlobProperties(blobPropertiesSize, \"serviceId\", \"ownerId\", \"contentType\", false, 0, 0,\n-              blobId.getAccountId(), blobId.getContainerId(), hasEncryption, null);\n+              blobId.getAccountId(), blobId.getContainerId(), hasEncryption, null, \"gzip\", \"filename\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwNTU0NA=="}, "originalCommit": {"oid": "f049363c9531a24e3de3c95f182dcf426a64447c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1166, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}