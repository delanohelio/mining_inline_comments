{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjEwODA0", "number": 1545, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyNTo1NVrOEBiKMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzo0NjoxOFrOEB2iIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDQzNjk5OnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/test/java/com/github/ambry/cloud/azure/AzureStorageCompactorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyNTo1NVrOGdcGvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyNTo1NVrOGdcGvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyMjM2Nw==", "bodyText": "Test cases here moved from AzureCloudDestinationTest.", "url": "https://github.com/linkedin/ambry/pull/1545#discussion_r433522367", "createdAt": "2020-06-01T22:25:55Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/test/java/com/github/ambry/cloud/azure/AzureStorageCompactorTest.java", "diffHunk": "@@ -0,0 +1,216 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.cloud.azure;\n+\n+import com.azure.core.http.rest.Response;\n+import com.azure.storage.blob.BlobServiceClient;\n+import com.azure.storage.blob.batch.BlobBatch;\n+import com.azure.storage.blob.batch.BlobBatchClient;\n+import com.azure.storage.blob.models.BlobErrorCode;\n+import com.azure.storage.blob.models.BlobStorageException;\n+import com.codahale.metrics.MetricRegistry;\n+import com.github.ambry.cloud.CloudBlobMetadata;\n+import com.github.ambry.cloud.CloudStorageException;\n+import com.github.ambry.cloud.VcrMetrics;\n+import com.github.ambry.clustermap.MockClusterMap;\n+import com.github.ambry.clustermap.MockPartitionId;\n+import com.github.ambry.clustermap.PartitionId;\n+import com.github.ambry.commons.BlobId;\n+import com.github.ambry.config.CloudConfig;\n+import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.utils.Utils;\n+import com.microsoft.azure.cosmosdb.Document;\n+import com.microsoft.azure.cosmosdb.FeedOptions;\n+import com.microsoft.azure.cosmosdb.FeedResponse;\n+import com.microsoft.azure.cosmosdb.RequestOptions;\n+import com.microsoft.azure.cosmosdb.ResourceResponse;\n+import com.microsoft.azure.cosmosdb.SqlQuerySpec;\n+import com.microsoft.azure.cosmosdb.StoredProcedureResponse;\n+import com.microsoft.azure.cosmosdb.rx.AsyncDocumentClient;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Properties;\n+import org.apache.commons.codec.binary.Base64;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import rx.Observable;\n+\n+import static com.github.ambry.cloud.azure.AzureTestUtils.*;\n+import static com.github.ambry.commons.BlobId.*;\n+import static org.junit.Assert.*;\n+import static org.mockito.ArgumentMatchers.*;\n+import static org.mockito.BDDMockito.*;\n+\n+\n+/** Test cases for {@link AzureStorageCompactor} */\n+@RunWith(MockitoJUnitRunner.class)\n+public class AzureStorageCompactorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0993c871aabdcad42a4c171b0359da05bf6a50a0"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDQ0MDQ4OnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureStorageCompactor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyNzozMFrOGdcIzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjoyNzozMFrOGdcIzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUyMjg5Mg==", "bodyText": "Code in this class was moved from CloudStorageCompactor and AzureCloudDestination.", "url": "https://github.com/linkedin/ambry/pull/1545#discussion_r433522892", "createdAt": "2020-06-01T22:27:30Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureStorageCompactor.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.cloud.azure;\n+\n+import com.github.ambry.cloud.CloudBlobMetadata;\n+import com.github.ambry.cloud.CloudRequestAgent;\n+import com.github.ambry.cloud.CloudStorageException;\n+import com.github.ambry.cloud.VcrMetrics;\n+import com.github.ambry.config.CloudConfig;\n+import com.microsoft.azure.cosmosdb.DocumentClientException;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+public class AzureStorageCompactor {\n+  private static final Logger logger = LoggerFactory.getLogger(AzureStorageCompactor.class);\n+  private final AzureBlobDataAccessor azureBlobDataAccessor;\n+  private final CosmosDataAccessor cosmosDataAccessor;\n+  private final int queryLimit;\n+  private final int queryBucketDays;\n+  private final int lookbackDays;\n+  private final long retentionPeriodMs;\n+  private final long compactionTimeLimitMs;\n+  private final VcrMetrics vcrMetrics;\n+  private final AzureMetrics azureMetrics;\n+  private final CloudRequestAgent requestAgent;\n+  private final AtomicBoolean shuttingDown = new AtomicBoolean(false);\n+\n+  /**\n+   * Public constructor.\n+   * @param azureBlobDataAccessor\n+   * @param cosmosDataAccessor\n+   * @param cloudConfig\n+   * @param vcrMetrics the metrics to update.\n+   */\n+  public AzureStorageCompactor(AzureBlobDataAccessor azureBlobDataAccessor, CosmosDataAccessor cosmosDataAccessor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0993c871aabdcad42a4c171b0359da05bf6a50a0"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzc3NTA3OnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureCloudDestination.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzo0NjoxOFrOGd856w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzo0NjoxOFrOGd856w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA1OTc1NQ==", "bodyText": "Unused imports?", "url": "https://github.com/linkedin/ambry/pull/1545#discussion_r434059755", "createdAt": "2020-06-02T17:46:18Z", "author": {"login": "ankagrawal"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/azure/AzureCloudDestination.java", "diffHunk": "@@ -36,13 +39,14 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n-import java.net.HttpURLConnection;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.Properties;\n+import java.util.Set;\n import java.util.concurrent.TimeUnit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59874f9b838c128cedd1efeddb024a9f89418e09"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1216, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}