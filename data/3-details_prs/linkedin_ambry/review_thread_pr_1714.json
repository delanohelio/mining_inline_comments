{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMTQ2OTQ0", "number": 1714, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxMDoxNVrOFAnaUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxMDoxNVrOFAnaUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTkwMDM1OnYy", "diffSide": "RIGHT", "path": "ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxMDoxNVrOH-_-7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxMDoxNVrOH-_-7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMjA2Mw==", "bodyText": "Include container name in error messages.", "url": "https://github.com/linkedin/ambry/pull/1714#discussion_r535822063", "createdAt": "2020-12-04T04:10:15Z", "author": {"login": "lightningrob"}, "path": "ambry-account/src/main/java/com/github/ambry/account/AbstractAccountService.java", "diffHunk": "@@ -111,18 +111,28 @@ public Account getAccountById(short id) {\n     for (Container container : containers) {\n       if (container.getId() == Container.UNKNOWN_CONTAINER_ID) {\n         // new container\n-        // make sure there is no conflicting container (conflicting means a container with same name but different attributes already exists).\n         Container existingContainer = existingContainersInAccount.get(container.getName());\n         if (existingContainer != null) {\n-          if (existingContainer.isSameContainer(container)) {\n-            // If an exactly same container already exists, treat as no-op (may be retry after partial failure).\n-            // But include it in the list returned to caller to provide the containerId.\n-            logger.info(\"Request to create container with existing name and properties: {}\",\n-                existingContainer.toJson().toString());\n-            existingUnchangedContainers.add(existingContainer);\n-          } else {\n-            throw new AccountServiceException(\"There is a conflicting container in account \" + accountName,\n-                AccountServiceErrorCode.ResourceConflict);\n+          switch (existingContainer.getStatus()) {\n+            case INACTIVE:\n+              throw new AccountServiceException(\"The container has gone and cannot be restored\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "537ca8c2d6f1275042e2ec0e8d18892426e59cfd"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1164, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}