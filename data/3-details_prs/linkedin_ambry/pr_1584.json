{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDkwNDM1", "number": 1584, "title": "Avoid concurrent modification on InstanceConfig when disabling partitions", "bodyText": "Since both Ambry and Helix can update InstanceConfig, there is a race condition where ambry server is removing replica entry from InstanceConfig(move replica case) and meanwhile Helix is adding the disabled partition into same InstanceConfig. It's possible that ambry server updates InstanceConfig with an old version view, which may override the latest change\nfrom Helix. This usually happens when we use HelixBootstrapTool to remove multiple replicas and it may take some time to complete. Before it's done, some replicas have finished decommission and start to update InstanceConfig, which causes concurrent modification.\nThis PR ensures HelixBbootstrapTool creates a ZNode for specific server only when disabling partitions\non that node has fully completed. The decommission process of replicas will be blocked until\nthe ZNode is generated. Thus, concurrent modification can be avoided.", "createdAt": "2020-07-08T21:17:51Z", "url": "https://github.com/linkedin/ambry/pull/1584", "merged": true, "mergeCommit": {"oid": "24307c7ba1f9619104fb74af46e06a9627817747"}, "closed": true, "closedAt": "2020-07-17T00:09:48Z", "author": {"login": "jsjtzyy"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc05E4iABqjM1NDUwNzY4NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1hpC1AH2gAyNDQ2NDkwNDM1OjY5Mjk1OTcwMTYwZTQ5N2UwMTU1NjBlMWY5YmRjODEyYmJlNWI3Nzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33bcf8d33403e593176220e1c6b64e1d6f8a138f", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/33bcf8d33403e593176220e1c6b64e1d6f8a138f", "committedDate": "2020-07-09T17:09:38Z", "message": "fixed test failure and made minor change"}, "afterCommit": {"oid": "e2f43491fb1e744d93de335136776f21ef879d1f", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/e2f43491fb1e744d93de335136776f21ef879d1f", "committedDate": "2020-07-14T16:58:44Z", "message": "fixed test failure and made minor change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NTI4NTMy", "url": "https://github.com/linkedin/ambry/pull/1584#pullrequestreview-448528532", "createdAt": "2020-07-14T23:16:57Z", "commit": {"oid": "e2f43491fb1e744d93de335136776f21ef879d1f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "809753d410750f06c2ba9af9ab407427acd93b23", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/809753d410750f06c2ba9af9ab407427acd93b23", "committedDate": "2020-07-16T00:07:27Z", "message": "Avoid concurrent modification on InstanceConfig when disabling partitions\n\nSince both Ambry and Helix can update InstanceConfig, there is a race condition where\nAmbry server is removing replica entry from InstanceConfig(move replica case) and meanwhile\nHelix is adding the disabled partition into same InstanceConfig. It's possible that ambry\nserver updates InstanceConfig with an old version view, which may override the latest change\nfrom Helix. This usually happens when we use HelixBootstrapTool to remove multiple replicas\nand it may take some time to complete. Before it's done, some replicas have finished decommission\nand start to update InstanceConfig, which causes concurrent modification.\nThis PR ensures HelixBbootstrapTool creates a ZNode for specific server only when disabling partitions\non that node has fully completed. The decommission process of replicas will be blocked until\nthe ZNode is generated. Thus, concurrent modification can be avoided."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ff3e5450da1ac91253730fdab581990d44a9157", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/3ff3e5450da1ac91253730fdab581990d44a9157", "committedDate": "2020-07-16T00:07:30Z", "message": "fix test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/19a300d5fa2d14d93dd4e5db4f77add61e52cb20", "committedDate": "2020-07-16T00:07:30Z", "message": "fixed test failure and made minor change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2f43491fb1e744d93de335136776f21ef879d1f", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/e2f43491fb1e744d93de335136776f21ef879d1f", "committedDate": "2020-07-14T16:58:44Z", "message": "fixed test failure and made minor change"}, "afterCommit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/19a300d5fa2d14d93dd4e5db4f77add61e52cb20", "committedDate": "2020-07-16T00:07:30Z", "message": "fixed test failure and made minor change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDc1MTgz", "url": "https://github.com/linkedin/ambry/pull/1584#pullrequestreview-449475183", "createdAt": "2020-07-16T03:03:07Z", "commit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzowMzowN1rOGyYYJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzowOTo0NVrOGyYfCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MTM4MA==", "bodyText": "Do we have to call the helixPropertyStore.stop() and close() methods after we are done using the property store? Same comment for its usage in HelixParticipant.", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455481380", "createdAt": "2020-07-16T03:03:07Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixBootstrapUpgradeUtil.java", "diffHunk": "@@ -1072,6 +1074,24 @@ private void addUpdateResources(String dcName, Map<String, Set<String>> partitio\n         }\n       }\n     }\n+    // if there are some partitions are disabled, mark whole disabling process complete in Helix PropertyStore\n+    if (helixAdminOperation == HelixAdminOperation.DisablePartition && !instancesWithDisabledPartition.isEmpty()) {\n+      // create znode under admin configs\n+      Properties storeProps = new Properties();\n+      storeProps.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n+      HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(storeProps));\n+      String zkConnectStr = dataCenterToZkAddress.get(dcName).getZkConnectStrs().get(0);\n+      HelixPropertyStore<ZNRecord> helixPropertyStore =\n+          CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ4MzE0NQ==", "bodyText": "Do these paths have to be manually removed using a zookeeper client after the decommission is complete and all replicas have called removeOldReplicaInfo()?\nWhat if, instead, HelixBootStrapUpgradeTool created a znode before it begins updating using HelixAdmin and then deletes it after it is finished? Than, this loop could wait for the znode to stop existing.", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455483145", "createdAt": "2020-07-16T03:09:45Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "diffHunk": "@@ -415,6 +437,27 @@ private boolean removeOldReplicaInfo(ReplicaId replicaId, InstanceConfig instanc\n     return removalResult;\n   }\n \n+  /**\n+   * Wait until disabling partition process has completed. This is to avoid race condition where server and Helix may\n+   * modify same InstanceConfig.\n+   * TODO remove this method after migrating ambry to PropertyStore (in Helix).\n+   * @throws InterruptedException\n+   */\n+  private void awaitDisablingPartition() throws InterruptedException {\n+    Properties properties = new Properties();\n+    properties.setProperty(\"helix.property.store.root.path\", \"/\" + clusterName + \"/\" + PROPERTYSTORE_STR);\n+    HelixPropertyStoreConfig propertyStoreConfig = new HelixPropertyStoreConfig(new VerifiableProperties(properties));\n+    HelixPropertyStore<ZNRecord> helixPropertyStore =\n+        CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);\n+    String path = PARTITION_DISABLED_ZNODE_PATH + instanceName;\n+    int count = 1;\n+    while (!helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19a300d5fa2d14d93dd4e5db4f77add61e52cb20"}, "originalPosition": 174}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd2d7b70dfb5c40f141a0d22e8d12a99071dfb4d", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/dd2d7b70dfb5c40f141a0d22e8d12a99071dfb4d", "committedDate": "2020-07-16T05:56:38Z", "message": "address Casey's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTQ0NDA2", "url": "https://github.com/linkedin/ambry/pull/1584#pullrequestreview-449944406", "createdAt": "2020-07-16T15:09:15Z", "commit": {"oid": "dd2d7b70dfb5c40f141a0d22e8d12a99071dfb4d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowOToxNVrOGyvhIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTowOToxNVrOGyvhIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2MDUxNQ==", "bodyText": "one weird thing I noticed was that the stop() method in ZkCacheBaseDataAccessor does more than the close() method. It also stops the background event handling thread in addition to shutting down the zkClient. We may want to call stop() instead", "url": "https://github.com/linkedin/ambry/pull/1584#discussion_r455860515", "createdAt": "2020-07-16T15:09:15Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/HelixParticipant.java", "diffHunk": "@@ -451,11 +451,12 @@ private void awaitDisablingPartition() throws InterruptedException {\n         CommonUtils.createHelixPropertyStore(zkConnectStr, propertyStoreConfig, null);\n     String path = PARTITION_DISABLED_ZNODE_PATH + instanceName;\n     int count = 1;\n-    while (!helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {\n+    while (helixPropertyStore.exists(path, AccessOption.PERSISTENT)) {\n       // Thread.sleep() pauses the current thread but does not release any locks\n       Thread.sleep(clusterMapConfig.clustermapRetryDisablePartitionCompletionBackoffMs);\n       logger.info(\"{} th attempt on checking the completion of disabling partition.\", ++count);\n     }\n+    helixPropertyStore.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2d7b70dfb5c40f141a0d22e8d12a99071dfb4d"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69295970160e497e015560e1f9bdc812bbe5b779", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/69295970160e497e015560e1f9bdc812bbe5b779", "committedDate": "2020-07-16T16:15:46Z", "message": "minor change"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1169, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}