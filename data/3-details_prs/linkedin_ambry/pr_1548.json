{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODkwOTQ2", "number": 1548, "title": "Fix a concurrency bug caused by offset comparison", "bodyText": "We are seeing in EI, some partition has duplicated delete record in log, but not in index. After investigation, this is caused by an offset comparison, which is fixed in this PR.\nBrief explanation:\n\nThere are two concurrent delete requests, one of which from frontend, the other from replication.\nBoth delete requests will call delete method, and both would check the validity of delete record up to line 553, and both would be valid. (There is no delete in index yet)\nAfter that, one of delete would enter the mutual exclusive block starting from link 553, and persist delete record to log and index\nThe second delete would figure the indexEndOffsetBeforeCheck is not the same as currentIndexEndOffset, assuming a delete record is 100 bytes, and indexEndOffsetBeforeCheck is 1000. then after first delete record, currentIndexEndOffset should be 1100\nSecond delete call gets the the first delete record, and it's offset should be 1000. so here the comparison should be >=, rather than >.", "createdAt": "2020-06-03T00:05:50Z", "url": "https://github.com/linkedin/ambry/pull/1548", "merged": true, "mergeCommit": {"oid": "d9901f4172352354659d4681423d585513c79dfc"}, "closed": true, "closedAt": "2020-06-03T18:55:26Z", "author": {"login": "justinlin-linkedin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnd3SjAH2gAyNDI2ODkwOTQ2OjgwYWRmY2VmZmMxY2QzZTFmNTQ1MWY1MWFmOTkzM2NjYTg0ZWQyZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcntlIkgH2gAyNDI2ODkwOTQ2OmQwZTJjYmJiZjAwZjQzY2JjNmQ1MTdmYThkZGRiNjU2NGJlNDdhNWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "80adfceffc1cd3e1f5451f51af9933cca84ed2f4", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/80adfceffc1cd3e1f5451f51af9933cca84ed2f4", "committedDate": "2020-06-02T23:56:46Z", "message": "Fix a concurrency bug caused by offset comparison"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjE4MzI4", "url": "https://github.com/linkedin/ambry/pull/1548#pullrequestreview-423218328", "createdAt": "2020-06-03T04:58:29Z", "commit": {"oid": "80adfceffc1cd3e1f5451f51af9933cca84ed2f4"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDo1ODoyOVrOGeMDsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTowMzozNlrOGeMI0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwODAxOQ==", "bodyText": "Why not idToDelete = liveKeys.iterator().next(); ?", "url": "https://github.com/linkedin/ambry/pull/1548#discussion_r434308019", "createdAt": "2020-06-03T04:58:29Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreTest.java", "diffHunk": "@@ -643,6 +643,59 @@ public void concurrentDeleteTest() throws Exception {\n     verifyDeleteFutures(deleters, futures);\n   }\n \n+  /**\n+   * Test when deleting the same blob at the same time. Only one delete can go through and only one log and index\n+   * record should be persisted.\n+   * @throws Exception\n+   */\n+  @Test\n+  public void concurrentDeleteTestOnSameBlob() throws Exception {\n+    MockId idToDelete = null;\n+    for (MockId id : liveKeys) {\n+      idToDelete = id;\n+      break;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80adfceffc1cd3e1f5451f51af9933cca84ed2f4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwOTMzMA==", "bodyText": "same here", "url": "https://github.com/linkedin/ambry/pull/1548#discussion_r434309330", "createdAt": "2020-06-03T05:03:36Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreTest.java", "diffHunk": "@@ -678,6 +731,59 @@ public void concurrentUndeleteTest() throws Exception {\n     verifyUndeleteFutures(undeleters, futures);\n   }\n \n+  /**\n+   * Test when undeleting the same blob at the same time. Only one undelete can go through and only one log and index\n+   * record should be persisted.\n+   * @throws Exception\n+   */\n+  @Test\n+  public void concurrentUndeleteTestOnSameBlob() throws Exception {\n+    MockId idToUndelete = null;\n+    for (MockId id : deletedKeys) {\n+      idToUndelete = id;\n+      break;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80adfceffc1cd3e1f5451f51af9933cca84ed2f4"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6c6cc713a07a45bcc976b8b1ff930c54c1e6965", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/e6c6cc713a07a45bcc976b8b1ff930c54c1e6965", "committedDate": "2020-06-03T06:09:55Z", "message": "Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzI2MDg1", "url": "https://github.com/linkedin/ambry/pull/1548#pullrequestreview-423726085", "createdAt": "2020-06-03T16:24:00Z", "commit": {"oid": "e6c6cc713a07a45bcc976b8b1ff930c54c1e6965"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjoyNDowMFrOGejwdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjoyNDowMFrOGejwdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY5NjMxMQ==", "bodyText": "Sleep indeed can mock the situation but the time seems a little bit long here. Can we use latch instead?", "url": "https://github.com/linkedin/ambry/pull/1548#discussion_r434696311", "createdAt": "2020-06-03T16:24:00Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreTest.java", "diffHunk": "@@ -643,6 +643,61 @@ public void concurrentDeleteTest() throws Exception {\n     verifyDeleteFutures(deleters, futures);\n   }\n \n+  /**\n+   * Test when deleting the same blob at the same time. Only one delete can go through and only one log and index\n+   * record should be persisted.\n+   * @throws Exception\n+   */\n+  @Test\n+  public void concurrentDeleteTestOnSameBlob() throws Exception {\n+    final MockId idToDelete = liveKeys.iterator().next();\n+    assertNotNull(idToDelete);\n+    ((MockBlobStore) store).setOperationBeforeSynchronizationFunc(() -> {\n+      try {\n+        Thread.sleep(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6c6cc713a07a45bcc976b8b1ff930c54c1e6965"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a68615e6af404bed0859faa2a1bcffb12aa8a97", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/4a68615e6af404bed0859faa2a1bcffb12aa8a97", "committedDate": "2020-06-03T17:15:50Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzgyODc0", "url": "https://github.com/linkedin/ambry/pull/1548#pullrequestreview-423782874", "createdAt": "2020-06-03T17:36:55Z", "commit": {"oid": "4a68615e6af404bed0859faa2a1bcffb12aa8a97"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e2cbbbf00f43cbc6d517fa8dddb6564be47a5a", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/d0e2cbbbf00f43cbc6d517fa8dddb6564be47a5a", "committedDate": "2020-06-03T18:15:25Z", "message": "Fix test failure"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1099, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}