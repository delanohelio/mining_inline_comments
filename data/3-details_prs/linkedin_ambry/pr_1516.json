{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTk1MzQw", "number": 1516, "title": "Support monitoring inconsistency between participants on same node", "bodyText": "As required by ZK cluster migration, ambry-server has to host two participants\nthat update sealed/stopped replicas at same time. In case any participant fails\nto update corresponding ZK cluster(i.e. connection lost), ambry-server needs to\nmonitor and alert inconsistency of sealed/stopped replicas from two participants.\nThis PR introduces a consistency checker that periodically checks sealed/stopped\nreplica lists from two participants and emits metric if there is a mismatch.", "createdAt": "2020-05-11T15:58:14Z", "url": "https://github.com/linkedin/ambry/pull/1516", "merged": true, "mergeCommit": {"oid": "3f645cf8a8f8f058234c0359d8d3d97207d80bcb"}, "closed": true, "closedAt": "2020-05-20T18:33:59Z", "author": {"login": "jsjtzyy"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgYzdJgFqTQwOTYxMjc2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjNchWgFqTQxNTYxMDkyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjEyNzY0", "url": "https://github.com/linkedin/ambry/pull/1516#pullrequestreview-409612764", "createdAt": "2020-05-12T00:05:35Z", "commit": {"oid": "83367ed058e6446be72c94650149e7ed8eb993ac"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjEyODgx", "url": "https://github.com/linkedin/ambry/pull/1516#pullrequestreview-409612881", "createdAt": "2020-05-12T00:05:54Z", "commit": {"oid": "83367ed058e6446be72c94650149e7ed8eb993ac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83367ed058e6446be72c94650149e7ed8eb993ac", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/83367ed058e6446be72c94650149e7ed8eb993ac", "committedDate": "2020-05-11T03:06:08Z", "message": "Support monitoring inconsistency between participants on same node\n\nAs required by ZK cluster migration, ambry-server has to host two participants\nthat update sealed/stopped replicas at same time. In case any participant fails\nto update corresponding ZK cluster(i.e. connection lost), ambry-server needs to\nmonitor and alert inconsistency of sealed/stopped replicas from two participants.\nThis PR introduces a consistency checker that periodically checks sealed/stopped\nreplica lists from two participants and emits metric if there is mismatch."}, "afterCommit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/0e30c452361bebd7590be22896855db32f3464aa", "committedDate": "2020-05-13T18:02:21Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzY4ODk2", "url": "https://github.com/linkedin/ambry/pull/1516#pullrequestreview-413768896", "createdAt": "2020-05-18T16:46:59Z", "commit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDY0OTM5", "url": "https://github.com/linkedin/ambry/pull/1516#pullrequestreview-414064939", "createdAt": "2020-05-19T02:48:20Z", "commit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMjo0ODoyMFrOGXN-GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzowMzoyNFrOGXOMYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk5OTMyMA==", "bodyText": "Please add a comment explaining this section of code.", "url": "https://github.com/linkedin/ambry/pull/1516#discussion_r426999320", "createdAt": "2020-05-19T02:48:20Z", "author": {"login": "lightningrob"}, "path": "ambry-server/src/main/java/com/github/ambry/server/AmbryServer.java", "diffHunk": "@@ -158,7 +160,16 @@ public void startup() throws InstantiationException {\n       properties.verify();\n \n       scheduler = Utils.newScheduler(serverConfig.serverSchedulerNumOfthreads, false);\n-      logger.info(\"check if node exist in clustermap host {} port {}\", networkConfig.hostName, networkConfig.port);\n+      if (clusterParticipants != null && clusterParticipants.size() > 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAwMDk2Nw==", "bodyText": "Nit: the test class name is misleading since you don't directly create any instances of ParticipantsConsistencyChecker and run their methods.", "url": "https://github.com/linkedin/ambry/pull/1516#discussion_r427000967", "createdAt": "2020-05-19T02:54:55Z", "author": {"login": "lightningrob"}, "path": "ambry-server/src/test/java/com/github/ambry/server/ParticipantsConsistencyCheckerTest.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/*\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.server;\n+\n+import com.github.ambry.clustermap.ClusterParticipant;\n+import com.github.ambry.clustermap.MockClusterAgentsFactory;\n+import com.github.ambry.clustermap.MockClusterMap;\n+import com.github.ambry.clustermap.PartitionStateChangeListener;\n+import com.github.ambry.clustermap.ReplicaId;\n+import com.github.ambry.clustermap.ReplicaSyncUpManager;\n+import com.github.ambry.clustermap.StateModelListenerType;\n+import com.github.ambry.commons.LoggingNotificationSystem;\n+import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.notification.NotificationSystem;\n+import com.github.ambry.utils.SystemTime;\n+import com.github.ambry.utils.Time;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import static org.junit.Assert.*;\n+import static org.mockito.Mockito.*;\n+\n+\n+/**\n+ * Test class to verify participant consistency checker.\n+ */\n+public class ParticipantsConsistencyCheckerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAwMjIyNQ==", "bodyText": "If this task is going to run every X seconds, do we want to increment the counter each time?  Once we have a mismatch, the metric count will increase proportionally to how often the schedule is run, which doesn't seem very meaningful.  Wondering if it should be a Guage instead.\nBtw, what action can be taken if an alert on this metric is seen?", "url": "https://github.com/linkedin/ambry/pull/1516#discussion_r427002225", "createdAt": "2020-05-19T03:00:10Z", "author": {"login": "lightningrob"}, "path": "ambry-server/src/main/java/com/github/ambry/server/ParticipantsConsistencyChecker.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.server;\n+\n+import com.github.ambry.clustermap.ClusterParticipant;\n+import com.github.ambry.commons.ServerMetrics;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * A thread that helps periodically check consistency of participants. Specifically, it checks if there is a mismatch\n+ * in sealed and stopped replicas from each participant.\n+ */\n+public class ParticipantsConsistencyChecker implements Runnable {\n+  private final List<ClusterParticipant> participants;\n+  private final ServerMetrics metrics;\n+  private static final Logger logger = LoggerFactory.getLogger(ParticipantsConsistencyChecker.class);\n+\n+  public ParticipantsConsistencyChecker(List<ClusterParticipant> participants, ServerMetrics metrics) {\n+    this.participants = participants;\n+    this.metrics = metrics;\n+    metrics.registerParticipantsMismatchMetrics();\n+  }\n+\n+  @Override\n+  public void run() {\n+    // when code reaches here, it means there are at least two participants.\n+    ClusterParticipant clusterParticipant = participants.get(0);\n+    Set<String> sealedReplicas1 = new HashSet<>(clusterParticipant.getSealedReplicas());\n+    Set<String> stoppedReplicas1 = new HashSet<>(clusterParticipant.getStoppedReplicas());\n+    for (int i = 1; i < participants.size(); ++i) {\n+      Set<String> sealedReplicas2 = new HashSet<>(participants.get(i).getSealedReplicas());\n+      if (!sealedReplicas1.equals(sealedReplicas2)) {\n+        logger.warn(\"Mismatch in sealed replicas. Set {} is different from set {}\", sealedReplicas1, sealedReplicas2);\n+        metrics.sealedReplicasMismatchCount.inc();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAwMjk3Nw==", "bodyText": "Minor: in seconds.", "url": "https://github.com/linkedin/ambry/pull/1516#discussion_r427002977", "createdAt": "2020-05-19T03:03:24Z", "author": {"login": "lightningrob"}, "path": "ambry-api/src/main/java/com/github/ambry/config/RouterConfig.java", "diffHunk": "@@ -422,7 +422,7 @@\n   public final boolean routerOperationTrackerHistogramDumpEnabled;\n \n   /**\n-   * The period of dumping resource-level histogram (if enabled).\n+   * The period of dumping resource-level histogram in second(if enabled).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13cfbe33892056a9c57c17cc7e9960bb08171ce2", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/13cfbe33892056a9c57c17cc7e9960bb08171ce2", "committedDate": "2020-05-19T03:41:25Z", "message": "Support monitoring inconsistency between participants on same node\n\nAs required by ZK cluster migration, ambry-server has to host two participants\nthat update sealed/stopped replicas at same time. In case any participant fails\nto update corresponding ZK cluster(i.e. connection lost), ambry-server needs to\nmonitor and alert inconsistency of sealed/stopped replicas from two participants.\nThis PR introduces a consistency checker that periodically checks sealed/stopped\nreplica lists from two participants and emits metric if there is mismatch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8586a9b8dd80d0ad06f891222e2cc7c41a01f6f7", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/8586a9b8dd80d0ad06f891222e2cc7c41a01f6f7", "committedDate": "2020-05-19T03:41:25Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83c3c4f9ebdea5cc6f2fb25f33652ea450cae27b", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/83c3c4f9ebdea5cc6f2fb25f33652ea450cae27b", "committedDate": "2020-05-19T04:47:44Z", "message": "address Rob's comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e30c452361bebd7590be22896855db32f3464aa", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/0e30c452361bebd7590be22896855db32f3464aa", "committedDate": "2020-05-13T18:02:21Z", "message": "address comments"}, "afterCommit": {"oid": "83c3c4f9ebdea5cc6f2fb25f33652ea450cae27b", "author": {"user": {"login": "jsjtzyy", "name": "Yingyi Zhang"}}, "url": "https://github.com/linkedin/ambry/commit/83c3c4f9ebdea5cc6f2fb25f33652ea450cae27b", "committedDate": "2020-05-19T04:47:44Z", "message": "address Rob's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjEwOTI5", "url": "https://github.com/linkedin/ambry/pull/1516#pullrequestreview-415610929", "createdAt": "2020-05-20T18:33:21Z", "commit": {"oid": "83c3c4f9ebdea5cc6f2fb25f33652ea450cae27b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1478, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}