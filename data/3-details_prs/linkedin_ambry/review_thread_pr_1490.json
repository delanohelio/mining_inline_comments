{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMjIxOTUy", "number": 1490, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxOTozN1rOD4dbAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzowNjoyNlrOD5FL5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTI4ODk5OnYy", "diffSide": "RIGHT", "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxOTozN1rOGPTLZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToyOToxMFrOGPTapQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NjAzNw==", "bodyText": "looks like this variable name may need adjusting since it is assigned to the per datacenter metric config", "url": "https://github.com/linkedin/ambry/pull/1490#discussion_r418696037", "createdAt": "2020-05-01T19:19:37Z", "author": {"login": "cgtz"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "diffHunk": "@@ -77,6 +78,7 @@ public VcrReplicationManager(CloudConfig cloudConfig, ReplicationConfig replicat\n     this.cloudStorageCompactor =\n         cloudConfig.cloudBlobCompactionEnabled ? new CloudStorageCompactor(cloudDestination, cloudConfig,\n             partitionToPartitionInfo.keySet(), vcrMetrics) : null;\n+    trackPerPartitionLagInMetric = replicationConfig.replicationTrackRemoteFromLocalPerDatacenterLag;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdde999e84d16ec52957615b836bec65a0db866d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5ODQ1Ng==", "bodyText": "ah, good catch, will change.\nFor naming, on second thought, I probably won't change the name of replicationTrackPerPartitionLagFromRemote (this is introduced by @zzmao ). As you can see, I renamed it in this PR but since it requires to change config name/ sensor name in closed source, I feel like I would change it back. What do you think? @cgtz @zzmao", "url": "https://github.com/linkedin/ambry/pull/1490#discussion_r418698456", "createdAt": "2020-05-01T19:25:37Z", "author": {"login": "jsjtzyy"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "diffHunk": "@@ -77,6 +78,7 @@ public VcrReplicationManager(CloudConfig cloudConfig, ReplicationConfig replicat\n     this.cloudStorageCompactor =\n         cloudConfig.cloudBlobCompactionEnabled ? new CloudStorageCompactor(cloudDestination, cloudConfig,\n             partitionToPartitionInfo.keySet(), vcrMetrics) : null;\n+    trackPerPartitionLagInMetric = replicationConfig.replicationTrackRemoteFromLocalPerDatacenterLag;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NjAzNw=="}, "originalCommit": {"oid": "bdde999e84d16ec52957615b836bec65a0db866d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5OTk0MQ==", "bodyText": "It probably isn't used in too many places and isn't a required config so it may be okay to change if you think the new names are significantly more clear. Of course, you may need to keep both configs in src files temporarily so that it works before and after the deployment of this change and then remove the old config after this change is fully deployed. Up to you if you want to do this.", "url": "https://github.com/linkedin/ambry/pull/1490#discussion_r418699941", "createdAt": "2020-05-01T19:29:10Z", "author": {"login": "cgtz"}, "path": "ambry-cloud/src/main/java/com/github/ambry/cloud/VcrReplicationManager.java", "diffHunk": "@@ -77,6 +78,7 @@ public VcrReplicationManager(CloudConfig cloudConfig, ReplicationConfig replicat\n     this.cloudStorageCompactor =\n         cloudConfig.cloudBlobCompactionEnabled ? new CloudStorageCompactor(cloudDestination, cloudConfig,\n             partitionToPartitionInfo.keySet(), vcrMetrics) : null;\n+    trackPerPartitionLagInMetric = replicationConfig.replicationTrackRemoteFromLocalPerDatacenterLag;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NjAzNw=="}, "originalCommit": {"oid": "bdde999e84d16ec52957615b836bec65a0db866d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTI5NTk0OnYy", "diffSide": "RIGHT", "path": "ambry-server/src/test/java/com/github/ambry/server/AmbryServerRequestsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToyMjoyMlrOGPTPqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToyNjo0M1rOGPTWxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NzEzMQ==", "bodyText": "Why comment it?", "url": "https://github.com/linkedin/ambry/pull/1490#discussion_r418697131", "createdAt": "2020-05-01T19:22:22Z", "author": {"login": "zzmao"}, "path": "ambry-server/src/test/java/com/github/ambry/server/AmbryServerRequestsTest.java", "diffHunk": "@@ -318,7 +318,7 @@ public void scheduleCompactionFailureTest() throws InterruptedException, IOExcep\n    * @throws InterruptedException\n    * @throws IOException\n    */\n-  @Test\n+  //@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdde999e84d16ec52957615b836bec65a0db866d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5ODk0OA==", "bodyText": "Good catch, it was previously disabled for debugging. I will remove it. Thanks.", "url": "https://github.com/linkedin/ambry/pull/1490#discussion_r418698948", "createdAt": "2020-05-01T19:26:43Z", "author": {"login": "jsjtzyy"}, "path": "ambry-server/src/test/java/com/github/ambry/server/AmbryServerRequestsTest.java", "diffHunk": "@@ -318,7 +318,7 @@ public void scheduleCompactionFailureTest() throws InterruptedException, IOExcep\n    * @throws InterruptedException\n    * @throws IOException\n    */\n-  @Test\n+  //@Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NzEzMQ=="}, "originalCommit": {"oid": "bdde999e84d16ec52957615b836bec65a0db866d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTgwMzkwOnYy", "diffSide": "RIGHT", "path": "ambry-commons/src/main/java/com/github/ambry/commons/ServerMetrics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzowNjoyNlrOGQJrNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzowNjoyNlrOGQJrNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU4ODkxOA==", "bodyText": "@Arun-LinkedIn these two metrics are what you need to track realtime cross-colo fetch/metadata request bytes rate. Note that, these metrics are emitted on source node, which are more accurate than existing metrics on puller to indicate cross-colo bandwidth usage.", "url": "https://github.com/linkedin/ambry/pull/1490#discussion_r419588918", "createdAt": "2020-05-04T17:06:26Z", "author": {"login": "jsjtzyy"}, "path": "ambry-commons/src/main/java/com/github/ambry/commons/ServerMetrics.java", "diffHunk": "@@ -211,12 +215,14 @@\n   public final Counter ttlAlreadyUpdatedError;\n   public final Counter ttlUpdateRejectedError;\n   public final Counter replicationResponseMessageSizeTooHigh;\n+  public final Map<String, Meter> crossColoFetchBytesRate = new HashMap<>();\n+  public final Map<String, Meter> crossColoMetadataExchangeBytesRate = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "322447425a44429194fa645e6a94fa53f5851165"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1531, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}