{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTg1OTM2", "number": 1386, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo1Njo0NVrODjMtGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMDo0OVrODjTTIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjM0OTA1OnYy", "diffSide": "RIGHT", "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/DeleteMessageFormatInputStream.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODo1Njo0NVrOFu3_Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxNzo1NFrOFu4rfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NjE2Ng==", "bodyText": "Minor:\nAdding a new constructor created some duplicated code and you need 'if else' in the caller. Prefer to change existing constructor by adding lifeVersion.", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384696166", "createdAt": "2020-02-26T18:56:45Z", "author": {"login": "zzmao"}, "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/DeleteMessageFormatInputStream.java", "diffHunk": "@@ -55,4 +55,22 @@ public DeleteMessageFormatInputStream(StoreKey key, short accountId, short conta\n     messageLength = buffer.capacity();\n     buffer.flip();\n   }\n+\n+  public DeleteMessageFormatInputStream(StoreKey key, short accountId, short containerId, long deletionTimeMs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4204604af246e821e68de6a68b29ca80c2e12fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNzQ1NA==", "bodyText": "The reason I create a different constructor is because of dependency issue.\nThe new constructor requires lifeVersion to be not -1, which is a constant from IndexValue.Life_Version_From_Frontend. And I don't want to create a new constant here and I can't import the IndexValue constant either. That's why I create a new constructor and leave if-else statement in the ambry-store package, where IndexValue constant can be used.", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384707454", "createdAt": "2020-02-26T19:17:54Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/DeleteMessageFormatInputStream.java", "diffHunk": "@@ -55,4 +55,22 @@ public DeleteMessageFormatInputStream(StoreKey key, short accountId, short conta\n     messageLength = buffer.capacity();\n     buffer.flip();\n   }\n+\n+  public DeleteMessageFormatInputStream(StoreKey key, short accountId, short containerId, long deletionTimeMs,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5NjE2Ng=="}, "originalCommit": {"oid": "b4204604af246e821e68de6a68b29ca80c2e12fe"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjM2ODQ2OnYy", "diffSide": "RIGHT", "path": "ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOTowMjoxMVrOFu4LRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToxODowMFrOFu4rsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5OTIwNw==", "bodyText": "-1 might be better, to indicate invalid or meaningless.", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384699207", "createdAt": "2020-02-26T19:02:11Z", "author": {"login": "zzmao"}, "path": "ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java", "diffHunk": "@@ -398,16 +396,11 @@ public void handleDeleteRequest(NetworkRequest request) throws IOException, Inte\n         response = new DeleteResponse(deleteRequest.getCorrelationId(), deleteRequest.getClientId(), error);\n       } else {\n         BlobId convertedBlobId = (BlobId) convertedStoreKey;\n-        MessageFormatInputStream stream =\n-            new DeleteMessageFormatInputStream(convertedStoreKey, convertedBlobId.getAccountId(),\n-                convertedBlobId.getContainerId(), deleteRequest.getDeletionTimeInMs());\n-        MessageInfo info = new MessageInfo(convertedStoreKey, stream.getSize(), convertedBlobId.getAccountId(),\n-            convertedBlobId.getContainerId(), deleteRequest.getDeletionTimeInMs());\n-        ArrayList<MessageInfo> infoList = new ArrayList<MessageInfo>();\n-        infoList.add(info);\n-        MessageFormatWriteSet writeSet = new MessageFormatWriteSet(stream, infoList, false);\n+        MessageInfo info =\n+            new MessageInfo(convertedStoreKey, 0, convertedBlobId.getAccountId(), convertedBlobId.getContainerId(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4204604af246e821e68de6a68b29ca80c2e12fe"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwNzUwNQ==", "bodyText": "sure", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384707505", "createdAt": "2020-02-26T19:18:00Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-protocol/src/main/java/com.github.ambry.protocol/AmbryRequests.java", "diffHunk": "@@ -398,16 +396,11 @@ public void handleDeleteRequest(NetworkRequest request) throws IOException, Inte\n         response = new DeleteResponse(deleteRequest.getCorrelationId(), deleteRequest.getClientId(), error);\n       } else {\n         BlobId convertedBlobId = (BlobId) convertedStoreKey;\n-        MessageFormatInputStream stream =\n-            new DeleteMessageFormatInputStream(convertedStoreKey, convertedBlobId.getAccountId(),\n-                convertedBlobId.getContainerId(), deleteRequest.getDeletionTimeInMs());\n-        MessageInfo info = new MessageInfo(convertedStoreKey, stream.getSize(), convertedBlobId.getAccountId(),\n-            convertedBlobId.getContainerId(), deleteRequest.getDeletionTimeInMs());\n-        ArrayList<MessageInfo> infoList = new ArrayList<MessageInfo>();\n-        infoList.add(info);\n-        MessageFormatWriteSet writeSet = new MessageFormatWriteSet(stream, infoList, false);\n+        MessageInfo info =\n+            new MessageInfo(convertedStoreKey, 0, convertedBlobId.getAccountId(), convertedBlobId.getContainerId(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY5OTIwNw=="}, "originalCommit": {"oid": "b4204604af246e821e68de6a68b29ca80c2e12fe"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzQyOTQ3OnYy", "diffSide": "LEFT", "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/CloudBlobStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMDo0OVrOFvCOSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMDo0OVrOFvCOSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2MzgxOQ==", "bodyText": "Not sure why you removed the javadoc.  Please restore.", "url": "https://github.com/linkedin/ambry/pull/1386#discussion_r384863819", "createdAt": "2020-02-27T01:20:49Z", "author": {"login": "lightningrob"}, "path": "ambry-cloud/src/main/java/com.github.ambry.cloud/CloudBlobStore.java", "diffHunk": "@@ -367,18 +367,12 @@ public short undelete(MessageInfo info) throws StoreException {\n     throw new UnsupportedOperationException(\"Undelete not supported in cloud store\");\n   }\n \n-  /**\n-   * {@inheritDoc}\n-   * Currently, the only supported operation is to set the TTL to infinite (i.e. no arbitrary increase or decrease)\n-   * @param messageSetToUpdate The list of messages that need to be updated\n-   * @throws StoreException if there is a problem persisting the operation in the store.\n-   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83b8f0af78f4506873e64cdff816198b1c3cad11"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1713, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}