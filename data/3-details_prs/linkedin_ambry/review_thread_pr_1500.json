{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDU5NDcz", "number": 1500, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjoyMzozOFrOD6BHug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjoyMzozOFrOD6BHug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTYyMzYyOnYy", "diffSide": "RIGHT", "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/ClusterMapUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjoyMzozOVrOGRnjow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzo1OTo0MlrOGRpkdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEyNzA3NQ==", "bodyText": "This is a nitpick. Feel free to ignore, if you don't feel like it.\nI would suggest that either we name both methods (getRandomWritablePartition, hasEnoughEligibleReplicasForPut) to one of these names\n\n(getRandomWritablePartition, hasEnoughEligibleWritableReplicas)\n(getRandomPartitionForPut, hasEnoughEligibleReplicasForPut)\n\nBut if we decide to take approach 2, then we should also rename these:\nClusterMap::getRandomWritablePartition to ClusterMap::getRandomPartitionForPut\nPartitionLayout::getRandomWritablePartition to PartitionLayout::getRandomPartitionForPut", "url": "https://github.com/linkedin/ambry/pull/1500#discussion_r421127075", "createdAt": "2020-05-06T22:23:39Z", "author": {"login": "ankagrawal"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/ClusterMapUtils.java", "diffHunk": "@@ -505,17 +506,19 @@ PartitionId getRandomWritablePartition(String partitionClass, List<PartitionId>\n     }\n \n     /**\n-     * Check whether the parition has has enough replicas up for write operations to try. Enough replicas is considered\n-     * to be all local replicas if such information is available. In case localDatacenterName is not available, all of\n-     * the partition's replicas should be up.\n+     * Check whether the partition has enough eligible replicas for write operations to try. Here, \"eligible\" means\n+     * replica is up and in required states for PUT request. Enough replicas is considered to be all local replicas if\n+     * such information is available. In case localDatacenterName is not available, all of the partition's replicas\n+     * should be up.\n      * @param partitionId the {@link PartitionId} to check.\n-     * @return true if enough replicas are up; false otherwise.\n+     * @return true if enough replicas are eligible; false otherwise.\n      */\n-    private boolean areEnoughReplicasForPartitionUp(PartitionId partitionId) {\n+    private boolean hasEnoughEligibleReplicasForPut(PartitionId partitionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ba10b9763c7f44172acb6e36c4be855057e1b15"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEzNjY0MA==", "bodyText": "Option 1 sounds like a good name to me without requiring many public interface changes", "url": "https://github.com/linkedin/ambry/pull/1500#discussion_r421136640", "createdAt": "2020-05-06T22:49:05Z", "author": {"login": "cgtz"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/ClusterMapUtils.java", "diffHunk": "@@ -505,17 +506,19 @@ PartitionId getRandomWritablePartition(String partitionClass, List<PartitionId>\n     }\n \n     /**\n-     * Check whether the parition has has enough replicas up for write operations to try. Enough replicas is considered\n-     * to be all local replicas if such information is available. In case localDatacenterName is not available, all of\n-     * the partition's replicas should be up.\n+     * Check whether the partition has enough eligible replicas for write operations to try. Here, \"eligible\" means\n+     * replica is up and in required states for PUT request. Enough replicas is considered to be all local replicas if\n+     * such information is available. In case localDatacenterName is not available, all of the partition's replicas\n+     * should be up.\n      * @param partitionId the {@link PartitionId} to check.\n-     * @return true if enough replicas are up; false otherwise.\n+     * @return true if enough replicas are eligible; false otherwise.\n      */\n-    private boolean areEnoughReplicasForPartitionUp(PartitionId partitionId) {\n+    private boolean hasEnoughEligibleReplicasForPut(PartitionId partitionId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEyNzA3NQ=="}, "originalCommit": {"oid": "9ba10b9763c7f44172acb6e36c4be855057e1b15"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE2MDA1Mg==", "bodyText": "sure, let's take option 1", "url": "https://github.com/linkedin/ambry/pull/1500#discussion_r421160052", "createdAt": "2020-05-06T23:59:42Z", "author": {"login": "jsjtzyy"}, "path": "ambry-clustermap/src/main/java/com/github/ambry/clustermap/ClusterMapUtils.java", "diffHunk": "@@ -505,17 +506,19 @@ PartitionId getRandomWritablePartition(String partitionClass, List<PartitionId>\n     }\n \n     /**\n-     * Check whether the parition has has enough replicas up for write operations to try. Enough replicas is considered\n-     * to be all local replicas if such information is available. In case localDatacenterName is not available, all of\n-     * the partition's replicas should be up.\n+     * Check whether the partition has enough eligible replicas for write operations to try. Here, \"eligible\" means\n+     * replica is up and in required states for PUT request. Enough replicas is considered to be all local replicas if\n+     * such information is available. In case localDatacenterName is not available, all of the partition's replicas\n+     * should be up.\n      * @param partitionId the {@link PartitionId} to check.\n-     * @return true if enough replicas are up; false otherwise.\n+     * @return true if enough replicas are eligible; false otherwise.\n      */\n-    private boolean areEnoughReplicasForPartitionUp(PartitionId partitionId) {\n+    private boolean hasEnoughEligibleReplicasForPut(PartitionId partitionId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEyNzA3NQ=="}, "originalCommit": {"oid": "9ba10b9763c7f44172acb6e36c4be855057e1b15"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1547, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}