{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODcwMDE1", "number": 1654, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjo0MTo1M1rOEstHNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjo0MTo1M1rOEstHNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzExOTI3OnYy", "diffSide": "RIGHT", "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjo0MTo1M1rOHgF7bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjo0Nzo0MlrOHgPjkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxMzYxNA==", "bodyText": "There might be an edge case where local store was started when exchanging metadata and sending get request but it became unavailable on receiving blobs.  If we look at line 1106 ~ line 1111, we probably get an incorrect partitionResponseInfoIndex in subsequent iteration because we skip directly here without updating partitionResponseInfoIndex. What do you think?", "url": "https://github.com/linkedin/ambry/pull/1654#discussion_r503413614", "createdAt": "2020-10-12T16:41:53Z", "author": {"login": "jsjtzyy"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -1097,6 +1097,12 @@ private void writeMessagesToLocalStoreAndAdvanceTokens(List<ExchangeMetadataResp\n     for (int i = 0; i < exchangeMetadataResponseList.size(); i++) {\n       ExchangeMetadataResponse exchangeMetadataResponse = exchangeMetadataResponseList.get(i);\n       RemoteReplicaInfo remoteReplicaInfo = replicasToReplicatePerNode.get(i);\n+      if (!remoteReplicaInfo.getLocalStore().isStarted()) {\n+        logger.debug(\"Store for {} is stopped, dropping metadata response.\",\n+            remoteReplicaInfo.getReplicaId().getPartitionId().toPathString());\n+        continue;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "554d8e499ebe613e8b8f0e7202de3561bbd796b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2MzY1Nw==", "bodyText": "It's possible.  Is there a better way to avoid the store exception without messing up the index? If you think this is risky I'll revert the change.", "url": "https://github.com/linkedin/ambry/pull/1654#discussion_r503563657", "createdAt": "2020-10-12T22:23:17Z", "author": {"login": "lightningrob"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -1097,6 +1097,12 @@ private void writeMessagesToLocalStoreAndAdvanceTokens(List<ExchangeMetadataResp\n     for (int i = 0; i < exchangeMetadataResponseList.size(); i++) {\n       ExchangeMetadataResponse exchangeMetadataResponse = exchangeMetadataResponseList.get(i);\n       RemoteReplicaInfo remoteReplicaInfo = replicasToReplicatePerNode.get(i);\n+      if (!remoteReplicaInfo.getLocalStore().isStarted()) {\n+        logger.debug(\"Store for {} is stopped, dropping metadata response.\",\n+            remoteReplicaInfo.getReplicaId().getPartitionId().toPathString());\n+        continue;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxMzYxNA=="}, "originalCommit": {"oid": "554d8e499ebe613e8b8f0e7202de3561bbd796b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2NTU5OA==", "bodyText": "Throwing a store exception is probably fine for now as it doesn't prevent other store from being written. Could you revert the change and add a \"TODO\" here that we can check store state before writing blobs into store?  I can make relevant changes in future PR.", "url": "https://github.com/linkedin/ambry/pull/1654#discussion_r503565598", "createdAt": "2020-10-12T22:29:29Z", "author": {"login": "jsjtzyy"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -1097,6 +1097,12 @@ private void writeMessagesToLocalStoreAndAdvanceTokens(List<ExchangeMetadataResp\n     for (int i = 0; i < exchangeMetadataResponseList.size(); i++) {\n       ExchangeMetadataResponse exchangeMetadataResponse = exchangeMetadataResponseList.get(i);\n       RemoteReplicaInfo remoteReplicaInfo = replicasToReplicatePerNode.get(i);\n+      if (!remoteReplicaInfo.getLocalStore().isStarted()) {\n+        logger.debug(\"Store for {} is stopped, dropping metadata response.\",\n+            remoteReplicaInfo.getReplicaId().getPartitionId().toPathString());\n+        continue;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxMzYxNA=="}, "originalCommit": {"oid": "554d8e499ebe613e8b8f0e7202de3561bbd796b7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU3MTM0Nw==", "bodyText": "Done", "url": "https://github.com/linkedin/ambry/pull/1654#discussion_r503571347", "createdAt": "2020-10-12T22:47:42Z", "author": {"login": "lightningrob"}, "path": "ambry-replication/src/main/java/com/github/ambry/replication/ReplicaThread.java", "diffHunk": "@@ -1097,6 +1097,12 @@ private void writeMessagesToLocalStoreAndAdvanceTokens(List<ExchangeMetadataResp\n     for (int i = 0; i < exchangeMetadataResponseList.size(); i++) {\n       ExchangeMetadataResponse exchangeMetadataResponse = exchangeMetadataResponseList.get(i);\n       RemoteReplicaInfo remoteReplicaInfo = replicasToReplicatePerNode.get(i);\n+      if (!remoteReplicaInfo.getLocalStore().isStarted()) {\n+        logger.debug(\"Store for {} is stopped, dropping metadata response.\",\n+            remoteReplicaInfo.getReplicaId().getPartitionId().toPathString());\n+        continue;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQxMzYxNA=="}, "originalCommit": {"oid": "554d8e499ebe613e8b8f0e7202de3561bbd796b7"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1072, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}