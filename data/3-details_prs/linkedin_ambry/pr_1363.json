{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDgwNTE5", "number": 1363, "title": "Add UndeleteMessageFormatInputStream", "bodyText": "Adding UndeleteMessageFormatInputStream", "createdAt": "2020-01-22T21:49:55Z", "url": "https://github.com/linkedin/ambry/pull/1363", "merged": true, "mergeCommit": {"oid": "76f8d722f2ec3b04f460782304d05b817ae1863f"}, "closed": true, "closedAt": "2020-01-27T22:08:52Z", "author": {"login": "justinlin-linkedin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb89hKagFqTM0Njk1MDI4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-kD7BAFqTM0OTAwNTAzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTUwMjg0", "url": "https://github.com/linkedin/ambry/pull/1363#pullrequestreview-346950284", "createdAt": "2020-01-22T22:30:49Z", "commit": {"oid": "a34ceb9901667d10ec323eb73b6a934e5dd30d3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MTU2NTI1", "url": "https://github.com/linkedin/ambry/pull/1363#pullrequestreview-348156525", "createdAt": "2020-01-24T18:55:27Z", "commit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxODo1NToyOFrOFhnNVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxOTo1NDoyNFrOFhowag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc4OTcxOQ==", "bodyText": "minor: 2020", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370789719", "createdAt": "2020-01-24T18:55:28Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright 2016 LinkedIn Corp. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc4OTg1MA==", "bodyText": "nit: to undelete a blob", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370789850", "createdAt": "2020-01-24T18:55:43Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright 2016 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.messageformat;\n+\n+import com.github.ambry.store.StoreKey;\n+import java.nio.ByteBuffer;\n+\n+\n+/**\n+ * Represents a message that consists of the undelete record.\n+ * This format is used to delete a blob", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5MzQyNQ==", "bodyText": "Looks like you decide to go with MessageHeader_Format_V2, which means lifeVersion is not tracked in message header. Is this intended?", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370793425", "createdAt": "2020-01-24T19:04:08Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/UndeleteMessageFormatInputStream.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright 2016 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.messageformat;\n+\n+import com.github.ambry.store.StoreKey;\n+import java.nio.ByteBuffer;\n+\n+\n+/**\n+ * Represents a message that consists of the undelete record.\n+ * This format is used to delete a blob\n+ *\n+ *  - - - - - - - - - - - - -\n+ * |     Message Header      |\n+ *  - - - - - - - - - - - - -\n+ * |       blob key          |\n+ *  - - - - - - - - - - - - -\n+ * |      Update Record      |\n+ *  - - - - - - - - - - - - -\n+ *\n+ */\n+public class UndeleteMessageFormatInputStream extends MessageFormatInputStream {\n+  public UndeleteMessageFormatInputStream(StoreKey key, short accountId, short containerId, long updateTimeInMs)\n+      throws MessageFormatException {\n+    int headerSize = MessageFormatRecord.getHeaderSizeForVersion(MessageFormatRecord.headerVersionToUse);\n+    int recordSize = MessageFormatRecord.Update_Format_V3.getRecordSize(SubRecord.Type.UNDELETE);\n+    buffer = ByteBuffer.allocate(headerSize + key.sizeInBytes() + recordSize);\n+    MessageFormatRecord.MessageHeader_Format_V2.serializeHeader(buffer, recordSize,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMjQwNw==", "bodyText": "nit: add more comment for update operation (i.e DELETE/TTLUpdate/UNDELETE)", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370802407", "createdAt": "2020-01-24T19:24:50Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com.github.ambry/store/MessageInfo.java", "diffHunk": "@@ -64,6 +64,24 @@ public MessageInfo(StoreKey key, long size, boolean deleted, boolean ttlUpdated,\n     this(key, size, deleted, ttlUpdated, Utils.Infinite_Time, accountId, containerId, operationTimeMs);\n   }\n \n+  /**\n+   * Construct an instance of MessageInfo.\n+   * @param key the {@link StoreKey} associated with this message.\n+   * @param size the size of this message in bytes.\n+   * @param deleted {@code true} if the message is deleted, {@code false} otherwise\n+   * @param ttlUpdated {@code true} if the message's ttl has been updated, {@code false} otherwise\n+   * @param undeleted {@code true} if the message is undeleted, {@code false} otherwise\n+   * @param accountId accountId of the blob\n+   * @param containerId containerId of the blob\n+   * @param operationTimeMs operation time in ms\n+   * @param lifeVersion update version of update", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNTkzMg==", "bodyText": "If we don't adopt MessageHeader_Format_V3, do we still need to check this?  I am considering if lifeVersion is not put in header, we probably need to remove hasLifeVersion method from V1/V2 as well.", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370805932", "createdAt": "2020-01-24T19:32:37Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/BlobStoreHardDelete.java", "diffHunk": "@@ -80,24 +80,36 @@ public MessageInfo getMessageInfo(Read read, long offset, StoreKeyFactory storeK\n       if (headerFormat.hasEncryptionKeyRecord()) {\n         deserializeBlobEncryptionKey(stream);\n       }\n+      short lifeVersion = 0;\n+      if (headerFormat.hasLifeVersion()) {\n+        lifeVersion = headerFormat.getLifeVersion();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNjk0MA==", "bodyText": "Sorry, ignore this, I feel like we do need the lifeVersion in message header", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370806940", "createdAt": "2020-01-24T19:34:48Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com.github.ambry.messageformat/BlobStoreHardDelete.java", "diffHunk": "@@ -80,24 +80,36 @@ public MessageInfo getMessageInfo(Read read, long offset, StoreKeyFactory storeK\n       if (headerFormat.hasEncryptionKeyRecord()) {\n         deserializeBlobEncryptionKey(stream);\n       }\n+      short lifeVersion = 0;\n+      if (headerFormat.hasLifeVersion()) {\n+        lifeVersion = headerFormat.getLifeVersion();\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNTkzMg=="}, "originalCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgxNTA4Mg==", "bodyText": "if we decide to use V3 header in the future, please add lifeVersion check in checkHeaderAndStoreKeyForUpdate method.", "url": "https://github.com/linkedin/ambry/pull/1363#discussion_r370815082", "createdAt": "2020-01-24T19:54:24Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/test/java/com.github.ambry.messageformat/MessageFormatInputStreamTest.java", "diffHunk": "@@ -443,4 +443,57 @@ private static void checkTtlUpdateSubRecord(InputStream stream, short accountId,\n         updateRecord.getTtlUpdateSubRecord().getUpdatedExpiryTimeMs());\n     Assert.assertEquals(\"UpdateTime mismatch\", updateTimeMs, updateRecord.getUpdateTimeInMs());\n   }\n+\n+  /**\n+   * Test for {@link UndeleteMessageFormatInputStream}.\n+   * @throws Exception\n+   */\n+  @Test\n+  public void messageFormatUndeleteUpdateRecordTest() throws Exception {\n+    StoreKey key = new MockId(\"id1\");\n+    short accountId = Utils.getRandomShort(TestUtils.RANDOM);\n+    short containerId = Utils.getRandomShort(TestUtils.RANDOM);\n+    long updateTimeMs = SystemTime.getInstance().milliseconds() + TestUtils.RANDOM.nextInt();\n+    MessageFormatInputStream messageFormatInputStream =\n+        new UndeleteMessageFormatInputStream(key, accountId, containerId, updateTimeMs);\n+    long undeleteRecordSize = MessageFormatRecord.Update_Format_V3.getRecordSize(SubRecord.Type.UNDELETE);\n+    int headerSize = MessageFormatRecord.getHeaderSizeForVersion(MessageFormatRecord.headerVersionToUse);\n+    Assert.assertEquals(headerSize + undeleteRecordSize + key.sizeInBytes(), messageFormatInputStream.getSize());\n+    checkUndeleteMessage(messageFormatInputStream, undeleteRecordSize, key, accountId, containerId, updateTimeMs);\n+  }\n+\n+  /**\n+   * Checks a undelete message including headers and the {@link UpdateRecord}.\n+   * @param stream the {@link InputStream} to read data from\n+   * @param expectedRecordSize the expected size of the record in the message. Can be {@code null} if unknown (won't be\n+   *                            checked)\n+   * @param key the expected {@link StoreKey}\n+   * @param accountId the account id expected\n+   * @param containerId the container id expected\n+   * @param updateTimeMs the expected time of update\n+   * @throws Exception any error.\n+   */\n+  private static void checkUndeleteMessage(InputStream stream, Long expectedRecordSize, StoreKey key, short accountId,\n+      short containerId, long updateTimeMs) throws Exception {\n+    checkHeaderAndStoreKeyForUpdate(stream, expectedRecordSize, key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6a3157e0d540f2aeed7372ada808d2d671b2f0e", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/c6a3157e0d540f2aeed7372ada808d2d671b2f0e", "committedDate": "2020-01-27T18:40:11Z", "message": "Add UndeleteMessageFormatInputStream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcda6e5e1dacef9a25c3018fb08993bbc800db8f", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/dcda6e5e1dacef9a25c3018fb08993bbc800db8f", "committedDate": "2020-01-27T18:40:11Z", "message": "comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac01989d5d7ef599e550a95b2a0e7122e3e56901", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/ac01989d5d7ef599e550a95b2a0e7122e3e56901", "committedDate": "2020-01-27T18:40:11Z", "message": "add life version from log to index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7681b19e150208e17604c12e2382993863d7e2e", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/e7681b19e150208e17604c12e2382993863d7e2e", "committedDate": "2020-01-27T18:40:11Z", "message": "wip for comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10d9507fb1f28d78755d7fce843182356ae86d22", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/10d9507fb1f28d78755d7fce843182356ae86d22", "committedDate": "2020-01-27T18:40:11Z", "message": "Comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db954abb88da5a83867a4fffb1a2f74955954ced", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/db954abb88da5a83867a4fffb1a2f74955954ced", "committedDate": "2020-01-22T23:20:35Z", "message": "add life version from log to index"}, "afterCommit": {"oid": "10d9507fb1f28d78755d7fce843182356ae86d22", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/10d9507fb1f28d78755d7fce843182356ae86d22", "committedDate": "2020-01-27T18:40:11Z", "message": "Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDA1MDMw", "url": "https://github.com/linkedin/ambry/pull/1363#pullrequestreview-349005030", "createdAt": "2020-01-27T21:59:07Z", "commit": {"oid": "10d9507fb1f28d78755d7fce843182356ae86d22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1562, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}