{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NTk3NDg3", "number": 1719, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNjowOTo0OFrOFDSolA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzoyMzowMFrOFDl-Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4OTk1MzQ4OnYy", "diffSide": "RIGHT", "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/BlobPropertiesSerDe.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNjowOTo0OFrOIC3T6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNzoyMTo0NVrOIC64wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NDI4Mw==", "bodyText": "minor: looks like we don't have unit test that version = 4 but either contentEncoding or filename is null.", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539874283", "createdAt": "2020-12-10T06:09:48Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/BlobPropertiesSerDe.java", "diffHunk": "@@ -60,22 +62,22 @@ public static BlobProperties getBlobPropertiesFromStream(DataInputStream stream)\n     short accountId = version > VERSION_1 ? stream.readShort() : Account.UNKNOWN_ACCOUNT_ID;\n     short containerId = version > VERSION_1 ? stream.readShort() : Container.UNKNOWN_CONTAINER_ID;\n     boolean isEncrypted = version > VERSION_2 && stream.readByte() == (byte) 1;\n-    String contentEncoding = version > VERSION_3 ? Utils.readIntString(stream) : null;\n-    String filename = version > VERSION_3 ? Utils.readIntString(stream) : null;\n+    String contentEncoding = version > VERSION_3 ? Utils.readNullableIntString(stream) : null;\n+    String filename = version > VERSION_3 ? Utils.readNullableIntString(stream) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkzMjg2Ng==", "bodyText": "I've added an unit test in BlobPropertyTest which set contentEncoding and filename is null.", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539932866", "createdAt": "2020-12-10T07:21:45Z", "author": {"login": "SophieGuo410"}, "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/BlobPropertiesSerDe.java", "diffHunk": "@@ -60,22 +62,22 @@ public static BlobProperties getBlobPropertiesFromStream(DataInputStream stream)\n     short accountId = version > VERSION_1 ? stream.readShort() : Account.UNKNOWN_ACCOUNT_ID;\n     short containerId = version > VERSION_1 ? stream.readShort() : Container.UNKNOWN_CONTAINER_ID;\n     boolean isEncrypted = version > VERSION_2 && stream.readByte() == (byte) 1;\n-    String contentEncoding = version > VERSION_3 ? Utils.readIntString(stream) : null;\n-    String filename = version > VERSION_3 ? Utils.readIntString(stream) : null;\n+    String contentEncoding = version > VERSION_3 ? Utils.readNullableIntString(stream) : null;\n+    String filename = version > VERSION_3 ? Utils.readNullableIntString(stream) : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NDI4Mw=="}, "originalCommit": {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4OTk2MjI5OnYy", "diffSide": "RIGHT", "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNjoxMTo0NVrOIC3Z6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNzoyMTo1NVrOIC65Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NTgxOA==", "bodyText": "nit: java doc", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539875818", "createdAt": "2020-12-10T06:11:45Z", "author": {"login": "jsjtzyy"}, "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -149,6 +149,15 @@ public static String readIntString(DataInputStream input) throws IOException {\n     return readIntString(input, StandardCharsets.UTF_8);\n   }\n \n+  public static String readNullableIntString(DataInputStream input) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkzMjk0Mw==", "bodyText": "Updated.", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539932943", "createdAt": "2020-12-10T07:21:55Z", "author": {"login": "SophieGuo410"}, "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -149,6 +149,15 @@ public static String readIntString(DataInputStream input) throws IOException {\n     return readIntString(input, StandardCharsets.UTF_8);\n   }\n \n+  public static String readNullableIntString(DataInputStream input) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NTgxOA=="}, "originalCommit": {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4OTk3MDY1OnYy", "diffSide": "RIGHT", "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNjoxMzoyN1rOIC3fHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNzoyMjowM1rOIC65YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NzE0OA==", "bodyText": "return tmp.isEmpty() ? null : tmp;", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539877148", "createdAt": "2020-12-10T06:13:27Z", "author": {"login": "jsjtzyy"}, "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -149,6 +149,15 @@ public static String readIntString(DataInputStream input) throws IOException {\n     return readIntString(input, StandardCharsets.UTF_8);\n   }\n \n+  public static String readNullableIntString(DataInputStream input) throws IOException {\n+    String tmp = readIntString(input, StandardCharsets.UTF_8);\n+    if (tmp.length() == 0) {\n+      return null;\n+    } else {\n+      return tmp;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkzMzAyNA==", "bodyText": "Thx, Updated.", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r539933024", "createdAt": "2020-12-10T07:22:03Z", "author": {"login": "SophieGuo410"}, "path": "ambry-utils/src/main/java/com/github/ambry/utils/Utils.java", "diffHunk": "@@ -149,6 +149,15 @@ public static String readIntString(DataInputStream input) throws IOException {\n     return readIntString(input, StandardCharsets.UTF_8);\n   }\n \n+  public static String readNullableIntString(DataInputStream input) throws IOException {\n+    String tmp = readIntString(input, StandardCharsets.UTF_8);\n+    if (tmp.length() == 0) {\n+      return null;\n+    } else {\n+      return tmp;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3NzE0OA=="}, "originalCommit": {"oid": "cfcaefda601834d9c9f7fcc4a5465c3427c40407"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzEyMTg2OnYy", "diffSide": "RIGHT", "path": "ambry-messageformat/src/test/java/com/github/ambry/messageformat/BlobPropertiesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzoyMzowMFrOIDUoog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODowNTowOFrOIDWe5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1NDcyMg==", "bodyText": "is this println intended?", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r540354722", "createdAt": "2020-12-10T17:23:00Z", "author": {"login": "cgtz"}, "path": "ambry-messageformat/src/test/java/com/github/ambry/messageformat/BlobPropertiesTest.java", "diffHunk": "@@ -84,10 +84,19 @@ public void basicTest() throws IOException {\n     String filenameToExpect = filename;\n \n     BlobProperties blobProperties = new BlobProperties(blobSize, serviceId, null, null, false, Utils.Infinite_Time,\n+        SystemTime.getInstance().milliseconds(), accountId, containerId, isEncrypted, externalAssetTag, null, null);\n+    System.out.println(blobProperties.toString()); // Provide example of BlobProperties.toString()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9469f2e5c8bedc9e39c646cb61874c2abcc6136b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM4NDk5OQ==", "bodyText": "ah, i see that other tests do it to cover the toString method.", "url": "https://github.com/linkedin/ambry/pull/1719#discussion_r540384999", "createdAt": "2020-12-10T18:05:08Z", "author": {"login": "cgtz"}, "path": "ambry-messageformat/src/test/java/com/github/ambry/messageformat/BlobPropertiesTest.java", "diffHunk": "@@ -84,10 +84,19 @@ public void basicTest() throws IOException {\n     String filenameToExpect = filename;\n \n     BlobProperties blobProperties = new BlobProperties(blobSize, serviceId, null, null, false, Utils.Infinite_Time,\n+        SystemTime.getInstance().milliseconds(), accountId, containerId, isEncrypted, externalAssetTag, null, null);\n+    System.out.println(blobProperties.toString()); // Provide example of BlobProperties.toString()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM1NDcyMg=="}, "originalCommit": {"oid": "9469f2e5c8bedc9e39c646cb61874c2abcc6136b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1168, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}