{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTgyNzMz", "number": 1523, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxMjozNVrOD-VaDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxMjozNVrOD-VaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Njg5MDM2OnYy", "diffSide": "RIGHT", "path": "ambry-rest/src/main/java/com/github/ambry/rest/NettyResponseChannel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxMjozNlrOGYX9Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOToyOTozMVrOGYayVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMTUwMw==", "bodyText": "Nit: nothing has really expired here.  Suggest renaming this delayedCloseActivatedCount or delayedCloseTriggerCount.", "url": "https://github.com/linkedin/ambry/pull/1523#discussion_r428211503", "createdAt": "2020-05-20T18:12:36Z", "author": {"login": "lightningrob"}, "path": "ambry-rest/src/main/java/com/github/ambry/rest/NettyResponseChannel.java", "diffHunk": "@@ -123,6 +123,7 @@\n     public void operationComplete(ChannelFuture future) {\n       logger.trace(\"scheduling closure of channel {}\", future.channel());\n       future.channel().eventLoop().schedule(() -> {\n+        nettyMetrics.delayedCloseExpiredCount.inc();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aee0e135f7161e8bb8f7c4c28257d84878c29705"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI1Nzg3OQ==", "bodyText": "changed the metric name to delayedCloseActivatedCount. Thanks", "url": "https://github.com/linkedin/ambry/pull/1523#discussion_r428257879", "createdAt": "2020-05-20T19:29:31Z", "author": {"login": "ssen-li"}, "path": "ambry-rest/src/main/java/com/github/ambry/rest/NettyResponseChannel.java", "diffHunk": "@@ -123,6 +123,7 @@\n     public void operationComplete(ChannelFuture future) {\n       logger.trace(\"scheduling closure of channel {}\", future.channel());\n       future.channel().eventLoop().schedule(() -> {\n+        nettyMetrics.delayedCloseExpiredCount.inc();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMTUwMw=="}, "originalCommit": {"oid": "aee0e135f7161e8bb8f7c4c28257d84878c29705"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1600, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}