{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzAyNTI1", "number": 1627, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMToxOToyOFrOEmRMPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MjozOVrOEnjCKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTYzMDA3OnYy", "diffSide": "RIGHT", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMToxOToyOFrOHWMxng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMToxOToyOFrOHWMxng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA0MDAzMA==", "bodyText": "MySqlBackupFileManager.  Also, this class is big enough to be in its own file.\nIt is also a generic backup manager, nothing specific to Mysql.  You don't need to pass the entire  MySqlAccountServiceConfig just for the backupDir.", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493040030", "createdAt": "2020-09-22T21:19:28Z", "author": {"login": "lightningrob"}, "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -307,4 +342,126 @@ private void updateContainersWithMySqlStore(short accountId, Collection<Containe\n       }\n     }\n   }\n+\n+  public static class MySqlBackupFileManager {\n+    private static final Logger logger = LoggerFactory.getLogger(BackupFileManager.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "599024c74d021275fbb9bd262050c45abe365cc8"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjY1NTI3OnYy", "diffSide": "RIGHT", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozOToyNlrOHWWFug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozOToyNlrOHWWFug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MjYzNA==", "bodyText": "you might want to also add a begin anchor of \"^\" for your pattern. Something like\n\"^\" + BACKUP_FILE_NAME + \"......\"", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493192634", "createdAt": "2020-09-23T04:39:26Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -307,4 +359,134 @@ private void updateContainersWithMySqlStore(short accountId, Collection<Containe\n       }\n     }\n   }\n+\n+  public static class MySqlBackupFileManager {\n+    private static final Logger logger = LoggerFactory.getLogger(BackupFileManager.class);\n+    private static final String BACKUP_FILE_NAME = \"MySqlAccountMetadataCopy\";\n+    private final AccountServiceMetrics accountServiceMetrics;\n+    static final String TEMP_FILE_SUFFIX = \"tmp\";\n+    static final String SEP = \".\";\n+    static final DateTimeFormatter TIMESTAMP_FORMATTER = DateTimeFormatter.ofPattern(\"yyyyMMdd'T'HHmmss\");\n+    static final ZoneOffset zoneOffset = ZoneId.systemDefault().getRules().getOffset(LocalDateTime.now());\n+    static final Pattern filenamePattern = Pattern.compile(BACKUP_FILE_NAME + \"\\\\.(\\\\d{8}T\\\\d{6})$\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDI1OTAwOnYy", "diffSide": "RIGHT", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo0Mzo0MFrOHW5oBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo0Mzo0MFrOHW5oBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3NDg1NQ==", "bodyText": "Minor: I think this can just be \"pathname -> ...\"", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493774855", "createdAt": "2020-09-23T17:43:40Z", "author": {"login": "lightningrob"}, "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -406,16 +423,21 @@ void persistAccounts(Collection<String> accounts) {\n       if (backupDirPath == null) {\n         return null;\n       }\n-      Path filepath = backupDirPath.resolve(BACKUP_FILE_NAME);\n+\n+      FileFilter versionFileFilter = (File pathname) -> filenamePattern.matcher(pathname.getName()).find();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDI3OTc4OnYy", "diffSide": "LEFT", "path": "ambry-api/src/main/java/com/github/ambry/account/Account.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo0OTowN1rOHW50vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo0OTowN1rOHW50vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3ODEwOQ==", "bodyText": "Why change from switch to if/else?", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493778109", "createdAt": "2020-09-23T17:49:07Z", "author": {"login": "lightningrob"}, "path": "ambry-api/src/main/java/com/github/ambry/account/Account.java", "diffHunk": "@@ -122,26 +125,24 @@ private Account(JSONObject metadata) throws JSONException {\n       throw new IllegalArgumentException(\"metadata cannot be null.\");\n     }\n     short metadataVersion = (short) metadata.getInt(JSON_VERSION_KEY);\n-    switch (metadataVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDMwNDQ4OnYy", "diffSide": "LEFT", "path": "ambry-account/src/main/java/com/github/ambry/account/AccountInfoMap.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1NTozMlrOHW6ENA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1NTozMlrOHW6ENA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjA2OA==", "bodyText": "I think it's useful to cache the calculated value, so the whole map doesn't need to be scanned on every refresh.", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493782068", "createdAt": "2020-09-23T17:55:32Z", "author": {"login": "lightningrob"}, "path": "ambry-account/src/main/java/com/github/ambry/account/AccountInfoMap.java", "diffHunk": "@@ -40,8 +40,6 @@\n   private final static Logger logger = LoggerFactory.getLogger(AccountInfoMap.class);\n   private final Map<String, Account> nameToAccountMap;\n   private final Map<Short, Account> idToAccountMap;\n-  // used to track last modified time of the accounts and containers in this cache\n-  private long lastModifiedTime = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDMwNzcwOnYy", "diffSide": "RIGHT", "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1NjoxOVrOHW6GTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1NjoxOVrOHW6GTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjYwNQ==", "bodyText": "This will change infrequently.  Perhaps can use cached value?", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r493782605", "createdAt": "2020-09-23T17:56:19Z", "author": {"login": "lightningrob"}, "path": "ambry-account/src/main/java/com/github/ambry/account/MySqlAccountService.java", "diffHunk": "@@ -127,8 +128,20 @@ private void fetchAndUpdateCache() {\n       // Retry connection to mysql if we couldn't set up previously\n       createMySqlAccountStore();\n \n-      // TODO: Find max LMT of Accounts and containers in cache.\n+      // Find max LMT of Accounts and containers in cache.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1a269f1b7d30faf5e4ac9b040556ece19e13d7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjM3NzU5OnYy", "diffSide": "RIGHT", "path": "ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMzoyOTowOVrOHXzuww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMzoyOTowOVrOHXzuww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcyNjg1MQ==", "bodyText": "minor: I guess you wanted to set 10 here.", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r494726851", "createdAt": "2020-09-25T03:29:09Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com/github/ambry/config/MySqlAccountServiceConfig.java", "diffHunk": "@@ -73,6 +74,14 @@\n   @Default(\"\")\n   public final String backupDir;\n \n+  /**\n+   * The maximum number of local backup files kept in disk. When account service exceeds this count, every time it creates\n+   * a new backup file, it will remove the oldest one.\n+   */\n+  @Config(MAX_BACKUP_FILE_COUNT)\n+  @Default(\"100\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a51298f6be5835ad2e36a7ac18713a9969e0bfe"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjM4OTY1OnYy", "diffSide": "RIGHT", "path": "ambry-account/src/test/java/com/github/ambry/account/BackupFileManagerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMzozNjoxMVrOHXz1kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMzozNjoxMVrOHXz1kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDcyODU5NA==", "bodyText": "This import can be removed.", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r494728594", "createdAt": "2020-09-25T03:36:11Z", "author": {"login": "jsjtzyy"}, "path": "ambry-account/src/test/java/com/github/ambry/account/BackupFileManagerTest.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.codahale.metrics.MetricRegistry;\n import com.github.ambry.config.HelixAccountServiceConfig;\n import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.utils.SystemTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a51298f6be5835ad2e36a7ac18713a9969e0bfe"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTAzNDE0OnYy", "diffSide": "RIGHT", "path": "ambry-api/src/test/java/com/github/ambry/account/AccountContainerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MTowMlrOHYM2LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MTowMlrOHYM2LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzODM0OA==", "bodyText": "Is this needed in the old version?", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r495138348", "createdAt": "2020-09-25T17:41:02Z", "author": {"login": "lightningrob"}, "path": "ambry-api/src/test/java/com/github/ambry/account/AccountContainerTest.java", "diffHunk": "@@ -1041,6 +1044,7 @@ private JSONObject buildContainerJson(Container container) throws JSONException\n         containerJson.put(DESCRIPTION_KEY, container.getDescription());\n         containerJson.put(IS_PRIVATE_KEY, !container.isCacheable());\n         containerJson.put(PARENT_ACCOUNT_ID_KEY, container.getParentAccountId());\n+        containerJson.put(LAST_MODIFIED_TIME_KEY, container.getLastModifiedTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d78c7f1c78d012c8df25f6cf0ac79503c2631e6d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTAzOTEyOnYy", "diffSide": "RIGHT", "path": "ambry-api/src/test/java/com/github/ambry/account/AccountContainerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MjozOVrOHYM5Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MjozOVrOHYM5Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzOTEzOA==", "bodyText": "Not sure this was really needed.  Could have referenced it by class.", "url": "https://github.com/linkedin/ambry/pull/1627#discussion_r495139138", "createdAt": "2020-09-25T17:42:39Z", "author": {"login": "lightningrob"}, "path": "ambry-api/src/test/java/com/github/ambry/account/AccountContainerTest.java", "diffHunk": "@@ -34,6 +35,7 @@\n \n import static com.github.ambry.account.Account.*;\n import static com.github.ambry.account.Container.*;\n+import static com.github.ambry.account.Container.LAST_MODIFIED_TIME_KEY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d78c7f1c78d012c8df25f6cf0ac79503c2631e6d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1380, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}