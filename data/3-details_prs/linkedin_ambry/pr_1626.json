{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NjYzOTA2", "number": 1626, "title": "[HTTP2] Return ByteBuf in GetResponse content() method", "bodyText": "", "createdAt": "2020-09-16T01:19:16Z", "url": "https://github.com/linkedin/ambry/pull/1626", "merged": true, "mergeCommit": {"oid": "dbda183e89b6bbb667aefca10a00eb12c63820a9"}, "closed": true, "closedAt": "2020-10-02T18:38:48Z", "author": {"login": "justinlin-linkedin"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLHS3wgFqTQ5Mjc5ODExNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOqbyEAFqTUwMTM2NDQ5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNzk4MTE2", "url": "https://github.com/linkedin/ambry/pull/1626#pullrequestreview-492798116", "createdAt": "2020-09-21T16:43:17Z", "commit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjo0MzoxN1rOHVZnyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzo0Nzo0MlrOHVb8RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwMTkzMQ==", "bodyText": "complete the java doc", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r492201931", "createdAt": "2020-09-21T16:43:17Z", "author": {"login": "jsjtzyy"}, "path": "ambry-api/src/main/java/com/github/ambry/store/MessageReadSet.java", "diffHunk": "@@ -73,4 +74,9 @@\n    * @throws IOException\n    */\n   void doPrefetch(int index, long relativeOffset, long size) throws IOException;\n+\n+  /**\n+   *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNDYxNQ==", "bodyText": "nit: private static final", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r492204615", "createdAt": "2020-09-21T16:47:49Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/MessageFormatSend.java", "diffHunk": "@@ -46,6 +48,8 @@\n \n public class MessageFormatSend extends AbstractByteBufHolder<MessageFormatSend> implements Send {\n \n+  private final static int BUFFERED_INPUT_STREAM_BUFFER_SIZE = 256;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyOTU0NA==", "bodyText": "Just wonder when IOException occurs, do we also need to release messageContent? Correct me if I am wrong.", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r492229544", "createdAt": "2020-09-21T17:30:15Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/MessageFormatSend.java", "diffHunk": "@@ -220,8 +223,23 @@ private void fetchDataFromReadSet() throws MessageFormatException {\n             throw new MessageFormatException(\"Unknown flag in request \" + flag, MessageFormatErrorCodes.IO_Error);\n           }\n         }\n+        dataFromReadSet.add(readSet.getPrefetchedData(i));\n+      }\n+      if (messageCount == 0) {\n+        messageContent = Unpooled.EMPTY_BUFFER;\n+      } else if (messageCount == 1) {\n+        messageContent = dataFromReadSet.get(0);\n+      } else {\n+        CompositeByteBuf compositeByteBuf = dataFromReadSet.get(0).alloc().compositeHeapBuffer(messageCount);\n+        for (ByteBuf data : dataFromReadSet) {\n+          compositeByteBuf.addComponent(true, data);\n+        }\n+        messageContent = compositeByteBuf;\n       }\n     } catch (IOException e) {\n+      for (ByteBuf data : dataFromReadSet) {\n+        data.release();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIzMzA3Ng==", "bodyText": "oh, is that because messageContent should be null when exception occurs?", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r492233076", "createdAt": "2020-09-21T17:36:09Z", "author": {"login": "jsjtzyy"}, "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/MessageFormatSend.java", "diffHunk": "@@ -220,8 +223,23 @@ private void fetchDataFromReadSet() throws MessageFormatException {\n             throw new MessageFormatException(\"Unknown flag in request \" + flag, MessageFormatErrorCodes.IO_Error);\n           }\n         }\n+        dataFromReadSet.add(readSet.getPrefetchedData(i));\n+      }\n+      if (messageCount == 0) {\n+        messageContent = Unpooled.EMPTY_BUFFER;\n+      } else if (messageCount == 1) {\n+        messageContent = dataFromReadSet.get(0);\n+      } else {\n+        CompositeByteBuf compositeByteBuf = dataFromReadSet.get(0).alloc().compositeHeapBuffer(messageCount);\n+        for (ByteBuf data : dataFromReadSet) {\n+          compositeByteBuf.addComponent(true, data);\n+        }\n+        messageContent = compositeByteBuf;\n       }\n     } catch (IOException e) {\n+      for (ByteBuf data : dataFromReadSet) {\n+        data.release();\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyOTU0NA=="}, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIzOTk0MQ==", "bodyText": "can be removed (maybe reformat this file?)", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r492239941", "createdAt": "2020-09-21T17:47:42Z", "author": {"login": "jsjtzyy"}, "path": "ambry-protocol/src/main/java/com/github/ambry/protocol/CompositeSend.java", "diffHunk": "@@ -18,6 +18,9 @@\n import com.github.ambry.commons.Callback;\n import com.github.ambry.utils.AbstractByteBufHolder;\n import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.CompositeByteBuf;\n+import io.netty.buffer.PooledByteBufAllocator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MDI0NzAw", "url": "https://github.com/linkedin/ambry/pull/1626#pullrequestreview-496024700", "createdAt": "2020-09-24T23:57:11Z", "commit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMzo1NzoxMlrOHXwcEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwMDoyNToxM1rOHXw6Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY3MjkxNA==", "bodyText": "Can you change this number to 4096? This can reduce 1 IO request to disk.", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r494672914", "createdAt": "2020-09-24T23:57:12Z", "author": {"login": "zzmao"}, "path": "ambry-messageformat/src/main/java/com/github/ambry/messageformat/MessageFormatSend.java", "diffHunk": "@@ -46,6 +48,8 @@\n \n public class MessageFormatSend extends AbstractByteBufHolder<MessageFormatSend> implements Send {\n \n+  private final static int BUFFERED_INPUT_STREAM_BUFFER_SIZE = 256;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIwNDYxNQ=="}, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY3Mzg2OA==", "bodyText": "Just want to double check:\nWe prefer direct buffer here. I looked at ioBuffer() function, it returns direct buffer if isDirectBufferPooled. How to know value of isDirectBufferPooled?", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r494673868", "createdAt": "2020-09-25T00:00:19Z", "author": {"login": "zzmao"}, "path": "ambry-store/src/main/java/com/github/ambry/store/StoreMessageReadSet.java", "diffHunk": "@@ -159,12 +161,12 @@ public void close() {\n    */\n   void doPrefetch(long relativeOffset, long size) throws IOException {\n     long sizeToRead = Math.min(size, getMessageInfo().getSize() - relativeOffset);\n-    prefetchedData = ByteBuffer.allocate((int) sizeToRead);\n-    getChannel().read(prefetchedData, offset.getOffset() + relativeOffset);\n+    prefetchedData = PooledByteBufAllocator.DEFAULT.ioBuffer((int) sizeToRead);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY4MDY0Ng==", "bodyText": "Can we create a test to verify the content of the GetResponse?", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r494680646", "createdAt": "2020-09-25T00:25:13Z", "author": {"login": "zzmao"}, "path": "ambry-protocol/src/main/java/com/github/ambry/protocol/GetResponse.java", "diffHunk": "@@ -139,14 +139,7 @@ protected void prepareBuffer() {\n         int maxNumComponent = 1 + toSend.content().nioBufferCount();\n         CompositeByteBuf compositeByteBuf = bufferToSend.alloc().compositeHeapBuffer(maxNumComponent);\n         compositeByteBuf.addComponent(true, bufferToSend);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c"}, "originalPosition": 3}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b1a9629c6443ecd093de1318066cd10c33eb10c", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/5b1a9629c6443ecd093de1318066cd10c33eb10c", "committedDate": "2020-09-16T23:55:57Z", "message": "Fix test failure"}, "afterCommit": {"oid": "970bdfbaaf3e4d5be65eb77eef61f943ca1e16d8", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/970bdfbaaf3e4d5be65eb77eef61f943ca1e16d8", "committedDate": "2020-09-25T04:58:22Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "376bdd3716ec5f05eb51c500f46a1557c2d161fe", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/376bdd3716ec5f05eb51c500f46a1557c2d161fe", "committedDate": "2020-09-29T18:12:20Z", "message": "Return ByteBuf in GetResponse content() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3fa9e21c0c73f57806be5ad6f9838c5fa134648", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/d3fa9e21c0c73f57806be5ad6f9838c5fa134648", "committedDate": "2020-09-29T18:12:20Z", "message": "Fix test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fc431377db2fa8086754a1146a753c444153b95", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/5fc431377db2fa8086754a1146a753c444153b95", "committedDate": "2020-09-29T18:12:20Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06e89800fa8830da77c4a5aaa9b627aab57d4597", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/06e89800fa8830da77c4a5aaa9b627aab57d4597", "committedDate": "2020-09-29T18:12:20Z", "message": "Fix memory leak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f65f67d4ef23a84013573641fe0c2499771dfe5", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/0f65f67d4ef23a84013573641fe0c2499771dfe5", "committedDate": "2020-09-29T18:12:21Z", "message": "Fix the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "583072fa6516c832f8178f7eb58c25c04ed4c6d5", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/583072fa6516c832f8178f7eb58c25c04ed4c6d5", "committedDate": "2020-09-29T18:12:21Z", "message": "Fix test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9d6fbbc220c1cc1d90b977d0e260a548e3d26f", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/cb9d6fbbc220c1cc1d90b977d0e260a548e3d26f", "committedDate": "2020-09-29T18:12:21Z", "message": "Fix a test failure;"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae7592859b1f85b8cc3187bb6d51a290352775f3", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/ae7592859b1f85b8cc3187bb6d51a290352775f3", "committedDate": "2020-09-30T01:24:29Z", "message": "Fix a test failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8586f44221d63c69ee5d843a4036a6ecf02ba5c2", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/8586f44221d63c69ee5d843a4036a6ecf02ba5c2", "committedDate": "2020-09-29T01:02:24Z", "message": "Fix a test failure;"}, "afterCommit": {"oid": "ae7592859b1f85b8cc3187bb6d51a290352775f3", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/ae7592859b1f85b8cc3187bb6d51a290352775f3", "committedDate": "2020-09-30T01:24:29Z", "message": "Fix a test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDUwMTEw", "url": "https://github.com/linkedin/ambry/pull/1626#pullrequestreview-499050110", "createdAt": "2020-09-30T02:50:22Z", "commit": {"oid": "ae7592859b1f85b8cc3187bb6d51a290352775f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMjo1MDoyM1rOHaLe6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMjo1MDoyM1rOHaLe6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxMzE2Mw==", "bodyText": "Removing this because of three reasons\n\nThis method only deal with data chunk, and changing blob size in property is already done in metadata chunk.\nThere is a race condition when the frontend is writing header back to client but the blob size is changed at the same time.\nHere the size is undecrypted size, we have to run decryption to get the real size.\n@ankagrawal", "url": "https://github.com/linkedin/ambry/pull/1626#discussion_r497213163", "createdAt": "2020-09-30T02:50:23Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -840,11 +840,6 @@ void handleBody(InputStream payload, MessageMetadata messageMetadata, MessageInf\n       // from concurrent operations.\n       if (!successfullyDeserialized) {\n         BlobData blobData = MessageFormatRecord.deserializeBlob(payload);\n-        // Note that for segment GET there is only one chunk to get, so we can be sure that its this one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae7592859b1f85b8cc3187bb6d51a290352775f3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "244b982efbbea7b54ad7657c1a1a0523aac1efa6", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/244b982efbbea7b54ad7657c1a1a0523aac1efa6", "committedDate": "2020-09-30T17:26:37Z", "message": "Remove old code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjkxOTc2", "url": "https://github.com/linkedin/ambry/pull/1626#pullrequestreview-500691976", "createdAt": "2020-10-01T20:25:23Z", "commit": {"oid": "244b982efbbea7b54ad7657c1a1a0523aac1efa6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMzY0NDkz", "url": "https://github.com/linkedin/ambry/pull/1626#pullrequestreview-501364493", "createdAt": "2020-10-02T18:38:32Z", "commit": {"oid": "244b982efbbea7b54ad7657c1a1a0523aac1efa6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1256, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}