{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDU3NTc5", "number": 1587, "title": "Use ByteBuf in decrypt job", "bodyText": "Before this PR, in GetBlobOperation, we use java ByteBuffer as the byte container to store decrypted blob content.\nThis PR switches to netty ByteBuf.\nIt also switches to use ioBuffer (direct memory) for encryption and decryption.", "createdAt": "2020-07-13T19:56:21Z", "url": "https://github.com/linkedin/ambry/pull/1587", "merged": true, "mergeCommit": {"oid": "5ec25a2624a37cf8983157a832a24f5d9c688a42"}, "closed": true, "closedAt": "2020-09-11T16:29:44Z", "author": {"login": "justinlin-linkedin"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0qfG0ABqjM1NDE3NjY4MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdH39mXAFqTQ4Njk1MDk5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d5ce785d4ea2ce7e70c128c76ce7ca57cdeff47", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/9d5ce785d4ea2ce7e70c128c76ce7ca57cdeff47", "committedDate": "2020-07-13T19:51:55Z", "message": "Use ByteBuf in decrypt job"}, "afterCommit": {"oid": "175f08db338b470ade6416d9863effb6c3eae55c", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/175f08db338b470ade6416d9863effb6c3eae55c", "committedDate": "2020-07-13T23:56:25Z", "message": "Use ByteBuf in decrypt job"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67345fd3ae26d39bf2cd53480a0a473d0783bca5", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/67345fd3ae26d39bf2cd53480a0a473d0783bca5", "committedDate": "2020-07-14T20:28:58Z", "message": "Fix memory leak"}, "afterCommit": {"oid": "7258ab5446a02ae63519e8d1eea26448c5602e6a", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/7258ab5446a02ae63519e8d1eea26448c5602e6a", "committedDate": "2020-07-17T21:10:20Z", "message": "Fix memory leak"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTYzNzQx", "url": "https://github.com/linkedin/ambry/pull/1587#pullrequestreview-450963741", "createdAt": "2020-07-17T21:20:18Z", "commit": {"oid": "bbb4160693b4f525181f31587cba105911e83c61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMToyMDoxOFrOGzhgZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMToyMDoxOFrOGzhgZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY3OTUyNw==", "bodyText": "No longer valid.", "url": "https://github.com/linkedin/ambry/pull/1587#discussion_r456679527", "createdAt": "2020-07-17T21:20:18Z", "author": {"login": "zzmao"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GCMCryptoService.java", "diffHunk": "@@ -123,33 +125,32 @@ public ByteBuf encrypt(ByteBuf toEncrypt, SecretKeySpec key, byte[] iv) throws G\n       int outputSize = encrypter.getOutputSize(toEncrypt.readableBytes());\n \n       // stick with heap memory for now so to compare with the java.nio.ByteBuffer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb4160693b4f525181f31587cba105911e83c61"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDQ2OTY3", "url": "https://github.com/linkedin/ambry/pull/1587#pullrequestreview-452046967", "createdAt": "2020-07-21T00:31:27Z", "commit": {"oid": "8b352affefcace6a553a002fac31ff1e7a4a9d74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODE1MTU1", "url": "https://github.com/linkedin/ambry/pull/1587#pullrequestreview-452815155", "createdAt": "2020-07-21T20:44:56Z", "commit": {"oid": "8b352affefcace6a553a002fac31ff1e7a4a9d74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDo0NDo1NlrOG1JFzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDo0NDo1NlrOG1JFzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3NjY1NQ==", "bodyText": "i'm a little worried about calling processCallbacks from a different thread in a callback. I don't think it was designed to be called from non event loop threads. Will take a deeper look to see if there's any alternative (or if it is already thread safe)", "url": "https://github.com/linkedin/ambry/pull/1587#discussion_r458376655", "createdAt": "2020-07-21T20:44:56Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -1353,12 +1356,19 @@ private void handleMetadataBlob(BlobData blobData, byte[] userMetadata, ByteBuff\n                 new DecryptJob(blobId, encryptionKey, null, ByteBuffer.wrap(userMetadata), cryptoService, kms,\n                     decryptJobMetricsTracker, (DecryptJob.DecryptJobResult result, Exception exception) -> {\n                   routerMetrics.decryptTimeMs.update(System.currentTimeMillis() - startTimeMs);\n-                  decryptJobMetricsTracker.onJobCallbackProcessingStart();\n-                  logger.trace(\"Handling decrypt job call back for Metadata chunk {} to set decrypt callback results\",\n-                      blobId);\n-                  decryptCallbackResultInfo.setResultAndException(result, exception);\n-                  routerCallback.onPollReady();\n-                  decryptJobMetricsTracker.onJobCallbackProcessingComplete();\n+                  if (isOperationComplete() || operationException.get() != null) {\n+                    if (result != null && result.getDecryptedBlobContent() != null) {\n+                      result.getDecryptedBlobContent().release();\n+                    }\n+                  } else {\n+                    decryptJobMetricsTracker.onJobCallbackProcessingStart();\n+                    logger.trace(\"Handling decrypt job call back for Metadata chunk {} to set decrypt callback results\",\n+                        blobId);\n+                    decryptCallbackResultInfo.setResultAndException(result, exception);\n+                    routerCallback.onPollReady();\n+                    decryptJobMetricsTracker.onJobCallbackProcessingComplete();\n+                    processCallbacks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b352affefcace6a553a002fac31ff1e7a4a9d74"}, "originalPosition": 241}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b352affefcace6a553a002fac31ff1e7a4a9d74", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/8b352affefcace6a553a002fac31ff1e7a4a9d74", "committedDate": "2020-07-17T21:37:57Z", "message": "Comments"}, "afterCommit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/149f61ecb1282cfc1008e6017c8c21dc4720fa6c", "committedDate": "2020-08-19T21:06:37Z", "message": "Make it thread safe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MDIwOTAz", "url": "https://github.com/linkedin/ambry/pull/1587#pullrequestreview-474020903", "createdAt": "2020-08-25T00:52:22Z", "commit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODg4MTk0", "url": "https://github.com/linkedin/ambry/pull/1587#pullrequestreview-475888194", "createdAt": "2020-08-26T21:57:55Z", "commit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTo1Nzo1NVrOHHfK6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMjowNTozOVrOHHfW7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxMjc3OQ==", "bodyText": "Probably the onPollReady call should come after processCallbacks() since that call also changes state that requires further processing on the event loop.", "url": "https://github.com/linkedin/ambry/pull/1587#discussion_r477612779", "createdAt": "2020-08-26T21:57:55Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -1354,12 +1357,19 @@ private void handleMetadataBlob(BlobData blobData, byte[] userMetadata, ByteBuff\n                 new DecryptJob(blobId, encryptionKey, null, ByteBuffer.wrap(userMetadata), cryptoService, kms,\n                     decryptJobMetricsTracker, (DecryptJob.DecryptJobResult result, Exception exception) -> {\n                   routerMetrics.decryptTimeMs.update(System.currentTimeMillis() - startTimeMs);\n-                  decryptJobMetricsTracker.onJobCallbackProcessingStart();\n-                  logger.trace(\"Handling decrypt job call back for Metadata chunk {} to set decrypt callback results\",\n-                      blobId);\n-                  decryptCallbackResultInfo.setResultAndException(result, exception);\n-                  routerCallback.onPollReady();\n-                  decryptJobMetricsTracker.onJobCallbackProcessingComplete();\n+                  if (isOperationComplete() || operationException.get() != null) {\n+                    if (result != null && result.getDecryptedBlobContent() != null) {\n+                      result.getDecryptedBlobContent().release();\n+                    }\n+                  } else {\n+                    decryptJobMetricsTracker.onJobCallbackProcessingStart();\n+                    logger.trace(\"Handling decrypt job call back for Metadata chunk {} to set decrypt callback results\",\n+                        blobId);\n+                    decryptCallbackResultInfo.setResultAndException(result, exception);\n+                    routerCallback.onPollReady();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxMzQ0NA==", "bodyText": "same comment about onPollReady", "url": "https://github.com/linkedin/ambry/pull/1587#discussion_r477613444", "createdAt": "2020-08-26T21:59:26Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -892,9 +888,16 @@ protected boolean maybeLaunchCryptoJob(ByteBuf dataBuf, byte[] userMetadata, Byt\n               routerMetrics.decryptTimeMs.update(System.currentTimeMillis() - startTimeMs);\n               decryptJobMetricsTracker.onJobCallbackProcessingStart();\n               logger.trace(\"Handling decrypt job call back for blob {} to set decrypt callback results\", targetBlobId);\n+              if (isOperationComplete() || operationException.get() != null) {\n+                if (exception == null && result.getDecryptedBlobContent() != null) {\n+                  result.getDecryptedBlobContent().release();\n+                }\n+                return;\n+              }\n               decryptCallbackResultInfo.setResultAndException(result, exception);\n               routerCallback.onPollReady();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxNDYxMg==", "bodyText": "Apologies if you already briefed me on this, but what was the original reason for moving the process callback logic to the callback? Does this prevent a specific leak situation?", "url": "https://github.com/linkedin/ambry/pull/1587#discussion_r477614612", "createdAt": "2020-08-26T22:02:34Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -1354,12 +1357,19 @@ private void handleMetadataBlob(BlobData blobData, byte[] userMetadata, ByteBuff\n                 new DecryptJob(blobId, encryptionKey, null, ByteBuffer.wrap(userMetadata), cryptoService, kms,\n                     decryptJobMetricsTracker, (DecryptJob.DecryptJobResult result, Exception exception) -> {\n                   routerMetrics.decryptTimeMs.update(System.currentTimeMillis() - startTimeMs);\n-                  decryptJobMetricsTracker.onJobCallbackProcessingStart();\n-                  logger.trace(\"Handling decrypt job call back for Metadata chunk {} to set decrypt callback results\",\n-                      blobId);\n-                  decryptCallbackResultInfo.setResultAndException(result, exception);\n-                  routerCallback.onPollReady();\n-                  decryptJobMetricsTracker.onJobCallbackProcessingComplete();\n+                  if (isOperationComplete() || operationException.get() != null) {\n+                    if (result != null && result.getDecryptedBlobContent() != null) {\n+                      result.getDecryptedBlobContent().release();\n+                    }\n+                  } else {\n+                    decryptJobMetricsTracker.onJobCallbackProcessingStart();\n+                    logger.trace(\"Handling decrypt job call back for Metadata chunk {} to set decrypt callback results\",\n+                        blobId);\n+                    decryptCallbackResultInfo.setResultAndException(result, exception);\n+                    routerCallback.onPollReady();\n+                    decryptJobMetricsTracker.onJobCallbackProcessingComplete();\n+                    processCallbacks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c"}, "originalPosition": 274}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYxNTg1NQ==", "bodyText": "For 100% read-after-write across thread guarantee, the variables set in initializeDataChunks(), blobInfo, etc. should probably be volatile (possible I am misinterpreting the documentation). However, I suspect that we have a few other cases where this was not done which have not caused (discoverable) issues in practice :P\nhttps://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html#jls-17.4.4", "url": "https://github.com/linkedin/ambry/pull/1587#discussion_r477615855", "createdAt": "2020-08-26T22:05:39Z", "author": {"login": "cgtz"}, "path": "ambry-router/src/main/java/com/github/ambry/router/GetBlobOperation.java", "diffHunk": "@@ -1139,49 +1142,49 @@ MessageFormatFlags getOperationFlag() {\n     }\n \n     @Override\n-    protected void maybeProcessCallbacks() {\n-      if (progressTracker.isCryptoJobRequired() && decryptCallbackResultInfo.decryptJobComplete) {\n-        decryptJobMetricsTracker.onJobResultProcessingStart();\n-        if (decryptCallbackResultInfo.exception != null) {\n-          decryptJobMetricsTracker.incrementOperationError();\n-          logger.trace(\"Decryption job callback invoked with exception for {} blob {} \", blobType, blobId,\n-              decryptCallbackResultInfo.exception);\n-          setOperationException(\n-              new RouterException(\"Exception thrown on decrypting content for \" + blobType + \" blob \" + blobId,\n-                  decryptCallbackResultInfo.exception, RouterErrorCode.UnexpectedInternalError));\n-          progressTracker.setCryptoJobFailed();\n+    protected void processCallbacks() {\n+      decryptJobMetricsTracker.onJobResultProcessingStart();\n+      if (decryptCallbackResultInfo.exception != null) {\n+        decryptJobMetricsTracker.incrementOperationError();\n+        logger.trace(\"Decryption job callback invoked with exception for {} blob {} \", blobType, blobId,\n+            decryptCallbackResultInfo.exception);\n+        setOperationException(\n+            new RouterException(\"Exception thrown on decrypting content for \" + blobType + \" blob \" + blobId,\n+                decryptCallbackResultInfo.exception, RouterErrorCode.UnexpectedInternalError));\n+        progressTracker.setCryptoJobFailed();\n+      } else {\n+        // in case of Metadata blob, only user-metadata needs decryption if the blob is encrypted\n+        if (blobType == BlobType.MetadataBlob) {\n+          logger.trace(\"Processing stored decryption callback result for Metadata blob {}\", blobId);\n+          initializeDataChunks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c"}, "originalPosition": 180}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e435c985bb62d11c6e5ad8c48736e5608b6764a7", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/e435c985bb62d11c6e5ad8c48736e5608b6764a7", "committedDate": "2020-09-10T20:11:41Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbfa34473918729fea5484c232664bd837037977", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/bbfa34473918729fea5484c232664bd837037977", "committedDate": "2020-09-10T20:11:41Z", "message": "Use ByteBuf in decrypt job"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "486403a55d727420f2c55ef50cb49d720bfc2256", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/486403a55d727420f2c55ef50cb49d720bfc2256", "committedDate": "2020-09-10T20:11:41Z", "message": "Fix memory leak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e851a85b774f7969c6683c3f59f897448b08db5a", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/e851a85b774f7969c6683c3f59f897448b08db5a", "committedDate": "2020-09-10T20:11:41Z", "message": "Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d10ce062005a300eadfe9856a93778c4a1f8e9b", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/3d10ce062005a300eadfe9856a93778c4a1f8e9b", "committedDate": "2020-09-10T20:11:41Z", "message": "Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a43cd25e5a24d972723b566afe25af090373364", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/2a43cd25e5a24d972723b566afe25af090373364", "committedDate": "2020-09-10T20:11:41Z", "message": "Make it thread safe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6735f6d390851ee4cb1000940fe4e5b6e5bcedb", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/d6735f6d390851ee4cb1000940fe4e5b6e5bcedb", "committedDate": "2020-09-11T00:38:22Z", "message": "Address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "149f61ecb1282cfc1008e6017c8c21dc4720fa6c", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/149f61ecb1282cfc1008e6017c8c21dc4720fa6c", "committedDate": "2020-08-19T21:06:37Z", "message": "Make it thread safe"}, "afterCommit": {"oid": "d6735f6d390851ee4cb1000940fe4e5b6e5bcedb", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/d6735f6d390851ee4cb1000940fe4e5b6e5bcedb", "committedDate": "2020-09-11T00:38:22Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8210805ed22d9eead8768cd2c38b526f07e9b2b8", "author": {"user": {"login": "justinlin-linkedin", "name": "Justin Lin"}}, "url": "https://github.com/linkedin/ambry/commit/8210805ed22d9eead8768cd2c38b526f07e9b2b8", "committedDate": "2020-09-11T05:47:49Z", "message": "Fix test failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTUwOTkx", "url": "https://github.com/linkedin/ambry/pull/1587#pullrequestreview-486950991", "createdAt": "2020-09-11T16:26:46Z", "commit": {"oid": "8210805ed22d9eead8768cd2c38b526f07e9b2b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1178, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}