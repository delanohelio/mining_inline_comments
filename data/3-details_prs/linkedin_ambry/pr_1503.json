{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMzQ4ODcw", "number": 1503, "title": "Filter out INACTIVE/DELETE_IN_PROGRESS containers during compaction", "bodyText": "This PR supports below part of stages for container deletion compaction phase:\n\nFilter out index entries that corresponding to INACTIVE/DELETE_IN_PROGRESS containers inside each compaction copy phase.\nImplement unit test to check if selected indexEntries can be removed successfully.", "createdAt": "2020-05-05T07:25:28Z", "url": "https://github.com/linkedin/ambry/pull/1503", "merged": true, "mergeCommit": {"oid": "becbbcebb5f6ca9cab89ff6529fbcf89e2005638"}, "closed": true, "closedAt": "2020-05-15T15:43:52Z", "author": {"login": "SophieGuo410"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfE0cLABqjMzMTQ4NTEyNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchbXY5ABqjMzMzk0MjgyMzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96a9ec94f9dd844068a4e4ad8f78efaccd078394", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/96a9ec94f9dd844068a4e4ad8f78efaccd078394", "committedDate": "2020-05-07T04:29:27Z", "message": "remove precondition check"}, "afterCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/8179608017e0441715b6a45ddd18cc590097d156", "committedDate": "2020-05-07T22:13:34Z", "message": "remove precondition check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzY5NjIw", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-409369620", "createdAt": "2020-05-11T17:15:17Z", "commit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoxNToxN1rOGTlrmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowODo1NFrOGTnlLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5MzQ5OQ==", "bodyText": "Feel like we can make the argument a Collection or Set, which allows us to use EnumSet.of to specify multiple Status we are looking at.", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423193499", "createdAt": "2020-05-11T17:15:17Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,19 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Converts the set of {@link Container}s to the set of accountId & ContainerId pairs for easy detection.\n+   */\n+  private void getAllContainersByStatus(Container.ContainerStatus containerStatus) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTIyNQ==", "bodyText": "How about renaming the method to isFromDeletedContainer?", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423221225", "createdAt": "2020-05-11T18:02:47Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -557,6 +575,16 @@ private boolean copyDataByIndexSegment(LogSegment logSegmentToCopy, IndexSegment\n     return copiedAll;\n   }\n \n+  /**\n+   * Determines if {@code copyCandidate} belongs to the DELETED_IN_PROGRESS {@link Container}s.\n+   * @param copyCandidate the {@link IndexEntry} to check\n+   * @param selectedContainerPairSet the collection of AccountId and ContainerId pairs in the given status.\n+   */\n+  private boolean isDeleteRequested(IndexEntry copyCandidate, Set<Pair<Short,Short>> selectedContainerPairSet) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTUyNQ==", "bodyText": "Can we combine this with line 1052-1053?", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423221525", "createdAt": "2020-05-11T18:03:22Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -1024,6 +1052,8 @@ private void endCompaction() {\n       copyCandidates.removeIf(\n           copyCandidate -> isDuplicate(copyCandidate, duplicateSearchSpan, indexSegment.getStartOffset(),\n               checkAlreadyCopied));\n+      copyCandidates.removeIf(\n+          copyCandidate -> isDeleteRequested(copyCandidate, selectedContainers));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTYxOQ==", "bodyText": "same here", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423221619", "createdAt": "2020-05-11T18:03:32Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -1311,6 +1341,8 @@ public boolean alreadyExists(PersistentIndex idx, FileSpan searchSpan, StoreKey\n       copyCandidates.removeIf(\n           copyCandidate -> isDuplicate(copyCandidate, duplicateSearchSpan, indexSegment.getStartOffset(),\n               checkAlreadyCopied));\n+      copyCandidates.removeIf(\n+          copyCandidate -> isDeleteRequested(copyCandidate, selectedContainers));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMjQwMw==", "bodyText": "minor: make this private final, then remove line 136", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423222403", "createdAt": "2020-05-11T18:04:58Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -85,6 +86,7 @@ public boolean accept(File dir, String name) {\n   private final AccountService accountService;\n   private volatile boolean isActive = false;\n   private PersistentIndex srcIndex;\n+  private Set<Pair<Short,Short>> selectedContainers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyNDYyMg==", "bodyText": "The logic here is to remove blob that belongs to containers being deleted. I would suggest considering edge case where the obsolete container has been removed from Helix account metadata ZNode, however, blobs from that container haven't been cleaned up on certain node (perhaps this node is down for a long time).", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423224622", "createdAt": "2020-05-11T18:08:54Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -1311,6 +1341,8 @@ public boolean alreadyExists(PersistentIndex idx, FileSpan searchSpan, StoreKey\n       copyCandidates.removeIf(\n           copyCandidate -> isDuplicate(copyCandidate, duplicateSearchSpan, indexSegment.getStartOffset(),\n               checkAlreadyCopied));\n+      copyCandidates.removeIf(\n+          copyCandidate -> isDeleteRequested(copyCandidate, selectedContainers));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTYxOQ=="}, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjA1ODE1", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-409605815", "createdAt": "2020-05-11T23:45:57Z", "commit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo0NTo1N1rOGTxMNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzo0Njo0NVrOGTxNGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4MjA2OA==", "bodyText": "a bit of syntax suger:\n      accountService.getContainersByStatus(containerStatus).forEach(\n          (container) -> {\n            selectedContainers.add(new Pair<>(container.getParentAccountId(), container.getId()));\n          })", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423382068", "createdAt": "2020-05-11T23:45:57Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,19 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Converts the set of {@link Container}s to the set of accountId & ContainerId pairs for easy detection.\n+   */\n+  private void getAllContainersByStatus(Container.ContainerStatus containerStatus) {\n+    Set<Pair<Short, Short>> selectedContainerPairSet = new HashSet<>();\n+    if (accountService != null) {\n+      for (Container container : accountService.getContainersByStatus(containerStatus)) {\n+        selectedContainerPairSet.add(new Pair<>(container.getParentAccountId(), container.getId()));\n+      }\n+    }\n+    selectedContainers.addAll(selectedContainerPairSet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4MjI5OA==", "bodyText": "should clear selectedcContainers before adding item to it since we are doing for every compaction.", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r423382298", "createdAt": "2020-05-11T23:46:45Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,19 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Converts the set of {@link Container}s to the set of accountId & ContainerId pairs for easy detection.\n+   */\n+  private void getAllContainersByStatus(Container.ContainerStatus containerStatus) {\n+    Set<Pair<Short, Short>> selectedContainerPairSet = new HashSet<>();\n+    if (accountService != null) {\n+      for (Container container : accountService.getContainersByStatus(containerStatus)) {\n+        selectedContainerPairSet.add(new Pair<>(container.getParentAccountId(), container.getId()));\n+      }\n+    }\n+    selectedContainers.addAll(selectedContainerPairSet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8179608017e0441715b6a45ddd18cc590097d156"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDM1MzM2", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-410435336", "createdAt": "2020-05-12T21:27:30Z", "commit": {"oid": "95e3c29781bbae47aeed3f102acf6dd27ac4214f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyNzozMFrOGUZljA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMToyODo1MVrOGUZn9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0MzkxNg==", "bodyText": "why adding a switch case here? In this method we shouldn't really care about the container status, rather than just return all the container with the given status.", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424043916", "createdAt": "2020-05-12T21:27:30Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,28 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Converts the set of {@link Container}s to the set of accountId & ContainerId pairs for easy detection.\n+   */\n+  private void getAllContainersByStatus(EnumSet<Container.ContainerStatus> containerStatusSet) {\n+    Set<Pair<Short, Short>> selectedContainerPairSet = new HashSet<>();\n+    if (accountService != null) {\n+      for (Container.ContainerStatus containerStatus : containerStatusSet) {\n+        switch (containerStatus) {\n+          case INACTIVE:\n+          case DELETE_IN_PROGRESS:\n+            accountService.getContainersByStatus(containerStatus).forEach((container) -> {\n+              selectedContainers.add(new Pair<>(container.getParentAccountId(), container.getId()));\n+            });\n+            break;\n+          default:\n+            logger.error(\"Invalid container status: {}\", containerStatus);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e3c29781bbae47aeed3f102acf6dd27ac4214f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA0NDUzNQ==", "bodyText": "Can you log the selectedContainers as info log before running into compaction?", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424044535", "createdAt": "2020-05-12T21:28:51Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -222,6 +247,8 @@ A single compaction job could be performed across multiple compaction cycles (if\n     logger.trace(\"resumeCompaction() started for {}\", storeId);\n     runningLatch = new CountDownLatch(1);\n     compactionInProgress.set(true);\n+    selectedContainers.clear();\n+    getAllContainersByStatus(EnumSet.of(Container.ContainerStatus.INACTIVE, Container.ContainerStatus.DELETE_IN_PROGRESS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e3c29781bbae47aeed3f102acf6dd27ac4214f"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "737a4a68501a15f26dcad13a385b93ac8c3b295c", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/737a4a68501a15f26dcad13a385b93ac8c3b295c", "committedDate": "2020-05-12T22:52:22Z", "message": "log the selectedContainers as info log"}, "afterCommit": {"oid": "4896703ebf56fbe24d55efad80de5e210ad90ef1", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/4896703ebf56fbe24d55efad80de5e210ad90ef1", "committedDate": "2020-05-12T23:08:51Z", "message": "log the selectedContainers as info log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTkwNjkz", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-410590693", "createdAt": "2020-05-13T05:08:51Z", "commit": {"oid": "e73b9ad7513e6553fd172b277c4c87a89aa3a3b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNTowODo1MVrOGUhnDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNTowODo1MVrOGUhnDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTM3Mw==", "bodyText": "Minor comments about comment and naming.\n\nComment its main functionality first and then describe what does it do.\nThere is actually not Converts here. It's filter.\ngetAllFilteredContainers() -> getNotActiveContainers() and comment what is not active: DELETE_IN_PROGRESS and INACTIVE", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424175373", "createdAt": "2020-05-13T05:08:51Z", "author": {"login": "zzmao"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,22 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Converts the set of {@link Container}s to the set of accountId & ContainerId pairs for easy detection.\n+   */\n+  private void getAllFilteredContainers() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73b9ad7513e6553fd172b277c4c87a89aa3a3b9"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTkwODY4", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-410590868", "createdAt": "2020-05-13T05:09:19Z", "commit": {"oid": "e73b9ad7513e6553fd172b277c4c87a89aa3a3b9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNTowOToxOVrOGUhnkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNToxMjo0OVrOGUhrUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTUwNA==", "bodyText": "selectedContainers -> notActiveContainers", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424175504", "createdAt": "2020-05-13T05:09:19Z", "author": {"login": "zzmao"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,22 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Converts the set of {@link Container}s to the set of accountId & ContainerId pairs for easy detection.\n+   */\n+  private void getAllFilteredContainers() {\n+    Set<Pair<Short, Short>> selectedContainerPairSet = new HashSet<>();\n+    if (accountService != null) {\n+      accountService.getContainersByStatus(Container.ContainerStatus.DELETE_IN_PROGRESS).forEach((container) -> {\n+        selectedContainers.add(new Pair<>(container.getParentAccountId(), container.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73b9ad7513e6553fd172b277c4c87a89aa3a3b9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NTg5Mg==", "bodyText": "how about move this line into getAllFilteredContainers ?", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424175892", "createdAt": "2020-05-13T05:10:41Z", "author": {"login": "zzmao"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -222,6 +241,9 @@ A single compaction job could be performed across multiple compaction cycles (if\n     logger.trace(\"resumeCompaction() started for {}\", storeId);\n     runningLatch = new CountDownLatch(1);\n     compactionInProgress.set(true);\n+    selectedContainers.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73b9ad7513e6553fd172b277c4c87a89aa3a3b9"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3NjQ2Ng==", "bodyText": "Determines if {@code copyCandidate} container in the status of  DELETED_IN_PROGRESS or INACTIVE.", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424176466", "createdAt": "2020-05-13T05:12:49Z", "author": {"login": "zzmao"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -557,6 +579,16 @@ private boolean copyDataByIndexSegment(LogSegment logSegmentToCopy, IndexSegment\n     return copiedAll;\n   }\n \n+  /**\n+   * Determines if {@code copyCandidate} belongs to the DELETED_IN_PROGRESS {@link Container}s.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73b9ad7513e6553fd172b277c4c87a89aa3a3b9"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjk4MTQz", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-411298143", "createdAt": "2020-05-13T21:04:17Z", "commit": {"oid": "4e69ea0504a5e73257c1dbb8b0821816c3e6f2f0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowNDoxN1rOGVDdhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowNDoxN1rOGVDdhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyOTk4OA==", "bodyText": "nit: we don't need this new variable, you can just add the pair of account id and container id to the notActiveContainers set.", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424729988", "createdAt": "2020-05-13T21:04:17Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,24 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Filters not active {@link Container}s for compaction purpose. Not active status include DELETE_IN_PROGRESS and INACTIVE.\n+   * @return the not active {@link Container}s' accountId & containerId pairs.\n+   */\n+  private void getNotActiveContainers() {\n+    notActiveContainers.clear();\n+    Set<Pair<Short, Short>> selectedContainerPairSet = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e69ea0504a5e73257c1dbb8b0821816c3e6f2f0"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzExNTEx", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-411311511", "createdAt": "2020-05-13T21:26:09Z", "commit": {"oid": "4e69ea0504a5e73257c1dbb8b0821816c3e6f2f0"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyNjowOVrOGVEHZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToyNzo1MlrOGVEKag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MDcxMA==", "bodyText": "+1", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424740710", "createdAt": "2020-05-13T21:26:09Z", "author": {"login": "zzmao"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,24 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Filters not active {@link Container}s for compaction purpose. Not active status include DELETE_IN_PROGRESS and INACTIVE.\n+   * @return the not active {@link Container}s' accountId & containerId pairs.\n+   */\n+  private void getNotActiveContainers() {\n+    notActiveContainers.clear();\n+    Set<Pair<Short, Short>> selectedContainerPairSet = new HashSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyOTk4OA=="}, "originalCommit": {"oid": "4e69ea0504a5e73257c1dbb8b0821816c3e6f2f0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc0MTQ4Mg==", "bodyText": "selectedContainerPairSet is a class member, do we need to pass it as argument?", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r424741482", "createdAt": "2020-05-13T21:27:52Z", "author": {"login": "zzmao"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -557,6 +580,16 @@ private boolean copyDataByIndexSegment(LogSegment logSegmentToCopy, IndexSegment\n     return copiedAll;\n   }\n \n+  /**\n+   * Determines if {@code copyCandidate} container in the status of DELETED_IN_PROGRESS or INACTIVE.\n+   * @param copyCandidate the {@link IndexEntry} to check\n+   * @param selectedContainerPairSet the collection of AccountId and ContainerId pairs in the given status.\n+   */\n+  private boolean isFromDeletedContainer(IndexEntry copyCandidate, Set<Pair<Short,Short>> selectedContainerPairSet) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e69ea0504a5e73257c1dbb8b0821816c3e6f2f0"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dcc46aeb928246dcc8935cf7caa3b00177ea5965", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/dcc46aeb928246dcc8935cf7caa3b00177ea5965", "committedDate": "2020-05-13T22:28:06Z", "message": "minor change"}, "afterCommit": {"oid": "eb5d7ae242ab828acac07e329eea712f8cc5885f", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/eb5d7ae242ab828acac07e329eea712f8cc5885f", "committedDate": "2020-05-13T22:32:45Z", "message": "minor change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb5d7ae242ab828acac07e329eea712f8cc5885f", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/eb5d7ae242ab828acac07e329eea712f8cc5885f", "committedDate": "2020-05-13T22:32:45Z", "message": "minor change"}, "afterCommit": {"oid": "5f48ecce6d432dfa8379e6ce5c109abf7ac2e02f", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/5f48ecce6d432dfa8379e6ce5c109abf7ac2e02f", "committedDate": "2020-05-13T23:06:09Z", "message": "minor change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f48ecce6d432dfa8379e6ce5c109abf7ac2e02f", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/5f48ecce6d432dfa8379e6ce5c109abf7ac2e02f", "committedDate": "2020-05-13T23:06:09Z", "message": "minor change"}, "afterCommit": {"oid": "c382aef35a5ba4ff522e64a3e1659f73007f0f5e", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/c382aef35a5ba4ff522e64a3e1659f73007f0f5e", "committedDate": "2020-05-14T04:30:47Z", "message": "minor change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c382aef35a5ba4ff522e64a3e1659f73007f0f5e", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/c382aef35a5ba4ff522e64a3e1659f73007f0f5e", "committedDate": "2020-05-14T04:30:47Z", "message": "minor change"}, "afterCommit": {"oid": "777dbb35cfb429592436949641c162991cd53a7b", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/777dbb35cfb429592436949641c162991cd53a7b", "committedDate": "2020-05-14T17:04:34Z", "message": "minor change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjA3NzI4", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-412207728", "createdAt": "2020-05-14T21:45:00Z", "commit": {"oid": "777dbb35cfb429592436949641c162991cd53a7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo0NTowMFrOGVvVnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo0NTowMFrOGVvVnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ0ODg2MA==", "bodyText": "Sorry, two additional minor questions:\n\naccountService is not initialized in this PR, is it?\nI think HelixAccountService may fail to fetch account metadata (i.e.disconnected from ZK), I think the accountService will get containers from local backup file, right?", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r425448860", "createdAt": "2020-05-14T21:45:00Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,22 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Filters not active {@link Container}s for compaction purpose. Not active status include DELETE_IN_PROGRESS and INACTIVE.\n+   * @return the not active {@link Container}s' accountId & containerId pairs.\n+   */\n+  private void getNotActiveContainers() {\n+    notActiveContainers.clear();\n+    if (accountService != null) {\n+      accountService.getContainersByStatus(Container.ContainerStatus.DELETE_IN_PROGRESS).forEach((container) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777dbb35cfb429592436949641c162991cd53a7b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjU1NjQ5", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-412255649", "createdAt": "2020-05-14T23:39:28Z", "commit": {"oid": "777dbb35cfb429592436949641c162991cd53a7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMzozOToyOFrOGVxuSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMzozOToyOFrOGVxuSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ4Nzk0Ng==", "bodyText": "minor and optional: I feel like deprecatedContainers sounds a better name.", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r425487946", "createdAt": "2020-05-14T23:39:28Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -85,6 +86,7 @@ public boolean accept(File dir, String name) {\n   private final AccountService accountService;\n   private volatile boolean isActive = false;\n   private PersistentIndex srcIndex;\n+  private final Set<Pair<Short,Short>> notActiveContainers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777dbb35cfb429592436949641c162991cd53a7b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjU1Nzky", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-412255792", "createdAt": "2020-05-14T23:39:54Z", "commit": {"oid": "777dbb35cfb429592436949641c162991cd53a7b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9302ca17ab928ec136618b1c51402569d44b9103", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/9302ca17ab928ec136618b1c51402569d44b9103", "committedDate": "2020-05-15T00:36:46Z", "message": "adding config to make container deletion optional"}, "afterCommit": {"oid": "f1d31fd21803e7c38d8e9b7c611b253c4004e83c", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/f1d31fd21803e7c38d8e9b7c611b253c4004e83c", "committedDate": "2020-05-15T00:41:02Z", "message": "adding config to make container deletion optional"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1d31fd21803e7c38d8e9b7c611b253c4004e83c", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/f1d31fd21803e7c38d8e9b7c611b253c4004e83c", "committedDate": "2020-05-15T00:41:02Z", "message": "adding config to make container deletion optional"}, "afterCommit": {"oid": "38ff4733c99092cc90066899a2b3242622816cb2", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/38ff4733c99092cc90066899a2b3242622816cb2", "committedDate": "2020-05-15T00:45:04Z", "message": "adding config to make container deletion optional"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38ff4733c99092cc90066899a2b3242622816cb2", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/38ff4733c99092cc90066899a2b3242622816cb2", "committedDate": "2020-05-15T00:45:04Z", "message": "adding config to make container deletion optional"}, "afterCommit": {"oid": "36f673e670226f8bda4de881ae034c89a69a7fa7", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/36f673e670226f8bda4de881ae034c89a69a7fa7", "committedDate": "2020-05-15T00:58:35Z", "message": "adding config to make container deletion optional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d50b63ca48fe1f629e3c46dde915ff57a805b00f", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/d50b63ca48fe1f629e3c46dde915ff57a805b00f", "committedDate": "2020-05-15T01:26:39Z", "message": "Filter out index entries belongs to the INACTIVE/DELETE_IN_PROGRESS containers during compaction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ccd9c2895765b89fb15e8e8dd07173e40132751", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/6ccd9c2895765b89fb15e8e8dd07173e40132751", "committedDate": "2020-05-15T01:26:39Z", "message": "fix precondition check error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5ddd2ff9a7cb010b629ef05cfe65d805129078c", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/c5ddd2ff9a7cb010b629ef05cfe65d805129078c", "committedDate": "2020-05-15T01:26:40Z", "message": "remove precondition check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c426e0014da53d43b71f977128a137b161cce2", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/89c426e0014da53d43b71f977128a137b161cce2", "committedDate": "2020-05-15T01:26:40Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fe9ba0537684180eb41b92610f070b0f62cbcc3", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/4fe9ba0537684180eb41b92610f070b0f62cbcc3", "committedDate": "2020-05-15T01:26:40Z", "message": "log the selectedContainers as info log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc59e8866170cced8de03162627b51265513ec0a", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/fc59e8866170cced8de03162627b51265513ec0a", "committedDate": "2020-05-15T01:26:40Z", "message": "remove switch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bd3a6835e7143f62358b937448716cc1b893091", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/9bd3a6835e7143f62358b937448716cc1b893091", "committedDate": "2020-05-15T01:26:40Z", "message": "fix minor comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "621166707a72412e6fdc0b6cde9fc9ef14d117af", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/621166707a72412e6fdc0b6cde9fc9ef14d117af", "committedDate": "2020-05-15T01:26:40Z", "message": "minor change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36f673e670226f8bda4de881ae034c89a69a7fa7", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/36f673e670226f8bda4de881ae034c89a69a7fa7", "committedDate": "2020-05-15T00:58:35Z", "message": "adding config to make container deletion optional"}, "afterCommit": {"oid": "220d4ef86f6e608b743f1314263801e67274fb49", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/220d4ef86f6e608b743f1314263801e67274fb49", "committedDate": "2020-05-15T01:28:35Z", "message": "adding config to make container deletion optional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzIwOTI4", "url": "https://github.com/linkedin/ambry/pull/1503#pullrequestreview-412320928", "createdAt": "2020-05-15T03:20:14Z", "commit": {"oid": "220d4ef86f6e608b743f1314263801e67274fb49"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzoyMDoxNFrOGV1J1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMzoyMTo0OFrOGV1LMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU0NDE1MQ==", "bodyText": "nit: {} in store {} is from deprecated container.\noptional: may change this to debug level", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r425544151", "createdAt": "2020-05-15T03:20:14Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -557,6 +580,21 @@ private boolean copyDataByIndexSegment(LogSegment logSegmentToCopy, IndexSegment\n     return copiedAll;\n   }\n \n+  /**\n+   * Determines if {@code copyCandidate} container in the status of DELETED_IN_PROGRESS or INACTIVE.\n+   * @param copyCandidate the {@link IndexEntry} to check\n+   */\n+  private boolean isFromDeprecatedContainer(IndexEntry copyCandidate) {\n+    IndexValue copyCandidateValue = copyCandidate.getValue();\n+    boolean isFromDeprecatedContainer = false;\n+    if (deprecatedContainers.contains(\n+        new Pair<>(copyCandidateValue.getAccountId(), copyCandidateValue.getContainerId()))) {\n+      logger.trace(\"{} in segment in {} is from deleted container\", copyCandidate, storeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220d4ef86f6e608b743f1314263801e67274fb49"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU0NDM4Mg==", "bodyText": "nit: Filters deprecated", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r425544382", "createdAt": "2020-05-15T03:21:12Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,22 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Filters not active {@link Container}s for compaction purpose. Deprecated status include DELETE_IN_PROGRESS and INACTIVE.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220d4ef86f6e608b743f1314263801e67274fb49"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU0NDQ5Ng==", "bodyText": "nit: @return the deprecated", "url": "https://github.com/linkedin/ambry/pull/1503#discussion_r425544496", "createdAt": "2020-05-15T03:21:48Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/BlobStoreCompactor.java", "diffHunk": "@@ -194,6 +197,22 @@ void compact(CompactionDetails details, byte[] bundleReadBuffer) throws IOExcept\n     resumeCompaction(bundleReadBuffer);\n   }\n \n+  /**\n+   * Filters not active {@link Container}s for compaction purpose. Deprecated status include DELETE_IN_PROGRESS and INACTIVE.\n+   * @return the not active {@link Container}s' accountId & containerId pairs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220d4ef86f6e608b743f1314263801e67274fb49"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "220d4ef86f6e608b743f1314263801e67274fb49", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/220d4ef86f6e608b743f1314263801e67274fb49", "committedDate": "2020-05-15T01:28:35Z", "message": "adding config to make container deletion optional"}, "afterCommit": {"oid": "a336fe682ac3fcb4ca35b19a2d7ae0a65624b937", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/a336fe682ac3fcb4ca35b19a2d7ae0a65624b937", "committedDate": "2020-05-15T03:53:20Z", "message": "adding config to make container deletion optional"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a336fe682ac3fcb4ca35b19a2d7ae0a65624b937", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/a336fe682ac3fcb4ca35b19a2d7ae0a65624b937", "committedDate": "2020-05-15T03:53:20Z", "message": "adding config to make container deletion optional"}, "afterCommit": {"oid": "7c957bdf438a259e6307ad53ebabf7001ab0dc3c", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/7c957bdf438a259e6307ad53ebabf7001ab0dc3c", "committedDate": "2020-05-15T04:49:06Z", "message": "adding config to make container deletion optional"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b05e4f86d6504295483ffcbe4c501353feda9af", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/3b05e4f86d6504295483ffcbe4c501353feda9af", "committedDate": "2020-05-15T05:38:24Z", "message": "adding config to make container deletion optional"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c957bdf438a259e6307ad53ebabf7001ab0dc3c", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/7c957bdf438a259e6307ad53ebabf7001ab0dc3c", "committedDate": "2020-05-15T04:49:06Z", "message": "adding config to make container deletion optional"}, "afterCommit": {"oid": "3b05e4f86d6504295483ffcbe4c501353feda9af", "author": {"user": null}, "url": "https://github.com/linkedin/ambry/commit/3b05e4f86d6504295483ffcbe4c501353feda9af", "committedDate": "2020-05-15T05:38:24Z", "message": "adding config to make container deletion optional"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1454, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}