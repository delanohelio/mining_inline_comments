{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4OTI0NDUz", "number": 1617, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzozNzoxM1rOEjPvtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0Nzo0NlrOEjP-Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzkzNTg5OnYy", "diffSide": "RIGHT", "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzozNzoxM1rOHRfxbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMToyNzoxMVrOHav8dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEwODM5OQ==", "bodyText": "I think you wanted StringBuilder here.", "url": "https://github.com/linkedin/ambry/pull/1617#discussion_r488108399", "createdAt": "2020-09-14T17:37:13Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "diffHunk": "@@ -380,6 +385,35 @@ byte to indicate whether startOffsetOfLastIndexSegmentForDeleteCheck is present\n     }\n   }\n \n+  @Override\n+  public String toString() {\n+    StringBuffer buffer = new StringBuffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "348626030a0bf973a42cfa43ed3a70b177cea142"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMDU0OA==", "bodyText": "That's right, string builder should be much faster.", "url": "https://github.com/linkedin/ambry/pull/1617#discussion_r497810548", "createdAt": "2020-09-30T21:27:11Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "diffHunk": "@@ -380,6 +385,35 @@ byte to indicate whether startOffsetOfLastIndexSegmentForDeleteCheck is present\n     }\n   }\n \n+  @Override\n+  public String toString() {\n+    StringBuffer buffer = new StringBuffer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEwODM5OQ=="}, "originalCommit": {"oid": "348626030a0bf973a42cfa43ed3a70b177cea142"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mzk1NDc4OnYy", "diffSide": "RIGHT", "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0Mjo0NVrOHRf8-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMToyNzo1NVrOHav9tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMTM1Mg==", "bodyText": "Same here", "url": "https://github.com/linkedin/ambry/pull/1617#discussion_r488111352", "createdAt": "2020-09-14T17:42:45Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "diffHunk": "@@ -479,5 +513,26 @@ safeToken if not null (see StoreFindToken#toBytes())\n       bufWrap.put(safeTokenBytes);\n       return buf;\n     }\n+\n+    @Override\n+    public String toString() {\n+      StringBuffer buffer = new StringBuffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "348626030a0bf973a42cfa43ed3a70b177cea142"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxMDg3MQ==", "bodyText": "updated", "url": "https://github.com/linkedin/ambry/pull/1617#discussion_r497810871", "createdAt": "2020-09-30T21:27:55Z", "author": {"login": "justinlin-linkedin"}, "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "diffHunk": "@@ -479,5 +513,26 @@ safeToken if not null (see StoreFindToken#toBytes())\n       bufWrap.put(safeTokenBytes);\n       return buf;\n     }\n+\n+    @Override\n+    public String toString() {\n+      StringBuffer buffer = new StringBuffer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMTM1Mg=="}, "originalCommit": {"oid": "348626030a0bf973a42cfa43ed3a70b177cea142"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mzk1NzU4OnYy", "diffSide": "RIGHT", "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0MzoyOFrOHRf-mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0MzoyOFrOHRf-mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMTc3MA==", "bodyText": "typo: CompactionDetails", "url": "https://github.com/linkedin/ambry/pull/1617#discussion_r488111770", "createdAt": "2020-09-14T17:43:28Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "diffHunk": "@@ -479,5 +513,26 @@ safeToken if not null (see StoreFindToken#toBytes())\n       bufWrap.put(safeTokenBytes);\n       return buf;\n     }\n+\n+    @Override\n+    public String toString() {\n+      StringBuffer buffer = new StringBuffer();\n+      buffer.append(\"CompactionDetal:\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "348626030a0bf973a42cfa43ed3a70b177cea142"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mzk2Nzg1OnYy", "diffSide": "RIGHT", "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0NjoxNFrOHRgEyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0NjoxNFrOHRgEyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMzM1Mg==", "bodyText": "Probably we also need to check if token exists and append it to string if present.", "url": "https://github.com/linkedin/ambry/pull/1617#discussion_r488113352", "createdAt": "2020-09-14T17:46:14Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/main/java/com/github/ambry/store/CompactionLog.java", "diffHunk": "@@ -479,5 +513,26 @@ safeToken if not null (see StoreFindToken#toBytes())\n       bufWrap.put(safeTokenBytes);\n       return buf;\n     }\n+\n+    @Override\n+    public String toString() {\n+      StringBuffer buffer = new StringBuffer();\n+      buffer.append(\"CompactionDetal:\")\n+          .append(compactionDetails.toString())\n+          .append(\"\\n\")\n+          .append(\"CopyStartTime:\")\n+          .append(copyStartTime)\n+          .append(\"\\n\")\n+          .append(\"CommitStartTime:\")\n+          .append(commitStartTime)\n+          .append(\"\\n\")\n+          .append(\"CleanupStartTime:\")\n+          .append(cleanupStartTime)\n+          .append(\"\\n\")\n+          .append(\"CycleEndTime:\")\n+          .append(cycleEndTime)\n+          .append(\"\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "348626030a0bf973a42cfa43ed3a70b177cea142"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1Mzk3MzE5OnYy", "diffSide": "RIGHT", "path": "ambry-tools/src/main/java/com/github/ambry/store/DumpCompactionLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0Nzo0NlrOHRgIJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0Nzo0NlrOHRgIJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExNDIxNQ==", "bodyText": "nit: call this DumpCompactionLogTool", "url": "https://github.com/linkedin/ambry/pull/1617#discussion_r488114215", "createdAt": "2020-09-14T17:47:46Z", "author": {"login": "jsjtzyy"}, "path": "ambry-tools/src/main/java/com/github/ambry/store/DumpCompactionLog.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * Copyright 2020 LinkedIn Corp. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ */\n+package com.github.ambry.store;\n+\n+import com.github.ambry.clustermap.ClusterAgentsFactory;\n+import com.github.ambry.clustermap.ClusterMap;\n+import com.github.ambry.commons.BlobIdFactory;\n+import com.github.ambry.config.ClusterMapConfig;\n+import com.github.ambry.config.StoreConfig;\n+import com.github.ambry.config.VerifiableProperties;\n+import com.github.ambry.tools.util.ToolUtils;\n+import com.github.ambry.utils.SystemTime;\n+import com.github.ambry.utils.Time;\n+import com.github.ambry.utils.Utils;\n+import java.io.File;\n+\n+\n+public class DumpCompactionLog {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "348626030a0bf973a42cfa43ed3a70b177cea142"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1367, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}