{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDA0NjI5", "number": 1566, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwNTowMzoxNVrOEHRpFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwNTowNDozNFrOEHRpQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDY0NTMyOnYy", "diffSide": "RIGHT", "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreCompactorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwNTowMzoxNVrOGmkzNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwNTowNDoxMVrOGmkzag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMjAwNQ==", "bodyText": "indexSegmentCountBeforeCompaction is never accessed, did you want to verify this count originally?", "url": "https://github.com/linkedin/ambry/pull/1566#discussion_r443102005", "createdAt": "2020-06-20T05:03:15Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreCompactorTest.java", "diffHunk": "@@ -1235,13 +1234,27 @@ public void undeleteSameIndexSegmentTest() throws Exception {\n     state.addUndeleteEntry((MockId) p9.getKey());\n     state.addUndeleteEntry((MockId) p9.getKey(), (short) 2);\n     state.addPutEntries(1, CuratedLogIndexState.PUT_RECORD_SIZE, Utils.Infinite_Time);\n-    // Make sure we have two log segments\n-    writeDataToMeetRequiredSegmentCount(2, null);\n+\n+    writeDataToMeetRequiredSegmentCount(1, null);\n+    // This is the end of the first log segment\n+\n+    // log segment 1\n+    // Index Segment 1.1 P(expired) D U T -> P(expire) U T\n+    long p10Expiration = state.time.milliseconds() + 10000;\n+    IndexEntry p10 = state.addPutEntries(1, CuratedLogIndexState.PUT_RECORD_SIZE, p10Expiration).get(0);\n+    state.addDeleteEntry((MockId) p10.getKey());\n+    state.addUndeleteEntry((MockId) p10.getKey());\n+    state.makePermanent((MockId) p10.getKey(), false);\n+    state.addPutEntries(1, CuratedLogIndexState.PUT_RECORD_SIZE, Utils.Infinite_Time);\n+\n+    // Make sure we have 3 log segments\n+    writeDataToMeetRequiredSegmentCount(3, null);\n     state.reloadIndex(true, false);\n \n     String logSegmentName = p1.getValue().getOffset().getName();\n-    List<String> segmentsUnderCompaction = Collections.singletonList(logSegmentName);\n-    long deleteReferenceTimeMs = state.time.milliseconds() + 10000;\n+    List<String> segmentsUnderCompaction = getLogSegments(0, 1);\n+    state.advanceTime(p10Expiration - state.time.milliseconds() + 1000);\n+    long deleteReferenceTimeMs = state.time.milliseconds();\n     long endOffsetOfSegmentBeforeCompaction = state.log.getSegment(logSegmentName).getEndOffset();\n     int indexSegmentCountBeforeCompaction = state.index.getIndexSegments().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52297ca3f93d6398702aebe08c8868feeba161da"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMjA1OA==", "bodyText": "oh I see you removed an assert and make this assigned but never accessed.", "url": "https://github.com/linkedin/ambry/pull/1566#discussion_r443102058", "createdAt": "2020-06-20T05:04:11Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreCompactorTest.java", "diffHunk": "@@ -1235,13 +1234,27 @@ public void undeleteSameIndexSegmentTest() throws Exception {\n     state.addUndeleteEntry((MockId) p9.getKey());\n     state.addUndeleteEntry((MockId) p9.getKey(), (short) 2);\n     state.addPutEntries(1, CuratedLogIndexState.PUT_RECORD_SIZE, Utils.Infinite_Time);\n-    // Make sure we have two log segments\n-    writeDataToMeetRequiredSegmentCount(2, null);\n+\n+    writeDataToMeetRequiredSegmentCount(1, null);\n+    // This is the end of the first log segment\n+\n+    // log segment 1\n+    // Index Segment 1.1 P(expired) D U T -> P(expire) U T\n+    long p10Expiration = state.time.milliseconds() + 10000;\n+    IndexEntry p10 = state.addPutEntries(1, CuratedLogIndexState.PUT_RECORD_SIZE, p10Expiration).get(0);\n+    state.addDeleteEntry((MockId) p10.getKey());\n+    state.addUndeleteEntry((MockId) p10.getKey());\n+    state.makePermanent((MockId) p10.getKey(), false);\n+    state.addPutEntries(1, CuratedLogIndexState.PUT_RECORD_SIZE, Utils.Infinite_Time);\n+\n+    // Make sure we have 3 log segments\n+    writeDataToMeetRequiredSegmentCount(3, null);\n     state.reloadIndex(true, false);\n \n     String logSegmentName = p1.getValue().getOffset().getName();\n-    List<String> segmentsUnderCompaction = Collections.singletonList(logSegmentName);\n-    long deleteReferenceTimeMs = state.time.milliseconds() + 10000;\n+    List<String> segmentsUnderCompaction = getLogSegments(0, 1);\n+    state.advanceTime(p10Expiration - state.time.milliseconds() + 1000);\n+    long deleteReferenceTimeMs = state.time.milliseconds();\n     long endOffsetOfSegmentBeforeCompaction = state.log.getSegment(logSegmentName).getEndOffset();\n     int indexSegmentCountBeforeCompaction = state.index.getIndexSegments().size();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMjAwNQ=="}, "originalCommit": {"oid": "52297ca3f93d6398702aebe08c8868feeba161da"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDY0NTc3OnYy", "diffSide": "RIGHT", "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreCompactorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwNTowNDozNFrOGmkzeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwNTowNDozNFrOGmkzeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMjA3NA==", "bodyText": "same here", "url": "https://github.com/linkedin/ambry/pull/1566#discussion_r443102074", "createdAt": "2020-06-20T05:04:34Z", "author": {"login": "jsjtzyy"}, "path": "ambry-store/src/test/java/com/github/ambry/store/BlobStoreCompactorTest.java", "diffHunk": "@@ -1368,14 +1378,69 @@ public void undeleteSameIndexSegmentTest() throws Exception {\n     // there should be no temp files\n     assertEquals(\"There are some temp log segments\", 0,\n         tempDir.listFiles(BlobStoreCompactor.TEMP_LOG_SEGMENTS_FILTER).length);\n+\n+    state.reloadIndex(true, false);\n+    logSegmentName = p10.getValue().getOffset().getName();\n+    segmentsUnderCompaction = Collections.singletonList(logSegmentName);\n+    deleteReferenceTimeMs = state.time.milliseconds();\n+    endOffsetOfSegmentBeforeCompaction = state.log.getSegment(logSegmentName).getEndOffset();\n+    indexSegmentCountBeforeCompaction = state.index.getIndexSegments().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52297ca3f93d6398702aebe08c8868feeba161da"}, "originalPosition": 97}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1280, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}