{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjE2Mjc2", "number": 1830, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNDo1MDowOVrOD5cF2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNDo1MDowOVrOD5cF2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTU1Njc0OnYy", "diffSide": "LEFT", "path": "hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/entity/ResourceIndexedSearchParamCoords.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNDo1MDowOVrOGQtJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNToxNjo1OVrOGQuY5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3MDA3OQ==", "bodyText": "Trying to understand this change.  Are you removing transitional code we had in there to bridge the pre-hash installs to the post-hash installs?  Or is this a performance optimization that's no longer possible due to changes in the way hashing works?", "url": "https://github.com/hapifhir/hapi-fhir/pull/1830#discussion_r420170079", "createdAt": "2020-05-05T14:50:09Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/entity/ResourceIndexedSearchParamCoords.java", "diffHunk": "@@ -68,21 +76,14 @@ public ResourceIndexedSearchParamCoords(PartitionSettings thePartitionSettings,\n \t\tsetParamName(theParamName);\n \t\tsetLatitude(theLatitude);\n \t\tsetLongitude(theLongitude);\n+\t\tcalculateHashes();\n \t}\n \n \t@Override\n-\t@PrePersist\n \tpublic void calculateHashes() {\n-\t\tif (myHashIdentity == null && getParamName() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6cf9557db464b0cb5af2335ed188f9ef1476a64"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3ODAxOA==", "bodyText": "The general idea here is that we calculated the hashes via 2 different ways, both of which were kind of haphazard:\n\nWe calculated then in a @PrePersist hook as the data was sent to the database\nWe calculated them if someone called hashCode()\n\nThis probably made sense originally where we only ever created them and put them in the DB and that was that.. But increasingly we're using these structures for all kinds of other stuff (e.g. in memory matching, reusing rows in the index tables rather than deleting one and adding a new one, etc.) and this haphazard logic was causing unexpected bugs when unpredicted situations arose (such as a stored row having no hash, whcih is the actual thing we're fixing here).\nWhat this change does, more importantly, is remove chance from the equation by just explicitly calcuating the hashes as soon as possible.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1830#discussion_r420178018", "createdAt": "2020-05-05T15:00:20Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/entity/ResourceIndexedSearchParamCoords.java", "diffHunk": "@@ -68,21 +76,14 @@ public ResourceIndexedSearchParamCoords(PartitionSettings thePartitionSettings,\n \t\tsetParamName(theParamName);\n \t\tsetLatitude(theLatitude);\n \t\tsetLongitude(theLongitude);\n+\t\tcalculateHashes();\n \t}\n \n \t@Override\n-\t@PrePersist\n \tpublic void calculateHashes() {\n-\t\tif (myHashIdentity == null && getParamName() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3MDA3OQ=="}, "originalCommit": {"oid": "f6cf9557db464b0cb5af2335ed188f9ef1476a64"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE5MDQzNw==", "bodyText": "nice", "url": "https://github.com/hapifhir/hapi-fhir/pull/1830#discussion_r420190437", "createdAt": "2020-05-05T15:16:59Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-model/src/main/java/ca/uhn/fhir/jpa/model/entity/ResourceIndexedSearchParamCoords.java", "diffHunk": "@@ -68,21 +76,14 @@ public ResourceIndexedSearchParamCoords(PartitionSettings thePartitionSettings,\n \t\tsetParamName(theParamName);\n \t\tsetLatitude(theLatitude);\n \t\tsetLongitude(theLongitude);\n+\t\tcalculateHashes();\n \t}\n \n \t@Override\n-\t@PrePersist\n \tpublic void calculateHashes() {\n-\t\tif (myHashIdentity == null && getParamName() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3MDA3OQ=="}, "originalCommit": {"oid": "f6cf9557db464b0cb5af2335ed188f9ef1476a64"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1956, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}