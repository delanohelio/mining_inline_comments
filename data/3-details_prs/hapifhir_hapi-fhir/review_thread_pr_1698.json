{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMzU2NTU4", "number": 1698, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1MTowMFrODcqH3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1MTowMFrODcqH3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzc2ODYxOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/data/ISearchDao.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1MTowMFrOFkz_Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjoyMDowMFrOFk3RSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0NDc5NA==", "bodyText": "A couple of thoughts here:\n\nWe should probably rename this method to reflect its new criteria\nCreated doesn't have an index and it's being used as the primary search criteria - Obviously we don't expect this table to grow too big but we also know it does for some people.. I'd be inclined to create a new index on that column", "url": "https://github.com/hapifhir/hapi-fhir/pull/1698#discussion_r374144794", "createdAt": "2020-02-03T14:51:00Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/data/ISearchDao.java", "diffHunk": "@@ -38,16 +37,12 @@\n \t@Query(\"SELECT s FROM Search s LEFT OUTER JOIN FETCH s.myIncludes WHERE s.myUuid = :uuid\")\n \tOptional<Search> findByUuidAndFetchIncludes(@Param(\"uuid\") String theUuid);\n \n-\t@Query(\"SELECT s.myId FROM Search s WHERE (s.mySearchLastReturned < :cutoff) AND (s.myExpiryOrNull IS NULL OR s.myExpiryOrNull < :now)\")\n+\t@Query(\"SELECT s.myId FROM Search s WHERE (s.myCreated < :cutoff) AND (s.myExpiryOrNull IS NULL OR s.myExpiryOrNull < :now)\")\n \tSlice<Long> findWhereLastReturnedBefore(@Param(\"cutoff\") Date theCutoff, @Param(\"now\") Date theNow, Pageable thePage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda906d7b87659cc4384e2dac4a72fe4bd3d5e53"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5ODYwMw==", "bodyText": "done", "url": "https://github.com/hapifhir/hapi-fhir/pull/1698#discussion_r374198603", "createdAt": "2020-02-03T16:20:00Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/data/ISearchDao.java", "diffHunk": "@@ -38,16 +37,12 @@\n \t@Query(\"SELECT s FROM Search s LEFT OUTER JOIN FETCH s.myIncludes WHERE s.myUuid = :uuid\")\n \tOptional<Search> findByUuidAndFetchIncludes(@Param(\"uuid\") String theUuid);\n \n-\t@Query(\"SELECT s.myId FROM Search s WHERE (s.mySearchLastReturned < :cutoff) AND (s.myExpiryOrNull IS NULL OR s.myExpiryOrNull < :now)\")\n+\t@Query(\"SELECT s.myId FROM Search s WHERE (s.myCreated < :cutoff) AND (s.myExpiryOrNull IS NULL OR s.myExpiryOrNull < :now)\")\n \tSlice<Long> findWhereLastReturnedBefore(@Param(\"cutoff\") Date theCutoff, @Param(\"now\") Date theNow, Pageable thePage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0NDc5NA=="}, "originalCommit": {"oid": "cda906d7b87659cc4384e2dac4a72fe4bd3d5e53"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1994, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}