{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MjQwNDYy", "number": 2120, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzo0NDowOVrOErL68A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzo0NToyNVrOErL9cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzE5NTM2OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/LoadedFileDescriptors.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzo0NDowOVrOHd0DKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzo0NDowOVrOHd0DKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyMzUzMQ==", "bodyText": "Nitpick.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tmsg = \"Could not find any of the PartLink files: \" + notFoundMulti + \" or \" + notFoundSingle;\n          \n          \n            \n            \t\t\t\tmsg = \"Could not find any of the PartLink files: \" + notFoundMulti + \" nor \" + notFoundSingle;", "url": "https://github.com/hapifhir/hapi-fhir/pull/2120#discussion_r501023531", "createdAt": "2020-10-07T13:44:09Z", "author": {"login": "dmuylwyk"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/LoadedFileDescriptors.java", "diffHunk": "@@ -140,6 +142,24 @@ void verifyOptionalFilesExist(List<String> theExpectedFilenameFragments) {\n \t\t}\n \t}\n \n+\tvoid verifyPartLinkFilesExist(List<String> theMultiPartLinkFiles, String theSinglePartLinkFile) {\n+\t\tList<String> notFoundMulti = notFound(theMultiPartLinkFiles);\n+\t\tList<String> notFoundSingle = notFound(Arrays.asList(theSinglePartLinkFile));\n+\t\t// Expect all of the files in theMultiPartLinkFiles to be found and theSinglePartLinkFile to not be found,\n+\t\t// or none of the files in theMultiPartLinkFiles to be found and the SinglePartLinkFile to be found.\n+\t\tboolean multiPartFilesFound = notFoundMulti.isEmpty();\n+\t\tboolean singlePartFilesFound = notFoundSingle.isEmpty();\n+\t\tif (!LogicUtil.multiXor(multiPartFilesFound, singlePartFilesFound)) {\n+\t\t\tString msg;\n+\t\t\tif (!multiPartFilesFound && !singlePartFilesFound) {\n+\t\t\t\tmsg = \"Could not find any of the PartLink files: \" + notFoundMulti + \" or \" + notFoundSingle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f39eeb0e9450019f238f560bbcd10d87591649f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzIwMTc5OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/LoadedFileDescriptors.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzo0NToyNVrOHd0HIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzo0NToyNVrOHd0HIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyNDU0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tmsg = \"Found both the single PartLink file, \" + theSinglePartLinkFile + \", and the split PartLink files: \" + theMultiPartLinkFiles;\n          \n          \n            \n            \t\t\t\tmsg = \"Only either the single PartLink file or the split PartLink files can be present. Found both the single PartLink file, \" + theSinglePartLinkFile + \", and the split PartLink files: \" + theMultiPartLinkFiles;", "url": "https://github.com/hapifhir/hapi-fhir/pull/2120#discussion_r501024546", "createdAt": "2020-10-07T13:45:25Z", "author": {"login": "dmuylwyk"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/LoadedFileDescriptors.java", "diffHunk": "@@ -140,6 +142,24 @@ void verifyOptionalFilesExist(List<String> theExpectedFilenameFragments) {\n \t\t}\n \t}\n \n+\tvoid verifyPartLinkFilesExist(List<String> theMultiPartLinkFiles, String theSinglePartLinkFile) {\n+\t\tList<String> notFoundMulti = notFound(theMultiPartLinkFiles);\n+\t\tList<String> notFoundSingle = notFound(Arrays.asList(theSinglePartLinkFile));\n+\t\t// Expect all of the files in theMultiPartLinkFiles to be found and theSinglePartLinkFile to not be found,\n+\t\t// or none of the files in theMultiPartLinkFiles to be found and the SinglePartLinkFile to be found.\n+\t\tboolean multiPartFilesFound = notFoundMulti.isEmpty();\n+\t\tboolean singlePartFilesFound = notFoundSingle.isEmpty();\n+\t\tif (!LogicUtil.multiXor(multiPartFilesFound, singlePartFilesFound)) {\n+\t\t\tString msg;\n+\t\t\tif (!multiPartFilesFound && !singlePartFilesFound) {\n+\t\t\t\tmsg = \"Could not find any of the PartLink files: \" + notFoundMulti + \" or \" + notFoundSingle;\n+\t\t\t} else {\n+\t\t\t\tmsg = \"Found both the single PartLink file, \" + theSinglePartLinkFile + \", and the split PartLink files: \" + theMultiPartLinkFiles;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f39eeb0e9450019f238f560bbcd10d87591649f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1809, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}