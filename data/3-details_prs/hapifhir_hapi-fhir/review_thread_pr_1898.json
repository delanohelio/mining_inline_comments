{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTk5NTU0", "number": 1898, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowNDozOVrOECrHwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoyODo1OVrOECrtlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjM5MTA0OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/EmpiLinkDaoSvc.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowNDozOVrOGfRq2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODo1OTowMlrOGfT1ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0ODUzNg==", "bodyText": "Does this nullable annotation provide us anything here? Normally I see these on the surface of the API, not inside the impl.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435448536", "createdAt": "2020-06-04T18:04:39Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/EmpiLinkDaoSvc.java", "diffHunk": "@@ -192,4 +193,14 @@ public EmpiLink save(EmpiLink theEmpiLink) {\n    public List<EmpiLink> findEmpiLinkByExample(Example<EmpiLink> theExampleLink) {\n \t\treturn myEmpiLinkDao.findAll(theExampleLink);\n    }\n+\n+\tpublic List<EmpiLink> findEmpiLinksByTarget(Patient theTargetResource) {\n+\t\t@Nullable Long pid = myIdHelperService.getPidOrNull(theTargetResource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4NDA5OQ==", "bodyText": "Done", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435484099", "createdAt": "2020-06-04T18:59:02Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/EmpiLinkDaoSvc.java", "diffHunk": "@@ -192,4 +193,14 @@ public EmpiLink save(EmpiLink theEmpiLink) {\n    public List<EmpiLink> findEmpiLinkByExample(Example<EmpiLink> theExampleLink) {\n \t\treturn myEmpiLinkDao.findAll(theExampleLink);\n    }\n+\n+\tpublic List<EmpiLink> findEmpiLinksByTarget(Patient theTargetResource) {\n+\t\t@Nullable Long pid = myIdHelperService.getPidOrNull(theTargetResource);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0ODUzNg=="}, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQ1MzIxOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoyMTo1OFrOGfSSqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTowMToxMlrOGfT6ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1ODczMQ==", "bodyText": "One thing I'm wondering with regards to transactionality. Are we sure the DB has flushed at this point? If not, is it possible that this call will just return the same existing link?", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435458731", "createdAt": "2020-06-04T18:21:58Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "diffHunk": "@@ -98,6 +82,33 @@ public IAnyResource updateLink(IAnyResource thePerson, IAnyResource theTarget, E\n \t\tmyEmpiLinkDaoSvc.save(empiLink);\n \t\tmyEmpiLinkSvc.syncEmpiLinksToPersonLinks(thePerson, theEmpiContext);\n \t\tmyEmpiResourceDaoSvc.updatePerson(thePerson);\n+\t\tif (theMatchResult == EmpiMatchResultEnum.NO_MATCH) {\n+\t\t\t// Need to find a new Person to link this target to\n+\t\t\tmyEmpiMatchLinkSvc.updateEmpiLinksForEmpiTarget(theTarget, theEmpiContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4NTMwNw==", "bodyText": "I wondered about the same thing.  All the tests pass.  Hibernate keeps active entities in session so since we\u2019re on the same thread, any entity reads on the modified entities should pick up the changes.  Leaving Tx boundary unchanged.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435485307", "createdAt": "2020-06-04T19:01:12Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "diffHunk": "@@ -98,6 +82,33 @@ public IAnyResource updateLink(IAnyResource thePerson, IAnyResource theTarget, E\n \t\tmyEmpiLinkDaoSvc.save(empiLink);\n \t\tmyEmpiLinkSvc.syncEmpiLinksToPersonLinks(thePerson, theEmpiContext);\n \t\tmyEmpiResourceDaoSvc.updatePerson(thePerson);\n+\t\tif (theMatchResult == EmpiMatchResultEnum.NO_MATCH) {\n+\t\t\t// Need to find a new Person to link this target to\n+\t\t\tmyEmpiMatchLinkSvc.updateEmpiLinksForEmpiTarget(theTarget, theEmpiContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ1ODczMQ=="}, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQ4NTk4OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoyODozOVrOGfSnoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoyODozOVrOGfSnoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NDA5Nw==", "bodyText": "\ud83d\udc4d for breaking this into its own function", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435464097", "createdAt": "2020-06-04T18:28:39Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImpl.java", "diffHunk": "@@ -98,6 +82,33 @@ public IAnyResource updateLink(IAnyResource thePerson, IAnyResource theTarget, E\n \t\tmyEmpiLinkDaoSvc.save(empiLink);\n \t\tmyEmpiLinkSvc.syncEmpiLinksToPersonLinks(thePerson, theEmpiContext);\n \t\tmyEmpiResourceDaoSvc.updatePerson(thePerson);\n+\t\tif (theMatchResult == EmpiMatchResultEnum.NO_MATCH) {\n+\t\t\t// Need to find a new Person to link this target to\n+\t\t\tmyEmpiMatchLinkSvc.updateEmpiLinksForEmpiTarget(theTarget, theEmpiContext);\n+\t\t}\n \t\treturn thePerson;\n \t}\n+\n+\tprivate void validateUpdateLinkRequest(IAnyResource thePerson, IAnyResource theTarget, EmpiMatchResultEnum theMatchResult, String theTargetType) {\n+\t\tString personType = myFhirContext.getResourceType(thePerson);\n+\t\tif (theMatchResult != EmpiMatchResultEnum.NO_MATCH &&\n+\t\ttheMatchResult != EmpiMatchResultEnum.MATCH) {\n+\t\t\tthrow new InvalidRequestException(\"Match Result may only be set to \" + EmpiMatchResultEnum.NO_MATCH + \" or \" + EmpiMatchResultEnum.MATCH);\n+\t\t}\n+\n+\t\tif (!\"Person\".equals(personType)) {\n+\t\t\tthrow new InvalidRequestException(\"First argument to updateLink must be a Person.  Was \" + personType);\n+\t\t}\n+\t\tif (!EmpiUtil.supportedTargetType(theTargetType)) {\n+\t\t\tthrow new InvalidRequestException(\"Second argument to updateLink must be a Patient or Practitioner.  Was \" + theTargetType);\n+\t\t}\n+\n+\t\tif (!EmpiUtil.isEmpiManaged(thePerson)) {\n+\t\t\tthrow new InvalidRequestException(\"Only EMPI Managed Person resources may be updated via this operation.  The Person resource provided is not tagged as managed by hapi-empi\");\n+\t\t}\n+\n+\t\tif (!EmpiUtil.isEmpiAccessible(theTarget)) {\n+\t\t\tthrow new InvalidRequestException(\"The target is marked with the \" + EmpiConstants.CODE_NO_EMPI_MANAGED + \" tag which means it may not be EMPI linked.\");\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQ4Nzg4OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-empi/src/test/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImplTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODoyODo1OVrOGfSoxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTowMzo1MVrOGfT_0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NDM5MA==", "bodyText": "TODO?", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435464390", "createdAt": "2020-06-04T18:28:59Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/test/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImplTest.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package ca.uhn.fhir.jpa.empi.svc;\n+\n+import ca.uhn.fhir.jpa.empi.provider.EmpiProviderUpdateLinkR4Test;\n+\n+/**\n+ * @see EmpiProviderUpdateLinkR4Test\n+ */\n+public class EmpiLinkUpdaterSvcImplTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NTkzMw==", "bodyText": "I guess my comment was unclear.  I will improve.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435465933", "createdAt": "2020-06-04T18:31:18Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/test/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImplTest.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package ca.uhn.fhir.jpa.empi.svc;\n+\n+import ca.uhn.fhir.jpa.empi.provider.EmpiProviderUpdateLinkR4Test;\n+\n+/**\n+ * @see EmpiProviderUpdateLinkR4Test\n+ */\n+public class EmpiLinkUpdaterSvcImplTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NDM5MA=="}, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4NjY3Mg==", "bodyText": "Done", "url": "https://github.com/hapifhir/hapi-fhir/pull/1898#discussion_r435486672", "createdAt": "2020-06-04T19:03:51Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/test/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkUpdaterSvcImplTest.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package ca.uhn.fhir.jpa.empi.svc;\n+\n+import ca.uhn.fhir.jpa.empi.provider.EmpiProviderUpdateLinkR4Test;\n+\n+/**\n+ * @see EmpiProviderUpdateLinkR4Test\n+ */\n+public class EmpiLinkUpdaterSvcImplTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NDM5MA=="}, "originalCommit": {"oid": "a77f495285345e8ac0e263bd2243c23c108ce327"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1848, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}