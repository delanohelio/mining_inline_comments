{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4NDg1NDk3", "number": 1761, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODozMzo0NlrODodMug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODozNDoxOFrODodNSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzQ4MDI2OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/SearchBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODozMzo0NlrOF3BEJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzozOTo0N1rOF3cq2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzMzQ0NA==", "bodyText": "nice!", "url": "https://github.com/hapifhir/hapi-fhir/pull/1761#discussion_r393233444", "createdAt": "2020-03-16T18:33:46Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/SearchBuilder.java", "diffHunk": "@@ -316,7 +345,8 @@ private void init(SearchParameterMap theParams, String theTheSearchUuid) {\n \t\t * If we have any joins to index tables, we get this behaviour already guaranteed so we don't\n \t\t * need an explicit predicate for it.\n \t\t */\n-\t\tif (!myQueryRoot.hasIndexJoins()) {\n+\t\tboolean haveNoIndexSearchParams = myParams.size() == 0 || myParams.keySet().stream().allMatch(t -> t.startsWith(\"_\"));\n+\t\tif (haveNoIndexSearchParams) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e9a0ae81061458b70f1f1866af9b7f432828f1"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY4NTcyMw==", "bodyText": "Tx!", "url": "https://github.com/hapifhir/hapi-fhir/pull/1761#discussion_r393685723", "createdAt": "2020-03-17T13:39:47Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/SearchBuilder.java", "diffHunk": "@@ -316,7 +345,8 @@ private void init(SearchParameterMap theParams, String theTheSearchUuid) {\n \t\t * If we have any joins to index tables, we get this behaviour already guaranteed so we don't\n \t\t * need an explicit predicate for it.\n \t\t */\n-\t\tif (!myQueryRoot.hasIndexJoins()) {\n+\t\tboolean haveNoIndexSearchParams = myParams.size() == 0 || myParams.keySet().stream().allMatch(t -> t.startsWith(\"_\"));\n+\t\tif (haveNoIndexSearchParams) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzMzQ0NA=="}, "originalCommit": {"oid": "04e9a0ae81061458b70f1f1866af9b7f432828f1"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzQ4MTY4OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/dao/r4/FhirResourceDaoR4SearchNoFtTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODozNDoxOFrOF3BFGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxODozNDoxOFrOF3BFGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIzMzY4OA==", "bodyText": "the logging part can be probably be removed for the merge", "url": "https://github.com/hapifhir/hapi-fhir/pull/1761#discussion_r393233688", "createdAt": "2020-03-16T18:34:18Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/dao/r4/FhirResourceDaoR4SearchNoFtTest.java", "diffHunk": "@@ -1064,7 +1065,9 @@ public void testSearchByIdParam() {\n \n \t\tparams = new SearchParameterMap();\n \t\tparams.add(\"_id\", new StringParam(id1));\n+\t\tmyCaptureQueriesListener.clear();\n \t\tassertThat(toUnqualifiedVersionlessIdValues(myPatientDao.search(params)), contains(id1));\n+\t\tmyCaptureQueriesListener.logSelectQueriesForCurrentThread();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e9a0ae81061458b70f1f1866af9b7f432828f1"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1928, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}