{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTc0MDI3", "number": 1933, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTowMzoyMlrOEHuqIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTowNzoxMlrOEHuumA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTM5OTM5OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/provider/r5/ResourceProviderR5ValueSetTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTowMzoyMlrOGnQ6sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMToyMzoxMVrOGnRfvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNDgxNw==", "bodyText": "I think a better assert here would be to test that expanded.getContains().size() has a size of 1", "url": "https://github.com/hapifhir/hapi-fhir/pull/1933#discussion_r443824817", "createdAt": "2020-06-22T21:03:22Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/provider/r5/ResourceProviderR5ValueSetTest.java", "diffHunk": "@@ -301,6 +301,122 @@ public void testExpandByIdWithPreExpansion() throws Exception {\n \n \t}\n \n+\t@Test\n+\tpublic void testExpandByIdWithPreExpansionWithOffset() throws Exception {\n+\t\tmyDaoConfig.setPreExpandValueSets(true);\n+\n+\t\tloadAndPersistCodeSystemAndValueSet(HTTPVerb.POST);\n+\t\tmyTermSvc.preExpandDeferredValueSetsToTerminologyTables();\n+\n+\t\tParameters respParam = ourClient\n+\t\t\t.operation()\n+\t\t\t.onInstance(myExtensionalVsId)\n+\t\t\t.named(\"expand\")\n+\t\t\t.withParameter(Parameters.class, \"offset\", new IntegerType(1))\n+\t\t\t.execute();\n+\t\tValueSet expanded = (ValueSet) respParam.getParameter().get(0).getResource();\n+\n+\t\tString resp = myFhirCtx.newXmlParser().setPrettyPrint(true).encodeResourceToString(expanded);\n+\t\tourLog.info(resp);\n+\t\tassertThat(resp, stringContainsInOrder(\n+\t\t\t\"<total value=\\\"24\\\"/>\\n\",\n+\t\t\t\"<offset value=\\\"1\\\"/>\\n\",\n+\t\t\t\"<parameter>\\n\",\n+\t\t\t\"<name value=\\\"offset\\\"/>\\n\",\n+\t\t\t\"<valueInteger value=\\\"1\\\"/>\\n\",\n+\t\t\t\"</parameter>\\n\",\n+\t\t\t\"<parameter>\\n\",\n+\t\t\t\"<name value=\\\"count\\\"/>\\n\",\n+\t\t\t\"<valueInteger value=\\\"1000\\\"/>\\n\",\n+\t\t\t\"</parameter>\\n\",\n+\t\t\t\"<contains>\\n\",\n+\t\t\t\"<system value=\\\"http://acme.org\\\"/>\\n\",\n+\t\t\t\"<code value=\\\"11378-7\\\"/>\\n\",\n+\t\t\t\"<display value=\\\"Systolic blood pressure at First encounter\\\"/>\\n\",\n+\t\t\t\"</contains>\\n\",\n+\t\t\t\"<contains>\\n\",\n+\t\t\t\"<system value=\\\"http://acme.org\\\"/>\\n\",\n+\t\t\t\"<code value=\\\"8493-9\\\"/>\\n\",\n+\t\t\t\"<display value=\\\"Systolic blood pressure 10 hour minimum\\\"/>\\n\",\n+\t\t\t\"</contains>\"));\n+\n+\t}\n+\n+\t@Test\n+\tpublic void testExpandByIdWithPreExpansionWithCount() throws Exception {\n+\t\tmyDaoConfig.setPreExpandValueSets(true);\n+\n+\t\tloadAndPersistCodeSystemAndValueSet(HTTPVerb.POST);\n+\t\tmyTermSvc.preExpandDeferredValueSetsToTerminologyTables();\n+\n+\t\tParameters respParam = ourClient\n+\t\t\t.operation()\n+\t\t\t.onInstance(myExtensionalVsId)\n+\t\t\t.named(\"expand\")\n+\t\t\t.withParameter(Parameters.class, \"count\", new IntegerType(1))\n+\t\t\t.execute();\n+\t\tValueSet expanded = (ValueSet) respParam.getParameter().get(0).getResource();\n+\n+\t\tString resp = myFhirCtx.newXmlParser().setPrettyPrint(true).encodeResourceToString(expanded);\n+\t\tourLog.info(resp);\n+\t\tassertThat(resp, stringContainsInOrder(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "314df430913f1e2d269a482aabc0701ee8a3be6f"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzNDMwMg==", "bodyText": "Agreed. I wrote those tests to be similar to the other tests in that class. I've since improved the new tests; however, I haven't gone back to change all of the old tests.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1933#discussion_r443834302", "createdAt": "2020-06-22T21:23:11Z", "author": {"login": "dmuylwyk"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/provider/r5/ResourceProviderR5ValueSetTest.java", "diffHunk": "@@ -301,6 +301,122 @@ public void testExpandByIdWithPreExpansion() throws Exception {\n \n \t}\n \n+\t@Test\n+\tpublic void testExpandByIdWithPreExpansionWithOffset() throws Exception {\n+\t\tmyDaoConfig.setPreExpandValueSets(true);\n+\n+\t\tloadAndPersistCodeSystemAndValueSet(HTTPVerb.POST);\n+\t\tmyTermSvc.preExpandDeferredValueSetsToTerminologyTables();\n+\n+\t\tParameters respParam = ourClient\n+\t\t\t.operation()\n+\t\t\t.onInstance(myExtensionalVsId)\n+\t\t\t.named(\"expand\")\n+\t\t\t.withParameter(Parameters.class, \"offset\", new IntegerType(1))\n+\t\t\t.execute();\n+\t\tValueSet expanded = (ValueSet) respParam.getParameter().get(0).getResource();\n+\n+\t\tString resp = myFhirCtx.newXmlParser().setPrettyPrint(true).encodeResourceToString(expanded);\n+\t\tourLog.info(resp);\n+\t\tassertThat(resp, stringContainsInOrder(\n+\t\t\t\"<total value=\\\"24\\\"/>\\n\",\n+\t\t\t\"<offset value=\\\"1\\\"/>\\n\",\n+\t\t\t\"<parameter>\\n\",\n+\t\t\t\"<name value=\\\"offset\\\"/>\\n\",\n+\t\t\t\"<valueInteger value=\\\"1\\\"/>\\n\",\n+\t\t\t\"</parameter>\\n\",\n+\t\t\t\"<parameter>\\n\",\n+\t\t\t\"<name value=\\\"count\\\"/>\\n\",\n+\t\t\t\"<valueInteger value=\\\"1000\\\"/>\\n\",\n+\t\t\t\"</parameter>\\n\",\n+\t\t\t\"<contains>\\n\",\n+\t\t\t\"<system value=\\\"http://acme.org\\\"/>\\n\",\n+\t\t\t\"<code value=\\\"11378-7\\\"/>\\n\",\n+\t\t\t\"<display value=\\\"Systolic blood pressure at First encounter\\\"/>\\n\",\n+\t\t\t\"</contains>\\n\",\n+\t\t\t\"<contains>\\n\",\n+\t\t\t\"<system value=\\\"http://acme.org\\\"/>\\n\",\n+\t\t\t\"<code value=\\\"8493-9\\\"/>\\n\",\n+\t\t\t\"<display value=\\\"Systolic blood pressure 10 hour minimum\\\"/>\\n\",\n+\t\t\t\"</contains>\"));\n+\n+\t}\n+\n+\t@Test\n+\tpublic void testExpandByIdWithPreExpansionWithCount() throws Exception {\n+\t\tmyDaoConfig.setPreExpandValueSets(true);\n+\n+\t\tloadAndPersistCodeSystemAndValueSet(HTTPVerb.POST);\n+\t\tmyTermSvc.preExpandDeferredValueSetsToTerminologyTables();\n+\n+\t\tParameters respParam = ourClient\n+\t\t\t.operation()\n+\t\t\t.onInstance(myExtensionalVsId)\n+\t\t\t.named(\"expand\")\n+\t\t\t.withParameter(Parameters.class, \"count\", new IntegerType(1))\n+\t\t\t.execute();\n+\t\tValueSet expanded = (ValueSet) respParam.getParameter().get(0).getResource();\n+\n+\t\tString resp = myFhirCtx.newXmlParser().setPrettyPrint(true).encodeResourceToString(expanded);\n+\t\tourLog.info(resp);\n+\t\tassertThat(resp, stringContainsInOrder(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNDgxNw=="}, "originalCommit": {"oid": "314df430913f1e2d269a482aabc0701ee8a3be6f"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTQxMDgwOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-validation/src/main/java/org/hl7/fhir/common/hapi/validation/support/BaseValidationSupportWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTowNzoxMlrOGnRB4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMToyNDoxNFrOGnRhgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNjY1OQ==", "bodyText": "doh.....", "url": "https://github.com/hapifhir/hapi-fhir/pull/1933#discussion_r443826659", "createdAt": "2020-06-22T21:07:12Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-validation/src/main/java/org/hl7/fhir/common/hapi/validation/support/BaseValidationSupportWrapper.java", "diffHunk": "@@ -70,7 +70,7 @@ public boolean isValueSetSupported(ValidationSupportContext theValidationSupport\n \n \t@Override\n \tpublic IValidationSupport.ValueSetExpansionOutcome expandValueSet(ValidationSupportContext theValidationSupportContext, ValueSetExpansionOptions theExpansionOptions, IBaseResource theValueSetToExpand) {\n-\t\treturn myWrap.expandValueSet(theValidationSupportContext, null, theValueSetToExpand);\n+\t\treturn myWrap.expandValueSet(theValidationSupportContext, theExpansionOptions, theValueSetToExpand);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "314df430913f1e2d269a482aabc0701ee8a3be6f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgzNDc1Mg==", "bodyText": "Mistakes happen. : )\nI'm surprised we didn't already have tests for the offset and count parameters. \u00af_(\u30c4)_/\u00af", "url": "https://github.com/hapifhir/hapi-fhir/pull/1933#discussion_r443834752", "createdAt": "2020-06-22T21:24:14Z", "author": {"login": "dmuylwyk"}, "path": "hapi-fhir-validation/src/main/java/org/hl7/fhir/common/hapi/validation/support/BaseValidationSupportWrapper.java", "diffHunk": "@@ -70,7 +70,7 @@ public boolean isValueSetSupported(ValidationSupportContext theValidationSupport\n \n \t@Override\n \tpublic IValidationSupport.ValueSetExpansionOutcome expandValueSet(ValidationSupportContext theValidationSupportContext, ValueSetExpansionOptions theExpansionOptions, IBaseResource theValueSetToExpand) {\n-\t\treturn myWrap.expandValueSet(theValidationSupportContext, null, theValueSetToExpand);\n+\t\treturn myWrap.expandValueSet(theValidationSupportContext, theExpansionOptions, theValueSetToExpand);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNjY1OQ=="}, "originalCommit": {"oid": "314df430913f1e2d269a482aabc0701ee8a3be6f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1875, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}