{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDI1NTk1", "number": 1997, "title": "Allow empty candidateSearchParams in EMPI module config. ", "bodyText": "Allows EMPI module to have an empty candidateSearchParams section of config. Closes #1996\nThe original issue was that if empi-rules.json contained an empty candidateSearchParams, field, like so:\n\t\"candidateSearchParams\": []\nthe EmpiCandidateSearchCriteriaBuilderSvc#buildResourceQueryString function would simply skip performing any queries at all, as the original logic looped over them for populating candidates.\nSolution:\n\nLogical flow checking for this edge case, and when we detect it, we execute a single search using only the filter criteria.\nDo not return early from buildResourceQueryString if we detect an empty/null EmpiResourceSearchParamJson.\nAdded two tests to ensure that null candidate search params do not return empty optionals, but instead return a FHIR query with only the filters as query parameters. e.g. Patient?active=true\nAs an aside, fixed a potential NPE with the EmpiResourceSearchParamJson.\n\nHowever this raises a question:\nWhat scenario would be actually want to return this empty optional. In the case where the resource being matched doesnt have any of the values that the EmpiResourceSearchParamJson wants? e.g. if i have a patient with name 'gary', but no birthdate, and i have a search param saying\n{\n\t\"resourceType\": \"Patient\",\n\t\"searchParams\": [\"birthdate\"]\n}\ndo I actually want it to return Zero candidates? if so, the existing early-exit logic is valid. However, what if I still want to match that person? Will they be unmatchable since they have no birthdate? Something to consider. What do you think, @fil512", "createdAt": "2020-07-24T01:08:38Z", "url": "https://github.com/hapifhir/hapi-fhir/pull/1997", "merged": true, "mergeCommit": {"oid": "ff1d5221b58d45b28b68bc2b95408ef912919580"}, "closed": true, "closedAt": "2020-07-24T21:22:30Z", "author": {"login": "tadgh"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc33ggWAH2gAyNDU2MDI1NTk1OjZhNWI5NmQwNWYwM2U5MWY4YTYxY2Y5NTc1YjNlNjI5M2VmMGY0MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4IrcYAH2gAyNDU2MDI1NTk1OmRmNmYwMjg3NjhmNTI2YjI0OGJkY2MxNDJlNjlmYmVhMWVmZDIwMWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a5b96d05f03e91f8a61cf9575b3e6293ef0f401", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/6a5b96d05f03e91f8a61cf9575b3e6293ef0f401", "committedDate": "2020-07-23T22:52:12Z", "message": "Start with broken test for #1996"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2da64119bb2f171bd7c46faa49f1175c0bb028d4", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/2da64119bb2f171bd7c46faa49f1175c0bb028d4", "committedDate": "2020-07-24T00:28:20Z", "message": "Resolve issue with test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "698b18eb2f8a841f45dae03f1f5db0b36bbe5a8d", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/698b18eb2f8a841f45dae03f1f5db0b36bbe5a8d", "committedDate": "2020-07-24T01:01:08Z", "message": "Fix NPE in iterator, fix empi-rules.json, add extra tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31d0ed3ac19b5ef5ba777e1009bfa49dfa49e1f7", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/31d0ed3ac19b5ef5ba777e1009bfa49dfa49e1f7", "committedDate": "2020-07-24T01:09:10Z", "message": "remove question, put in PR instead"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDMyNzkz", "url": "https://github.com/hapifhir/hapi-fhir/pull/1997#pullrequestreview-455032793", "createdAt": "2020-07-24T16:41:19Z", "commit": {"oid": "31d0ed3ac19b5ef5ba777e1009bfa49dfa49e1f7"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo0MToxOVrOG22VuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo0OTozM1rOG22nDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2NjU4NQ==", "bodyText": "this doesn't look right to me.  if there are no criteria, then we still need to add the filter to cover the case where there is a filter but no criteria", "url": "https://github.com/hapifhir/hapi-fhir/pull/1997#discussion_r460166585", "createdAt": "2020-07-24T16:41:19Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/candidate/EmpiCandidateSearchCriteriaBuilderSvc.java", "diffHunk": "@@ -43,19 +44,25 @@\n \t * Patient?active=true&name.given=Gary,Grant&name.family=Graham\n \t */\n \t@Nonnull\n-\tpublic Optional<String> buildResourceQueryString(String theResourceType, IAnyResource theResource, List<String> theFilterCriteria, EmpiResourceSearchParamJson resourceSearchParam) {\n+\tpublic Optional<String> buildResourceQueryString(String theResourceType, IAnyResource theResource, List<String> theFilterCriteria, @Nullable EmpiResourceSearchParamJson resourceSearchParam) {\n \t\tList<String> criteria = new ArrayList<>();\n \n-\t\tresourceSearchParam.iterator().forEachRemaining(searchParam -> {\n-\t\t\t//to compare it to all known PERSON objects, using the overlapping search parameters that they have.\n-\t\t\tList<String> valuesFromResourceForSearchParam = myEmpiSearchParamSvc.getValueFromResourceForSearchParam(theResource, searchParam);\n-\t\t\tif (!valuesFromResourceForSearchParam.isEmpty()) {\n-\t\t\t\tcriteria.add(buildResourceMatchQuery(searchParam, valuesFromResourceForSearchParam));\n+\t\t// If there are candidate search params, then make use of them, otherwise, search with only the filters.\n+\t\tif (resourceSearchParam != null) {\n+\t\t\tresourceSearchParam.iterator().forEachRemaining(searchParam -> {\n+\t\t\t\t//to compare it to all known PERSON objects, using the overlapping search parameters that they have.\n+\t\t\t\tList<String> valuesFromResourceForSearchParam = myEmpiSearchParamSvc.getValueFromResourceForSearchParam(theResource, searchParam);\n+\t\t\t\tif (!valuesFromResourceForSearchParam.isEmpty()) {\n+\t\t\t\t\tcriteria.add(buildResourceMatchQuery(searchParam, valuesFromResourceForSearchParam));\n+\t\t\t\t}\n+\t\t\t});\n+\n+\t\t\tif (criteria.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d0ed3ac19b5ef5ba777e1009bfa49dfa49e1f7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2Njg4OQ==", "bodyText": "is it possible for candidateSearchParams to ever be null?  I thought we validated this on json deserialization, but I could be wrong.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1997#discussion_r460166889", "createdAt": "2020-07-24T16:41:54Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/candidate/EmpiCandidateSearchSvc.java", "diffHunk": "@@ -75,18 +75,23 @@ public EmpiCandidateSearchSvc() {\n \t */\n \tpublic Collection<IAnyResource> findCandidates(String theResourceType, IAnyResource theResource) {\n \t\tMap<Long, IAnyResource> matchedPidsToResources = new HashMap<>();\n-\n \t\tList<EmpiFilterSearchParamJson> filterSearchParams = myEmpiConfig.getEmpiRules().getCandidateFilterSearchParams();\n-\n \t\tList<String> filterCriteria = buildFilterQuery(filterSearchParams, theResourceType);\n+\t\tList<EmpiResourceSearchParamJson> candidateSearchParams = myEmpiConfig.getEmpiRules().getCandidateSearchParams();\n \n-\t\tfor (EmpiResourceSearchParamJson resourceSearchParam : myEmpiConfig.getEmpiRules().getCandidateSearchParams()) {\n+\t\t//If there are zero EmpiResourceSearchParamJson, we end up only making a single search, otherwise we\n+\t\t//must perform one search per EmpiResourceSearchParamJson.\n+\t\tif (candidateSearchParams == null || candidateSearchParams.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d0ed3ac19b5ef5ba777e1009bfa49dfa49e1f7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3MTAyMA==", "bodyText": "these two tests definitely seem to cover the key issue", "url": "https://github.com/hapifhir/hapi-fhir/pull/1997#discussion_r460171020", "createdAt": "2020-07-24T16:49:33Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/test/java/ca/uhn/fhir/jpa/empi/svc/EmpiCandidateSearchCriteriaBuilderSvcTest.java", "diffHunk": "@@ -67,4 +69,21 @@ public void testIdentifier() {\n \t\tassertTrue(result.isPresent());\n \t\tassertEquals(result.get(), \"Patient?identifier=urn:oid:1.2.36.146.595.217.0.1|12345\");\n \t}\n+\n+\t@Test\n+\tpublic void testOmittingCandidateSearchParamsIsAllowed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31d0ed3ac19b5ef5ba777e1009bfa49dfa49e1f7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fd690f83005c0c56ef4f74e598a512678c9bd99", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/7fd690f83005c0c56ef4f74e598a512678c9bd99", "committedDate": "2020-07-24T17:42:21Z", "message": "Add test in provider with different empi json rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df6f028768f526b248bdcc142e69fbea1efd201c", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/df6f028768f526b248bdcc142e69fbea1efd201c", "committedDate": "2020-07-24T18:52:32Z", "message": "It is allowed to have empty candidate search params, so validator test is, ironically, invalid"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3833, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}