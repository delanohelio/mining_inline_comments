{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzY4MjQ5", "number": 1656, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOTozNjoxN1rODVhvkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOTozNjoxN1rODVhvkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzODk5NTM3OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/method/BaseResourceReturningMethodBinding.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOTozNjoxN1rOFZzZjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQxOTo0Mjo1N1rOFZzjKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwMDg0Nw==", "bodyText": "You could actually only test for IBaseBundle (ie just keep the one you added and drop the other one). That should cover all cases actually. I don't think the IBaseBundle resource existed when this code was written..", "url": "https://github.com/hapifhir/hapi-fhir/pull/1656#discussion_r362600847", "createdAt": "2020-01-02T19:36:17Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/method/BaseResourceReturningMethodBinding.java", "diffHunk": "@@ -81,7 +82,8 @@ public BaseResourceReturningMethodBinding(Class<?> theReturnResourceType, Method\n \t\t\t}\n \n \t\t} else if (IBaseResource.class.isAssignableFrom(methodReturnType)) {\n-\t\t\tif (Modifier.isAbstract(methodReturnType.getModifiers()) == false && theContext.getResourceDefinition((Class<? extends IBaseResource>) methodReturnType).isBundle()) {\n+\n+\t\t\tif ((Modifier.isAbstract(methodReturnType.getModifiers()) == false && theContext.getResourceDefinition((Class<? extends IBaseResource>) methodReturnType).isBundle()) || IBaseBundle.class.isAssignableFrom(methodReturnType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c83c1ce44ef8e4ecd1caea9f122f62a8a136b78"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwMzMwNg==", "bodyText": "updated", "url": "https://github.com/hapifhir/hapi-fhir/pull/1656#discussion_r362603306", "createdAt": "2020-01-02T19:42:57Z", "author": {"login": "j-chan"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/method/BaseResourceReturningMethodBinding.java", "diffHunk": "@@ -81,7 +82,8 @@ public BaseResourceReturningMethodBinding(Class<?> theReturnResourceType, Method\n \t\t\t}\n \n \t\t} else if (IBaseResource.class.isAssignableFrom(methodReturnType)) {\n-\t\t\tif (Modifier.isAbstract(methodReturnType.getModifiers()) == false && theContext.getResourceDefinition((Class<? extends IBaseResource>) methodReturnType).isBundle()) {\n+\n+\t\t\tif ((Modifier.isAbstract(methodReturnType.getModifiers()) == false && theContext.getResourceDefinition((Class<? extends IBaseResource>) methodReturnType).isBundle()) || IBaseBundle.class.isAssignableFrom(methodReturnType)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYwMDg0Nw=="}, "originalCommit": {"oid": "0c83c1ce44ef8e4ecd1caea9f122f62a8a136b78"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1987, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}