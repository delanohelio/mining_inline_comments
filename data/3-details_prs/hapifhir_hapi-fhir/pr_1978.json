{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NDIxMjkx", "number": 1978, "title": "Empi 3 ruleset version", "bodyText": "Add five new fields to the empi link table:\nversion (the version of the rule set that generated the link)\neidMatch\nnewPerson\nvector\nscore", "createdAt": "2020-07-13T18:33:56Z", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978", "merged": true, "mergeCommit": {"oid": "ebd6ca4b6403d7499ca79ac8d3cf295a7eff2b38"}, "closed": true, "closedAt": "2020-07-17T12:31:16Z", "author": {"login": "fil512"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczl-yIgH2gAyNDQ4NDIxMjkxOmIwMjNiODEzNTA5ZmQwNjI2M2VhZDA2MzI1MDRiNzMxMDZjNmNlOGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1UOS3gH2gAyNDQ4NDIxMjkxOjVjOWJkZmNjYzExMTE4ZWQ2YTc4ZGQwYzdiNTZkYTM2M2Q5YmExZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b023b813509fd06263ead0632504b73106c6ce8b", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/b023b813509fd06263ead0632504b73106c6ce8b", "committedDate": "2020-07-10T16:11:17Z", "message": "add rule version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0ac13f9b88274999101e7b7b275867bff578141", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/d0ac13f9b88274999101e7b7b275867bff578141", "committedDate": "2020-07-10T16:11:43Z", "message": "add rule version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abee7aed6b3c828f117e0a03eca0d9f77292f0a8", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/abee7aed6b3c828f117e0a03eca0d9f77292f0a8", "committedDate": "2020-07-10T19:16:26Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into empi-3-ruleset-version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b598d03f859e017334a858a31740ef815399ac19", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/b598d03f859e017334a858a31740ef815399ac19", "committedDate": "2020-07-10T19:32:03Z", "message": "Rough in model for Golden Record."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce9e6422163f078123dea8505375b170ee987e9d", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/ce9e6422163f078123dea8505375b170ee987e9d", "committedDate": "2020-07-10T19:36:03Z", "message": "Test Link Rule Version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05b070eaee46bfb4eb93887afb81d793aa8fec85", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/05b070eaee46bfb4eb93887afb81d793aa8fec85", "committedDate": "2020-07-10T23:19:27Z", "message": "add eid match boolean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f7d607bb3f26c486fdd8bb771ddd452dd52d139", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/7f7d607bb3f26c486fdd8bb771ddd452dd52d139", "committedDate": "2020-07-12T19:55:38Z", "message": "added new fields to EmpiLink to provide more information about how the link was created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "960ae5ed8a2922ff7f64a859cb1693d21cd4e75a", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/960ae5ed8a2922ff7f64a859cb1693d21cd4e75a", "committedDate": "2020-07-12T20:06:49Z", "message": "add logging to check an edge case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "434fa71088dd4556b0718a66688a44bc59b3fb35", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/434fa71088dd4556b0718a66688a44bc59b3fb35", "committedDate": "2020-07-12T21:34:20Z", "message": "all tests pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f62f67cb4839cba39a84df7443d5651d858e88a", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/5f62f67cb4839cba39a84df7443d5651d858e88a", "committedDate": "2020-07-13T15:24:06Z", "message": "wip with failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37b5be93d3d571e4d89b03ca7567cab198c99a91", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/37b5be93d3d571e4d89b03ca7567cab198c99a91", "committedDate": "2020-07-13T15:48:06Z", "message": "tests pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f678b6da6db8a9b6bc7a9d62689e1829529793fc", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/f678b6da6db8a9b6bc7a9d62689e1829529793fc", "committedDate": "2020-07-13T15:53:36Z", "message": "FIXME"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bf61fac0a971363cfe0d791c7d88e91f3fc3f18", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/0bf61fac0a971363cfe0d791c7d88e91f3fc3f18", "committedDate": "2020-07-13T15:53:59Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into empi-3-ruleset-version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ef4e3f9f55d70125e5e48fa9a0d93696673ab00", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/2ef4e3f9f55d70125e5e48fa9a0d93696673ab00", "committedDate": "2020-07-13T15:56:32Z", "message": "optimize imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c6b79e982606ac838dbda1b5c98c337fd052402", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/3c6b79e982606ac838dbda1b5c98c337fd052402", "committedDate": "2020-07-13T18:24:29Z", "message": "test score in provider output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aff6f20d79733e6f0010636af5b6dfdf9e9da366", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/aff6f20d79733e6f0010636af5b6dfdf9e9da366", "committedDate": "2020-07-13T18:25:12Z", "message": "FIXME"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc15d72df4621a944ef628d44a42ef75f6908333", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/bc15d72df4621a944ef628d44a42ef75f6908333", "committedDate": "2020-07-13T18:30:33Z", "message": "FIXME"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd2a7428d5de998a673d66b8385950fa21141e10", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/cd2a7428d5de998a673d66b8385950fa21141e10", "committedDate": "2020-07-13T20:13:12Z", "message": "Fix jpa test app context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c57c1386d924222f21b3328b9957451b3d2e9c1", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/1c57c1386d924222f21b3328b9957451b3d2e9c1", "committedDate": "2020-07-13T20:41:14Z", "message": "fix migration string length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/acf4f5672542522d3b80ecd7835559790fd98a5f", "committedDate": "2020-07-13T21:57:45Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into empi-3-ruleset-version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjQwNzEx", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#pullrequestreview-448240711", "createdAt": "2020-07-14T15:53:55Z", "commit": {"oid": "bc15d72df4621a944ef628d44a42ef75f6908333"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjoxNDo1N1rOGxa-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzo0NjozNFrOGxeiIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NTUwOA==", "bodyText": "rename variable to theMatchOutcome to match type", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#discussion_r454475508", "createdAt": "2020-07-14T16:14:57Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiLinkSvcImpl.java", "diffHunk": "@@ -63,24 +64,25 @@\n \n \t@Override\n \t@Transactional\n-\tpublic void updateLink(IAnyResource thePerson, IAnyResource theTarget, EmpiMatchResultEnum theMatchResult, EmpiLinkSourceEnum theLinkSource, EmpiTransactionContext theEmpiTransactionContext) {\n+\tpublic void updateLink(IAnyResource thePerson, IAnyResource theTarget, EmpiMatchOutcome theMatchResult, EmpiLinkSourceEnum theLinkSource, EmpiTransactionContext theEmpiTransactionContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3NzM1MA==", "bodyText": "Any particular reason to rework this? Seems odd to have a wrapped class for a list. For the helper functions on it?", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#discussion_r454477350", "createdAt": "2020-07-14T16:17:46Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiMatchLinkSvc.java", "diffHunk": "@@ -72,46 +75,47 @@ public EmpiTransactionContext updateEmpiLinksForEmpiTarget(IAnyResource theResou\n \t}\n \n \tprivate EmpiTransactionContext doEmpiUpdate(IAnyResource theResource, EmpiTransactionContext theEmpiTransactionContext) {\n-\t\tList<MatchedPersonCandidate> personCandidates = myEmpiPersonFindingSvc.findPersonCandidates(theResource);\n-\t\tif (personCandidates.isEmpty()) {\n+\t\tCandidateList candidateList = myEmpiPersonFindingSvc.findPersonCandidates(theResource);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ4MjczOQ==", "bodyText": "wait, EID_POSSIBLE_MATCH ? How can an EID be a possible match, or am I misunderstanding something here?", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#discussion_r454482739", "createdAt": "2020-07-14T16:25:40Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiMatchLinkSvc.java", "diffHunk": "@@ -72,46 +75,47 @@ public EmpiTransactionContext updateEmpiLinksForEmpiTarget(IAnyResource theResou\n \t}\n \n \tprivate EmpiTransactionContext doEmpiUpdate(IAnyResource theResource, EmpiTransactionContext theEmpiTransactionContext) {\n-\t\tList<MatchedPersonCandidate> personCandidates = myEmpiPersonFindingSvc.findPersonCandidates(theResource);\n-\t\tif (personCandidates.isEmpty()) {\n+\t\tCandidateList candidateList = myEmpiPersonFindingSvc.findPersonCandidates(theResource);\n+\t\tif (candidateList.isEmpty()) {\n \t\t\thandleEmpiWithNoCandidates(theResource, theEmpiTransactionContext);\n-\t\t} else if (personCandidates.size() == 1) {\n-\t\t\thandleEmpiWithSingleCandidate(theResource, personCandidates, theEmpiTransactionContext);\n+\t\t} else if (candidateList.exactlyOneMatch()) {\n+\t\t\thandleEmpiWithSingleCandidate(theResource, candidateList.getOnlyMatch(), theEmpiTransactionContext);\n \t\t} else {\n-\t\t\thandleEmpiWithMultipleCandidates(theResource, personCandidates, theEmpiTransactionContext);\n+\t\t\thandleEmpiWithMultipleCandidates(theResource, candidateList, theEmpiTransactionContext);\n \t\t}\n \t\treturn theEmpiTransactionContext;\n \t}\n \n-\tprivate void handleEmpiWithMultipleCandidates(IAnyResource theResource, List<MatchedPersonCandidate> thePersonCandidates, EmpiTransactionContext theEmpiTransactionContext) {\n-\t\tLong samplePersonPid = thePersonCandidates.get(0).getCandidatePersonPid().getIdAsLong();\n-\t\tboolean allSamePerson = thePersonCandidates.stream()\n+\tprivate void handleEmpiWithMultipleCandidates(IAnyResource theResource, CandidateList theCandidateList, EmpiTransactionContext theEmpiTransactionContext) {\n+\t\tMatchedPersonCandidate firstMatch = theCandidateList.getFirstMatch();\n+\t\tLong samplePersonPid = firstMatch.getCandidatePersonPid().getIdAsLong();\n+\t\tboolean allSamePerson = theCandidateList.stream()\n \t\t\t.allMatch(candidate -> candidate.getCandidatePersonPid().getIdAsLong().equals(samplePersonPid));\n \n \t\tif (allSamePerson) {\n \t\t\tlog(theEmpiTransactionContext, \"EMPI received multiple match candidates, but they are all linked to the same person.\");\n-\t\t\thandleEmpiWithSingleCandidate(theResource, thePersonCandidates, theEmpiTransactionContext);\n+\t\t\thandleEmpiWithSingleCandidate(theResource, firstMatch, theEmpiTransactionContext);\n \t\t} else {\n \t\t\tlog(theEmpiTransactionContext, \"EMPI received multiple match candidates, that were linked to different Persons. Setting POSSIBLE_DUPLICATES and POSSIBLE_MATCHES.\");\n \t\t\t//Set them all as POSSIBLE_MATCH\n-\t\t\tList<IAnyResource> persons = thePersonCandidates.stream().map((MatchedPersonCandidate matchedPersonCandidate) -> myEmpiPersonFindingSvc.getPersonFromMatchedPersonCandidate(matchedPersonCandidate)).collect(Collectors.toList());\n-\t\t\t\tpersons.forEach(person -> {\n-\t\t\t\t\tmyEmpiLinkSvc.updateLink(person, theResource, EmpiMatchResultEnum.POSSIBLE_MATCH, EmpiLinkSourceEnum.AUTO, theEmpiTransactionContext);\n-\t\t\t\t});\n+\t\t\tList<IAnyResource> persons = new ArrayList<>();\n+\t\t\tfor (MatchedPersonCandidate matchedPersonCandidate : theCandidateList.getCandidates()) {\n+\t\t\t\tIAnyResource person = myEmpiPersonFindingSvc.getPersonFromMatchedPersonCandidate(matchedPersonCandidate);\n+\t\t\t\tmyEmpiLinkSvc.updateLink(person, theResource, EmpiMatchOutcome.EID_POSSIBLE_MATCH, EmpiLinkSourceEnum.AUTO, theEmpiTransactionContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ4MzExNQ==", "bodyText": "Same here", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#discussion_r454483115", "createdAt": "2020-07-14T16:26:17Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiMatchLinkSvc.java", "diffHunk": "@@ -72,46 +75,47 @@ public EmpiTransactionContext updateEmpiLinksForEmpiTarget(IAnyResource theResou\n \t}\n \n \tprivate EmpiTransactionContext doEmpiUpdate(IAnyResource theResource, EmpiTransactionContext theEmpiTransactionContext) {\n-\t\tList<MatchedPersonCandidate> personCandidates = myEmpiPersonFindingSvc.findPersonCandidates(theResource);\n-\t\tif (personCandidates.isEmpty()) {\n+\t\tCandidateList candidateList = myEmpiPersonFindingSvc.findPersonCandidates(theResource);\n+\t\tif (candidateList.isEmpty()) {\n \t\t\thandleEmpiWithNoCandidates(theResource, theEmpiTransactionContext);\n-\t\t} else if (personCandidates.size() == 1) {\n-\t\t\thandleEmpiWithSingleCandidate(theResource, personCandidates, theEmpiTransactionContext);\n+\t\t} else if (candidateList.exactlyOneMatch()) {\n+\t\t\thandleEmpiWithSingleCandidate(theResource, candidateList.getOnlyMatch(), theEmpiTransactionContext);\n \t\t} else {\n-\t\t\thandleEmpiWithMultipleCandidates(theResource, personCandidates, theEmpiTransactionContext);\n+\t\t\thandleEmpiWithMultipleCandidates(theResource, candidateList, theEmpiTransactionContext);\n \t\t}\n \t\treturn theEmpiTransactionContext;\n \t}\n \n-\tprivate void handleEmpiWithMultipleCandidates(IAnyResource theResource, List<MatchedPersonCandidate> thePersonCandidates, EmpiTransactionContext theEmpiTransactionContext) {\n-\t\tLong samplePersonPid = thePersonCandidates.get(0).getCandidatePersonPid().getIdAsLong();\n-\t\tboolean allSamePerson = thePersonCandidates.stream()\n+\tprivate void handleEmpiWithMultipleCandidates(IAnyResource theResource, CandidateList theCandidateList, EmpiTransactionContext theEmpiTransactionContext) {\n+\t\tMatchedPersonCandidate firstMatch = theCandidateList.getFirstMatch();\n+\t\tLong samplePersonPid = firstMatch.getCandidatePersonPid().getIdAsLong();\n+\t\tboolean allSamePerson = theCandidateList.stream()\n \t\t\t.allMatch(candidate -> candidate.getCandidatePersonPid().getIdAsLong().equals(samplePersonPid));\n \n \t\tif (allSamePerson) {\n \t\t\tlog(theEmpiTransactionContext, \"EMPI received multiple match candidates, but they are all linked to the same person.\");\n-\t\t\thandleEmpiWithSingleCandidate(theResource, thePersonCandidates, theEmpiTransactionContext);\n+\t\t\thandleEmpiWithSingleCandidate(theResource, firstMatch, theEmpiTransactionContext);\n \t\t} else {\n \t\t\tlog(theEmpiTransactionContext, \"EMPI received multiple match candidates, that were linked to different Persons. Setting POSSIBLE_DUPLICATES and POSSIBLE_MATCHES.\");\n \t\t\t//Set them all as POSSIBLE_MATCH\n-\t\t\tList<IAnyResource> persons = thePersonCandidates.stream().map((MatchedPersonCandidate matchedPersonCandidate) -> myEmpiPersonFindingSvc.getPersonFromMatchedPersonCandidate(matchedPersonCandidate)).collect(Collectors.toList());\n-\t\t\t\tpersons.forEach(person -> {\n-\t\t\t\t\tmyEmpiLinkSvc.updateLink(person, theResource, EmpiMatchResultEnum.POSSIBLE_MATCH, EmpiLinkSourceEnum.AUTO, theEmpiTransactionContext);\n-\t\t\t\t});\n+\t\t\tList<IAnyResource> persons = new ArrayList<>();\n+\t\t\tfor (MatchedPersonCandidate matchedPersonCandidate : theCandidateList.getCandidates()) {\n+\t\t\t\tIAnyResource person = myEmpiPersonFindingSvc.getPersonFromMatchedPersonCandidate(matchedPersonCandidate);\n+\t\t\t\tmyEmpiLinkSvc.updateLink(person, theResource, EmpiMatchOutcome.EID_POSSIBLE_MATCH, EmpiLinkSourceEnum.AUTO, theEmpiTransactionContext);\n+\t\t\t\tpersons.add(person);\n+\t\t\t}\n \n-\t\t\t//Set all Persons as POSSIBLE_DUPLICATE of the first person.\n-\t\t\tIAnyResource samplePerson = persons.get(0);\n-\t\t\tpersons.subList(1, persons.size()).stream()\n-\t\t\t\t.forEach(possibleDuplicatePerson -> {\n-\t\t\t\t\tmyEmpiLinkSvc.updateLink(samplePerson, possibleDuplicatePerson, EmpiMatchResultEnum.POSSIBLE_DUPLICATE, EmpiLinkSourceEnum.AUTO, theEmpiTransactionContext);\n-\t\t\t\t});\n+\t\t\t//Set all Persons as POSSIBLE_DUPLICATE of the last person.\n+\t\t\tIAnyResource firstPerson = persons.get(0);\n+\t\t\tpersons.subList(1, persons.size())\n+\t\t\t\t.forEach(possibleDuplicatePerson -> myEmpiLinkSvc.updateLink(firstPerson, possibleDuplicatePerson, EmpiMatchOutcome.EID_POSSIBLE_DUPLICATE, EmpiLinkSourceEnum.AUTO, theEmpiTransactionContext));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ4OTM0MQ==", "bodyText": "These could all do with docs indicating in what scenarios these would be used. e.g EID is used when a match occurs strictly due to an externally assigned EID, or something like that.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#discussion_r454489341", "createdAt": "2020-07-14T16:35:52Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/candidate/CandidateStrategyEnum.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package ca.uhn.fhir.jpa.empi.svc.candidate;\n+\n+public enum CandidateStrategyEnum {\n+\tEID,\n+\tLINK,\n+\tSCORE\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUyMzY4NA==", "bodyText": "Clever!", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#discussion_r454523684", "createdAt": "2020-07-14T17:30:25Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/candidate/BaseCandidateFinder.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package ca.uhn.fhir.jpa.empi.svc.candidate;\n+\n+import ca.uhn.fhir.jpa.dao.empi.EmpiLinkDaoSvc;\n+import ca.uhn.fhir.jpa.dao.index.IdHelperService;\n+import org.hl7.fhir.instance.model.api.IAnyResource;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import java.util.List;\n+\n+public abstract class BaseCandidateFinder {\n+\t@Autowired\n+\tIdHelperService myIdHelperService;\n+\t@Autowired\n+\tEmpiLinkDaoSvc myEmpiLinkDaoSvc;\n+\n+\tCandidateList findCandidates(IAnyResource theTarget) {\n+\t\tCandidateList candidateList = new CandidateList(getStrategy());\n+\t\tcandidateList.addAll(findMatchPersonCandidates(theTarget));\n+\t\treturn candidateList;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzMzY2Ng==", "bodyText": "A Javadoc explaining the purpose of this class would be nice", "url": "https://github.com/hapifhir/hapi-fhir/pull/1978#discussion_r454533666", "createdAt": "2020-07-14T17:46:34Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package ca.uhn.fhir.empi.api;\n+\n+public final class EmpiMatchOutcome {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acf4f5672542522d3b80ecd7835559790fd98a5f"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe90972f0bda61b4429a4fe2113d0b7ff09911fa", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/fe90972f0bda61b4429a4fe2113d0b7ff09911fa", "committedDate": "2020-07-14T22:47:03Z", "message": "review feedback param name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a34c17342a9ca6f7caa0ab1502ea12f559a7c7", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/d3a34c17342a9ca6f7caa0ab1502ea12f559a7c7", "committedDate": "2020-07-14T22:49:50Z", "message": "review feedback javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdae2f0c279c75be0b61e66bc95509748c5ba14d", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/bdae2f0c279c75be0b61e66bc95509748c5ba14d", "committedDate": "2020-07-14T22:54:45Z", "message": "review feedback javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42de42b65d129a6c84dc538a2c36bcda163832a1", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/42de42b65d129a6c84dc538a2c36bcda163832a1", "committedDate": "2020-07-15T14:55:45Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into empi-3-ruleset-version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2174da66c95929ab68d85abaeb2da7f1bc0e8a68", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/2174da66c95929ab68d85abaeb2da7f1bc0e8a68", "committedDate": "2020-07-15T22:09:08Z", "message": "bean config reorganization for cdr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e2113a6ab7f95b0c27a72977bc376d470d4e7a4", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/2e2113a6ab7f95b0c27a72977bc376d470d4e7a4", "committedDate": "2020-07-15T23:21:49Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into empi-3-ruleset-version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c9bdfccc11118ed6a78dd0c7b56da363d9ba1ee", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/5c9bdfccc11118ed6a78dd0c7b56da363d9ba1ee", "committedDate": "2020-07-16T00:37:47Z", "message": "add more tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3981, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}