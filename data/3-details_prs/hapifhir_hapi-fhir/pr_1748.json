{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjUwNDA2", "number": 1748, "title": "fix near chain searching for R4", "bodyText": "This is the same as #1744 except it adds a resource provider test for R4 and adds a small fix to get the test to pass", "createdAt": "2020-03-03T23:34:57Z", "url": "https://github.com/hapifhir/hapi-fhir/pull/1748", "merged": true, "mergeCommit": {"oid": "2d9dea069d5aae87d26abaf28caafa7cb6a80616"}, "closed": true, "closedAt": "2020-03-04T00:40:28Z", "author": {"login": "fil512"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKK_HhgH2gAyMzgzMjUwNDA2OmU4MTlkNDA0MTQ4ZDYyYmI4Y2QwMWVhMTc1YjUxOGU3YmEwMmE5OGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKLDmogFqTM2ODQwNTEyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e819d404148d62bb8cd01ea175b518e7ba02a98f", "author": {"user": {"login": "fil512", "name": "Ken Stevens"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/e819d404148d62bb8cd01ea175b518e7ba02a98f", "committedDate": "2020-03-03T23:33:19Z", "message": "fix near searching for R4"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDA1MDk5", "url": "https://github.com/hapifhir/hapi-fhir/pull/1748#pullrequestreview-368405099", "createdAt": "2020-03-03T23:38:07Z", "commit": {"oid": "e819d404148d62bb8cd01ea175b518e7ba02a98f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzozODowN1rOFxakZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzozODowN1rOFxakZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1OTg0Ng==", "bodyText": "So this query is PractitionerRole?location.near=xxxx|yyyyy? i haven't seen location.near before.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1748#discussion_r387359846", "createdAt": "2020-03-03T23:38:07Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/provider/r4/ResourceProviderR4DistanceTest.java", "diffHunk": "@@ -0,0 +1,146 @@\n+package ca.uhn.fhir.jpa.provider.r4;\n+\n+import ca.uhn.fhir.jpa.util.CoordCalculatorTest;\n+import org.hl7.fhir.instance.model.api.IIdType;\n+import org.hl7.fhir.r4.model.Bundle;\n+import org.hl7.fhir.r4.model.Location;\n+import org.hl7.fhir.r4.model.PractitionerRole;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ResourceProviderR4DistanceTest extends BaseResourceProviderR4Test {\n+\t@Override\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\tmyDaoConfig.setReuseCachedSearchResultsForMillis(null);\n+\t}\n+\n+\t@Test\n+\tpublic void testNearSearchApproximate() {\n+\t\tLocation loc = new Location();\n+\t\tdouble latitude = CoordCalculatorTest.LATITUDE_UHN;\n+\t\tdouble longitude = CoordCalculatorTest.LONGITUDE_UHN;\n+\t\tLocation.LocationPositionComponent position = new Location.LocationPositionComponent().setLatitude(latitude).setLongitude(longitude);\n+\t\tloc.setPosition(position);\n+\t\tIIdType locId = ourClient.create().resource(loc).execute().getId().toUnqualifiedVersionless();\n+\n+\t\t{ // In the box\n+\t\t\tdouble bigEnoughDistance = CoordCalculatorTest.DISTANCE_KM_CHIN_TO_UHN * 2;\n+\t\t\tString url = \"/Location?\" +\n+\t\t\t\tLocation.SP_NEAR + \"=\" + CoordCalculatorTest.LATITUDE_CHIN + \"|\" + CoordCalculatorTest.LONGITUDE_CHIN +\n+\t\t\t\t\"|\" + bigEnoughDistance;\n+\n+\t\t\tBundle actual = ourClient\n+\t\t\t\t.search()\n+\t\t\t\t.byUrl(ourServerBase + \"/\" + url)\n+\t\t\t\t.encodedJson()\n+\t\t\t\t.prettyPrint()\n+\t\t\t\t.returnBundle(Bundle.class)\n+\t\t\t\t.execute();\n+\n+\t\t\tassertEquals(1, actual.getEntry().size());\n+\t\t\tassertEquals(locId.getIdPart(), actual.getEntry().get(0).getResource().getIdElement().getIdPart());\n+\t\t}\n+\t\t{ // Outside the box\n+\t\t\tdouble tooSmallDistance = CoordCalculatorTest.DISTANCE_KM_CHIN_TO_UHN / 2;\n+\t\t\tString url = \"/Location?\" +\n+\t\t\t\tLocation.SP_NEAR + \"=\" + CoordCalculatorTest.LATITUDE_CHIN + \"|\" + CoordCalculatorTest.LONGITUDE_CHIN +\n+\t\t\t\t\"|\" + tooSmallDistance;\n+\n+\t\t\tmyCaptureQueriesListener.clear();\n+\t\t\tBundle actual = ourClient\n+\t\t\t\t.search()\n+\t\t\t\t.byUrl(ourServerBase + \"/\" + url)\n+\t\t\t\t.encodedJson()\n+\t\t\t\t.prettyPrint()\n+\t\t\t\t.returnBundle(Bundle.class)\n+\t\t\t\t.execute();\n+\t\t\tmyCaptureQueriesListener.logSelectQueries();\n+\n+\t\t\tassertEquals(0, actual.getEntry().size());\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testNearSearchDistanceNoDistanceChained() {\n+\t\tLocation loc = new Location();\n+\t\tdouble latitude = CoordCalculatorTest.LATITUDE_CHIN;\n+\t\tdouble longitude = CoordCalculatorTest.LONGITUDE_CHIN;\n+\t\tLocation.LocationPositionComponent position = new Location.LocationPositionComponent().setLatitude(latitude).setLongitude(longitude);\n+\t\tloc.setPosition(position);\n+\t\tIIdType locId = ourClient.create().resource(loc).execute().getId().toUnqualifiedVersionless();\n+\n+\t\tPractitionerRole pr = new PractitionerRole();\n+\t\tpr.addLocation().setReference(locId.getValue());\n+\t\tIIdType prId = ourClient.create().resource(pr).execute().getId().toUnqualifiedVersionless();\n+\n+\t\tString url = \"PractitionerRole?location.\" +\n+\t\t\tLocation.SP_NEAR + \"=\" + latitude + \"|\" + longitude;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e819d404148d62bb8cd01ea175b518e7ba02a98f"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDA1MTI5", "url": "https://github.com/hapifhir/hapi-fhir/pull/1748#pullrequestreview-368405129", "createdAt": "2020-03-03T23:38:13Z", "commit": {"oid": "e819d404148d62bb8cd01ea175b518e7ba02a98f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4020, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}