{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NjI0Mzg1", "number": 1936, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowOToxNlrOEICbIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowOToxNlrOEICbIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODYzNzc5OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiCandidateSearchCriteriaBuilderSvc.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowOToxNlrOGnwdFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo1MzowMlrOGn0Ssg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MTUyNg==", "bodyText": "lol", "url": "https://github.com/hapifhir/hapi-fhir/pull/1936#discussion_r444341526", "createdAt": "2020-06-23T16:09:16Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiCandidateSearchCriteriaBuilderSvc.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package ca.uhn.fhir.jpa.empi.svc;\n+\n+import ca.uhn.fhir.empi.rules.json.EmpiResourceSearchParamJson;\n+import org.hl7.fhir.instance.model.api.IAnyResource;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import javax.annotation.Nonnull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Service\n+public class EmpiCandidateSearchCriteriaBuilderSvc {\n+\t@Autowired\n+\tprivate EmpiSearchParamSvc myEmpiSearchParamSvc;\n+\n+\t/*\n+\t * Given a list of criteria upon which to block, a resource search parameter, and a list of values for that given search parameter,\n+\t * build a query url. e.g.\n+\t *\n+\t * Patient?active=true&name.given=Gary,Grant", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f7abeec54532c39226befed04e6bbcb2c67810"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQwNDQwMg==", "bodyText": "you do realize you wrote this comment...  (I just extracted the method to a new class)", "url": "https://github.com/hapifhir/hapi-fhir/pull/1936#discussion_r444404402", "createdAt": "2020-06-23T17:53:02Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/svc/EmpiCandidateSearchCriteriaBuilderSvc.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package ca.uhn.fhir.jpa.empi.svc;\n+\n+import ca.uhn.fhir.empi.rules.json.EmpiResourceSearchParamJson;\n+import org.hl7.fhir.instance.model.api.IAnyResource;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import javax.annotation.Nonnull;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Service\n+public class EmpiCandidateSearchCriteriaBuilderSvc {\n+\t@Autowired\n+\tprivate EmpiSearchParamSvc myEmpiSearchParamSvc;\n+\n+\t/*\n+\t * Given a list of criteria upon which to block, a resource search parameter, and a list of values for that given search parameter,\n+\t * build a query url. e.g.\n+\t *\n+\t * Patient?active=true&name.given=Gary,Grant", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM0MTUyNg=="}, "originalCommit": {"oid": "d9f7abeec54532c39226befed04e6bbcb2c67810"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1878, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}