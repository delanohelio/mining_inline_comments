{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDgxNjIy", "number": 1899, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTowMToxM1rOECuyag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNzozOVrOECvbfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjk5MTc4OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-api/src/main/java/ca/uhn/fhir/jpa/api/config/DaoConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTowMToxM1rOGfXpYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTowMToxM1rOGfXpYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NjQ2Ng==", "bodyText": "Good idea. I was just thinking today that I needed to add something like this.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1899#discussion_r435546466", "createdAt": "2020-06-04T21:01:13Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-api/src/main/java/ca/uhn/fhir/jpa/api/config/DaoConfig.java", "diffHunk": "@@ -193,6 +193,34 @@\n \t */\n \tprivate boolean myDeleteEnabled = true;\n \n+\t/**\n+\t * If set to <code>true</code> (default is <code>false</code>) the <code>$lastn</code> operation will be enabled for\n+\t * indexing Observation resources. This operation involves creating a special set of tables in ElasticSearch for\n+\t * discovering Observation resources. Enabling this setting increases the amount of storage space required, and can\n+\t * slow write operations, but can be very useful for searching for collections of Observations for some applications.\n+\t *\n+\t * @since 5.1.0\n+\t */\n+\tpublic boolean isLastNEnabled() {\n+\t\treturn myLastNEnabled;\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f7e9e1147c50446ff5ca1bb5f7110d1818e5d1f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzAyNTY5OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-docs/src/main/resources/ca/uhn/hapi/fhir/changelog/5_1_0/1899-improve-write-xact-perf-with-tags.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToxMTo0OFrOGfX-1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToxMTo0OFrOGfX-1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1MTk1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            title: \"When submitting a transaction bundle containing a larne number of resources being written, where the\n          \n          \n            \n            title: \"When submitting a transaction bundle containing a large number of resources being written, where the", "url": "https://github.com/hapifhir/hapi-fhir/pull/1899#discussion_r435551956", "createdAt": "2020-06-04T21:11:48Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-docs/src/main/resources/ca/uhn/hapi/fhir/changelog/5_1_0/1899-improve-write-xact-perf-with-tags.yaml", "diffHunk": "@@ -0,0 +1,6 @@\n+---\n+type: perf\n+issue: 1899\n+title: \"When submitting a transaction bundle containing a larne number of resources being written, where the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f7e9e1147c50446ff5ca1bb5f7110d1818e5d1f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzA5NTk1OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/util/MemoryCacheService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNzoxOFrOGfYpRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNzoxOFrOGfYpRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MjgyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * The API is super simplistic, and caches are all 1-minute, max 10000 entries for starters. We could definitelY add nuance to this,\n          \n          \n            \n             * The API is super simplistic, and caches are all 1-minute, max 10000 entries for starters. We could definitely add nuance to this,", "url": "https://github.com/hapifhir/hapi-fhir/pull/1899#discussion_r435562820", "createdAt": "2020-06-04T21:27:18Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/util/MemoryCacheService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package ca.uhn.fhir.jpa.util;\n+\n+import com.github.benmanes.caffeine.cache.Cache;\n+import com.github.benmanes.caffeine.cache.Caffeine;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.EnumMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Function;\n+\n+/**\n+ * This class acts as a central spot for all of the many Caffeine caches we use in HAPI FHIR.\n+ * <p>\n+ * The API is super simplistic, and caches are all 1-minute, max 10000 entries for starters. We could definitelY add nuance to this,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f7e9e1147c50446ff5ca1bb5f7110d1818e5d1f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzA5Njk0OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/util/MemoryCacheService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNzozOVrOGfYp2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNzozOVrOGfYp2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2Mjk3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * which will be much easier now that this is being centralized.. Some logging/monitoring would be good too.\n          \n          \n            \n             * which will be much easier now that this is being centralized. Some logging/monitoring would be good too.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1899#discussion_r435562971", "createdAt": "2020-06-04T21:27:39Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/util/MemoryCacheService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package ca.uhn.fhir.jpa.util;\n+\n+import com.github.benmanes.caffeine.cache.Cache;\n+import com.github.benmanes.caffeine.cache.Caffeine;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.EnumMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Function;\n+\n+/**\n+ * This class acts as a central spot for all of the many Caffeine caches we use in HAPI FHIR.\n+ * <p>\n+ * The API is super simplistic, and caches are all 1-minute, max 10000 entries for starters. We could definitelY add nuance to this,\n+ * which will be much easier now that this is being centralized.. Some logging/monitoring would be good too.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f7e9e1147c50446ff5ca1bb5f7110d1818e5d1f"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1852, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}