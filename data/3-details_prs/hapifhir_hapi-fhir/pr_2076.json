{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2Nzc1Nzc5", "number": 2076, "title": "2069 message retry attributes", "bodyText": "Closes #2069\nSo, Spring Messaging's MessageHeaders class is strictly not deserializable by any of Jackson's default functionality, due to the fact that it is immutable. Jackson requires a default constructor, or some creator, and MessageHeaders just doesn't play nice with that. *\n\nWhat has been done here is replace the usage of MessageHeaders with a homegrown equivalent called HapiMessageHeaders, which performs the same function as MessageHeaders, but is mutable. It also contains helper functions to retrieve these particular headers which are currently relevant to the functionality of Retrying.\nResourceModifiedMessage and its related Json classes have been repackaged, and moved out of the subscription module. The subscription module still uses the same old class, but it now extends a base class instead.\nTest has been added for serialization and deserialization of the new classes.\nBaseJsonMessage now contains member variable of type HapiMessageHeaders", "createdAt": "2020-09-14T17:37:00Z", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076", "merged": true, "mergeCommit": {"oid": "631556041c650e71df7e14cae73ce5ed7b89c4d2"}, "closed": true, "closedAt": "2020-09-18T18:08:37Z", "author": {"login": "tadgh"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHOfHpAH2gAyNDg2Nzc1Nzc5OmRmMjBhMDRiNTM0ODg5NDJmOTIzMWFmNDQ2ZGU4ZGE4MGQ3OWQyZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJhkTAAH2gAyNDg2Nzc1Nzc5OjQ1Nzc1Yzg2NjA0ZmI4MmY1YTkwZTY2ZjkyZDU5MDBhODE4NzVjMWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "df20a04b53488942f9231af446de8da80d79d2f6", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/df20a04b53488942f9231af446de8da80d79d2f6", "committedDate": "2020-09-09T16:07:22Z", "message": "Add test to ensure Messageheaders are serializable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "222923374987cba9118f8e3a176815a6f185c708", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/222923374987cba9118f8e3a176815a6f185c708", "committedDate": "2020-09-09T19:58:41Z", "message": "Move subscription models to legacy, except the ones that are subscription specific"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28a9a53917d324c71910c3dca50c7dfd6afe7270", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/28a9a53917d324c71910c3dca50c7dfd6afe7270", "committedDate": "2020-09-10T20:05:56Z", "message": "Rework to keep several things in subscription"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3ddf59d6fd699d35471ce31968ca66a8a4c4ae5", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/c3ddf59d6fd699d35471ce31968ca66a8a4c4ae5", "committedDate": "2020-09-14T17:02:32Z", "message": "Add HapiMessageHeaders to BaseJsonMessage class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e1f2a662a44944b68677f5b4d4f6ce3dfc72e9d", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/2e1f2a662a44944b68677f5b4d4f6ce3dfc72e9d", "committedDate": "2020-09-14T17:20:01Z", "message": "Move class to top level, add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e324355f26f6c11d4ab96fa575f590dfee289f8", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/3e324355f26f6c11d4ab96fa575f590dfee289f8", "committedDate": "2020-09-14T17:28:36Z", "message": "Add javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a09a8abf3a0f3b24804553bed52b1a80b74a6be", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/9a09a8abf3a0f3b24804553bed52b1a80b74a6be", "committedDate": "2020-09-14T17:41:11Z", "message": "Update todos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/f20c42a8bd92167c322950f98ce2fa29361124f6", "committedDate": "2020-09-14T17:48:44Z", "message": "Remove license claims, remove dead class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDQ0MTk2", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#pullrequestreview-488044196", "createdAt": "2020-09-14T18:40:18Z", "commit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODo0MDoxOFrOHRh6-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxOToyODoxN1rOHRjheA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0MzYxMQ==", "bodyText": "is the upcast really necessary?  So strange...", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488143611", "createdAt": "2020-09-14T18:40:18Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-empi/src/main/java/ca/uhn/fhir/jpa/empi/broker/EmpiMessageHandler.java", "diffHunk": "@@ -95,7 +96,8 @@ public void matchEmpiAndUpdateLinks(ResourceModifiedMessage theMsg) {\n \t\t} finally {\n \t\t\t// Interceptor call: EMPI_AFTER_PERSISTED_RESOURCE_CHECKED\n \t\t\tHookParams params = new HookParams()\n-\t\t\t\t.add(ResourceModifiedMessage.class, theMsg)\n+\t\t\t\t//Janky upcast.\n+\t\t\t\t.add(BaseResourceModifiedMessage.class, (BaseResourceModifiedMessage) theMsg)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NTAwMg==", "bodyText": "The subscription id could be useful to the recipient.  I would leave it in and populate it if possible.", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488145002", "createdAt": "2020-09-14T18:42:49Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-subscription/src/main/java/ca/uhn/fhir/jpa/subscription/match/deliver/message/SubscriptionDeliveringMessageSubscriber.java", "diffHunk": "@@ -63,6 +63,7 @@ protected void deliverPayload(ResourceDeliveryMessage theMsg, CanonicalSubscript\n \t}\n \n \tprotected void doDelivery(ResourceDeliveryMessage theMsg, CanonicalSubscription theSubscription, IChannelProducer theChannelProducer, IBaseResource thePayloadResource) {\n+\t\t//TODO GGG/KHS Question: is this the point at which we can use a BaseResourceModifiedMessage, since technically we no longer have need of a subscriptionId?\n \t\tResourceModifiedMessage payload = new ResourceModifiedMessage(myFhirContext, thePayloadResource, theMsg.getOperationType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE0NTMxNA==", "bodyText": "That TODO should probably be a FIXME", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488145314", "createdAt": "2020-09-14T18:43:23Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-subscription/src/main/java/ca/uhn/fhir/jpa/subscription/match/matcher/subscriber/SubscriptionMatchingSubscriber.java", "diffHunk": "@@ -79,14 +79,14 @@ public SubscriptionMatchingSubscriber() {\n \tpublic void handleMessage(@Nonnull Message<?> theMessage) throws MessagingException {\n \t\tourLog.trace(\"Handling resource modified message: {}\", theMessage);\n \n+\t\t//TODO ADD BACKPORT FOR HANDLING OLD LEGACY SUBSCRIPTIONS HERE\n \t\tif (!(theMessage instanceof ResourceModifiedJsonMessage)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1NDQ0MQ==", "bodyText": "I thought we agreed this would only be in the EMPI class", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488154441", "createdAt": "2020-09-14T18:59:56Z", "author": {"login": "fil512"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/BaseResourceModifiedMessage.java", "diffHunk": "@@ -0,0 +1,184 @@\n+package ca.uhn.fhir.rest.server.messaging;\n+\n+import ca.uhn.fhir.context.FhirContext;\n+import ca.uhn.fhir.model.api.IModelJson;\n+import ca.uhn.fhir.parser.IParser;\n+import ca.uhn.fhir.rest.api.EncodingEnum;\n+import ca.uhn.fhir.rest.api.server.RequestDetails;\n+import ca.uhn.fhir.util.ResourceReferenceInfo;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import org.apache.commons.lang3.builder.ToStringBuilder;\n+import org.hl7.fhir.instance.model.api.IBaseResource;\n+import org.hl7.fhir.instance.model.api.IIdType;\n+\n+import java.util.List;\n+\n+import static org.apache.commons.lang3.StringUtils.isBlank;\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+\n+public class BaseResourceModifiedMessage extends BaseResourceMessage implements IResourceMessage, IModelJson {\n+\n+\t@JsonProperty(\"resourceId\")\n+\tprotected String myId;\n+\t@JsonProperty(\"operationType\")\n+\tprotected OperationTypeEnum myOperationType;\n+\t@JsonProperty(\"payload\")\n+\tprotected String myPayload;\n+\t@JsonProperty(\"payloadId\")\n+\tprotected String myPayloadId;\n+\t@JsonProperty(\"parentTransactionGuid\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2OTU2NQ==", "bodyText": "RETRY_COUNT_KEY", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488169565", "createdAt": "2020-09-14T19:27:42Z", "author": {"login": "fil512"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/json/HapiMessageHeaders.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package ca.uhn.fhir.rest.server.messaging.json;\n+\n+import ca.uhn.fhir.model.api.IModelJson;\n+\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This class is for holding headers for BaseJsonMessages. Any serializable data can be thrown into\n+ * the header map. There are also three special headers, defined by the constants in this class, which are for use\n+ * in message handling retrying. There are also matching helper functions for fetching those special variables; however\n+ * they can also be accessed in standard map fashion with a `get` on the map.\n+ */\n+public class HapiMessageHeaders implements Map<String, Object>, IModelJson {\n+    public static String RETRY_COUNT_HEADER = \"retryCount\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2OTY5OA==", "bodyText": "FIRST_FAILURE_TIMESTAMP_KEY", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488169698", "createdAt": "2020-09-14T19:27:58Z", "author": {"login": "fil512"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/json/HapiMessageHeaders.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package ca.uhn.fhir.rest.server.messaging.json;\n+\n+import ca.uhn.fhir.model.api.IModelJson;\n+\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This class is for holding headers for BaseJsonMessages. Any serializable data can be thrown into\n+ * the header map. There are also three special headers, defined by the constants in this class, which are for use\n+ * in message handling retrying. There are also matching helper functions for fetching those special variables; however\n+ * they can also be accessed in standard map fashion with a `get` on the map.\n+ */\n+public class HapiMessageHeaders implements Map<String, Object>, IModelJson {\n+    public static String RETRY_COUNT_HEADER = \"retryCount\";\n+    public static String FIRST_FAILURE_HEADER = \"firstFailure\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE2OTg0OA==", "bodyText": "LAST_FAILURE_TIMESTAMP_KEY", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#discussion_r488169848", "createdAt": "2020-09-14T19:28:17Z", "author": {"login": "fil512"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/messaging/json/HapiMessageHeaders.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package ca.uhn.fhir.rest.server.messaging.json;\n+\n+import ca.uhn.fhir.model.api.IModelJson;\n+\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This class is for holding headers for BaseJsonMessages. Any serializable data can be thrown into\n+ * the header map. There are also three special headers, defined by the constants in this class, which are for use\n+ * in message handling retrying. There are also matching helper functions for fetching those special variables; however\n+ * they can also be accessed in standard map fashion with a `get` on the map.\n+ */\n+public class HapiMessageHeaders implements Map<String, Object>, IModelJson {\n+    public static String RETRY_COUNT_HEADER = \"retryCount\";\n+    public static String FIRST_FAILURE_HEADER = \"firstFailure\";\n+    public static String LAST_FAILURE_HEADER = \"lastFailure\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20c42a8bd92167c322950f98ce2fa29361124f6"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e0ef035e935cbd47ba843616d9977ebfe0cddd5", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/6e0ef035e935cbd47ba843616d9977ebfe0cddd5", "committedDate": "2020-09-14T19:35:58Z", "message": "Rename constants. Remove dead comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2871b721a2a032b8ff56843bcd00d10e1f91b41b", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/2871b721a2a032b8ff56843bcd00d10e1f91b41b", "committedDate": "2020-09-14T20:06:14Z", "message": "Merge branch 'master' into 2069-message-retry-attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9fb849d497226c331c9b6dfdc7a2f0af32e49cf", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/a9fb849d497226c331c9b6dfdc7a2f0af32e49cf", "committedDate": "2020-09-14T20:44:50Z", "message": "Moved more into parent class, added javadocs for transactionId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5744f7035ff9ad34b18f97869a62a0c629efdebe", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/5744f7035ff9ad34b18f97869a62a0c629efdebe", "committedDate": "2020-09-14T20:54:09Z", "message": "Rename to match names across classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NjY1ODEy", "url": "https://github.com/hapifhir/hapi-fhir/pull/2076#pullrequestreview-488665812", "createdAt": "2020-09-15T13:11:56Z", "commit": {"oid": "5744f7035ff9ad34b18f97869a62a0c629efdebe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea64bea1b03fe4823cb45bcef30eb837af93b00e", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/ea64bea1b03fe4823cb45bcef30eb837af93b00e", "committedDate": "2020-09-15T19:27:21Z", "message": "Refactor to use concrete class instead of parent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ca1a42d378cec4fee0b0b588ab2e33bd91f8407", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/3ca1a42d378cec4fee0b0b588ab2e33bd91f8407", "committedDate": "2020-09-15T19:37:24Z", "message": "Swap EMPI channel consumer to use Subscription ResourceModifiedMessages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74bba9dbcc9219fb4de00b50fa6ed4ca790524e6", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/74bba9dbcc9219fb4de00b50fa6ed4ca790524e6", "committedDate": "2020-09-15T22:57:55Z", "message": "Rename to ResourceOperationMessage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdc195bd0b0e0327921b52cc384c59778af24958", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/cdc195bd0b0e0327921b52cc384c59778af24958", "committedDate": "2020-09-16T17:13:43Z", "message": "Change to use long type for failure timestamps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666113696be02f0584753d6e3d064b6e302ee051", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/666113696be02f0584753d6e3d064b6e302ee051", "committedDate": "2020-09-16T18:06:54Z", "message": "add attributes to HapiHeaders. Turns out deserialization makes a best guess, and doesnt respect types in Map<String,Object>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c5051a5d924433ba8afbf6c0c41630a0019ef44", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/4c5051a5d924433ba8afbf6c0c41630a0019ef44", "committedDate": "2020-09-16T19:05:44Z", "message": "More refactor for custom headers and top level attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "558f7a5ccf02d534e864f98679300e71f58f9d97", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/558f7a5ccf02d534e864f98679300e71f58f9d97", "committedDate": "2020-09-16T19:21:49Z", "message": "Minor cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d3a97a46f639e853e0f77066be7111798c8e357", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/9d3a97a46f639e853e0f77066be7111798c8e357", "committedDate": "2020-09-16T19:24:09Z", "message": "Default for int"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddfac72e8d83b8f3c60abf084e93cc9b06deae0b", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/ddfac72e8d83b8f3c60abf084e93cc9b06deae0b", "committedDate": "2020-09-16T19:27:03Z", "message": "Clean spacing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45775c86604fb82f5a90e66f92d5900a81875c1e", "author": {"user": {"login": "tadgh", "name": "Tadgh"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/45775c86604fb82f5a90e66f92d5900a81875c1e", "committedDate": "2020-09-16T19:29:04Z", "message": "Reuse constant"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3850, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}