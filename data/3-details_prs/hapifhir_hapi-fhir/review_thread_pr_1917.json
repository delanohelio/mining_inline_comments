{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzMxOTI3", "number": 1917, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMToyOTo0MlrOEGhiUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjowMToyMVrOEGiDNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjc2MzcwOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermLoaderSvcImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMToyOTo0MlrOGlYFpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMToyOTo0MlrOGlYFpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NTE1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tuploadProperties.getProperty(LOINC_PART_LINK_FILE_PRIMARY.getCode(), LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode()),\n          \n          \n            \n            \t\t\t\tuploadProperties.getProperty(LOINC_PART_LINK_FILE_PRIMARY.getCode(), LOINC_PART_LINK_FILE_PRIMARY_DEFAULT.getCode()),", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441845158", "createdAt": "2020-06-17T21:29:42Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermLoaderSvcImpl.java", "diffHunk": "@@ -119,7 +114,8 @@ public UploadStatistics loadLoinc(List<FileDescriptor> theFiles, RequestDetails\n \t\t\t\tuploadProperties.getProperty(LOINC_IEEE_MEDICAL_DEVICE_CODE_MAPPING_TABLE_FILE.getCode(), LOINC_IEEE_MEDICAL_DEVICE_CODE_MAPPING_TABLE_FILE_DEFAULT.getCode()),\n \t\t\t\tuploadProperties.getProperty(LOINC_IMAGING_DOCUMENT_CODES_FILE.getCode(), LOINC_IMAGING_DOCUMENT_CODES_FILE_DEFAULT.getCode()),\n \t\t\t\tuploadProperties.getProperty(LOINC_PART_FILE.getCode(), LOINC_PART_FILE_DEFAULT.getCode()),\n-\t\t\t\tuploadProperties.getProperty(LOINC_PART_LINK_FILE.getCode(), LOINC_PART_LINK_FILE_DEFAULT.getCode()),\n+\t\t\t\tuploadProperties.getProperty(LOINC_PART_LINK_FILE_PRIMARY.getCode(), LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjc2NTk0OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermLoaderSvcImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMDoxMFrOGlYG1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMDoxMFrOGlYG1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NTQ2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\titerateOverZipFile(theDescriptors, theUploadProperties.getProperty(LOINC_PART_LINK_FILE_PRIMARY.getCode(), LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode()), handler, ',', QuoteMode.NON_NUMERIC, false);\n          \n          \n            \n            \t\titerateOverZipFile(theDescriptors, theUploadProperties.getProperty(LOINC_PART_LINK_FILE_PRIMARY.getCode(), LOINC_PART_LINK_FILE_PRIMARY_DEFAULT.getCode()), handler, ',', QuoteMode.NON_NUMERIC, false);", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441845461", "createdAt": "2020-06-17T21:30:10Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/TermLoaderSvcImpl.java", "diffHunk": "@@ -469,6 +468,11 @@ UploadStatistics processLoincFiles(LoadedFileDescriptors theDescriptors, Request\n \t\thandler = new LoincParentGroupFileHandler(code2concept, valueSets, conceptMaps, theUploadProperties);\n \t\titerateOverZipFile(theDescriptors, theUploadProperties.getProperty(LOINC_PARENT_GROUP_FILE.getCode(), LOINC_PARENT_GROUP_FILE_DEFAULT.getCode()), handler, ',', QuoteMode.NON_NUMERIC, false);\n \n+\t\t// Part link\n+\t\thandler = new LoincPartLinkHandler(codeSystemVersion, code2concept, propertyNamesToTypes);\n+\t\titerateOverZipFile(theDescriptors, theUploadProperties.getProperty(LOINC_PART_LINK_FILE_PRIMARY.getCode(), LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode()), handler, ',', QuoteMode.NON_NUMERIC, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjc2NzIyOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincUploadPropertiesEnum.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMDozN1rOGlYHog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMDozN1rOGlYHog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NTY2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tLOINC_PART_LINK_FILE_PRTIMARY_DEFAULT(\"AccessoryFiles/PartFile/LoincPartLink_Primary.csv\"),\n          \n          \n            \n            \tLOINC_PART_LINK_FILE_PRIMARY_DEFAULT(\"AccessoryFiles/PartFile/LoincPartLink_Primary.csv\"),", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441845666", "createdAt": "2020-06-17T21:30:37Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincUploadPropertiesEnum.java", "diffHunk": "@@ -67,9 +67,13 @@\n \t// Part\n \tLOINC_PART_FILE(\"loinc.part.file\"),\n \tLOINC_PART_FILE_DEFAULT(\"AccessoryFiles/PartFile/Part.csv\"),\n+\n \t// Part link\n-\tLOINC_PART_LINK_FILE(\"loinc.part.link.file\"),\n-\tLOINC_PART_LINK_FILE_DEFAULT(\"AccessoryFiles/PartFile/LoincPartLink.csv\"),\n+\tLOINC_PART_LINK_FILE_PRIMARY(\"loinc.part.link.primary.file\"),\n+\tLOINC_PART_LINK_FILE_PRTIMARY_DEFAULT(\"AccessoryFiles/PartFile/LoincPartLink_Primary.csv\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjc2ODA1OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/provider/r4/TerminologyUploaderProviderR4Test.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMDo1NlrOGlYILQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMDo1NlrOGlYILQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NTgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\taddFile(zos, LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode());\n          \n          \n            \n            \t\taddFile(zos, LOINC_PART_LINK_FILE_PRIMARY_DEFAULT.getCode());", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441845805", "createdAt": "2020-06-17T21:30:56Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/provider/r4/TerminologyUploaderProviderR4Test.java", "diffHunk": "@@ -492,7 +492,8 @@ private static void addFile(ZipOutputStream theZos, String theFileName) throws I\n \t\taddFile(zos, LOINC_GROUP_FILE_DEFAULT.getCode());\n \t\taddFile(zos, LOINC_GROUP_TERMS_FILE_DEFAULT.getCode());\n \t\taddFile(zos, LOINC_PARENT_GROUP_FILE_DEFAULT.getCode());\n-\t\taddFile(zos, LOINC_PART_LINK_FILE_DEFAULT.getCode());\n+\t\taddFile(zos, LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjc2OTAzOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/term/TerminologyLoaderSvcLoincTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMToxNVrOGlYIvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozMToxNVrOGlYIvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NTk0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\ttheFiles.addFileZip(\"/loinc/\", LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode());\n          \n          \n            \n            \t\ttheFiles.addFileZip(\"/loinc/\", LOINC_PART_LINK_FILE_PRIMARY_DEFAULT.getCode());", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441845949", "createdAt": "2020-06-17T21:31:15Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/term/TerminologyLoaderSvcLoincTest.java", "diffHunk": "@@ -379,7 +379,8 @@ public static void addLoincMandatoryFilesToZip(ZipCollectionBuilder theFiles) th\n \t\ttheFiles.addFileZip(\"/loinc/\", LOINC_ANSWERLIST_LINK_FILE_DEFAULT.getCode());\n \t\ttheFiles.addFileZip(\"/loinc/\", LOINC_ANSWERLIST_LINK_DUPLICATE_FILE_DEFAULT.getCode());\n \t\ttheFiles.addFileZip(\"/loinc/\", LOINC_PART_FILE_DEFAULT.getCode());\n-\t\ttheFiles.addFileZip(\"/loinc/\", LOINC_PART_LINK_FILE_DEFAULT.getCode());\n+\t\ttheFiles.addFileZip(\"/loinc/\", LOINC_PART_LINK_FILE_PRTIMARY_DEFAULT.getCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjc4NjU1OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTozNzo1NFrOGlYUEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODoxNDoyNFrOGl6zTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0ODg1MA==", "bodyText": "FIXME needs to be addressed.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441848850", "createdAt": "2020-06-17T21:37:54Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincHandler.java", "diffHunk": "@@ -86,44 +86,48 @@ public void accept(CSVRecord theRecord) {\n \t\t\t\t\t\t\tconcept.addPropertyString(nextPropertyName, nextPropertyValue);\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase CODING:\n-\t\t\t\t\t\t\t// TODO: handle \"Ser/Plas^Donor\"\n-\t\t\t\t\t\t\tString propertyValue = nextPropertyValue;\n-\t\t\t\t\t\t\tif (nextPropertyName.equals(\"COMPONENT\")) {\n-\t\t\t\t\t\t\t\tif (propertyValue.contains(\"^\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"^\"));\n-\t\t\t\t\t\t\t\t} else if (propertyValue.contains(\"/\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"/\"));\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tPartTypeAndPartName key = new PartTypeAndPartName(nextPropertyName, propertyValue);\n-\t\t\t\t\t\t\tString partNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"TIME_ASPCT\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"TIME\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"METHOD_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"METHOD\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SCALE_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"SCALE\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SYSTEM\") && nextPropertyValue.startsWith(\"^\")) {\n-\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (isNotBlank(partNumber)) {\n-\t\t\t\t\t\t\t\tconcept.addPropertyCoding(nextPropertyName, ITermLoaderSvc.LOINC_URI, partNumber, nextPropertyValue);\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\tString msg = \"Unable to find part code with TYPE[\" + key.getPartType() + \"] and NAME[\" + nextPropertyValue + \"] (using name \" + propertyValue + \")\";\n-\t\t\t\t\t\t\t\tourLog.warn(msg);\n-//\t\t\t\t\t\t\t\tthrow new InternalErrorException(msg);\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t// These are handles by the LOINC PartLink file\n \t\t\t\t\t\t\tbreak;\n+\n+\t\t\t\t\t\t\t// FIXME: remove", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMzkwMw==", "bodyText": "Oops- Done. Yup, will remove", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r442413903", "createdAt": "2020-06-18T18:14:24Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincHandler.java", "diffHunk": "@@ -86,44 +86,48 @@ public void accept(CSVRecord theRecord) {\n \t\t\t\t\t\t\tconcept.addPropertyString(nextPropertyName, nextPropertyValue);\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase CODING:\n-\t\t\t\t\t\t\t// TODO: handle \"Ser/Plas^Donor\"\n-\t\t\t\t\t\t\tString propertyValue = nextPropertyValue;\n-\t\t\t\t\t\t\tif (nextPropertyName.equals(\"COMPONENT\")) {\n-\t\t\t\t\t\t\t\tif (propertyValue.contains(\"^\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"^\"));\n-\t\t\t\t\t\t\t\t} else if (propertyValue.contains(\"/\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"/\"));\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tPartTypeAndPartName key = new PartTypeAndPartName(nextPropertyName, propertyValue);\n-\t\t\t\t\t\t\tString partNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"TIME_ASPCT\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"TIME\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"METHOD_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"METHOD\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SCALE_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"SCALE\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SYSTEM\") && nextPropertyValue.startsWith(\"^\")) {\n-\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (isNotBlank(partNumber)) {\n-\t\t\t\t\t\t\t\tconcept.addPropertyCoding(nextPropertyName, ITermLoaderSvc.LOINC_URI, partNumber, nextPropertyValue);\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\tString msg = \"Unable to find part code with TYPE[\" + key.getPartType() + \"] and NAME[\" + nextPropertyValue + \"] (using name \" + propertyValue + \")\";\n-\t\t\t\t\t\t\t\tourLog.warn(msg);\n-//\t\t\t\t\t\t\t\tthrow new InternalErrorException(msg);\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t// These are handles by the LOINC PartLink file\n \t\t\t\t\t\t\tbreak;\n+\n+\t\t\t\t\t\t\t// FIXME: remove", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0ODg1MA=="}, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjgzODE5OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo1NzozMVrOGlY0Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDowMjo1MFrOGl-WVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NzA3NQ==", "bodyText": "I think you might be able to remove the myPartTypeAndPartNameToPartNumber property as this commented block of code appears to be the only thing referencing this property.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441857075", "createdAt": "2020-06-17T21:57:31Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincHandler.java", "diffHunk": "@@ -86,44 +86,48 @@ public void accept(CSVRecord theRecord) {\n \t\t\t\t\t\t\tconcept.addPropertyString(nextPropertyName, nextPropertyValue);\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase CODING:\n-\t\t\t\t\t\t\t// TODO: handle \"Ser/Plas^Donor\"\n-\t\t\t\t\t\t\tString propertyValue = nextPropertyValue;\n-\t\t\t\t\t\t\tif (nextPropertyName.equals(\"COMPONENT\")) {\n-\t\t\t\t\t\t\t\tif (propertyValue.contains(\"^\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"^\"));\n-\t\t\t\t\t\t\t\t} else if (propertyValue.contains(\"/\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"/\"));\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tPartTypeAndPartName key = new PartTypeAndPartName(nextPropertyName, propertyValue);\n-\t\t\t\t\t\t\tString partNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"TIME_ASPCT\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"TIME\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"METHOD_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"METHOD\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SCALE_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"SCALE\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SYSTEM\") && nextPropertyValue.startsWith(\"^\")) {\n-\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (isNotBlank(partNumber)) {\n-\t\t\t\t\t\t\t\tconcept.addPropertyCoding(nextPropertyName, ITermLoaderSvc.LOINC_URI, partNumber, nextPropertyValue);\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\tString msg = \"Unable to find part code with TYPE[\" + key.getPartType() + \"] and NAME[\" + nextPropertyValue + \"] (using name \" + propertyValue + \")\";\n-\t\t\t\t\t\t\t\tourLog.warn(msg);\n-//\t\t\t\t\t\t\t\tthrow new InternalErrorException(msg);\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t// These are handles by the LOINC PartLink file\n \t\t\t\t\t\t\tbreak;\n+\n+\t\t\t\t\t\t\t// FIXME: remove\n+//\t\t\t\t\t\t\t// TODO: handle \"Ser/Plas^Donor\"\n+//\t\t\t\t\t\t\tString propertyValue = nextPropertyValue;\n+//\t\t\t\t\t\t\tif (nextPropertyName.equals(\"COMPONENT\")) {\n+//\t\t\t\t\t\t\t\tif (propertyValue.contains(\"^\")) {\n+//\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"^\"));\n+//\t\t\t\t\t\t\t\t} else if (propertyValue.contains(\"/\")) {\n+//\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"/\"));\n+//\t\t\t\t\t\t\t\t}\n+//\t\t\t\t\t\t\t}\n+//\n+//\t\t\t\t\t\t\tPartTypeAndPartName key = new PartTypeAndPartName(nextPropertyName, propertyValue);\n+//\t\t\t\t\t\t\tString partNumber = myPartTypeAndPartNameToPartNumber.get(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ3MjAyMw==", "bodyText": "Oops- Done. Yup, will remove", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r442472023", "createdAt": "2020-06-18T20:02:50Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/term/loinc/LoincHandler.java", "diffHunk": "@@ -86,44 +86,48 @@ public void accept(CSVRecord theRecord) {\n \t\t\t\t\t\t\tconcept.addPropertyString(nextPropertyName, nextPropertyValue);\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase CODING:\n-\t\t\t\t\t\t\t// TODO: handle \"Ser/Plas^Donor\"\n-\t\t\t\t\t\t\tString propertyValue = nextPropertyValue;\n-\t\t\t\t\t\t\tif (nextPropertyName.equals(\"COMPONENT\")) {\n-\t\t\t\t\t\t\t\tif (propertyValue.contains(\"^\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"^\"));\n-\t\t\t\t\t\t\t\t} else if (propertyValue.contains(\"/\")) {\n-\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"/\"));\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tPartTypeAndPartName key = new PartTypeAndPartName(nextPropertyName, propertyValue);\n-\t\t\t\t\t\t\tString partNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"TIME_ASPCT\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"TIME\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"METHOD_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"METHOD\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SCALE_TYP\")) {\n-\t\t\t\t\t\t\t\tkey = new PartTypeAndPartName(\"SCALE\", nextPropertyValue);\n-\t\t\t\t\t\t\t\tpartNumber = myPartTypeAndPartNameToPartNumber.get(key);\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (partNumber == null && nextPropertyName.equals(\"SYSTEM\") && nextPropertyValue.startsWith(\"^\")) {\n-\t\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t\t}\n-\n-\t\t\t\t\t\t\tif (isNotBlank(partNumber)) {\n-\t\t\t\t\t\t\t\tconcept.addPropertyCoding(nextPropertyName, ITermLoaderSvc.LOINC_URI, partNumber, nextPropertyValue);\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\tString msg = \"Unable to find part code with TYPE[\" + key.getPartType() + \"] and NAME[\" + nextPropertyValue + \"] (using name \" + propertyValue + \")\";\n-\t\t\t\t\t\t\t\tourLog.warn(msg);\n-//\t\t\t\t\t\t\t\tthrow new InternalErrorException(msg);\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t// These are handles by the LOINC PartLink file\n \t\t\t\t\t\t\tbreak;\n+\n+\t\t\t\t\t\t\t// FIXME: remove\n+//\t\t\t\t\t\t\t// TODO: handle \"Ser/Plas^Donor\"\n+//\t\t\t\t\t\t\tString propertyValue = nextPropertyValue;\n+//\t\t\t\t\t\t\tif (nextPropertyName.equals(\"COMPONENT\")) {\n+//\t\t\t\t\t\t\t\tif (propertyValue.contains(\"^\")) {\n+//\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"^\"));\n+//\t\t\t\t\t\t\t\t} else if (propertyValue.contains(\"/\")) {\n+//\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.substring(0, propertyValue.indexOf(\"/\"));\n+//\t\t\t\t\t\t\t\t}\n+//\t\t\t\t\t\t\t}\n+//\n+//\t\t\t\t\t\t\tPartTypeAndPartName key = new PartTypeAndPartName(nextPropertyName, propertyValue);\n+//\t\t\t\t\t\t\tString partNumber = myPartTypeAndPartNameToPartNumber.get(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NzA3NQ=="}, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Mjg0Nzg5OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/term/TerminologyLoaderSvcLoincTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjowMToyMVrOGlY6UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODoxNDozMFrOGl6zfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODY0MA==", "bodyText": "I am confused here - the three new asserts here appear to simply duplicate the previous three assert statements. Were these supposed to be checking something else?", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r441858640", "createdAt": "2020-06-17T22:01:21Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/term/TerminologyLoaderSvcLoincTest.java", "diffHunk": "@@ -413,6 +414,9 @@ public void testLoadLoincMultiaxialHierarchySupport() throws Exception {\n \t\tassertEquals(ITermLoaderSvc.LOINC_URI, code.getCodingProperties(\"PROPERTY\").get(0).getSystem());\n \t\tassertEquals(\"LP6802-5\", code.getCodingProperties(\"PROPERTY\").get(0).getCode());\n \t\tassertEquals(\"Elpot\", code.getCodingProperties(\"PROPERTY\").get(0).getDisplay());\n+\t\tassertEquals(ITermLoaderSvc.LOINC_URI, code.getCodingProperties(\"PROPERTY\").get(0).getSystem());\n+\t\tassertEquals(\"LP6802-5\", code.getCodingProperties(\"PROPERTY\").get(0).getCode());\n+\t\tassertEquals(\"Elpot\", code.getCodingProperties(\"PROPERTY\").get(0).getDisplay());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMzk1MQ==", "bodyText": "Removed", "url": "https://github.com/hapifhir/hapi-fhir/pull/1917#discussion_r442413951", "createdAt": "2020-06-18T18:14:30Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/term/TerminologyLoaderSvcLoincTest.java", "diffHunk": "@@ -413,6 +414,9 @@ public void testLoadLoincMultiaxialHierarchySupport() throws Exception {\n \t\tassertEquals(ITermLoaderSvc.LOINC_URI, code.getCodingProperties(\"PROPERTY\").get(0).getSystem());\n \t\tassertEquals(\"LP6802-5\", code.getCodingProperties(\"PROPERTY\").get(0).getCode());\n \t\tassertEquals(\"Elpot\", code.getCodingProperties(\"PROPERTY\").get(0).getDisplay());\n+\t\tassertEquals(ITermLoaderSvc.LOINC_URI, code.getCodingProperties(\"PROPERTY\").get(0).getSystem());\n+\t\tassertEquals(\"LP6802-5\", code.getCodingProperties(\"PROPERTY\").get(0).getCode());\n+\t\tassertEquals(\"Elpot\", code.getCodingProperties(\"PROPERTY\").get(0).getDisplay());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1ODY0MA=="}, "originalCommit": {"oid": "49f2a1bebaf4c196f3e872afb69d99963ac74a65"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1867, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}