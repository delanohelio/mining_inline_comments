{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MDk2NzIx", "number": 2156, "title": "Fixed score calculation to use selected bits in the vector. Addresses\u2026", "bodyText": "Please review, addresses #2155", "createdAt": "2020-11-02T14:28:31Z", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156", "merged": true, "mergeCommit": {"oid": "382c0f2119c14c45ad0441b969fd7772cc6207d2"}, "closed": true, "closedAt": "2020-11-03T19:40:08Z", "author": {"login": "nvg-smile"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYlWD0AH2gAyNTE0MDk2NzIxOjI5NmIxOTNiYjVlZWM0NGQyMDhmZmIwNmNlMjE4MDgxOWYyZjMzODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdY9NZ0AH2gAyNTE0MDk2NzIxOjRjMDEwMjU5MzRmZjE2NzVjMDJkZjg0ODc2M2FjZTQ1ZjkzNDA2Mjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "296b193bb5eec44d208ffb06ce2180819f2f3380", "author": {"user": {"login": "nvg-smile", "name": "Nick Goupinets"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/296b193bb5eec44d208ffb06ce2180819f2f3380", "committedDate": "2020-11-02T14:22:00Z", "message": "Fixed score calculation to use selected bits in the vector. Addresses #2155"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNjc4Mjc0", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#pullrequestreview-521678274", "createdAt": "2020-11-02T14:30:01Z", "commit": {"oid": "296b193bb5eec44d208ffb06ce2180819f2f3380"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b", "author": {"user": {"login": "nvg-smile", "name": "Nick Goupinets"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/52e8761701c1c02e9a7b52ba731c212afb2d4c3b", "committedDate": "2020-11-02T22:15:39Z", "message": "Added rule count for proper scoring implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNTQ5NzE5", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#pullrequestreview-522549719", "createdAt": "2020-11-03T14:29:10Z", "commit": {"oid": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDoyOToxMFrOHsxTdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDozNDo1M1rOHsxlXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwNzE5MA==", "bodyText": "Add a getter for myEmpiRuleCount", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516707190", "createdAt": "2020-11-03T14:29:10Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java", "diffHunk": "@@ -99,6 +105,19 @@ public boolean isEidMatch() {\n \t\treturn myEidMatch;\n \t}\n \n+\t/**\n+\t * Sets the number of EMPI rules checked for this match outcome\n+\t *\n+\t * @param theEmpiRuleCount\n+\t * \tNumber of EMPI rules that were checked for this match outcome\n+\t * @return\n+\t * \tReturns this instance\n+\t */\n+\tpublic EmpiMatchOutcome setEmpiRuleCount(int theEmpiRuleCount) {\n+\t\tmyEmpiRuleCount = theEmpiRuleCount;\n+\t\treturn this;\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODQzMQ==", "bodyText": "This should be impossible now, no? e.g. 5 rules, all match, 5/5 == 1.0. I appreciate the gate, but I'm worried it may be masking potential insidious bugs. A score of >1 should be an error yeah?", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516708431", "createdAt": "2020-11-03T14:30:42Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java", "diffHunk": "@@ -112,15 +131,15 @@ public EmpiMatchOutcome setEidMatch(boolean theEidMatch) {\n \t * \tReturns the normalized score\n \t */\n \tpublic Double getNormalizedScore() {\n-\t\tif (vector == 0) {\n+\t\tif (myEmpiRuleCount == 0) {\n \t\t\treturn 0.0;\n-\t\t} else if (score > vector) {\n-\t\t\treturn 1.0;\n \t\t}\n \n-\t\tdouble retVal = score / vector;\n+\t\tdouble retVal = score / myEmpiRuleCount;\n \t\tif (retVal < 0) {\n \t\t\tretVal = 0.0;\n+\t\t} else if (retVal > 1.0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcxMTc3NQ==", "bodyText": "Or at least normalized down with a big warning log if we don't want to call it an error", "url": "https://github.com/hapifhir/hapi-fhir/pull/2156#discussion_r516711775", "createdAt": "2020-11-03T14:34:53Z", "author": {"login": "tadgh"}, "path": "hapi-fhir-server-empi/src/main/java/ca/uhn/fhir/empi/api/EmpiMatchOutcome.java", "diffHunk": "@@ -112,15 +131,15 @@ public EmpiMatchOutcome setEidMatch(boolean theEidMatch) {\n \t * \tReturns the normalized score\n \t */\n \tpublic Double getNormalizedScore() {\n-\t\tif (vector == 0) {\n+\t\tif (myEmpiRuleCount == 0) {\n \t\t\treturn 0.0;\n-\t\t} else if (score > vector) {\n-\t\t\treturn 1.0;\n \t\t}\n \n-\t\tdouble retVal = score / vector;\n+\t\tdouble retVal = score / myEmpiRuleCount;\n \t\tif (retVal < 0) {\n \t\t\tretVal = 0.0;\n+\t\t} else if (retVal > 1.0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODQzMQ=="}, "originalCommit": {"oid": "52e8761701c1c02e9a7b52ba731c212afb2d4c3b"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c01025934ff1675c02df848763ace45f9340628", "author": {"user": {"login": "nvg-smile", "name": "Nick Goupinets"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/4c01025934ff1675c02df848763ace45f9340628", "committedDate": "2020-11-03T18:10:16Z", "message": "Updated based on code review feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3902, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}