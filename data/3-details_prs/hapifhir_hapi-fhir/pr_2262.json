{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NDU3NDQ1", "number": 2262, "title": "Fix order by clause in search query for MySQL, MSSQL and MariaDB", "bodyText": "The SQL NULLS LAST and NULLS FIRST options for ORDER BY clauses are not supported by MySQL, MSSQL or MariaDB. Added special logic to the SearchQueryBuilder class methods to accommodate these three DBs.", "createdAt": "2020-12-24T20:18:37Z", "url": "https://github.com/hapifhir/hapi-fhir/pull/2262", "merged": true, "mergeCommit": {"oid": "14fc8f259882a0021871712cbde81f5015a8e67a"}, "closed": true, "closedAt": "2021-01-05T02:19:04Z", "author": {"login": "IanMMarshall"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpYaVcgH2gAyNTQ1NDU3NDQ1OjYzZTBjOTAwMjNhODE1OTRkYjdlYzlmMjQ5MThjOWQ5YThjMGNkMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABds_gLQAH2gAyNTQ1NDU3NDQ1OjFmMGVhMjFjZGVkZjNlZTE3ZDk5NTAxNmU4YzQzNjMzZWU5ZDcxYzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "63e0c90023a81594db7ec9f24918c9d9a8c0cd05", "author": {"user": null}, "url": "https://github.com/hapifhir/hapi-fhir/commit/63e0c90023a81594db7ec9f24918c9d9a8c0cd05", "committedDate": "2020-12-24T18:54:37Z", "message": "Change order by clause in search query to support MySQL, MSSQL and MariaDB."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb59da3f0353c86388feab04fe94909f08023557", "author": {"user": null}, "url": "https://github.com/hapifhir/hapi-fhir/commit/eb59da3f0353c86388feab04fe94909f08023557", "committedDate": "2020-12-24T20:23:50Z", "message": "Added changelog."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a2dfe86fd66df04d79186275f1ef0884d52f21b", "author": {"user": null}, "url": "https://github.com/hapifhir/hapi-fhir/commit/8a2dfe86fd66df04d79186275f1ef0884d52f21b", "committedDate": "2021-01-04T14:00:21Z", "message": "Merge remote-tracking branch 'origin/master' into 2260-fix-sorting-for-mysql"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMTI2NjY5", "url": "https://github.com/hapifhir/hapi-fhir/pull/2262#pullrequestreview-561126669", "createdAt": "2021-01-04T15:39:18Z", "commit": {"oid": "8a2dfe86fd66df04d79186275f1ef0884d52f21b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTozOToxOFrOIN2Stw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTo0ODowMVrOIN2nwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM5MTkyNw==", "bodyText": "It's probably better to avoid the version specific dialects..\nI think you can get away with just checking whether the dialect is instanceof MySQLDialect (which covers all versions of MySQL as well as MariaDB) or SQLServerDialect (which covers all versions of SQL Server).", "url": "https://github.com/hapifhir/hapi-fhir/pull/2262#discussion_r551391927", "createdAt": "2021-01-04T15:39:18Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/sql/SearchQueryBuilder.java", "diffHunk": "@@ -115,6 +119,16 @@ private SearchQueryBuilder(FhirContext theFhirContext, ModelConfig theModelConfi\n \t\tmySqlBuilderFactory = theSqlBuilderFactory;\n \t\tmyCountQuery = theCountQuery;\n \t\tmyDialect = theDialect;\n+\t\tif (myDialect instanceof org.hibernate.dialect.MySQL57Dialect){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2dfe86fd66df04d79186275f1ef0884d52f21b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM5NzMxMw==", "bodyText": "I'm worried about the performance implications of adding this coalesce here when operating over large datasets... I think my recommendation would be to just add the sort without any null ordering on DBs that don't support it.\nFYI it looks like hibernate has an interesting alternate approach for accomplishing the same thing: https://github.com/hibernate/hibernate-orm/blob/master/hibernate-core/src/main/java/org/hibernate/dialect/MySQLDialect.java#L467 -- But I suspect the most performance sensitive thing is to just not use null ordering.", "url": "https://github.com/hapifhir/hapi-fhir/pull/2262#discussion_r551397313", "createdAt": "2021-01-04T15:48:01Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/sql/SearchQueryBuilder.java", "diffHunk": "@@ -550,12 +564,87 @@ public boolean haveAtLeastOnePredicate() {\n \t\treturn myHaveAtLeastOnePredicate;\n \t}\n \n-\tpublic void addSort(DbColumn theColumnValueNormalized, boolean theAscending) {\n+\tpublic void addSortString(DbColumn theColumnValueNormalized, boolean theAscending) {\n+\t\tOrderObject.NullOrder nullOrder = OrderObject.NullOrder.LAST;\n+\t\taddSortString(theColumnValueNormalized, theAscending, nullOrder);\n+\t}\n+\n+\tpublic void addSortNumeric(DbColumn theColumnValueNormalized, boolean theAscending) {\n \t\tOrderObject.NullOrder nullOrder = OrderObject.NullOrder.LAST;\n-\t\taddSort(theColumnValueNormalized, theAscending, nullOrder);\n+\t\taddSortNumeric(theColumnValueNormalized, theAscending, nullOrder);\n+\t}\n+\n+\tpublic void addSortDate(DbColumn theColumnValueNormalized, boolean theAscending) {\n+\t\tOrderObject.NullOrder nullOrder = OrderObject.NullOrder.LAST;\n+\t\taddSortDate(theColumnValueNormalized, theAscending, nullOrder);\n+\t}\n+\n+\tpublic void addSortString(DbColumn theTheColumnValueNormalized, boolean theTheAscending, OrderObject.NullOrder theNullOrder) {\n+\t\tif ((dialectIsMariaDb || dialectIsMySql || dialectIsMsSql)) {\n+\t\t\t// MariaDB, MySQL and MSSQL do not support \"NULLS FIRST\" and \"NULLS LAST\" syntax.\n+\t\t\t// Null values are always treated as less than non-null values.\n+\t\t\t// As such special handling is required here.\n+\t\t\tString direction = theTheAscending ? \" ASC\" : \" DESC\";\n+\t\t\tString sortColumnName = theTheColumnValueNormalized.getTable().getAlias() + \".\" + theTheColumnValueNormalized.getName();\n+\t\t\tif ((theTheAscending && theNullOrder == OrderObject.NullOrder.LAST)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2dfe86fd66df04d79186275f1ef0884d52f21b"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac47dbbf6b31a9d32db0f5371a7a5a294c77d78", "author": {"user": null}, "url": "https://github.com/hapifhir/hapi-fhir/commit/bac47dbbf6b31a9d32db0f5371a7a5a294c77d78", "committedDate": "2021-01-05T00:06:39Z", "message": "Changes per code review plus test fixes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f0ea21cdedf3ee17d995016e8c43633ee9d71c6", "author": {"user": null}, "url": "https://github.com/hapifhir/hapi-fhir/commit/1f0ea21cdedf3ee17d995016e8c43633ee9d71c6", "committedDate": "2021-01-05T00:09:04Z", "message": "Changes per code review plus test fixes."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3827, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}