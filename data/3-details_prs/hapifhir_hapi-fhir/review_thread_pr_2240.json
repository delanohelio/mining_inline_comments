{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NzQzNDIw", "number": 2240, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxODo1OTozOVrOFGWUxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOToyNjoyMlrOFGW-Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjAxNTQyOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxODo1OTozOVrOIHUg5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDo0MjoyMlrOIHYTJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NzA0Ng==", "bodyText": "Should avoid prefixing the name of the composite list variable with the. We usually reserve this prefix for parameters that were passed to the method (not for local variables). Maybe just change the name of this variable to compositeList?", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544547046", "createdAt": "2020-12-16T18:59:39Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -528,9 +528,25 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\t\t\t\tbreak;\n \t\t\t\tcase QUANTITY:\n \t\t\t\t\ttheQueryStack.addSortOnQuantity(myResourceName, theSort.getParamName(), ascending);\n+\t\t\t\t\tbreak;\t\n+\t\t\t\tcase COMPOSITE:\n+\t\t\t\t\tList<RuntimeSearchParam> theCompositList = param.getCompositeOf();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwOTA2Mg==", "bodyText": "will rename to compositeList", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544609062", "createdAt": "2020-12-16T20:42:22Z", "author": {"login": "frankjtao"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -528,9 +528,25 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\t\t\t\tbreak;\n \t\t\t\tcase QUANTITY:\n \t\t\t\t\ttheQueryStack.addSortOnQuantity(myResourceName, theSort.getParamName(), ascending);\n+\t\t\t\t\tbreak;\t\n+\t\t\t\tcase COMPOSITE:\n+\t\t\t\t\tList<RuntimeSearchParam> theCompositList = param.getCompositeOf();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU0NzA0Ng=="}, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjA4OTIxOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOToxODowOFrOIHVMqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NTo0MFrOIHagzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1ODI1MQ==", "bodyText": "I am wondering if it's appropriate to support sorting on composites with reference,  number and uri param types given that the search functionality does not appear to support searching on composites that include these param types.\nIf we are going to support these types, then I think we should include tests for these types.", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544558251", "createdAt": "2020-12-16T19:18:08Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -542,6 +558,37 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\tcreateSort(theQueryStack, theSort.getChain());\n \n \t}\n+\t\n+\tprivate void createCompositeSort(QueryStack theQueryStack, String theResourceName, RestSearchParameterTypeEnum theParamType, String theParamName, boolean theAscending) {\n+\n+\t\tswitch (theParamType) {\n+\t\tcase STRING:\n+\t\t\ttheQueryStack.addSortOnString(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase DATE:\n+\t\t\ttheQueryStack.addSortOnDate(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase REFERENCE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYxMDYxNw==", "bodyText": "Will remove the other reference, number and uri option of the part of the composite, same as\n\n  \n    \n      hapi-fhir/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/QueryStack.java\n    \n    \n         Line 299\n      in\n      d99b678\n    \n    \n    \n    \n\n        \n          \n           private Condition createPredicateCompositePart(@Nullable DbColumn theSourceJoinColumn, String theResourceName, RuntimeSearchParam theParam, IQueryParameterType theParamValue, RequestPartitionId theRequestPartitionId) {", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544610617", "createdAt": "2020-12-16T20:45:11Z", "author": {"login": "frankjtao"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -542,6 +558,37 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\tcreateSort(theQueryStack, theSort.getChain());\n \n \t}\n+\t\n+\tprivate void createCompositeSort(QueryStack theQueryStack, String theResourceName, RestSearchParameterTypeEnum theParamType, String theParamName, boolean theAscending) {\n+\n+\t\tswitch (theParamType) {\n+\t\tcase STRING:\n+\t\t\ttheQueryStack.addSortOnString(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase DATE:\n+\t\t\ttheQueryStack.addSortOnDate(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase REFERENCE:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1ODI1MQ=="}, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NTMyNw==", "bodyText": "Looks good.", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544645327", "createdAt": "2020-12-16T21:45:40Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -542,6 +558,37 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\tcreateSort(theQueryStack, theSort.getChain());\n \n \t}\n+\t\n+\tprivate void createCompositeSort(QueryStack theQueryStack, String theResourceName, RestSearchParameterTypeEnum theParamType, String theParamName, boolean theAscending) {\n+\n+\t\tswitch (theParamType) {\n+\t\tcase STRING:\n+\t\t\ttheQueryStack.addSortOnString(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase DATE:\n+\t\t\ttheQueryStack.addSortOnDate(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase REFERENCE:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1ODI1MQ=="}, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjEyMTc0OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOToyNjoyMlrOIHVgZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0Njo1OFrOIHajvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU2MzMwMg==", "bodyText": "One way you could test these edge cases (assuming you keep these) is to create resources with number, reference and/or uri values and then create a custom SearchParameter. The FhirResourceDaoR4SearchCustomSearchParamTest test class in ca.uhn.fhir.jpa.dao.r4 includes several examples of tests that use custom SearchParameter definitions that you might be able to adapt (although I admit that I am having troubles finding examples that include uri parameters other than maybe cases that involve resources with extensions).", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544563302", "createdAt": "2020-12-16T19:26:22Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -542,6 +558,37 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\tcreateSort(theQueryStack, theSort.getChain());\n \n \t}\n+\t\n+\tprivate void createCompositeSort(QueryStack theQueryStack, String theResourceName, RestSearchParameterTypeEnum theParamType, String theParamName, boolean theAscending) {\n+\n+\t\tswitch (theParamType) {\n+\t\tcase STRING:\n+\t\t\ttheQueryStack.addSortOnString(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase DATE:\n+\t\t\ttheQueryStack.addSortOnDate(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase REFERENCE:\n+\t\t\ttheQueryStack.addSortOnResourceLink(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYxMDc2Mg==", "bodyText": "Same as above", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544610762", "createdAt": "2020-12-16T20:45:26Z", "author": {"login": "frankjtao"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -542,6 +558,37 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\tcreateSort(theQueryStack, theSort.getChain());\n \n \t}\n+\t\n+\tprivate void createCompositeSort(QueryStack theQueryStack, String theResourceName, RestSearchParameterTypeEnum theParamType, String theParamName, boolean theAscending) {\n+\n+\t\tswitch (theParamType) {\n+\t\tcase STRING:\n+\t\t\ttheQueryStack.addSortOnString(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase DATE:\n+\t\t\ttheQueryStack.addSortOnDate(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase REFERENCE:\n+\t\t\ttheQueryStack.addSortOnResourceLink(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU2MzMwMg=="}, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NjA3Ng==", "bodyText": "Fair enough.", "url": "https://github.com/hapifhir/hapi-fhir/pull/2240#discussion_r544646076", "createdAt": "2020-12-16T21:46:58Z", "author": {"login": "IanMMarshall"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/search/builder/SearchBuilder.java", "diffHunk": "@@ -542,6 +558,37 @@ private void createSort(QueryStack theQueryStack, SortSpec theSort) {\n \t\tcreateSort(theQueryStack, theSort.getChain());\n \n \t}\n+\t\n+\tprivate void createCompositeSort(QueryStack theQueryStack, String theResourceName, RestSearchParameterTypeEnum theParamType, String theParamName, boolean theAscending) {\n+\n+\t\tswitch (theParamType) {\n+\t\tcase STRING:\n+\t\t\ttheQueryStack.addSortOnString(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase DATE:\n+\t\t\ttheQueryStack.addSortOnDate(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;\n+\t\tcase REFERENCE:\n+\t\t\ttheQueryStack.addSortOnResourceLink(myResourceName, theParamName, theAscending);\n+\t\t\tbreak;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU2MzMwMg=="}, "originalCommit": {"oid": "0411967e26add7dd1c6a2feae4f03b6742e9abfc"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1750, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}