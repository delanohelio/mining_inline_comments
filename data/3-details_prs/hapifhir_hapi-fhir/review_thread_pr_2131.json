{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNjE1MTU4", "number": 2131, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoyMjozNlrOEvjQFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDozMDoyOVrOEvjV4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk2MDg1OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-base/src/main/java/ca/uhn/fhir/interceptor/api/Pointcut.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoyMjozNlrOHkmK1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzozNjozMlrOHk85yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNjE1MQ==", "bodyText": "I'm not sure about the name of this.. The pointcuts are almost all named after steps in the processing lifecycle. We should give this a name  that makes it clear how this is different from STORAGE_PRE_DELETE_EXPUNGE (if it is? can they be collapsed?)", "url": "https://github.com/hapifhir/hapi-fhir/pull/2131#discussion_r508136151", "createdAt": "2020-10-20T00:22:36Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-base/src/main/java/ca/uhn/fhir/interceptor/api/Pointcut.java", "diffHunk": "@@ -916,6 +916,95 @@\n \t\t\"org.hl7.fhir.instance.model.api.IBaseResource\"\n \t),\n \n+\t/**\n+\t * <b>Storage Hook:</b>\n+\t * Invoked when a set of resources are about to be deleted and expunged via url like http://localhost/Patient?active=false&_expunge=true\n+\t * <p>\n+\t * Hooks may accept the following parameters:\n+\t * </p>\n+\t * <ul>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.api.server.RequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. Note that the bean\n+\t * properties are not all guaranteed to be populated, depending on how early during processing the\n+\t * exception occurred. <b>Note that this parameter may be null in contexts where the request is not\n+\t * known, such as while processing searches</b>\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.server.servlet.ServletRequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. This parameter is identical to the RequestDetails parameter above but will\n+\t * only be populated when operating in a RestfulServer implementation. It is provided as a convenience.\n+\t * </li>\n+\t * <li>\n+\t * java.lang.String - Contains the url used to delete and expunge the resources\n+\t * </li>\n+\t * </ul>\n+\t * <p>\n+\t * Hooks should return <code>void</code>. They may choose to throw an exception however, in\n+\t * which case the delete expunge will not occur.\n+\t * </p>\n+\t */\n+\n+\tSTORAGE_PRE_DELETE_EXPUNGE(\n+\t\tvoid.class,\n+\t\t\"ca.uhn.fhir.rest.api.server.RequestDetails\",\n+\t\t\"ca.uhn.fhir.rest.server.servlet.ServletRequestDetails\",\n+\t\t\"java.lang.String\"\n+\t),\n+\n+\t/**\n+\t * <b>Storage Hook:</b>\n+\t * Invoked when a batch of resource pids are about to be deleted and expunged via url like http://localhost/Patient?active=false&_expunge=true\n+\t * <p>\n+\t * Hooks may accept the following parameters:\n+\t * </p>\n+\t * <ul>\n+\t * <li>\n+\t * java.lang.String - the name of the resource type being deleted\n+\t * </li>\n+\t * <li>\n+\t * java.util.List - the list of Long pids of the resources about to be deleted\n+\t * </li>\n+\t * <li>\n+\t * java.util.concurrent.atomic.AtomicLong - holds a running tally of all entities deleted so far.\n+\t * If the pointcut callback deletes any entities, then this parameter should be incremented by the total number\n+\t * of additional entities deleted.\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.api.server.RequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. Note that the bean\n+\t * properties are not all guaranteed to be populated, depending on how early during processing the\n+\t * exception occurred. <b>Note that this parameter may be null in contexts where the request is not\n+\t * known, such as while processing searches</b>\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.server.servlet.ServletRequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. This parameter is identical to the RequestDetails parameter above but will\n+\t * only be populated when operating in a RestfulServer implementation. It is provided as a convenience.\n+\t * </li>\n+\t * <li>\n+\t * java.lang.String - Contains the url used to delete and expunge the resources\n+\t * </li>\n+\t * </ul>\n+\t * <p>\n+\t * Hooks should return <code>void</code>. They may choose to throw an exception however, in\n+\t * which case the delete expunge will not occur.\n+\t * </p>\n+\t */\n+\n+\tSTORAGE_DELETE_EXPUNGE_PID_LIST(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c616f549d84fadfdd7471fbb36302bc10f68de06"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwNzMxNQ==", "bodyText": "One is pre all of them, the other receives the pid chunks", "url": "https://github.com/hapifhir/hapi-fhir/pull/2131#discussion_r508507315", "createdAt": "2020-10-20T13:35:20Z", "author": {"login": "fil512"}, "path": "hapi-fhir-base/src/main/java/ca/uhn/fhir/interceptor/api/Pointcut.java", "diffHunk": "@@ -916,6 +916,95 @@\n \t\t\"org.hl7.fhir.instance.model.api.IBaseResource\"\n \t),\n \n+\t/**\n+\t * <b>Storage Hook:</b>\n+\t * Invoked when a set of resources are about to be deleted and expunged via url like http://localhost/Patient?active=false&_expunge=true\n+\t * <p>\n+\t * Hooks may accept the following parameters:\n+\t * </p>\n+\t * <ul>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.api.server.RequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. Note that the bean\n+\t * properties are not all guaranteed to be populated, depending on how early during processing the\n+\t * exception occurred. <b>Note that this parameter may be null in contexts where the request is not\n+\t * known, such as while processing searches</b>\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.server.servlet.ServletRequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. This parameter is identical to the RequestDetails parameter above but will\n+\t * only be populated when operating in a RestfulServer implementation. It is provided as a convenience.\n+\t * </li>\n+\t * <li>\n+\t * java.lang.String - Contains the url used to delete and expunge the resources\n+\t * </li>\n+\t * </ul>\n+\t * <p>\n+\t * Hooks should return <code>void</code>. They may choose to throw an exception however, in\n+\t * which case the delete expunge will not occur.\n+\t * </p>\n+\t */\n+\n+\tSTORAGE_PRE_DELETE_EXPUNGE(\n+\t\tvoid.class,\n+\t\t\"ca.uhn.fhir.rest.api.server.RequestDetails\",\n+\t\t\"ca.uhn.fhir.rest.server.servlet.ServletRequestDetails\",\n+\t\t\"java.lang.String\"\n+\t),\n+\n+\t/**\n+\t * <b>Storage Hook:</b>\n+\t * Invoked when a batch of resource pids are about to be deleted and expunged via url like http://localhost/Patient?active=false&_expunge=true\n+\t * <p>\n+\t * Hooks may accept the following parameters:\n+\t * </p>\n+\t * <ul>\n+\t * <li>\n+\t * java.lang.String - the name of the resource type being deleted\n+\t * </li>\n+\t * <li>\n+\t * java.util.List - the list of Long pids of the resources about to be deleted\n+\t * </li>\n+\t * <li>\n+\t * java.util.concurrent.atomic.AtomicLong - holds a running tally of all entities deleted so far.\n+\t * If the pointcut callback deletes any entities, then this parameter should be incremented by the total number\n+\t * of additional entities deleted.\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.api.server.RequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. Note that the bean\n+\t * properties are not all guaranteed to be populated, depending on how early during processing the\n+\t * exception occurred. <b>Note that this parameter may be null in contexts where the request is not\n+\t * known, such as while processing searches</b>\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.server.servlet.ServletRequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. This parameter is identical to the RequestDetails parameter above but will\n+\t * only be populated when operating in a RestfulServer implementation. It is provided as a convenience.\n+\t * </li>\n+\t * <li>\n+\t * java.lang.String - Contains the url used to delete and expunge the resources\n+\t * </li>\n+\t * </ul>\n+\t * <p>\n+\t * Hooks should return <code>void</code>. They may choose to throw an exception however, in\n+\t * which case the delete expunge will not occur.\n+\t * </p>\n+\t */\n+\n+\tSTORAGE_DELETE_EXPUNGE_PID_LIST(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNjE1MQ=="}, "originalCommit": {"oid": "c616f549d84fadfdd7471fbb36302bc10f68de06"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwODYxOQ==", "bodyText": "Changed to STORAGE_PRE_DELETE_EXPUNGE_PID_LIST", "url": "https://github.com/hapifhir/hapi-fhir/pull/2131#discussion_r508508619", "createdAt": "2020-10-20T13:36:32Z", "author": {"login": "fil512"}, "path": "hapi-fhir-base/src/main/java/ca/uhn/fhir/interceptor/api/Pointcut.java", "diffHunk": "@@ -916,6 +916,95 @@\n \t\t\"org.hl7.fhir.instance.model.api.IBaseResource\"\n \t),\n \n+\t/**\n+\t * <b>Storage Hook:</b>\n+\t * Invoked when a set of resources are about to be deleted and expunged via url like http://localhost/Patient?active=false&_expunge=true\n+\t * <p>\n+\t * Hooks may accept the following parameters:\n+\t * </p>\n+\t * <ul>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.api.server.RequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. Note that the bean\n+\t * properties are not all guaranteed to be populated, depending on how early during processing the\n+\t * exception occurred. <b>Note that this parameter may be null in contexts where the request is not\n+\t * known, such as while processing searches</b>\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.server.servlet.ServletRequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. This parameter is identical to the RequestDetails parameter above but will\n+\t * only be populated when operating in a RestfulServer implementation. It is provided as a convenience.\n+\t * </li>\n+\t * <li>\n+\t * java.lang.String - Contains the url used to delete and expunge the resources\n+\t * </li>\n+\t * </ul>\n+\t * <p>\n+\t * Hooks should return <code>void</code>. They may choose to throw an exception however, in\n+\t * which case the delete expunge will not occur.\n+\t * </p>\n+\t */\n+\n+\tSTORAGE_PRE_DELETE_EXPUNGE(\n+\t\tvoid.class,\n+\t\t\"ca.uhn.fhir.rest.api.server.RequestDetails\",\n+\t\t\"ca.uhn.fhir.rest.server.servlet.ServletRequestDetails\",\n+\t\t\"java.lang.String\"\n+\t),\n+\n+\t/**\n+\t * <b>Storage Hook:</b>\n+\t * Invoked when a batch of resource pids are about to be deleted and expunged via url like http://localhost/Patient?active=false&_expunge=true\n+\t * <p>\n+\t * Hooks may accept the following parameters:\n+\t * </p>\n+\t * <ul>\n+\t * <li>\n+\t * java.lang.String - the name of the resource type being deleted\n+\t * </li>\n+\t * <li>\n+\t * java.util.List - the list of Long pids of the resources about to be deleted\n+\t * </li>\n+\t * <li>\n+\t * java.util.concurrent.atomic.AtomicLong - holds a running tally of all entities deleted so far.\n+\t * If the pointcut callback deletes any entities, then this parameter should be incremented by the total number\n+\t * of additional entities deleted.\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.api.server.RequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. Note that the bean\n+\t * properties are not all guaranteed to be populated, depending on how early during processing the\n+\t * exception occurred. <b>Note that this parameter may be null in contexts where the request is not\n+\t * known, such as while processing searches</b>\n+\t * </li>\n+\t * <li>\n+\t * ca.uhn.fhir.rest.server.servlet.ServletRequestDetails - A bean containing details about the request that is about to be processed, including details such as the\n+\t * resource type and logical ID (if any) and other FHIR-specific aspects of the request which have been\n+\t * pulled out of the servlet request. This parameter is identical to the RequestDetails parameter above but will\n+\t * only be populated when operating in a RestfulServer implementation. It is provided as a convenience.\n+\t * </li>\n+\t * <li>\n+\t * java.lang.String - Contains the url used to delete and expunge the resources\n+\t * </li>\n+\t * </ul>\n+\t * <p>\n+\t * Hooks should return <code>void</code>. They may choose to throw an exception however, in\n+\t * which case the delete expunge will not occur.\n+\t * </p>\n+\t */\n+\n+\tSTORAGE_DELETE_EXPUNGE_PID_LIST(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNjE1MQ=="}, "originalCommit": {"oid": "c616f549d84fadfdd7471fbb36302bc10f68de06"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk3MzMzOnYy", "diffSide": "RIGHT", "path": "hapi-fhir-structures-dstu3/src/test/java/ca/uhn/fhir/rest/client/GenericClientDstu3Test.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoyOToxNlrOHkmR7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoyOToxNlrOHkmR7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNzk2NA==", "bodyText": "Fix has been merged to master\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@Disabled", "url": "https://github.com/hapifhir/hapi-fhir/pull/2131#discussion_r508137964", "createdAt": "2020-10-20T00:29:16Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-structures-dstu3/src/test/java/ca/uhn/fhir/rest/client/GenericClientDstu3Test.java", "diffHunk": "@@ -1187,7 +1196,9 @@ public InputStream answer(InvocationOnMock theInvocation) throws Throwable {\n \t\tidx++;\n \t}\n \n+\t// FIXME KHS disable until it's fixed\n \t@Test\n+\t@Disabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c616f549d84fadfdd7471fbb36302bc10f68de06"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk3NTY4OnYy", "diffSide": "RIGHT", "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/auth/IAuthRuleBuilderRuleOpDelete.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDozMDoyOVrOHkmTPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzo0OTozM1rOHk9nsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzODMwMQ==", "bodyText": "Is there a test for this? I'd recommend putting one or two in AuthorizationInterceptorJpaR4Test", "url": "https://github.com/hapifhir/hapi-fhir/pull/2131#discussion_r508138301", "createdAt": "2020-10-20T00:30:29Z", "author": {"login": "jamesagnew"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/auth/IAuthRuleBuilderRuleOpDelete.java", "diffHunk": "@@ -30,4 +30,9 @@\n \t */\n \tIAuthRuleBuilderRuleOp onCascade();\n \n+\t/**\n+\t * Specifies that this rule applies to delete expunges as opposed to regular\n+\t * deletes.  A delete expunge is a delete operation called with the _expunge=true parameter.\n+\t */\n+\tIAuthRuleBuilderRuleOp onExpunge();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c616f549d84fadfdd7471fbb36302bc10f68de06"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUyMDM2OQ==", "bodyText": "thanks.  there's a test in a different place, but I like the tests here; I have added the tests.", "url": "https://github.com/hapifhir/hapi-fhir/pull/2131#discussion_r508520369", "createdAt": "2020-10-20T13:49:33Z", "author": {"login": "fil512"}, "path": "hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/auth/IAuthRuleBuilderRuleOpDelete.java", "diffHunk": "@@ -30,4 +30,9 @@\n \t */\n \tIAuthRuleBuilderRuleOp onCascade();\n \n+\t/**\n+\t * Specifies that this rule applies to delete expunges as opposed to regular\n+\t * deletes.  A delete expunge is a delete operation called with the _expunge=true parameter.\n+\t */\n+\tIAuthRuleBuilderRuleOp onExpunge();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzODMwMQ=="}, "originalCommit": {"oid": "c616f549d84fadfdd7471fbb36302bc10f68de06"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1815, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}