{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjExODM1", "number": 1901, "title": "Provide temporary sysprop for disabling HFJ 5.0 query optimization", "bodyText": "", "createdAt": "2020-06-05T17:39:37Z", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901", "merged": true, "mergeCommit": {"oid": "5c152fc1d3bfb248cff0fa833588a5153a11405e"}, "closed": true, "closedAt": "2020-06-07T17:15:16Z", "author": {"login": "jamesagnew"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoWNaigH2gAyNDI4NjExODM1OjU3NWUwMGQ3MTViYzkyNmJlZDQ2MzNiNjk2MzU3YzIzOTljMWNkZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoWbIeAH2gAyNDI4NjExODM1OjQ1ZTc5ODliNDczYzBmN2RkYTEwN2IyMDNmZTQ4MDVmYzA1OWY2MTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "575e00d715bc926bed4633b696357c2399c1cde8", "author": {"user": {"login": "jamesagnew", "name": "James Agnew"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/575e00d715bc926bed4633b696357c2399c1cde8", "committedDate": "2020-06-05T17:35:37Z", "message": "Add system property to disable IN query optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368", "author": {"user": {"login": "jamesagnew", "name": "James Agnew"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/fe3ba5789eb7ca27d4df24c5518e78e44eadd368", "committedDate": "2020-06-05T17:38:20Z", "message": "One more optimization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDk4ODQ2", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#pullrequestreview-425498846", "createdAt": "2020-06-05T17:42:57Z", "commit": {"oid": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzo0Mjo1N1rOGf3i8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzo0NzozNVrOGf3sPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2OTEwNg==", "bodyText": "I believe this if needs to be reversed.  if (!ourO...", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436069106", "createdAt": "2020-06-05T17:42:57Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/JpaSystemProperties.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package ca.uhn.fhir.jpa.dao.predicate;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class JpaSystemProperties {\n+\n+\tprivate static final Logger ourLog = LoggerFactory.getLogger(JpaSystemProperties.class);\n+\tpublic static final String HFJ_FORCE_IN_CLAUSES_HF_50 = \"hfj_force_in_clauses_hf50\";\n+\tprivate static boolean ourOptmizeSingleElementInExpression;\n+\n+\tstatic {\n+\t\tupdateSettingsBasedOnCurrentSystemProperties();\n+\t}\n+\n+\t/**\n+\t * Non instantiable\n+\t */\n+\tprivate JpaSystemProperties() {\n+\t}\n+\n+\tpublic static void updateSettingsBasedOnCurrentSystemProperties() {\n+\t\tourOptmizeSingleElementInExpression = !(\"true\".equals(System.getProperty(HFJ_FORCE_IN_CLAUSES_HF_50)));\n+\t\tif (ourOptmizeSingleElementInExpression) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MDc4Mg==", "bodyText": "I love these tests.", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436070782", "createdAt": "2020-06-05T17:46:13Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-base/src/test/java/ca/uhn/fhir/jpa/dao/r4/FhirResourceDaoR4SearchNoFtTest.java", "diffHunk": "@@ -4730,6 +4732,48 @@ public void testCircularReferencesDontBreakRevIncludes() {\n \n \t}\n \n+\t@Test\n+\tpublic void testSearchReference_DontOptmizeSingleValueInPredicate() {\n+\t\tPatient p = new Patient();\n+\t\tp.setActive(true);\n+\t\tString patientId = myPatientDao.create(p).getId().toUnqualifiedVersionless().getValue();\n+\n+\t\tAuditEvent audit = new AuditEvent();\n+\t\taudit.addEntity().getWhat().setReference(patientId);\n+\t\tString auditId = myAuditEventDao.create(audit).getId().toUnqualifiedVersionless().getValue();\n+\n+\n+\t\t// Default\n+\t\t{\n+\t\t\tmyCaptureQueriesListener.clear();\n+\t\t\tSearchParameterMap map = new SearchParameterMap();\n+\t\t\tmap.setLoadSynchronous(true);\n+\t\t\tmap.add(AuditEvent.SP_ENTITY, new ReferenceParam(patientId));\n+\t\t\tIBundleProvider outcome = myAuditEventDao.search(map);\n+\t\t\tassertThat(toUnqualifiedVersionlessIdValues(outcome), contains(auditId));\n+\t\t\tmyCaptureQueriesListener.logSelectQueriesForCurrentThread();\n+\t\t\tassertThat(myCaptureQueriesListener.getSelectQueriesForCurrentThread().get(0).getSql(true, true), containsString(\"myresource1_.TARGET_RESOURCE_ID=\"));\n+\t\t}\n+\n+\t\t// Disable optmization\n+\t\ttry {\n+\t\t\tSystem.setProperty(HFJ_FORCE_IN_CLAUSES_HF_50, \"true\");\n+\t\t\tJpaSystemProperties.updateSettingsBasedOnCurrentSystemProperties();\n+\n+\t\t\tmyCaptureQueriesListener.clear();\n+\t\t\tSearchParameterMap map = new SearchParameterMap();\n+\t\t\tmap.setLoadSynchronous(true);\n+\t\t\tmap.add(AuditEvent.SP_ENTITY, new ReferenceParam(patientId));\n+\t\t\tIBundleProvider outcome = myAuditEventDao.search(map);\n+\t\t\tassertThat(toUnqualifiedVersionlessIdValues(outcome), contains(auditId));\n+\t\t\tmyCaptureQueriesListener.logSelectQueriesForCurrentThread();\n+\t\t\tassertThat(myCaptureQueriesListener.getSelectQueriesForCurrentThread().get(0).getSql(true, true), containsString(\"myresource1_.TARGET_RESOURCE_ID in \"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA3MTQ4NQ==", "bodyText": "How can we ensure we back this out a year from now.  Is there some build-breaking reminder we could set for ourselves?", "url": "https://github.com/hapifhir/hapi-fhir/pull/1901#discussion_r436071485", "createdAt": "2020-06-05T17:47:35Z", "author": {"login": "fil512"}, "path": "hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/dao/predicate/JpaSystemProperties.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package ca.uhn.fhir.jpa.dao.predicate;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class JpaSystemProperties {\n+\n+\tprivate static final Logger ourLog = LoggerFactory.getLogger(JpaSystemProperties.class);\n+\tpublic static final String HFJ_FORCE_IN_CLAUSES_HF_50 = \"hfj_force_in_clauses_hf50\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe3ba5789eb7ca27d4df24c5518e78e44eadd368"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45e7989b473c0f7dda107b203fe4805fc059f614", "author": {"user": {"login": "jamesagnew", "name": "James Agnew"}}, "url": "https://github.com/hapifhir/hapi-fhir/commit/45e7989b473c0f7dda107b203fe4805fc059f614", "committedDate": "2020-06-05T17:50:36Z", "message": "Address review comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3934, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}