{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMDE3NjAx", "number": 536, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNTozOTo0OFrODktCFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoxMzoyNFrODk8kmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODEzMTQxOnYy", "diffSide": "RIGHT", "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNTozOTo0OFrOFxLCkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTowNjoyM1rOFxw6Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEwNTQyNA==", "bodyText": "Typo", "url": "https://github.com/zowe/api-layer/pull/536#discussion_r387105424", "createdAt": "2020-03-03T15:39:48Z", "author": {"login": "JirkaAichler"}, "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "diffHunk": "@@ -169,7 +176,8 @@ private void loadKeystoreMaterial(SSLContextBuilder sslContextBuilder) throws Un\n                 config.getKeyPassword() == null ? null : config.getKeyPassword().toCharArray());\n     }\n \n-    private void loadKeyringMaterial(SSLContextBuilder sslContextBuilder) throws UnrecoverableKeyException,\n+    private void\n+    loadKeyringMaterial(SSLContextBuilder sslContextBuilder) throws UnrecoverableKeyException,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d0e707c30091cb53747c96dd5eb0ba199b4149"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyNTkxNA==", "bodyText": "Thanks!", "url": "https://github.com/zowe/api-layer/pull/536#discussion_r387725914", "createdAt": "2020-03-04T15:06:23Z", "author": {"login": "plavjanik"}, "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "diffHunk": "@@ -169,7 +176,8 @@ private void loadKeystoreMaterial(SSLContextBuilder sslContextBuilder) throws Un\n                 config.getKeyPassword() == null ? null : config.getKeyPassword().toCharArray());\n     }\n \n-    private void loadKeyringMaterial(SSLContextBuilder sslContextBuilder) throws UnrecoverableKeyException,\n+    private void\n+    loadKeyringMaterial(SSLContextBuilder sslContextBuilder) throws UnrecoverableKeyException,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEwNTQyNA=="}, "originalCommit": {"oid": "c5d0e707c30091cb53747c96dd5eb0ba199b4149"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDY2NDc5OnYy", "diffSide": "RIGHT", "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODowODo0M1rOFxjUFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTozNToyOVrOFxyLAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMzEyNw==", "bodyText": "This method has default access modifier, but what about to be clear put here comment to known:\n\nmethod is only for testing purpose\nKeyStore is stored only in case of empty keystore (not if keystore is provided)", "url": "https://github.com/zowe/api-layer/pull/536#discussion_r387503127", "createdAt": "2020-03-04T08:08:43Z", "author": {"login": "pj892031"}, "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "diffHunk": "@@ -76,6 +77,10 @@ public ConnectionSocketFactory createSslSocketFactory() {\n         }\n     }\n \n+    KeyStore getUsedStore() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d0e707c30091cb53747c96dd5eb0ba199b4149"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyNjUwMA==", "bodyText": "Good idea! I will add the comment.", "url": "https://github.com/zowe/api-layer/pull/536#discussion_r387726500", "createdAt": "2020-03-04T15:07:18Z", "author": {"login": "plavjanik"}, "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "diffHunk": "@@ -76,6 +77,10 @@ public ConnectionSocketFactory createSslSocketFactory() {\n         }\n     }\n \n+    KeyStore getUsedStore() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMzEyNw=="}, "originalCommit": {"oid": "c5d0e707c30091cb53747c96dd5eb0ba199b4149"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc0NjU2Mg==", "bodyText": "Makes sense. I have added the comment.", "url": "https://github.com/zowe/api-layer/pull/536#discussion_r387746562", "createdAt": "2020-03-04T15:35:29Z", "author": {"login": "plavjanik"}, "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "diffHunk": "@@ -76,6 +77,10 @@ public ConnectionSocketFactory createSslSocketFactory() {\n         }\n     }\n \n+    KeyStore getUsedStore() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMzEyNw=="}, "originalCommit": {"oid": "c5d0e707c30091cb53747c96dd5eb0ba199b4149"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDY3NzM3OnYy", "diffSide": "RIGHT", "path": "common-service-core/src/test/java/org/zowe/apiml/security/HttpsFactoryTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoxMzoyNFrOFxjbmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTozNToxNlrOFxyKeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwNTA0OQ==", "bodyText": "What about the second case with ignoring=false for purpose of restTemplateWithoutKeystore etc. I think we don't have any tests for that.", "url": "https://github.com/zowe/api-layer/pull/536#discussion_r387505049", "createdAt": "2020-03-04T08:13:24Z", "author": {"login": "pj892031"}, "path": "common-service-core/src/test/java/org/zowe/apiml/security/HttpsFactoryTest.java", "diffHunk": "@@ -44,11 +50,12 @@ public void shouldCreateSecureSslSocketFactory() {\n     }\n \n     @Test\n-    public void shouldCreateIgnoringSslSocketFactory() {\n+    public void shouldCreateIgnoringSslSocketFactory() throws KeyStoreException {\n         HttpsConfig httpsConfig = httpsConfigBuilder.verifySslCertificatesOfServices(false).build();\n         HttpsFactory httpsFactory = new HttpsFactory(httpsConfig);\n         ConnectionSocketFactory socketFactory = httpsFactory.createSslSocketFactory();\n         assertEquals(SSLConnectionSocketFactory.class, socketFactory.getClass());\n+        assertFalse(httpsFactory.getUsedKeyStore().aliases().hasMoreElements());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5d0e707c30091cb53747c96dd5eb0ba199b4149"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc0NjQyNA==", "bodyText": "It makes great sense. I have added the test case.", "url": "https://github.com/zowe/api-layer/pull/536#discussion_r387746424", "createdAt": "2020-03-04T15:35:16Z", "author": {"login": "plavjanik"}, "path": "common-service-core/src/test/java/org/zowe/apiml/security/HttpsFactoryTest.java", "diffHunk": "@@ -44,11 +50,12 @@ public void shouldCreateSecureSslSocketFactory() {\n     }\n \n     @Test\n-    public void shouldCreateIgnoringSslSocketFactory() {\n+    public void shouldCreateIgnoringSslSocketFactory() throws KeyStoreException {\n         HttpsConfig httpsConfig = httpsConfigBuilder.verifySslCertificatesOfServices(false).build();\n         HttpsFactory httpsFactory = new HttpsFactory(httpsConfig);\n         ConnectionSocketFactory socketFactory = httpsFactory.createSslSocketFactory();\n         assertEquals(SSLConnectionSocketFactory.class, socketFactory.getClass());\n+        assertFalse(httpsFactory.getUsedKeyStore().aliases().hasMoreElements());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwNTA0OQ=="}, "originalCommit": {"oid": "c5d0e707c30091cb53747c96dd5eb0ba199b4149"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 447, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}