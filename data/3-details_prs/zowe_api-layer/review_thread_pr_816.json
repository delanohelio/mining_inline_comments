{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzM1ODUx", "number": 816, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTowOToyMFrOEgCSmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxOToxM1rOEgCkGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDI3NDE3OnYy", "diffSide": "RIGHT", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/PassTicketServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTowOToyMFrOHMrMUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTowOToyMFrOHMrMUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjYyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.io.IOException;\n          \n          \n            \n            import java.io.IOException;\n          \n          \n            \n            import org.apache.http.HttpHeaders;\n          \n          \n            \n            import org.apache.http.cookie.SM;", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483052624", "createdAt": "2020-09-03T15:09:20Z", "author": {"login": "pj892031"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/PassTicketServiceImpl.java", "diffHunk": "@@ -25,41 +25,35 @@\n import java.io.IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDI3NDUxOnYy", "diffSide": "RIGHT", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/PassTicketServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTowOToyNVrOHMrMhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToyMjozM1rOHMrxrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjY3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        httpPost.setHeader(\"Content-Type\", \"application/json\");\n          \n          \n            \n                        httpPost.setHeader(\"Cookie\", TOKEN_PREFIX + \"=\" + jwtToken);\n          \n          \n            \n                        httpPost.setHeader(HttpHeaders.CONTENT_TYPE, \"application/json\");\n          \n          \n            \n                        httpPost.setHeader(SM.COOKIE, TOKEN_PREFIX + \"=\" + jwtToken);", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483052678", "createdAt": "2020-09-03T15:09:25Z", "author": {"login": "pj892031"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/PassTicketServiceImpl.java", "diffHunk": "@@ -25,41 +25,35 @@\n import java.io.IOException;\n \n @Slf4j\n-class PassTicketServiceHttps implements PassTicketService {\n+class PassTicketServiceImpl implements PassTicketService {\n     private static final String TOKEN_PREFIX = \"apimlAuthenticationToken\";\n \n-    private HttpsClientProvider httpsClientProvider;\n+    private final CloseableClientProvider httpClientProvider;\n     private final String ticketUrl;\n \n-    public PassTicketServiceHttps(HttpsClientProvider client, String baseUrl) {\n-        this.httpsClientProvider = client;\n-\n+    public PassTicketServiceImpl(CloseableClientProvider client, String baseUrl) {\n+        httpClientProvider = client;\n         ticketUrl = baseUrl + \"/ticket\";\n     }\n \n     @Override\n     public String passTicket(String jwtToken, String applicationId) throws ZaasClientException, ZaasConfigurationException {\n-        CloseableHttpResponse response = null;\n-        CloseableHttpClient closeableHttpsClient = null;\n-        try {\n-            closeableHttpsClient = httpsClientProvider.getHttpsClientWithKeyStoreAndTrustStore();\n+        try (CloseableHttpClient closeableHttpsClient = httpClientProvider.getHttpClient()) {\n             ZaasClientTicketRequest zaasClientTicketRequest = new ZaasClientTicketRequest();\n             ObjectMapper mapper = new ObjectMapper();\n             zaasClientTicketRequest.setApplicationName(applicationId);\n \n             HttpPost httpPost = new HttpPost(ticketUrl);\n             httpPost.setEntity(new StringEntity(mapper.writeValueAsString(zaasClientTicketRequest)));\n-            httpPost.setHeader(\"Content-type\", \"application/json\");\n+            httpPost.setHeader(\"Content-Type\", \"application/json\");\n             httpPost.setHeader(\"Cookie\", TOKEN_PREFIX + \"=\" + jwtToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MjE4OQ==", "bodyText": "Thanks :)", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483062189", "createdAt": "2020-09-03T15:22:33Z", "author": {"login": "plavjanik"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/PassTicketServiceImpl.java", "diffHunk": "@@ -25,41 +25,35 @@\n import java.io.IOException;\n \n @Slf4j\n-class PassTicketServiceHttps implements PassTicketService {\n+class PassTicketServiceImpl implements PassTicketService {\n     private static final String TOKEN_PREFIX = \"apimlAuthenticationToken\";\n \n-    private HttpsClientProvider httpsClientProvider;\n+    private final CloseableClientProvider httpClientProvider;\n     private final String ticketUrl;\n \n-    public PassTicketServiceHttps(HttpsClientProvider client, String baseUrl) {\n-        this.httpsClientProvider = client;\n-\n+    public PassTicketServiceImpl(CloseableClientProvider client, String baseUrl) {\n+        httpClientProvider = client;\n         ticketUrl = baseUrl + \"/ticket\";\n     }\n \n     @Override\n     public String passTicket(String jwtToken, String applicationId) throws ZaasClientException, ZaasConfigurationException {\n-        CloseableHttpResponse response = null;\n-        CloseableHttpClient closeableHttpsClient = null;\n-        try {\n-            closeableHttpsClient = httpsClientProvider.getHttpsClientWithKeyStoreAndTrustStore();\n+        try (CloseableHttpClient closeableHttpsClient = httpClientProvider.getHttpClient()) {\n             ZaasClientTicketRequest zaasClientTicketRequest = new ZaasClientTicketRequest();\n             ObjectMapper mapper = new ObjectMapper();\n             zaasClientTicketRequest.setApplicationName(applicationId);\n \n             HttpPost httpPost = new HttpPost(ticketUrl);\n             httpPost.setEntity(new StringEntity(mapper.writeValueAsString(zaasClientTicketRequest)));\n-            httpPost.setHeader(\"Content-type\", \"application/json\");\n+            httpPost.setHeader(\"Content-Type\", \"application/json\");\n             httpPost.setHeader(\"Cookie\", TOKEN_PREFIX + \"=\" + jwtToken);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1MjY3OA=="}, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDI5NTUzOnYy", "diffSide": "RIGHT", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasHttpClientProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxNDoxOFrOHMrZyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxNDoxOFrOHMrZyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1NjA3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.apache.http.impl.client.HttpClientBuilder;\n          \n          \n            \n            \n          \n          \n            \n            public class ZaasHttpClientProvider implements CloseableClientProvider {\n          \n          \n            \n                private final CloseableHttpClient httpClient;\n          \n          \n            \n            \n          \n          \n            \n                public ZaasHttpClientProvider() {\n          \n          \n            \n                    httpClient = HttpClientBuilder.create().disableCookieManagement().disableAuthCaching().build();\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @Override\n          \n          \n            \n                public CloseableHttpClient getHttpClient() {\n          \n          \n            \n                    return httpClient;\n          \n          \n            \n                }\n          \n          \n            \n            import org.apache.http.impl.client.HttpClientBuilder;\n          \n          \n            \n            import lombok.Getter;\n          \n          \n            \n            \n          \n          \n            \n            public class ZaasHttpClientProvider implements CloseableClientProvider {\n          \n          \n            \n            \n          \n          \n            \n                @Getter\n          \n          \n            \n                private final CloseableHttpClient httpClient;\n          \n          \n            \n            \n          \n          \n            \n                public ZaasHttpClientProvider() {\n          \n          \n            \n                    httpClient = HttpClientBuilder.create().disableCookieManagement().disableAuthCaching().build();\n          \n          \n            \n                }", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483056075", "createdAt": "2020-09-03T15:14:18Z", "author": {"login": "pj892031"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasHttpClientProvider.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.zaasclient.service.internal;\n+\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+\n+public class ZaasHttpClientProvider implements CloseableClientProvider {\n+    private final CloseableHttpClient httpClient;\n+\n+    public ZaasHttpClientProvider() {\n+        httpClient = HttpClientBuilder.create().disableCookieManagement().disableAuthCaching().build();\n+    }\n+\n+    @Override\n+    public CloseableHttpClient getHttpClient() {\n+        return httpClient;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDMwNzAwOnYy", "diffSide": "RIGHT", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxNjo1M1rOHMrg_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxNjo1M1rOHMrg_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1NzkxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    httpGet.addHeader(\"Cookie\", TOKEN_PREFIX + \"=\" + jwtToken);\n          \n          \n            \n                    httpGet.addHeader(SM.COOKIE, TOKEN_PREFIX + \"=\" + jwtToken);", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483057916", "createdAt": "2020-09-03T15:16:53Z", "author": {"login": "pj892031"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "diffHunk": "@@ -86,7 +86,7 @@ public ZaasToken query(String jwtToken) throws ZaasClientException {\n     }\n \n     private ClientWithResponse queryWithJwtToken(String jwtToken) throws ZaasConfigurationException, IOException {\n-        CloseableHttpClient client = httpsClientProvider.getHttpsClientWithTrustStore();\n+        CloseableHttpClient client = httpClientProvider.getHttpClient();\n         HttpGet httpGet = new HttpGet(queryEndpoint);\n         httpGet.addHeader(\"Cookie\", TOKEN_PREFIX + \"=\" + jwtToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDMxNjEyOnYy", "diffSide": "RIGHT", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxODo0NVrOHMrmjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxODo0NVrOHMrmjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1OTM0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.stream.Stream;\n          \n          \n            \n            import java.util.stream.Stream;\n          \n          \n            \n            import org.apache.http.cookie.SM;", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483059341", "createdAt": "2020-09-03T15:18:45Z", "author": {"login": "pj892031"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "diffHunk": "@@ -32,15 +32,15 @@\n import java.util.stream.Stream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDMxODk5OnYy", "diffSide": "RIGHT", "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxOToxM1rOHMroLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNTozODo1NFrOHMsfLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1OTc1Nw==", "bodyText": "Also possible to replace \"Set-cookie\" with SM.SET_COOKIE (line 118)", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483059757", "createdAt": "2020-09-03T15:19:13Z", "author": {"login": "pj892031"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "diffHunk": "@@ -32,15 +32,15 @@\n import java.util.stream.Stream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA3MzgzNg==", "bodyText": "Done", "url": "https://github.com/zowe/api-layer/pull/816#discussion_r483073836", "createdAt": "2020-09-03T15:38:54Z", "author": {"login": "plavjanik"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "diffHunk": "@@ -32,15 +32,15 @@\n import java.util.stream.Stream;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1OTc1Nw=="}, "originalCommit": {"oid": "841c028e8d10915144dfad4e52e2aa12334ba06f"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 487, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}