{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNDc2NTUz", "number": 823, "title": "Implement logout functionality in Zaas Client", "bodyText": "Signed-off-by: at670475 andrea.tabone@broadcom.com\nDescription\nImplement logout functionality in ZAAS Client.\nFixes #808\nDocumentation: zowe/docs-site#1411\nType of change\nPlease delete options that are not relevant.\n\n New feature (non-breaking change which adds functionality)\n This change requires a documentation update\n\nChecklist:\n\n My code follows the style guidelines of this project\n I have performed a self-review of my own code\n I have commented my code, particularly in hard-to-understand areas\n I have made corresponding changes to the documentation\n My changes generate no new warnings\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n\nFor more details about how should the code look like read the Contributing guideline", "createdAt": "2020-09-10T07:22:32Z", "url": "https://github.com/zowe/api-layer/pull/823", "merged": true, "mergeCommit": {"oid": "63e6f1200a8d568b626550b4ffd0b88f11a7f6a9"}, "closed": true, "closedAt": "2020-09-16T15:01:14Z", "author": {"login": "taban03"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIvlNygH2gAyNDgzNDc2NTUzOjNkMDc2MWY0NmQ4ZGYwNmJmMzI2MTE0NDQxODFkYzNlZTM1NjcxYzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJc6O1AFqTQ4OTY1OTc2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3d0761f46d8df06bf32611444181dc3ee35671c4", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/3d0761f46d8df06bf32611444181dc3ee35671c4", "committedDate": "2020-09-14T09:14:49Z", "message": "Implement logout functionality in Zaas Client (WIP)\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43d182f6c21b344df4326f3600882848551ef39d", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/43d182f6c21b344df4326f3600882848551ef39d", "committedDate": "2020-09-14T09:14:49Z", "message": "Check for the token to be present (WIP)\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2f046b929263aa3056caaefbaeaf54bcf19d3b8", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/c2f046b929263aa3056caaefbaeaf54bcf19d3b8", "committedDate": "2020-09-14T09:14:49Z", "message": "Fix problems with error handling\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad8c9c6472afb77fd0a44ad0e5fc6e3a38c4df27", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/ad8c9c6472afb77fd0a44ad0e5fc6e3a38c4df27", "committedDate": "2020-09-14T09:14:49Z", "message": "Fix return code in the gw logout\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22fabf606d8c105d07226befa5ab621936dee4b9", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/22fabf606d8c105d07226befa5ab621936dee4b9", "committedDate": "2020-09-14T09:14:49Z", "message": "Add unit test\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/b43c4fd19774144750575344aa73dafaf7342dd4", "committedDate": "2020-09-14T09:14:49Z", "message": "Add integration tests\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5645a0d7dbe0769b73767b40a79ab54685b5a1d1", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/5645a0d7dbe0769b73767b40a79ab54685b5a1d1", "committedDate": "2020-09-14T09:13:11Z", "message": "Add integration tests\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}, "afterCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/b43c4fd19774144750575344aa73dafaf7342dd4", "committedDate": "2020-09-14T09:14:49Z", "message": "Add integration tests\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfc0e6b518bf905ae464babd6724de705d277a87", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/bfc0e6b518bf905ae464babd6724de705d277a87", "committedDate": "2020-09-14T09:27:16Z", "message": "Update dev documentation\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/73e9cb3d96f0c154efa1286b9e3bcd4435437b72", "committedDate": "2020-09-14T09:37:15Z", "message": "Small fix on doc\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NTQzMDY3", "url": "https://github.com/zowe/api-layer/pull/823#pullrequestreview-487543067", "createdAt": "2020-09-14T08:45:37Z", "commit": {"oid": "bea7d8c3a64c71d5e82d44021a8eff9bd72d59c0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODo0NTozN1rOHRJ2wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMToxODowM1rOHRPHoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc0OTMxMg==", "bodyText": "This constructor is nowhere used.", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487749312", "createdAt": "2020-09-14T08:45:37Z", "author": {"login": "achmelo"}, "path": "apiml-security-common/src/main/java/org/zowe/apiml/security/common/token/TokenFormatNotValidException.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.security.common.token;\n+\n+import org.springframework.security.core.AuthenticationException;\n+\n+/**\n+ * This exception is thrown in case the JWT token format provided during logout is not valid.\n+ */\n+public class TokenFormatNotValidException extends AuthenticationException {\n+\n+    public TokenFormatNotValidException(String msg) {\n+        super(msg);\n+    }\n+\n+    public TokenFormatNotValidException(String msg, Throwable t) {\n+        super(msg, t);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bea7d8c3a64c71d5e82d44021a8eff9bd72d59c0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc2MDAwNA==", "bodyText": "Handle this exception properly.", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487760004", "createdAt": "2020-09-14T09:02:55Z", "author": {"login": "achmelo"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "diffHunk": "@@ -271,11 +274,27 @@ private CookieContentFilter cookieFilter() throws Exception {\n             PROTECTED_ENDPOINTS);\n     }\n \n+    /**\n+     * Handles the logout action by checking the validity of JWT token passed in the Cookie.\n+     * If present, the token will be invalidated.\n+     */\n     private LogoutHandler logoutHandler() {\n-        return (request, response, authentication) -> authenticationService.getJwtTokenFromRequest(request)\n-            .ifPresent(x ->\n-                authenticationService.invalidateJwtToken(x, true)\n-            );\n+        FailedAuthenticationHandler failure = handlerInitializer.getAuthenticationFailureHandler();\n+        return (request, response, authentication) -> {\n+            try {\n+                authenticationService.getJwtTokenFromRequestToLogout(request)\n+                    .ifPresent(x ->\n+                        authenticationService.invalidateJwtToken(x, true)\n+                    );\n+            }\n+            catch (TokenFormatNotValidException e) {\n+                try {\n+                    failure.onAuthenticationFailure(request, response, e);\n+                } catch (ServletException ex) {\n+                    ex.printStackTrace();\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bea7d8c3a64c71d5e82d44021a8eff9bd72d59c0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MTgzOA==", "bodyText": "use variable for \"/login\"", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487771838", "createdAt": "2020-09-14T09:22:40Z", "author": {"login": "achmelo"}, "path": "integration-tests/src/test/java/org/zowe/apiml/discoverableclient/IntegratedZaasClientTest.java", "diffHunk": "@@ -59,7 +60,7 @@ void loginWithValidCredentials() {\n             .contentType(JSON)\n             .body(loginRequest)\n             .when()\n-            .post(ZAAS_CLIENT_URI)\n+            .post(ZAAS_CLIENT_URI + \"/login\")\n             .then()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3MjI1NQ==", "bodyText": "also for logout", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487772255", "createdAt": "2020-09-14T09:23:23Z", "author": {"login": "achmelo"}, "path": "integration-tests/src/test/java/org/zowe/apiml/discoverableclient/IntegratedZaasClientTest.java", "diffHunk": "@@ -106,9 +107,37 @@ void invalidCredentials_OldPathFormat() {\n             .contentType(JSON)\n             .body(loginRequest)\n             .when()\n-            .post(ZAAS_CLIENT_URI_OLD_FORMAT)\n+            .post(ZAAS_CLIENT_URI_OLD_FORMAT + \"/login\")\n             .then()\n             .statusCode(is(SC_UNAUTHORIZED))\n             .body(is(\"Invalid username or password\"));\n     }\n+\n+    @Test\n+    void givenValidToken_whenCallingLogout_thenSuccess() {\n+        String token = \"validToken\";\n+\n+        given()\n+            .contentType(JSON)\n+            .cookie(COOKIE_NAME, generateToken())\n+            .when()\n+            .post(ZAAS_CLIENT_URI_OLD_FORMAT + \"/logout\")\n+            .then()\n+            .statusCode(is(SC_NO_CONTENT));\n+    }\n+\n+    @Test\n+    void givenInvalidToken_whenCallingLogout_thenFail() {\n+\n+        given()\n+            .contentType(JSON)\n+            .when()\n+            .post(ZAAS_CLIENT_URI_OLD_FORMAT + \"/logout\")\n+            .then()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NDYyMw==", "bodyText": "Did you mention this in zaas-client-log-messages.yml ?", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487774623", "createdAt": "2020-09-14T09:27:17Z", "author": {"login": "achmelo"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/exception/ZaasClientErrorCodes.java", "diffHunk": "@@ -13,6 +13,7 @@\n     EXPIRED_JWT_EXCEPTION(\"ZWEAS100E\", \"Token is expired for URL\", 401),\n     INVALID_AUTHENTICATION(\"ZWEAS120E\", \"Invalid username or password\", 401),\n     EMPTY_NULL_USERNAME_PASSWORD(\"ZWEAS121E\", \"Empty or null username or password values provided\", 400),\n+    INVALID_JWT_TOKEN(\"ZWEAS130E\", \"Invalid token provided\", 400),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NjQzNA==", "bodyText": "Handle exception or throw, not both.", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487776434", "createdAt": "2020-09-14T09:30:27Z", "author": {"login": "achmelo"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasClientImpl.java", "diffHunk": "@@ -118,4 +120,17 @@ public String passTicket(String jwtToken, String applicationId) throws ZaasClien\n             throw e;\n         }\n     }\n+\n+    @Override\n+    public void logout(String jwtToken) throws IOException, ZaasConfigurationException, ZaasClientException {\n+        if (jwtToken == null || jwtToken.isEmpty() || !jwtToken.contains(TOKEN_PREFIX)) {\n+            throw new ZaasClientException(ZaasClientErrorCodes.INVALID_JWT_TOKEN);\n+        }\n+        try {\n+            tokens.logout(jwtToken);\n+        } catch (ZaasClientException e) {\n+            log.error(e.getErrorCode().toString());\n+            throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5Mjc4Mw==", "bodyText": "Catch specific exception", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487792783", "createdAt": "2020-09-14T09:58:00Z", "author": {"login": "achmelo"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/ZaasJwtService.java", "diffHunk": "@@ -135,6 +165,24 @@ private String extractToken(CloseableHttpResponse response) throws ZaasClientExc\n         return token;\n     }\n \n+    private void doRequest(Operation request) throws ZaasClientException {\n+        ClientWithResponse clientWithResponse = new ClientWithResponse();\n+        try {\n+\n+            clientWithResponse = request.request();\n+    }\n+        catch (ZaasClientException e) {\n+            throw e;\n+        }\n+        catch (IOException e) {\n+        throw new ZaasClientException(ZaasClientErrorCodes.SERVICE_UNAVAILABLE, e);\n+    } catch (Exception e) {\n+        throw new ZaasClientException(ZaasClientErrorCodes.INVALID_JWT_TOKEN, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5ODI4Mw==", "bodyText": "What would happened if the token has valid prefix but is expired? or somehow not valid. Do we have tests for this?", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487798283", "createdAt": "2020-09-14T10:07:19Z", "author": {"login": "achmelo"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "diffHunk": "@@ -271,11 +274,27 @@ private CookieContentFilter cookieFilter() throws Exception {\n             PROTECTED_ENDPOINTS);\n     }\n \n+    /**\n+     * Handles the logout action by checking the validity of JWT token passed in the Cookie.\n+     * If present, the token will be invalidated.\n+     */\n     private LogoutHandler logoutHandler() {\n-        return (request, response, authentication) -> authenticationService.getJwtTokenFromRequest(request)\n-            .ifPresent(x ->\n-                authenticationService.invalidateJwtToken(x, true)\n-            );\n+        FailedAuthenticationHandler failure = handlerInitializer.getAuthenticationFailureHandler();\n+        return (request, response, authentication) -> {\n+            try {\n+                authenticationService.getJwtTokenFromRequestToLogout(request)\n+                    .ifPresent(x ->\n+                        authenticationService.invalidateJwtToken(x, true)\n+                    );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5OTYxNw==", "bodyText": "why do you post content here?", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487799617", "createdAt": "2020-09-14T10:09:41Z", "author": {"login": "achmelo"}, "path": "discoverable-client/src/test/java/org/zowe/apiml/client/api/ZaasClientTestControllerTest.java", "diffHunk": "@@ -62,11 +64,32 @@ public void forwardLoginTest_invalidCredentials() throws Exception {\n             .thenThrow(new ZaasClientException(ZaasClientErrorCodes.INVALID_AUTHENTICATION));\n \n         this.mockMvc.perform(\n-            post(\"/api/v1/zaasClient\")\n+            post(\"/api/v1/zaasClient/login\")\n                 .content(mapper.writeValueAsString(loginRequest))\n                 .contentType(MediaType.APPLICATION_JSON_UTF8))\n             .andExpect(status().is(401))\n             .andExpect(content().string(\"Invalid username or password\"));\n     }\n \n+    @Test\n+    public void givenValidToken_whenPerformingLogout_thenSuccessLogout() throws Exception {\n+        LoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\n+        String token = \"token\";\n+        this.mockMvc.perform(\n+            post(\"/api/v1/zaasClient/logout\")\n+                .content(mapper.writeValueAsString(loginRequest))\n+                .header(\"Cookie\", TOKEN_PREFIX + \"=\" + token)\n+                .contentType(MediaType.APPLICATION_JSON_UTF8))\n+            .andExpect(status().is(204));\n+    }\n+\n+    @Test\n+    public void givenEmptyToken_whenPerformingLogout_thenFailLogout() throws Exception {\n+        LoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\n+        this.mockMvc.perform(\n+            post(\"/api/v1/zaasClient/logout\")\n+                .content(mapper.writeValueAsString(loginRequest))\n+                .contentType(MediaType.APPLICATION_JSON_UTF8))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc5OTk5NQ==", "bodyText": "any test with correct token prefix but invalid token?", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487799995", "createdAt": "2020-09-14T10:10:19Z", "author": {"login": "achmelo"}, "path": "discoverable-client/src/test/java/org/zowe/apiml/client/api/ZaasClientTestControllerTest.java", "diffHunk": "@@ -62,11 +64,32 @@ public void forwardLoginTest_invalidCredentials() throws Exception {\n             .thenThrow(new ZaasClientException(ZaasClientErrorCodes.INVALID_AUTHENTICATION));\n \n         this.mockMvc.perform(\n-            post(\"/api/v1/zaasClient\")\n+            post(\"/api/v1/zaasClient/login\")\n                 .content(mapper.writeValueAsString(loginRequest))\n                 .contentType(MediaType.APPLICATION_JSON_UTF8))\n             .andExpect(status().is(401))\n             .andExpect(content().string(\"Invalid username or password\"));\n     }\n \n+    @Test\n+    public void givenValidToken_whenPerformingLogout_thenSuccessLogout() throws Exception {\n+        LoginRequest loginRequest = new LoginRequest(\"username\", \"password\");\n+        String token = \"token\";\n+        this.mockMvc.perform(\n+            post(\"/api/v1/zaasClient/logout\")\n+                .content(mapper.writeValueAsString(loginRequest))\n+                .header(\"Cookie\", TOKEN_PREFIX + \"=\" + token)\n+                .contentType(MediaType.APPLICATION_JSON_UTF8))\n+            .andExpect(status().is(204));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwMDY2OA==", "bodyText": "We want to logout only jwt from cookie? Why not from header?", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487800668", "createdAt": "2020-09-14T10:11:33Z", "author": {"login": "achmelo"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/service/AuthenticationService.java", "diffHunk": "@@ -377,6 +375,21 @@ public QueryResponse parseJwtToken(String jwtToken) {\n         return fromCookie;\n     }\n \n+    /**\n+     * Get the JWT token from the cookie to process the logout\n+     *\n+     * @param request the http request\n+     * @throws TokenFormatNotValidException if the token format is not valid or the cookie is empty\n+     * @return the JWT token\n+     */\n+    public Optional<String> getJwtTokenFromRequestToLogout(HttpServletRequest request) {\n+        Optional<String> fromCookie = getJwtTokenFromCookie(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b43c4fd19774144750575344aa73dafaf7342dd4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzMjUxMA==", "bodyText": "Why new method? This TokenFormatNotValidException could be used also for  getJwtTokenFromRequest", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487832510", "createdAt": "2020-09-14T11:11:56Z", "author": {"login": "achmelo"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/service/AuthenticationService.java", "diffHunk": "@@ -377,6 +375,21 @@ public QueryResponse parseJwtToken(String jwtToken) {\n         return fromCookie;\n     }\n \n+    /**\n+     * Get the JWT token from the cookie to process the logout\n+     *\n+     * @param request the http request\n+     * @throws TokenFormatNotValidException if the token format is not valid or the cookie is empty\n+     * @return the JWT token\n+     */\n+    public Optional<String> getJwtTokenFromRequestToLogout(HttpServletRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNTI1Ng==", "bodyText": "why throws ioexception?", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487835256", "createdAt": "2020-09-14T11:17:26Z", "author": {"login": "achmelo"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/internal/TokenService.java", "diffHunk": "@@ -47,4 +50,15 @@\n      *      communication occurs, this exception with details is thrown.\n      */\n     ZaasToken query(String token) throws ZaasClientException;\n+\n+    /**\n+     * Invalidate the provided JWT token in order to perform logout.\n+     *\n+     * @param token JWT token to invalidate\n+     * @throws ZaasClientException If the provided token was expired, invalid or some other issue with respect to\n+     *      communication occurs, this exception with details is thrown.\n+     * @throws ZaasConfigurationException Wrapper for errors in HTTP client and TLS configuration.\n+     * @throws IOException\n+     */\n+    void logout(String token) throws ZaasClientException, IOException, ZaasConfigurationException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNTU1Mw==", "bodyText": "why throws ioexception?", "url": "https://github.com/zowe/api-layer/pull/823#discussion_r487835553", "createdAt": "2020-09-14T11:18:03Z", "author": {"login": "achmelo"}, "path": "zaas-client/src/main/java/org/zowe/apiml/zaasclient/service/ZaasClient.java", "diffHunk": "@@ -62,4 +64,15 @@\n      *      issue with respect to communication occurs, this exception with details is thrown.\n      */\n     String passTicket(String jwtToken, String applicationId) throws ZaasClientException, ZaasConfigurationException;\n+\n+    /**\n+     * Invalidate the provided JWT token in order to perform logout.\n+     *\n+     * @param token JWT token to invalidate\n+     * @throws ZaasClientException If the provided token was expired, invalid or some other issue with respect to\n+     *      communication occurs, this exception with details is thrown.\n+     * @throws ZaasConfigurationException Wrapper for errors in HTTP client and TLS configuration.\n+     * @throws IOException\n+     */\n+    void logout(String token) throws ZaasClientException, IOException, ZaasConfigurationException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73e9cb3d96f0c154efa1286b9e3bcd4435437b72"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd1a84f4d860acc253a6d3b4557b979a67167476", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/fd1a84f4d860acc253a6d3b4557b979a67167476", "committedDate": "2020-09-15T08:58:35Z", "message": "Address required changes (vol.1)\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02850f5cdc11c2d0d5b2578873d12aeb8469fc25", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/02850f5cdc11c2d0d5b2578873d12aeb8469fc25", "committedDate": "2020-09-15T11:36:55Z", "message": "clear cookie store for closeable client\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31bee11f57610db6aa46793de14dce48441cc3f3", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/31bee11f57610db6aa46793de14dce48441cc3f3", "committedDate": "2020-09-15T12:37:56Z", "message": "Fix part of unit tests and clean up\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d56f05a2c2b1ee5b7ba013f5ffdadb3b931599d", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/9d56f05a2c2b1ee5b7ba013f5ffdadb3b931599d", "committedDate": "2020-09-15T12:57:30Z", "message": "refactor\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fdbc54a22dbc60fbb68e3a7845a557983c344af", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/9fdbc54a22dbc60fbb68e3a7845a557983c344af", "committedDate": "2020-09-15T15:13:33Z", "message": "Refactor and new tests\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5bfb1b82d3f186cb8fa1978919316debb7b995d", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/f5bfb1b82d3f186cb8fa1978919316debb7b995d", "committedDate": "2020-09-15T15:39:24Z", "message": "Specify exception to catch and fix style\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62d8d6f845306dd1fd5f52de778f3f6cd431d5b0", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/62d8d6f845306dd1fd5f52de778f3f6cd431d5b0", "committedDate": "2020-09-15T15:43:54Z", "message": "Merge branch 'master' into rip/GH808/zaas_client_logout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88729bd396e9dee1f6f5ce9a252d18394a4afc3a", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/88729bd396e9dee1f6f5ce9a252d18394a4afc3a", "committedDate": "2020-09-16T07:09:42Z", "message": "Merge branch 'master' into rip/GH808/zaas_client_logout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9659b04dcfeaf540595391c9246416add4b62ca0", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/9659b04dcfeaf540595391c9246416add4b62ca0", "committedDate": "2020-09-16T07:32:26Z", "message": "remove test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fdebcf125fd39fe1b2f4ddf4f5d245b9f10d4b3", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/3fdebcf125fd39fe1b2f4ddf4f5d245b9f10d4b3", "committedDate": "2020-09-16T08:58:55Z", "message": "Fix error code\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b03d626eda774f5c94d2ebab8db88963e1f1ac71", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/b03d626eda774f5c94d2ebab8db88963e1f1ac71", "committedDate": "2020-09-16T12:51:16Z", "message": "refactor, logout handler tests\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b311b816f9aa4f221afd1e2f15c7635fee44f9f1", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/b311b816f9aa4f221afd1e2f15c7635fee44f9f1", "committedDate": "2020-09-16T12:51:26Z", "message": "Merge remote-tracking branch 'origin/rip/GH808/zaas_client_logout' into rip/GH808/zaas_client_logout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4533c311322b01d7acf45a205c175053aa2419f2", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/4533c311322b01d7acf45a205c175053aa2419f2", "committedDate": "2020-09-16T13:07:44Z", "message": "Fix exception thrown and add unit test for ZaasJwtService\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00b63083dd11c540ed9b6741dd5f138b531fc6da", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/00b63083dd11c540ed9b6741dd5f138b531fc6da", "committedDate": "2020-09-16T13:13:57Z", "message": "exception handler coverage, remove rethrowing exceptions\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f57d82f42c3c9c87b8d89d6035ff93094b51c3d5", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/f57d82f42c3c9c87b8d89d6035ff93094b51c3d5", "committedDate": "2020-09-16T13:18:15Z", "message": "Merge remote-tracking branch 'origin/rip/GH808/zaas_client_logout' into rip/GH808/zaas_client_logout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08e0e3844d1c72a9ac3a0d63b44d46b68c2534ef", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/08e0e3844d1c72a9ac3a0d63b44d46b68c2534ef", "committedDate": "2020-09-16T13:21:02Z", "message": "add more unit test for ZaasJwtService\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9019417d5e62e2998b56d720cf6454511b7f7765", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/9019417d5e62e2998b56d720cf6454511b7f7765", "committedDate": "2020-09-16T13:31:56Z", "message": "throw correct exception in test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e9325cc46be45e678512aefc673548e2fc29ca6", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/9e9325cc46be45e678512aefc673548e2fc29ca6", "committedDate": "2020-09-16T13:32:08Z", "message": "Merge remote-tracking branch 'origin/rip/GH808/zaas_client_logout' into rip/GH808/zaas_client_logout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67fe49fcc0855915619404bee2904c2b96c9c610", "author": {"user": {"login": "achmelo", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/67fe49fcc0855915619404bee2904c2b96c9c610", "committedDate": "2020-09-16T14:00:45Z", "message": "Merge branch 'master' into rip/GH808/zaas_client_logout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjU5NzYw", "url": "https://github.com/zowe/api-layer/pull/823#pullrequestreview-489659760", "createdAt": "2020-09-16T14:03:30Z", "commit": {"oid": "67fe49fcc0855915619404bee2904c2b96c9c610"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4836, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}