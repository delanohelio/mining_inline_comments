{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NDQ5Njc4", "number": 741, "title": "Storing password into char arrays instead of String", "bodyText": "Description\nThis PR changes using char array instead of String for storing passwords. It is good practice because char array cannot be clean, removing a string from memory happens only after a run of GC. Those changes cannot remove this potential problem, because:\n\nAPI ML uses libraries, which store passwords into Strings\narrays cannot be cleaned (they are required for whole application time)\n\nIt just follows a suggestion from Veracode to mitigate using this approach. Veracode notifies them as Cryptographic Issues with medium priority in the scanning of API SDK.\nAfter implementing those changes, the manual scan didn't report this alert.\nVeracode report:\nDescription\nApplications commonly use cryptography to implement authentication mechanisms and to ensure the confidentiality and integrity of sensitive data, both in transit and at rest. The proper and accurate implementation of cryptography is extremely critical to its efficacy. Configuration or coding mistakes as well as incorrect assumptions may negate a large degree of the protection it affords, leaving the crypto implementation vulnerable to attack.\nCommon cryptographic mistakes include, but are not limited to, selecting weak keys or weak cipher modes, unintentionally exposing sensitive cryptographic data, using predictable entropy sources, and mismanaging or hard-coding keys.\nDevelopers often make the dangerous assumption that they can improve security by designing their own cryptographic algorithm; however, one of the basic tenets of cryptography is that any cipher whose effectiveness is reliant on the secrecy of the algorithm is fundamentally flawed.\nRecommendations\nSelect the appropriate type of cryptography for the intended purpose. Avoid proprietary encryption algorithms as they typically rely on \"security through obscurity\" rather than sound mathematics. Select key sizes appropriate for the data being protected; for high assurance applications, 256-bit symmetric keys and 2048-bit asymmetric keys are sufficient. Follow best practices for key storage, and ensure that plaintext data and key material are not inadvertently exposed.\n\n\n\nFlaw Id\nModule\nLocation\nExploitability\n\n\n\n\n11\nzowe-rest-api-sample-spring.jar/common-service-core-1.12.2.jar\norg/.../security/HttpsConfig.java 16\nNeutral\n\n\n9\nzowe-rest-api-sample-spring.jar/common-service-core-1.12.2.jar\norg/.../security/HttpsConfig.java 16\nNeutral\n\n\n10\nzowe-rest-api-sample-spring.jar/common-service-core-1.12.2.jar\norg/.../security/HttpsConfig.java 16\nNeutral\n\n\n\nFixes # (issue)\nresolves #742\nType of change\nPlease delete options that are not relevant.\n\n Bug fix (non-breaking change which fixes an issue)\n\nChecklist:\n\n My code follows the style guidelines of this project\n I have performed a self-review of my own code\n I have commented my code, particularly in hard-to-understand areas\n I have made corresponding changes to the documentation\n My changes generate no new warnings\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n Any dependent changes have been merged and published in downstream modules\n\nFor more details about how should the code look like read the Contributing guideline", "createdAt": "2020-07-10T13:45:19Z", "url": "https://github.com/zowe/api-layer/pull/741", "merged": true, "mergeCommit": {"oid": "02115483eaf16e5ea986ac5704305b353b56e6a7"}, "closed": true, "closedAt": "2020-07-14T14:12:28Z", "author": {"login": "pj892031"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczjikFgH2gAyNDQ3NDQ5Njc4OmY2NTlmOTcyYzFiN2E0MGI1Y2IwN2YwOTM4ODhlZTBkYjJiOTY5NWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0xB1pAH2gAyNDQ3NDQ5Njc4OmU1MzdmNzFkMTY1MmQ3MTg2NWJkOGMzYTIyZmQ3MGI0OTdkNTM4ZDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f659f972c1b7a40b5cb07f093888ee0db2b9695b", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/f659f972c1b7a40b5cb07f093888ee0db2b9695b", "committedDate": "2020-07-10T13:20:39Z", "message": "storing password into char arrays instant of String - mitigate storage sensitive information in memory (Veracode suggestion)\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a1bbb41e451ea6addb816d4dcd9a341752b496", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/b2a1bbb41e451ea6addb816d4dcd9a341752b496", "committedDate": "2020-07-10T14:36:20Z", "message": "Merge branch 'master' into protectors/veracodeStorePasswordInCharArray"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MDc1ODg5", "url": "https://github.com/zowe/api-layer/pull/741#pullrequestreview-447075889", "createdAt": "2020-07-13T09:18:58Z", "commit": {"oid": "b2a1bbb41e451ea6addb816d4dcd9a341752b496"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOToxODo1OVrOGwgJsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOToyMDozMFrOGwgNjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMTYwMQ==", "bodyText": "Isn't this defeating the purpose of this PR?", "url": "https://github.com/zowe/api-layer/pull/741#discussion_r453511601", "createdAt": "2020-07-13T09:18:59Z", "author": {"login": "jandadav"}, "path": "apiml-common/src/main/java/org/zowe/apiml/product/web/HttpConfig.java", "diffHunk": "@@ -137,14 +137,14 @@ public void init() {\n     public SslContextFactory jettySslContextFactory() {\n         SslContextFactory sslContextFactory = new SslContextFactory(SecurityUtils.replaceFourSlashes(keyStore));\n         sslContextFactory.setProtocol(protocol);\n-        sslContextFactory.setKeyStorePassword(keyStorePassword);\n+        sslContextFactory.setKeyStorePassword(keyStorePassword == null ? null : String.valueOf(keyStorePassword));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2a1bbb41e451ea6addb816d4dcd9a341752b496"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMjEyMg==", "bodyText": "Isn't this defeating the purpose of this PR?", "url": "https://github.com/zowe/api-layer/pull/741#discussion_r453512122", "createdAt": "2020-07-13T09:19:46Z", "author": {"login": "jandadav"}, "path": "common-service-core/src/test/java/org/zowe/apiml/tomcat/TomcatServerFactory.java", "diffHunk": "@@ -79,12 +79,16 @@ private Connector createHttpsConnector(HttpsConfig httpsConfig) {\n         httpsConnector.setSecure(true);\n         httpsConnector.setScheme(\"https\");\n         httpsConnector.setAttribute(\"clientAuth\",\n-                Boolean.toString(httpsConfig.isClientAuth() && httpsConfig.isVerifySslCertificatesOfServices()));\n+            Boolean.toString(httpsConfig.isClientAuth() && httpsConfig.isVerifySslCertificatesOfServices()));\n         httpsConnector.setAttribute(\"keystoreFile\", httpsConfig.getKeyStore());\n-        httpsConnector.setAttribute(\"keystorePass\", httpsConfig.getKeyStorePassword());\n+        httpsConnector.setAttribute(\"keystorePass\",\n+            httpsConfig.getKeyStorePassword() == null ? null : String.valueOf(httpsConfig.getKeyStorePassword())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2a1bbb41e451ea6addb816d4dcd9a341752b496"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMjU5MA==", "bodyText": "Isn't this defeating the purpose of this PR?", "url": "https://github.com/zowe/api-layer/pull/741#discussion_r453512590", "createdAt": "2020-07-13T09:20:30Z", "author": {"login": "jandadav"}, "path": "common-service-core/src/main/java/org/zowe/apiml/security/HttpsFactory.java", "diffHunk": "@@ -241,11 +237,13 @@ private void setSystemProperty(String key, String value) {\n \n     public void setSystemSslProperties() {\n         setSystemProperty(\"javax.net.ssl.keyStore\", SecurityUtils.replaceFourSlashes(config.getKeyStore()));\n-        setSystemProperty(\"javax.net.ssl.keyStorePassword\", config.getKeyStorePassword());\n+        setSystemProperty(\"javax.net.ssl.keyStorePassword\",\n+            config.getKeyStorePassword() == null ? null : String.valueOf(config.getKeyStorePassword()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2a1bbb41e451ea6addb816d4dcd9a341752b496"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3ODMzMDE2", "url": "https://github.com/zowe/api-layer/pull/741#pullrequestreview-447833016", "createdAt": "2020-07-14T06:50:38Z", "commit": {"oid": "b2a1bbb41e451ea6addb816d4dcd9a341752b496"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e537f71d1652d71865bd8c3a22fd70b497d538d1", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/e537f71d1652d71865bd8c3a22fd70b497d538d1", "committedDate": "2020-07-14T07:37:30Z", "message": "Merge branch 'master' into protectors/veracodeStorePasswordInCharArray"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4893, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}