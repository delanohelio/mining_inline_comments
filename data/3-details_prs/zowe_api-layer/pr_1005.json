{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwOTk1NjQw", "number": 1005, "title": "Add /api/v1/gateway/services/{serviceId} endpoint that provides information about a service  in API ML for API clients", "bodyText": "Description\nImplements one endpoint of #873\nThe endpoint is disabled in production with the feature flag apiml.feature.serviceInfo.enabled. This will be removed and permanently enabled when the authorization is implemented.\nDocumentation:\nzowe/docs-site#1520\nThe documentation is only a draft since it will become available when the whole feature is finished,\n\n Bug fix (non-breaking change which fixes an issue) - #991\n New feature (non-breaking change which adds functionality)\n This change requires a documentation update\n\nChecklist:\n\n My code follows the style guidelines of this project\n I have performed a self-review of my own code\n I have commented on my code, particularly in hard-to-understand areas\n I have made corresponding changes to the documentation - zowe/docs-site#1520\n My changes generate no new warnings\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n Any dependent changes have been merged and published in downstream modules\n Manual test on z/OS", "createdAt": "2020-12-16T08:47:14Z", "url": "https://github.com/zowe/api-layer/pull/1005", "merged": true, "mergeCommit": {"oid": "500629183fd3aaae159c4ee3fd1e656915abe5c9"}, "closed": true, "closedAt": "2021-01-06T08:11:20Z", "author": {"login": "JirkaAichler"}, "timelineItems": {"totalCount": 82, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlEKuVAH2gAyNTQwOTk1NjQwOjc0ZTRhZjQ5NDMwMjQ1YzJlODM1ZmFiOWFiMmZmYjVjZDRhYzM4ZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdta23MgH2gAyNTQwOTk1NjQwOjBhOTdhYTFjNDBiMTQzNTE0N2Q3OTU4MWQzM2NkZThmMWY1MmI3MDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "74e4af49430245c2e835fab9ab2ffb5cd4ac38d6", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/74e4af49430245c2e835fab9ab2ffb5cd4ac38d6", "committedDate": "2020-12-11T09:03:46Z", "message": "Add /gateway/services endpoint to provide information about services behind the gateway\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfd736373ab1c1cf0a3d4d4030ef50a4b29b035f", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/bfd736373ab1c1cf0a3d4d4030ef50a4b29b035f", "committedDate": "2020-12-11T10:41:33Z", "message": "Unification of the apiId style (zowe.apiml, ibm.zosmf)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bf133284fe1f501ac007ceef263723e5b6ceb51", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/7bf133284fe1f501ac007ceef263723e5b6ceb51", "committedDate": "2020-12-11T16:26:17Z", "message": "Add unit tests\nFix version filtering algorithm\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f938fa90b93affc14d2e630bfe2f91f9ba58bc49", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/f938fa90b93affc14d2e630bfe2f91f9ba58bc49", "committedDate": "2020-12-11T19:41:06Z", "message": "Revert pnpm-lock.yaml\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46460f96918074267fcea309a79af931b2fd0344", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/46460f96918074267fcea309a79af931b2fd0344", "committedDate": "2020-12-12T23:00:00Z", "message": "Test that apiId is generated in Eureka Metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8286c129c86a44d4768398092815c350a7e637b", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/f8286c129c86a44d4768398092815c350a7e637b", "committedDate": "2020-12-14T12:48:58Z", "message": "Add tests and fixes\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d5a3653f91fb652cfc7e604ccd6dd7abf5e2c49", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/4d5a3653f91fb652cfc7e604ccd6dd7abf5e2c49", "committedDate": "2020-12-14T13:06:42Z", "message": "Better banners for new services\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8860a69386843a906c31d6939e00fc245207695", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/a8860a69386843a906c31d6939e00fc245207695", "committedDate": "2020-12-14T13:07:22Z", "message": "Running local integration tests without failures\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d33989a16fb3e3e830484c66e672652215b606da", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/d33989a16fb3e3e830484c66e672652215b606da", "committedDate": "2020-12-14T15:31:04Z", "message": "Test that the endpoint is not accesible with authentication\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "483cc339b7cee5b53ba706235f19341e34d6e4a5", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/483cc339b7cee5b53ba706235f19341e34d6e4a5", "committedDate": "2020-12-14T18:37:12Z", "message": "Add tests\nAdd api doc\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dad9aaafc27bb8ba0b56fc5f98d57b6227b96a10", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/dad9aaafc27bb8ba0b56fc5f98d57b6227b96a10", "committedDate": "2020-12-14T20:56:21Z", "message": "Add license\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c82707c4f7fb4935af394e04cc4702540e837dbb", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/c82707c4f7fb4935af394e04cc4702540e837dbb", "committedDate": "2020-12-14T22:51:21Z", "message": "Services info integration tests\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8348db23ff5248d9ee8dee264a3fa3df94b89b", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/bc8348db23ff5248d9ee8dee264a3fa3df94b89b", "committedDate": "2020-12-15T12:08:41Z", "message": "Service info endpoint requires authentication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d431340f835b74180747b5c6eb00b746e7a6b8f2", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/d431340f835b74180747b5c6eb00b746e7a6b8f2", "committedDate": "2020-12-15T15:10:37Z", "message": "Add tests\nFix custom metadata\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46d06034d837e7ae9caf443ef97e6949f9417e60", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/46d06034d837e7ae9caf443ef97e6949f9417e60", "committedDate": "2020-12-15T15:10:59Z", "message": "Merge remote-tracking branch 'origin/protectors/GH873/service-info-endpoint' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f3f66597d30f6810b443049468b89d1d85ed06b", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/5f3f66597d30f6810b443049468b89d1d85ed06b", "committedDate": "2020-12-15T21:13:00Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "532d3916f34770f0b0eb38e6fc19b949d7db7889", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/532d3916f34770f0b0eb38e6fc19b949d7db7889", "committedDate": "2020-12-16T08:44:20Z", "message": "Minor changes\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f109ee1227535c5fd552f6ae525401f8c620e042", "author": {"user": {"login": "zowe-robot", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/f109ee1227535c5fd552f6ae525401f8c620e042", "committedDate": "2020-12-16T09:15:39Z", "message": "[Gradle Release plugin] Before tag commit 'v1.18.1'.\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94f1b55adea36e81b96e5440c4ceb5b1cf91d4e", "author": {"user": {"login": "zowe-robot", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/b94f1b55adea36e81b96e5440c4ceb5b1cf91d4e", "committedDate": "2020-12-16T09:15:39Z", "message": "[Gradle Release plugin] Create new version: 'v1.19.0-SNAPSHOT'.\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "934fc473e46365a5e118da538b355e6954fec6fc", "author": {"user": {"login": "CarsonCook", "name": "Carson Cook"}}, "url": "https://github.com/zowe/api-layer/commit/934fc473e46365a5e118da538b355e6954fec6fc", "committedDate": "2020-12-16T09:15:39Z", "message": "Configure the connection limit for the GW (#985)\n\n* Make connection pooling configurable\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>\n\n* Add integration test for concurrent requests\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>\n\n* Add configuration property to gw start scripts\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>\n\n* Re-annotate slow test\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>\n\n* Improve organization of gw start script\n\nSigned-off-by: Carson Cook <carson.cook@ibm.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "354e898277d7fb9febf83b60a99f62765ec6be23", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/354e898277d7fb9febf83b60a99f62765ec6be23", "committedDate": "2020-12-16T09:15:39Z", "message": "Add /gateway/services endpoint to provide information about services behind the gateway\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85afe9a6707769bcc8db535bfeceaeaa5ab6d3cd", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/85afe9a6707769bcc8db535bfeceaeaa5ab6d3cd", "committedDate": "2020-12-16T09:15:39Z", "message": "Unification of the apiId style (zowe.apiml, ibm.zosmf)\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "879e14be48174b64c08afdc06ec1b95d18e387c2", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/879e14be48174b64c08afdc06ec1b95d18e387c2", "committedDate": "2020-12-16T09:15:39Z", "message": "Add unit tests\nFix version filtering algorithm\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c843dffa09ab91f3d4bb35852f3afb74114d8175", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/c843dffa09ab91f3d4bb35852f3afb74114d8175", "committedDate": "2020-12-16T09:15:39Z", "message": "Revert pnpm-lock.yaml\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4119e921837e02ae0178cbf9f56b830f78411ebb", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/4119e921837e02ae0178cbf9f56b830f78411ebb", "committedDate": "2020-12-16T09:15:39Z", "message": "Test that apiId is generated in Eureka Metadata\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ad772801927e881695474854e20f5e57f7ced78", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/5ad772801927e881695474854e20f5e57f7ced78", "committedDate": "2020-12-16T09:15:39Z", "message": "Add tests and fixes\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eb26e48c9c044851d9808938002a4d1bd094028", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/1eb26e48c9c044851d9808938002a4d1bd094028", "committedDate": "2020-12-16T09:15:39Z", "message": "Better banners for new services\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b0aebacc13583d907912a0b332c776d243ba063", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/6b0aebacc13583d907912a0b332c776d243ba063", "committedDate": "2020-12-16T09:15:39Z", "message": "Running local integration tests without failures\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcd76a4c2d97fede69cb6e5789d0aa4b7ab3bbde", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/dcd76a4c2d97fede69cb6e5789d0aa4b7ab3bbde", "committedDate": "2020-12-16T09:15:39Z", "message": "Test that the endpoint is not accesible with authentication\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df8ce03a848da00778383c1276e6c3bb19244197", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/df8ce03a848da00778383c1276e6c3bb19244197", "committedDate": "2020-12-16T09:15:39Z", "message": "Add tests\nAdd api doc\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf64ae723bce2c621bc4b51f64c398f6255dd549", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/cf64ae723bce2c621bc4b51f64c398f6255dd549", "committedDate": "2020-12-16T09:15:39Z", "message": "Add license\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acddae8192043248402ebdba484cf34443f720e8", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/acddae8192043248402ebdba484cf34443f720e8", "committedDate": "2020-12-16T09:15:39Z", "message": "Services info integration tests\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dea29cf9de8a37df65336c96dffe268bab71727f", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/dea29cf9de8a37df65336c96dffe268bab71727f", "committedDate": "2020-12-16T09:15:39Z", "message": "Add tests\nFix custom metadata\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30faf33c55673b90d9d1fbe5f09676009467da63", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/30faf33c55673b90d9d1fbe5f09676009467da63", "committedDate": "2020-12-16T09:15:39Z", "message": "Service info endpoint requires authentication\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf3bd60557d7f0eda7066bfa77ab02ec1105b53a", "author": {"user": {"login": "jackjia-ibm", "name": "Jack (T.) Jia"}}, "url": "https://github.com/zowe/api-layer/commit/bf3bd60557d7f0eda7066bfa77ab02ec1105b53a", "committedDate": "2020-12-16T09:15:39Z", "message": "update build agent (#986)\n\n* update build agent\n\nSigned-off-by: Jack (T.) Jia <jack-tiefeng.jia@ibm.com>\n\n* Upgrade used and accepted node version\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Use pnpm\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Turn off the test\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\nCo-authored-by: Jakub Balhar <jakub@balhar.net>\nCo-authored-by: Jakub Balhar <jakub.balhar@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a45dc5eeeb9056afde86cd983550c43042314222", "author": {"user": {"login": "jandadav", "name": "David Janda"}}, "url": "https://github.com/zowe/api-layer/commit/a45dc5eeeb9056afde86cd983550c43042314222", "committedDate": "2020-12-16T09:15:39Z", "message": "Vsam integration tests (#983)\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82bda10f7d356ecb93b19d411eea5c0456d74694", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/82bda10f7d356ecb93b19d411eea5c0456d74694", "committedDate": "2020-12-16T09:15:39Z", "message": "Use the free port for HA Mode (#996)\n\n* Use the free port for HA Mode\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Use the free port for HA Mode\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\nCo-authored-by: Jakub Balhar <jakub.balhar@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df9fbb2b27fa07a7d6bc7d936695acfd3e8af238", "author": {"user": {"login": "jandadav", "name": "David Janda"}}, "url": "https://github.com/zowe/api-layer/commit/df9fbb2b27fa07a7d6bc7d936695acfd3e8af238", "committedDate": "2020-12-16T09:15:39Z", "message": "VSAM: enable concurrent test (#992)\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e281047cb81c62beea9b76b84160d49ac3832f8d", "author": {"user": {"login": "taban03", "name": "Andrea Tabone"}}, "url": "https://github.com/zowe/api-layer/commit/e281047cb81c62beea9b76b84160d49ac3832f8d", "committedDate": "2020-12-16T09:15:39Z", "message": "Update changelog  (#981)\n\n* Update changelog for version 1.18.0\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "880dedb2085a874dd3cd9882ede6fbc6c3c19f75", "author": {"user": {"login": "boris-bc", "name": "Boris Petkov"}}, "url": "https://github.com/zowe/api-layer/commit/880dedb2085a874dd3cd9882ede6fbc6c3c19f75", "committedDate": "2020-12-16T09:15:40Z", "message": "Upgrade tests in the Api catalog services to use JUnit 5 #960 (#995)\n\nSigned-off-by: Boris Petkov <boris.petkov@broadcom.com>\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48e5120456256f7f187539971b39844db463a08d", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/48e5120456256f7f187539971b39844db463a08d", "committedDate": "2020-12-16T09:15:40Z", "message": "Refactor PlatformReturned and conversion (#994)\n\n* refactor PlatformReturned and conversion\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>\n\n* fix sonar issue\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>\n\nCo-authored-by: David Janda <janda.david@gmail.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ada0f288e39a99e87b75708fb1946410643276", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/84ada0f288e39a99e87b75708fb1946410643276", "committedDate": "2020-12-16T09:15:40Z", "message": "Updates to API doc\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ca93ca7978314721293765ac152303964466ca7", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/3ca93ca7978314721293765ac152303964466ca7", "committedDate": "2020-12-16T09:17:01Z", "message": "Minor changes\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fb45df314e0bece4cf1b0ccfdee377ab27b14ed", "author": {"user": {"login": "jordanCain", "name": "Jordan Cain"}}, "url": "https://github.com/zowe/api-layer/commit/7fb45df314e0bece4cf1b0ccfdee377ab27b14ed", "committedDate": "2020-12-16T09:17:06Z", "message": "Allow usage of the thin JARs (#988)\n\n* Use Lite Jar tool to create thin jars\nChange the dependencies scope\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>\n\n* Add npm command to deploy thin jars for testing\nAdd lite.gradle file to generate the JAR with all the dependencies\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>\n\n* Add thin gradle task to jenkins file\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* launch correct thin gateway\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Force order in JenkinsFile\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Improve the dependency setup\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Update the dependencies\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* More dependency improvements\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Get the log data\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Get the log data\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Always upload all the libraries that were produced\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Fix the duplicate blocks\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Use the 1.19 version of the artifacts\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Runs on local container with 1.18 versions\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Let the log be shown in the stdout\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Try setting the topics separately\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Run in background\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Update all versions to the 1.19\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove dependencies as handled directly by Jenkin\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Try earlier storage of the build results.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* change how api-layer-ci started to print output to log\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Try with all thin services\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Remove lite changes to mockzosmf\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Test without Caching service\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Just build clean artifacts\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Do the build step by step.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Proper naming\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Simplify and clean environment\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* More or less working IT\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Try run on external\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Push the version update\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Fully working version of the Lite lib\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Versions\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remov debug to minimize size\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Update timeout\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Revert back startup of api-layer-ci\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Add back post build steps\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* master Jenkinsfile\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* node version 8.17.0\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* pnpm 4.0.0\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* use npm\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* exclude bigshield test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* temp ignore failing cors tests\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Store log\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* disable cors test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Without redirection\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* remove import\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Split run parts\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Don't run integration tests instances\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Don't isolate stages\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Improve the logging infrastructure\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Archive results\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* reorder scripts\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* build only\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* skip sonar\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* build lite lib separately\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Caching service without thin\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Enforce JSON\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Push Catalogue to request the application/json\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Verify the fix for the default Answer\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove version from the name of the libraries\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove version from the name of the libraries\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* working liteLibJarAll\n\nSigned-off-by: jandadav <janda.david@gmail.com>\n\n* remove redundant line\n\nSigned-off-by: jandadav <janda.david@gmail.com>\n\n* Return to the standard build procedure\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Extrat shared functions to common library\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove gradle lite from discoverable client\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Cleanup\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Final cleanup of the minimization\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Improve doc\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\nCo-authored-by: Andrea Tabone <andrea.tabone@broadcom.com>\nCo-authored-by: Jordan Cain <jordan.cain1@uk.ibm.com>\nCo-authored-by: Jakub Balhar <jakub.balhar@broadcom.com>\nCo-authored-by: achmelo <a.chmelo@gmail.com>\nCo-authored-by: achmelo <37397715+achmelo@users.noreply.github.com>\nCo-authored-by: Jakub Balhar <jakub@balhar.net>\nCo-authored-by: jandadav <janda.david@gmail.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7d024411b285e4e5e9670cb7b0fe8d44d2db057", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/c7d024411b285e4e5e9670cb7b0fe8d44d2db057", "committedDate": "2020-12-16T08:51:37Z", "message": "Merge branch 'protectors/GH873/service-info-endpoint' of https://github.com/zowe/api-layer into protectors/GH873/service-info-endpoint"}, "afterCommit": {"oid": "7fb45df314e0bece4cf1b0ccfdee377ab27b14ed", "author": {"user": {"login": "jordanCain", "name": "Jordan Cain"}}, "url": "https://github.com/zowe/api-layer/commit/7fb45df314e0bece4cf1b0ccfdee377ab27b14ed", "committedDate": "2020-12-16T09:17:06Z", "message": "Allow usage of the thin JARs (#988)\n\n* Use Lite Jar tool to create thin jars\nChange the dependencies scope\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>\n\n* Add npm command to deploy thin jars for testing\nAdd lite.gradle file to generate the JAR with all the dependencies\n\nSigned-off-by: at670475 <andrea.tabone@broadcom.com>\n\n* Add thin gradle task to jenkins file\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* launch correct thin gateway\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Force order in JenkinsFile\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Improve the dependency setup\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Update the dependencies\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* More dependency improvements\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Get the log data\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Get the log data\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Always upload all the libraries that were produced\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Fix the duplicate blocks\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Use the 1.19 version of the artifacts\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Runs on local container with 1.18 versions\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Let the log be shown in the stdout\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Try setting the topics separately\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Run in background\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Update all versions to the 1.19\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove dependencies as handled directly by Jenkin\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Try earlier storage of the build results.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* change how api-layer-ci started to print output to log\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Try with all thin services\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Remove lite changes to mockzosmf\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Test without Caching service\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Just build clean artifacts\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Do the build step by step.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Proper naming\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Simplify and clean environment\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* More or less working IT\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Try run on external\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Push the version update\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Fully working version of the Lite lib\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Versions\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remov debug to minimize size\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Update timeout\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Revert back startup of api-layer-ci\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* Add back post build steps\n\nSigned-off-by: Jordan Cain <jordan.cain1@uk.ibm.com>\n\n* master Jenkinsfile\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* node version 8.17.0\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* pnpm 4.0.0\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* use npm\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* exclude bigshield test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* temp ignore failing cors tests\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Store log\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* disable cors test\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Without redirection\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* remove import\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Split run parts\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Don't run integration tests instances\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Don't isolate stages\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Improve the logging infrastructure\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Archive results\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* reorder scripts\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* build only\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* skip sonar\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* build lite lib separately\n\nSigned-off-by: achmelo <a.chmelo@gmail.com>\n\n* Caching service without thin\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Enforce JSON\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Push Catalogue to request the application/json\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Verify the fix for the default Answer\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove version from the name of the libraries\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove version from the name of the libraries\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* working liteLibJarAll\n\nSigned-off-by: jandadav <janda.david@gmail.com>\n\n* remove redundant line\n\nSigned-off-by: jandadav <janda.david@gmail.com>\n\n* Return to the standard build procedure\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Extrat shared functions to common library\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Remove gradle lite from discoverable client\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Cleanup\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Final cleanup of the minimization\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\n* Improve doc\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>\n\nCo-authored-by: Andrea Tabone <andrea.tabone@broadcom.com>\nCo-authored-by: Jordan Cain <jordan.cain1@uk.ibm.com>\nCo-authored-by: Jakub Balhar <jakub.balhar@broadcom.com>\nCo-authored-by: achmelo <a.chmelo@gmail.com>\nCo-authored-by: achmelo <37397715+achmelo@users.noreply.github.com>\nCo-authored-by: Jakub Balhar <jakub@balhar.net>\nCo-authored-by: jandadav <janda.david@gmail.com>\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1cf2267345c142f5747af45b26d15af0ca42bb5", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/e1cf2267345c142f5747af45b26d15af0ca42bb5", "committedDate": "2020-12-16T09:20:08Z", "message": "Merge remote-tracking branch 'origin/protectors/GH873/service-info-endpoint' into protectors/GH873/service-info-endpoint\n\n# Conflicts:\n#\tgateway-service/src/main/resources/gateway-api-doc.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/52eab34b1463dfbd35f4e65393b2a7cbbde4a227", "committedDate": "2020-12-16T09:20:54Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c74a717109f856db27aa5da33466c21a7a5963c8", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/c74a717109f856db27aa5da33466c21a7a5963c8", "committedDate": "2020-12-16T09:36:19Z", "message": "Fix instances API Doc\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTY2MzUz", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-553566353", "createdAt": "2020-12-16T10:49:38Z", "commit": {"oid": "c74a717109f856db27aa5da33466c21a7a5963c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDo0OTozOFrOIG_N7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDo0OTozOFrOIG_N7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE5ODEyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Takes the versions available in each 'apiml.serviceapiInfo' element.\n          \n          \n            \n                 * Takes the versions available in each 'apiml.service.apiInfo' element.", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544198125", "createdAt": "2020-12-16T10:49:38Z", "author": {"login": "plavjanik"}, "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/services/status/APIDocRetrievalService.java", "diffHunk": "@@ -49,7 +49,7 @@\n \n     /**\n      * Retrieves the available API versions for a registered service.\n-     * Takes the versions available in each 'apiml.service.apiInfo' element.\n+     * Takes the versions available in each 'apiml.serviceapiInfo' element.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c74a717109f856db27aa5da33466c21a7a5963c8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjQ5NzQ2", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-553649746", "createdAt": "2020-12-16T12:43:54Z", "commit": {"oid": "c74a717109f856db27aa5da33466c21a7a5963c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjo0Mzo1NFrOIHDhDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjo0Mzo1NFrOIHDhDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI2ODU1OQ==", "bodyText": "I see this for the first time - https://projectlombok.org/features/experimental/SuperBuilder - Bob now knows his ancestors: Builders with fields from superclasses, too.", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544268559", "createdAt": "2020-12-16T12:43:54Z", "author": {"login": "plavjanik"}, "path": "common-service-core/src/main/java/org/zowe/apiml/config/ApiInfo.java", "diffHunk": "@@ -26,6 +27,7 @@\n @NoArgsConstructor\n @AllArgsConstructor\n @Data\n+@SuperBuilder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c74a717109f856db27aa5da33466c21a7a5963c8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8334c8a653bc2d47c3958e64271b906f59a9354", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/f8334c8a653bc2d47c3958e64271b906f59a9354", "committedDate": "2020-12-16T12:54:43Z", "message": "Format ApiDoc using Prettier based on .editorconfig settings\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjc3MzU2", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-553677356", "createdAt": "2020-12-16T13:20:31Z", "commit": {"oid": "f8334c8a653bc2d47c3958e64271b906f59a9354"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81723f73e61dcd623e558eaddbff8ac810191811", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/81723f73e61dcd623e558eaddbff8ac810191811", "committedDate": "2020-12-16T13:41:56Z", "message": "Description of all Eureka metadata\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0293e0e4c2713b254d5da9c6d7b4b4c14580e9aa", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/0293e0e4c2713b254d5da9c6d7b4b4c14580e9aa", "committedDate": "2020-12-16T13:42:32Z", "message": "fixup!\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53cd64758bd2aaf424901213f4254dd8c5248996", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/53cd64758bd2aaf424901213f4254dd8c5248996", "committedDate": "2020-12-16T13:47:48Z", "message": "Update api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/services/status/APIDocRetrievalService.java\n\nCo-authored-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f775ee7cb012919c2685a45649d45c94a21e271f", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/f775ee7cb012919c2685a45649d45c94a21e271f", "committedDate": "2020-12-16T13:51:42Z", "message": "Merge remote-tracking branch 'origin/protectors/GH873/service-info-endpoint' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7696a6d67c77a31d3c57d6293f93db4cfc2d7e84", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/7696a6d67c77a31d3c57d6293f93db4cfc2d7e84", "committedDate": "2020-12-16T13:55:05Z", "message": "Suppress Sonar\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDgxNzg0", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-553481784", "createdAt": "2020-12-16T09:06:10Z", "commit": {"oid": "c7d024411b285e4e5e9670cb7b0fe8d44d2db057"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowNjoxMFrOIG66lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo1NzozM1rOIHGiZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyNzYzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    secureHealthCheckUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/application/health\n          \n          \n            \n                    secureHealthCheckUrl: https://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/application/health", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544127638", "createdAt": "2020-12-16T09:06:10Z", "author": {"login": "pj892031"}, "path": "api-catalog-services/src/main/resources/application.yml", "diffHunk": "@@ -99,6 +99,7 @@ eureka:\n         hostname: ${apiml.service.hostname}\n         statusPageUrlPath: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/application/info\n         healthCheckUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/application/health\n+        secureHealthCheckUrl: ${apiml.service.scheme}://${apiml.service.hostname}:${apiml.service.port}${apiml.service.contextPath}/application/health", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7d024411b285e4e5e9670cb7b0fe8d44d2db057"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyODQ5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.scheme = scheme;\n          \n          \n            \n                    this.applid = applid;\n          \n          \n            \n                    this.supportsSso = null;\n          \n          \n            \n                    this(scheme, applid, null);", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544128495", "createdAt": "2020-12-16T09:07:26Z", "author": {"login": "pj892031"}, "path": "common-service-core/src/main/java/org/zowe/apiml/auth/Authentication.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.auth;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.*;\n+\n+/**\n+ * Information about expected authentication scheme and APPLID for PassTickets generation.\n+ */\n+@Data\n+@Builder\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+public class Authentication {\n+\n+    private AuthenticationScheme scheme;\n+    private String applid;\n+\n+    @JsonIgnore\n+    @Getter(AccessLevel.NONE)\n+    private Boolean supportsSso;\n+\n+    public Authentication(AuthenticationScheme scheme, String applid) {\n+        this.scheme = scheme;\n+        this.applid = applid;\n+        this.supportsSso = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7d024411b285e4e5e9670cb7b0fe8d44d2db057"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyOTI2MA==", "bodyText": "Why this field has no getter a is ignored in JSON? \"@JsonInclude(JsonInclude.Include.NON_NULL)\" is not enough?", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544129260", "createdAt": "2020-12-16T09:08:40Z", "author": {"login": "pj892031"}, "path": "common-service-core/src/main/java/org/zowe/apiml/auth/Authentication.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.auth;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.*;\n+\n+/**\n+ * Information about expected authentication scheme and APPLID for PassTickets generation.\n+ */\n+@Data\n+@Builder\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+public class Authentication {\n+\n+    private AuthenticationScheme scheme;\n+    private String applid;\n+\n+    @JsonIgnore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7d024411b285e4e5e9670cb7b0fe8d44d2db057"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1Mjk1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Authentication a;\n          \n          \n            \n            \n          \n          \n            \n                    a = new Authentication(AuthenticationScheme.HTTP_BASIC_PASSTICKET, \"applid\");\n          \n          \n            \n                    assertFalse(a.isEmpty());\n          \n          \n            \n            \n          \n          \n            \n                    a = new Authentication(AuthenticationScheme.ZOSMF, null);\n          \n          \n            \n                    assertFalse(a.isEmpty());\n          \n          \n            \n            \n          \n          \n            \n                    a = new Authentication(null, \"applid\");\n          \n          \n            \n                    assertFalse(a.isEmpty());\n          \n          \n            \n            \n          \n          \n            \n                    a = new Authentication(null, \"\");\n          \n          \n            \n                    assertFalse(a.isEmpty());\n          \n          \n            \n            \n          \n          \n            \n                    a = new Authentication(null, null);\n          \n          \n            \n                    assertTrue(a.isEmpty());\n          \n          \n            \n                    assertFalse(new Authentication(AuthenticationScheme.HTTP_BASIC_PASSTICKET, \"applid\").isEmpty());\n          \n          \n            \n                    assertFalse(new Authentication(AuthenticationScheme.ZOSMF, null).isEmpty());\n          \n          \n            \n                    assertFalse(new Authentication(null, \"applid\").isEmpty());\n          \n          \n            \n                    assertFalse(new Authentication(null, \"\").isEmpty());\n          \n          \n            \n                    assertTrue(new Authentication(null, null).isEmpty());\n          \n      \n    \n    \n  \n\nOr to use parametrizedTest?", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544152956", "createdAt": "2020-12-16T09:42:49Z", "author": {"login": "pj892031"}, "path": "common-service-core/src/test/java/org/zowe/apiml/auth/AuthenticationTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package org.zowe.apiml.auth;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class AuthenticationTest {\n+\n+    @Test\n+    void testIsEmpty() {\n+        Authentication a;\n+\n+        a = new Authentication(AuthenticationScheme.HTTP_BASIC_PASSTICKET, \"applid\");\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(AuthenticationScheme.ZOSMF, null);\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(null, \"applid\");\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(null, \"\");\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(null, null);\n+        assertTrue(a.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1NDQ4NQ==", "bodyText": "What about passticket and negative test? Could you split it to few tests? Btw. asserts are the same - just 2 casess", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544154485", "createdAt": "2020-12-16T09:45:01Z", "author": {"login": "pj892031"}, "path": "common-service-core/src/test/java/org/zowe/apiml/auth/AuthenticationTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package org.zowe.apiml.auth;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class AuthenticationTest {\n+\n+    @Test\n+    void testIsEmpty() {\n+        Authentication a;\n+\n+        a = new Authentication(AuthenticationScheme.HTTP_BASIC_PASSTICKET, \"applid\");\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(AuthenticationScheme.ZOSMF, null);\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(null, \"applid\");\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(null, \"\");\n+        assertFalse(a.isEmpty());\n+\n+        a = new Authentication(null, null);\n+        assertTrue(a.isEmpty());\n+    }\n+\n+    @Test\n+    void testSupportSso() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1Njk1Mw==", "bodyText": "nseo? notSet?", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544156953", "createdAt": "2020-12-16T09:48:26Z", "author": {"login": "pj892031"}, "path": "common-service-core/src/test/java/org/zowe/apiml/eurekaservice/client/util/EurekaMetadataParserTest.java", "diffHunk": "@@ -173,30 +165,57 @@ public void generateNoMetadata() {\n     }\n \n     @Test\n-    public void generateMetadataWithIncorrectSwaggerUrl() {\n+    void generateMetadataWithIncorrectSwaggerUrl() {\n         String serviceId = \"test service\";\n         String gatewayUrl = \"api/v1\";\n         String swaggerUrl = \"www.badAddress\";\n \n-        exceptionRule.expect(MetadataValidationException.class);\n-        exceptionRule.expectMessage(\"The Swagger URL \\\"\" + swaggerUrl + \"\\\" for service \" + serviceId + \" is not valid\");\n-\n         ApiInfo apiInfo = new ApiInfo(null, gatewayUrl, null, swaggerUrl, null);\n-        EurekaMetadataParser.generateMetadata(serviceId, apiInfo);\n-    }\n \n+        Exception exception = assertThrows(MetadataValidationException.class, () ->\n+                EurekaMetadataParser.generateMetadata(serviceId, apiInfo)\n+        );\n+\n+        assertTrue(exception.getMessage().contains(\"The Swagger URL \\\"\" + swaggerUrl + \"\\\" for service \" + serviceId + \" is not valid\"));\n+    }\n \n     @Test\n-    public void generateMetadataWithIncorrectDocumentationUrl() {\n+    void generateMetadataWithIncorrectDocumentationUrl() {\n         String serviceId = \"test service\";\n         String gatewayUrl = \"api/v1\";\n         String documentationUrl = \"www.badAddress\";\n \n-        exceptionRule.expect(MetadataValidationException.class);\n-        exceptionRule.expectMessage(\"The documentation URL \\\"\" + documentationUrl + \"\\\" for service \" + serviceId + \" is not valid\");\n-\n         ApiInfo apiInfo = new ApiInfo(null, gatewayUrl, null, null, documentationUrl);\n-        EurekaMetadataParser.generateMetadata(serviceId, apiInfo);\n+\n+        Exception exception = assertThrows(MetadataValidationException.class, () ->\n+                EurekaMetadataParser.generateMetadata(serviceId, apiInfo));\n+\n+        assertTrue(exception.getMessage().contains(\"The documentation URL \\\"\" + documentationUrl + \"\\\" for service \" + serviceId + \" is not valid\"));\n+    }\n+\n+    @Test\n+    void whenFullInfo_testAuthenticationParser() {\n+        String applid = \"applid\";\n+\n+        Map<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SCHEME, ZOSMF.getScheme());\n+        metadata.put(AUTHENTICATION_APPLID, applid);\n+        metadata.put(AUTHENTICATION_SSO, Boolean.TRUE.toString());\n+\n+        Authentication authentication = eurekaMetadataParser.parseAuthentication(metadata);\n+\n+        assertEquals(ZOSMF, authentication.getScheme());\n+        assertEquals(applid, authentication.getApplid());\n+        assertTrue(authentication.supportsSso());\n+    }\n+\n+    @Test\n+    void whenNseoInfo_testAuthenticationParser() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1ODc5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Autowired", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544158795", "createdAt": "2020-12-16T09:51:10Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/routing/ApimlRoutingConfig.java", "diffHunk": "@@ -63,8 +63,8 @@ public ServiceNotFoundFilter serviceNotFoundFilter() {\n     @Bean\n     @Autowired", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE2MTE2Ng==", "bodyText": "This configuration bean is without reason, just @component on bean is needed", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544161166", "createdAt": "2020-12-16T09:54:32Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/services/ServerInfoConfig.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.services;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.zowe.apiml.eurekaservice.client.util.EurekaMetadataParser;\n+\n+@Configuration\n+public class ServerInfoConfig {\n+\n+    @Bean\n+    public EurekaMetadataParser getEurekaMetadataParser() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE2MTczMA==", "bodyText": "What about singular annotation? Also on next lists values...", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544161730", "createdAt": "2020-12-16T09:55:17Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/services/ServiceInfo.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.services;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.netflix.appinfo.InstanceInfo;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.EqualsAndHashCode;\n+import lombok.experimental.SuperBuilder;\n+import org.zowe.apiml.auth.Authentication;\n+import org.zowe.apiml.config.ApiInfo;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+@Data\n+@Builder\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n+public class ServiceInfo {\n+    private String serviceId;\n+    private InstanceInfo.InstanceStatus status;\n+    private Apiml apiml;\n+    private Map<String, Instances> instances;\n+\n+    @Data\n+    @Builder\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public static class Apiml {\n+        private List<ApiInfoExtended> apiInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE2NTM4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (application == null)\n          \n          \n            \n                        return ServiceInfo.builder()\n          \n          \n            \n                                .serviceId(serviceId)\n          \n          \n            \n                                .status(InstanceInfo.InstanceStatus.UNKNOWN)\n          \n          \n            \n                                .build();\n          \n          \n            \n                    if (application == null) {\n          \n          \n            \n                        return ServiceInfo.builder()\n          \n          \n            \n                                .serviceId(serviceId)\n          \n          \n            \n                                .status(InstanceInfo.InstanceStatus.UNKNOWN)\n          \n          \n            \n                                .build();\n          \n          \n            \n                    }", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544165385", "createdAt": "2020-12-16T10:00:24Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/services/ServicesInfoService.java", "diffHunk": "@@ -0,0 +1,248 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.services;\n+\n+import com.fasterxml.jackson.core.Version;\n+import com.netflix.appinfo.InstanceInfo;\n+import com.netflix.discovery.EurekaClient;\n+import com.netflix.discovery.shared.Application;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.stereotype.Service;\n+import org.zowe.apiml.auth.Authentication;\n+import org.zowe.apiml.config.ApiInfo;\n+import org.zowe.apiml.eurekaservice.client.util.EurekaMetadataParser;\n+import org.zowe.apiml.product.gateway.GatewayConfigProperties;\n+import org.zowe.apiml.product.routing.RoutedServices;\n+import org.zowe.apiml.product.routing.ServiceType;\n+import org.zowe.apiml.product.routing.transform.TransformService;\n+import org.zowe.apiml.product.routing.transform.URLTransformationException;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_DESCRIPTION;\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_TITLE;\n+\n+@Slf4j\n+@Service\n+@RequiredArgsConstructor\n+public class ServicesInfoService {\n+\n+    private final EurekaClient eurekaClient;\n+    private final GatewayConfigProperties gatewayConfigProperties;\n+    private final EurekaMetadataParser eurekaMetadataParser;\n+    private final TransformService transformService;\n+\n+    public ServiceInfo getServiceInfo(String serviceId) {\n+        Application application = eurekaClient.getApplication(serviceId);\n+        if (application == null)\n+            return ServiceInfo.builder()\n+                    .serviceId(serviceId)\n+                    .status(InstanceInfo.InstanceStatus.UNKNOWN)\n+                    .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE2NTgxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (appInstances == null || appInstances.isEmpty())\n          \n          \n            \n                        return ServiceInfo.builder()\n          \n          \n            \n                                .serviceId(serviceId)\n          \n          \n            \n                                .status(InstanceInfo.InstanceStatus.DOWN)\n          \n          \n            \n                                .build();\n          \n          \n            \n                    if (appInstances == null || appInstances.isEmpty()) {\n          \n          \n            \n                        return ServiceInfo.builder()\n          \n          \n            \n                                .serviceId(serviceId)\n          \n          \n            \n                                .status(InstanceInfo.InstanceStatus.DOWN)\n          \n          \n            \n                                .build();\n          \n          \n            \n                    }", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544165819", "createdAt": "2020-12-16T10:01:05Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/services/ServicesInfoService.java", "diffHunk": "@@ -0,0 +1,248 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.services;\n+\n+import com.fasterxml.jackson.core.Version;\n+import com.netflix.appinfo.InstanceInfo;\n+import com.netflix.discovery.EurekaClient;\n+import com.netflix.discovery.shared.Application;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.stereotype.Service;\n+import org.zowe.apiml.auth.Authentication;\n+import org.zowe.apiml.config.ApiInfo;\n+import org.zowe.apiml.eurekaservice.client.util.EurekaMetadataParser;\n+import org.zowe.apiml.product.gateway.GatewayConfigProperties;\n+import org.zowe.apiml.product.routing.RoutedServices;\n+import org.zowe.apiml.product.routing.ServiceType;\n+import org.zowe.apiml.product.routing.transform.TransformService;\n+import org.zowe.apiml.product.routing.transform.URLTransformationException;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_DESCRIPTION;\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_TITLE;\n+\n+@Slf4j\n+@Service\n+@RequiredArgsConstructor\n+public class ServicesInfoService {\n+\n+    private final EurekaClient eurekaClient;\n+    private final GatewayConfigProperties gatewayConfigProperties;\n+    private final EurekaMetadataParser eurekaMetadataParser;\n+    private final TransformService transformService;\n+\n+    public ServiceInfo getServiceInfo(String serviceId) {\n+        Application application = eurekaClient.getApplication(serviceId);\n+        if (application == null)\n+            return ServiceInfo.builder()\n+                    .serviceId(serviceId)\n+                    .status(InstanceInfo.InstanceStatus.UNKNOWN)\n+                    .build();\n+\n+        List<InstanceInfo> appInstances = application.getInstances();\n+        if (appInstances == null || appInstances.isEmpty())\n+            return ServiceInfo.builder()\n+                    .serviceId(serviceId)\n+                    .status(InstanceInfo.InstanceStatus.DOWN)\n+                    .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE2ODMzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<ServiceInfo.ApiInfoExtended> result = new ArrayList<>();\n          \n          \n            \n                    List<ServiceInfo.ApiInfoExtended> result = new ArrayList<>(completeList.size());", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544168335", "createdAt": "2020-12-16T10:04:46Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/services/ServicesInfoService.java", "diffHunk": "@@ -0,0 +1,248 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.services;\n+\n+import com.fasterxml.jackson.core.Version;\n+import com.netflix.appinfo.InstanceInfo;\n+import com.netflix.discovery.EurekaClient;\n+import com.netflix.discovery.shared.Application;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.stereotype.Service;\n+import org.zowe.apiml.auth.Authentication;\n+import org.zowe.apiml.config.ApiInfo;\n+import org.zowe.apiml.eurekaservice.client.util.EurekaMetadataParser;\n+import org.zowe.apiml.product.gateway.GatewayConfigProperties;\n+import org.zowe.apiml.product.routing.RoutedServices;\n+import org.zowe.apiml.product.routing.ServiceType;\n+import org.zowe.apiml.product.routing.transform.TransformService;\n+import org.zowe.apiml.product.routing.transform.URLTransformationException;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_DESCRIPTION;\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_TITLE;\n+\n+@Slf4j\n+@Service\n+@RequiredArgsConstructor\n+public class ServicesInfoService {\n+\n+    private final EurekaClient eurekaClient;\n+    private final GatewayConfigProperties gatewayConfigProperties;\n+    private final EurekaMetadataParser eurekaMetadataParser;\n+    private final TransformService transformService;\n+\n+    public ServiceInfo getServiceInfo(String serviceId) {\n+        Application application = eurekaClient.getApplication(serviceId);\n+        if (application == null)\n+            return ServiceInfo.builder()\n+                    .serviceId(serviceId)\n+                    .status(InstanceInfo.InstanceStatus.UNKNOWN)\n+                    .build();\n+\n+        List<InstanceInfo> appInstances = application.getInstances();\n+        if (appInstances == null || appInstances.isEmpty())\n+            return ServiceInfo.builder()\n+                    .serviceId(serviceId)\n+                    .status(InstanceInfo.InstanceStatus.DOWN)\n+                    .build();\n+\n+        return ServiceInfo.builder()\n+                .serviceId(serviceId)\n+                .status(getStatus(appInstances))\n+                .apiml(getApiml(appInstances))\n+                .instances(getInstances(appInstances))\n+                .build();\n+    }\n+\n+    private ServiceInfo.Apiml getApiml(List<InstanceInfo> appInstances) {\n+        return ServiceInfo.Apiml.builder()\n+                .apiInfo(getApiInfos(appInstances))\n+                .service(getService(appInstances))\n+                .authentication(getAuthentication(appInstances))\n+                .build();\n+    }\n+\n+    private List<ServiceInfo.ApiInfoExtended> getApiInfos(List<InstanceInfo> appInstances) {\n+        List<ServiceInfo.ApiInfoExtended> completeList = new ArrayList<>();\n+\n+        for (InstanceInfo instanceInfo : appInstances) {\n+            List<ApiInfo> apiInfoList = eurekaMetadataParser.parseApiInfo(instanceInfo.getMetadata());\n+            completeList.addAll(apiInfoList.stream()\n+                    .map(apiInfo -> ServiceInfo.ApiInfoExtended.builder()\n+                            .apiId(apiInfo.getApiId())\n+                            .basePath(getBasePath(apiInfo, instanceInfo))\n+                            .baseUrl(getBaseUrl(apiInfo, instanceInfo))\n+                            .gatewayUrl(apiInfo.getGatewayUrl())\n+                            .swaggerUrl(getGatewayUrl(\n+                                    apiInfo.getSwaggerUrl(),\n+                                    instanceInfo.getAppName().toLowerCase(),\n+                                    ServiceType.API,\n+                                    eurekaMetadataParser.parseRoutes(instanceInfo.getMetadata())\n+                            ))\n+                            .documentationUrl(apiInfo.getDocumentationUrl())\n+                            .version(apiInfo.getVersion())\n+                            .isDefaultApi(apiInfo.isDefaultApi())\n+                            .build())\n+                    .collect(Collectors.toList()));\n+        }\n+\n+        return filterByIdAndMajorVersion(completeList);\n+    }\n+\n+    private ServiceInfo.Service getService(List<InstanceInfo> appInstances) {\n+        InstanceInfo instanceInfo = appInstances.get(0);\n+        Version highestVersion = Version.unknownVersion();\n+        for (InstanceInfo currentInfo : appInstances) {\n+            List<ApiInfo> apiInfoList = eurekaMetadataParser.parseApiInfo(currentInfo.getMetadata());\n+            for (ApiInfo apiInfo : apiInfoList) {\n+                Version version = getVersion(apiInfo.getVersion());\n+                if (version.compareTo(highestVersion) > 0) {\n+                    highestVersion = version;\n+                    instanceInfo = currentInfo;\n+                }\n+            }\n+        }\n+\n+        RoutedServices routes = eurekaMetadataParser.parseRoutes(instanceInfo.getMetadata());\n+\n+        return ServiceInfo.Service.builder()\n+                .title(instanceInfo.getMetadata().get(SERVICE_TITLE))\n+                .description(instanceInfo.getMetadata().get(SERVICE_DESCRIPTION))\n+                .homePageUrl(getGatewayUrl(instanceInfo.getHomePageUrl(), instanceInfo.getAppName().toLowerCase(), ServiceType.UI, routes))\n+                .build();\n+    }\n+\n+    private List<Authentication> getAuthentication(List<InstanceInfo> appInstances) {\n+        return appInstances.stream()\n+                .map(instanceInfo -> {\n+                    Authentication authentication = eurekaMetadataParser.parseAuthentication(instanceInfo.getMetadata());\n+                    return authentication.isEmpty() ? null : authentication;\n+                })\n+                .filter(Objects::nonNull)\n+                .distinct()\n+                .collect(Collectors.toList());\n+    }\n+\n+    private Map<String, ServiceInfo.Instances> getInstances(List<InstanceInfo> appInstances) {\n+        return appInstances.stream()\n+                .collect(Collectors.toMap(\n+                        InstanceInfo::getInstanceId,\n+                        instanceInfo -> ServiceInfo.Instances.builder()\n+                                .status(instanceInfo.getStatus())\n+                                .hostname(instanceInfo.getHostName())\n+                                .ipAddr(instanceInfo.getIPAddr())\n+                                .protocol(getProtocol(instanceInfo))\n+                                .port(getPort(instanceInfo))\n+                                .homePageUrl(instanceInfo.getHomePageUrl())\n+                                .healthCheckUrl(getHealthCheckUrl(instanceInfo))\n+                                .statusPageUrl(instanceInfo.getStatusPageUrl())\n+                                .customMetadata(getCustomMetadata(instanceInfo.getMetadata()))\n+                                .build()\n+                ));\n+    }\n+\n+    private List<ServiceInfo.ApiInfoExtended> filterByIdAndMajorVersion(List<ServiceInfo.ApiInfoExtended> completeList) {\n+        if (completeList.isEmpty()) return Collections.emptyList();\n+\n+        completeList.sort(Comparator\n+                .comparing(ServiceInfo.ApiInfoExtended::getApiId, Comparator.nullsFirst(Comparator.naturalOrder()))\n+                .thenComparing(ServiceInfo.ApiInfoExtended::getVersion, Comparator.comparing(this::getVersion))\n+        );\n+\n+        List<ServiceInfo.ApiInfoExtended> result = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI0Nzg3OA==", "bodyText": "This configuration method coud be replaces with annotation @component at the class", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544247878", "createdAt": "2020-12-16T12:10:09Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/test/java/org/zowe/apiml/acceptance/config/ApimlRoutingConfig.java", "diffHunk": "@@ -63,8 +63,8 @@ public ServiceNotFoundFilter serviceNotFoundFilter() {\n     @Bean\n     @Autowired", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxODA1NA==", "bodyText": "What about replace this Version class, with class like:\nimport org.apache.commons.lang3.StringUtils;\npublic class Version implements Comparable {\nprivate String[] numbers;\n\npublic Version(String version) {\n    this.numbers = version.split(\"\\\\.\");\n}\n\npublic int getLength() {\n    return numbers.length;\n}\n\npublic String getNumber(int i) {\n    if (i < 0) {\n        throw new IllegalArgumentException(\"Index of number has to be equal or greater than zero\")\n    }\n\n    if (i >= numbers.length) {\n        return \"0\";\n    }\n\n    return numbers[i];\n}\n\nprivate int compare(String a, String b) {\n    if (StringUtils.isNumeric(a) && StringUtils.isNumeric(b)) {\n        return Integer.valueOf(a).compareTo(Integer.valueOf(b));\n    }\n    return a.compareTo(b);\n}\n\n@Override\npublic int compareTo(Version o) {\n    int length = Math.max(getLength(), o.getLength());\n    for (int i = 0; i < length; i++) {\n        int c = compare(getNumber(i), o.getNumber(i));\n        if (c != 0) {\n            return c;\n        }\n    }\n\n    return 0;\n}\n\n}\nIt will be easier to use (see parsing). Support N numbers, not just 3. It supports also alphabets characters in a version.", "url": "https://github.com/zowe/api-layer/pull/1005#discussion_r544318054", "createdAt": "2020-12-16T13:57:33Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/services/ServicesInfoService.java", "diffHunk": "@@ -0,0 +1,248 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.services;\n+\n+import com.fasterxml.jackson.core.Version;\n+import com.netflix.appinfo.InstanceInfo;\n+import com.netflix.discovery.EurekaClient;\n+import com.netflix.discovery.shared.Application;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.stereotype.Service;\n+import org.zowe.apiml.auth.Authentication;\n+import org.zowe.apiml.config.ApiInfo;\n+import org.zowe.apiml.eurekaservice.client.util.EurekaMetadataParser;\n+import org.zowe.apiml.product.gateway.GatewayConfigProperties;\n+import org.zowe.apiml.product.routing.RoutedServices;\n+import org.zowe.apiml.product.routing.ServiceType;\n+import org.zowe.apiml.product.routing.transform.TransformService;\n+import org.zowe.apiml.product.routing.transform.URLTransformationException;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_DESCRIPTION;\n+import static org.zowe.apiml.constants.EurekaMetadataDefinition.SERVICE_TITLE;\n+\n+@Slf4j\n+@Service\n+@RequiredArgsConstructor\n+public class ServicesInfoService {\n+\n+    private final EurekaClient eurekaClient;\n+    private final GatewayConfigProperties gatewayConfigProperties;\n+    private final EurekaMetadataParser eurekaMetadataParser;\n+    private final TransformService transformService;\n+\n+    public ServiceInfo getServiceInfo(String serviceId) {\n+        Application application = eurekaClient.getApplication(serviceId);\n+        if (application == null)\n+            return ServiceInfo.builder()\n+                    .serviceId(serviceId)\n+                    .status(InstanceInfo.InstanceStatus.UNKNOWN)\n+                    .build();\n+\n+        List<InstanceInfo> appInstances = application.getInstances();\n+        if (appInstances == null || appInstances.isEmpty())\n+            return ServiceInfo.builder()\n+                    .serviceId(serviceId)\n+                    .status(InstanceInfo.InstanceStatus.DOWN)\n+                    .build();\n+\n+        return ServiceInfo.builder()\n+                .serviceId(serviceId)\n+                .status(getStatus(appInstances))\n+                .apiml(getApiml(appInstances))\n+                .instances(getInstances(appInstances))\n+                .build();\n+    }\n+\n+    private ServiceInfo.Apiml getApiml(List<InstanceInfo> appInstances) {\n+        return ServiceInfo.Apiml.builder()\n+                .apiInfo(getApiInfos(appInstances))\n+                .service(getService(appInstances))\n+                .authentication(getAuthentication(appInstances))\n+                .build();\n+    }\n+\n+    private List<ServiceInfo.ApiInfoExtended> getApiInfos(List<InstanceInfo> appInstances) {\n+        List<ServiceInfo.ApiInfoExtended> completeList = new ArrayList<>();\n+\n+        for (InstanceInfo instanceInfo : appInstances) {\n+            List<ApiInfo> apiInfoList = eurekaMetadataParser.parseApiInfo(instanceInfo.getMetadata());\n+            completeList.addAll(apiInfoList.stream()\n+                    .map(apiInfo -> ServiceInfo.ApiInfoExtended.builder()\n+                            .apiId(apiInfo.getApiId())\n+                            .basePath(getBasePath(apiInfo, instanceInfo))\n+                            .baseUrl(getBaseUrl(apiInfo, instanceInfo))\n+                            .gatewayUrl(apiInfo.getGatewayUrl())\n+                            .swaggerUrl(getGatewayUrl(\n+                                    apiInfo.getSwaggerUrl(),\n+                                    instanceInfo.getAppName().toLowerCase(),\n+                                    ServiceType.API,\n+                                    eurekaMetadataParser.parseRoutes(instanceInfo.getMetadata())\n+                            ))\n+                            .documentationUrl(apiInfo.getDocumentationUrl())\n+                            .version(apiInfo.getVersion())\n+                            .isDefaultApi(apiInfo.isDefaultApi())\n+                            .build())\n+                    .collect(Collectors.toList()));\n+        }\n+\n+        return filterByIdAndMajorVersion(completeList);\n+    }\n+\n+    private ServiceInfo.Service getService(List<InstanceInfo> appInstances) {\n+        InstanceInfo instanceInfo = appInstances.get(0);\n+        Version highestVersion = Version.unknownVersion();\n+        for (InstanceInfo currentInfo : appInstances) {\n+            List<ApiInfo> apiInfoList = eurekaMetadataParser.parseApiInfo(currentInfo.getMetadata());\n+            for (ApiInfo apiInfo : apiInfoList) {\n+                Version version = getVersion(apiInfo.getVersion());\n+                if (version.compareTo(highestVersion) > 0) {\n+                    highestVersion = version;\n+                    instanceInfo = currentInfo;\n+                }\n+            }\n+        }\n+\n+        RoutedServices routes = eurekaMetadataParser.parseRoutes(instanceInfo.getMetadata());\n+\n+        return ServiceInfo.Service.builder()\n+                .title(instanceInfo.getMetadata().get(SERVICE_TITLE))\n+                .description(instanceInfo.getMetadata().get(SERVICE_DESCRIPTION))\n+                .homePageUrl(getGatewayUrl(instanceInfo.getHomePageUrl(), instanceInfo.getAppName().toLowerCase(), ServiceType.UI, routes))\n+                .build();\n+    }\n+\n+    private List<Authentication> getAuthentication(List<InstanceInfo> appInstances) {\n+        return appInstances.stream()\n+                .map(instanceInfo -> {\n+                    Authentication authentication = eurekaMetadataParser.parseAuthentication(instanceInfo.getMetadata());\n+                    return authentication.isEmpty() ? null : authentication;\n+                })\n+                .filter(Objects::nonNull)\n+                .distinct()\n+                .collect(Collectors.toList());\n+    }\n+\n+    private Map<String, ServiceInfo.Instances> getInstances(List<InstanceInfo> appInstances) {\n+        return appInstances.stream()\n+                .collect(Collectors.toMap(\n+                        InstanceInfo::getInstanceId,\n+                        instanceInfo -> ServiceInfo.Instances.builder()\n+                                .status(instanceInfo.getStatus())\n+                                .hostname(instanceInfo.getHostName())\n+                                .ipAddr(instanceInfo.getIPAddr())\n+                                .protocol(getProtocol(instanceInfo))\n+                                .port(getPort(instanceInfo))\n+                                .homePageUrl(instanceInfo.getHomePageUrl())\n+                                .healthCheckUrl(getHealthCheckUrl(instanceInfo))\n+                                .statusPageUrl(instanceInfo.getStatusPageUrl())\n+                                .customMetadata(getCustomMetadata(instanceInfo.getMetadata()))\n+                                .build()\n+                ));\n+    }\n+\n+    private List<ServiceInfo.ApiInfoExtended> filterByIdAndMajorVersion(List<ServiceInfo.ApiInfoExtended> completeList) {\n+        if (completeList.isEmpty()) return Collections.emptyList();\n+\n+        completeList.sort(Comparator\n+                .comparing(ServiceInfo.ApiInfoExtended::getApiId, Comparator.nullsFirst(Comparator.naturalOrder()))\n+                .thenComparing(ServiceInfo.ApiInfoExtended::getVersion, Comparator.comparing(this::getVersion))\n+        );\n+\n+        List<ServiceInfo.ApiInfoExtended> result = new ArrayList<>();\n+        ServiceInfo.ApiInfoExtended lastApiInfo = null;\n+        for (ServiceInfo.ApiInfoExtended apiInfo : completeList) {\n+            if (lastApiInfo == null ||\n+                    !apiInfo.getApiId().equals(lastApiInfo.getApiId()) ||\n+                    (apiInfo.getApiId().equals(lastApiInfo.getApiId()) &&\n+                            getVersion(apiInfo.getVersion()).getMajorVersion() > getVersion(lastApiInfo.getVersion()).getMajorVersion())\n+            ) {\n+                result.add(apiInfo);\n+                lastApiInfo = apiInfo;\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    private String getGatewayUrl(String url, String serviceId, ServiceType type, RoutedServices routes) {\n+        if (url == null) return null;\n+\n+        try {\n+            return transformService.transformURL(\n+                    type,\n+                    serviceId,\n+                    url,\n+                    routes);\n+        } catch (URLTransformationException e) {\n+            return url;\n+        }\n+    }\n+\n+    private Version getVersion(String version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52eab34b1463dfbd35f4e65393b2a7cbbde4a227"}, "originalPosition": 192}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46b5e173b54d54de0540101b93f9dd88e1ba8999", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/46b5e173b54d54de0540101b93f9dd88e1ba8999", "committedDate": "2020-12-16T14:11:30Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Pavel Jare\u0161 <58428711+pj892031@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a7b2a7a0bde21a15ed0d28c168f2e238653498e", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/6a7b2a7a0bde21a15ed0d28c168f2e238653498e", "committedDate": "2020-12-16T16:59:24Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5149fdccd1c033c6ecc1b5cfc746e32cb6c3ab3", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/a5149fdccd1c033c6ecc1b5cfc746e32cb6c3ab3", "committedDate": "2020-12-17T10:53:48Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c435bf1de6caac467579fc0919c4e9db02aec815", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/c435bf1de6caac467579fc0919c4e9db02aec815", "committedDate": "2020-12-17T11:17:01Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Pavel Jare\u0161 <58428711+pj892031@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NTQzMzUz", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-554543353", "createdAt": "2020-12-17T12:08:20Z", "commit": {"oid": "c435bf1de6caac467579fc0919c4e9db02aec815"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fbc138793230da5785f1bd411a095e6d1198a72", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/9fbc138793230da5785f1bd411a095e6d1198a72", "committedDate": "2020-12-17T14:49:00Z", "message": "Minor changes\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6caaa67336a9624295ed0eff835c19804edca73", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/c6caaa67336a9624295ed0eff835c19804edca73", "committedDate": "2020-12-18T10:28:32Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe6fd8dbdda4586ed8be65f26b385c23490106f9", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/fe6fd8dbdda4586ed8be65f26b385c23490106f9", "committedDate": "2020-12-18T14:15:34Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f1e8c399bb767e4db7ba99b615fcd1f89ebcd59", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/0f1e8c399bb767e4db7ba99b615fcd1f89ebcd59", "committedDate": "2020-12-21T15:11:58Z", "message": "Merge remote-tracking branch 'origin/protectors/GH873/service-info-endpoint' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc0f33ae590c47d98b9cebf1230fbb1e87c1a6e5", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/cc0f33ae590c47d98b9cebf1230fbb1e87c1a6e5", "committedDate": "2020-12-21T15:12:52Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint\n\n# Conflicts:\n#\tapiml-security-common/src/test/java/org/zowe/apiml/security/common/auth/AuthenticationTest.java\n#\tcommon-service-core/src/main/java/org/zowe/apiml/eurekaservice/client/util/EurekaMetadataParser.java\n#\tcommon-service-core/src/test/java/org/zowe/apiml/auth/AuthenticationSchemesTest.java\n#\tcommon-service-core/src/test/java/org/zowe/apiml/eurekaservice/client/util/EurekaMetadataParserTest.java\n#\tdiscovery-package/src/main/resources/zosmf-static-definition.yaml.template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b603093cf4796e051aef7d91e31c2a7710b604f", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/3b603093cf4796e051aef7d91e31c2a7710b604f", "committedDate": "2020-12-22T07:47:19Z", "message": "Fix split\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ace9c5fa741b58728a323dbfac4d3d7572d091a1", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/ace9c5fa741b58728a323dbfac4d3d7572d091a1", "committedDate": "2020-12-22T07:48:05Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04bc4a46edb9bf7d1aaee9674c45afc218fb25a5", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/04bc4a46edb9bf7d1aaee9674c45afc218fb25a5", "committedDate": "2020-12-23T08:23:26Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23bee446b4833c7314c0306c3563b2281bc4f123", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/23bee446b4833c7314c0306c3563b2281bc4f123", "committedDate": "2020-12-28T10:40:35Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e60c5be59599e3f048d368cbbc5b01dabeb8f0a9", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/e60c5be59599e3f048d368cbbc5b01dabeb8f0a9", "committedDate": "2021-01-04T09:40:15Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "901fb104446e1ba56780503a88c905483763bdca", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/901fb104446e1ba56780503a88c905483763bdca", "committedDate": "2021-01-04T16:57:41Z", "message": "Fix issues from reviews\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6226abb4aa45949e2028a71b2f161bf44bbcad0c", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/6226abb4aa45949e2028a71b2f161bf44bbcad0c", "committedDate": "2021-01-04T17:00:27Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjA1NTI4", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-561205528", "createdAt": "2021-01-04T17:27:50Z", "commit": {"oid": "6226abb4aa45949e2028a71b2f161bf44bbcad0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNTc5MTYy", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-561579162", "createdAt": "2021-01-05T08:00:37Z", "commit": {"oid": "6226abb4aa45949e2028a71b2f161bf44bbcad0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b44777a0b44989e2ac2d183e1f8ee663195180b", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/4b44777a0b44989e2ac2d183e1f8ee663195180b", "committedDate": "2021-01-05T14:46:13Z", "message": "Remove swagger\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7813e3f2e6f1c714680b659f949b407ca481818d", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/7813e3f2e6f1c714680b659f949b407ca481818d", "committedDate": "2021-01-05T15:14:59Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61962741938cf627baf05bbe600e77a747c3f36d", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/61962741938cf627baf05bbe600e77a747c3f36d", "committedDate": "2021-01-05T15:29:42Z", "message": "Remove integration test categorization changes\n\nSigned-off-by: Petr Plavjanik <petr.plavjanik@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzg3MjEz", "url": "https://github.com/zowe/api-layer/pull/1005#pullrequestreview-562387213", "createdAt": "2021-01-06T07:56:50Z", "commit": {"oid": "61962741938cf627baf05bbe600e77a747c3f36d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a97aa1c40b1435147d79581d33cde8f1f52b708", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/0a97aa1c40b1435147d79581d33cde8f1f52b708", "committedDate": "2021-01-06T08:01:17Z", "message": "Merge branch 'master' into protectors/GH873/service-info-endpoint"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4795, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}