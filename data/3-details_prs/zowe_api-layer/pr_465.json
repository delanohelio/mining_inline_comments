{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTc5ODkw", "number": 465, "title": "Add PassTicket implementation (WIP)", "bodyText": "Adds support for backend service that accepts PassTickets.\nMore details in documentation draft: zowe/docs-site#889\nF94239\nTasks to do:\n\n Clean up messages:\n\n DS - ERROR (c.c.m.d.GatewayNotifier) Gateway application doesn't exists, cannot be notified about service change - display after some time since startup and make it numbered, change: does not exist\n GW - INFO  (n.s.e.p.* - change log level for the package n.s.e.p to WARN in the default profile and keep it INFO in debug profile\n\n\n Define new error messages as numbered - see https://docs.zowe.org/stable/extend/extend-apiml/api-mediation-message-service.html#api-ml-logger", "createdAt": "2020-01-06T15:03:21Z", "url": "https://github.com/zowe/api-layer/pull/465", "merged": true, "mergeCommit": {"oid": "acc4cfa868793434a7a9c3c445ce5e99f401f22e"}, "closed": true, "closedAt": "2020-01-16T14:45:37Z", "author": {"login": "JirkaAichler"}, "timelineItems": {"totalCount": 82, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABbu7Z-cgH2gAyMzU5NTc5ODkwOjk3YTg1OTUwZDJiOThhYTE5ZDZmY2NjM2M4MjJlNDViODk5ZGE3MDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb66y78AH2gAyMzU5NTc5ODkwOjdiNWRlYjhmNTVjMGNiOTRiMjA0OWNjYmI4NGUwNzgxMWRkMzY5NjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97a85950d2b98aa19d6fccc3c822e45b899da700", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/97a85950d2b98aa19d6fccc3c822e45b899da700", "committedDate": "2019-12-10T08:08:13Z", "message": "Programs to research PassTickets\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "361acd56eeee1c95ebdea8d3aed24187fdc48f80", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/361acd56eeee1c95ebdea8d3aed24187fdc48f80", "committedDate": "2019-12-11T09:27:46Z", "message": "Download test artificats\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81edbb8c5509f3b239015a163e8884a5fcaa6991", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/81edbb8c5509f3b239015a163e8884a5fcaa6991", "committedDate": "2019-12-11T09:28:11Z", "message": "TopSecret job\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7fe02da6daf3c4f334894772be85d803aa1302d", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/a7fe02da6daf3c4f334894772be85d803aa1302d", "committedDate": "2019-12-11T09:30:14Z", "message": "Draft documentation\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "877810043ea698b9e42cdee42f73fd9f45b824af", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/877810043ea698b9e42cdee42f73fd9f45b824af", "committedDate": "2019-12-11T14:29:43Z", "message": "Updated PassTicket documentation\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "526e6dafe54af490d224465f65b90351fe3189fe", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/526e6dafe54af490d224465f65b90351fe3189fe", "committedDate": "2019-12-11T14:31:43Z", "message": "US634092 - Support new authentication metadata in the static API definitions\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d42d819884d2e46cfb01705bd5bedddd14b0795", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/9d42d819884d2e46cfb01705bd5bedddd14b0795", "committedDate": "2019-12-11T15:07:21Z", "message": "Test for invalid authentication scheme values\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c711de256308a3739a9056478d5d0b28bd3b62ec", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/c711de256308a3739a9056478d5d0b28bd3b62ec", "committedDate": "2019-12-13T12:28:33Z", "message": "Sample static service with PassTickets\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ea25933a3718a24d5d0cc29ea4ed6e84a28ead5", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/4ea25933a3718a24d5d0cc29ea4ed6e84a28ead5", "committedDate": "2019-12-17T09:50:39Z", "message": "Dynamic proxy and using IRRPassTicket service, static additional data and update on service register, refactor of creating static services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "195a1e9e95d482fc714969591fa99981d2cff276", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/195a1e9e95d482fc714969591fa99981d2cff276", "committedDate": "2020-01-02T12:45:48Z", "message": "Concept of authentication commands (ByPass, Zosmf and Passticket implemented, contains also ZoweJwt draft), support logout method,"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7d8aae910497200799725b599528611f6a8a077", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/d7d8aae910497200799725b599528611f6a8a077", "committedDate": "2020-01-02T13:16:47Z", "message": "fix unused import (checkstyle)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "547c8e3e5f19dd23abe61ea223eacb09b066bcfe", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/547c8e3e5f19dd23abe61ea223eacb09b066bcfe", "committedDate": "2020-01-02T13:33:06Z", "message": "fix gateway startup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75015861c93c0c28ae1335de4d0eae99eb9f768b", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/75015861c93c0c28ae1335de4d0eae99eb9f768b", "committedDate": "2020-01-02T15:44:05Z", "message": "fix passticket proxy (make as public class to allow call methods)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f51af44145ab9004825192bda8c861474aacbb32", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/f51af44145ab9004825192bda8c861474aacbb32", "committedDate": "2020-01-06T08:51:00Z", "message": "notification of gateways about services from discovery service that they were changed to evict caches in there"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "305831a3a5a96a7d3c54f97346c2523e9f95c3b0", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/305831a3a5a96a7d3c54f97346c2523e9f95c3b0", "committedDate": "2020-01-06T11:30:00Z", "message": "Add missing setup step for new users\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "273e1c8d68742651dfab7ef28b3c174db7ba9414", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/273e1c8d68742651dfab7ef28b3c174db7ba9414", "committedDate": "2020-01-06T13:03:27Z", "message": "Add /ticket endpoint to generate PassTickets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87c20ba884215967e18f107926f6636832dca35f", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/87c20ba884215967e18f107926f6636832dca35f", "committedDate": "2020-01-06T13:14:03Z", "message": "PassTicket integration test\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4d015739fe675eca95ded8faa6ccf4578ebcbbf", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/a4d015739fe675eca95ded8faa6ccf4578ebcbbf", "committedDate": "2020-01-06T14:57:18Z", "message": "wip! Making the integration test work\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2396b426f1c8a5080b71ee21834e1c51ba100b1", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/f2396b426f1c8a5080b71ee21834e1c51ba100b1", "committedDate": "2020-01-06T15:04:01Z", "message": "Merge branch 'master' into protectors/passticket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bc174d4d89bb928f217377c3e13e87f8f59df2b", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/7bc174d4d89bb928f217377c3e13e87f8f59df2b", "committedDate": "2020-01-07T08:21:20Z", "message": "Import the right HttpServletRequest class\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cc69ed0f0a086637e46249382d33a4438646ee7", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/3cc69ed0f0a086637e46249382d33a4438646ee7", "committedDate": "2020-01-07T09:59:13Z", "message": "Disable default Spring Security Configuration for discoverable-client\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58a190956ce222e0970b96cdfe3b33221a514c2f", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/58a190956ce222e0970b96cdfe3b33221a514c2f", "committedDate": "2020-01-07T09:59:54Z", "message": "Remove extra passTicketService bean creation\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5948bb7a0b09e6e2dd1d3c9a1f86380b8ee55788", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/5948bb7a0b09e6e2dd1d3c9a1f86380b8ee55788", "committedDate": "2020-01-07T10:00:56Z", "message": "wip - Ignore broken tests\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccd203dcfdd4e55df05f0757dcad579558c642e5", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/ccd203dcfdd4e55df05f0757dcad579558c642e5", "committedDate": "2020-01-07T10:01:08Z", "message": "Refactor PassTicket tests\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd04e95fbae4d2790ebb86053f2581aae683a059", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/bd04e95fbae4d2790ebb86053f2581aae683a059", "committedDate": "2020-01-07T10:51:43Z", "message": "Removing documentation that has been migrated to docs-site\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc640436bbc5fda3140e7d5becab63c34df83e78", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/bc640436bbc5fda3140e7d5becab63c34df83e78", "committedDate": "2020-01-07T11:23:35Z", "message": "mapping exception on Proxy (+ using in PassTickerService)\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78c07ea999714e596ce0fcc88cfbe291764599a4", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/78c07ea999714e596ce0fcc88cfbe291764599a4", "committedDate": "2020-01-07T11:55:28Z", "message": "Merge remote-tracking branch 'origin/protectors/passticket' into protectors/passticket\n\n# Conflicts:\n#\tgateway-service/src/main/java/com/ca/mfaas/gateway/filters/pre/ServiceAuthenticationFilter.java\n#\tgateway-service/src/main/java/com/ca/mfaas/gateway/security/service/ServiceAuthenticationServiceImpl.java\n#\tgateway-service/src/test/java/com/ca/mfaas/gateway/filters/pre/ServiceAuthenticationFilterTest.java\n#\tgateway-service/src/test/java/com/ca/mfaas/gateway/security/service/ServiceAuthenticationServiceImplTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e08b82e686a8cabcfa9d548aee3b4512e4625028", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/e08b82e686a8cabcfa9d548aee3b4512e4625028", "committedDate": "2020-01-07T13:16:39Z", "message": "fix build and test on security (without fixes in discoverable client)\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87af4be71d1768027a23284e43eb11d390d9c834", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/87af4be71d1768027a23284e43eb11d390d9c834", "committedDate": "2020-01-07T13:53:33Z", "message": "Fix broken PassTicketTestController initialization\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aabe4aaacd24d72bc8a8dd56d1293043a62ded12", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/aabe4aaacd24d72bc8a8dd56d1293043a62ded12", "committedDate": "2020-01-07T13:56:05Z", "message": "Fix broken integration tests\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a1efe245df13c98edf1d6b0207042137cda7941", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/0a1efe245df13c98edf1d6b0207042137cda7941", "committedDate": "2020-01-07T14:44:28Z", "message": "Deprecate old ZosmfFilter\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14d357c9165bad7e9459632c3f786b655aa8a767", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/14d357c9165bad7e9459632c3f786b655aa8a767", "committedDate": "2020-01-07T15:38:29Z", "message": "PassTicketTestController MockMvc tests\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7f4fef91517b1d672fe04d546cd3c46591430f0", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/f7f4fef91517b1d672fe04d546cd3c46591430f0", "committedDate": "2020-01-07T15:50:26Z", "message": "improve dummy passticket service to serve similar result to real one\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d547f40f2f02bea2420638f13d16ec32de57e883", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/d547f40f2f02bea2420638f13d16ec32de57e883", "committedDate": "2020-01-07T16:06:26Z", "message": "Support predefined passticket in dummy PassTicketService\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ef7fefc5a0cfce2be7fc10c37d4755229079355", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/1ef7fefc5a0cfce2be7fc10c37d4755229079355", "committedDate": "2020-01-07T16:35:07Z", "message": "Fix message when token is invalid + add integration test\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "350ff913c8238d6e2593184167365e2e4203dc15", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/350ff913c8238d6e2593184167365e2e4203dc15", "committedDate": "2020-01-08T07:35:08Z", "message": "Use user.dir for EHCache since the /tmp is not good\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bd1c157798955cfa028c8852193ef9a7f02ca80", "author": {"user": {"login": "pj892031", "name": "Pavel Jare\u0161"}}, "url": "https://github.com/zowe/api-layer/commit/8bd1c157798955cfa028c8852193ef9a7f02ca80", "committedDate": "2020-01-08T09:18:32Z", "message": "refactor cleaning cache by parameter into CacheUtils\n\nSigned-off-by: Pavel Jare\u0161 <pavel.jares@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0ac20cd60836b5c544abec30bedbb561671c952", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/d0ac20cd60836b5c544abec30bedbb561671c952", "committedDate": "2020-01-08T11:33:03Z", "message": "Ignore EHCache working files\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e346ce66ef6b13a463179be203729f41ea91589a", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/e346ce66ef6b13a463179be203729f41ea91589a", "committedDate": "2020-01-08T13:45:50Z", "message": "Disable banner\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1db1d359f415855731158a12bd61786b576dc9de", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/1db1d359f415855731158a12bd61786b576dc9de", "committedDate": "2020-01-08T13:46:14Z", "message": "Ignore EHCache lock\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b97dffac9e4c219ce8f4e938e9e401743bbccf5c", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/b97dffac9e4c219ce8f4e938e9e401743bbccf5c", "committedDate": "2020-01-08T13:48:56Z", "message": "Add PassTicket integration test with bad APPLID\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3b2d5b64b0cb7738a07a9e993189811c38e412e", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/a3b2d5b64b0cb7738a07a9e993189811c38e412e", "committedDate": "2020-01-08T13:55:52Z", "message": "Revert \"Disable banner\"\n\nThis reverts commit e346ce66ef6b13a463179be203729f41ea91589a."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "266c963fb987db8a97ce63c2eb7b003935a54331", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/266c963fb987db8a97ce63c2eb7b003935a54331", "committedDate": "2020-01-08T14:22:57Z", "message": "Dummy implementation for invalid applid in evaluation\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b10dd8c4dd7fdce78050420a856bbf911202f3dc", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/b10dd8c4dd7fdce78050420a856bbf911202f3dc", "committedDate": "2020-01-08T14:30:43Z", "message": "Fix the error text that is expected\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a0c50f61fb3a8ac58c1d0dcbcc2b4ee27f41c30", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/5a0c50f61fb3a8ac58c1d0dcbcc2b4ee27f41c30", "committedDate": "2020-01-08T16:46:19Z", "message": "Merge branch 'master' into protectors/passticket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f015dd4e3a30b13cd0cabf9581338dda7ce767", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/57f015dd4e3a30b13cd0cabf9581338dda7ce767", "committedDate": "2020-01-09T07:58:45Z", "message": "Make HttpBasicPassTicketSchemeTest more stable\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d989da5b7d9d2189722bfef768459bf3b0b8729b", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/d989da5b7d9d2189722bfef768459bf3b0b8729b", "committedDate": "2020-01-09T09:19:28Z", "message": "Fix OpenApi 3 parser\nUpdate Gateway swagger to contain /ticket endpoint\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c8f6972d6d46f0cdeef5ae974038a34f3859735", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/6c8f6972d6d46f0cdeef5ae974038a34f3859735", "committedDate": "2020-01-09T15:45:21Z", "message": "Merge branch 'master' into protectors/passticket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f30e3d73ab020820c51a27a23f04b06d6261354", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/6f30e3d73ab020820c51a27a23f04b06d6261354", "committedDate": "2020-01-09T16:14:14Z", "message": "Suppress GatewayNotifier error message during startup\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ddbb9840771d0799aa1c4913fcd315f11117d7a", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/6ddbb9840771d0799aa1c4913fcd315f11117d7a", "committedDate": "2020-01-09T16:17:34Z", "message": "Only warnings and errors for EHCache\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b729cdf002cb4316d117a50e6b98a9272aeb46d", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/7b729cdf002cb4316d117a50e6b98a9272aeb46d", "committedDate": "2020-01-09T16:17:41Z", "message": "Merge branch 'protectors/passticket' of https://github.com/zowe/api-layer into protectors/passticket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "511f53032fb4fc7c40d9cfc1133889347c9a0f73", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/511f53032fb4fc7c40d9cfc1133889347c9a0f73", "committedDate": "2020-01-09T16:40:18Z", "message": "fixup!\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a5b8c480486138a4f7b475d7875846c2516d025", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/6a5b8c480486138a4f7b475d7875846c2516d025", "committedDate": "2020-01-09T17:18:14Z", "message": "Numberred error message for GatewayNotifier\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb9c65be734a8c629b9c7c5deea0ce8512c883f1", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/eb9c65be734a8c629b9c7c5deea0ce8512c883f1", "committedDate": "2020-01-10T06:38:47Z", "message": "Use @depracated tag as SonarQube recommends\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4d10c23d85fe9eaa2e64d41bffef467dbd3fa30", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/d4d10c23d85fe9eaa2e64d41bffef467dbd3fa30", "committedDate": "2020-01-10T07:38:14Z", "message": "User a dedicated exception for exception mapping errors\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a010935454c17c25045950863e95328863d76d3c", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/a010935454c17c25045950863e95328863d76d3c", "committedDate": "2020-01-10T07:49:45Z", "message": "Use dedicated exception for authentication problems in PassTicket service\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5ea878da70fba0411275015c9f230267ea148f6", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/d5ea878da70fba0411275015c9f230267ea148f6", "committedDate": "2020-01-10T08:26:05Z", "message": "Delete temporary files\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDExNjky", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-341011692", "createdAt": "2020-01-10T08:28:38Z", "commit": {"oid": "d5ea878da70fba0411275015c9f230267ea148f6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62ca288fb2d4bdb2d19f624c76c8cfa89427b4ba", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/62ca288fb2d4bdb2d19f624c76c8cfa89427b4ba", "committedDate": "2020-01-10T08:31:40Z", "message": "Correct order of expected and actual in the test\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c6883c17be7a82ec50ff64f351a9ae4f284b9d4", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/0c6883c17be7a82ec50ff64f351a9ae4f284b9d4", "committedDate": "2020-01-10T08:33:02Z", "message": "Use dedicated authentication exception\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMDYxMDA0", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-341061004", "createdAt": "2020-01-10T10:01:46Z", "commit": {"oid": "0c6883c17be7a82ec50ff64f351a9ae4f284b9d4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMjMzNDMx", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-341233431", "createdAt": "2020-01-10T15:24:33Z", "commit": {"oid": "0c6883c17be7a82ec50ff64f351a9ae4f284b9d4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToyNDozM1rOFcXSuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToyOToyMVrOFcXdOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI4NjA3NQ==", "bodyText": "It looks like this method is not used anywhere", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r365286075", "createdAt": "2020-01-10T15:24:33Z", "author": {"login": "taban03"}, "path": "apiml-security-common/src/main/java/com/ca/apiml/security/common/service/PassTicketService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.apiml.security.common.service;\n+\n+import com.ca.mfaas.util.ClassOrDefaultProxyUtils;\n+import lombok.AllArgsConstructor;\n+import lombok.Value;\n+import org.apache.commons.lang.StringUtils;\n+import org.springframework.stereotype.Service;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This method allow to get a PassTicket from SAF.\n+ */\n+@Service\n+public class PassTicketService {\n+\n+    private IRRPassTicket irrPassTicket;\n+\n+    @PostConstruct\n+    public void init() {\n+        this.irrPassTicket = ClassOrDefaultProxyUtils.createProxy(IRRPassTicket.class,\n+                \"com.ibm.eserver.zos.racf.IRRPassTicket\", DefaultPassTicketImpl::new,\n+                new ClassOrDefaultProxyUtils.ByMethodName<IRRPassTicketEvaluationException>(\n+                        \"com.ibm.eserver.zos.racf.IRRPassTicketEvaluationException\",\n+                        IRRPassTicketEvaluationException.class, \"getSafRc\", \"getRacfRsn\", \"getRacfRc\"),\n+                new ClassOrDefaultProxyUtils.ByMethodName<IRRPassTicketGenerationException>(\n+                        \"com.ibm.eserver.zos.racf.IRRPassTicketGenerationException\",\n+                        IRRPassTicketGenerationException.class, \"getSafRc\", \"getRacfRsn\", \"getRacfRc\"));\n+    }\n+\n+    public void evaluate(String userId, String applId, String passTicket) throws IRRPassTicketEvaluationException {\n+        irrPassTicket.evaluate(userId, applId, passTicket);\n+    }\n+\n+    public String generate(String userId, String applId) throws IRRPassTicketGenerationException {\n+        return irrPassTicket.generate(userId, applId);\n+    }\n+\n+    public boolean isUsingSafImplementation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c6883c17be7a82ec50ff64f351a9ae4f284b9d4"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI4ODc2MA==", "bodyText": "int delayFactor is never used even tho is passed", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r365288760", "createdAt": "2020-01-10T15:29:21Z", "author": {"login": "taban03"}, "path": "apiml-common/src/main/java/com/ca/mfaas/product/service/ServiceStartupEventHandler.java", "diffHunk": "@@ -20,19 +20,21 @@\n \n public class ServiceStartupEventHandler {\n     public static final int DEFAULT_DELAY_FACTOR = 5;\n-    private final ApimlLogger apimlLog = ApimlLogger.of(ServiceStartupEventHandler.class, YamlMessageServiceInstance.getInstance());\n+    private final ApimlLogger apimlLog = ApimlLogger.of(ServiceStartupEventHandler.class,\n+            YamlMessageServiceInstance.getInstance());\n \n     @SuppressWarnings(\"squid:S1172\")\n     public void onServiceStartup(String serviceName, int delayFactor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c6883c17be7a82ec50ff64f351a9ae4f284b9d4"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eae34dff913fc3e443a45a32695a1f0498536bae", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/eae34dff913fc3e443a45a32695a1f0498536bae", "committedDate": "2020-01-10T22:01:08Z", "message": "Merge branch 'master' into protectors/passticket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6c66dba50e02cdaf0682c30414b300183e4ea16", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/e6c66dba50e02cdaf0682c30414b300183e4ea16", "committedDate": "2020-01-13T06:58:54Z", "message": "Make ServiceStartupEventHandler use the delayFactor parameter\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d54e3dcfd4f11158f9c98d462ed8539f1e7e83d2", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/d54e3dcfd4f11158f9c98d462ed8539f1e7e83d2", "committedDate": "2020-01-13T06:59:09Z", "message": "Merge branch 'protectors/passticket' of https://github.com/zowe/api-layer into protectors/passticket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjU5ODEy", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-341659812", "createdAt": "2020-01-13T07:00:15Z", "commit": {"oid": "d54e3dcfd4f11158f9c98d462ed8539f1e7e83d2"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc6a6269972d8739369ea0485e6f2c5c1871a7ae", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/bc6a6269972d8739369ea0485e6f2c5c1871a7ae", "committedDate": "2020-01-14T07:00:20Z", "message": "Remove proposal word from finalized metadata\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2f9f9246e577469d83614d3ec9b131ba953cba8", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/b2f9f9246e577469d83614d3ec9b131ba953cba8", "committedDate": "2020-01-14T08:31:00Z", "message": "Remove non-robust test with hardcoded version\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/8ad2b7609dfb04e3c2f42e748390d2be4ebced80", "committedDate": "2020-01-14T08:31:10Z", "message": "Typo fix\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/3db9bb555857f5847cf2b61639ed1862fa723cb8", "committedDate": "2020-01-14T15:22:01Z", "message": "PassTicket diagram with API ML\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDI3MjI5", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-340427229", "createdAt": "2020-01-09T10:36:39Z", "commit": {"oid": "d989da5b7d9d2189722bfef768459bf3b0b8729b"}, "state": "COMMENTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMDozNjozOVrOFbxhbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNTozMzoyOVrOFdbr8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY2NzI0NA==", "bodyText": "Do you think this step is necessary ? gradle build will trigger ```pnpm install``. Won't it?", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r364667244", "createdAt": "2020-01-09T10:36:39Z", "author": {"login": "ilkinabdullayev"}, "path": "README.md", "diffHunk": "@@ -17,25 +17,39 @@ Following platform is required to run the API Mediation Layer:\n \n Following tools are required to build and develop API Mediation Layer:\n \n-Nodejs and npm are required to be installed globally to be able to build the API Catalog ui\n+* Node.js and npm are required to be installed globally to be able to build the API Catalog UI\n \n ## Quick start\n \n 1. Install the package manager `pnpm` globally in order to build the project:\n-    \n-        npm add -g pnpm\n-    \n-2. Install `concurrently` globally:\n-   \n-       npm install -g concurrently\n-       \n-3. Build all modules:\n \n-       ./gradlew build\n+    ```sh\n+    npm add -g pnpm\n+    ```\n \n-4. Run all service on local machine:\n+2. Install npm packages for the UI:\n \n-       npm run api-layer\n+    ```sh\n+    cd api-catalog-ui/frontend/; pnpm install; cd ../..\n+    ```\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d989da5b7d9d2189722bfef768459bf3b0b8729b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MDQzMA==", "bodyText": "Do u think it is good idea to be dependent from library outcome? My point is that these tests would be failed, if vendor changed message.\nhttps://github.com/swagger-api/swagger-parser/blob/master/modules/swagger-parser-v3/src/main/java/io/swagger/v3/parser/OpenAPIV3Parser.java line:219", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r364750430", "createdAt": "2020-01-09T13:56:12Z", "author": {"login": "ilkinabdullayev"}, "path": "api-catalog-services/src/test/java/com/ca/mfaas/apicatalog/swagger/api/ApiDocV3ServiceTest.java", "diffHunk": "@@ -108,13 +109,24 @@ public void givenOpenApiValidJson_whenApiDocTransform_thenCheckUpdatedValues() {\n     }\n \n     @Test\n-    public void givenInvalidJson_whenApiDocTransform_thenThrowExeption() throws IOException {\n+    public void givenEmptyJson_whenApiDocTransform_thenThrowException() {\n         String invalidJson = \"\";\n         ApiInfo apiInfo = new ApiInfo(\"org.zowe.apicatalog\", \"api/v1\", \"3.0.0\", \"https://localhost:10014/apicatalog/api-doc\", \"https://www.zowe.org\");\n         ApiDocInfo apiDocInfo = new ApiDocInfo(apiInfo, invalidJson, null);\n \n         exceptionRule.expect(UnexpectedTypeException.class);\n-        exceptionRule.expectMessage(\"Response is not an OpenAPI type object.\");\n+        exceptionRule.expectMessage(\"No swagger supplied\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d989da5b7d9d2189722bfef768459bf3b0b8729b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MDc2Mg==", "bodyText": "Same case like a givenEmptyJson_whenApiDocTransform_thenThrowException", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r364750762", "createdAt": "2020-01-09T13:56:51Z", "author": {"login": "ilkinabdullayev"}, "path": "api-catalog-services/src/test/java/com/ca/mfaas/apicatalog/swagger/api/ApiDocV3ServiceTest.java", "diffHunk": "@@ -108,13 +109,24 @@ public void givenOpenApiValidJson_whenApiDocTransform_thenCheckUpdatedValues() {\n     }\n \n     @Test\n-    public void givenInvalidJson_whenApiDocTransform_thenThrowExeption() throws IOException {\n+    public void givenEmptyJson_whenApiDocTransform_thenThrowException() {\n         String invalidJson = \"\";\n         ApiInfo apiInfo = new ApiInfo(\"org.zowe.apicatalog\", \"api/v1\", \"3.0.0\", \"https://localhost:10014/apicatalog/api-doc\", \"https://www.zowe.org\");\n         ApiDocInfo apiDocInfo = new ApiDocInfo(apiInfo, invalidJson, null);\n \n         exceptionRule.expect(UnexpectedTypeException.class);\n-        exceptionRule.expectMessage(\"Response is not an OpenAPI type object.\");\n+        exceptionRule.expectMessage(\"No swagger supplied\");\n+        apiDocV3Service.transformApiDoc(SERVICE_ID, apiDocInfo);\n+    }\n+\n+    @Test\n+    public void givenInvalidJson_whenApiDocTransform_thenThrowException() {\n+        String invalidJson = \"nonsense\";\n+        ApiInfo apiInfo = new ApiInfo(\"org.zowe.apicatalog\", \"api/v1\", \"3.0.0\", \"https://localhost:10014/apicatalog/api-doc\", \"https://www.zowe.org\");\n+        ApiDocInfo apiDocInfo = new ApiDocInfo(apiInfo, invalidJson, null);\n+\n+        exceptionRule.expect(UnexpectedTypeException.class);\n+        exceptionRule.expectMessage(\"attribute openapi is not of type `object`\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d989da5b7d9d2189722bfef768459bf3b0b8729b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMxMTQyNA==", "bodyText": "Unused", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366311424", "createdAt": "2020-01-14T12:31:00Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/security/ticket/ApplicationNameNotFoundException.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.mfaas.gateway.security.ticket;\n+\n+/**\n+ * Exception thrown when applicationName parameter was not provided\n+ */\n+public class ApplicationNameNotFoundException extends Exception {\n+\n+    public ApplicationNameNotFoundException(String message) {\n+        super(message);\n+    }\n+\n+    public ApplicationNameNotFoundException(String message, Throwable cause) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3MDQ5OA==", "bodyText": "Response true or false? Please consider about api design... Can be 204 if everything is ok, otherwise you can say what is a problem with api response.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366370498", "createdAt": "2020-01-14T14:32:08Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/controllers/AuthController.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.mfaas.gateway.controllers;\n+\n+import com.ca.mfaas.gateway.security.service.AuthenticationService;\n+import lombok.AllArgsConstructor;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * Controller offer method to control security. It can contains method for user and also method for calling services\n+ * by gateway to distribute state of authentication between nodes.\n+ */\n+@AllArgsConstructor\n+@RestController\n+@RequestMapping(\"/auth\")\n+public class AuthController {\n+\n+    private final AuthenticationService authenticationService;\n+\n+    @DeleteMapping(path = \"/invalidate/**\")\n+    public Boolean invalidateJwtToken(HttpServletRequest request) {\n+        final String path = \"/auth/invalidate/\";\n+        final String uri = request.getRequestURI();\n+        final int index = uri.indexOf(path);\n+\n+        final String jwtToken = (index >= 0) ? uri.substring(index + path.length()) : \"\";\n+        return authenticationService.invalidateJwtToken(jwtToken, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3MTUwNw==", "bodyText": "Why all of gateway urls start with /api/v1/gateway/* except this.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366371507", "createdAt": "2020-01-14T14:33:46Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/controllers/AuthController.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.mfaas.gateway.controllers;\n+\n+import com.ca.mfaas.gateway.security.service.AuthenticationService;\n+import lombok.AllArgsConstructor;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+/**\n+ * Controller offer method to control security. It can contains method for user and also method for calling services\n+ * by gateway to distribute state of authentication between nodes.\n+ */\n+@AllArgsConstructor\n+@RestController\n+@RequestMapping(\"/auth\")\n+public class AuthController {\n+\n+    private final AuthenticationService authenticationService;\n+\n+    @DeleteMapping(path = \"/invalidate/**\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3NDEyOA==", "bodyText": "There is a comment \"gateway have to exists\". Can you explain a little why we need to check ?", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366374128", "createdAt": "2020-01-14T14:38:30Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/security/service/AuthenticationService.java", "diffHunk": "@@ -69,6 +92,53 @@ public String createJwtToken(String username, String domain, String ltpaToken) {\n             .compact();\n     }\n \n+    /**\n+     * Method will invalidate jwtToken. It could be called from two reasons:\n+     * - on logout phase (distribute = true)\n+     * - from another gateway instance to notify about change (distribute = false)\n+     *\n+     * @param jwtToken   token to invalidated\n+     * @param distribute distribute invalidation to another instances?\n+     * @return state of invalidate (true - token was invalidated)\n+     */\n+    @CacheEvict(value = \"validationJwtToken\", key = \"#jwtToken\")\n+    @Cacheable(value = \"invalidatedJwtTokens\", key = \"#jwtToken\", condition = \"#jwtToken != null\")\n+    public Boolean invalidateJwtToken(String jwtToken, boolean distribute) {\n+        /*\n+         * until ehCache is not distributed, send to other instances invalidation request\n+         */\n+        if (distribute) {\n+            final Application application = discoveryClient.getApplication(\"gateway\");\n+            // wrong state, gateway have to exists (at least this current instance), return false like unsuccessful", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM3NzQwMQ==", "bodyText": "Method doesn't give to any message to consumer. I meant it used by api controller. So i requested api /invalidate and it returns false. What does it mean?\nDo we need return boolean? Can we be more specific?", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366377401", "createdAt": "2020-01-14T14:44:13Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/security/service/AuthenticationService.java", "diffHunk": "@@ -69,6 +92,53 @@ public String createJwtToken(String username, String domain, String ltpaToken) {\n             .compact();\n     }\n \n+    /**\n+     * Method will invalidate jwtToken. It could be called from two reasons:\n+     * - on logout phase (distribute = true)\n+     * - from another gateway instance to notify about change (distribute = false)\n+     *\n+     * @param jwtToken   token to invalidated\n+     * @param distribute distribute invalidation to another instances?\n+     * @return state of invalidate (true - token was invalidated)\n+     */\n+    @CacheEvict(value = \"validationJwtToken\", key = \"#jwtToken\")\n+    @Cacheable(value = \"invalidatedJwtTokens\", key = \"#jwtToken\", condition = \"#jwtToken != null\")\n+    public Boolean invalidateJwtToken(String jwtToken, boolean distribute) {\n+        /*\n+         * until ehCache is not distributed, send to other instances invalidation request\n+         */\n+        if (distribute) {\n+            final Application application = discoveryClient.getApplication(\"gateway\");\n+            // wrong state, gateway have to exists (at least this current instance), return false like unsuccessful\n+            if (application == null) return Boolean.FALSE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM4NjgxMg==", "bodyText": "path=\"\" is redundant", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366386812", "createdAt": "2020-01-14T14:59:39Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/main/java/com/ca/mfaas/gateway/controllers/CacheServiceController.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.mfaas.gateway.controllers;\n+\n+import com.ca.mfaas.gateway.security.service.ServiceCacheEvict;\n+import lombok.AllArgsConstructor;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+\n+/**\n+ * This controller allows control the caches about services. The main purpose is to evict cached data\n+ * about services when a update happened in discovery service. Discovery service notifies about any\n+ * change to be sure that cache on gateway is still valid.\n+ */\n+@AllArgsConstructor\n+@RestController\n+@RequestMapping(\"/cache/services\")\n+public class CacheServiceController {\n+\n+    private final List<ServiceCacheEvict> toEvict;\n+\n+    @DeleteMapping(path = \"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5MTc0OA==", "bodyText": "Please check it, it is not fully covered.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366391748", "createdAt": "2020-01-14T15:08:08Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/controllers/AuthControllerTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.ca.mfaas.gateway.controllers;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import com.ca.mfaas.gateway.security.service.AuthenticationService;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.setup.MockMvcBuilders;\n+\n+import static org.mockito.Mockito.*;\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+public class AuthControllerTest {\n+\n+    private MockMvc mockMvc;\n+\n+    @Mock\n+    private AuthenticationService authenticationService;\n+\n+    private AuthController authController;\n+\n+    @Before\n+    public void setUp() {\n+        authController = new AuthController(authenticationService);\n+        mockMvc = MockMvcBuilders.standaloneSetup(authController).build();\n+    }\n+\n+    @Test\n+    public void invalidateJwtToken() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NTc2MQ==", "bodyText": "Please split unit test to small ones. It is too big. And name test methods regarding to what you test.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366395761", "createdAt": "2020-01-14T15:14:59Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/security/service/schema/ZosmfSchemeTest.java", "diffHunk": "@@ -0,0 +1,99 @@\n+package com.ca.mfaas.gateway.security.service.schema;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import com.ca.apiml.security.common.auth.Authentication;\n+import com.ca.apiml.security.common.auth.AuthenticationScheme;\n+import com.ca.apiml.security.common.token.QueryResponse;\n+import com.ca.apiml.security.common.token.TokenNotValidException;\n+import com.ca.mfaas.gateway.security.service.AuthenticationService;\n+import com.netflix.zuul.context.RequestContext;\n+import io.jsonwebtoken.JwtException;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.util.Calendar;\n+import java.util.Optional;\n+\n+import static com.ca.mfaas.gateway.security.service.schema.ZosmfScheme.ZosmfCommand.COOKIE_HEADER;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.*;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ZosmfSchemeTest {\n+\n+    @Mock\n+    private AuthenticationService authenticationService;\n+\n+    @InjectMocks\n+    private ZosmfScheme zosmfScheme;\n+\n+    @Test\n+    public void testCreateCommand() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NjM0OA==", "bodyText": "And it is not fully covered.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366396348", "createdAt": "2020-01-14T15:16:01Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/security/service/schema/ZosmfSchemeTest.java", "diffHunk": "@@ -0,0 +1,99 @@\n+package com.ca.mfaas.gateway.security.service.schema;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import com.ca.apiml.security.common.auth.Authentication;\n+import com.ca.apiml.security.common.auth.AuthenticationScheme;\n+import com.ca.apiml.security.common.token.QueryResponse;\n+import com.ca.apiml.security.common.token.TokenNotValidException;\n+import com.ca.mfaas.gateway.security.service.AuthenticationService;\n+import com.netflix.zuul.context.RequestContext;\n+import io.jsonwebtoken.JwtException;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.util.Calendar;\n+import java.util.Optional;\n+\n+import static com.ca.mfaas.gateway.security.service.schema.ZosmfScheme.ZosmfCommand.COOKIE_HEADER;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.*;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class ZosmfSchemeTest {\n+\n+    @Mock\n+    private AuthenticationService authenticationService;\n+\n+    @InjectMocks\n+    private ZosmfScheme zosmfScheme;\n+\n+    @Test\n+    public void testCreateCommand() throws Exception {\n+        Calendar calendar = Calendar.getInstance();\n+        Authentication authentication = new Authentication(AuthenticationScheme.ZOSMF, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NzYyMw==", "bodyText": "Please split unit test to small ones. It is too big. And name test methods regarding to what you test.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366397623", "createdAt": "2020-01-14T15:18:12Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/security/service/schema/HttpBasicPassTicketSchemeTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package com.ca.mfaas.gateway.security.service.schema;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import com.ca.apiml.security.common.auth.Authentication;\n+import com.ca.apiml.security.common.auth.AuthenticationScheme;\n+import com.ca.apiml.security.common.service.PassTicketService;\n+import com.ca.apiml.security.common.token.QueryResponse;\n+import com.netflix.zuul.context.RequestContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.util.Calendar;\n+\n+import static org.junit.Assert.*;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class HttpBasicPassTicketSchemeTest {\n+\n+    private final int PASSTICKET_DURATION = 300;\n+\n+    @Mock\n+    private PassTicketService passTicketService;\n+\n+    @InjectMocks\n+    private HttpBasicPassTicketScheme httpBasicPassTicketScheme;\n+\n+    @Before\n+    public void init() {\n+        ReflectionTestUtils.setField(httpBasicPassTicketScheme, \"timeout\", PASSTICKET_DURATION);\n+    }\n+\n+    @Test\n+    public void testCreateCommand() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM5NzgxNQ==", "bodyText": "And it is not fully covered.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366397815", "createdAt": "2020-01-14T15:18:31Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/security/service/schema/HttpBasicPassTicketSchemeTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package com.ca.mfaas.gateway.security.service.schema;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import com.ca.apiml.security.common.auth.Authentication;\n+import com.ca.apiml.security.common.auth.AuthenticationScheme;\n+import com.ca.apiml.security.common.service.PassTicketService;\n+import com.ca.apiml.security.common.token.QueryResponse;\n+import com.netflix.zuul.context.RequestContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.util.Calendar;\n+\n+import static org.junit.Assert.*;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class HttpBasicPassTicketSchemeTest {\n+\n+    private final int PASSTICKET_DURATION = 300;\n+\n+    @Mock\n+    private PassTicketService passTicketService;\n+\n+    @InjectMocks\n+    private HttpBasicPassTicketScheme httpBasicPassTicketScheme;\n+\n+    @Before\n+    public void init() {\n+        ReflectionTestUtils.setField(httpBasicPassTicketScheme, \"timeout\", PASSTICKET_DURATION);\n+    }\n+\n+    @Test\n+    public void testCreateCommand() throws Exception {\n+        Calendar calendar = Calendar.getInstance();\n+        Authentication authentication = new Authentication(AuthenticationScheme.HTTP_BASIC_PASSTICKET, \"applid\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQwNjY0Mw==", "bodyText": "Test is too big", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366406643", "createdAt": "2020-01-14T15:33:29Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/test/java/com/ca/mfaas/gateway/security/service/schema/AuthenticationSchemeFactoryTest.java", "diffHunk": "@@ -0,0 +1,199 @@\n+package com.ca.mfaas.gateway.security.service.schema;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import com.ca.apiml.security.common.auth.Authentication;\n+import com.ca.apiml.security.common.auth.AuthenticationScheme;\n+import com.ca.apiml.security.common.token.QueryResponse;\n+import com.ca.mfaas.gateway.security.service.AuthenticationService;\n+import com.netflix.zuul.context.RequestContext;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.util.Arrays;\n+import java.util.Date;\n+import java.util.Optional;\n+\n+import static org.junit.Assert.*;\n+import static org.mockito.Mockito.*;\n+\n+@RunWith(JUnit4.class)\n+public class AuthenticationSchemeFactoryTest {\n+\n+    private static final AuthenticationCommand COMMAND = mock(AuthenticationCommand.class);\n+\n+    private AbstractAuthenticationScheme createScheme(final AuthenticationScheme scheme, final boolean isDefault) {\n+        return new AbstractAuthenticationScheme() {\n+            @Override\n+            public AuthenticationScheme getScheme() {\n+                return scheme;\n+            }\n+\n+            @Override\n+            public boolean isDefault() {\n+                return isDefault;\n+            }\n+\n+            @Override\n+            public AuthenticationCommand createCommand(Authentication authentication, QueryResponse token) {\n+                return COMMAND;\n+            }\n+        };\n+    }\n+\n+    @Before\n+    public void init() {\n+        RequestContext.testSetCurrentContext(null);\n+    }\n+\n+    @Test\n+    public void testInit() {\n+        // happy day\n+        new AuthenticationSchemeFactory(\n+            mock(AuthenticationService.class),\n+            Arrays.asList(\n+                createScheme(AuthenticationScheme.BYPASS, true),\n+                createScheme(AuthenticationScheme.HTTP_BASIC_PASSTICKET, false),\n+                createScheme(AuthenticationScheme.ZOWE_JWT, false)\n+            )\n+        );\n+\n+        // no default\n+        try {\n+            new AuthenticationSchemeFactory(\n+                mock(AuthenticationService.class),\n+                Arrays.asList(\n+                    createScheme(AuthenticationScheme.BYPASS, false),\n+                    createScheme(AuthenticationScheme.HTTP_BASIC_PASSTICKET, false),\n+                    createScheme(AuthenticationScheme.ZOWE_JWT, false)\n+                )\n+            );\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            assertTrue(e.getMessage().contains(\"No scheme\"));\n+        }\n+\n+        // multiple default\n+        try {\n+            new AuthenticationSchemeFactory(\n+                mock(AuthenticationService.class),\n+                Arrays.asList(\n+                    createScheme(AuthenticationScheme.BYPASS, true),\n+                    createScheme(AuthenticationScheme.HTTP_BASIC_PASSTICKET, true),\n+                    createScheme(AuthenticationScheme.ZOWE_JWT, false)\n+                )\n+            );\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            assertTrue(e.getMessage().contains(\"Multiple scheme\"));\n+            assertTrue(e.getMessage().contains(\"as default\"));\n+            assertTrue(e.getMessage().contains(AuthenticationScheme.BYPASS.getScheme()));\n+            assertTrue(e.getMessage().contains(AuthenticationScheme.HTTP_BASIC_PASSTICKET.getScheme()));\n+        }\n+    }\n+\n+    @Test\n+    public void testGetSchema() {\n+        AuthenticationSchemeFactory asf = new AuthenticationSchemeFactory(\n+            mock(AuthenticationService.class),\n+            Arrays.asList(\n+                createScheme(AuthenticationScheme.BYPASS, true),\n+                createScheme(AuthenticationScheme.HTTP_BASIC_PASSTICKET, false),\n+                createScheme(AuthenticationScheme.ZOWE_JWT, false)\n+            )\n+        );\n+\n+        assertEquals(AuthenticationScheme.BYPASS, asf.getSchema(AuthenticationScheme.BYPASS).getScheme());\n+        assertEquals(AuthenticationScheme.HTTP_BASIC_PASSTICKET, asf.getSchema(AuthenticationScheme.HTTP_BASIC_PASSTICKET).getScheme());\n+        assertEquals(AuthenticationScheme.ZOWE_JWT, asf.getSchema(AuthenticationScheme.ZOWE_JWT).getScheme());\n+        // default one\n+        assertEquals(AuthenticationScheme.BYPASS, asf.getSchema(null).getScheme());\n+    }\n+\n+    @Test\n+    public void testGetAuthenticationCommand() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad2b7609dfb04e3c2f42e748390d2be4ebced80"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMDYyMTI0", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343062124", "createdAt": "2020-01-15T08:52:20Z", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwODo1MjoyMVrOFdw5gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwODo1MjoyMVrOFdw5gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc1NDE3OA==", "bodyText": "That line is not covered fully by tests.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366754178", "createdAt": "2020-01-15T08:52:21Z", "author": {"login": "ilkinabdullayev"}, "path": "apiml-security-common/src/main/java/com/ca/apiml/security/common/auth/Authentication.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.apiml.security.common.auth;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+/**\n+ * Information about expected authentication scheme and APPLID for PassTickets generation.\n+ */\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class Authentication {\n+\n+    private AuthenticationScheme scheme;\n+    private String applid;\n+\n+    public boolean isEmpty() {\n+        return (scheme == null) && (applid == null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMDc2Njcw", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343076670", "createdAt": "2020-01-15T09:17:35Z", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxNzozNVrOFdxl2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxNzozNVrOFdxl2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2NTUzMQ==", "bodyText": "What is this class for? I understand it is designed to have apiml.security.auth.passTicket.timeout property. But it is totally unused.\nI checked apiml.security.auth.passTicket.timeout param is being used with @Value(\"${apiml.security.auth.passTicket.timeout:540}\"). So this param is called by spring feature, not by AuthConfigurationProperties.\nAnother point is that default value of apiml.security.auth.passTicket.timeout is mentioned as two value:\n   @Data\n    public static class PassTicket {\n        private Integer timeout = 360;\n    }\n@Value(\"${apiml.security.auth.passTicket.timeout:540}\")", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366765531", "createdAt": "2020-01-15T09:17:35Z", "author": {"login": "ilkinabdullayev"}, "path": "apiml-security-common/src/main/java/com/ca/apiml/security/common/config/AuthConfigurationProperties.java", "diffHunk": "@@ -62,9 +65,15 @@\n         private Integer cookieMaxAge = -1;\n     }\n \n+    @Data\n+    public static class PassTicket {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMDc3NzQ1", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343077745", "createdAt": "2020-01-15T09:19:21Z", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxOToyMlrOFdxo-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToxOToyMlrOFdxo-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2NjMzMQ==", "bodyText": "Not fully covered", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366766331", "createdAt": "2020-01-15T09:19:22Z", "author": {"login": "ilkinabdullayev"}, "path": "apiml-security-common/src/test/java/com/ca/apiml/security/common/auth/AuthenticationSchemeTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.ca.apiml.security.common.auth;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+import static org.junit.Assert.*;\n+@RunWith(JUnit4.class)\n+public class AuthenticationSchemeTest {\n+\n+    @Test\n+    public void testFromScheme() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMDg2Nzcw", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343086770", "createdAt": "2020-01-15T09:34:16Z", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOTozNDoxNlrOFdyEfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOTozNDoxNlrOFdyEfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc3MzM3NQ==", "bodyText": "do you think this check should be removed?", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366773375", "createdAt": "2020-01-15T09:34:16Z", "author": {"login": "ilkinabdullayev"}, "path": "api-catalog-ui/frontend/cypress/integration/e2e/detail-page/detail-page.test.js", "diffHunk": "@@ -90,8 +90,6 @@ describe('>>> Detail page test', () => {\n \n         cy.contains('Service Homepage').should('exist');\n \n-        cy.get('pre.version').should('contain', '1.1.2');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMTAyMTkw", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343102190", "createdAt": "2020-01-15T09:58:44Z", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOTo1ODo0NVrOFdy0xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOTo1ODo0NVrOFdy0xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc4NTczMw==", "bodyText": "What is intended with @Order?", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366785733", "createdAt": "2020-01-15T09:58:45Z", "author": {"login": "ilkinabdullayev"}, "path": "apiml-security-common/src/test/java/com/ca/apiml/security/common/service/PassTicketServiceTest.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.apiml.security.common.service;\n+\n+import com.ca.mfaas.util.ClassOrDefaultProxyUtils;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.test.util.ReflectionTestUtils;\n+\n+import static org.junit.Assert.*;\n+\n+@RunWith(SpringRunner.class)\n+@ContextConfiguration\n+public class PassTicketServiceTest {\n+\n+    private static final String TEST_USERID = \"userId\";\n+\n+    @Autowired\n+    private PassTicketService passTicketService;\n+\n+    private static String evaluated;\n+\n+    @Test\n+    @Order(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMTk2NTA0", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343196504", "createdAt": "2020-01-15T12:53:41Z", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjo1Mzo0MVrOFd3TLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMjo1Mzo0MVrOFd3TLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg1OTA1Mw==", "bodyText": "ObjectUtil.requireNotNull(userId, \"Parameter userId is empty\");\n  ObjectUtil.requireNotNull(applId, \"Parameter applId is empty\");\n  ObjectUtil.requireNotNull(passTicket, \"Parameter passTicket is empty\");", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366859053", "createdAt": "2020-01-15T12:53:41Z", "author": {"login": "ilkinabdullayev"}, "path": "apiml-security-common/src/main/java/com/ca/apiml/security/common/service/PassTicketService.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.apiml.security.common.service;\n+\n+import com.ca.mfaas.util.ClassOrDefaultProxyUtils;\n+import lombok.AllArgsConstructor;\n+import lombok.Value;\n+import org.apache.commons.lang.StringUtils;\n+import org.springframework.stereotype.Service;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * This method allow to get a PassTicket from SAF.\n+ */\n+@Service\n+public class PassTicketService {\n+\n+    private IRRPassTicket irrPassTicket;\n+\n+    @PostConstruct\n+    public void init() {\n+        this.irrPassTicket = ClassOrDefaultProxyUtils.createProxy(IRRPassTicket.class,\n+                \"com.ibm.eserver.zos.racf.IRRPassTicket\", DefaultPassTicketImpl::new,\n+                new ClassOrDefaultProxyUtils.ByMethodName<IRRPassTicketEvaluationException>(\n+                        \"com.ibm.eserver.zos.racf.IRRPassTicketEvaluationException\",\n+                        IRRPassTicketEvaluationException.class, \"getSafRc\", \"getRacfRsn\", \"getRacfRc\"),\n+                new ClassOrDefaultProxyUtils.ByMethodName<IRRPassTicketGenerationException>(\n+                        \"com.ibm.eserver.zos.racf.IRRPassTicketGenerationException\",\n+                        IRRPassTicketGenerationException.class, \"getSafRc\", \"getRacfRsn\", \"getRacfRc\"));\n+    }\n+\n+    public void evaluate(String userId, String applId, String passTicket) throws IRRPassTicketEvaluationException {\n+        irrPassTicket.evaluate(userId, applId, passTicket);\n+    }\n+\n+    public String generate(String userId, String applId) throws IRRPassTicketGenerationException {\n+        return irrPassTicket.generate(userId, applId);\n+    }\n+\n+    public boolean isUsingSafImplementation() {\n+        ClassOrDefaultProxyUtils.ClassOrDefaultProxyState stateInterface = (ClassOrDefaultProxyUtils.ClassOrDefaultProxyState) irrPassTicket;\n+        return stateInterface.isUsingBaseImplementation();\n+    }\n+\n+    public static class DefaultPassTicketImpl implements IRRPassTicket {\n+\n+        private static int id = 0;\n+\n+        public static final String ZOWE_DUMMY_USERID = \"user\";\n+        public static final String ZOWE_DUMMY_PASS_TICKET_PREFIX = \"ZoweDummyPassTicket\";\n+\n+        public static final String UNKWNOWN_USER = \"unknownUser\";\n+        public static final String UNKWNOWN_APPLID = \"XBADAPPL\";\n+\n+        private Map<UserApp, Set<String>> userAppToPasstickets = new HashMap<>();\n+\n+        @Override\n+        public void evaluate(String userId, String applId, String passTicket) throws IRRPassTicketEvaluationException {\n+            if (userId == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjk2NDQx", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343296441", "createdAt": "2020-01-15T15:19:55Z", "commit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNToxOTo1NlrOFd73tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNToxOTo1NlrOFd73tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkzMzk0Mg==", "bodyText": "throw new IRRPassTicketEvaluationException(8, 16, 28); //easy to make mistake\n  throw new IRRPassTicketEvaluationException(ErrorCode.ERR_8_8_16);", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r366933942", "createdAt": "2020-01-15T15:19:56Z", "author": {"login": "ilkinabdullayev"}, "path": "apiml-security-common/src/main/java/com/ca/apiml/security/common/service/AbstractIRRPassTicketException.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package com.ca.apiml.security.common.service;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+/**\n+ * Abstact exception from IRR passticket service. It collect common values about exception\n+ */\n+@AllArgsConstructor\n+@Getter\n+public abstract class AbstractIRRPassTicketException extends Exception {\n+\n+    private static final long serialVersionUID = -6233392272992529775L;\n+\n+    protected final int safRc;\n+    protected final int racfRsn;\n+    protected final int racfRc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db9bb555857f5847cf2b61639ed1862fa723cb8"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6325a6eb156ffa24810268809074ffd9840328c9", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/6325a6eb156ffa24810268809074ffd9840328c9", "committedDate": "2020-01-16T09:08:05Z", "message": "Merge branch 'master' into protectors/passticket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNzkxNjk0", "url": "https://github.com/zowe/api-layer/pull/465#pullrequestreview-343791694", "createdAt": "2020-01-16T09:56:15Z", "commit": {"oid": "6325a6eb156ffa24810268809074ffd9840328c9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwOTo1NjoxNVrOFeTxiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMjo0OTozMFrOFeYQpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzMyNTU3Nw==", "bodyText": "Redundant", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r367325577", "createdAt": "2020-01-16T09:56:15Z", "author": {"login": "ilkinabdullayev"}, "path": "apiml-security-common/src/test/java/com/ca/apiml/security/common/token/QueryResponseTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.ca.apiml.security.common.token;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+import java.util.Calendar;\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+@RunWith(JUnit4.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6325a6eb156ffa24810268809074ffd9840328c9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM4ODM2NA==", "bodyText": "Our intention was to keep common-service-core as isolated from spring dependencies.  I would like to ask that why don't you keep your classes( which depend on these spring-deps) in apiml-common module?", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r367388364", "createdAt": "2020-01-16T12:21:40Z", "author": {"login": "ilkinabdullayev"}, "path": "common-service-core/build.gradle", "diffHunk": "@@ -9,7 +9,11 @@ dependencies {\n \n     compileOnly(libraries.javax_servlet_api)\n     compileOnly(libraries.lombok)\n+    compileOnly(libraries.spring_boot_starter_cache)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6325a6eb156ffa24810268809074ffd9840328c9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5OTA3OA==", "bodyText": "Not fully covered.", "url": "https://github.com/zowe/api-layer/pull/465#discussion_r367399078", "createdAt": "2020-01-16T12:49:30Z", "author": {"login": "ilkinabdullayev"}, "path": "common-service-core/src/test/java/com/ca/mfaas/cache/CompositeKeyGeneratorTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.ca.mfaas.cache;/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.JUnit4;\n+\n+import java.lang.reflect.Method;\n+\n+import static org.junit.Assert.*;\n+\n+@RunWith(JUnit4.class)\n+public class CompositeKeyGeneratorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6325a6eb156ffa24810268809074ffd9840328c9"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "065d35ce80aa1c7468cb13b36cc4c137fe9badef", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/065d35ce80aa1c7468cb13b36cc4c137fe9badef", "committedDate": "2020-01-16T13:28:14Z", "message": "Add certificate protection for /ticket endpoint\nAdd integration tests for /ticket endpoint\nFix error handling\n\nSigned-off-by: JirkaAichler <jiri.aichler@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b5deb8f55c0cb94b2049ccbb84e07811dd36965", "author": {"user": {"login": "JirkaAichler", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/7b5deb8f55c0cb94b2049ccbb84e07811dd36965", "committedDate": "2020-01-16T14:12:40Z", "message": "Merge branch 'master' into protectors/passticket"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4950, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}