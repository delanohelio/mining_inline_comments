{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMTcyNTI3", "number": 566, "title": "Export z/OSMF JWT public key", "bodyText": "Provides entry point to retrieve public key from z/OSMF JWK endpoint.\nIt will be used by Zowe configuration scripts - see zowe/zowe-install-packaging#1208\nIt cannot be used later since Zowe certificate files are marked as read-only at the end of installation.\nSigned-off-by: Petr Plavjanik plavjanik@gmail.com", "createdAt": "2020-03-19T18:39:16Z", "url": "https://github.com/zowe/api-layer/pull/566", "merged": true, "mergeCommit": {"oid": "f5eec35d99fd3f0ba37fdfd0e062a653c353633e"}, "closed": true, "closedAt": "2020-03-25T09:23:28Z", "author": {"login": "plavjanik"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPQNvRAH2gAyMzkxMTcyNTI3OjFmYjQ4YTFmMDIzMDA2NmEyNzVlY2M4ZGFmZTk2YjRhYjQwNDczNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRDwlxgFqTM4MDk2MjI0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/1fb48a1f0230066a275ecc8dafe96b4ab404736c", "committedDate": "2020-03-19T18:28:26Z", "message": "Export z/OSMF JWT public key\n\nSigned-off-by: Petr Plavjanik <plavjanik@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTI0ODE2", "url": "https://github.com/zowe/api-layer/pull/566#pullrequestreview-378124816", "createdAt": "2020-03-19T22:02:22Z", "commit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMjowMjoyMlrOF5B6qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMjowNDowNVrOF5B9Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NDU1Mw==", "bodyText": "Could be written using block (row) of data instant of chars", "url": "https://github.com/zowe/api-layer/pull/566#discussion_r395344553", "createdAt": "2020-03-19T22:02:22Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/login/zosmf/JwkToPublicKeyConverter.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.security.login.zosmf;\n+\n+import java.security.PublicKey;\n+import java.text.ParseException;\n+import java.util.Base64;\n+\n+import com.nimbusds.jose.JOSEException;\n+import com.nimbusds.jose.jwk.JWKSet;\n+\n+public class JwkToPublicKeyConverter {\n+\n+    /**\n+     * Converts the first public key in JWT in JSON to PEM format.\n+     */\n+    public String convertFirstPublicKeyJwkToPem(String jwkJson) {\n+        try {\n+            PublicKey key = JWKSet.parse(jwkJson).toPublicJWKSet().getKeys().get(0).toRSAKey().toPublicKey();\n+            String encoded = Base64.getEncoder().encodeToString(key.getEncoded());\n+            StringBuilder s = new StringBuilder();\n+            s.append(\"-----BEGIN PUBLIC KEY-----\");\n+            for (int i = 0; i < encoded.length(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NDkzNQ==", "bodyText": "I think it is not necessary to check last character, it can write one row with 65 characters", "url": "https://github.com/zowe/api-layer/pull/566#discussion_r395344935", "createdAt": "2020-03-19T22:03:23Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/login/zosmf/JwkToPublicKeyConverter.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.security.login.zosmf;\n+\n+import java.security.PublicKey;\n+import java.text.ParseException;\n+import java.util.Base64;\n+\n+import com.nimbusds.jose.JOSEException;\n+import com.nimbusds.jose.jwk.JWKSet;\n+\n+public class JwkToPublicKeyConverter {\n+\n+    /**\n+     * Converts the first public key in JWT in JSON to PEM format.\n+     */\n+    public String convertFirstPublicKeyJwkToPem(String jwkJson) {\n+        try {\n+            PublicKey key = JWKSet.parse(jwkJson).toPublicJWKSet().getKeys().get(0).toRSAKey().toPublicKey();\n+            String encoded = Base64.getEncoder().encodeToString(key.getEncoded());\n+            StringBuilder s = new StringBuilder();\n+            s.append(\"-----BEGIN PUBLIC KEY-----\");\n+            for (int i = 0; i < encoded.length(); i++) {\n+                if (((i % 64) == 0) && (i != (encoded.length() - 1))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NDk5MQ==", "bodyText": "'s'", "url": "https://github.com/zowe/api-layer/pull/566#discussion_r395344991", "createdAt": "2020-03-19T22:03:32Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/login/zosmf/JwkToPublicKeyConverter.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.security.login.zosmf;\n+\n+import java.security.PublicKey;\n+import java.text.ParseException;\n+import java.util.Base64;\n+\n+import com.nimbusds.jose.JOSEException;\n+import com.nimbusds.jose.jwk.JWKSet;\n+\n+public class JwkToPublicKeyConverter {\n+\n+    /**\n+     * Converts the first public key in JWT in JSON to PEM format.\n+     */\n+    public String convertFirstPublicKeyJwkToPem(String jwkJson) {\n+        try {\n+            PublicKey key = JWKSet.parse(jwkJson).toPublicJWKSet().getKeys().get(0).toRSAKey().toPublicKey();\n+            String encoded = Base64.getEncoder().encodeToString(key.getEncoded());\n+            StringBuilder s = new StringBuilder();\n+            s.append(\"-----BEGIN PUBLIC KEY-----\");\n+            for (int i = 0; i < encoded.length(); i++) {\n+                if (((i % 64) == 0) && (i != (encoded.length() - 1))) {\n+                    s.append(\"\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NTE5NQ==", "bodyText": "It can use BufferedWriter", "url": "https://github.com/zowe/api-layer/pull/566#discussion_r395345195", "createdAt": "2020-03-19T22:04:05Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/login/zosmf/ZosmfJwkToPublicKey.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+package org.zowe.apiml.gateway.security.login.zosmf;\n+\n+import java.io.FileNotFoundException;\n+import java.io.PrintWriter;\n+\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.client.HttpClientErrorException;\n+import org.springframework.web.client.RestTemplate;\n+\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Component\n+@RequiredArgsConstructor\n+@Slf4j\n+public class ZosmfJwkToPublicKey {\n+\n+    protected final RestTemplate restTemplateWithoutKeystore;\n+\n+    /**\n+     * Write public key that can be used to validate z/OSMF JWT tokens.\n+     * @param zosmfUrl Base URL of z/OSMF without trailing /\n+     * @param filename File name of the resulting PEM file\n+     * @return True when the file has been updated\n+     * @throws FileNotFoundException when the filename is invalid\n+     */\n+    public boolean updateJwtPublicKeyFile(String zosmfUrl, String filename) throws FileNotFoundException {\n+        try {\n+            String jwkJson = restTemplateWithoutKeystore.getForObject(zosmfUrl + \"/jwt/ibm/api/zOSMFBuilder/jwk\",\n+                    String.class);\n+            JwkToPublicKeyConverter converter = new JwkToPublicKeyConverter();\n+            String pem = converter.convertFirstPublicKeyJwkToPem(jwkJson);\n+            try (PrintWriter out = new PrintWriter(filename)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4Mjg5MDE3", "url": "https://github.com/zowe/api-layer/pull/566#pullrequestreview-378289017", "createdAt": "2020-03-20T08:12:30Z", "commit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODoxMjozMFrOF5KhPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODoxMjozMFrOF5KhPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ4NTUwMg==", "bodyText": "Just info. Up to you :)\nhttps://www.baeldung.com/junit-5-temporary-directory", "url": "https://github.com/zowe/api-layer/pull/566#discussion_r395485502", "createdAt": "2020-03-20T08:12:30Z", "author": {"login": "ilkinabdullayev"}, "path": "gateway-service/src/test/java/org/zowe/apiml/gateway/security/login/zosmf/ZosmfJwkToPublicKeyTest.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * This program and the accompanying materials are made available under the terms of the\n+ * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-v20.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Copyright Contributors to the Zowe Project.\n+ */\n+\n+package org.zowe.apiml.gateway.security.login.zosmf;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.web.client.RestTemplate;\n+\n+public class ZosmfJwkToPublicKeyTest {\n+\n+    @Test\n+    public void zosmfJwkIsConvertedToPublicKey() throws IOException {\n+        RestTemplate restTemplate = mock(RestTemplate.class);\n+        String jwk = \"{\\\"keys\\\":[{\\\"kty\\\":\\\"RSA\\\",\\\"e\\\":\\\"AQAB\\\",\\\"use\\\":\\\"sig\\\",\\\"kid\\\":\\\"ozG_ySMHRsVQFmN1mVBeS-WtCupY1r-K7ewben09IBg\\\",\\\"alg\\\":\\\"RS256\\\",\\\"n\\\":\\\"wRdwksGIAR2A4cHsoOsYcGp5AmQl5ZjF5xIPXeyjkaLHmNTMvjixdWso1ecVlVeg_6pIXzMRhmOvmjXjz1PLfI2GD3drmeqsStjISWdDfH_rIQCYc9wYbWIZ3bQ0wFRDaVpZ6iOZ2iNcIevvZQKNw9frJthKSMM52JtsgwrgN--Ub2cKWioU_d52SC2SfDzOdnChqlU7xkqXwKXSUqcGM92A35dJJXkwbZhAHnDy5FST1HqYq27MOLzBkChw1bJQHZtlSqkxcHPxphnnbFKQmwRVUvyC5kfBemX-7Mzp1wDogt5lGvBAf3Eq8rFxaevAke327rM7q2KqO_LDMN2J-Q\\\"}]}\";\n+        String expectedPublicKey = \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwRdwksGIAR2A4cHsoOsY\\ncGp5AmQl5ZjF5xIPXeyjkaLHmNTMvjixdWso1ecVlVeg/6pIXzMRhmOvmjXjz1PL\\nfI2GD3drmeqsStjISWdDfH/rIQCYc9wYbWIZ3bQ0wFRDaVpZ6iOZ2iNcIevvZQKN\\nw9frJthKSMM52JtsgwrgN++Ub2cKWioU/d52SC2SfDzOdnChqlU7xkqXwKXSUqcG\\nM92A35dJJXkwbZhAHnDy5FST1HqYq27MOLzBkChw1bJQHZtlSqkxcHPxphnnbFKQ\\nmwRVUvyC5kfBemX+7Mzp1wDogt5lGvBAf3Eq8rFxaevAke327rM7q2KqO/LDMN2J\\n+QIDAQAB\\n-----END PUBLIC KEY-----\";\n+\n+        when(restTemplate.getForObject(\"https://zosmf:1433/jwt/ibm/api/zOSMFBuilder/jwk\", String.class)).thenReturn(jwk);\n+\n+        ZosmfJwkToPublicKey zosmfJwkToPublicKey = new ZosmfJwkToPublicKey(restTemplate);\n+\n+        File f = File.createTempFile(\"jwt\", null, new File(System.getProperty(\"java.io.tmpdir\")));\n+        try {\n+            String filename = f.getName();\n+            assertTrue(zosmfJwkToPublicKey.updateJwtPublicKeyFile(\"https://zosmf:1433\", filename));\n+            assertEquals(expectedPublicKey, new String(Files.readAllBytes(Paths.get(filename))).trim());\n+        } finally {\n+            f.delete();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb48a1f0230066a275ecc8dafe96b4ab404736c"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b2850e2d79f7fb21fe45546a1440139a5eea333", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/7b2850e2d79f7fb21fe45546a1440139a5eea333", "committedDate": "2020-03-20T11:30:20Z", "message": "Enable using z/OSMF JWT token if supported by z/OSMF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be747164d9f9b43bbf9e55005babfa525ce0c2d4", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/be747164d9f9b43bbf9e55005babfa525ce0c2d4", "committedDate": "2020-03-20T11:32:38Z", "message": "Merge branch 'master' into zosmf-jwt-public-key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a2a2aa8c5eaeec5de23ee4896022b5dca4aa61e", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/5a2a2aa8c5eaeec5de23ee4896022b5dca4aa61e", "committedDate": "2020-03-24T10:01:23Z", "message": "Merge branch 'master' into zosmf-jwt-public-key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9301324e8a03aeb1bd2c53817072dda03ab15c9", "author": {"user": {"login": "plavjanik", "name": "Petr Plavjanik"}}, "url": "https://github.com/zowe/api-layer/commit/a9301324e8a03aeb1bd2c53817072dda03ab15c9", "committedDate": "2020-03-25T07:22:33Z", "message": "Merge branch 'master' into zosmf-jwt-public-key"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTYyMjQ4", "url": "https://github.com/zowe/api-layer/pull/566#pullrequestreview-380962248", "createdAt": "2020-03-25T09:05:36Z", "commit": {"oid": "a9301324e8a03aeb1bd2c53817072dda03ab15c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4930, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}