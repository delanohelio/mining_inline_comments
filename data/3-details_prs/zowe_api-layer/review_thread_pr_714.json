{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MDUyMjIy", "number": 714, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMDowMVrOEF1hdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMjoxN1rOEF1kwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTU1MjUyOnYy", "diffSide": "LEFT", "path": "apiml-common/src/main/resources/logback.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMDowMVrOGkQ1dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMDowMVrOGkQ1dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3Nzc0OQ==", "bodyText": "Any reason why the filter is commented out?", "url": "https://github.com/zowe/api-layer/pull/714#discussion_r440677749", "createdAt": "2020-06-16T08:30:01Z", "author": {"login": "balhar-jakub"}, "path": "apiml-common/src/main/resources/logback.xml", "diffHunk": "@@ -5,9 +5,9 @@\n     <turboFilter class=\"org.zowe.apiml.product.logging.UseridFilter\"/>\n     <turboFilter class=\"org.zowe.apiml.product.logging.ApimlDependencyLogHider\"/>\n     <turboFilter class=\"org.zowe.apiml.product.logging.LogLevelInfoFilter\"/>\n-    <turboFilter class=\"ch.qos.logback.classic.turbo.DuplicateMessageFilter\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a71c053f935969f5e3804385a591c59f0914b64"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTU1NDc3OnYy", "diffSide": "RIGHT", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/cache/ServiceCacheEvictor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMDozN1rOGkQ23g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMDozN1rOGkQ23g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3ODExMA==", "bodyText": "Isn't the closing tag missing?", "url": "https://github.com/zowe/api-layer/pull/714#discussion_r440678110", "createdAt": "2020-06-16T08:30:37Z", "author": {"login": "balhar-jakub"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/cache/ServiceCacheEvictor.java", "diffHunk": "@@ -9,38 +9,41 @@\n  */\n package org.zowe.apiml.gateway.cache;\n \n-import org.zowe.apiml.gateway.discovery.ApimlDiscoveryClient;\n-import org.zowe.apiml.gateway.ribbon.ApimlZoneAwareLoadBalancer;\n import com.netflix.discovery.CacheRefreshedEvent;\n import com.netflix.discovery.EurekaEvent;\n import com.netflix.discovery.EurekaEventListener;\n import lombok.Value;\n+import lombok.extern.slf4j.Slf4j;\n import org.springframework.stereotype.Component;\n+import org.zowe.apiml.gateway.discovery.ApimlDiscoveryClient;\n+import org.zowe.apiml.gateway.ribbon.ApimlZoneAwareLoadBalancer;\n import org.zowe.apiml.gateway.security.service.ServiceCacheEvict;\n \n import java.util.HashSet;\n import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n \n /**\n  * This class is responsible for evicting cache after new registry is loaded. This avoid race condition. Scenario is:\n  * 1. discovery service changed\n- *  a. about change is notified all gateways\n- *  b. gateways evict caches and start with mirroring of discovery into discoveryClient\n+ * a. about change is notified all gateways\n+ * b. gateways evict caches and start with mirroring of discovery into discoveryClient\n  * 2. now is possible cache again data with old settings from discovery service, because fetching new is asynchronous\n  * 3. after make fetching this beans is notified from discovery client and evict caches again\n- *\n+ * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a71c053f935969f5e3804385a591c59f0914b64"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTU1NTU4OnYy", "diffSide": "RIGHT", "path": "discovery-service/src/main/resources/application.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMDo0OVrOGkQ3Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMDo0OVrOGkQ3Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3ODIzOQ==", "bodyText": "What is the impact of this change?", "url": "https://github.com/zowe/api-layer/pull/714#discussion_r440678239", "createdAt": "2020-06-16T08:30:49Z", "author": {"login": "balhar-jakub"}, "path": "discovery-service/src/main/resources/application.yml", "diffHunk": "@@ -75,6 +75,7 @@ eureka:\n             defaultZone: ${apiml.discovery.allPeersUrls}\n     server:\n         useReadOnlyResponseCache: false\n+        enable-self-preservation: false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a71c053f935969f5e3804385a591c59f0914b64"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTU1OTUxOnYy", "diffSide": "RIGHT", "path": "settings.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMTo1NlrOGkQ6AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMTo1NlrOGkQ6AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3ODkxMg==", "bodyText": "What is this one?", "url": "https://github.com/zowe/api-layer/pull/714#discussion_r440678912", "createdAt": "2020-06-16T08:31:56Z", "author": {"login": "balhar-jakub"}, "path": "settings.gradle", "diffHunk": "@@ -33,4 +33,4 @@ include 'security-service-client-spring'\n include 'onboarding-enabler-java'\n include 'onboarding-enabler-spring'\n include 'zaas-client'\n-\n+include 'oes-app'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a71c053f935969f5e3804385a591c59f0914b64"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTU2MDk4OnYy", "diffSide": "LEFT", "path": "integration-tests/src/test/java/org/zowe/apiml/util/service/RequestVerifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMjoxN1rOGkQ61w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODozMjoxN1rOGkQ61w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY3OTEyNw==", "bodyText": "Why do you remove the functionality?", "url": "https://github.com/zowe/api-layer/pull/714#discussion_r440679127", "createdAt": "2020-06-16T08:32:17Z", "author": {"login": "balhar-jakub"}, "path": "integration-tests/src/test/java/org/zowe/apiml/util/service/RequestVerifier.java", "diffHunk": "@@ -121,12 +121,6 @@ public String getHeader(String name) {\n             return list.get(0);\n         }\n \n-        public Enumeration<String> getHeaders(String name) {\n-            List list = headersData.get(name);\n-            if (list == null) list = Collections.emptyList();\n-            return Collections.enumeration(list);\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a71c053f935969f5e3804385a591c59f0914b64"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 509, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}