{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDg0NDE5", "number": 596, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjo1OTozMFrODwR15w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzo1NTo0NFrODwS5kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTUwNTY3OnYy", "diffSide": "LEFT", "path": "integration-tests/src/test/java/org/zowe/apiml/gatewayservice/ZosmfSsoIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjo1OTozMFrOGDL83A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODowODozMVrOGDOCsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk5NDcxNg==", "bodyText": "What is the current message if not ZWAG102E?", "url": "https://github.com/zowe/api-layer/pull/596#discussion_r405994716", "createdAt": "2020-04-09T06:59:30Z", "author": {"login": "plavjanik"}, "path": "integration-tests/src/test/java/org/zowe/apiml/gatewayservice/ZosmfSsoIntegrationTest.java", "diffHunk": "@@ -126,9 +126,7 @@ public void doZosmfCallWithInvalidToken() {\n         .when()\n             .get(String.format(\"%s://%s:%d%s%s\", scheme, host, port, BASE_PATH, ZOSMF_ENDPOINT))\n         .then()\n-            .statusCode(is(SC_UNAUTHORIZED))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17dfc6414864d4e2661d956541c1afd20200ea9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk5NjE3Ng==", "bodyText": "It is same like before issue (with JWTValidationFilter), it is stopped by ServiceAuthenticationFilter. There cannot be a concrete message.", "url": "https://github.com/zowe/api-layer/pull/596#discussion_r405996176", "createdAt": "2020-04-09T07:02:50Z", "author": {"login": "pj892031"}, "path": "integration-tests/src/test/java/org/zowe/apiml/gatewayservice/ZosmfSsoIntegrationTest.java", "diffHunk": "@@ -126,9 +126,7 @@ public void doZosmfCallWithInvalidToken() {\n         .when()\n             .get(String.format(\"%s://%s:%d%s%s\", scheme, host, port, BASE_PATH, ZOSMF_ENDPOINT))\n         .then()\n-            .statusCode(is(SC_UNAUTHORIZED))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk5NDcxNg=="}, "originalCommit": {"oid": "d17dfc6414864d4e2661d956541c1afd20200ea9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyODk3Ng==", "bodyText": "I see. Thank you", "url": "https://github.com/zowe/api-layer/pull/596#discussion_r406028976", "createdAt": "2020-04-09T08:08:31Z", "author": {"login": "plavjanik"}, "path": "integration-tests/src/test/java/org/zowe/apiml/gatewayservice/ZosmfSsoIntegrationTest.java", "diffHunk": "@@ -126,9 +126,7 @@ public void doZosmfCallWithInvalidToken() {\n         .when()\n             .get(String.format(\"%s://%s:%d%s%s\", scheme, host, port, BASE_PATH, ZOSMF_ENDPOINT))\n         .then()\n-            .statusCode(is(SC_UNAUTHORIZED))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk5NDcxNg=="}, "originalCommit": {"oid": "d17dfc6414864d4e2661d956541c1afd20200ea9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxOTY3ODkwOnYy", "diffSide": "RIGHT", "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzo1NTo0NFrOGDNnYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODowODo1MVrOGDODgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyMTk4NQ==", "bodyText": "What is the purpose of this regex?", "url": "https://github.com/zowe/api-layer/pull/596#discussion_r406021985", "createdAt": "2020-04-09T07:55:44Z", "author": {"login": "plavjanik"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "diffHunk": "@@ -92,7 +96,10 @@ protected void configure(HttpSecurity http) throws Exception {\n             .authorizeRequests()\n             .antMatchers(HttpMethod.POST, authConfigurationProperties.getGatewayTicketEndpoint()).authenticated()\n             .and()\n-            .x509().userDetailsService(x509UserDetailsService())\n+            .x509()\n+                .x509AuthenticationFilter(apimlX509AuthenticationFilter())\n+                .subjectPrincipalRegex(\"CN=(.*?)(?:,|$)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17dfc6414864d4e2661d956541c1afd20200ea9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyNzc4NA==", "bodyText": "This regex is default one, to extract CN from the certificate. I used it there just because I need custom implementation.", "url": "https://github.com/zowe/api-layer/pull/596#discussion_r406027784", "createdAt": "2020-04-09T08:06:27Z", "author": {"login": "pj892031"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "diffHunk": "@@ -92,7 +96,10 @@ protected void configure(HttpSecurity http) throws Exception {\n             .authorizeRequests()\n             .antMatchers(HttpMethod.POST, authConfigurationProperties.getGatewayTicketEndpoint()).authenticated()\n             .and()\n-            .x509().userDetailsService(x509UserDetailsService())\n+            .x509()\n+                .x509AuthenticationFilter(apimlX509AuthenticationFilter())\n+                .subjectPrincipalRegex(\"CN=(.*?)(?:,|$)\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyMTk4NQ=="}, "originalCommit": {"oid": "d17dfc6414864d4e2661d956541c1afd20200ea9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyOTE4Nw==", "bodyText": "Thank you", "url": "https://github.com/zowe/api-layer/pull/596#discussion_r406029187", "createdAt": "2020-04-09T08:08:51Z", "author": {"login": "plavjanik"}, "path": "gateway-service/src/main/java/org/zowe/apiml/gateway/security/config/SecurityConfiguration.java", "diffHunk": "@@ -92,7 +96,10 @@ protected void configure(HttpSecurity http) throws Exception {\n             .authorizeRequests()\n             .antMatchers(HttpMethod.POST, authConfigurationProperties.getGatewayTicketEndpoint()).authenticated()\n             .and()\n-            .x509().userDetailsService(x509UserDetailsService())\n+            .x509()\n+                .x509AuthenticationFilter(apimlX509AuthenticationFilter())\n+                .subjectPrincipalRegex(\"CN=(.*?)(?:,|$)\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAyMTk4NQ=="}, "originalCommit": {"oid": "d17dfc6414864d4e2661d956541c1afd20200ea9"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 460, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}