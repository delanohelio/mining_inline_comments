{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzI5ODM4", "number": 554, "title": "Catalog health status depends on authorization service availability", "bodyText": "Regarding issue #402", "createdAt": "2020-03-12T16:04:26Z", "url": "https://github.com/zowe/api-layer/pull/554", "merged": true, "mergeCommit": {"oid": "8d801d110d4bf8cc41f743909d873d3b7069711e"}, "closed": true, "closedAt": "2020-03-17T10:32:07Z", "author": {"login": "cZikos"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM-AxkABqjMxMjM0OTcyNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOgMQJAFqTM3NTkxMDE3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83961d7e7311a1b77494ceffb241c3580d2db37c", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/83961d7e7311a1b77494ceffb241c3580d2db37c", "committedDate": "2020-03-12T15:54:58Z", "message": "Minor fix and tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}, "afterCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/8306d4e74ff5d94a7f53f92a2bdd51d8a3206862", "committedDate": "2020-03-12T16:07:41Z", "message": "Minor fix and tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjk3MTkz", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-373697193", "createdAt": "2020-03-12T16:10:49Z", "commit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoxMDo0OVrOF1lQ4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoxMDo0OVrOF1lQ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyOTM3OQ==", "bodyText": "Use  the given_when_then convention if possible for all the new tests", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391729379", "createdAt": "2020-03-12T16:10:49Z", "author": {"login": "taban03"}, "path": "api-catalog-services/src/test/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicatorTest.java", "diffHunk": "@@ -17,32 +18,109 @@\n import org.springframework.cloud.client.discovery.DiscoveryClient;\n \n import java.util.Collections;\n+import java.util.HashMap;\n \n import static org.junit.Assert.*;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n public class ApiCatalogHealthIndicatorTest {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n+    private static String GATEWAY_SERVICE_ID = CoreService.GATEWAY.getServiceId();\n \n     private final DiscoveryClient discoveryClient = mock(DiscoveryClient.class);\n     private final ApiCatalogHealthIndicator apiCatalogHealthIndicator = new ApiCatalogHealthIndicator(discoveryClient);\n     private final Health.Builder builder = new Health.Builder();\n \n     @Test\n-    public void testStatusIsUpWhenGatewayIsAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(\n-            Collections.singletonList(\n-                new DefaultServiceInstance(CoreService.GATEWAY.getServiceId(), \"host\", 10010, true)));\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsAvailable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNzAxODI5", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-373701829", "createdAt": "2020-03-12T16:16:30Z", "commit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoxNjozMFrOF1lfQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoxNjozMFrOF1lfQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMzA1OA==", "bodyText": "Not sure, should it be debug?\nConsider maybe using   the already existing message\n- key: org.zowe.apiml.security.zosmfInstanceNotFound number: ZWEAG108 with apimlLog.log", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391733058", "createdAt": "2020-03-12T16:16:30Z", "author": {"login": "taban03"}, "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;\n+        if (!this.discoveryClient.getInstances(gatewayServiceId).isEmpty()){\n+            authServiceId = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_ID);\n+            authServiceProvider = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_PROVIDER);\n+        }\n+        boolean authServiceUp = false;\n+        try {\n+            if (authServiceProvider.equalsIgnoreCase(ZOSMF)) {\n+                authServiceUp = !this.discoveryClient.getInstances(authServiceId).isEmpty();\n+            } else if (authServiceProvider.equalsIgnoreCase(\"dummy\")) {\n+                authServiceUp = true;\n+            }\n+        } catch (AuthenticationServiceException ex) {\n+            log.debug(\"The parameter 'zosmfServiceId' is not configured.\", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjk4MTk3", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-373698197", "createdAt": "2020-03-12T16:12:04Z", "commit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoxMjowNFrOF1lT7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoxODozNlrOF1lkug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMDE1Nw==", "bodyText": "Can you move the preparation of the metadata into the small private method?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391730157", "createdAt": "2020-03-12T16:12:04Z", "author": {"login": "balhar-jakub"}, "path": "api-catalog-services/src/test/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicatorTest.java", "diffHunk": "@@ -17,32 +18,109 @@\n import org.springframework.cloud.client.discovery.DiscoveryClient;\n \n import java.util.Collections;\n+import java.util.HashMap;\n \n import static org.junit.Assert.*;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n public class ApiCatalogHealthIndicatorTest {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n+    private static String GATEWAY_SERVICE_ID = CoreService.GATEWAY.getServiceId();\n \n     private final DiscoveryClient discoveryClient = mock(DiscoveryClient.class);\n     private final ApiCatalogHealthIndicator apiCatalogHealthIndicator = new ApiCatalogHealthIndicator(discoveryClient);\n     private final Health.Builder builder = new Health.Builder();\n \n     @Test\n-    public void testStatusIsUpWhenGatewayIsAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(\n-            Collections.singletonList(\n-                new DefaultServiceInstance(CoreService.GATEWAY.getServiceId(), \"host\", 10010, true)));\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsAvailable() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, ZOSMF);\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, ZOSMF);\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n+        apiCatalogHealthIndicator.doHealthCheck(builder);\n+\n+        assertEquals(Status.UP, builder.build().getStatus());\n+    }\n \n+    @Test\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsDummy() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, \"\");\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, \"dummy\");\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n         apiCatalogHealthIndicator.doHealthCheck(builder);\n \n         assertEquals(Status.UP, builder.build().getStatus());\n     }\n \n     @Test\n-    public void testStatusIsDownWhenGatewayIsNotAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(Collections.emptyList());\n+    public void testStatusIsDownWhenGatewayIsAvailableAndProviderIsWrong() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, \"notzosmf\");\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, ZOSMF);\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n+        apiCatalogHealthIndicator.doHealthCheck(builder);\n+\n+        assertEquals(Status.DOWN, builder.build().getStatus());\n+    }\n+\n+    @Test\n+    public void testStatusIsDownWhenGatewayIsAvailableAndProviderIsEmpty() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, ZOSMF);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTA2NQ==", "bodyText": "Following four lines are duplicates. What about moving them in the private method?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391731065", "createdAt": "2020-03-12T16:13:34Z", "author": {"login": "balhar-jakub"}, "path": "gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/GatewayHomepageControllerTest.java", "diffHunk": "@@ -120,6 +172,15 @@ public void givenApiCatalogWithEmptyInstances_whenHomePageCalled_thenHomePageMod\n \n     @Test\n     public void givenApiCatalogInstance_whenHomePageCalled_thenHomePageModelShouldContain() {\n+        ServiceInstance authserviceInstance = new DefaultServiceInstance(\"instanceId\", \"serviceId\",\n+            \"host\", 10000, true);\n+        when(discoveryClient.getInstances(\"zosmf\")).thenReturn(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTY4Mw==", "bodyText": "Is it safe to strictly link to specific authentication provider?\nIn future plans we should support SSO, wouldn't this have impact here?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391731683", "createdAt": "2020-03-12T16:14:26Z", "author": {"login": "balhar-jakub"}, "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMjE1MQ==", "bodyText": "Would it be possible to modify to remove the duplicities and deep chains?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391732151", "createdAt": "2020-03-12T16:15:13Z", "author": {"login": "balhar-jakub"}, "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;\n+        if (!this.discoveryClient.getInstances(gatewayServiceId).isEmpty()){\n+            authServiceId = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_ID);\n+            authServiceProvider = this.discoveryClient.getInstances(gatewayServiceId).get(0).getMetadata().get(AUTHENTICATION_SERVICE_PROVIDER);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMjcyNg==", "bodyText": "Would it be possible to move the check for whether authorization is up at least to separate private function?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391732726", "createdAt": "2020-03-12T16:16:01Z", "author": {"login": "balhar-jakub"}, "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMzgzNQ==", "bodyText": "There is a duplication with previous test. Move to private method?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391733835", "createdAt": "2020-03-12T16:17:37Z", "author": {"login": "balhar-jakub"}, "path": "api-catalog-services/src/test/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicatorTest.java", "diffHunk": "@@ -17,32 +18,109 @@\n import org.springframework.cloud.client.discovery.DiscoveryClient;\n \n import java.util.Collections;\n+import java.util.HashMap;\n \n import static org.junit.Assert.*;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n \n public class ApiCatalogHealthIndicatorTest {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n+    private static String GATEWAY_SERVICE_ID = CoreService.GATEWAY.getServiceId();\n \n     private final DiscoveryClient discoveryClient = mock(DiscoveryClient.class);\n     private final ApiCatalogHealthIndicator apiCatalogHealthIndicator = new ApiCatalogHealthIndicator(discoveryClient);\n     private final Health.Builder builder = new Health.Builder();\n \n     @Test\n-    public void testStatusIsUpWhenGatewayIsAvailable() {\n-        when(discoveryClient.getInstances(CoreService.GATEWAY.getServiceId())).thenReturn(\n-            Collections.singletonList(\n-                new DefaultServiceInstance(CoreService.GATEWAY.getServiceId(), \"host\", 10010, true)));\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsAvailable() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, ZOSMF);\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, ZOSMF);\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                GATEWAY_SERVICE_ID, GATEWAY_SERVICE_ID, \"host\", 10010, true, metadata)));\n+        when(discoveryClient.getInstances(ZOSMF)).thenReturn(\n+            Collections.singletonList(new DefaultServiceInstance(\n+                ZOSMF, ZOSMF, \"host\", 1443, true)));\n+        apiCatalogHealthIndicator.doHealthCheck(builder);\n+\n+        assertEquals(Status.UP, builder.build().getStatus());\n+    }\n \n+    @Test\n+    public void testStatusIsUpWhenGatewayIsAvailableAndProviderIsDummy() {\n+        HashMap<String, String> metadata = new HashMap<>();\n+        metadata.put(AUTHENTICATION_SERVICE_ID, \"\");\n+        metadata.put(AUTHENTICATION_SERVICE_PROVIDER, \"dummy\");\n+        when(discoveryClient.getInstances(GATEWAY_SERVICE_ID)).thenReturn(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczNDQ1OA==", "bodyText": "Few lines duplication with next method. Maybe extract to small private method?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391734458", "createdAt": "2020-03-12T16:18:36Z", "author": {"login": "balhar-jakub"}, "path": "gateway-service/src/test/java/org/zowe/apiml/gateway/controllers/GatewayHomepageControllerTest.java", "diffHunk": "@@ -103,8 +103,60 @@ public void givenApiCatalogWithNullInstances_whenHomePageCalled_thenHomePageMode\n         assertThat(actualModelMap, not(hasKey(\"catalogLink\")));\n     }\n \n+    @Test\n+    public void givenApiCatalogInstanceWithEmptyAuthService_whenHomePageCalled_thenHomePageModelShouldBeReportedDown() {\n+        Map<String, String> metadataMap = new HashMap<>();\n+        metadataMap.put(\"apiml.routes.ui_v1.gatewayUrl\", \"ui/v1\");\n+        metadataMap.put(\"apiml.routes.ui_v1.serviceUrl\", \"/apicatalog\");\n+        ServiceInstance serviceInstance = new DefaultServiceInstance(\"instanceId\", \"serviceId\",\n+            \"host\", 10000, true, metadataMap);\n+\n+        when(discoveryClient.getInstances(\"apicatalog\")).thenReturn(Arrays.asList(serviceInstance));\n+        when(discoveryClient.getInstances(\"zosmf\")).thenReturn(Collections.EMPTY_LIST);\n+\n+        authConfigurationProperties.setProvider(\"zosmf\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNzc2NDI4", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-373776428", "createdAt": "2020-03-12T17:51:23Z", "commit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1MToyM1rOF1pICQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxODowNToxNVrOF1pmew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5MjY0OQ==", "bodyText": "This is a sample, it shouldn't contain real information like url to internal Broadcom systems. Could you please remove it?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391792649", "createdAt": "2020-03-12T17:51:23Z", "author": {"login": "arxioly"}, "path": "config/local/api-defs/zosmf-sample.yml", "diffHunk": "@@ -14,12 +14,12 @@\n #   http --verify=keystore/local_ca/localca.cer GET https://localhost:10010/api/{zosmf-service-id}/zosmf/info 'X-CSRF-ZOSMF-HEADER;'\n #\n services:\n-    - serviceId: zosmfserviceid                                   # unique lowercase ID of the service\n+    - serviceId: zosmf                                   # unique lowercase ID of the service\n       title: IBM z/OSMF                                           # Title of the z/OSMF service in the API catalog\n       description: IBM z/OS Management Facility REST API service  # Description of the z/OSMF service in the API catalog\n       catalogUiTileId: zosmf                                      # ID of the API Catalog UI tile for z/OSMF services\n       instanceBaseUrls:                                           # list of base URLs for each instance\n-        -                                                         # scheme://hostname:port/contextPath\n+        - https://usilca32.lvn.broadcom.net:1443/zosmf/           # scheme://hostname:port/contextPath", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgwMDQ0Mw==", "bodyText": "How about replace this with:\nboolean gatewayUp = !this.discoveryClient.getInstances(gatewayServiceId).isEmpty();\nif (gatewayUp ) {\nBecause below we use the same check, in line 55.", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r391800443", "createdAt": "2020-03-12T18:05:15Z", "author": {"login": "arxioly"}, "path": "api-catalog-services/src/main/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicator.java", "diffHunk": "@@ -22,19 +24,40 @@\n  */\n @Component\n @RequiredArgsConstructor\n+@Slf4j\n public class ApiCatalogHealthIndicator extends AbstractHealthIndicator {\n+    private static String AUTHENTICATION_SERVICE_ID = \"apiml.authorizationService.zosmfServiceId\";\n+    private static String AUTHENTICATION_SERVICE_PROVIDER = \"apiml.authorizationService.provider\";\n+    private static String ZOSMF = \"zosmf\";\n \n     private final DiscoveryClient discoveryClient;\n \n     @Override\n     protected void doHealthCheck(Health.Builder builder) {\n         String gatewayServiceId = CoreService.GATEWAY.getServiceId();\n+        String authServiceId = ZOSMF;\n+        String authServiceProvider = ZOSMF;\n+        if (!this.discoveryClient.getInstances(gatewayServiceId).isEmpty()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8306d4e74ff5d94a7f53f92a2bdd51d8a3206862"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0OTU3ODE2", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-374957816", "createdAt": "2020-03-16T07:04:41Z", "commit": {"oid": "38b90bc863b908dd565d8fbeabc167776a58aca7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNzowNDo0MVrOF2nwcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNzowNDo0MVrOF2nwcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgxODgwMg==", "bodyText": "Why do you replicate the information here?\nIsn't it enough to use directly the apiml.security.auth.provider?", "url": "https://github.com/zowe/api-layer/pull/554#discussion_r392818802", "createdAt": "2020-03-16T07:04:41Z", "author": {"login": "balhar-jakub"}, "path": "gateway-service/src/main/resources/application.yml", "diffHunk": "@@ -165,7 +165,9 @@ eureka:\n                       gatewayUrl: api/v1\n                       swaggerUrl: https://${apiml.service.hostname}:${apiml.service.port}/api-doc\n                       documentationUrl: https://zowe.github.io/docs-site/\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b90bc863b908dd565d8fbeabc167776a58aca7"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "745cea5fb6ae139f439c5f0cae351373da0ddbff", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/745cea5fb6ae139f439c5f0cae351373da0ddbff", "committedDate": "2020-03-16T12:09:50Z", "message": "Merge remote-tracking branch 'origin/ptivate/DE434638/link_catalog_authService_availability' into ptivate/DE434638/link_catalog_authService_availability\n\n# Conflicts:\n#\tapi-catalog-services/src/test/java/org/zowe/apiml/apicatalog/health/ApiCatalogHealthIndicatorTest.java"}, "afterCommit": {"oid": "242727b1c69d700772266c63d1e12a6c3f4c17ff", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/242727b1c69d700772266c63d1e12a6c3f4c17ff", "committedDate": "2020-03-16T13:26:32Z", "message": "revert changes of catalog health status\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MjkyNTU1", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-375292555", "createdAt": "2020-03-16T14:52:12Z", "commit": {"oid": "6b6a0c0f8f59e24c9952c68903e83a287a61aa9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzY2ODU4", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-375366858", "createdAt": "2020-03-16T16:12:05Z", "commit": {"oid": "a810b75d428507ad8bdde96781edc5ac5eef29af"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f43333374bb43d1ae1f7888a385ba966b72a50d2", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/f43333374bb43d1ae1f7888a385ba966b72a50d2", "committedDate": "2020-03-17T08:43:53Z", "message": "Link authorization service availability with api catalog availability on Gateway Controller (+ Tests)\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a968cb4d45a5496bb2b6a9b1b1bdc0a7f2e88f5", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/8a968cb4d45a5496bb2b6a9b1b1bdc0a7f2e88f5", "committedDate": "2020-03-17T08:43:53Z", "message": "Link authorization service health status with api catalog\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c23a259ea09084e6d158ff212d25b5330c3fc81f", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/c23a259ea09084e6d158ff212d25b5330c3fc81f", "committedDate": "2020-03-17T08:43:54Z", "message": "Minor fix and tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b8c1afc33eddba63e0edee31f36a599d9872e5f", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/6b8c1afc33eddba63e0edee31f36a599d9872e5f", "committedDate": "2020-03-17T08:43:54Z", "message": "clear up health indicator code\nrestore zosmf-sample.yml_\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "320966650314d86259e3b7753888382106cf7a9d", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/320966650314d86259e3b7753888382106cf7a9d", "committedDate": "2020-03-17T08:43:54Z", "message": "Simplify the tests and remove duplicities\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e088fe1d8cc3a1d29dd2a0eb70dd9e0aa64de98", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/2e088fe1d8cc3a1d29dd2a0eb70dd9e0aa64de98", "committedDate": "2020-03-17T08:43:54Z", "message": "Remove duplicates in tests.\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a825324626f826827c7b01a49fe389647ee9d752", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/a825324626f826827c7b01a49fe389647ee9d752", "committedDate": "2020-03-17T08:43:54Z", "message": "Improve style\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bbf00a2a6b74a4c22a0c91ee09a2b415188d020", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/6bbf00a2a6b74a4c22a0c91ee09a2b415188d020", "committedDate": "2020-03-17T08:43:54Z", "message": "remove non thrown exception test\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ec2a25dda82f6e2be6c5c391b4d53c394c55649", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/0ec2a25dda82f6e2be6c5c391b4d53c394c55649", "committedDate": "2020-03-17T08:43:54Z", "message": "revert changes of catalog health status\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c462cedbebc5e736ead07c417e36468e670695ec", "author": {"user": {"login": "cZikos", "name": null}}, "url": "https://github.com/zowe/api-layer/commit/c462cedbebc5e736ead07c417e36468e670695ec", "committedDate": "2020-03-17T08:43:54Z", "message": "fix unit tests\n\nSigned-off-by: cZikos <christos.zikos@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a7c0aef6421b227b8df92fa7d29f367b69043b", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/a3a7c0aef6421b227b8df92fa7d29f367b69043b", "committedDate": "2020-03-17T08:43:54Z", "message": "Unify approach to hasItems\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a810b75d428507ad8bdde96781edc5ac5eef29af", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/a810b75d428507ad8bdde96781edc5ac5eef29af", "committedDate": "2020-03-16T14:51:49Z", "message": "Unify approach to hasItems\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>"}, "afterCommit": {"oid": "a3a7c0aef6421b227b8df92fa7d29f367b69043b", "author": {"user": {"login": "balhar-jakub", "name": "Jakub Balhar"}}, "url": "https://github.com/zowe/api-layer/commit/a3a7c0aef6421b227b8df92fa7d29f367b69043b", "committedDate": "2020-03-17T08:43:54Z", "message": "Unify approach to hasItems\n\nSigned-off-by: Jakub Balhar <jakub.balhar@broadcom.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb4fee6f38b0ed31755100bc443b2530f499b061", "author": {"user": null}, "url": "https://github.com/zowe/api-layer/commit/bb4fee6f38b0ed31755100bc443b2530f499b061", "committedDate": "2020-03-17T09:46:07Z", "message": "Merge branch 'master' into ptivate/DE434638/link_catalog_authService_availability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODgwMTA0", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-375880104", "createdAt": "2020-03-17T09:49:40Z", "commit": {"oid": "a3a7c0aef6421b227b8df92fa7d29f367b69043b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTEwMTc2", "url": "https://github.com/zowe/api-layer/pull/554#pullrequestreview-375910176", "createdAt": "2020-03-17T10:31:22Z", "commit": {"oid": "bb4fee6f38b0ed31755100bc443b2530f499b061"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4924, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}