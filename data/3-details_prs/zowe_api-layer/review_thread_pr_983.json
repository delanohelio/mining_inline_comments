{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NDUwMzUy", "number": 983, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODo0NTowNlrOFD4Lzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODo0NTowNlrOFD4Lzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjEwNTc1OnYy", "diffSide": "RIGHT", "path": "caching-service/src/main/java/org/zowe/apiml/caching/service/vsam/VsamFile.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODo0NTowNlrOIDus8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwOTowNToyM1rOIDvbPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc4MTgxMA==", "bodyText": "Maybe add a comment if it is intentionally empty?", "url": "https://github.com/zowe/api-layer/pull/983#discussion_r540781810", "createdAt": "2020-12-11T08:45:06Z", "author": {"login": "balhar-jakub"}, "path": "caching-service/src/main/java/org/zowe/apiml/caching/service/vsam/VsamFile.java", "diffHunk": "@@ -17,31 +17,59 @@\n import org.zowe.apiml.zfile.*;\n \n import java.io.Closeable;\n+import java.io.UnsupportedEncodingException;\n+import java.util.*;\n import java.util.regex.Pattern;\n \n /**\n  * ZFile wrapper providing convenience methods and implementing Closeable interface\n- *\n- * Creates a proxy of com.ibm.jzos.ZFileException and wraps it's methods\n- *\n+ * This class is intended for serialized access to VSAM file.\n+ * Concurrency is to be handled by retrying.\n+ * Creates a proxy of com.ibm.jzos.ZFileException and provides high level methods for CRUD operations\n  */\n \n @Slf4j\n-public class VsamFile implements Closeable, ZFile {\n+public class VsamFile implements Closeable {\n \n     private ZFile zfile;\n     private VsamConfig vsamConfig;\n-    private String options = \"ab+,type=record\";\n+    private final VsamConfig.VsamOptions options;\n+\n+    public static final String VSAM_RECORD_ERROR_MESSAGE = \"VsamRecordException occured: {}\";\n+    public static final String RECORD_FOUND_MESSAGE = \"Record found: {}\";\n+    public static final String UNSUPPORTED_ENCODING_MESSAGE = \"Unsupported encoding: {}\";\n+\n     private static final Pattern REGEX_CORRECT_FILENAME = Pattern.compile(\"^\\\\/\\\\/\\\\'.*'\");\n \n-    public VsamFile(VsamConfig config) {\n+    public VsamFile(VsamConfig config, VsamConfig.VsamOptions options) {\n+        this(config, options, false);\n+    }\n+\n+    public VsamFile(VsamConfig config, VsamConfig.VsamOptions options, boolean performWarmup) {\n         if (config == null) {\n             throw new IllegalArgumentException(\"Cannot create VsamFile with null configuration\");\n         }\n+\n         this.vsamConfig = config;\n+        this.options = options;\n+        log.info(\"VsamFile::new with parameters: {}, Vsam options: {}\", this.vsamConfig, this.options);\n+\n+        if (!REGEX_CORRECT_FILENAME.matcher(vsamConfig.getFileName()).find()) {\n+            throw new IllegalArgumentException(\"VsamFile name does not conform to //'VSAM.DATASET.NAME' pattern\");\n+        }\n+\n         try {\n             this.zfile = openZfile();\n-        } catch (ZFileException e) {\n+\n+            if (performWarmup) {\n+                log.info(\"Warming up VSAM file\");\n+                warmUpVsamFile();\n+            } else {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc1889a2fbef1c08b75420737a1089fcf44e83a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5MzY2Mw==", "bodyText": "good catch, I removed it", "url": "https://github.com/zowe/api-layer/pull/983#discussion_r540793663", "createdAt": "2020-12-11T09:05:23Z", "author": {"login": "jandadav"}, "path": "caching-service/src/main/java/org/zowe/apiml/caching/service/vsam/VsamFile.java", "diffHunk": "@@ -17,31 +17,59 @@\n import org.zowe.apiml.zfile.*;\n \n import java.io.Closeable;\n+import java.io.UnsupportedEncodingException;\n+import java.util.*;\n import java.util.regex.Pattern;\n \n /**\n  * ZFile wrapper providing convenience methods and implementing Closeable interface\n- *\n- * Creates a proxy of com.ibm.jzos.ZFileException and wraps it's methods\n- *\n+ * This class is intended for serialized access to VSAM file.\n+ * Concurrency is to be handled by retrying.\n+ * Creates a proxy of com.ibm.jzos.ZFileException and provides high level methods for CRUD operations\n  */\n \n @Slf4j\n-public class VsamFile implements Closeable, ZFile {\n+public class VsamFile implements Closeable {\n \n     private ZFile zfile;\n     private VsamConfig vsamConfig;\n-    private String options = \"ab+,type=record\";\n+    private final VsamConfig.VsamOptions options;\n+\n+    public static final String VSAM_RECORD_ERROR_MESSAGE = \"VsamRecordException occured: {}\";\n+    public static final String RECORD_FOUND_MESSAGE = \"Record found: {}\";\n+    public static final String UNSUPPORTED_ENCODING_MESSAGE = \"Unsupported encoding: {}\";\n+\n     private static final Pattern REGEX_CORRECT_FILENAME = Pattern.compile(\"^\\\\/\\\\/\\\\'.*'\");\n \n-    public VsamFile(VsamConfig config) {\n+    public VsamFile(VsamConfig config, VsamConfig.VsamOptions options) {\n+        this(config, options, false);\n+    }\n+\n+    public VsamFile(VsamConfig config, VsamConfig.VsamOptions options, boolean performWarmup) {\n         if (config == null) {\n             throw new IllegalArgumentException(\"Cannot create VsamFile with null configuration\");\n         }\n+\n         this.vsamConfig = config;\n+        this.options = options;\n+        log.info(\"VsamFile::new with parameters: {}, Vsam options: {}\", this.vsamConfig, this.options);\n+\n+        if (!REGEX_CORRECT_FILENAME.matcher(vsamConfig.getFileName()).find()) {\n+            throw new IllegalArgumentException(\"VsamFile name does not conform to //'VSAM.DATASET.NAME' pattern\");\n+        }\n+\n         try {\n             this.zfile = openZfile();\n-        } catch (ZFileException e) {\n+\n+            if (performWarmup) {\n+                log.info(\"Warming up VSAM file\");\n+                warmUpVsamFile();\n+            } else {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc4MTgxMA=="}, "originalCommit": {"oid": "bcc1889a2fbef1c08b75420737a1089fcf44e83a"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 469, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}