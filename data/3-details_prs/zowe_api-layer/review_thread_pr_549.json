{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MDcyNzE2", "number": 549, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMToxOVrODoZc7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMTo0M1rODoZdjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg2NjM4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/org/zowe/apiml/penetration/JwtPenTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMToxOVrOF268wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMToxOVrOF268wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzI0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * - passTicket endpoint on Gateway (covered by Spring security, see authorized access)\n          \n          \n            \n             * - PassTicket endpoint on Gateway (covered by Spring Security, see authorized access)", "url": "https://github.com/zowe/api-layer/pull/549#discussion_r393133249", "createdAt": "2020-03-16T16:01:19Z", "author": {"login": "plavjanik"}, "path": "integration-tests/src/test/java/org/zowe/apiml/penetration/JwtPenTest.java", "diffHunk": "@@ -0,0 +1,339 @@\n+package org.zowe.apiml.penetration;\n+\n+import io.jsonwebtoken.Jwts;\n+import io.jsonwebtoken.SignatureAlgorithm;\n+import io.restassured.RestAssured;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.zowe.apiml.gatewayservice.SecurityUtils;\n+import org.zowe.apiml.security.HttpsConfig;\n+import org.zowe.apiml.security.common.ticket.TicketRequest;\n+import org.zowe.apiml.util.config.ConfigReader;\n+import org.zowe.apiml.util.config.EnvironmentConfiguration;\n+import org.zowe.apiml.util.config.TlsConfiguration;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.security.PublicKey;\n+import java.util.Base64;\n+\n+import static io.restassured.RestAssured.given;\n+import static io.restassured.http.ContentType.JSON;\n+import static org.apache.http.HttpStatus.SC_OK;\n+import static org.apache.http.HttpStatus.SC_UNAUTHORIZED;\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.zowe.apiml.gatewayservice.SecurityUtils.getConfiguredSslConfig;\n+import static org.zowe.apiml.security.SecurityUtils.loadPublicKey;\n+\n+/*\n+ * Penetration testing of JWT\n+ *\n+ * Based on the following article:\n+ * https://medium.com/101-writeups/hacking-json-web-token-jwt-233fe6c862e6\n+ *\n+ * It tests three type of endpoints:\n+ * - query endpoint (verify JWT token)\n+ * - passTicket endpoint on Gateway (covered by Spring security, see authorized access)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ff9c22859cba70954d52da00bed9395e55ca6d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg2Nzk3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/org/zowe/apiml/penetration/JwtPenTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMTo0M1rOF2690Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMTo0M1rOF2690Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzUyMQ==", "bodyText": "``\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * - passTicket endpoint on Discoverable client (through server command's treatment)\n          \n          \n            \n             * - PassTicket endpoint on Discoverable client (through server command's treatment)", "url": "https://github.com/zowe/api-layer/pull/549#discussion_r393133521", "createdAt": "2020-03-16T16:01:43Z", "author": {"login": "plavjanik"}, "path": "integration-tests/src/test/java/org/zowe/apiml/penetration/JwtPenTest.java", "diffHunk": "@@ -0,0 +1,339 @@\n+package org.zowe.apiml.penetration;\n+\n+import io.jsonwebtoken.Jwts;\n+import io.jsonwebtoken.SignatureAlgorithm;\n+import io.restassured.RestAssured;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.zowe.apiml.gatewayservice.SecurityUtils;\n+import org.zowe.apiml.security.HttpsConfig;\n+import org.zowe.apiml.security.common.ticket.TicketRequest;\n+import org.zowe.apiml.util.config.ConfigReader;\n+import org.zowe.apiml.util.config.EnvironmentConfiguration;\n+import org.zowe.apiml.util.config.TlsConfiguration;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.security.PublicKey;\n+import java.util.Base64;\n+\n+import static io.restassured.RestAssured.given;\n+import static io.restassured.http.ContentType.JSON;\n+import static org.apache.http.HttpStatus.SC_OK;\n+import static org.apache.http.HttpStatus.SC_UNAUTHORIZED;\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.zowe.apiml.gatewayservice.SecurityUtils.getConfiguredSslConfig;\n+import static org.zowe.apiml.security.SecurityUtils.loadPublicKey;\n+\n+/*\n+ * Penetration testing of JWT\n+ *\n+ * Based on the following article:\n+ * https://medium.com/101-writeups/hacking-json-web-token-jwt-233fe6c862e6\n+ *\n+ * It tests three type of endpoints:\n+ * - query endpoint (verify JWT token)\n+ * - passTicket endpoint on Gateway (covered by Spring security, see authorized access)\n+ * - passTicket endpoint on Discoverable client (through server command's treatment)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77ff9c22859cba70954d52da00bed9395e55ca6d"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 449, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}