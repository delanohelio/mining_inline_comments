{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODYzOTk5", "number": 610, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzowNjowOVrODzk9uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzowNjowOVrODzk9uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDA5NTkzOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzowNjowOVrOGIGJZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzoxMDoyMVrOGIGRwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0MjUwMw==", "bodyText": "Do we want to scan and publish scan on every build? We've done before as well, so i can approve.", "url": "https://github.com/zowe/api-layer/pull/610#discussion_r411142503", "createdAt": "2020-04-20T07:06:09Z", "author": {"login": "jandadav"}, "path": "Jenkinsfile", "diffHunk": "@@ -88,8 +88,10 @@ pipeline {\n         stage('Build and unit test with coverage') {\n             steps {\n                 timeout(time: 20, unit: 'MINUTES') {\n-                    withSonarQubeEnv('sonarcloud-server') {\n-                        sh './gradlew --info --scan clean build coverage sonarqube -Psonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_AUTH_TOKEN}'\n+                    withCredentials([usernamePassword(credentialsId: ARTIFACTORY_CREDENTIALS_ID, usernameVariable: 'ARTIFACTORY_USERNAME', passwordVariable: 'ARTIFACTORY_PASSWORD')]) {\n+                        withSonarQubeEnv('sonarcloud-server') {\n+                            sh './gradlew --info --scan clean build coverage sonarqube -Psonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_AUTH_TOKEN} -Dgradle.cache.push=true -Dartifactory_user=${ARTIFACTORY_USERNAME} -Dartifactory_password=${ARTIFACTORY_PASSWORD}'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c99b2b26ebdaea9a8eccdacdc186cefd9faf2a8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0Mjk2Nw==", "bodyText": "As we want to get some baseline on what is going on and what is the effectivity of this change, then for now yes", "url": "https://github.com/zowe/api-layer/pull/610#discussion_r411142967", "createdAt": "2020-04-20T07:07:05Z", "author": {"login": "balhar-jakub"}, "path": "Jenkinsfile", "diffHunk": "@@ -88,8 +88,10 @@ pipeline {\n         stage('Build and unit test with coverage') {\n             steps {\n                 timeout(time: 20, unit: 'MINUTES') {\n-                    withSonarQubeEnv('sonarcloud-server') {\n-                        sh './gradlew --info --scan clean build coverage sonarqube -Psonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_AUTH_TOKEN}'\n+                    withCredentials([usernamePassword(credentialsId: ARTIFACTORY_CREDENTIALS_ID, usernameVariable: 'ARTIFACTORY_USERNAME', passwordVariable: 'ARTIFACTORY_PASSWORD')]) {\n+                        withSonarQubeEnv('sonarcloud-server') {\n+                            sh './gradlew --info --scan clean build coverage sonarqube -Psonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_AUTH_TOKEN} -Dgradle.cache.push=true -Dartifactory_user=${ARTIFACTORY_USERNAME} -Dartifactory_password=${ARTIFACTORY_PASSWORD}'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0MjUwMw=="}, "originalCommit": {"oid": "8c99b2b26ebdaea9a8eccdacdc186cefd9faf2a8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0NDY0MQ==", "bodyText": "And it is there as a current state, so this isn't a change here. Here I am only adding the environment for the remote cache.", "url": "https://github.com/zowe/api-layer/pull/610#discussion_r411144641", "createdAt": "2020-04-20T07:10:21Z", "author": {"login": "balhar-jakub"}, "path": "Jenkinsfile", "diffHunk": "@@ -88,8 +88,10 @@ pipeline {\n         stage('Build and unit test with coverage') {\n             steps {\n                 timeout(time: 20, unit: 'MINUTES') {\n-                    withSonarQubeEnv('sonarcloud-server') {\n-                        sh './gradlew --info --scan clean build coverage sonarqube -Psonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_AUTH_TOKEN}'\n+                    withCredentials([usernamePassword(credentialsId: ARTIFACTORY_CREDENTIALS_ID, usernameVariable: 'ARTIFACTORY_USERNAME', passwordVariable: 'ARTIFACTORY_PASSWORD')]) {\n+                        withSonarQubeEnv('sonarcloud-server') {\n+                            sh './gradlew --info --scan clean build coverage sonarqube -Psonar.host.url=${SONAR_HOST_URL} -Dsonar.login=${SONAR_AUTH_TOKEN} -Dgradle.cache.push=true -Dartifactory_user=${ARTIFACTORY_USERNAME} -Dartifactory_password=${ARTIFACTORY_PASSWORD}'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE0MjUwMw=="}, "originalCommit": {"oid": "8c99b2b26ebdaea9a8eccdacdc186cefd9faf2a8"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 495, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}