{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NjQyMTky", "number": 2575, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMjo1MDo1NVrODzY6rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMjo1MDo1NVrODzY6rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MjEyMjA1OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/StatementProxy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMjo1MDo1NVrOGH3Mlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMzo1NToxN1rOGH4DUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg5NzU1OQ==", "bodyText": "If the business sql has \";\", the spliced sql will be wrong.\nBut the business side can handle it, and it can be changed here or not.", "url": "https://github.com/seata/seata/pull/2575#discussion_r410897559", "createdAt": "2020-04-19T12:50:55Z", "author": {"login": "zjinlei"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/StatementProxy.java", "diffHunk": "@@ -113,6 +114,16 @@ public boolean execute(String sql, String[] columnNames) throws SQLException {\n         return ExecuteTemplate.execute(this, (statement, args) -> statement.execute((String) args[0],(String[])args[1]), sql,columnNames);\n     }\n \n+    @Override\n+    public void addBatch(String sql) throws SQLException {\n+        if (StringUtils.isNotBlank(targetSQL)) {\n+            targetSQL += \"; \" + sql;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "650dd774e5af250566735548b2cd597790d220b9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxMDIyOQ==", "bodyText": "There may be problems using split characters here. The best strategy is to store sql in List", "url": "https://github.com/seata/seata/pull/2575#discussion_r410910229", "createdAt": "2020-04-19T13:48:51Z", "author": {"login": "HankDevelop"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/StatementProxy.java", "diffHunk": "@@ -113,6 +114,16 @@ public boolean execute(String sql, String[] columnNames) throws SQLException {\n         return ExecuteTemplate.execute(this, (statement, args) -> statement.execute((String) args[0],(String[])args[1]), sql,columnNames);\n     }\n \n+    @Override\n+    public void addBatch(String sql) throws SQLException {\n+        if (StringUtils.isNotBlank(targetSQL)) {\n+            targetSQL += \"; \" + sql;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg5NzU1OQ=="}, "originalCommit": {"oid": "650dd774e5af250566735548b2cd597790d220b9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxMTU3MA==", "bodyText": "There may be problems using split characters here. The best strategy is to store sql in List\n\nReleased soon, no major changes.", "url": "https://github.com/seata/seata/pull/2575#discussion_r410911570", "createdAt": "2020-04-19T13:55:17Z", "author": {"login": "zjinlei"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/StatementProxy.java", "diffHunk": "@@ -113,6 +114,16 @@ public boolean execute(String sql, String[] columnNames) throws SQLException {\n         return ExecuteTemplate.execute(this, (statement, args) -> statement.execute((String) args[0],(String[])args[1]), sql,columnNames);\n     }\n \n+    @Override\n+    public void addBatch(String sql) throws SQLException {\n+        if (StringUtils.isNotBlank(targetSQL)) {\n+            targetSQL += \"; \" + sql;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg5NzU1OQ=="}, "originalCommit": {"oid": "650dd774e5af250566735548b2cd597790d220b9"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1550, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}