{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MTAxMzk4", "number": 2359, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxOToyMVrODlz-1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo0MzoxN1rODpw2HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTc1NTc0OnYy", "diffSide": "RIGHT", "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoxOToyMVrOFy6Q0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNTo0MjoxOFrOF1R23A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNzY5Ng==", "bodyText": "StringUtils.isEmpty(RootContext.getXID()) has returned boolean, can use notEmpty", "url": "https://github.com/seata/seata/pull/2359#discussion_r388927696", "createdAt": "2020-03-06T14:19:21Z", "author": {"login": "zjinlei"}, "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "diffHunk": "@@ -103,13 +114,43 @@ public Object execute(TransactionalExecutor business) throws Throwable {\n                 cleanUp();\n             }\n         } finally {\n-            if (previousXid != null) {\n-                RootContext.bind(previousXid);\n-            }\n+            resume(suspendedXid);\n         }\n \n     }\n \n+    private boolean existingTransaction() {\n+        return StringUtils.isEmpty(RootContext.getXID()) ? false : true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "058a95068d5203fa484a821c1b8d46e4337fe20b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMTQyMA==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2359#discussion_r391411420", "createdAt": "2020-03-12T05:42:18Z", "author": {"login": "lightClouds917"}, "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "diffHunk": "@@ -103,13 +114,43 @@ public Object execute(TransactionalExecutor business) throws Throwable {\n                 cleanUp();\n             }\n         } finally {\n-            if (previousXid != null) {\n-                RootContext.bind(previousXid);\n-            }\n+            resume(suspendedXid);\n         }\n \n     }\n \n+    private boolean existingTransaction() {\n+        return StringUtils.isEmpty(RootContext.getXID()) ? false : true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNzY5Ng=="}, "originalCommit": {"oid": "058a95068d5203fa484a821c1b8d46e4337fe20b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTc2OTQzOnYy", "diffSide": "RIGHT", "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNDoyMzoxNFrOFy6ZMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNTo0MjowN1rOF1R2sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyOTg0Mg==", "bodyText": "StringUtils.isEmpty(RootContext.getXID()) has returned boolean, can use notEmpty", "url": "https://github.com/seata/seata/pull/2359#discussion_r388929842", "createdAt": "2020-03-06T14:23:14Z", "author": {"login": "zjinlei"}, "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "diffHunk": "@@ -103,13 +114,43 @@ public Object execute(TransactionalExecutor business) throws Throwable {\n                 cleanUp();\n             }\n         } finally {\n-            if (previousXid != null) {\n-                RootContext.bind(previousXid);\n-            }\n+            resume(suspendedXid);\n         }\n \n     }\n \n+    private boolean existingTransaction() {\n+        return StringUtils.isEmpty(RootContext.getXID()) ? false : true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "058a95068d5203fa484a821c1b8d46e4337fe20b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMTM3Ng==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2359#discussion_r391411376", "createdAt": "2020-03-12T05:42:07Z", "author": {"login": "lightClouds917"}, "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "diffHunk": "@@ -103,13 +114,43 @@ public Object execute(TransactionalExecutor business) throws Throwable {\n                 cleanUp();\n             }\n         } finally {\n-            if (previousXid != null) {\n-                RootContext.bind(previousXid);\n-            }\n+            resume(suspendedXid);\n         }\n \n     }\n \n+    private boolean existingTransaction() {\n+        return StringUtils.isEmpty(RootContext.getXID()) ? false : true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyOTg0Mg=="}, "originalCommit": {"oid": "058a95068d5203fa484a821c1b8d46e4337fe20b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTE4NDkyOnYy", "diffSide": "RIGHT", "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo0MzoxN1rOF5I5hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNzowNzoyNFrOF5JQhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODk1MA==", "bodyText": "how about print xid here\uff1f", "url": "https://github.com/seata/seata/pull/2359#discussion_r395458950", "createdAt": "2020-03-20T06:43:17Z", "author": {"login": "slievrly"}, "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "diffHunk": "@@ -52,29 +53,42 @@ public Object execute(TransactionalExecutor business) throws Throwable {\n         if (txInfo == null) {\n             throw new ShouldNeverHappenException(\"transactionInfo does not exist\");\n         }\n+        // 1.1 get or create a transaction\n+        GlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\n+\n+        // 1.2 Handle the Transaction propatation and the branchType\n         Propagation propagation = txInfo.getPropagation();\n-        String previousXid = null;\n+        SuspendedResourcesHolder suspendedResourcesHolder = null;\n         try {\n             switch (propagation) {\n                 case NOT_SUPPORTED:\n-                    previousXid = RootContext.unbind();\n+                    suspendedResourcesHolder = tx.suspend(true);\n                     return business.execute();\n                 case REQUIRES_NEW:\n-                    previousXid = RootContext.unbind();\n+                    suspendedResourcesHolder = tx.suspend(true);\n                     break;\n                 case SUPPORTS:\n-                    if (StringUtils.isEmpty(RootContext.getXID())) {\n+                    if (!existingTransaction()) {\n                         return business.execute();\n                     }\n                     break;\n                 case REQUIRED:\n                     break;\n+                case NEVER:\n+                    if (existingTransaction()) {\n+                        throw new TransactionException(\"Existing transaction found for transaction marked with propagation 'never'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e537934d44a8ce2f39ea6b37f80a0db31430d220"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1OTM4Nw==", "bodyText": "ok\uff0ci will add now", "url": "https://github.com/seata/seata/pull/2359#discussion_r395459387", "createdAt": "2020-03-20T06:45:15Z", "author": {"login": "lightClouds917"}, "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "diffHunk": "@@ -52,29 +53,42 @@ public Object execute(TransactionalExecutor business) throws Throwable {\n         if (txInfo == null) {\n             throw new ShouldNeverHappenException(\"transactionInfo does not exist\");\n         }\n+        // 1.1 get or create a transaction\n+        GlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\n+\n+        // 1.2 Handle the Transaction propatation and the branchType\n         Propagation propagation = txInfo.getPropagation();\n-        String previousXid = null;\n+        SuspendedResourcesHolder suspendedResourcesHolder = null;\n         try {\n             switch (propagation) {\n                 case NOT_SUPPORTED:\n-                    previousXid = RootContext.unbind();\n+                    suspendedResourcesHolder = tx.suspend(true);\n                     return business.execute();\n                 case REQUIRES_NEW:\n-                    previousXid = RootContext.unbind();\n+                    suspendedResourcesHolder = tx.suspend(true);\n                     break;\n                 case SUPPORTS:\n-                    if (StringUtils.isEmpty(RootContext.getXID())) {\n+                    if (!existingTransaction()) {\n                         return business.execute();\n                     }\n                     break;\n                 case REQUIRED:\n                     break;\n+                case NEVER:\n+                    if (existingTransaction()) {\n+                        throw new TransactionException(\"Existing transaction found for transaction marked with propagation 'never'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODk1MA=="}, "originalCommit": {"oid": "e537934d44a8ce2f39ea6b37f80a0db31430d220"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ2NDgzNg==", "bodyText": "finished", "url": "https://github.com/seata/seata/pull/2359#discussion_r395464836", "createdAt": "2020-03-20T07:07:24Z", "author": {"login": "lightClouds917"}, "path": "tm/src/main/java/io/seata/tm/api/TransactionalTemplate.java", "diffHunk": "@@ -52,29 +53,42 @@ public Object execute(TransactionalExecutor business) throws Throwable {\n         if (txInfo == null) {\n             throw new ShouldNeverHappenException(\"transactionInfo does not exist\");\n         }\n+        // 1.1 get or create a transaction\n+        GlobalTransaction tx = GlobalTransactionContext.getCurrentOrCreate();\n+\n+        // 1.2 Handle the Transaction propatation and the branchType\n         Propagation propagation = txInfo.getPropagation();\n-        String previousXid = null;\n+        SuspendedResourcesHolder suspendedResourcesHolder = null;\n         try {\n             switch (propagation) {\n                 case NOT_SUPPORTED:\n-                    previousXid = RootContext.unbind();\n+                    suspendedResourcesHolder = tx.suspend(true);\n                     return business.execute();\n                 case REQUIRES_NEW:\n-                    previousXid = RootContext.unbind();\n+                    suspendedResourcesHolder = tx.suspend(true);\n                     break;\n                 case SUPPORTS:\n-                    if (StringUtils.isEmpty(RootContext.getXID())) {\n+                    if (!existingTransaction()) {\n                         return business.execute();\n                     }\n                     break;\n                 case REQUIRED:\n                     break;\n+                case NEVER:\n+                    if (existingTransaction()) {\n+                        throw new TransactionException(\"Existing transaction found for transaction marked with propagation 'never'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODk1MA=="}, "originalCommit": {"oid": "e537934d44a8ce2f39ea6b37f80a0db31430d220"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1661, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}