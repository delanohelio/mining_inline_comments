{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMzg4NTQy", "number": 2230, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwOTo1NDozN1rODeNjww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowODoxNlrODf65Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDA2MDE5OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwOTo1NDozN1rOFnP9xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMDoyMzowMFrOFnSrTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwMDM1Ng==", "bodyText": "true-> DEFALT_CLIENT_REPORT_SUCCESS_ENABLE\nand recommended that the default value of keys be put into a special class", "url": "https://github.com/seata/seata/pull/2230#discussion_r376700356", "createdAt": "2020-02-08T09:54:37Z", "author": {"login": "zjinlei"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java", "diffHunk": "@@ -43,7 +42,7 @@\n     private String tablePrefix = \"seata_\";\n     private String dbType;\n     private SagaTransactionalTemplate sagaTransactionalTemplate;\n-    private boolean                   rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, true);\n+    private boolean rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01cc604672ee69d3510435b41483287c3ff8c767"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0NDc4MA==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2230#discussion_r376744780", "createdAt": "2020-02-09T00:23:00Z", "author": {"login": "xingfudeshi"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/config/DbStateMachineConfig.java", "diffHunk": "@@ -43,7 +42,7 @@\n     private String tablePrefix = \"seata_\";\n     private String dbType;\n     private SagaTransactionalTemplate sagaTransactionalTemplate;\n-    private boolean                   rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, true);\n+    private boolean rmReportSuccessEnable = ConfigurationFactory.getInstance().getBoolean(ConfigurationKeys.CLIENT_REPORT_SUCCESS_ENABLE, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwMDM1Ng=="}, "originalCommit": {"oid": "01cc604672ee69d3510435b41483287c3ff8c767"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDA2MDUxOnYy", "diffSide": "RIGHT", "path": "script/client/conf/file.conf", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwOTo1NTozNlrOFnP95g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwOTo1NTozNlrOFnP95g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwMDM5MA==", "bodyText": "sharebossWorker-> shareBossWorker", "url": "https://github.com/seata/seata/pull/2230#discussion_r376700390", "createdAt": "2020-02-08T09:55:36Z", "author": {"login": "zjinlei"}, "path": "script/client/conf/file.conf", "diffHunk": "@@ -6,20 +6,20 @@ transport {\n   #enable heartbeat\n   heartbeat = true\n   # the client batch send request enable\n-  enable-client-batch-send-request = true\n+  enableClientBatchSendRequest = true\n   #thread factory for netty\n-  thread-factory {\n-    boss-thread-prefix = \"NettyBoss\"\n-    worker-thread-prefix = \"NettyServerNIOWorker\"\n-    server-executor-thread-prefix = \"NettyServerBizHandler\"\n-    share-boss-worker = false\n-    client-selector-thread-prefix = \"NettyClientSelector\"\n-    client-selector-thread-size = 1\n-    client-worker-thread-prefix = \"NettyClientWorkerThread\"\n+  threadFactory {\n+    bossThreadPrefix = \"NettyBoss\"\n+    workerThreadPrefix = \"NettyServerNIOWorker\"\n+    serverExecutorThread-prefix = \"NettyServerBizHandler\"\n+    sharebossWorker = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01cc604672ee69d3510435b41483287c3ff8c767"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMDA2NDYzOnYy", "diffSide": "RIGHT", "path": "seata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/file/ServiceProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxMDowNzowNVrOFnP_-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxMDowNzowNVrOFnP_-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcwMDkyMg==", "bodyText": "use constant instead 127.0.0.1:8091", "url": "https://github.com/seata/seata/pull/2230#discussion_r376700922", "createdAt": "2020-02-08T10:07:05Z", "author": {"login": "zjinlei"}, "path": "seata-spring-boot-starter/src/main/java/io/seata/spring/boot/autoconfigure/properties/file/ServiceProperties.java", "diffHunk": "@@ -78,4 +81,14 @@ public ServiceProperties setDisableGlobalTransaction(boolean disableGlobalTransa\n         this.disableGlobalTransaction = disableGlobalTransaction;\n         return this;\n     }\n+\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        if (0 == vgroupMapping.size()) {\n+            vgroupMapping.put(\"my_test_tx_group\", \"default\");\n+        }\n+        if (0 == grouplist.size()) {\n+            grouplist.put(\"default\", \"127.0.0.1:8091\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01cc604672ee69d3510435b41483287c3ff8c767"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDM2MzgxOnYy", "diffSide": "RIGHT", "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoxOToyMFrOFowS4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoxOToyMFrOFowS4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3ODYyNQ==", "bodyText": "Whether these changes can be undo?", "url": "https://github.com/seata/seata/pull/2230#discussion_r378278625", "createdAt": "2020-02-12T14:19:20Z", "author": {"login": "zjinlei"}, "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "diffHunk": "@@ -59,8 +59,8 @@\n     private static final String SESSION_TIMEOUT_KEY = \"session.timeout\";\n     private static final String CONNECT_TIMEOUT_KEY = \"connect.timeout\";\n     private static final int THREAD_POOL_NUM = 1;\n-    private static final int DEFAULT_SESSION_TIMEOUT = 6000;\n-    private static final int DEFAULT_CONNECT_TIMEOUT = 2000;\n+    public static final int DEFAULT_SESSION_TIMEOUT = 6000;\n+    public static final int DEFAULT_CONNECT_TIMEOUT = 2000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDM5NjI4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoyNzozNVrOFowm-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoyNzozNVrOFowm-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4Mzc2OA==", "bodyText": "TRANSPORT_HEARTBEAT->DEFAULT_TRANSPORT_HEARTBEAT", "url": "https://github.com/seata/seata/pull/2230#discussion_r378283768", "createdAt": "2020-02-12T14:27:35Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;\n+    public static final boolean DEFAULT_CLIENT_TABLE_META_CHECK_ENABLE = false;\n+    /**\n+     * Shutdown timeout default 3s\n+     */\n+    public static final int DEFAULT_SHUTDOWN_TIMEOUT_SEC = 3;\n+    public static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n+    public static final int DEFAULT_BOSS_THREAD_SIZE = 1;\n+\n+\n+    public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n+    public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+\n+    public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n+    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n+\n+    public static final boolean TRANSPORT_HEARTBEAT = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDQwMzYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoyOToyMFrOFowrig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoyOToyMFrOFowrig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4NDkzOA==", "bodyText": "TRANSACTION_UNDO_LOG_DEFAULT_TABLE->DEFAULT_TRANSACTION_UNDO_LOG_TABLE", "url": "https://github.com/seata/seata/pull/2230#discussion_r378284938", "createdAt": "2020-02-12T14:29:20Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;\n+    public static final boolean DEFAULT_CLIENT_TABLE_META_CHECK_ENABLE = false;\n+    /**\n+     * Shutdown timeout default 3s\n+     */\n+    public static final int DEFAULT_SHUTDOWN_TIMEOUT_SEC = 3;\n+    public static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n+    public static final int DEFAULT_BOSS_THREAD_SIZE = 1;\n+\n+\n+    public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n+    public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+\n+    public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n+    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";\n+    public static final String DEFAULT_EXECUTOR_THREAD_PREFIX = \"NettyServerBizHandler\";\n+\n+    public static final boolean TRANSPORT_HEARTBEAT = true;\n+    public static final boolean DEFAULT_TRANSACTION_UNDO_DATA_VALIDATION = true;\n+    public static final String DEFAULT_TRANSACTION_UNDO_LOG_SERIALIZATION = \"jackson\";\n+    /**\n+     * The constant TRANSACTION_UNDO_LOG_DEFAULT_TABLE.\n+     */\n+    public static final String TRANSACTION_UNDO_LOG_DEFAULT_TABLE = \"undo_log\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDQxNDg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/rpc/netty/NettyClientConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDozMjoxMFrOFowyfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDozMjoxMFrOFowyfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4NjcxOQ==", "bodyText": "move to DefaultValulues", "url": "https://github.com/seata/seata/pull/2230#discussion_r378286719", "createdAt": "2020-02-12T14:32:10Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/rpc/netty/NettyClientConfig.java", "diffHunk": "@@ -43,17 +47,15 @@\n     private static final int MAX_CHECK_ALIVE_RETRY = 300;\n     private static final int CHECK_ALIVE_INTERNAL = 10;\n     private static final String SOCKET_ADDRESS_START_CHAR = \"/\";\n-    private static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n     private static final long MAX_ACQUIRE_CONN_MILLS = 60 * 1000L;\n-    private static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n-    private static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n     private static final String RPC_DISPATCH_THREAD_PREFIX = \"rpcDispatch\";\n     private static final int DEFAULT_MAX_POOL_ACTIVE = 1;\n     private static final int DEFAULT_MIN_POOL_IDLE = 0;\n     private static final boolean DEFAULT_POOL_TEST_BORROW = true;\n     private static final boolean DEFAULT_POOL_TEST_RETURN = true;\n     private static final boolean DEFAULT_POOL_LIFO = true;\n-    private static final boolean ENABLE_CLIENT_BATCH_SEND_REQUEST = CONFIG.getBoolean(ConfigurationKeys.ENABLE_CLIENT_BATCH_SEND_REQUEST, true);\n+    public static final boolean DEFAULT_ENABLE_CLIENT_BATCH_SEND_REQUEST = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDQzNDk0OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/AbstractUndoExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDozNzoxMFrOFow-2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDozNzoxMFrOFow-2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI4OTg4Mg==", "bodyText": "?", "url": "https://github.com/seata/seata/pull/2230#discussion_r378289882", "createdAt": "2020-02-12T14:37:10Z", "author": {"login": "zjinlei"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/AbstractUndoExecutor.java", "diffHunk": "@@ -56,7 +59,7 @@\n \n     /**\n      * template of check sql\n-     *\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDQ1OTEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo0Mjo1OVrOFoxNyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNDoyNTozN1rOFpGqJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MzcwNQ==", "bodyText": "@slievrly @xingfudeshi Whether to change to default false in 1.1.0?", "url": "https://github.com/seata/seata/pull/2230#discussion_r378293705", "createdAt": "2020-02-12T14:42:59Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NTAzMQ==", "bodyText": "I think it can be set to false as default.", "url": "https://github.com/seata/seata/pull/2230#discussion_r378645031", "createdAt": "2020-02-13T04:25:37Z", "author": {"login": "xingfudeshi"}, "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MzcwNQ=="}, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDQ3MjI2OnYy", "diffSide": "RIGHT", "path": "script/config-center/config.txt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo0NjowOFrOFoxVxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo0NjowOFrOFoxVxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5NTc0OQ==", "bodyText": "globalTable and branchTable have wrong values", "url": "https://github.com/seata/seata/pull/2230#discussion_r378295749", "createdAt": "2020-02-12T14:46:08Z", "author": {"login": "zjinlei"}, "path": "script/config-center/config.txt", "diffHunk": "@@ -1,65 +1,66 @@\n transport.type=TCP\n transport.server=NIO\n transport.heartbeat=true\n-transport.enable-client-batch-send-request=false\n-transport.thread-factory.boss-thread-prefix=NettyBoss\n-transport.thread-factory.worker-thread-prefix=NettyServerNIOWorker\n-transport.thread-factory.server-executor-thread-prefix=NettyServerBizHandler\n-transport.thread-factory.share-boss-worker=false\n-transport.thread-factory.client-selector-thread-prefix=NettyClientSelector\n-transport.thread-factory.client-selector-thread-size=1\n-transport.thread-factory.client-worker-thread-prefix=NettyClientWorkerThread\n-transport.thread-factory.boss-thread-size=1\n-transport.thread-factory.worker-thread-size=8\n+transport.enableClientBatchSendRequest=false\n+transport.threadFactory.bossThreadPrefix=NettyBoss\n+transport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\n+transport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\n+transport.threadFactory.shareBossWorker=false\n+transport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\n+transport.threadFactory.clientSelectorThreadSize=1\n+transport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\n+transport.threadFactory.bossThreadSize=1\n+transport.threadFactory.workerThreadSize=8\n transport.shutdown.wait=3\n-service.vgroup_mapping.my_test_tx_group=default\n+service.vgroupMapping.my_test_tx_group=default\n service.default.grouplist=127.0.0.1:8091\n service.enableDegrade=false\n service.disableGlobalTransaction=false\n-client.rm.async.commit.buffer.limit=10000\n-client.rm.lock.retry.internal=10\n-client.rm.lock.retry.times=30\n-client.rm.report.retry.count=5\n-client.rm.lock.retry.policy.branch-rollback-on-conflict=true\n-client.rm.table.meta.check.enable=false\n-client.rm.report.success.enable=true\n-client.tm.commit.retry.count=5\n-client.tm.rollback.retry.count=5\n+client.rm.asyncCommitBufferLimit=10000\n+client.rm.lockRetryInternal=10\n+client.rm.lockRetryTimes=30\n+client.rm.reportRetryCount=5\n+client.rm.lockRetryPolicyBranchRollbackOnConflict=true\n+client.rm.tableMetaCheckEnable=false\n+client.rm.sqlParserType=druid\n+client.rm.reportSuccessEnable=true\n+client.tm.commitRetryCount=5\n+client.tm.rollbackRetryCount=5\n store.mode=file\n store.file.dir=file_store/data\n-store.file.max-branch-session-size=16384\n-store.file.max-global-session-size=512\n-store.file.file-write-buffer-cache-size=16384\n-store.file.flush-disk-mode=async\n-store.file.session.reload.read_size=100\n+store.file.maxBranchSessionSize=16384\n+store.file.maxGlobalSessionSize=512\n+store.file.fileWriteBufferCacheSize=16384\n+store.file.flushDiskMode=async\n+store.file.sessionReloadReadSize=100\n store.db.datasource=dbcp\n-store.db.db-type=mysql\n-store.db.driver-class-name=com.mysql.jdbc.Driver\n+store.db.dbType=mysql\n+store.db.driverClassName=com.mysql.jdbc.Driver\n store.db.url=jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true\n store.db.user=mysql\n store.db.password=mysql\n-store.db.min-conn=1\n-store.db.max-conn=3\n-store.db.global.table=global_table\n-store.db.branch.table=branch_table\n-store.db.query-limit=100\n-store.db.lock-table=lock_table\n-server.recovery.committing-retry-period=1000\n-server.recovery.asyn-committing-retry-period=1000\n-server.recovery.rollbacking-retry-period=1000\n-server.recovery.timeout-retry-period=1000\n-server.max.commit.retry.timeout=-1\n-server.max.rollback.retry.timeout=-1\n-server.rollback.retry.timeout.unlock.enable=false\n-client.undo.data.validation=true\n-client.undo.log.serialization=jackson\n-server.undo.log.save.days=7\n-server.undo.log.delete.period=86400000\n-client.undo.log.table=undo_log\n+store.db.minConn=1\n+store.db.maxConn=3\n+store.db.globalTable=globalTable\n+store.db.branchTable=branchTable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDQ5MzM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo1MToxM1rOFoxivg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo1MToxM1rOFoxivg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5OTA3MA==", "bodyText": "NIO_WORKER_THREAD_PREFIX-> DEFAULT_NIO_WORKER_THREAD_PREFIX", "url": "https://github.com/seata/seata/pull/2230#discussion_r378299070", "createdAt": "2020-02-12T14:51:13Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/constants/DefaultValues.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.constants;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class DefaultValues {\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_INTERNAL = 10;\n+    public static final int DEFAULT_CLIENT_LOCK_RETRY_TIMES = 30;\n+    public static final boolean DEFAULT_CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = true;\n+    public static final int DEFAULT_LOG_EXCEPTION_RATE = 100;\n+    public static final int DEFAULT_CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = 10000;\n+    public static final int DEFAULT_CLIENT_REPORT_RETRY_COUNT = 5;\n+    public static final boolean DEFAULT_CLIENT_REPORT_SUCCESS_ENABLE = true;\n+    public static final boolean DEFAULT_CLIENT_TABLE_META_CHECK_ENABLE = false;\n+    /**\n+     * Shutdown timeout default 3s\n+     */\n+    public static final int DEFAULT_SHUTDOWN_TIMEOUT_SEC = 3;\n+    public static final int DEFAULT_SELECTOR_THREAD_SIZE = 1;\n+    public static final int DEFAULT_BOSS_THREAD_SIZE = 1;\n+\n+\n+    public static final String DEFAULT_SELECTOR_THREAD_PREFIX = \"NettyClientSelector\";\n+    public static final String DEFAULT_WORKER_THREAD_PREFIX = \"NettyClientWorkerThread\";\n+\n+    public static final String DEFAULT_BOSS_THREAD_PREFIX = \"NettyBoss\";\n+    public static final String NIO_WORKER_THREAD_PREFIX = \"NettyServerNIOWorker\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDUyNTM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/rpc/netty/NettyBaseConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo1ODo0NVrOFox3FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDo1ODo0NVrOFox3FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMwNDI3Nw==", "bodyText": "Inconsistent with the original value", "url": "https://github.com/seata/seata/pull/2230#discussion_r378304277", "createdAt": "2020-02-12T14:58:45Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/rpc/netty/NettyBaseConfig.java", "diffHunk": "@@ -160,7 +163,7 @@\n             default:\n                 throw new IllegalArgumentException(\"unsupported.\");\n         }\n-        boolean enableHeartbeat = CONFIG.getBoolean(ConfigurationKeys.TRANSPORT_HEARTBEAT, false);\n+        boolean enableHeartbeat = CONFIG.getBoolean(ConfigurationKeys.TRANSPORT_HEARTBEAT, TRANSPORT_HEARTBEAT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDU1NTU1OnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTowNjowMVrOFoyJsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTowNjowMVrOFoyJsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMwOTA0MQ==", "bodyText": "move to DefaultValues", "url": "https://github.com/seata/seata/pull/2230#discussion_r378309041", "createdAt": "2020-02-12T15:06:01Z", "author": {"login": "zjinlei"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -47,7 +47,8 @@\n  *\n  * @author slievrly\n  */\n-public class GlobalTransactionalInterceptor implements ConfigurationChangeListener,MethodInterceptor {\n+public class GlobalTransactionalInterceptor implements ConfigurationChangeListener, MethodInterceptor {\n+    public static final boolean DEFAULT_DISABLE_GLOBAL_TRANSACTION = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjUxOTkzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMjo0Mjo1NlrOFpFYjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMjo0Mjo1NlrOFpFYjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYyNDE0MQ==", "bodyText": "globalTable->global_table, branchTable->branch_table\nand move them to DefaultValues.java", "url": "https://github.com/seata/seata/pull/2230#discussion_r378624141", "createdAt": "2020-02-13T02:42:56Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "diffHunk": "@@ -154,22 +162,22 @@\n     /**\n      * The constant STORE_DB_GLOBAL_TABLE.\n      */\n-    public static final String STORE_DB_GLOBAL_TABLE = STORE_DB_PREFIX + \"global.table\";\n+    public static final String STORE_DB_GLOBAL_TABLE = STORE_DB_PREFIX + \"globalTable\";\n \n     /**\n      * The constant STORE_DB_BRANCH_TABLE.\n      */\n-    public static final String STORE_DB_BRANCH_TABLE = STORE_DB_PREFIX + \"branch.table\";\n+    public static final String STORE_DB_BRANCH_TABLE = STORE_DB_PREFIX + \"branchTable\";\n \n     /**\n      * The constant STORE_DB_GLOBAL_DEFAULT_TABLE.\n      */\n-    public static final String STORE_DB_GLOBAL_DEFAULT_TABLE = \"global_table\";\n+    public static final String STORE_DB_GLOBAL_DEFAULT_TABLE = \"globalTable\";\n \n     /**\n      * The constant STORE_DB_BRANCH_DEFAULT_TABLE.\n      */\n-    public static final String STORE_DB_BRANCH_DEFAULT_TABLE = \"branch_table\";\n+    public static final String STORE_DB_BRANCH_DEFAULT_TABLE = \"branchTable\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3000588ac7281abbe4686bb0a4d8c317d00e1618"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDUzNDU3OnYy", "diffSide": "RIGHT", "path": "script/client/spring/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNTozNjoyM1rOFpYijg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNDoyNjowOVrOFprUcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzNzk5OA==", "bodyText": "application.properties and application.yml minusToCamel", "url": "https://github.com/seata/seata/pull/2230#discussion_r378937998", "createdAt": "2020-02-13T15:36:23Z", "author": {"login": "zjinlei"}, "path": "script/client/spring/application.properties", "diffHunk": "@@ -32,8 +32,8 @@ seata.client.undo.data-validation=true\n seata.client.undo.log-serialization=jackson\n seata.client.undo.log-table=undo_log\n seata.client.log.exceptionRate=100\n-seata.service.vgroup-mapping=default\n-seata.service.grouplist=127.0.0.1:8091\n+seata.service.vgroup-mapping.my_test_tx_group=default\n+seata.service.grouplist.default=127.0.0.1:8091\n seata.service.enable-degrade=false\n seata.service.disable-global-transaction=false\n seata.transport.shutdown.wait=3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaaee42a8db8ca58df3b912a43fc9aa1a0dec353"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0NTY4MA==", "bodyText": "Not required.both camel and kebab style can be supported by springboot.", "url": "https://github.com/seata/seata/pull/2230#discussion_r379245680", "createdAt": "2020-02-14T04:26:09Z", "author": {"login": "xingfudeshi"}, "path": "script/client/spring/application.properties", "diffHunk": "@@ -32,8 +32,8 @@ seata.client.undo.data-validation=true\n seata.client.undo.log-serialization=jackson\n seata.client.undo.log-table=undo_log\n seata.client.log.exceptionRate=100\n-seata.service.vgroup-mapping=default\n-seata.service.grouplist=127.0.0.1:8091\n+seata.service.vgroup-mapping.my_test_tx_group=default\n+seata.service.grouplist.default=127.0.0.1:8091\n seata.service.enable-degrade=false\n seata.service.disable-global-transaction=false\n seata.transport.shutdown.wait=3", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkzNzk5OA=="}, "originalCommit": {"oid": "eaaee42a8db8ca58df3b912a43fc9aa1a0dec353"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzgyOTY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDoyNzozNlrOFp4R4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNToxODoyOFrOFp6AGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1ODAxNw==", "bodyText": "lockTable-> lock_table\nand move to DeafultValues", "url": "https://github.com/seata/seata/pull/2230#discussion_r379458017", "createdAt": "2020-02-14T14:27:36Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "diffHunk": "@@ -203,27 +201,27 @@\n     /**\n      * The constant STORE_DB_MIN_CONN.\n      */\n-    public static final String STORE_DB_MIN_CONN = STORE_DB_PREFIX + \"min-conn\";\n+    public static final String STORE_DB_MIN_CONN = STORE_DB_PREFIX + \"minConn\";\n \n     /**\n      * The constant STORE_DB_MAX_CONN.\n      */\n-    public static final String STORE_DB_MAX_CONN = STORE_DB_PREFIX + \"max-conn\";\n+    public static final String STORE_DB_MAX_CONN = STORE_DB_PREFIX + \"maxConn\";\n \n     /**\n      * The constant STORE_DB_LOG_QUERY_LIMIT.\n      */\n-    public static final String STORE_DB_LOG_QUERY_LIMIT = STORE_DB_PREFIX + \"query-limit\";\n+    public static final String STORE_DB_LOG_QUERY_LIMIT = STORE_DB_PREFIX + \"queryLimit\";\n \n     /**\n      * The constant LOCK_DB_TABLE.\n      */\n-    public static final String LOCK_DB_TABLE = STORE_DB_PREFIX + \"lock-table\";\n+    public static final String LOCK_DB_TABLE = STORE_DB_PREFIX + \"lockTable\";\n \n     /**\n      * The constant LOCK_DB_DEFAULT_TABLE.\n      */\n-    public static final String LOCK_DB_DEFAULT_TABLE = \"lock_table\";\n+    public static final String LOCK_DB_DEFAULT_TABLE = \"lockTable\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463053a4d5d30e06164eee918dfb29c7dc4bcd7"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4NjIzNQ==", "bodyText": "great found.", "url": "https://github.com/seata/seata/pull/2230#discussion_r379486235", "createdAt": "2020-02-14T15:18:28Z", "author": {"login": "slievrly"}, "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "diffHunk": "@@ -203,27 +201,27 @@\n     /**\n      * The constant STORE_DB_MIN_CONN.\n      */\n-    public static final String STORE_DB_MIN_CONN = STORE_DB_PREFIX + \"min-conn\";\n+    public static final String STORE_DB_MIN_CONN = STORE_DB_PREFIX + \"minConn\";\n \n     /**\n      * The constant STORE_DB_MAX_CONN.\n      */\n-    public static final String STORE_DB_MAX_CONN = STORE_DB_PREFIX + \"max-conn\";\n+    public static final String STORE_DB_MAX_CONN = STORE_DB_PREFIX + \"maxConn\";\n \n     /**\n      * The constant STORE_DB_LOG_QUERY_LIMIT.\n      */\n-    public static final String STORE_DB_LOG_QUERY_LIMIT = STORE_DB_PREFIX + \"query-limit\";\n+    public static final String STORE_DB_LOG_QUERY_LIMIT = STORE_DB_PREFIX + \"queryLimit\";\n \n     /**\n      * The constant LOCK_DB_TABLE.\n      */\n-    public static final String LOCK_DB_TABLE = STORE_DB_PREFIX + \"lock-table\";\n+    public static final String LOCK_DB_TABLE = STORE_DB_PREFIX + \"lockTable\";\n \n     /**\n      * The constant LOCK_DB_DEFAULT_TABLE.\n      */\n-    public static final String LOCK_DB_DEFAULT_TABLE = \"lock_table\";\n+    public static final String LOCK_DB_DEFAULT_TABLE = \"lockTable\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ1ODAxNw=="}, "originalCommit": {"oid": "c463053a4d5d30e06164eee918dfb29c7dc4bcd7"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Nzk3MzE5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowODoxNlrOFp5p5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTowODoxNlrOFp5p5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4MDU1MQ==", "bodyText": "internal-> interval\nMultiple places need to be modified", "url": "https://github.com/seata/seata/pull/2230#discussion_r379480551", "createdAt": "2020-02-14T15:08:16Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/constants/ConfigurationKeys.java", "diffHunk": "@@ -88,51 +88,59 @@\n     /**\n      * The constant CLIENT_ASYNC_COMMIT_BUFFER_LIMIT.\n      */\n-    public static final String CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = CLIENT_RM_PREFIX + \"async.commit.buffer.limit\";\n+    public static final String CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = CLIENT_RM_PREFIX + \"asyncCommitBufferLimit\";\n+    /**\n+     * The constant CLIENT_RM_LOCK_PREFIX.\n+     */\n+    public static final String CLIENT_RM_LOCK_PREFIX = CLIENT_RM_PREFIX + \"lock.\";\n+\n     /**\n      * The constant CLIENT_LOCK_RETRY_TIMES.\n      */\n-    public static final String CLIENT_LOCK_RETRY_TIMES = CLIENT_RM_PREFIX + \"lock.retry.times\";\n+    public static final String CLIENT_LOCK_RETRY_TIMES = CLIENT_RM_LOCK_PREFIX + \"retryTimes\";\n     /**\n      * The constant CLIENT_LOCK_RETRY_INTERNAL.\n      */\n-    public static final String CLIENT_LOCK_RETRY_INTERNAL = CLIENT_RM_PREFIX + \"lock.retry.internal\";\n+    public static final String CLIENT_LOCK_RETRY_INTERNAL = CLIENT_RM_LOCK_PREFIX + \"retryInternal\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c463053a4d5d30e06164eee918dfb29c7dc4bcd7"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1610, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}