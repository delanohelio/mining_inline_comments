{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTg2MTk2", "number": 3371, "title": "optimize: add applicationId for metric", "bodyText": "\u2160. Describe what this PR did\n\u2161. Does this pull request fix one issue?\n\nfixes #3370\n\u2162. Why don't you add test cases (unit test/integration test)?\n\u2163. Describe how to verify it\n\u2164. Special notes for reviews", "createdAt": "2020-12-14T06:43:07Z", "url": "https://github.com/seata/seata/pull/3371", "merged": true, "mergeCommit": {"oid": "5004843366850c2a5132fd45f2ab01ee740fe779"}, "closed": true, "closedAt": "2021-01-12T06:11:00Z", "author": {"login": "spilledyear"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdl_7lWAH2gAyNTM5MTg2MTk2OjUzMzUwZjRkMjQxZWVlNTA5ZjRmMTgwNGZmYTFhOGQ5ZWYzYzFkODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdvU3GvAFqTU2NTk2MjY1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "53350f4d241eee509f4f1804ffa1a8d9ef3c1d86", "author": {"user": {"login": "spilledyear", "name": "spilledyear"}}, "url": "https://github.com/seata/seata/commit/53350f4d241eee509f4f1804ffa1a8d9ef3c1d86", "committedDate": "2020-12-14T06:41:32Z", "message": "fix #3370 add appId in metric"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a51ecaf3f77ad775599c62bde2ee7454452bfbeb", "author": {"user": {"login": "spilledyear", "name": "spilledyear"}}, "url": "https://github.com/seata/seata/commit/a51ecaf3f77ad775599c62bde2ee7454452bfbeb", "committedDate": "2020-12-14T07:05:13Z", "message": "fix #3370 fix metric tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "author": {"user": {"login": "spilledyear", "name": "spilledyear"}}, "url": "https://github.com/seata/seata/commit/28c81ab1291c8ad3c155ca40f0231aa8fe2afa94", "committedDate": "2020-12-14T07:13:27Z", "message": "fix #3371 code format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMjg2Mzc3", "url": "https://github.com/seata/seata/pull/3371#pullrequestreview-551286377", "createdAt": "2020-12-14T11:37:15Z", "commit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozNzoxNVrOIFMcbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MjozMFrOIFMoWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxNzY3Ng==", "bodyText": "may applicationId better?", "url": "https://github.com/seata/seata/pull/3371#discussion_r542317676", "createdAt": "2020-12-14T11:37:15Z", "author": {"login": "zhengyangyong"}, "path": "core/src/main/java/io/seata/core/event/GlobalTransactionEvent.java", "diffHunk": "@@ -44,6 +44,8 @@\n      */\n     private final String name;\n \n+    private String appId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxODY5Mw==", "bodyText": "may applicationId better?", "url": "https://github.com/seata/seata/pull/3371#discussion_r542318693", "createdAt": "2020-12-14T11:38:58Z", "author": {"login": "zhengyangyong"}, "path": "metrics/seata-metrics-api/src/main/java/io/seata/metrics/IdConstants.java", "diffHunk": "@@ -23,6 +23,8 @@\n public interface IdConstants {\n     String SEATA_TRANSACTION = \"seata.transaction\";\n \n+    String APP_ID_KEY = \"appId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTIwOQ==", "bodyText": "why we need an empty app id ,default value ?", "url": "https://github.com/seata/seata/pull/3371#discussion_r542319209", "createdAt": "2020-12-14T11:39:52Z", "author": {"login": "zhengyangyong"}, "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -35,6 +38,8 @@\n \n     private final Map<GlobalStatus, Consumer<GlobalTransactionEvent>> consumers;\n \n+    private static final String EMPTY_APP_ID = \"EMPTY_APP\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDQ1Mw==", "bodyText": "if there is no app id ,maybe there is no need to generate this tag (app id tag)", "url": "https://github.com/seata/seata/pull/3371#discussion_r542320453", "createdAt": "2020-12-14T11:42:05Z", "author": {"login": "zhengyangyong"}, "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -49,44 +54,59 @@ public MetricsSubscriber(Registry registry) {\n     }\n \n     private void processGlobalStatusBegin(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).increase(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n     }\n \n     private void processGlobalStatusCommitted(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_COMMITTED).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusCommitFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     @Subscribe\n     public void recordGlobalTransactionEventForMetrics(GlobalTransactionEvent event) {\n         if (registry != null && consumers.containsKey(event.getStatus())) {\n+            if (StringUtils.isEmpty(event.getAppId())) {\n+                event.setAppId(EMPTY_APP_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDcyOA==", "bodyText": "same above,if there is no app id ,maybe there is no need to generate this tag (app id tag)", "url": "https://github.com/seata/seata/pull/3371#discussion_r542320728", "createdAt": "2020-12-14T11:42:30Z", "author": {"login": "zhengyangyong"}, "path": "server/src/test/java/io/seata/server/coordinator/DefaultCoordinatorMetricsTest.java", "diffHunk": "@@ -63,7 +63,7 @@ public void test() throws IOException, TransactionException, InterruptedExceptio\n \n             Assertions.assertEquals(1, measurements.size());\n             Assertions.assertEquals(1,\n-                    measurements.get(\"seata.transaction(meter=counter,role=tc,status=active)\").getValue(), 0);\n+                    measurements.get(\"seata.transaction(appId=EMPTY_APP,meter=counter,role=tc,status=active)\").getValue(), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7fa4a365b638425064255a29a1a8823c1be60d9", "author": {"user": null}, "url": "https://github.com/seata/seata/commit/d7fa4a365b638425064255a29a1a8823c1be60d9", "committedDate": "2021-01-03T04:27:07Z", "message": "Merge remote-tracking branch 'ups/develop' into metric-appid"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff8b62533619896c3a7fe55c91e7d5fbd48da8af", "author": {"user": {"login": "spilledyear", "name": "spilledyear"}}, "url": "https://github.com/seata/seata/commit/ff8b62533619896c3a7fe55c91e7d5fbd48da8af", "committedDate": "2021-01-04T02:41:28Z", "message": "feature #3371: rename appId to applicationId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e0a2e3367d69444042f95566758ea318eda5309", "author": {"user": {"login": "spilledyear", "name": "spilledyear"}}, "url": "https://github.com/seata/seata/commit/8e0a2e3367d69444042f95566758ea318eda5309", "committedDate": "2021-01-04T07:08:49Z", "message": "feature #3371: remove default value for applicationId"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDk1NzQy", "url": "https://github.com/seata/seata/pull/3371#pullrequestreview-561495742", "createdAt": "2021-01-05T03:41:17Z", "commit": {"oid": "8e0a2e3367d69444042f95566758ea318eda5309"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNDk3MTI0", "url": "https://github.com/seata/seata/pull/3371#pullrequestreview-563497124", "createdAt": "2021-01-07T13:48:19Z", "commit": {"oid": "8e0a2e3367d69444042f95566758ea318eda5309"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6505fcc580d004681e5ba2b362aa91e96c6be0f1", "author": {"user": null}, "url": "https://github.com/seata/seata/commit/6505fcc580d004681e5ba2b362aa91e96c6be0f1", "committedDate": "2021-01-10T04:42:58Z", "message": "Merge remote-tracking branch 'ups/develop' into metric-appid"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "462ea633d4c06ff0318166c134f7b12d7c272566", "author": {"user": null}, "url": "https://github.com/seata/seata/commit/462ea633d4c06ff0318166c134f7b12d7c272566", "committedDate": "2021-01-10T07:29:34Z", "message": "feature #3371: remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1OTYyNjU1", "url": "https://github.com/seata/seata/pull/3371#pullrequestreview-565962655", "createdAt": "2021-01-12T06:09:58Z", "commit": {"oid": "462ea633d4c06ff0318166c134f7b12d7c272566"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3549, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}