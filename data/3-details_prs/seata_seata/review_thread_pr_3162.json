{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NjE4MTc5", "number": 3162, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODowNzoyM1rOEobDRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODowODo0OFrOEobGvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODIxNzAyOnYy", "diffSide": "RIGHT", "path": "integration/http/src/main/java/io/seata/integration/http/AbstractHttpExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODowNzoyM1rOHZgMAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODowNzoyM1rOHZgMAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUwMzgxMQ==", "bodyText": "recommend move this method to io.seata.common.util.CollectionUtils and make a appropriate method name?\n\u5efa\u8bae\u628a\u8fd9\u4e2a\u65b9\u6cd5\u79fb\u52a8\u5230 io.seata.common.util.CollectionUtils\uff0c\u7136\u540e\u8d77\u4e2a\u66f4\u5408\u7406\u7684\u540d\u5b57\u3002", "url": "https://github.com/seata/seata/pull/3162#discussion_r496503811", "createdAt": "2020-09-29T08:07:23Z", "author": {"login": "caohdgege"}, "path": "integration/http/src/main/java/io/seata/integration/http/AbstractHttpExecutor.java", "diffHunk": "@@ -156,6 +155,12 @@\n     }\n \n     public static Map<String, String> convert(Map<String, Object> param) {\n-        return param.keySet().stream().filter(key -> param.get(key) != null && param.get(key) != null).collect(Collectors.toMap(key -> key, key -> param.get(key).toString()));\n+        Map<String, String> covertMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc11ac673fba43260a58a394bff7b512bb590145"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODIyNTkxOnYy", "diffSide": "RIGHT", "path": "integration/http/src/main/java/io/seata/integration/http/AbstractHttpExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODowODo0OFrOHZgRuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODowODo0OFrOHZgRuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUwNTI3NQ==", "bodyText": "recommend StringUtils.objectToString instead of value.toString()\n\u5efa\u8baeStringUtils.objectToString\u66ff\u4ee3value.toString", "url": "https://github.com/seata/seata/pull/3162#discussion_r496505275", "createdAt": "2020-09-29T08:08:48Z", "author": {"login": "caohdgege"}, "path": "integration/http/src/main/java/io/seata/integration/http/AbstractHttpExecutor.java", "diffHunk": "@@ -156,6 +155,12 @@\n     }\n \n     public static Map<String, String> convert(Map<String, Object> param) {\n-        return param.keySet().stream().filter(key -> param.get(key) != null && param.get(key) != null).collect(Collectors.toMap(key -> key, key -> param.get(key).toString()));\n+        Map<String, String> covertMap = new HashMap<>();\n+        param.forEach((key, value) -> {\n+            if (value != null) {\n+                covertMap.put(key, value.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc11ac673fba43260a58a394bff7b512bb590145"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1442, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}