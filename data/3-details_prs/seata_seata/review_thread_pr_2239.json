{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTQ4NzA1", "number": 2239, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoxMToyMlrODe3YtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoxMzoyN1rODe3cTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjkxMzE3OnYy", "diffSide": "RIGHT", "path": "integration/dubbo-alibaba/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoxMToyMlrOFoPPDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjo0NDo0MVrOFoQj6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczNjk3Mg==", "bodyText": "This dependence is not appropriate.", "url": "https://github.com/seata/seata/pull/2239#discussion_r377736972", "createdAt": "2020-02-11T16:11:22Z", "author": {"login": "slievrly"}, "path": "integration/dubbo-alibaba/pom.xml", "diffHunk": "@@ -39,5 +39,10 @@\n             <groupId>com.alibaba</groupId>\n             <artifactId>dubbo</artifactId>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108874e7d56459a9d9447afc09c6278b7f05d95f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc1ODY5Ng==", "bodyText": "This dependence is not appropriate.\n\nalready modify @slievrly", "url": "https://github.com/seata/seata/pull/2239#discussion_r377758696", "createdAt": "2020-02-11T16:44:41Z", "author": {"login": "a364176773"}, "path": "integration/dubbo-alibaba/pom.xml", "diffHunk": "@@ -39,5 +39,10 @@\n             <groupId>com.alibaba</groupId>\n             <artifactId>dubbo</artifactId>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczNjk3Mg=="}, "originalCommit": {"oid": "108874e7d56459a9d9447afc09c6278b7f05d95f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjkyMjM3OnYy", "diffSide": "RIGHT", "path": "integration/dubbo-alibaba/src/main/java/io/seata/integration/dubbo/alibaba/AlibabaDubboTransactionPropagationFilter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoxMzoyN1rOFoPUig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNTozOTozOFrOFoiSHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczODM3OA==", "bodyText": "Because of dependence on seata-dubbo (apache-dubbo), is it alibaba-dubbo?", "url": "https://github.com/seata/seata/pull/2239#discussion_r377738378", "createdAt": "2020-02-11T16:13:27Z", "author": {"login": "slievrly"}, "path": "integration/dubbo-alibaba/src/main/java/io/seata/integration/dubbo/alibaba/AlibabaDubboTransactionPropagationFilter.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.integration.dubbo.alibaba;\n+\n+import com.alibaba.dubbo.common.extension.Activate;\n+import com.alibaba.dubbo.rpc.Filter;\n+import com.alibaba.dubbo.rpc.Invocation;\n+import com.alibaba.dubbo.rpc.Invoker;\n+import com.alibaba.dubbo.rpc.Result;\n+import com.alibaba.dubbo.rpc.RpcContext;\n+import com.alibaba.dubbo.rpc.RpcException;\n+import io.seata.core.context.RootContext;\n+import io.seata.integration.dubbo.DubboConstants;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The type Transaction propagation filter.\n+ *\n+ * @author sharajava\n+ */\n+@Activate(group = {DubboConstants.PROVIDER, DubboConstants.CONSUMER}, order = 100)\n+public class AlibabaDubboTransactionPropagationFilter implements Filter {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AlibabaDubboTransactionPropagationFilter.class);\n+\n+    @Override\n+    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\n+        if (DubboConstants.ALIBABADUBBO) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "108874e7d56459a9d9447afc09c6278b7f05d95f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NDUxMg==", "bodyText": "Because of dependence on seata-dubbo (apache-dubbo), is it alibaba-dubbo?\n\nused to determine whether it is Alibaba or Apache @slievrly", "url": "https://github.com/seata/seata/pull/2239#discussion_r377744512", "createdAt": "2020-02-11T16:22:57Z", "author": {"login": "a364176773"}, "path": "integration/dubbo-alibaba/src/main/java/io/seata/integration/dubbo/alibaba/AlibabaDubboTransactionPropagationFilter.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.integration.dubbo.alibaba;\n+\n+import com.alibaba.dubbo.common.extension.Activate;\n+import com.alibaba.dubbo.rpc.Filter;\n+import com.alibaba.dubbo.rpc.Invocation;\n+import com.alibaba.dubbo.rpc.Invoker;\n+import com.alibaba.dubbo.rpc.Result;\n+import com.alibaba.dubbo.rpc.RpcContext;\n+import com.alibaba.dubbo.rpc.RpcException;\n+import io.seata.core.context.RootContext;\n+import io.seata.integration.dubbo.DubboConstants;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The type Transaction propagation filter.\n+ *\n+ * @author sharajava\n+ */\n+@Activate(group = {DubboConstants.PROVIDER, DubboConstants.CONSUMER}, order = 100)\n+public class AlibabaDubboTransactionPropagationFilter implements Filter {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AlibabaDubboTransactionPropagationFilter.class);\n+\n+    @Override\n+    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\n+        if (DubboConstants.ALIBABADUBBO) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczODM3OA=="}, "originalCommit": {"oid": "108874e7d56459a9d9447afc09c6278b7f05d95f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0ODUzNg==", "bodyText": "if (!DubboConstants.ALIBABADUBBO) {return invoker.invoke(invocation);}\nreduce original changes", "url": "https://github.com/seata/seata/pull/2239#discussion_r378048536", "createdAt": "2020-02-12T05:37:13Z", "author": {"login": "zjinlei"}, "path": "integration/dubbo-alibaba/src/main/java/io/seata/integration/dubbo/alibaba/AlibabaDubboTransactionPropagationFilter.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.integration.dubbo.alibaba;\n+\n+import com.alibaba.dubbo.common.extension.Activate;\n+import com.alibaba.dubbo.rpc.Filter;\n+import com.alibaba.dubbo.rpc.Invocation;\n+import com.alibaba.dubbo.rpc.Invoker;\n+import com.alibaba.dubbo.rpc.Result;\n+import com.alibaba.dubbo.rpc.RpcContext;\n+import com.alibaba.dubbo.rpc.RpcException;\n+import io.seata.core.context.RootContext;\n+import io.seata.integration.dubbo.DubboConstants;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The type Transaction propagation filter.\n+ *\n+ * @author sharajava\n+ */\n+@Activate(group = {DubboConstants.PROVIDER, DubboConstants.CONSUMER}, order = 100)\n+public class AlibabaDubboTransactionPropagationFilter implements Filter {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AlibabaDubboTransactionPropagationFilter.class);\n+\n+    @Override\n+    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\n+        if (DubboConstants.ALIBABADUBBO) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczODM3OA=="}, "originalCommit": {"oid": "108874e7d56459a9d9447afc09c6278b7f05d95f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA0OTA1Mw==", "bodyText": "if (!DubboConstants.ALIBABADUBBO) {return invoker.invoke(invocation);}\nreduce original changes\n\nget it", "url": "https://github.com/seata/seata/pull/2239#discussion_r378049053", "createdAt": "2020-02-12T05:39:38Z", "author": {"login": "a364176773"}, "path": "integration/dubbo-alibaba/src/main/java/io/seata/integration/dubbo/alibaba/AlibabaDubboTransactionPropagationFilter.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.integration.dubbo.alibaba;\n+\n+import com.alibaba.dubbo.common.extension.Activate;\n+import com.alibaba.dubbo.rpc.Filter;\n+import com.alibaba.dubbo.rpc.Invocation;\n+import com.alibaba.dubbo.rpc.Invoker;\n+import com.alibaba.dubbo.rpc.Result;\n+import com.alibaba.dubbo.rpc.RpcContext;\n+import com.alibaba.dubbo.rpc.RpcException;\n+import io.seata.core.context.RootContext;\n+import io.seata.integration.dubbo.DubboConstants;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The type Transaction propagation filter.\n+ *\n+ * @author sharajava\n+ */\n+@Activate(group = {DubboConstants.PROVIDER, DubboConstants.CONSUMER}, order = 100)\n+public class AlibabaDubboTransactionPropagationFilter implements Filter {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AlibabaDubboTransactionPropagationFilter.class);\n+\n+    @Override\n+    public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException {\n+        if (DubboConstants.ALIBABADUBBO) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzczODM3OA=="}, "originalCommit": {"oid": "108874e7d56459a9d9447afc09c6278b7f05d95f"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1615, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}