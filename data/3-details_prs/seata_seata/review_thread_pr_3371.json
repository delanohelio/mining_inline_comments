{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTg2MTk2", "number": 3371, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozNzoxNVrOFE8I1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MjozMFrOFE8RAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzIzOTI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/event/GlobalTransactionEvent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozNzoxNVrOIFMcbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozNzoxNVrOIFMcbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxNzY3Ng==", "bodyText": "may applicationId better?", "url": "https://github.com/seata/seata/pull/3371#discussion_r542317676", "createdAt": "2020-12-14T11:37:15Z", "author": {"login": "zhengyangyong"}, "path": "core/src/main/java/io/seata/core/event/GlobalTransactionEvent.java", "diffHunk": "@@ -44,6 +44,8 @@\n      */\n     private final String name;\n \n+    private String appId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzI0NjA0OnYy", "diffSide": "RIGHT", "path": "metrics/seata-metrics-api/src/main/java/io/seata/metrics/IdConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozODo1OFrOIFMgZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMjozNDowM1rOINkCIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxODY5Mw==", "bodyText": "may applicationId better?", "url": "https://github.com/seata/seata/pull/3371#discussion_r542318693", "createdAt": "2020-12-14T11:38:58Z", "author": {"login": "zhengyangyong"}, "path": "metrics/seata-metrics-api/src/main/java/io/seata/metrics/IdConstants.java", "diffHunk": "@@ -23,6 +23,8 @@\n public interface IdConstants {\n     String SEATA_TRANSACTION = \"seata.transaction\";\n \n+    String APP_ID_KEY = \"appId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5Mjc2OA==", "bodyText": "\u5df2\u6539\u6210applicationId", "url": "https://github.com/seata/seata/pull/3371#discussion_r551092768", "createdAt": "2021-01-04T02:34:03Z", "author": {"login": "spilledyear"}, "path": "metrics/seata-metrics-api/src/main/java/io/seata/metrics/IdConstants.java", "diffHunk": "@@ -23,6 +23,8 @@\n public interface IdConstants {\n     String SEATA_TRANSACTION = \"seata.transaction\";\n \n+    String APP_ID_KEY = \"appId\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxODY5Mw=="}, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzI0OTUxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTozOTo1MlrOIFMiaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwNTo0MDozMVrOINmF0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTIwOQ==", "bodyText": "why we need an empty app id ,default value ?", "url": "https://github.com/seata/seata/pull/3371#discussion_r542319209", "createdAt": "2020-12-14T11:39:52Z", "author": {"login": "zhengyangyong"}, "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -35,6 +38,8 @@\n \n     private final Map<GlobalStatus, Consumer<GlobalTransactionEvent>> consumers;\n \n+    private static final String EMPTY_APP_ID = \"EMPTY_APP\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAxMTAwMA==", "bodyText": "\u5c31\u662f\u60f3\u7ed9\u4e2a\u9ed8\u8ba4\u503c", "url": "https://github.com/seata/seata/pull/3371#discussion_r543011000", "createdAt": "2020-12-15T03:07:16Z", "author": {"login": "spilledyear"}, "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -35,6 +38,8 @@\n \n     private final Map<GlobalStatus, Consumer<GlobalTransactionEvent>> consumers;\n \n+    private static final String EMPTY_APP_ID = \"EMPTY_APP\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTIwOQ=="}, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTEyNjQ4MQ==", "bodyText": "\u5728Prometheus\u4e2d\uff0cMetrics\u662f\u4e00\u4e2a\u591a\u7ef4\u6982\u5ff5\uff0cnull\u548c\"EMPTY_APP\"\uff08\u9ed8\u8ba4\u503c\uff09\u8868\u73b0\u51fa\u6765\u7684\u542b\u4e49\u662f\u4e0d\u4e00\u6837\u7684\uff1a\n\n\u5982\u679c\u6709\u4e00\u4e2aAPP\u7684ID\u5c31\u53eb\"EMPTY_APP\"\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u5462\uff1f\u90a3\u4e48\u5c31\u51b2\u7a81\u4e86\uff1b\nMetrics\u7ec8\u7a76\u4f1a\u88ab\u6c47\u805a\u5728\u4e00\u4e2a\u4e0a\u5c42\u7684\u76d1\u63a7\u7cfb\u7edf\u4e2d\uff0c\u522b\u7684\u7cfb\u7edf\u4e2d\u7684null\u4e0d\u4e00\u5b9a\u89e3\u91ca\u4e3a\u7b49\u4ef7\u4e8e\"EMPTY_APP\"\uff0c\u4e5f\u8bb8\u4ed6\u4eec\u505a\u7684\u4e0d\u597d\u53ef\u80fd\u53eb\u201cDEFAULT_APP\u201d\u53e6\u5f53\u522b\u8bba\uff0c\u4f46\u662fnull\u662f\u6ca1\u6709\u4e8c\u4e49\u6027\u7684\u3002", "url": "https://github.com/seata/seata/pull/3371#discussion_r551126481", "createdAt": "2021-01-04T05:40:31Z", "author": {"login": "zhengyangyong"}, "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -35,6 +38,8 @@\n \n     private final Map<GlobalStatus, Consumer<GlobalTransactionEvent>> consumers;\n \n+    private static final String EMPTY_APP_ID = \"EMPTY_APP\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMxOTIwOQ=="}, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzI1ODI4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MjowNVrOIFMnRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMzowODo1MVrOIF2yiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDQ1Mw==", "bodyText": "if there is no app id ,maybe there is no need to generate this tag (app id tag)", "url": "https://github.com/seata/seata/pull/3371#discussion_r542320453", "createdAt": "2020-12-14T11:42:05Z", "author": {"login": "zhengyangyong"}, "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -49,44 +54,59 @@ public MetricsSubscriber(Registry registry) {\n     }\n \n     private void processGlobalStatusBegin(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).increase(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n     }\n \n     private void processGlobalStatusCommitted(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_COMMITTED).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusCommitFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     @Subscribe\n     public void recordGlobalTransactionEventForMetrics(GlobalTransactionEvent event) {\n         if (registry != null && consumers.containsKey(event.getStatus())) {\n+            if (StringUtils.isEmpty(event.getAppId())) {\n+                event.setAppId(EMPTY_APP_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAxMTQ2NA==", "bodyText": "\u4e3a\u4ec0\u4e48\u4e0d\u662f \u6ca1\u6709appId, \u5c31\u4f7f\u7528\u9ed8\u8ba4\u7684appId\u5462\uff1f\u62c5\u5fc3\u6027\u80fd\u5417\uff1f", "url": "https://github.com/seata/seata/pull/3371#discussion_r543011464", "createdAt": "2020-12-15T03:08:51Z", "author": {"login": "spilledyear"}, "path": "server/src/main/java/io/seata/server/metrics/MetricsSubscriber.java", "diffHunk": "@@ -49,44 +54,59 @@ public MetricsSubscriber(Registry registry) {\n     }\n \n     private void processGlobalStatusBegin(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).increase(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n     }\n \n     private void processGlobalStatusCommitted(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_COMMITTED).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_COMMITTED.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n-        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED).increase(1);\n-        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED).increase(1);\n-        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK).record(event.getEndTime() - event.getBeginTime(),\n-            TimeUnit.MILLISECONDS);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getSummary(MeterIdConstants.SUMMARY_ROLLBACKED.withTag(APP_ID_KEY, event.getAppId()))\n+                .increase(1);\n+        registry.getTimer(MeterIdConstants.TIMER_ROLLBACK.withTag(APP_ID_KEY, event.getAppId()))\n+                .record(event.getEndTime() - event.getBeginTime(), TimeUnit.MILLISECONDS);\n     }\n \n     private void processGlobalStatusCommitFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbacked(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     private void processGlobalStatusTimeoutRollbackFailed(GlobalTransactionEvent event) {\n-        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE).decrease(1);\n+        registry.getCounter(MeterIdConstants.COUNTER_ACTIVE.withTag(APP_ID_KEY, event.getAppId()))\n+                .decrease(1);\n     }\n \n     @Subscribe\n     public void recordGlobalTransactionEventForMetrics(GlobalTransactionEvent event) {\n         if (registry != null && consumers.containsKey(event.getStatus())) {\n+            if (StringUtils.isEmpty(event.getAppId())) {\n+                event.setAppId(EMPTY_APP_ID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDQ1Mw=="}, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzI2MDE4OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/io/seata/server/coordinator/DefaultCoordinatorMetricsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MjozMFrOIFMoWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMTo0MjozMFrOIFMoWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMyMDcyOA==", "bodyText": "same above,if there is no app id ,maybe there is no need to generate this tag (app id tag)", "url": "https://github.com/seata/seata/pull/3371#discussion_r542320728", "createdAt": "2020-12-14T11:42:30Z", "author": {"login": "zhengyangyong"}, "path": "server/src/test/java/io/seata/server/coordinator/DefaultCoordinatorMetricsTest.java", "diffHunk": "@@ -63,7 +63,7 @@ public void test() throws IOException, TransactionException, InterruptedExceptio\n \n             Assertions.assertEquals(1, measurements.size());\n             Assertions.assertEquals(1,\n-                    measurements.get(\"seata.transaction(meter=counter,role=tc,status=active)\").getValue(), 0);\n+                    measurements.get(\"seata.transaction(appId=EMPTY_APP,meter=counter,role=tc,status=active)\").getValue(), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28c81ab1291c8ad3c155ca40f0231aa8fe2afa94"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1373, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}