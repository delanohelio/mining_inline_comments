{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMzAxOTU3", "number": 3188, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDoyMzo0OFrOEtEOmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMDo1MlrOEtTC9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjkwNjQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDoyMzo0OFrOHgpbTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo0MjoxMFrOHhEYmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5NTIxMw==", "bodyText": "if(LOGGER.isErrorEnabled()){\nLOGGER.error(\"put message into basketMap offer failed, serverAddress:{},rpcMessage:{}\", serverAddress,\nrpcMessage);\n}", "url": "https://github.com/seata/seata/pull/3188#discussion_r503995213", "createdAt": "2020-10-13T14:23:48Z", "author": {"login": "a364176773"}, "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "diffHunk": "@@ -152,13 +152,12 @@ public Object sendSyncRequest(Object msg) throws TimeoutException {\n             futures.put(rpcMessage.getId(), messageFuture);\n \n             // put message into basketMap\n-            ConcurrentHashMap<String, BlockingQueue<RpcMessage>> map = basketMap;\n-            BlockingQueue<RpcMessage> basket = map.get(serverAddress);\n-            if (basket == null) {\n-                map.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n-                basket = map.get(serverAddress);\n+            basketMap.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n+            if (!basketMap.get(serverAddress).offer(rpcMessage)) {\n+                LOGGER.error(\"put message into basketMap offer failed, serverAddress:{},rpcMessage:{}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e45c5f81328160fdd2ac74625d037b5290807809"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjg4OQ==", "bodyText": "\u53ef\u4ee5\u4e0d\u7528if\u5224\u65ad\u7684\u3002error\u65e5\u5fd7\u57fa\u672c\u4e0a\u9700\u8981\u8bb0\u5f55\uff0c\u53e6\u4e00\u4e2a\uff0c\u65e5\u5fd7\u4e5f\u4f7f\u7528\u4e86\u5360\u4f4d\u7b26\uff0c\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002", "url": "https://github.com/seata/seata/pull/3188#discussion_r504436889", "createdAt": "2020-10-14T06:42:10Z", "author": {"login": "wangliang181230"}, "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "diffHunk": "@@ -152,13 +152,12 @@ public Object sendSyncRequest(Object msg) throws TimeoutException {\n             futures.put(rpcMessage.getId(), messageFuture);\n \n             // put message into basketMap\n-            ConcurrentHashMap<String, BlockingQueue<RpcMessage>> map = basketMap;\n-            BlockingQueue<RpcMessage> basket = map.get(serverAddress);\n-            if (basket == null) {\n-                map.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n-                basket = map.get(serverAddress);\n+            basketMap.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n+            if (!basketMap.get(serverAddress).offer(rpcMessage)) {\n+                LOGGER.error(\"put message into basketMap offer failed, serverAddress:{},rpcMessage:{}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk5NTIxMw=="}, "originalCommit": {"oid": "e45c5f81328160fdd2ac74625d037b5290807809"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjkzOTA0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDozMDoxN1rOHgpv8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDozMDoxN1rOHgpv8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwMDQ5OA==", "bodyText": "basketMap.computeIfAbsent(serverAddress, k -> new LinkedBlockingQueue<>());\nI think it's better that way. what do you think?", "url": "https://github.com/seata/seata/pull/3188#discussion_r504000498", "createdAt": "2020-10-13T14:30:17Z", "author": {"login": "a364176773"}, "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "diffHunk": "@@ -152,13 +152,12 @@ public Object sendSyncRequest(Object msg) throws TimeoutException {\n             futures.put(rpcMessage.getId(), messageFuture);\n \n             // put message into basketMap\n-            ConcurrentHashMap<String, BlockingQueue<RpcMessage>> map = basketMap;\n-            BlockingQueue<RpcMessage> basket = map.get(serverAddress);\n-            if (basket == null) {\n-                map.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n-                basket = map.get(serverAddress);\n+            basketMap.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e45c5f81328160fdd2ac74625d037b5290807809"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTI3MjYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjozNTo1MlrOHg__tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjozNTo1MlrOHg__tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2NDk4Mw==", "bodyText": "do not need to get again\nBlockingQueue<RpcMessage> basket = basketMap.computeIfAbsent(serverAddress, k -> new LinkedBlockingQueue<>());\nif (!basket .offer(rpcMessage)) {\n    ......\n}", "url": "https://github.com/seata/seata/pull/3188#discussion_r504364983", "createdAt": "2020-10-14T02:35:52Z", "author": {"login": "wangliang181230"}, "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "diffHunk": "@@ -152,13 +152,14 @@ public Object sendSyncRequest(Object msg) throws TimeoutException {\n             futures.put(rpcMessage.getId(), messageFuture);\n \n             // put message into basketMap\n-            ConcurrentHashMap<String, BlockingQueue<RpcMessage>> map = basketMap;\n-            BlockingQueue<RpcMessage> basket = map.get(serverAddress);\n-            if (basket == null) {\n-                map.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n-                basket = map.get(serverAddress);\n+            basketMap.computeIfAbsent(serverAddress, k -> new LinkedBlockingQueue<>());\n+            if (!basketMap.get(serverAddress).offer(rpcMessage)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8256383b6bca79c024b723a4ea52735cb6430c46"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTI3NzEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjozODoyNVrOHhACQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxNDo1M1rOHhAnXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2NTYzNQ==", "bodyText": "not need check if is error log.", "url": "https://github.com/seata/seata/pull/3188#discussion_r504365635", "createdAt": "2020-10-14T02:38:25Z", "author": {"login": "wangliang181230"}, "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "diffHunk": "@@ -152,13 +152,14 @@ public Object sendSyncRequest(Object msg) throws TimeoutException {\n             futures.put(rpcMessage.getId(), messageFuture);\n \n             // put message into basketMap\n-            ConcurrentHashMap<String, BlockingQueue<RpcMessage>> map = basketMap;\n-            BlockingQueue<RpcMessage> basket = map.get(serverAddress);\n-            if (basket == null) {\n-                map.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n-                basket = map.get(serverAddress);\n+            basketMap.computeIfAbsent(serverAddress, k -> new LinkedBlockingQueue<>());\n+            if (!basketMap.get(serverAddress).offer(rpcMessage)) {\n+                if(LOGGER.isErrorEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8256383b6bca79c024b723a4ea52735cb6430c46"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NTEzMg==", "bodyText": "I mean, if is not required, but log is still required.", "url": "https://github.com/seata/seata/pull/3188#discussion_r504375132", "createdAt": "2020-10-14T03:14:53Z", "author": {"login": "wangliang181230"}, "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "diffHunk": "@@ -152,13 +152,14 @@ public Object sendSyncRequest(Object msg) throws TimeoutException {\n             futures.put(rpcMessage.getId(), messageFuture);\n \n             // put message into basketMap\n-            ConcurrentHashMap<String, BlockingQueue<RpcMessage>> map = basketMap;\n-            BlockingQueue<RpcMessage> basket = map.get(serverAddress);\n-            if (basket == null) {\n-                map.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n-                basket = map.get(serverAddress);\n+            basketMap.computeIfAbsent(serverAddress, k -> new LinkedBlockingQueue<>());\n+            if (!basketMap.get(serverAddress).offer(rpcMessage)) {\n+                if(LOGGER.isErrorEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2NTYzNQ=="}, "originalCommit": {"oid": "8256383b6bca79c024b723a4ea52735cb6430c46"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTMzNDMwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMDo1MlrOHhAjZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMDo1MlrOHhAjZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NDExOQ==", "bodyText": "lost the !, and error log", "url": "https://github.com/seata/seata/pull/3188#discussion_r504374119", "createdAt": "2020-10-14T03:10:52Z", "author": {"login": "wangliang181230"}, "path": "core/src/main/java/io/seata/core/rpc/netty/AbstractNettyRemotingClient.java", "diffHunk": "@@ -152,13 +152,10 @@ public Object sendSyncRequest(Object msg) throws TimeoutException {\n             futures.put(rpcMessage.getId(), messageFuture);\n \n             // put message into basketMap\n-            ConcurrentHashMap<String, BlockingQueue<RpcMessage>> map = basketMap;\n-            BlockingQueue<RpcMessage> basket = map.get(serverAddress);\n-            if (basket == null) {\n-                map.putIfAbsent(serverAddress, new LinkedBlockingQueue<>());\n-                basket = map.get(serverAddress);\n+            BlockingQueue<RpcMessage> basket = basketMap.computeIfAbsent(serverAddress, k -> new LinkedBlockingQueue<>());\n+            if (basket.offer(rpcMessage)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90a013757ca31098d3e6a6e0ada727deb707fb3"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1450, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}