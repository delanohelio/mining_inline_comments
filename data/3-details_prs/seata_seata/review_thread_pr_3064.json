{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzY3MjQy", "number": 3064, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzoyMDozM1rOEdda0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzoyNzo1N1rOEddf-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzI2MTYxOnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzoyMDozM1rOHIoJCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozMDowMFrOHIp-hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwODMyOQ==", "bodyText": "!=1 => <=0", "url": "https://github.com/seata/seata/pull/3064#discussion_r478808329", "createdAt": "2020-08-28T03:20:33Z", "author": {"login": "slievrly"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -246,6 +258,20 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n         }\n     }\n \n+    private int getAddAdvisorPos(AdvisedSupport advised, Advisor avr, int avrOrder) {\n+        Integer order;\n+        Advisor advisor;\n+        for (int i = 0, l = advised.getAdvisors().length; i < l; ++i) {\n+            advisor = advised.getAdvisors()[i];\n+            order = OrderUtil.getOrder(advisor);\n+            if (order == null || order > avrOrder ||\n+                    (order == avrOrder && avr.getClass().getSimpleName().compareTo(advisor.getClass().getSimpleName()) != 1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79339811a9e132bb2c2123dce25c682dafeff7e7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwODUzOQ==", "bodyText": "OK", "url": "https://github.com/seata/seata/pull/3064#discussion_r478808539", "createdAt": "2020-08-28T03:21:20Z", "author": {"login": "wangliang181230"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -246,6 +258,20 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n         }\n     }\n \n+    private int getAddAdvisorPos(AdvisedSupport advised, Advisor avr, int avrOrder) {\n+        Integer order;\n+        Advisor advisor;\n+        for (int i = 0, l = advised.getAdvisors().length; i < l; ++i) {\n+            advisor = advised.getAdvisors()[i];\n+            order = OrderUtil.getOrder(advisor);\n+            if (order == null || order > avrOrder ||\n+                    (order == avrOrder && avr.getClass().getSimpleName().compareTo(advisor.getClass().getSimpleName()) != 1)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwODMyOQ=="}, "originalCommit": {"oid": "79339811a9e132bb2c2123dce25c682dafeff7e7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgzODQwNg==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/3064#discussion_r478838406", "createdAt": "2020-08-28T05:30:00Z", "author": {"login": "wangliang181230"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -246,6 +258,20 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n         }\n     }\n \n+    private int getAddAdvisorPos(AdvisedSupport advised, Advisor avr, int avrOrder) {\n+        Integer order;\n+        Advisor advisor;\n+        for (int i = 0, l = advised.getAdvisors().length; i < l; ++i) {\n+            advisor = advised.getAdvisors()[i];\n+            order = OrderUtil.getOrder(advisor);\n+            if (order == null || order > avrOrder ||\n+                    (order == avrOrder && avr.getClass().getSimpleName().compareTo(advisor.getClass().getSimpleName()) != 1)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwODMyOQ=="}, "originalCommit": {"oid": "79339811a9e132bb2c2123dce25c682dafeff7e7"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzI3NDgwOnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzoyNzo1N1rOHIoQLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwODoxMjoxM1rOHIvJPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgxMDE1Nw==", "bodyText": "advised.getAdvisors().length - 1 => advised.getAdvisors().length ?", "url": "https://github.com/seata/seata/pull/3064#discussion_r478810157", "createdAt": "2020-08-28T03:27:57Z", "author": {"login": "slievrly"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -246,6 +258,20 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n         }\n     }\n \n+    private int getAddAdvisorPos(AdvisedSupport advised, Advisor avr, int avrOrder) {\n+        Integer order;\n+        Advisor advisor;\n+        for (int i = 0, l = advised.getAdvisors().length; i < l; ++i) {\n+            advisor = advised.getAdvisors()[i];\n+            order = OrderUtil.getOrder(advisor);\n+            if (order == null || order > avrOrder ||\n+                    (order == avrOrder && avr.getClass().getSimpleName().compareTo(advisor.getClass().getSimpleName()) != 1)) {\n+                return i;\n+            }\n+        }\n+        return advised.getAdvisors().length - 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79339811a9e132bb2c2123dce25c682dafeff7e7"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgzOTQyNA==", "bodyText": "No, this method returns the pos to advised.addAdvisor(pos, avr);, it needs to be -1.", "url": "https://github.com/seata/seata/pull/3064#discussion_r478839424", "createdAt": "2020-08-28T05:33:27Z", "author": {"login": "wangliang181230"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -246,6 +258,20 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n         }\n     }\n \n+    private int getAddAdvisorPos(AdvisedSupport advised, Advisor avr, int avrOrder) {\n+        Integer order;\n+        Advisor advisor;\n+        for (int i = 0, l = advised.getAdvisors().length; i < l; ++i) {\n+            advisor = advised.getAdvisors()[i];\n+            order = OrderUtil.getOrder(advisor);\n+            if (order == null || order > avrOrder ||\n+                    (order == avrOrder && avr.getClass().getSimpleName().compareTo(advisor.getClass().getSimpleName()) != 1)) {\n+                return i;\n+            }\n+        }\n+        return advised.getAdvisors().length - 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgxMDE1Nw=="}, "originalCommit": {"oid": "79339811a9e132bb2c2123dce25c682dafeff7e7"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODkyMzA3MA==", "bodyText": "I've rewritten the code here, and it should be better understood now.\nPTAL", "url": "https://github.com/seata/seata/pull/3064#discussion_r478923070", "createdAt": "2020-08-28T08:12:13Z", "author": {"login": "wangliang181230"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -246,6 +258,20 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n         }\n     }\n \n+    private int getAddAdvisorPos(AdvisedSupport advised, Advisor avr, int avrOrder) {\n+        Integer order;\n+        Advisor advisor;\n+        for (int i = 0, l = advised.getAdvisors().length; i < l; ++i) {\n+            advisor = advised.getAdvisors()[i];\n+            order = OrderUtil.getOrder(advisor);\n+            if (order == null || order > avrOrder ||\n+                    (order == avrOrder && avr.getClass().getSimpleName().compareTo(advisor.getClass().getSimpleName()) != 1)) {\n+                return i;\n+            }\n+        }\n+        return advised.getAdvisors().length - 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgxMDE1Nw=="}, "originalCommit": {"oid": "79339811a9e132bb2c2123dce25c682dafeff7e7"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1412, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}