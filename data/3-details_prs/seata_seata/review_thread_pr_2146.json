{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5ODA0OTM2", "number": 2146, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowODozOFrODWKqaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowODozOFrODWKqaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTY5OTYwOnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowODozOFrOFaxVKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzoxNzo0NVrOFaxc4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxNTUzMA==", "bodyText": "Please call the method with three parameters.LOGGER.error(\"xxxx:{}\",exx.getMessage(),exx)", "url": "https://github.com/seata/seata/pull/2146#discussion_r363615530", "createdAt": "2020-01-07T07:08:38Z", "author": {"login": "xingfudeshi"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java", "diffHunk": "@@ -99,13 +99,10 @@ public Object get(long timeout, TimeUnit unit) {\n         } catch (ExecutionException e) {\n             throw new ShouldNeverHappenException(\"Should not get results in a multi-threaded environment\", e);\n         } catch (TimeoutException e) {\n-            LOGGER.error(\n-                    \"config operation timeout,cost:\" + (System.currentTimeMillis() - start) + \" ms,op:\" + operation\n-                            .name()\n-                            + \",dataId:\" + dataId);\n+            LOGGER.error(\"config operation timeout,cost:{} ms,op:{},dataId:{}\", System.currentTimeMillis() - start, operation.name(), dataId);\n             return getFailResult();\n         } catch (InterruptedException exx) {\n-            LOGGER.error(\"config operate interrupted,error:\" + exx.getMessage());\n+            LOGGER.error(\"config operate interrupted,error:{}\", exx.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cde59899fcbcca07cb87efb2189712a51a743da6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxNzUwNg==", "bodyText": "Received, I will fix this.", "url": "https://github.com/seata/seata/pull/2146#discussion_r363617506", "createdAt": "2020-01-07T07:17:45Z", "author": {"login": "InstallingB"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigFuture.java", "diffHunk": "@@ -99,13 +99,10 @@ public Object get(long timeout, TimeUnit unit) {\n         } catch (ExecutionException e) {\n             throw new ShouldNeverHappenException(\"Should not get results in a multi-threaded environment\", e);\n         } catch (TimeoutException e) {\n-            LOGGER.error(\n-                    \"config operation timeout,cost:\" + (System.currentTimeMillis() - start) + \" ms,op:\" + operation\n-                            .name()\n-                            + \",dataId:\" + dataId);\n+            LOGGER.error(\"config operation timeout,cost:{} ms,op:{},dataId:{}\", System.currentTimeMillis() - start, operation.name(), dataId);\n             return getFailResult();\n         } catch (InterruptedException exx) {\n-            LOGGER.error(\"config operate interrupted,error:\" + exx.getMessage());\n+            LOGGER.error(\"config operate interrupted,error:{}\", exx.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxNTUzMA=="}, "originalCommit": {"oid": "cde59899fcbcca07cb87efb2189712a51a743da6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1730, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}