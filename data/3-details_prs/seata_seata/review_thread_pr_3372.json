{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MjI1NjQ0", "number": 3372, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzowNzozM1rOFGgCsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNzowOVrOFIFXjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzYwNzU1OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzowNzozM1rOIHinPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzowOTo1MlrOIH05Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3ODA0NA==", "bodyText": "\u8fd9\u4e2a\u53d8\u91cf\u53eb isUpdateMode = false; \u662f\u4e0d\u662f\u66f4\u5408\u9002\uff0c\u56e0\u4e3a\u5e76\u4e0d\u662f\u4e0dpersist", "url": "https://github.com/seata/seata/pull/3372#discussion_r544778044", "createdAt": "2020-12-17T03:07:33Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -263,28 +266,47 @@ public void recordStateMachineRestarted(StateMachineInstance machineInstance, Pr\n     @Override\n     public void recordStateStarted(StateInstance stateInstance, ProcessContext context) {\n         if (stateInstance != null) {\n-            //if this state is for retry, do not register branch, but generate id\n-            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n \n-                stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n-            }\n-            //if this state is for compensation, do not register branch, but generate id\n-            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+            boolean isPersist = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf31c169f063a66b30a02c29d82edf0c648fe2d3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3NzUxMA==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3372#discussion_r545077510", "createdAt": "2020-12-17T13:09:52Z", "author": {"login": "anselleeyy"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -263,28 +266,47 @@ public void recordStateMachineRestarted(StateMachineInstance machineInstance, Pr\n     @Override\n     public void recordStateStarted(StateInstance stateInstance, ProcessContext context) {\n         if (stateInstance != null) {\n-            //if this state is for retry, do not register branch, but generate id\n-            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n \n-                stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n-            }\n-            //if this state is for compensation, do not register branch, but generate id\n-            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+            boolean isPersist = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3ODA0NA=="}, "originalCommit": {"oid": "cf31c169f063a66b30a02c29d82edf0c648fe2d3"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzYxMjgzOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMzowOTo1MFrOIHiqCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoxMzoxNlrOIH1BSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3ODc2Mg==", "bodyText": "\u8fd9\u91cc\u7528id\u662f\u4e0d\u662f-1\u7ed3\u5c3e\u5224\u65ad\u53ef\u80fd\u5bb9\u6613\u7559\u5751\uff0c\u5982\u679cid\u751f\u6210\u89c4\u5219\u53d8\u4e86\u3002\u5efa\u8bae\u662f\u7528tateIdCompensatedFor\u627e\u5230\u539fstateInstace\uff0c\u7136\u540estateInstace.getCompensationState()\u6765\u53d6\u5b83\u4e0a\u4e00\u6b21\u7684\u8865\u507f\u670d\u52a1\u7684id", "url": "https://github.com/seata/seata/pull/3372#discussion_r544778762", "createdAt": "2020-12-17T03:09:50Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -263,28 +266,47 @@ public void recordStateMachineRestarted(StateMachineInstance machineInstance, Pr\n     @Override\n     public void recordStateStarted(StateInstance stateInstance, ProcessContext context) {\n         if (stateInstance != null) {\n-            //if this state is for retry, do not register branch, but generate id\n-            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n \n-                stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n-            }\n-            //if this state is for compensation, do not register branch, but generate id\n-            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+            boolean isPersist = true;\n \n-                stateInstance.setId(generateCompensateStateInstanceId(stateInstance));\n+            // if this state is for retry, do not register branch\n+            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n+                if (!isUpdateMode(stateInstance, context)) {\n+                    // generate id by default\n+                    stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n+                } else {\n+                    stateInstance.setId(stateInstance.getStateIdRetriedFor());\n+                    isPersist = false;\n+                }\n             }\n-            else {\n+            // if this state is for compensation, do not register branch\n+            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+                String compensateStateInstanceId = generateCompensateStateInstanceId(stateInstance);\n+                // generate id by default or first compensation\n+                if (compensateStateInstanceId.endsWith(\"-1\") || !isUpdateMode(stateInstance, context)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf31c169f063a66b30a02c29d82edf0c648fe2d3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3OTYyNA==", "bodyText": "\u8fd9\u91cc originInst \u7684 compensationState \u4f1a\u88abset\u6210\u5f53\u524d\u7684 stateInst\uff0c\u65e0\u6cd5\u83b7\u53d6\u5230\u4e0a\u4e00\u6b21\u8865\u507f inst \u7684id\uff0c\u8fd9\u91cc\u5224\u65ad\u505a\u4e86\u4e0b\u8c03\u6574\uff0c\u8f9b\u82e6 review \u4e0b\u662f\u5426\u53ef\u884c~", "url": "https://github.com/seata/seata/pull/3372#discussion_r545079624", "createdAt": "2020-12-17T13:13:16Z", "author": {"login": "anselleeyy"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -263,28 +266,47 @@ public void recordStateMachineRestarted(StateMachineInstance machineInstance, Pr\n     @Override\n     public void recordStateStarted(StateInstance stateInstance, ProcessContext context) {\n         if (stateInstance != null) {\n-            //if this state is for retry, do not register branch, but generate id\n-            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n \n-                stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n-            }\n-            //if this state is for compensation, do not register branch, but generate id\n-            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+            boolean isPersist = true;\n \n-                stateInstance.setId(generateCompensateStateInstanceId(stateInstance));\n+            // if this state is for retry, do not register branch\n+            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n+                if (!isUpdateMode(stateInstance, context)) {\n+                    // generate id by default\n+                    stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n+                } else {\n+                    stateInstance.setId(stateInstance.getStateIdRetriedFor());\n+                    isPersist = false;\n+                }\n             }\n-            else {\n+            // if this state is for compensation, do not register branch\n+            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+                String compensateStateInstanceId = generateCompensateStateInstanceId(stateInstance);\n+                // generate id by default or first compensation\n+                if (compensateStateInstanceId.endsWith(\"-1\") || !isUpdateMode(stateInstance, context)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc3ODc2Mg=="}, "originalCommit": {"oid": "cf31c169f063a66b30a02c29d82edf0c648fe2d3"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjkzNjg4OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMjoxOTo1NlrOIJWbcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMjoxOTo1NlrOIJWbcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY3NTU2OQ==", "bodyText": "\u6b64\u5904\u7b80\u5316\u6210\uff1astateInstance.setId(generateCompensateStateInstanceId(stateInstance, isUpdateMode)); \u5373\u53ef", "url": "https://github.com/seata/seata/pull/3372#discussion_r546675569", "createdAt": "2020-12-21T12:19:56Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -263,28 +262,43 @@ public void recordStateMachineRestarted(StateMachineInstance machineInstance, Pr\n     @Override\n     public void recordStateStarted(StateInstance stateInstance, ProcessContext context) {\n         if (stateInstance != null) {\n-            //if this state is for retry, do not register branch, but generate id\n-            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n \n-                stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n-            }\n-            //if this state is for compensation, do not register branch, but generate id\n-            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+            boolean isUpdateMode = isUpdateMode(stateInstance, context);\n \n-                stateInstance.setId(generateCompensateStateInstanceId(stateInstance));\n+            // if this state is for retry, do not register branch\n+            if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n+                if (isUpdateMode) {\n+                    stateInstance.setId(stateInstance.getStateIdRetriedFor());\n+                } else {\n+                    // generate id by default\n+                    stateInstance.setId(generateRetryStateInstanceId(stateInstance));\n+                }\n             }\n-            else {\n+            // if this state is for compensation, do not register branch\n+            else if (StringUtils.hasLength(stateInstance.getStateIdCompensatedFor())) {\n+                if (isUpdateMode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4638c49f64b3082899caaf68ac65bfad2c8689fd"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTM3ODk5OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/StateLogStoreSqls.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMzowMDowOFrOIJsrpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNTozMzoyM1rOIJu7xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA0MDE2NQ==", "bodyText": "\u6211\u8ba4\u4e3a\u8fd8\u662f\u6dfb\u52a0\u4e00\u4e2agmt_updated\u5b57\u6bb5\u6bd4\u8f83\u597d\u5427\u3002", "url": "https://github.com/seata/seata/pull/3372#discussion_r547040165", "createdAt": "2020-12-22T03:00:08Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/StateLogStoreSqls.java", "diffHunk": "@@ -76,7 +76,7 @@\n         + \"AND machine_inst_id = ?\";\n \n     private static final String UPDATE_STATE_EXECUTION_STATUS_SQL\n-        = \"UPDATE ${TABLE_PREFIX}state_inst SET status = ? WHERE machine_inst_id = ? AND id = ?\";\n+        = \"UPDATE ${TABLE_PREFIX}state_inst SET status = ?, gmt_started = ? WHERE machine_inst_id = ? AND id = ?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad019755836f224cd406471d77f29d3dc19dbbb7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NzA2Mw==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3372#discussion_r547077063", "createdAt": "2020-12-22T05:33:23Z", "author": {"login": "anselleeyy"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/StateLogStoreSqls.java", "diffHunk": "@@ -76,7 +76,7 @@\n         + \"AND machine_inst_id = ?\";\n \n     private static final String UPDATE_STATE_EXECUTION_STATUS_SQL\n-        = \"UPDATE ${TABLE_PREFIX}state_inst SET status = ? WHERE machine_inst_id = ? AND id = ?\";\n+        = \"UPDATE ${TABLE_PREFIX}state_inst SET status = ?, gmt_started = ? WHERE machine_inst_id = ? AND id = ?\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA0MDE2NQ=="}, "originalCommit": {"oid": "ad019755836f224cd406471d77f29d3dc19dbbb7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTcxNzEyOnYy", "diffSide": "RIGHT", "path": "script/client/saga/db/mysql.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoxMjo0NFrOIJvnfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjo1NToyM1rOIJwaLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4ODI1Mw==", "bodyText": "gmt_updated\u6700\u597d\u662f\u5141\u8bb8null\u5427\uff0c\u56e0\u4e3a\u6570\u636e\u5e93\u52a0\u4e86\u5b57\u6bb5\u540e\uff0c\u5e94\u7528\u8fd8\u6ca1\u6709\u5347\u7ea7\uff0c\u8001\u7684\u4ee3\u7801\u4e0d\u4f1a\u66f4\u65b0\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u8fd9\u65f6SQL\u53ef\u80fd\u4f1a\u62a5\u9519\u3002", "url": "https://github.com/seata/seata/pull/3372#discussion_r547088253", "createdAt": "2020-12-22T06:12:44Z", "author": {"login": "long187"}, "path": "script/client/saga/db/mysql.sql", "diffHunk": "@@ -57,6 +57,7 @@ CREATE TABLE IF NOT EXISTS `seata_state_inst`\n     `output_params`            TEXT COMMENT 'output parameters',\n     `status`                   VARCHAR(2)   NOT NULL COMMENT 'status(SU succeed|FA failed|UN unknown|SK skipped|RU running)',\n     `excep`                    BLOB COMMENT 'exception',\n+    `gmt_updated`              DATETIME(3) NOT NULL COMMENT 'update time',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53cecf47f2fadb8853649256036510b5fdd4736a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEwMTIzMQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3372#discussion_r547101231", "createdAt": "2020-12-22T06:55:23Z", "author": {"login": "anselleeyy"}, "path": "script/client/saga/db/mysql.sql", "diffHunk": "@@ -57,6 +57,7 @@ CREATE TABLE IF NOT EXISTS `seata_state_inst`\n     `output_params`            TEXT COMMENT 'output parameters',\n     `status`                   VARCHAR(2)   NOT NULL COMMENT 'status(SU succeed|FA failed|UN unknown|SK skipped|RU running)',\n     `excep`                    BLOB COMMENT 'exception',\n+    `gmt_updated`              DATETIME(3) NOT NULL COMMENT 'update time',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4ODI1Mw=="}, "originalCommit": {"oid": "53cecf47f2fadb8853649256036510b5fdd4736a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE2MTMyOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/impl/StateMachineImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowMjoyN1rOIJzldA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowMjoyN1rOIJzldA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1MzI2OA==", "bodyText": "@Override", "url": "https://github.com/seata/seata/pull/3372#discussion_r547153268", "createdAt": "2020-12-22T09:02:27Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/impl/StateMachineImpl.java", "diffHunk": "@@ -189,4 +194,20 @@ public Date getGmtCreate() {\n     public void setGmtCreate(Date gmtCreate) {\n         this.gmtCreate = gmtCreate;\n     }\n+\n+    public boolean isRetryPersistModeUpdate() {\n+        return retryPersistModeUpdate;\n+    }\n+\n+    public void setRetryPersistModeUpdate(boolean retryPersistModeUpdate) {\n+        this.retryPersistModeUpdate = retryPersistModeUpdate;\n+    }\n+\n+    public boolean isCompensatePersistModeUpdate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE2MTQyOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/impl/StateMachineImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowMjozMFrOIJzliA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowMjozMFrOIJzliA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1MzI4OA==", "bodyText": "@Override", "url": "https://github.com/seata/seata/pull/3372#discussion_r547153288", "createdAt": "2020-12-22T09:02:30Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/impl/StateMachineImpl.java", "diffHunk": "@@ -189,4 +194,20 @@ public Date getGmtCreate() {\n     public void setGmtCreate(Date gmtCreate) {\n         this.gmtCreate = gmtCreate;\n     }\n+\n+    public boolean isRetryPersistModeUpdate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE3NTA4OnYy", "diffSide": "RIGHT", "path": "seata-spring-boot-starter/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowNjo0M1rOIJztiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowNjo0M1rOIJztiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NTMzOQ==", "bodyText": "Boolean\u4e0d\u9700\u8981\u6dfb\u52a0hints\uff0c\u9ed8\u8ba4\u503c\u5df2\u7ecf\u663e\u793a\u5728\u63d0\u793a\u8bed\u4e2d\u4e86\u7684\u3002\n\u4f8b\uff1a", "url": "https://github.com/seata/seata/pull/3372#discussion_r547155339", "createdAt": "2020-12-22T09:06:43Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-boot-starter/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -345,6 +357,30 @@\n         }\n       ]\n     },\n+    {\n+      \"name\": \"seata.client.rm.saga-retry-persist-mode-update\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE3NzM4OnYy", "diffSide": "RIGHT", "path": "seata-spring-boot-starter/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowNzoyNFrOIJzu3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOTowNzoyNFrOIJzu3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1NTY3Nw==", "bodyText": "false\u4e0d\u9700\u8981\u53cc\u5f15\u53f7\u3002\n\u4e0b\u540c\u3002", "url": "https://github.com/seata/seata/pull/3372#discussion_r547155677", "createdAt": "2020-12-22T09:07:24Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-boot-starter/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -72,6 +72,18 @@\n       \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.RmProperties\",\n       \"defaultValue\": \"fastjson\"\n     },\n+    {\n+      \"name\": \"seata.client.rm.saga-retry-persist-mode-update\",\n+      \"type\": \"java.lang.Boolean\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.RmProperties\",\n+      \"defaultValue\": \"false\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDE5OTQ4OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/StateMachine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNDoyOFrOIJz8Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNDoyOFrOIJz8Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTEzMQ==", "bodyText": "\u6211\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u914d\u7f6e\u9879\u7684\u503c\u5e94\u6539\u4e3aBoolean\u3002", "url": "https://github.com/seata/seata/pull/3372#discussion_r547159131", "createdAt": "2020-12-22T09:14:28Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/StateMachine.java", "diffHunk": "@@ -142,6 +142,20 @@\n      */\n     boolean isPersist();\n \n+    /**\n+     * Is update last retry execution log, default append new\n+     *\n+     * @return\n+     */\n+    boolean isRetryPersistModeUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIwMTA1OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/ServiceTaskState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNDo1OVrOIJz9VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNDo1OVrOIJz9VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTM4MQ==", "bodyText": "\u6211\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u914d\u7f6e\u9879\u7684\u503c\u5e94\u6539\u4e3aBoolean\u3002", "url": "https://github.com/seata/seata/pull/3372#discussion_r547159381", "createdAt": "2020-12-22T09:14:59Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/domain/ServiceTaskState.java", "diffHunk": "@@ -58,4 +58,18 @@\n      * @return\n      */\n     boolean isPersist();\n+\n+    /**\n+     * Is update last retry execution log, default append new\n+     *\n+     * @return\n+     */\n+    boolean isRetryPersistModeUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDIwODc3OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNzowOVrOIJ0B7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToyNToxNFrOIJ0Ryg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MDU1Nw==", "bodyText": "\u6211\u8ba4\u4e3a\u8fd9\u4e09\u5904\u7684\u914d\u7f6e\u662f\u6709\u4f18\u5148\u7ea7\u7684\u3002\u9996\u5148StateMachine\u548cState\u7684\u4e24\u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u9700\u53d8\u66f4\u4e3aBoolean\u3002\n\u7136\u540e\u4f18\u5148\u7ea7\u662fstate > stateMachine > config\u3002\n\u5426\u5219config\u4e2d\u914d\u7f6e\u4e3atrue\uff0cstateMachine\u6216state\u4e2d\u914d\u7f6e\u6210false\u5c31\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u4e86\u4e0d\u662f\uff1f", "url": "https://github.com/seata/seata/pull/3372#discussion_r547160557", "createdAt": "2020-12-22T09:17:09Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -405,6 +419,33 @@ private int getIdIndex(String stateInstanceId, String separator) {\n         return -1;\n     }\n \n+    private boolean isUpdateMode(StateInstance stateInstance, ProcessContext context) {\n+        DefaultStateMachineConfig stateMachineConfig = (DefaultStateMachineConfig)context.getVariable(\n+            DomainConstants.VAR_NAME_STATEMACHINE_CONFIG);\n+        StateInstruction instruction = context.getInstruction(StateInstruction.class);\n+        ServiceTaskStateImpl state = (ServiceTaskStateImpl)instruction.getState(context);\n+\n+        if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n+\n+            return stateMachineConfig.isSagaRetryPersistModeUpdate() || stateInstance.getStateMachineInstance()\n+                .getStateMachine().isRetryPersistModeUpdate() || state.isRetryPersistModeUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2NDYxOA==", "bodyText": "if (state.isRetryPersistModeUpdate() != null) {\n    return state.isRetryPersistModeUpdate();\n}\nif (stateMachine.isRetryPersistModeUpdate() != null) {\n    return stateMachine.isRetryPersistModeUpdate();\n}\nreturn config.isSagaRetryPersistModeUpdate();", "url": "https://github.com/seata/seata/pull/3372#discussion_r547164618", "createdAt": "2020-12-22T09:25:14Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -405,6 +419,33 @@ private int getIdIndex(String stateInstanceId, String separator) {\n         return -1;\n     }\n \n+    private boolean isUpdateMode(StateInstance stateInstance, ProcessContext context) {\n+        DefaultStateMachineConfig stateMachineConfig = (DefaultStateMachineConfig)context.getVariable(\n+            DomainConstants.VAR_NAME_STATEMACHINE_CONFIG);\n+        StateInstruction instruction = context.getInstruction(StateInstruction.class);\n+        ServiceTaskStateImpl state = (ServiceTaskStateImpl)instruction.getState(context);\n+\n+        if (StringUtils.hasLength(stateInstance.getStateIdRetriedFor())) {\n+\n+            return stateMachineConfig.isSagaRetryPersistModeUpdate() || stateInstance.getStateMachineInstance()\n+                .getStateMachine().isRetryPersistModeUpdate() || state.isRetryPersistModeUpdate();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE2MDU1Nw=="}, "originalCommit": {"oid": "147af4507ab33b83b874b6de5b31c9bf291ed23d"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1375, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}