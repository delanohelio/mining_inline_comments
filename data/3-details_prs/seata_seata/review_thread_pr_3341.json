{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMTU1MjM4", "number": 3341, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwODozMjozOVrOFBZyAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NzozMFrOFEl7Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MDE1Mjk5OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwODozMjozOVrOIAHJTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwODozMjozOVrOIAHJTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk4Nzk4MA==", "bodyText": "SEATA_CONFIG_NAME\u662f\u53ea\u9488\u5bf9registry.conf\u7684,\u800cfile.conf\u662f\u901a\u8fc7registry\u4e2d\u7684config.file.name\u6765\u6307\u5b9a\u7684,\u5efa\u8bae\u518dConfigurationFactory#load\u4e2d\u505a\u63d0\u793a\u8f93\u51fa", "url": "https://github.com/seata/seata/pull/3341#discussion_r536987980", "createdAt": "2020-12-06T08:32:39Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -187,6 +187,11 @@ private File getConfigFile(String name) {\n         } catch (UnsupportedEncodingException e) {\n             LOGGER.error(\"file not found--\" + e.getMessage(), e);\n         }\n+\n+        // try to get filename\n+        String basename = StringUtils.isNullOrEmpty(name) ? \"my-config.conf\" : new File(name).getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ed54437887c4e95aac7e0129a439da3e4a82159"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzQxNTY3OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo1NTowN1rOIBEl4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoxOTo1NlrOIBa3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5NDcyMw==", "bodyText": "why did you change this", "url": "https://github.com/seata/seata/pull/3341#discussion_r537994723", "createdAt": "2020-12-08T02:55:07Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -112,7 +113,7 @@ public FileConfiguration(String name, boolean allowDynamicRefresh) {\n             targetFilePath = file.getPath();\n             fileConfig = FileConfigFactory.load(file, name);\n         }\n-        /**\n+        /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM1OTYwOA==", "bodyText": "/** \u5f00\u5934\u662f javadoc \u7684\u8bed\u6cd5\uff0c\u65b9\u6cd5\u5185\u7684\u6ce8\u91ca\u5e94\u8be5\u7528 /* \u5f00\u5934", "url": "https://github.com/seata/seata/pull/3341#discussion_r538359608", "createdAt": "2020-12-08T13:19:56Z", "author": {"login": "hoverruan"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -112,7 +113,7 @@ public FileConfiguration(String name, boolean allowDynamicRefresh) {\n             targetFilePath = file.getPath();\n             fileConfig = FileConfigFactory.load(file, name);\n         }\n-        /**\n+        /*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5NDcyMw=="}, "originalCommit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzQyNDI4OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo1ODo0MFrOIBEqsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMzoyMDo1OFrOIBa7RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5NTk1NQ==", "bodyText": "why not use placeholders", "url": "https://github.com/seata/seata/pull/3341#discussion_r537995955", "createdAt": "2020-12-08T02:58:40Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,86 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"file not found--\" + e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM2MDY0NA==", "bodyText": "\u8fd9\u662f\u539f\u6765\u7684\u4ee3\u7801\uff0c\u91cd\u6784\u7684\u65f6\u5019\u6ca1\u6709\u6539\u52a8", "url": "https://github.com/seata/seata/pull/3341#discussion_r538360644", "createdAt": "2020-12-08T13:20:58Z", "author": {"login": "hoverruan"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,86 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"file not found--\" + e.getMessage(), e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5NTk1NQ=="}, "originalCommit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Mzg3Njg1OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozMzowMFrOICAtjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozMzowMFrOICAtjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk3OTcyNQ==", "bodyText": "LOGGER.error(\"decode name error:{}\",e.getMessage(), e);", "url": "https://github.com/seata/seata/pull/3341#discussion_r538979725", "createdAt": "2020-12-09T03:33:00Z", "author": {"login": "xingfudeshi"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n-                    }\n-                } else {\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"decode name error\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Mzg3OTU1OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDoxOFrOICAvBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDoxOFrOICAvBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MDEwMQ==", "bodyText": "URLDecoder.decode(path, StandardCharsets.UTF_8);", "url": "https://github.com/seata/seata/pull/3341#discussion_r538980101", "createdAt": "2020-12-09T03:34:18Z", "author": {"login": "xingfudeshi"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n-                    }\n-                } else {\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"decode name error\", e);\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromFileSystem(String decodedPath) {\n+        String[] tryPaths = new String[] {\n+            // first: project dir\n+            Paths.get(this.getClass().getClassLoader().getResource(\"\").getPath(), decodedPath).toString(),\n+            // second: system path\n+            decodedPath\n+        };\n+\n+        for (String tryPath : tryPaths) {\n+            File targetFile = new File(tryPath);\n+            if (targetFile.exists()) {\n+                return targetFile;\n+            }\n+\n+            // try to append config suffix\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                targetFile = new File(tryPath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (targetFile.exists()) {\n+                    return targetFile;\n+                }\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromClasspath(String name) throws UnsupportedEncodingException {\n+        URL resource = this.getClass().getClassLoader().getResource(name);\n+        if (resource == null) {\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (resource != null) {\n                     if (LOGGER.isInfoEnabled()) {\n-                        LOGGER.info(\"The configuration file used is {}\", name);\n+                        LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n                     }\n                     String path = resource.getPath();\n                     path = URLDecoder.decode(path, \"utf-8\");\n                     return new File(path);\n                 }\n             }\n-        } catch (UnsupportedEncodingException e) {\n-            LOGGER.error(\"file not found--\" + e.getMessage(), e);\n+        } else {\n+            if (LOGGER.isInfoEnabled()) {\n+                LOGGER.info(\"The configuration file used is {}\", name);\n+            }\n+            String path = resource.getPath();\n+            path = URLDecoder.decode(path, \"utf-8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Mzg4MDQ5OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDozOVrOICAvgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDozOVrOICAvgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MDIyNQ==", "bodyText": "URLDecoder.decode(path, StandardCharsets.UTF_8);", "url": "https://github.com/seata/seata/pull/3341#discussion_r538980225", "createdAt": "2020-12-09T03:34:39Z", "author": {"login": "xingfudeshi"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n-                    }\n-                } else {\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"decode name error\", e);\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromFileSystem(String decodedPath) {\n+        String[] tryPaths = new String[] {\n+            // first: project dir\n+            Paths.get(this.getClass().getClassLoader().getResource(\"\").getPath(), decodedPath).toString(),\n+            // second: system path\n+            decodedPath\n+        };\n+\n+        for (String tryPath : tryPaths) {\n+            File targetFile = new File(tryPath);\n+            if (targetFile.exists()) {\n+                return targetFile;\n+            }\n+\n+            // try to append config suffix\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                targetFile = new File(tryPath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (targetFile.exists()) {\n+                    return targetFile;\n+                }\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromClasspath(String name) throws UnsupportedEncodingException {\n+        URL resource = this.getClass().getClassLoader().getResource(name);\n+        if (resource == null) {\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (resource != null) {\n                     if (LOGGER.isInfoEnabled()) {\n-                        LOGGER.info(\"The configuration file used is {}\", name);\n+                        LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n                     }\n                     String path = resource.getPath();\n                     path = URLDecoder.decode(path, \"utf-8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMzYwMDE0OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NzozMFrOIEwHAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NzozMFrOIEwHAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg1MzQ0MA==", "bodyText": "\u5efa\u8bae\u4f7f\u7528\u82f1\u6587\u6ce8\u91ca", "url": "https://github.com/seata/seata/pull/3341#discussion_r541853440", "createdAt": "2020-12-13T05:57:30Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +137,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17063ad8795fdac3a09fa4d047144556bae6bbcf"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1368, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}