{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTEzMDE5", "number": 2275, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToxNjozMVrODpbOiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToxNjozMVrODpbOiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzY0Mjk3OnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToxNjozMVrOF4l2tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyMjowNVrOF4mDAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4NDc4OQ==", "bodyText": "I think  !SpringProxyUtils.isProxy Contains the !(bean instanceof SpringProxy)) condition.", "url": "https://github.com/seata/seata/pull/2275#discussion_r394884789", "createdAt": "2020-03-19T09:16:31Z", "author": {"login": "slievrly"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -227,7 +227,7 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n                 }\n \n                 LOGGER.info(\"Bean[{}] with name [{}] would use interceptor [{}]\", bean.getClass().getName(), beanName, interceptor.getClass().getName());\n-                if (!AopUtils.isAopProxy(bean)) {\n+                if (!SpringProxyUtils.isProxy(bean) || !(bean instanceof SpringProxy)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6382ed62eea5d90b862bd331f1c87cb4f8da4d8c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4NzkzNw==", "bodyText": "!SpringProxyUtils.isProxy(bean) -> !AopUtils.isAopProxy(bean)  -> !((object instanceof SpringProxy && (Proxy.isProxyClass(object.getClass()) || ClassUtils.isCglibProxyClass(object.getClass())))) -> !(bean instanceof SpringProxy)) || !((Proxy.isProxyClass(object.getClass()) || ClassUtils.isCglibProxyClass(object.getClass()))))) ->   !(bean instanceof SpringProxy)) || (!Proxy.isProxyClass(object.getClass()) && !ClassUtils.isCglibProxyClass(object.getClass())))", "url": "https://github.com/seata/seata/pull/2275#discussion_r394887937", "createdAt": "2020-03-19T09:22:05Z", "author": {"login": "slievrly"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionScanner.java", "diffHunk": "@@ -227,7 +227,7 @@ protected Object wrapIfNecessary(Object bean, String beanName, Object cacheKey)\n                 }\n \n                 LOGGER.info(\"Bean[{}] with name [{}] would use interceptor [{}]\", bean.getClass().getName(), beanName, interceptor.getClass().getName());\n-                if (!AopUtils.isAopProxy(bean)) {\n+                if (!SpringProxyUtils.isProxy(bean) || !(bean instanceof SpringProxy)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg4NDc4OQ=="}, "originalCommit": {"oid": "6382ed62eea5d90b862bd331f1c87cb4f8da4d8c"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1627, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}