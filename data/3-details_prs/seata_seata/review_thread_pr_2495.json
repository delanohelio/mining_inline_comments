{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODgxMzI1", "number": 2495, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjozMzo1MFrODuOY_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTozNjoyOFrODvesVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Nzk2ODYxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/ConnectionProxy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjozMzo1MFrOGAGvUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjo1MTo0MlrOGCtu7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2MzYwMQ==", "bodyText": "Is it more appropriate to put logic with lockkey as empty in the checkLock method?", "url": "https://github.com/seata/seata/pull/2495#discussion_r402763601", "createdAt": "2020-04-03T06:33:50Z", "author": {"login": "slievrly"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/ConnectionProxy.java", "diffHunk": "@@ -198,8 +200,10 @@ private void doCommit() throws SQLException {\n     }\n \n     private void processLocalCommitWithGlobalLocks() throws SQLException {\n-\n-        checkLock(context.buildLockKeys());\n+        Set<String> lockKeys = context.getLockKeysBuffer();\n+        if (CollectionUtils.isNotEmpty(lockKeys)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd478945011261f628ba3df23629a19f0ecf94bb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2NDc0OQ==", "bodyText": "ok,i will change", "url": "https://github.com/seata/seata/pull/2495#discussion_r402764749", "createdAt": "2020-04-03T06:37:05Z", "author": {"login": "lightClouds917"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/ConnectionProxy.java", "diffHunk": "@@ -198,8 +200,10 @@ private void doCommit() throws SQLException {\n     }\n \n     private void processLocalCommitWithGlobalLocks() throws SQLException {\n-\n-        checkLock(context.buildLockKeys());\n+        Set<String> lockKeys = context.getLockKeysBuffer();\n+        if (CollectionUtils.isNotEmpty(lockKeys)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2MzYwMQ=="}, "originalCommit": {"oid": "fd478945011261f628ba3df23629a19f0ecf94bb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ5OTYyOA==", "bodyText": "the master code", "url": "https://github.com/seata/seata/pull/2495#discussion_r405499628", "createdAt": "2020-04-08T12:51:42Z", "author": {"login": "hermitcai"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/ConnectionProxy.java", "diffHunk": "@@ -198,8 +200,10 @@ private void doCommit() throws SQLException {\n     }\n \n     private void processLocalCommitWithGlobalLocks() throws SQLException {\n-\n-        checkLock(context.buildLockKeys());\n+        Set<String> lockKeys = context.getLockKeysBuffer();\n+        if (CollectionUtils.isNotEmpty(lockKeys)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2MzYwMQ=="}, "originalCommit": {"oid": "fd478945011261f628ba3df23629a19f0ecf94bb"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjgzODcwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/lock/AbstractLockManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxMzowODoyMlrOGAxwQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNDozMTowOVrOGBydvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODM1Mw==", "bodyText": "Incorrect", "url": "https://github.com/seata/seata/pull/2495#discussion_r403468353", "createdAt": "2020-04-04T13:08:22Z", "author": {"login": "zjinlei"}, "path": "server/src/main/java/io/seata/server/lock/AbstractLockManager.java", "diffHunk": "@@ -153,6 +153,9 @@ protected Locker getLocker() {\n                                             Long branchID) {\n         List<RowLock> locks = new ArrayList<RowLock>();\n \n+        if (StringUtils.isEmpty(lockKey)) {\n+            return null;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb6e0fd081aa4e538f379af66b88de2a090350b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUyODU3Mw==", "bodyText": "check  isLockable method.", "url": "https://github.com/seata/seata/pull/2495#discussion_r404528573", "createdAt": "2020-04-07T04:31:09Z", "author": {"login": "slievrly"}, "path": "server/src/main/java/io/seata/server/lock/AbstractLockManager.java", "diffHunk": "@@ -153,6 +153,9 @@ protected Locker getLocker() {\n                                             Long branchID) {\n         List<RowLock> locks = new ArrayList<RowLock>();\n \n+        if (StringUtils.isEmpty(lockKey)) {\n+            return null;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2ODM1Mw=="}, "originalCommit": {"oid": "6eb6e0fd081aa4e538f379af66b88de2a090350b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTEyNTM0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/lock/AbstractLockManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTozNjoyOVrOGB7Rgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTozNjoyOVrOGB7Rgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3Mjg5OA==", "bodyText": "That s ok. And I think can remove the code\nif (StringUtils.isNullOrEmpty(lockKey)) {\n            // no lock\n            return true;\n}\n\nat\nacquireLock(BranchSession branchSession)", "url": "https://github.com/seata/seata/pull/2495#discussion_r404672898", "createdAt": "2020-04-07T09:36:29Z", "author": {"login": "l81893521"}, "path": "server/src/main/java/io/seata/server/lock/AbstractLockManager.java", "diffHunk": "@@ -153,6 +153,9 @@ protected Locker getLocker() {\n                                             Long branchID) {\n         List<RowLock> locks = new ArrayList<RowLock>();\n \n+        if (StringUtils.isEmpty(lockKey)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7dbd260704a5146974c63ef9dd75b9d2f575a5"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1517, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}