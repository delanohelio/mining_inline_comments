{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NTAyMjIw", "number": 2380, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoyNjo0MFrOEKiJ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzo1MTozMVrOEndwcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDgwNzk4OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfigFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoyNjo0MFrOGroQ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjozMzoxN1rOGyX6Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwMTY0NQ==", "bodyText": "unnecessary", "url": "https://github.com/seata/seata/pull/2380#discussion_r448401645", "createdAt": "2020-07-01T14:26:40Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfigFactory.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.config;\n+\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.config.file.FileConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.util.LinkedHashMap;\n+import java.util.Set;\n+\n+/**\n+ * @author wangwei-ying\n+ */\n+public class FileConfigFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FileConfigFactory.class);\n+\n+    public static final String DEFAULT_TYPE = \"CONF\";\n+\n+    public static final String YAML_TYPE = \"YAML\";\n+\n+\n+    private static final LinkedHashMap<String, String> SUFFIX_MAP = new LinkedHashMap<String, String>(4) {\n+        {\n+            put(\"conf\", DEFAULT_TYPE);\n+            put(\"properties\", DEFAULT_TYPE);\n+            put(\"yml\", YAML_TYPE);\n+        }\n+    };\n+\n+\n+    public static FileConfig load() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff627e8b2ec7f65495f1ef28026891ed42603716"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk1MDIyMQ==", "bodyText": "construct??", "url": "https://github.com/seata/seata/pull/2380#discussion_r449950221", "createdAt": "2020-07-06T01:59:41Z", "author": {"login": "wangwei-ying"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfigFactory.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.config;\n+\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.config.file.FileConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.util.LinkedHashMap;\n+import java.util.Set;\n+\n+/**\n+ * @author wangwei-ying\n+ */\n+public class FileConfigFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FileConfigFactory.class);\n+\n+    public static final String DEFAULT_TYPE = \"CONF\";\n+\n+    public static final String YAML_TYPE = \"YAML\";\n+\n+\n+    private static final LinkedHashMap<String, String> SUFFIX_MAP = new LinkedHashMap<String, String>(4) {\n+        {\n+            put(\"conf\", DEFAULT_TYPE);\n+            put(\"properties\", DEFAULT_TYPE);\n+            put(\"yml\", YAML_TYPE);\n+        }\n+    };\n+\n+\n+    public static FileConfig load() {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwMTY0NQ=="}, "originalCommit": {"oid": "ff627e8b2ec7f65495f1ef28026891ed42603716"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3MzcwMw==", "bodyText": "construct??\n\nnewline", "url": "https://github.com/seata/seata/pull/2380#discussion_r455473703", "createdAt": "2020-07-16T02:33:17Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfigFactory.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.config;\n+\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.config.file.FileConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.util.LinkedHashMap;\n+import java.util.Set;\n+\n+/**\n+ * @author wangwei-ying\n+ */\n+public class FileConfigFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FileConfigFactory.class);\n+\n+    public static final String DEFAULT_TYPE = \"CONF\";\n+\n+    public static final String YAML_TYPE = \"YAML\";\n+\n+\n+    private static final LinkedHashMap<String, String> SUFFIX_MAP = new LinkedHashMap<String, String>(4) {\n+        {\n+            put(\"conf\", DEFAULT_TYPE);\n+            put(\"properties\", DEFAULT_TYPE);\n+            put(\"yml\", YAML_TYPE);\n+        }\n+    };\n+\n+\n+    public static FileConfig load() {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwMTY0NQ=="}, "originalCommit": {"oid": "ff627e8b2ec7f65495f1ef28026891ed42603716"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDgzNTA4OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfigFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDozMjo0MVrOGroh0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMTowNzoyOVrOGzB62Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwNTk2OA==", "bodyText": "not in use", "url": "https://github.com/seata/seata/pull/2380#discussion_r448405968", "createdAt": "2020-07-01T14:32:41Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfigFactory.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.config;\n+\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.config.file.FileConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.util.LinkedHashMap;\n+import java.util.Set;\n+\n+/**\n+ * @author wangwei-ying\n+ */\n+public class FileConfigFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FileConfigFactory.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff627e8b2ec7f65495f1ef28026891ed42603716"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2MjAwOQ==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2380#discussion_r456162009", "createdAt": "2020-07-17T01:07:29Z", "author": {"login": "wangwei-ying"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfigFactory.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.config;\n+\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.config.file.FileConfig;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.util.LinkedHashMap;\n+import java.util.Set;\n+\n+/**\n+ * @author wangwei-ying\n+ */\n+public class FileConfigFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FileConfigFactory.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwNTk2OA=="}, "originalCommit": {"oid": "ff627e8b2ec7f65495f1ef28026891ed42603716"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA1MDczOnYy", "diffSide": "RIGHT", "path": "script/server/config/file.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODozNzowM1rOHEi3FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODozNzowM1rOHEi3FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUyNzUwOQ==", "bodyText": "store.mode", "url": "https://github.com/seata/seata/pull/2380#discussion_r474527509", "createdAt": "2020-08-21T08:37:03Z", "author": {"login": "a364176773"}, "path": "script/server/config/file.properties", "diffHunk": "@@ -0,0 +1,27 @@\n+store.model=file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA1MjExOnYy", "diffSide": "RIGHT", "path": "script/server/config/file.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODozNzoxOFrOHEi37g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo1MDo0M1rOHGb4eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUyNzcyNg==", "bodyText": "= \"\"", "url": "https://github.com/seata/seata/pull/2380#discussion_r474527726", "createdAt": "2020-08-21T08:37:18Z", "author": {"login": "a364176773"}, "path": "script/server/config/file.properties", "diffHunk": "@@ -0,0 +1,27 @@\n+store.model=file\n+store.file.dir=sessionStore\n+store.file.maxBranchSessionSize=16384\n+store.file.maxGlobalSessionSize=512\n+store.file.fileWriteBufferCacheSize=16384\n+store.file.sessionReloadReadSize=100\n+store.file.flushDiskMode=async\n+store.db.datasource=druid\n+store.db.dbType=mysql\n+store.db.driverClassName=com.mysql.jdbc.Driver\n+store.db.url=jdbc:mysql://127.0.0.1:3306/seata\n+store.db.user=mysql\n+store.db.password=mysql\n+store.db.minConn=5\n+store.db.maxConn=100\n+store.db.globalTable=global_table\n+store.db.branchTable=branch_table\n+store.db.lockTable=lock_table\n+store.db.queryLimit=100\n+store.db.maxWait=5000\n+store.redis.host=127.0.0.1\n+store.redis.port=6379\n+store.redis.password=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxMDMzMA==", "bodyText": "store.redis.password= \"\"  This config value is  \"\"\"\"", "url": "https://github.com/seata/seata/pull/2380#discussion_r476510330", "createdAt": "2020-08-25T14:50:43Z", "author": {"login": "wangwei-ying"}, "path": "script/server/config/file.properties", "diffHunk": "@@ -0,0 +1,27 @@\n+store.model=file\n+store.file.dir=sessionStore\n+store.file.maxBranchSessionSize=16384\n+store.file.maxGlobalSessionSize=512\n+store.file.fileWriteBufferCacheSize=16384\n+store.file.sessionReloadReadSize=100\n+store.file.flushDiskMode=async\n+store.db.datasource=druid\n+store.db.dbType=mysql\n+store.db.driverClassName=com.mysql.jdbc.Driver\n+store.db.url=jdbc:mysql://127.0.0.1:3306/seata\n+store.db.user=mysql\n+store.db.password=mysql\n+store.db.minConn=5\n+store.db.maxConn=100\n+store.db.globalTable=global_table\n+store.db.branchTable=branch_table\n+store.db.lockTable=lock_table\n+store.db.queryLimit=100\n+store.db.maxWait=5000\n+store.redis.host=127.0.0.1\n+store.redis.port=6379\n+store.redis.password=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUyNzcyNg=="}, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA1Mjc1OnYy", "diffSide": "RIGHT", "path": "script/server/config/file.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODozNzoyOFrOHEi4XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODozNzoyOFrOHEi4XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUyNzgzNg==", "bodyText": "mode", "url": "https://github.com/seata/seata/pull/2380#discussion_r474527836", "createdAt": "2020-08-21T08:37:28Z", "author": {"login": "a364176773"}, "path": "script/server/config/file.yml", "diffHunk": "@@ -0,0 +1,47 @@\n+\n+## transaction log store, only used in seata-server\n+store:\n+\n+  ## store mode: file\u3001db\u3001redis\n+  model: file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA1MzM3OnYy", "diffSide": "RIGHT", "path": "script/server/config/file.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODozNzozNVrOHEi4uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODozNzozNVrOHEi4uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUyNzkyOQ==", "bodyText": ": \"\"", "url": "https://github.com/seata/seata/pull/2380#discussion_r474527929", "createdAt": "2020-08-21T08:37:35Z", "author": {"login": "a364176773"}, "path": "script/server/config/file.yml", "diffHunk": "@@ -0,0 +1,47 @@\n+\n+## transaction log store, only used in seata-server\n+store:\n+\n+  ## store mode: file\u3001db\u3001redis\n+  model: file\n+  ## file store property\n+  file:\n+    ## store location dir\n+    dir: sessionStore\n+    # branch session size , if exceeded first try compress lockkey, still exceeded throws exceptions\n+    maxBranchSessionSize: 16384\n+    # globe session size , if exceeded throws exceptions\n+    maxGlobalSessionSize: 512\n+    # file buffer size , if exceeded allocate new buffer\n+    fileWriteBufferCacheSize: 16384\n+    # when recover batch read size\n+    sessionReloadReadSize: 100\n+    # async, sync\n+    flushDiskMode: async\n+  ## database store property\n+  db:\n+    ## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp)/HikariDataSource(hikari) etc.\n+    datasource: druid\n+    ## mysql/oracle/postgresql/h2/oceanbase etc.\n+    dbType: mysql\n+    driverClassName: com.mysql.jdbc.Driver\n+    url: jdbc:mysql://127.0.0.1:3306/seata\n+    user: mysql\n+    password: mysql\n+    minConn: 5\n+    maxConn: 100\n+    globalTable: global_table\n+    branchTable: branch_table\n+    lockTable: lock_table\n+    queryLimit: 100\n+    maxWait: 5000\n+  ## redis store property\n+  redis:\n+    host: 127.0.0.1\n+    port: 6379\n+    password:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA2NjQ3OnYy", "diffSide": "RIGHT", "path": "script/server/config/registry.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODo0MDowM1rOHEjBKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODo0MDowM1rOHEjBKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUzMDA4OQ==", "bodyText": "file.properties", "url": "https://github.com/seata/seata/pull/2380#discussion_r474530089", "createdAt": "2020-08-21T08:40:03Z", "author": {"login": "a364176773"}, "path": "script/server/config/registry.properties", "diffHunk": "@@ -0,0 +1,54 @@\n+registry.type=file\n+registry.loadBalance=RandomLoadBalance\n+registry.loadBalanceVirtualNodes=10\n+registry.nacos.application=seata-server\n+registry.nacos.serverAddr=127.0.0.1:8848\n+registry.nacos.group=SEATA_GROUP\n+registry.nacos.namespace=\n+registry.nacos.cluster=default\n+registry.nacos.username=\n+registry.nacos.password=\n+registry.eureka.serviceUrl=http://localhost:8761/eureka\n+registry.eureka.application=default\n+registry.eureka.weight=1\n+registry.redis.serverAddr=localhost:6379\n+registry.redis.db=0\n+registry.redis.password=\n+registry.redis.cluster=default\n+registry.redis.timeout=0\n+registry.zk.cluster=default\n+registry.zk.serverAddr=127.0.0.1:2181\n+registry.zk.sessionTimeout=6000\n+registry.zk.connectTimeout=2000\n+registry.zk.username=\n+registry.zk.password=\n+registry.consul.cluster=default\n+registry.consul.serverAddr=127.0.0.1:8500\n+registry.etcd3.cluster=default\n+registry.etcd3.serverAddr=http://localhost:2379\n+registry.sofa.serverAddr=127.0.0.1:9603\n+registry.sofa.application=default\n+registry.sofa.region=DEFAULT_ZONE\n+registry.sofa.datacenter=DefaultDataCenter\n+registry.sofa.cluster=default\n+registry.sofa.group=SEATA_GROUP\n+registry.sofa.addressWaitTime=3000\n+registry.file.name=file.conf\n+config.type=file\n+config.nacos.serverAddr=127.0.0.1:8848\n+config.nacos.namespace=\n+config.nacos.group=SEATA_GROUP\n+config.nacos.username=\n+config.nacos.password=\n+config.consul.serverAddr=127.0.0.1:8500\n+config.apollo.appId=seata-server\n+config.apollo.apolloMeta=http://192.168.1.204:8801\n+config.apollo.namespace=application\n+config.apollo.apolloAccesskeySecret=\n+config.zk.serverAddr=127.0.0.1:2181\n+config.zk.sessionTimeout=6000\n+config.zk.connectTimeout=2000\n+config.zk.username=\n+config.zk.password=\n+config.etcd3.serverAddr=http://localhost:2379\n+config.file.name=file.conf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA3MTcyOnYy", "diffSide": "RIGHT", "path": "script/server/config/registry.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODo0MDo1OVrOHEjEvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODo0MDo1OVrOHEjEvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUzMTAwNA==", "bodyText": "file.properties", "url": "https://github.com/seata/seata/pull/2380#discussion_r474531004", "createdAt": "2020-08-21T08:40:59Z", "author": {"login": "a364176773"}, "path": "script/server/config/registry.properties", "diffHunk": "@@ -0,0 +1,54 @@\n+registry.type=file\n+registry.loadBalance=RandomLoadBalance\n+registry.loadBalanceVirtualNodes=10\n+registry.nacos.application=seata-server\n+registry.nacos.serverAddr=127.0.0.1:8848\n+registry.nacos.group=SEATA_GROUP\n+registry.nacos.namespace=\n+registry.nacos.cluster=default\n+registry.nacos.username=\n+registry.nacos.password=\n+registry.eureka.serviceUrl=http://localhost:8761/eureka\n+registry.eureka.application=default\n+registry.eureka.weight=1\n+registry.redis.serverAddr=localhost:6379\n+registry.redis.db=0\n+registry.redis.password=\n+registry.redis.cluster=default\n+registry.redis.timeout=0\n+registry.zk.cluster=default\n+registry.zk.serverAddr=127.0.0.1:2181\n+registry.zk.sessionTimeout=6000\n+registry.zk.connectTimeout=2000\n+registry.zk.username=\n+registry.zk.password=\n+registry.consul.cluster=default\n+registry.consul.serverAddr=127.0.0.1:8500\n+registry.etcd3.cluster=default\n+registry.etcd3.serverAddr=http://localhost:2379\n+registry.sofa.serverAddr=127.0.0.1:9603\n+registry.sofa.application=default\n+registry.sofa.region=DEFAULT_ZONE\n+registry.sofa.datacenter=DefaultDataCenter\n+registry.sofa.cluster=default\n+registry.sofa.group=SEATA_GROUP\n+registry.sofa.addressWaitTime=3000\n+registry.file.name=file.conf\n+config.type=file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA3MjkzOnYy", "diffSide": "RIGHT", "path": "script/server/config/registry.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODo0MToxM1rOHEjFjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODo0MToxM1rOHEjFjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUzMTIxMw==", "bodyText": "file.yml", "url": "https://github.com/seata/seata/pull/2380#discussion_r474531213", "createdAt": "2020-08-21T08:41:13Z", "author": {"login": "a364176773"}, "path": "script/server/config/registry.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+registry:\n+  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa\n+  type: file\n+  loadBalance: RandomLoadBalance\n+  loadBalanceVirtualNodes: 10\n+\n+  nacos:\n+    application: seata-server\n+    serverAddr: 127.0.0.1:8848\n+    group: SEATA_GROUP\n+    namespace: \n+    cluster: default\n+    username: \n+    password: \n+  \n+  eureka:\n+    serviceUrl: http://localhost:8761/eureka\n+    application: default\n+    weight: 1\n+  \n+  redis:\n+    serverAddr: localhost:6379\n+    db: 0\n+    password: \n+    cluster: default\n+    timeout: 0\n+  \n+  zk:\n+    cluster: default\n+    serverAddr: 127.0.0.1:2181\n+    sessionTimeout: 6000\n+    connectTimeout: 2000\n+    username: \n+    password: \n+  \n+  consul:\n+    cluster: default\n+    serverAddr: 127.0.0.1:8500\n+  \n+  etcd3:\n+    cluster: default\n+    serverAddr: http://localhost:2379\n+  \n+  sofa:\n+    serverAddr: 127.0.0.1:9603\n+    application: default\n+    region: DEFAULT_ZONE\n+    datacenter: DefaultDataCenter\n+    cluster: default\n+    group: SEATA_GROUP\n+    addressWaitTime: 3000\n+  \n+  file:\n+    name: file.conf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjA3NDg5OnYy", "diffSide": "RIGHT", "path": "script/server/config/registry.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwODo0MTozN1rOHEjG0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOToyNzoyOVrOHElqxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUzMTUzOA==", "bodyText": "file.yml", "url": "https://github.com/seata/seata/pull/2380#discussion_r474531538", "createdAt": "2020-08-21T08:41:37Z", "author": {"login": "a364176773"}, "path": "script/server/config/registry.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+registry:\n+  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa\n+  type: file\n+  loadBalance: RandomLoadBalance\n+  loadBalanceVirtualNodes: 10\n+\n+  nacos:\n+    application: seata-server\n+    serverAddr: 127.0.0.1:8848\n+    group: SEATA_GROUP\n+    namespace: \n+    cluster: default\n+    username: \n+    password: \n+  \n+  eureka:\n+    serviceUrl: http://localhost:8761/eureka\n+    application: default\n+    weight: 1\n+  \n+  redis:\n+    serverAddr: localhost:6379\n+    db: 0\n+    password: \n+    cluster: default\n+    timeout: 0\n+  \n+  zk:\n+    cluster: default\n+    serverAddr: 127.0.0.1:2181\n+    sessionTimeout: 6000\n+    connectTimeout: 2000\n+    username: \n+    password: \n+  \n+  consul:\n+    cluster: default\n+    serverAddr: 127.0.0.1:8500\n+  \n+  etcd3:\n+    cluster: default\n+    serverAddr: http://localhost:2379\n+  \n+  sofa:\n+    serverAddr: 127.0.0.1:9603\n+    application: default\n+    region: DEFAULT_ZONE\n+    datacenter: DefaultDataCenter\n+    cluster: default\n+    group: SEATA_GROUP\n+    addressWaitTime: 3000\n+  \n+  file:\n+    name: file.conf\n+  \n+\n+\n+config:\n+  # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\n+  type: file\n+\n+  nacos:\n+    serverAddr: 127.0.0.1:8848\n+    namespace: \n+    group: SEATA_GROUP\n+    username: \n+    password: \n+  \n+  consul:\n+    serverAddr: 127.0.0.1:8500\n+  \n+  apollo:\n+    appId: seata-server\n+    apolloMeta: http://192.168.1.204:8801\n+    namespace: application\n+    apolloAccesskeySecret: \n+  \n+  zk:\n+    serverAddr: 127.0.0.1:2181\n+    sessionTimeout: 6000\n+    connectTimeout: 2000\n+    username: \n+    password: \n+  \n+  etcd3:\n+    serverAddr: http://localhost:2379\n+  \n+  file:\n+    name: file.conf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU3MzUxMQ==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2380#discussion_r474573511", "createdAt": "2020-08-21T09:27:29Z", "author": {"login": "wangwei-ying"}, "path": "script/server/config/registry.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+registry:\n+  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa\n+  type: file\n+  loadBalance: RandomLoadBalance\n+  loadBalanceVirtualNodes: 10\n+\n+  nacos:\n+    application: seata-server\n+    serverAddr: 127.0.0.1:8848\n+    group: SEATA_GROUP\n+    namespace: \n+    cluster: default\n+    username: \n+    password: \n+  \n+  eureka:\n+    serviceUrl: http://localhost:8761/eureka\n+    application: default\n+    weight: 1\n+  \n+  redis:\n+    serverAddr: localhost:6379\n+    db: 0\n+    password: \n+    cluster: default\n+    timeout: 0\n+  \n+  zk:\n+    cluster: default\n+    serverAddr: 127.0.0.1:2181\n+    sessionTimeout: 6000\n+    connectTimeout: 2000\n+    username: \n+    password: \n+  \n+  consul:\n+    cluster: default\n+    serverAddr: 127.0.0.1:8500\n+  \n+  etcd3:\n+    cluster: default\n+    serverAddr: http://localhost:2379\n+  \n+  sofa:\n+    serverAddr: 127.0.0.1:9603\n+    application: default\n+    region: DEFAULT_ZONE\n+    datacenter: DefaultDataCenter\n+    cluster: default\n+    group: SEATA_GROUP\n+    addressWaitTime: 3000\n+  \n+  file:\n+    name: file.conf\n+  \n+\n+\n+config:\n+  # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\n+  type: file\n+\n+  nacos:\n+    serverAddr: 127.0.0.1:8848\n+    namespace: \n+    group: SEATA_GROUP\n+    username: \n+    password: \n+  \n+  consul:\n+    serverAddr: 127.0.0.1:8500\n+  \n+  apollo:\n+    appId: seata-server\n+    apolloMeta: http://192.168.1.204:8801\n+    namespace: application\n+    apolloAccesskeySecret: \n+  \n+  zk:\n+    serverAddr: 127.0.0.1:2181\n+    sessionTimeout: 6000\n+    connectTimeout: 2000\n+    username: \n+    password: \n+  \n+  etcd3:\n+    serverAddr: http://localhost:2379\n+  \n+  file:\n+    name: file.conf", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUzMTUzOA=="}, "originalCommit": {"oid": "817df46ed736d1fbac24c17a51accb0bb2faea8a"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3Nzg2NDM4OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/file/YamlFileConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTo0NTowOFrOHGQVNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTo0NTowOFrOHGQVNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjMyMTA3OA==", "bodyText": "config.get(dataId[dataId.length - 1]) If it is null  String.valueof(null)  to be  \"null\"", "url": "https://github.com/seata/seata/pull/2380#discussion_r476321078", "createdAt": "2020-08-25T09:45:08Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/file/YamlFileConfig.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.config.file;\n+\n+import io.seata.common.loader.LoadLevel;\n+import io.seata.common.loader.Scope;\n+import io.seata.config.FileConfigFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.yaml.snakeyaml.Yaml;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.util.Map;\n+\n+/**\n+ * @author wangwei-ying\n+ */\n+@LoadLevel(name = FileConfigFactory.YAML_TYPE, order = 1,scope = Scope.PROTOTYPE)\n+public class YamlFileConfig implements FileConfig {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(YamlFileConfig.class);\n+    private Map configMap;\n+\n+    public YamlFileConfig(File file, String name) {\n+        Yaml yaml = new Yaml();\n+        try {\n+            configMap = (Map) yaml.load(new FileInputStream(file));\n+        } catch (FileNotFoundException e) {\n+            throw new IllegalArgumentException(\"file not found\");\n+        }\n+    }\n+\n+    @Override\n+    public String getString(String path) {\n+        try {\n+            Map config = configMap;\n+            String[] dataId = path.split(\"\\\\.\");\n+            for (int i = 0; i < dataId.length - 1; i++) {\n+                if (config.containsKey(dataId[i])) {\n+                    config = (Map) config.get(dataId[i]);\n+                } else {\n+                    return null;\n+                }\n+            }\n+            return String.valueOf(config.get(dataId[dataId.length - 1]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38a94678bfbe977224e76c63b9ec275601138617"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTUwMjQ5OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/test/resources/registry-testyaml.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoxODo1MlrOHRI2pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoxODo1MlrOHRI2pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczMjkwMQ==", "bodyText": "Why not change the name to\nregistr-test-yaml.yml", "url": "https://github.com/seata/seata/pull/2380#discussion_r487732901", "createdAt": "2020-09-14T08:18:52Z", "author": {"login": "l81893521"}, "path": "config/seata-config-core/src/test/resources/registry-testyaml.yml", "diffHunk": "@@ -0,0 +1,11 @@\n+registry:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01bd9ae0cc105e50eabd91458c92bc4ce85784fa"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MTUwMzgwOnYy", "diffSide": "RIGHT", "path": "script/server/config/registry.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoxOToxM1rOHRI3aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwODoxOToxM1rOHRI3aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczMzA5Ng==", "bodyText": "Please check the symbol\n\u3001", "url": "https://github.com/seata/seata/pull/2380#discussion_r487733096", "createdAt": "2020-09-14T08:19:13Z", "author": {"login": "l81893521"}, "path": "script/server/config/registry.yml", "diffHunk": "@@ -0,0 +1,91 @@\n+registry:\n+  # file \u3001nacos \u3001eureka\u3001redis\u3001zk\u3001consul\u3001etcd3\u3001sofa", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01bd9ae0cc105e50eabd91458c92bc4ce85784fa"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODE3NDU4OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzo1MTozMVrOHYEiAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzo1MTozMVrOHYEiAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAwMjExNA==", "bodyText": "still test fail when file path include sapce mark.\n/D:/Program%20Files/github/seata/server/target/classes/registry", "url": "https://github.com/seata/seata/pull/2380#discussion_r495002114", "createdAt": "2020-09-25T13:51:31Z", "author": {"login": "l81893521"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -139,8 +121,68 @@ public FileConfiguration(String name, boolean allowDynamicRefresh) {\n \n         this.name = name;\n         configOperateExecutor = new ThreadPoolExecutor(CORE_CONFIG_OPERATE_THREAD, MAX_CONFIG_OPERATE_THREAD,\n-            Integer.MAX_VALUE, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n-            new NamedThreadFactory(\"configOperate\", MAX_CONFIG_OPERATE_THREAD));\n+                Integer.MAX_VALUE, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n+                new NamedThreadFactory(\"configOperate\", MAX_CONFIG_OPERATE_THREAD));\n+    }\n+\n+    private File getConfigFile(String name) {\n+        if (name == null) {\n+            throw new IllegalArgumentException(\"name can't be null\");\n+        }\n+        String filePath = null;\n+        boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n+        if (filePathCustom) {\n+            filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n+        } else {\n+            // projectDir first\n+            filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n+        }\n+\n+        File targetFile = new File(filePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fd5533d5035cedb8c39459d55e41ace70101c2"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1683, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}