{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMDY4MzIy", "number": 2642, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDozMzo0NFrOD34rHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDozMzo0NFrOD34rHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTI2ODE0OnYy", "diffSide": "RIGHT", "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDozMzo0NFrOGOZS5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzowNDowM1rOGRGWNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw==", "bodyText": "You can continue to return registryClient, and result is used as a local transit variable, keeping the minimum changes.", "url": "https://github.com/seata/seata/pull/2642#discussion_r417747687", "createdAt": "2020-04-30T04:33:44Z", "author": {"login": "zjinlei"}, "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "diffHunk": "@@ -131,12 +133,13 @@ private RegistryClient getRegistryInstance() {\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    registryClient = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient)registryClient).init();\n+                    result = new DefaultRegistryClient(config);\n+                    ((DefaultRegistryClient) result).init();\n+                    registryClient = result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxMzIyNA==", "bodyText": "@zjinlei\nThis way minimizes the number of volatile field reads, which improves performance, but makes the code a bit complicated.\nIf minimum change or simple code is preferred, I will change the code to what you recommend \uff5e", "url": "https://github.com/seata/seata/pull/2642#discussion_r420513224", "createdAt": "2020-05-06T02:27:13Z", "author": {"login": "chenxi-null"}, "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "diffHunk": "@@ -131,12 +133,13 @@ private RegistryClient getRegistryInstance() {\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    registryClient = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient)registryClient).init();\n+                    result = new DefaultRegistryClient(config);\n+                    ((DefaultRegistryClient) result).init();\n+                    registryClient = result;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw=="}, "originalCommit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNjYwNQ==", "bodyText": "[RegistryClient result = registryClient] == [null == registryClient]\n[result = registryClient] == [null == registryClient]\nSame reading times, and here is singleton initialization, code readability is more important.", "url": "https://github.com/seata/seata/pull/2642#discussion_r420526605", "createdAt": "2020-05-06T03:30:31Z", "author": {"login": "zjinlei"}, "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "diffHunk": "@@ -131,12 +133,13 @@ private RegistryClient getRegistryInstance() {\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    registryClient = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient)registryClient).init();\n+                    result = new DefaultRegistryClient(config);\n+                    ((DefaultRegistryClient) result).init();\n+                    registryClient = result;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw=="}, "originalCommit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4Mjk2Nw==", "bodyText": "@zjinlei\nJust to confirm. Do you mean to change it like this?\nif (null == registryClient) {\n    synchronized (SofaRegistryServiceImpl.class) {\n        if (null == registryClient) {\n            // ...\n            DefaultRegistryClient result = new DefaultRegistryClient(config);\n            result.init();\n            registryClient = result;\n        }\n    }\n}\nreturn registryClient;\nThe original code;\nRegistryClient result = registryClient;\nif (null == result) {\n    synchronized (SofaRegistryServiceImpl.class) {\n        result = registryClient;\n        if (null == result) {\n            // ...    \n            result = new DefaultRegistryClient(config);\n            ((DefaultRegistryClient) result).init();\n            registryClient = result;\n        }\n    }\n}\nreturn result;", "url": "https://github.com/seata/seata/pull/2642#discussion_r420582967", "createdAt": "2020-05-06T07:04:03Z", "author": {"login": "chenxi-null"}, "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "diffHunk": "@@ -131,12 +133,13 @@ private RegistryClient getRegistryInstance() {\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    registryClient = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient)registryClient).init();\n+                    result = new DefaultRegistryClient(config);\n+                    ((DefaultRegistryClient) result).init();\n+                    registryClient = result;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw=="}, "originalCommit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1577, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}