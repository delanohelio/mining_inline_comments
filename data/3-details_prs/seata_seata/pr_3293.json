{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NDk3NDEz", "number": 3293, "title": "bugfix: configuration cache get value cast exception.", "bodyText": "\u2160. Describe what this PR did\nbugfix: fix configuration cache value change to new value is string, when get boolean then throws cast exception.\n\u2161. Does this pull request fix one issue?\n\n\u2162. Why don't you add test cases (unit test/integration test)?\n\u2163. Describe how to verify it\n\u2164. Special notes for reviews", "createdAt": "2020-11-20T07:16:46Z", "url": "https://github.com/seata/seata/pull/3293", "merged": true, "mergeCommit": {"oid": "607571689abfb3de74971d14d4f4ca7f908d1861"}, "closed": true, "closedAt": "2020-12-16T14:16:57Z", "author": {"login": "jsbxyyx"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeR7lhAH2gAyNTI0NDk3NDEzOjcwYzg0YzJjNDI3ZDM5OWI1NGQ1OWFiYmNkZDJmNTM5MzNhMGRkNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmvpGJgFqTU1MzcyNjc3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "70c84c2c427d399b54d59abbcdd2f53933a0dd53", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/70c84c2c427d399b54d59abbcdd2f53933a0dd53", "committedDate": "2020-11-20T07:08:26Z", "message": "configuration cache cast exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9583c27e2ea46b5a60aebbd8e8adbedbc6b9eef5", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/9583c27e2ea46b5a60aebbd8e8adbedbc6b9eef5", "committedDate": "2020-11-20T07:12:11Z", "message": "optimize substring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a050dbc1b0ac5f1eec61805bdafb346af9ee0f0e", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/a050dbc1b0ac5f1eec61805bdafb346af9ee0f0e", "committedDate": "2020-11-20T07:17:10Z", "message": "Merge branch 'develop' into configuration_cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23ad6b0238fa5baf06e01443207d1581f57f46e0", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/23ad6b0238fa5baf06e01443207d1581f57f46e0", "committedDate": "2020-11-20T07:39:08Z", "message": "add test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "324945752e75b9a6d7a684591fbc1c661e1bb9d4", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/324945752e75b9a6d7a684591fbc1c661e1bb9d4", "committedDate": "2020-11-20T10:00:07Z", "message": "fix: test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e6fad635e79c96e859ad0d199d5aaa4375853e", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/22e6fad635e79c96e859ad0d199d5aaa4375853e", "committedDate": "2020-11-23T01:06:53Z", "message": "Merge branch 'develop' into configuration_cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "952453bff07431bce915c5703e5d409eab1e3e53", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/952453bff07431bce915c5703e5d409eab1e3e53", "committedDate": "2020-11-23T02:03:25Z", "message": "fix: ci"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "166d040c05b227b52b9fedc19f67f6045c506f6e", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/166d040c05b227b52b9fedc19f67f6045c506f6e", "committedDate": "2020-11-23T02:05:54Z", "message": "Merge branch 'develop' into configuration_cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce8ddfce07835ce121cd9ed90a555ebf709a198d", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/ce8ddfce07835ce121cd9ed90a555ebf709a198d", "committedDate": "2020-11-23T02:29:41Z", "message": "add test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/86cf60ca49b8b5422337dc6129afc70256cc6cec", "committedDate": "2020-11-23T02:34:40Z", "message": "Merge branch 'develop' into configuration_cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTA2ODI3", "url": "https://github.com/seata/seata/pull/3293#pullrequestreview-537106827", "createdAt": "2020-11-24T06:20:29Z", "commit": {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyMDoyOVrOH4tgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyMDoyOVrOH4tgBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIyNzc4Mw==", "bodyText": "better use equalsIgnoreCase", "url": "https://github.com/seata/seata/pull/3293#discussion_r529227783", "createdAt": "2020-11-24T06:20:29Z", "author": {"login": "slievrly"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -103,4 +111,59 @@ public Configuration proxy(Configuration originalConfiguration) {\n     public void clear() {\n         CONFIG_CACHE.clear();\n     }\n+\n+    private static class ObjectWrapper {\n+\n+        static final String INT = \"Int\";\n+        static final String BOOLEAN = \"Boolean\";\n+        static final String DURATION = \"Duration\";\n+        static final String LONG = \"Long\";\n+        static final String SHORT = \"Short\";\n+\n+        private final Object data;\n+        private final String type;\n+\n+        ObjectWrapper(Object data, String type) {\n+            this.data = data;\n+            this.type = type;\n+        }\n+\n+        public Object getData() {\n+            return data;\n+        }\n+\n+        public String getType() {\n+            return type;\n+        }\n+\n+        public Object convertData(String aType) {\n+            if (data != null && Objects.equals(type, aType)) {\n+                return data;\n+            }\n+            if (data != null) {\n+                if (INT.equals(aType)) {\n+                    return Integer.parseInt(data.toString());\n+                } else if (BOOLEAN.equals(aType)) {\n+                    return Boolean.parseBoolean(data.toString());\n+                } else if (DURATION.equals(aType)) {\n+                    return DurationUtil.parse(data.toString());\n+                } else if (LONG.equals(aType)) {\n+                    return Long.parseLong(data.toString());\n+                } else if (SHORT.equals(aType)) {\n+                    return Short.parseShort(data.toString());\n+                }\n+                return String.valueOf(data);\n+            }\n+            return null;\n+        }\n+\n+        public static boolean supportType(String type) {\n+            return INT.equals(type)\n+                    || BOOLEAN.equals(type)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTEwNDg4", "url": "https://github.com/seata/seata/pull/3293#pullrequestreview-537110488", "createdAt": "2020-11-24T06:29:33Z", "commit": {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyOTozM1rOH4trQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyOTozM1rOH4trQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzMDY1Nw==", "bodyText": "if(oldVluue!=null && oldVluue!=newValue)  ->  (oldVluue.type)newValue ?", "url": "https://github.com/seata/seata/pull/3293#discussion_r529230657", "createdAt": "2020-11-24T06:29:33Z", "author": {"login": "slievrly"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -64,10 +68,11 @@ public static ConfigurationCache getInstance() {\n \n     @Override\n     public void onChangeEvent(ConfigurationChangeEvent event) {\n-        Object oldValue = CONFIG_CACHE.get(event.getDataId());\n-        if (null == oldValue || !oldValue.equals(event.getNewValue())) {\n+        ObjectWrapper wrapper = CONFIG_CACHE.get(event.getDataId());\n+        // The wrapper.data only exists in the cache when it is not null.\n+        if (null == wrapper || !wrapper.getData().equals(event.getNewValue())) {\n             if (StringUtils.isNotBlank(event.getNewValue())) {\n-                CONFIG_CACHE.put(event.getDataId(), event.getNewValue());\n+                CONFIG_CACHE.put(event.getDataId(), new ObjectWrapper(event.getNewValue(), null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f93e69c8803bc3ea22eeeae3886073dbc0754827", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/f93e69c8803bc3ea22eeeae3886073dbc0754827", "committedDate": "2020-11-24T07:38:18Z", "message": "optimize: cache put cast."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/18cd928294d15c3bf0fcbaf70618b10878efae1b", "committedDate": "2020-11-24T07:51:43Z", "message": "Merge branch 'develop' into configuration_cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MTg0NzM5", "url": "https://github.com/seata/seata/pull/3293#pullrequestreview-538184739", "createdAt": "2020-11-25T06:18:22Z", "commit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxODoyMlrOH5kodg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoyMDo0NVrOH5kraw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTA2Mg==", "bodyText": "result ==null?null:result;", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131062", "createdAt": "2020-11-25T06:18:22Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);\n+                        wrapper = new ObjectWrapper(result, type);\n+                        // The wrapper.data only exists in the cache when it is not null.\n                         if (result != null) {\n-                            CONFIG_CACHE.put(rawDataId, result);\n+                            CONFIG_CACHE.put(rawDataId, wrapper);\n                         }\n                     }\n-                    if (null != result && method.getReturnType().equals(String.class)) {\n-                        return String.valueOf(result);\n-                    }\n-                    return result;\n+                    return wrapper.convertData(type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTI5Ng==", "bodyText": "wrapper = new ObjectWrapper(result, type);\nCONFIG_CACHE.put(rawDataId, wrapper);", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131296", "createdAt": "2020-11-25T06:19:05Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);\n+                        wrapper = new ObjectWrapper(result, type);\n+                        // The wrapper.data only exists in the cache when it is not null.\n                         if (result != null) {\n-                            CONFIG_CACHE.put(rawDataId, result);\n+                            CONFIG_CACHE.put(rawDataId, wrapper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTM1Ng==", "bodyText": "result = method.invoke(originalConfiguration, args);", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131356", "createdAt": "2020-11-25T06:19:18Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTcyNw==", "bodyText": "ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\nObject result = wrapper==null?null:wrapper.getData();", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131727", "createdAt": "2020-11-25T06:20:27Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTgxOQ==", "bodyText": "result == null", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131819", "createdAt": "2020-11-25T06:20:45Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "285ea9856b6b5897449a3c53f9f8f544c1809847", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/285ea9856b6b5897449a3c53f9f8f544c1809847", "committedDate": "2020-11-25T06:40:00Z", "message": "fix: reviews"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757ec8ad435e74c6eba59f95d11e171585148c3a", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/757ec8ad435e74c6eba59f95d11e171585148c3a", "committedDate": "2020-11-25T07:33:59Z", "message": "fix: reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MzIwMDg2", "url": "https://github.com/seata/seata/pull/3293#pullrequestreview-538320086", "createdAt": "2020-11-25T09:47:51Z", "commit": {"oid": "757ec8ad435e74c6eba59f95d11e171585148c3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "199ddbb08c8ecbb4c3c86e41db3a422565553f59", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/199ddbb08c8ecbb4c3c86e41db3a422565553f59", "committedDate": "2020-11-26T01:12:36Z", "message": "Merge branch 'develop' into configuration_cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18938202bf91050a717f1218d6f1156ffe26019f", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/18938202bf91050a717f1218d6f1156ffe26019f", "committedDate": "2020-12-15T05:15:16Z", "message": "Merge branch 'develop' into configuration_cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNzI2Nzc1", "url": "https://github.com/seata/seata/pull/3293#pullrequestreview-553726775", "createdAt": "2020-12-16T14:16:47Z", "commit": {"oid": "18938202bf91050a717f1218d6f1156ffe26019f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3503, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}