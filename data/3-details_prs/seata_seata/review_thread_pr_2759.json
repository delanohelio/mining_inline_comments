{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjQyMzQ2", "number": 2759, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTo0MDozNVrOECYFFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTo0MDozNVrOECYFFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTI3MTI0OnYy", "diffSide": "RIGHT", "path": "common/src/test/java/io/seata/common/thread/NamedThreadFactoryTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTo0MDozNVrOGey8HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMjowMDowNFrOGfd9fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTA1Mw==", "bodyText": "recommand:\nassertEquals(\"prefix_\" + DEFAULT_THREAD_PREFIX_COUNTER + \"_\" + (i + 1) + \"_\" + THREAD_TOTAL_SIZE, t1.getName());", "url": "https://github.com/seata/seata/pull/2759#discussion_r434945053", "createdAt": "2020-06-04T01:40:35Z", "author": {"login": "jsbxyyx"}, "path": "common/src/test/java/io/seata/common/thread/NamedThreadFactoryTest.java", "diffHunk": "@@ -49,4 +51,16 @@ public void testConstructorWithPrefixAndDaemons() {\n         assertThat(thread.getName()).startsWith(\"prefix\");\n         assertThat(thread.isDaemon()).isTrue();\n     }\n+\n+\n+    @Test\n+    public void testThreadNameHasCounterWithPrefixCounter() {\n+        NamedThreadFactory factory = new NamedThreadFactory(\"prefix\", THREAD_TOTAL_SIZE,true);\n+        for (int i = 0; i < THREAD_TOTAL_SIZE; i ++) {\n+            Thread t1 = factory.newThread(() -> {});\n+\n+            // the first _DEFAULT_THREAD_PREFIX_COUNTER is meaning thread counter\n+            assertThat(t1.getName()).startsWith(\"prefix_\" + DEFAULT_THREAD_PREFIX_COUNTER + \"_\" + (i + 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed584f5c47c1c7e278fc886ffa3ef93da2182e8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI1NjE2OA==", "bodyText": "\u8fd9\u91cc\u6211\u628astartsWith\u6539\u6210\u4e86isEqualsTo\uff0c\u7136\u540e\u7531\u4e8e\u8fd9\u4e2a\u6d4b\u8bd5\u7c7b\u4e4b\u524d\u90fd\u662f\u7528\u7684assertThat\u7684\u5f62\u5f0f\uff0c\u6211\u4fdd\u7559\u4e86\u8fd9\u4e2a\u3002\u987a\u4fbf\u6539\u4e86t1\u8fd9\u4e2a\u53d8\u91cf\u547d\u540d\u3002\n\u987a\u4fbf\u4e0a\u9762\u7684\u4ee3\u7801\u683c\u5f0f\u6307\u7684\u662f\uff1f\u53c2\u8003\u54ea\u4e2a\u4ee3\u7801\u89c4\u8303\uff1f", "url": "https://github.com/seata/seata/pull/2759#discussion_r435256168", "createdAt": "2020-06-04T13:33:18Z", "author": {"login": "caohdgege"}, "path": "common/src/test/java/io/seata/common/thread/NamedThreadFactoryTest.java", "diffHunk": "@@ -49,4 +51,16 @@ public void testConstructorWithPrefixAndDaemons() {\n         assertThat(thread.getName()).startsWith(\"prefix\");\n         assertThat(thread.isDaemon()).isTrue();\n     }\n+\n+\n+    @Test\n+    public void testThreadNameHasCounterWithPrefixCounter() {\n+        NamedThreadFactory factory = new NamedThreadFactory(\"prefix\", THREAD_TOTAL_SIZE,true);\n+        for (int i = 0; i < THREAD_TOTAL_SIZE; i ++) {\n+            Thread t1 = factory.newThread(() -> {});\n+\n+            // the first _DEFAULT_THREAD_PREFIX_COUNTER is meaning thread counter\n+            assertThat(t1.getName()).startsWith(\"prefix_\" + DEFAULT_THREAD_PREFIX_COUNTER + \"_\" + (i + 1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTA1Mw=="}, "originalCommit": {"oid": "aed584f5c47c1c7e278fc886ffa3ef93da2182e8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY0OTkxOA==", "bodyText": "code style refer alibaba style.", "url": "https://github.com/seata/seata/pull/2759#discussion_r435649918", "createdAt": "2020-06-05T02:00:04Z", "author": {"login": "jsbxyyx"}, "path": "common/src/test/java/io/seata/common/thread/NamedThreadFactoryTest.java", "diffHunk": "@@ -49,4 +51,16 @@ public void testConstructorWithPrefixAndDaemons() {\n         assertThat(thread.getName()).startsWith(\"prefix\");\n         assertThat(thread.isDaemon()).isTrue();\n     }\n+\n+\n+    @Test\n+    public void testThreadNameHasCounterWithPrefixCounter() {\n+        NamedThreadFactory factory = new NamedThreadFactory(\"prefix\", THREAD_TOTAL_SIZE,true);\n+        for (int i = 0; i < THREAD_TOTAL_SIZE; i ++) {\n+            Thread t1 = factory.newThread(() -> {});\n+\n+            // the first _DEFAULT_THREAD_PREFIX_COUNTER is meaning thread counter\n+            assertThat(t1.getName()).startsWith(\"prefix_\" + DEFAULT_THREAD_PREFIX_COUNTER + \"_\" + (i + 1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTA1Mw=="}, "originalCommit": {"oid": "aed584f5c47c1c7e278fc886ffa3ef93da2182e8"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1465, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}