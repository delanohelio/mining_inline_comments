{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2ODY1Mjc4", "number": 3076, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDo0MzowMFrOEiDq8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxMDoyNTo0NlrOExgn9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTQ3MTg0OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/SelectForUpdateExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDo0MzowMFrOHPtvgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwNDo1Mjo1MFrOHQ5fdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI0MDEzMA==", "bodyText": "it's not consistent with the previous meaning", "url": "https://github.com/seata/seata/pull/3076#discussion_r486240130", "createdAt": "2020-09-10T10:43:00Z", "author": {"login": "slievrly"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/SelectForUpdateExecutor.java", "diffHunk": "@@ -113,7 +111,13 @@ public T doExecute(Object... args) throws Throwable {\n                     } else {\n                         conn.rollback();\n                     }\n-                    lockRetryController.sleep(lce);\n+\n+                    // retry hear only when the config is true\n+                    if (LockRetryPolicy.isLockRetryPolicyBranchRollbackOnConflict()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d57d1b6860e55e38ce10592c2b63047600201118"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ4MTIwNg==", "bodyText": "change", "url": "https://github.com/seata/seata/pull/3076#discussion_r487481206", "createdAt": "2020-09-13T04:52:50Z", "author": {"login": "caohdgege"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/SelectForUpdateExecutor.java", "diffHunk": "@@ -113,7 +111,13 @@ public T doExecute(Object... args) throws Throwable {\n                     } else {\n                         conn.rollback();\n                     }\n-                    lockRetryController.sleep(lce);\n+\n+                    // retry hear only when the config is true\n+                    if (LockRetryPolicy.isLockRetryPolicyBranchRollbackOnConflict()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI0MDEzMA=="}, "originalCommit": {"oid": "d57d1b6860e55e38ce10592c2b63047600201118"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMzQ5NjU2OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/SelectForUpdateExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxMDoyMzozN1rOHnsSVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxMDoyMzozN1rOHnsSVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM4MjEwMg==", "bodyText": "Is it better to comment the code like \"Do the same thing under either @GlobalTransactional or @GlobalLock, that only check the global lock here.\" or something else more accurate? There is nothing about \u201ckey appending\u201d in the new code block, so the comment could be a little puzzling.", "url": "https://github.com/seata/seata/pull/3076#discussion_r511382102", "createdAt": "2020-10-24T10:23:37Z", "author": {"login": "ggndnn"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/SelectForUpdateExecutor.java", "diffHunk": "@@ -96,13 +96,11 @@ public T doExecute(Object... args) throws Throwable {\n                         break;\n                     }\n \n-                    if (RootContext.inGlobalTransaction()) {\n-                        //do as usual\n+                    if (RootContext.inGlobalTransaction() || RootContext.requireGlobalLock()) {\n+                        // do as usual\n+                        // in @GlobalLock env, don't need to append key eithor,\n+                        // but check lock hear, do the same thing as @GlobalTransactional env", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9508ede9d1fb954ecd2267019e6f548fff0d4f7f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMzUwMTk3OnYy", "diffSide": "LEFT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/BaseTransactionalExecutor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxMDoyNTo0N1rOHnsV1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNDo1ODo0OFrOHnyKMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM4Mjk5OQ==", "bodyText": "What's this line deleting for? Is it necessary?", "url": "https://github.com/seata/seata/pull/3076#discussion_r511382999", "createdAt": "2020-10-24T10:25:47Z", "author": {"login": "ggndnn"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/BaseTransactionalExecutor.java", "diffHunk": "@@ -407,5 +407,4 @@ protected TableRecords buildTableRecords(Map<String, List<Object>> pkValuesMap)\n     protected String getDbType() {\n         return statementProxy.getConnectionProxy().getDbType();\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9508ede9d1fb954ecd2267019e6f548fff0d4f7f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQxMDc1OQ==", "bodyText": "\u7a7a\u767d\u884c\uff0c\u5e94\u8be5\u662f\u4e4b\u524d\u505a\u4ee3\u7801\u53d8\u66f4\u7684\u65f6\u5019\u4e0d\u5c0f\u5fc3\u5220\u7684", "url": "https://github.com/seata/seata/pull/3076#discussion_r511410759", "createdAt": "2020-10-24T11:36:39Z", "author": {"login": "caohdgege"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/BaseTransactionalExecutor.java", "diffHunk": "@@ -407,5 +407,4 @@ protected TableRecords buildTableRecords(Map<String, List<Object>> pkValuesMap)\n     protected String getDbType() {\n         return statementProxy.getConnectionProxy().getDbType();\n     }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM4Mjk5OQ=="}, "originalCommit": {"oid": "9508ede9d1fb954ecd2267019e6f548fff0d4f7f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ2NjI0NA==", "bodyText": "Can you revert this modification?", "url": "https://github.com/seata/seata/pull/3076#discussion_r511466244", "createdAt": "2020-10-24T14:07:07Z", "author": {"login": "ggndnn"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/BaseTransactionalExecutor.java", "diffHunk": "@@ -407,5 +407,4 @@ protected TableRecords buildTableRecords(Map<String, List<Object>> pkValuesMap)\n     protected String getDbType() {\n         return statementProxy.getConnectionProxy().getDbType();\n     }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM4Mjk5OQ=="}, "originalCommit": {"oid": "9508ede9d1fb954ecd2267019e6f548fff0d4f7f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3ODMyMw==", "bodyText": "ok", "url": "https://github.com/seata/seata/pull/3076#discussion_r511478323", "createdAt": "2020-10-24T14:58:48Z", "author": {"login": "caohdgege"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/BaseTransactionalExecutor.java", "diffHunk": "@@ -407,5 +407,4 @@ protected TableRecords buildTableRecords(Map<String, List<Object>> pkValuesMap)\n     protected String getDbType() {\n         return statementProxy.getConnectionProxy().getDbType();\n     }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM4Mjk5OQ=="}, "originalCommit": {"oid": "9508ede9d1fb954ecd2267019e6f548fff0d4f7f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1416, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}