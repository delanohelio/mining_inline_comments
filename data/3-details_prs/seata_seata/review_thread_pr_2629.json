{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODU1MDU4", "number": 2629, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMDozNjoxMlrOD3IcMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDoxMToxOVrOD3pUig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MTM2NTYxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMDozNjoxMlrOGNNtPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMToxNjowMVrOGNsrMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwOTI0NA==", "bodyText": "1.currentSchema is magic number\n2.break?", "url": "https://github.com/seata/seata/pull/2629#discussion_r416509244", "createdAt": "2020-04-28T10:36:12Z", "author": {"login": "zjinlei"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +141,32 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));\n+            StringBuilder jdbcUrlBuilder = new StringBuilder();\n+            jdbcUrlBuilder.append(jdbcUrl.substring(0, jdbcUrl.indexOf('?')));\n+            /*\n+             * prevent pg sql url like\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=public\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=seata\n+             * cause the duplicated resourceId\n+             * it will cause the problem like\n+             * 1.get file lock fail\n+             * 2.error table meta cache\n+             */\n+            StringBuilder paramsBuilder = new StringBuilder();\n+            String paramUrl = jdbcUrl.substring(jdbcUrl.indexOf('?') + 1, jdbcUrl.length());\n+            String[] urlParams = paramUrl.split(\"&\");\n+            for (String urlParam : urlParams) {\n+                if (urlParam.contains(\"currentSchema\")) {\n+                    paramsBuilder.append(urlParam);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173aac3dff883a78554ff64b6b29fb493b49c6ba"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAxNjYyNQ==", "bodyText": "ok. Already add break", "url": "https://github.com/seata/seata/pull/2629#discussion_r417016625", "createdAt": "2020-04-29T01:16:01Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +141,32 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));\n+            StringBuilder jdbcUrlBuilder = new StringBuilder();\n+            jdbcUrlBuilder.append(jdbcUrl.substring(0, jdbcUrl.indexOf('?')));\n+            /*\n+             * prevent pg sql url like\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=public\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=seata\n+             * cause the duplicated resourceId\n+             * it will cause the problem like\n+             * 1.get file lock fail\n+             * 2.error table meta cache\n+             */\n+            StringBuilder paramsBuilder = new StringBuilder();\n+            String paramUrl = jdbcUrl.substring(jdbcUrl.indexOf('?') + 1, jdbcUrl.length());\n+            String[] urlParams = paramUrl.split(\"&\");\n+            for (String urlParam : urlParams) {\n+                if (urlParam.contains(\"currentSchema\")) {\n+                    paramsBuilder.append(urlParam);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUwOTI0NA=="}, "originalCommit": {"oid": "173aac3dff883a78554ff64b6b29fb493b49c6ba"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTEyNDk3OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNjoyMzoxOFrOGNxKyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo0NjowMlrOGN3a8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA5MDI1MA==", "bodyText": "According to dbType, non-pg remains the same", "url": "https://github.com/seata/seata/pull/2629#discussion_r417090250", "createdAt": "2020-04-29T06:23:18Z", "author": {"login": "zjinlei"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +141,33 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));\n+            StringBuilder jdbcUrlBuilder = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93550eeaf2ec0de41d0c413680b008dce89f9808"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5MjY4OA==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/2629#discussion_r417192688", "createdAt": "2020-04-29T09:46:02Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +141,33 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));\n+            StringBuilder jdbcUrlBuilder = new StringBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA5MDI1MA=="}, "originalCommit": {"oid": "93550eeaf2ec0de41d0c413680b008dce89f9808"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTM3ODA5OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo1MDozOFrOGNzgdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwOTo0ODo1NFrOGN3hDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODU2Ng==", "bodyText": "remove else, direct return?", "url": "https://github.com/seata/seata/pull/2629#discussion_r417128566", "createdAt": "2020-04-29T07:50:38Z", "author": {"login": "jsbxyyx"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +141,33 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));\n+            StringBuilder jdbcUrlBuilder = new StringBuilder();\n+            jdbcUrlBuilder.append(jdbcUrl.substring(0, jdbcUrl.indexOf('?')));\n+            /*\n+             * prevent pg sql url like\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=public\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=seata\n+             * cause the duplicated resourceId\n+             * it will cause the problem like\n+             * 1.get file lock fail\n+             * 2.error table meta cache\n+             */\n+            StringBuilder paramsBuilder = new StringBuilder();\n+            String paramUrl = jdbcUrl.substring(jdbcUrl.indexOf('?') + 1, jdbcUrl.length());\n+            String[] urlParams = paramUrl.split(\"&\");\n+            for (String urlParam : urlParams) {\n+                if (urlParam.contains(\"currentSchema\")) {\n+                    paramsBuilder.append(urlParam);\n+                    break;\n+                }\n+            }\n+\n+            if (paramsBuilder.length() > 0) {\n+                jdbcUrlBuilder.append(\"?\");\n+                jdbcUrlBuilder.append(paramsBuilder);\n+            }\n+\n+            return jdbcUrlBuilder.toString();\n         } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93550eeaf2ec0de41d0c413680b008dce89f9808"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5NDI1Mw==", "bodyText": "I think\nif() {\n\n} else {\n\n}\n\nis more readable.", "url": "https://github.com/seata/seata/pull/2629#discussion_r417194253", "createdAt": "2020-04-29T09:48:54Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +141,33 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));\n+            StringBuilder jdbcUrlBuilder = new StringBuilder();\n+            jdbcUrlBuilder.append(jdbcUrl.substring(0, jdbcUrl.indexOf('?')));\n+            /*\n+             * prevent pg sql url like\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=public\n+             * jdbc:postgresql://127.0.0.1:5432/seata?currentSchema=seata\n+             * cause the duplicated resourceId\n+             * it will cause the problem like\n+             * 1.get file lock fail\n+             * 2.error table meta cache\n+             */\n+            StringBuilder paramsBuilder = new StringBuilder();\n+            String paramUrl = jdbcUrl.substring(jdbcUrl.indexOf('?') + 1, jdbcUrl.length());\n+            String[] urlParams = paramUrl.split(\"&\");\n+            for (String urlParam : urlParams) {\n+                if (urlParam.contains(\"currentSchema\")) {\n+                    paramsBuilder.append(urlParam);\n+                    break;\n+                }\n+            }\n+\n+            if (paramsBuilder.length() > 0) {\n+                jdbcUrlBuilder.append(\"?\");\n+                jdbcUrlBuilder.append(paramsBuilder);\n+            }\n+\n+            return jdbcUrlBuilder.toString();\n         } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyODU2Ng=="}, "originalCommit": {"oid": "93550eeaf2ec0de41d0c413680b008dce89f9808"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5Njc1Mjc0OnYy", "diffSide": "LEFT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDoxMToxOVrOGOAxMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMzozODo0NlrOGPBR3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM0NTg0Mw==", "bodyText": "Keep the original clear, suggest:\nreturn DBType.POSTGRESQL.name().equalsIgnoreCase(getDbType())? getPgResourceId() : jdbcUrl.substring(0,jdbcUrl.indexOf('?'));", "url": "https://github.com/seata/seata/pull/2629#discussion_r417345843", "createdAt": "2020-04-29T14:11:19Z", "author": {"login": "zjinlei"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +142,35 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "397f940fd0d628809df86d0daaf8aff5498f7b97"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcwNDk3Ng==", "bodyText": "fixed.", "url": "https://github.com/seata/seata/pull/2629#discussion_r417704976", "createdAt": "2020-04-30T01:28:00Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +142,35 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM0NTg0Mw=="}, "originalCommit": {"oid": "397f940fd0d628809df86d0daaf8aff5498f7b97"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0MjY1NQ==", "bodyText": "Only separate the different parts.\nif (!jdbcUrl.contains(\"?\")) is the same", "url": "https://github.com/seata/seata/pull/2629#discussion_r417742655", "createdAt": "2020-04-30T04:11:18Z", "author": {"login": "zjinlei"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +142,35 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM0NTg0Mw=="}, "originalCommit": {"oid": "397f940fd0d628809df86d0daaf8aff5498f7b97"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQwMjc4Mw==", "bodyText": "as you say, the code would be like this\nif (jdbcUrl.contains(\"?\")) {\n    if (DBType.POSTGRESQL.name().equalsIgnoreCase(getDbType())) {\n        getPGResourceId();\n    } else {\n      do something....\n    }\n} else {\n    do something\n}\n\nthe code is less, but the logic is more complicated.", "url": "https://github.com/seata/seata/pull/2629#discussion_r418402783", "createdAt": "2020-05-01T03:38:46Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/DataSourceProxy.java", "diffHunk": "@@ -141,7 +142,35 @@ public String getResourceGroupId() {\n     @Override\n     public String getResourceId() {\n         if (jdbcUrl.contains(\"?\")) {\n-            return jdbcUrl.substring(0, jdbcUrl.indexOf('?'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM0NTg0Mw=="}, "originalCommit": {"oid": "397f940fd0d628809df86d0daaf8aff5498f7b97"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1573, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}