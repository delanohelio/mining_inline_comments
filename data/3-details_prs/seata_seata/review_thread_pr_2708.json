{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMTI2MDg1", "number": 2708, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzo0NTo0OVrOD_jxag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzo0NTo0OVrOD_jxag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTcyOTcwOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/sql/serial/SerialArray.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzo0NTo0OVrOGaSZ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzo1MToyM1rOGaSmbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNzcwOA==", "bodyText": "Why not use javax.sql.rowset.serial.SerialArray?", "url": "https://github.com/seata/seata/pull/2708#discussion_r430217708", "createdAt": "2020-05-26T07:45:49Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/sql/serial/SerialArray.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.sql.serial;\n+\n+import javax.sql.rowset.serial.SerialBlob;\n+import javax.sql.rowset.serial.SerialClob;\n+import javax.sql.rowset.serial.SerialDatalink;\n+import javax.sql.rowset.serial.SerialException;\n+import javax.sql.rowset.serial.SerialJavaObject;\n+import java.net.URL;\n+import java.sql.Blob;\n+import java.sql.Clob;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+/**\n+ * used for jdbc type is JDBCType.ARRAY serialize.\n+ *\n+ * @author jsbxyyx\n+ */\n+public class SerialArray implements java.sql.Array, java.io.Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b647eaf80f968416282b47eea1dfb19957340b1a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIyMDkxMA==", "bodyText": "use javax.sql.rowset.serial.SerialArray to serializer framework may be throws exception.\ndetails see: getResultSet method, no-constructor method.", "url": "https://github.com/seata/seata/pull/2708#discussion_r430220910", "createdAt": "2020-05-26T07:51:23Z", "author": {"login": "jsbxyyx"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/sql/serial/SerialArray.java", "diffHunk": "@@ -0,0 +1,190 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.sql.serial;\n+\n+import javax.sql.rowset.serial.SerialBlob;\n+import javax.sql.rowset.serial.SerialClob;\n+import javax.sql.rowset.serial.SerialDatalink;\n+import javax.sql.rowset.serial.SerialException;\n+import javax.sql.rowset.serial.SerialJavaObject;\n+import java.net.URL;\n+import java.sql.Blob;\n+import java.sql.Clob;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+/**\n+ * used for jdbc type is JDBCType.ARRAY serialize.\n+ *\n+ * @author jsbxyyx\n+ */\n+public class SerialArray implements java.sql.Array, java.io.Serializable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxNzcwOA=="}, "originalCommit": {"oid": "b647eaf80f968416282b47eea1dfb19957340b1a"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1458, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}