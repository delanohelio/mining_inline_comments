{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5OTIxODQ0", "number": 3222, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoxODozOVrOEx1axQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMzoyMjo0MFrOEyokyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjkwODg1OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoxODozOVrOHoI-lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoxODozOVrOHoI-lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjE4Mw==", "bodyText": "\u65e2\u7136\u662f\u4e00\u4e2a\u5b9e\u4f8b\u4e86\uff0c\u6ca1\u6709\u5fc5\u8981\u53bb\u4e0d\u65ad\u7684new ConfigurationChangeEvent\u4e86\u5427\uff1f", "url": "https://github.com/seata/seata/pull/3222#discussion_r511852183", "createdAt": "2020-10-26T10:18:39Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -230,7 +233,7 @@ public void addConfigListener(String dataId, ConfigurationChangeListener listene\n         listenedConfigMap.put(dataId, ConfigurationFactory.getInstance().getConfig(dataId));\n \n         // Start config change listener for the dataId.\n-        FileListener fileListener = new FileListener(dataId, listener);\n+        fileListener.addListener(dataId, listener);\n         fileListener.onProcessEvent(new ConfigurationChangeEvent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef0657549828d159d1d1aaf9be1c923cc287a51"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjkwOTY3OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMDoxODo1MlrOHoI_CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTo1NToyMlrOHoWYnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw==", "bodyText": "\u5e94\u8be5\u5728\u4e0b\u9762\u6839\u636e\u4e0d\u540c\u7684dataid\u53bb\u6784\u5efa\u5bf9\u5e94\u7684event\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u5c31\u7528\u540c\u4e00\u4e2a\u4e86", "url": "https://github.com/seata/seata/pull/3222#discussion_r511852297", "createdAt": "2020-10-26T10:18:52Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +336,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n+            changeListeners.add(listener);\n+            dataIdMap.put(dataId, changeListeners);\n         }\n \n         @Override\n         public void onChangeEvent(ConfigurationChangeEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef0657549828d159d1d1aaf9be1c923cc287a51"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg2NTAyNQ==", "bodyText": "\u7528\u540c\u4e00\u4e2a\u5b9e\u4f8b\u5176\u5b9e\u4e5f\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e00\u6bb5\u5728\u6267\u884c\u7684\u65f6\u5019\u662f\u4e32\u884c\u7684", "url": "https://github.com/seata/seata/pull/3222#discussion_r511865025", "createdAt": "2020-10-26T10:40:10Z", "author": {"login": "caohdgege"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +336,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n+            changeListeners.add(listener);\n+            dataIdMap.put(dataId, changeListeners);\n         }\n \n         @Override\n         public void onChangeEvent(ConfigurationChangeEvent event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw=="}, "originalCommit": {"oid": "6ef0657549828d159d1d1aaf9be1c923cc287a51"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkxMTUyOA==", "bodyText": "\u786e\u8ba4\u4e86\u4e0b,\u662f\u7684,\u56e0\u4e3a\u4e32\u884c\u6267\u884c,\u4f1a\u8986\u76d6\u6389\u5185\u90e8\u7684dataid,\u90a3\u4e48\u5e94\u8be5\u6539\u52a8\u4e0b\u907f\u514dnew\u591a\u4e2aConfigurationChangeEvent\u5c31\u597d\u4e86", "url": "https://github.com/seata/seata/pull/3222#discussion_r511911528", "createdAt": "2020-10-26T12:07:57Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +336,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n+            changeListeners.add(listener);\n+            dataIdMap.put(dataId, changeListeners);\n         }\n \n         @Override\n         public void onChangeEvent(ConfigurationChangeEvent event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw=="}, "originalCommit": {"oid": "6ef0657549828d159d1d1aaf9be1c923cc287a51"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA3MTgzNg==", "bodyText": "\u90a3\u4e2a\u6539\u6210\u4e86\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\u624d\u4f1anew\uff0c\u5c31\u6ca1\u8fd9\u4e2a\u95ee\u9898\u4e86", "url": "https://github.com/seata/seata/pull/3222#discussion_r512071836", "createdAt": "2020-10-26T15:55:22Z", "author": {"login": "caohdgege"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +336,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());\n+            changeListeners.add(listener);\n+            dataIdMap.put(dataId, changeListeners);\n         }\n \n         @Override\n         public void onChangeEvent(ConfigurationChangeEvent event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg1MjI5Nw=="}, "originalCommit": {"oid": "6ef0657549828d159d1d1aaf9be1c923cc287a51"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDY4NDYwOnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjowNTozM1rOHosmjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzozNzo1MFrOHoupjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNTg1NQ==", "bodyText": "dataIdMap .computeIfAbsent(dataId,value->new HashSet<>())", "url": "https://github.com/seata/seata/pull/3222#discussion_r512435855", "createdAt": "2020-10-27T06:05:33Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +337,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ2OTM5MA==", "bodyText": "ok", "url": "https://github.com/seata/seata/pull/3222#discussion_r512469390", "createdAt": "2020-10-27T07:37:50Z", "author": {"login": "caohdgege"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +337,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();\n+\n         private final ExecutorService executor = new ThreadPoolExecutor(CORE_LISTENER_THREAD, MAX_LISTENER_THREAD, 0L,\n                 TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n                 new NamedThreadFactory(\"fileListener\", MAX_LISTENER_THREAD));\n \n         /**\n          * Instantiates a new FileListener.\n          *\n-         * @param dataId   the data id\n-         * @param listener the listener\n          */\n-        public FileListener(String dataId, ConfigurationChangeListener listener) {\n-            this.dataId = dataId;\n-            this.listener = listener;\n+        FileListener() {}\n+\n+        public void addListener(String dataId, ConfigurationChangeListener listener) {\n+            Set<ConfigurationChangeListener> changeListeners = dataIdMap.getOrDefault(dataId, new HashSet<>());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNTg1NQ=="}, "originalCommit": {"oid": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDY4NTcxOnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjowNjowNFrOHosnLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzo0MToxOFrOHouv2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNjAxNQ==", "bodyText": "Is there a thread safety issue?", "url": "https://github.com/seata/seata/pull/3222#discussion_r512436015", "createdAt": "2020-10-27T06:06:04Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +337,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ3MTAwMQ==", "bodyText": "modify to use concurrent safe map & set", "url": "https://github.com/seata/seata/pull/3222#discussion_r512471001", "createdAt": "2020-10-27T07:41:18Z", "author": {"login": "caohdgege"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -333,39 +337,45 @@ private void setFailResult(ConfigFuture configFuture) {\n      */\n     class FileListener implements ConfigurationChangeListener {\n \n-        private final String dataId;\n-        private final ConfigurationChangeListener listener;\n+        private final Map<String, Set<ConfigurationChangeListener>> dataIdMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNjAxNQ=="}, "originalCommit": {"oid": "6e3f8b3b29f2ae221f3df1cae6c55065c2d7d518"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTI5MDMyOnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMzoyMjo0MFrOHpYmYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMzoyMjo0MFrOHpYmYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE1NjcwNg==", "bodyText": "Why not start onProcessEvent the first time you add a listener\uff1f", "url": "https://github.com/seata/seata/pull/3222#discussion_r513156706", "createdAt": "2020-10-28T03:22:40Z", "author": {"login": "slievrly"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -83,6 +86,7 @@ public FileConfiguration() {\n         this.name = null;\n         this.targetFilePath = null;\n         this.allowDynamicRefresh = false;\n+        fileListener.onProcessEvent(new ConfigurationChangeEvent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7a4bf9cfc45cb8c9c28cf38e95f955e4028a0e8"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1327, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}