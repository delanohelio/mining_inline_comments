{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMjgyMzA0", "number": 3228, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzo1MToyOFrOEy0mYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToyMjoyNFrOFRzq_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzI2MDUxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/JacksonUndoLogParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzo1MToyOFrOHprEOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzo1MToyOFrOHprEOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ1OTI1OA==", "bodyText": "CollectionUtils.isNotEmpty is better code.", "url": "https://github.com/seata/seata/pull/3228#discussion_r513459258", "createdAt": "2020-10-28T13:51:28Z", "author": {"login": "dongzl"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/JacksonUndoLogParser.java", "diffHunk": "@@ -97,6 +102,28 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<JacksonSerializer> jacksonSerializers = EnhancedServiceLoader.loadAll(JacksonSerializer.class);\n+            if (!CollectionUtils.isEmpty(jacksonSerializers)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a293045a305153e271037abd41ec93038377e7e5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzI2MTE5OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzo1MTozNlrOHprEoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzo1MTozNlrOHprEoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ1OTM2MA==", "bodyText": "CollectionUtils.isNotEmpty is better code.", "url": "https://github.com/seata/seata/pull/3228#discussion_r513459360", "createdAt": "2020-10-28T13:51:36Z", "author": {"login": "dongzl"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "diffHunk": "@@ -51,6 +60,20 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<ProtostuffDelegate> delegates = EnhancedServiceLoader.loadAll(ProtostuffDelegate.class);\n+            if (!CollectionUtils.isEmpty(delegates)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a293045a305153e271037abd41ec93038377e7e5"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjExMjAxOnYy", "diffSide": "RIGHT", "path": "seata-plugin/seata-jackson-parser-oracle/src/test/java/io/seata/plugin/jackson/parser/oracle/package-info.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowNzo1MVrOIYbcYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowNzo1MVrOIYbcYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NjM3MA==", "bodyText": "Is it possible to add a unit test instead of keeping package-info here?", "url": "https://github.com/seata/seata/pull/3228#discussion_r562486370", "createdAt": "2021-01-22T09:07:51Z", "author": {"login": "xingfudeshi"}, "path": "seata-plugin/seata-jackson-parser-oracle/src/test/java/io/seata/plugin/jackson/parser/oracle/package-info.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+package io.seata.plugin.jackson.parser.oracle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjExODQ3OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/ProtostuffDelegate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowOTozNlrOIYbgQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowOTozNlrOIYbgQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzM2Mg==", "bodyText": "please add comment", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487362", "createdAt": "2021-01-22T09:09:36Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/ProtostuffDelegate.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import io.protostuff.runtime.Delegate;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface ProtostuffDelegate<T> {\n+\n+    Delegate<T> create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjExODk3OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/KryoTypeSerializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowOTo0NFrOIYbglw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowOTo0NFrOIYbglw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzQ0Nw==", "bodyText": "please add comment", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487447", "createdAt": "2021-01-22T09:09:44Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/KryoTypeSerializer.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import com.esotericsoftware.kryo.Serializer;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface KryoTypeSerializer<T> {\n+\n+    Class<T> type();\n+\n+    Serializer serializer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjExOTYxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/JacksonSerializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowOTo1NFrOIYbg-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOTowOTo1NFrOIYbg-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzU0Nw==", "bodyText": "please add comment", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487547", "createdAt": "2021-01-22T09:09:54Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/JacksonSerializer.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import com.fasterxml.jackson.databind.JsonDeserializer;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface JacksonSerializer<T> {\n+\n+    Class<T> type();\n+\n+    JsonSerializer<T> ser();\n+\n+    JsonDeserializer<? extends T> deser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjExOTkxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/FstSerializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMDowMFrOIYbhMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMDowMFrOIYbhMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4NzYwMQ==", "bodyText": "please add comment", "url": "https://github.com/seata/seata/pull/3228#discussion_r562487601", "createdAt": "2021-01-22T09:10:00Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/spi/FstSerializer.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package io.seata.rm.datasource.undo.parser.spi;\n+\n+import org.nustaq.serialization.FSTObjectSerializer;\n+\n+/**\n+ * @author jsbxyyx\n+ */\n+public interface FstSerializer {\n+\n+    Class type();\n+\n+    FSTObjectSerializer ser();\n+\n+    boolean alsoForAllSubclasses();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjEyNDY5OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMToxN1rOIYbkQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMToxN1rOIYbkQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4ODM4NQ==", "bodyText": "How about giving a warn or error message ?", "url": "https://github.com/seata/seata/pull/3228#discussion_r562488385", "createdAt": "2021-01-22T09:11:17Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "diffHunk": "@@ -51,6 +60,20 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<ProtostuffDelegate> delegates = EnhancedServiceLoader.loadAll(ProtostuffDelegate.class);\n+            if (CollectionUtils.isNotEmpty(delegates)) {\n+                for (ProtostuffDelegate delegate : delegates) {\n+                    if (delegate != null) {\n+                        idStrategy.registerDelegate(delegate.create());\n+                        LOGGER.info(\"protostuff undo log parser load [{}].\", delegate.getClass().getName());\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"ProtostuffDelegate not found children class.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjEyNjY5OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/KryoUndoLogParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMTo1MFrOIYblcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMTo1MFrOIYblcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4ODY4OQ==", "bodyText": "How about giving a warn or error message ?", "url": "https://github.com/seata/seata/pull/3228#discussion_r562488689", "createdAt": "2021-01-22T09:11:50Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/KryoUndoLogParser.java", "diffHunk": "@@ -15,19 +15,52 @@\n  */\n package io.seata.rm.datasource.undo.parser;\n \n+import com.esotericsoftware.kryo.Serializer;\n+import io.seata.common.executor.Initialize;\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.common.loader.EnhancedServiceNotFoundException;\n import io.seata.common.loader.LoadLevel;\n+import io.seata.common.util.CollectionUtils;\n import io.seata.rm.datasource.undo.BranchUndoLog;\n import io.seata.rm.datasource.undo.UndoLogParser;\n+import io.seata.rm.datasource.undo.parser.spi.KryoTypeSerializer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n \n /**\n  * kryo serializer\n  * @author jsbxyyx\n  */\n @LoadLevel(name = KryoUndoLogParser.NAME)\n-public class KryoUndoLogParser implements UndoLogParser {\n+public class KryoUndoLogParser implements UndoLogParser, Initialize {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(KryoUndoLogParser.class);\n \n     public static final String NAME = \"kryo\";\n \n+    @Override\n+    public void init() {\n+        try {\n+            List<KryoTypeSerializer> serializers = EnhancedServiceLoader.loadAll(KryoTypeSerializer.class);\n+            if (CollectionUtils.isNotEmpty(serializers)) {\n+                for (KryoTypeSerializer typeSerializer : serializers) {\n+                    if (typeSerializer != null) {\n+                        Class type = typeSerializer.type();\n+                        Serializer ser = typeSerializer.serializer();\n+                        if (type != null) {\n+                            KryoSerializerFactory.getInstance().registerSerializer(type, ser);\n+                            LOGGER.info(\"kryo undo log parser load [{}].\", typeSerializer.getClass().getName());\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"KryoTypeSerializer not found children class.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjEzMDI1OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/JacksonUndoLogParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMjo1M1rOIYbn5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMjo1M1rOIYbn5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4OTMxOA==", "bodyText": "How about giving a warn or error message ?", "url": "https://github.com/seata/seata/pull/3228#discussion_r562489318", "createdAt": "2021-01-22T09:12:53Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/JacksonUndoLogParser.java", "diffHunk": "@@ -97,6 +102,28 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<JacksonSerializer> jacksonSerializers = EnhancedServiceLoader.loadAll(JacksonSerializer.class);\n+            if (CollectionUtils.isNotEmpty(jacksonSerializers)) {\n+                for (JacksonSerializer jacksonSerializer : jacksonSerializers) {\n+                    Class type = jacksonSerializer.type();\n+                    JsonSerializer ser = jacksonSerializer.ser();\n+                    JsonDeserializer deser = jacksonSerializer.deser();\n+                    if (type != null) {\n+                        if (ser != null) {\n+                            module.addSerializer(type, ser);\n+                        }\n+                        if (deser != null) {\n+                            module.addDeserializer(type, deser);\n+                        }\n+                        LOGGER.info(\"jackson undo log parser load [{}].\", jacksonSerializer.getClass().getName());\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"JacksonSerializer not found children class.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjEzMDc1OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/FstUndoLogParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMzowM1rOIYboPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxMzowM1rOIYboPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ4OTQwNw==", "bodyText": "How about giving a warn or error message ?", "url": "https://github.com/seata/seata/pull/3228#discussion_r562489407", "createdAt": "2021-01-22T09:13:03Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/FstUndoLogParser.java", "diffHunk": "@@ -15,21 +15,55 @@\n  */\n package io.seata.rm.datasource.undo.parser;\n \n+import io.seata.common.executor.Initialize;\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import io.seata.common.loader.EnhancedServiceNotFoundException;\n import io.seata.common.loader.LoadLevel;\n+import io.seata.common.util.CollectionUtils;\n import io.seata.rm.datasource.undo.BranchUndoLog;\n import io.seata.rm.datasource.undo.UndoLogParser;\n+import io.seata.rm.datasource.undo.parser.spi.FstSerializer;\n+import org.nustaq.serialization.FSTObjectSerializer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n \n /**\n  * fst serializer\n  * @author funkye\n  */\n @LoadLevel(name = FstUndoLogParser.NAME)\n-public class FstUndoLogParser implements UndoLogParser {\n+public class FstUndoLogParser implements UndoLogParser, Initialize {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(FstUndoLogParser.class);\n \n     public static final String NAME = \"fst\";\n \n     private FstSerializerFactory fstFactory = FstSerializerFactory.getDefaultFactory();\n \n+    @Override\n+    public void init() {\n+        try {\n+            List<FstSerializer> serializers = EnhancedServiceLoader.loadAll(FstSerializer.class);\n+            if (CollectionUtils.isNotEmpty(serializers)) {\n+                for (FstSerializer serializer : serializers) {\n+                    if (serializer != null) {\n+                        Class type = serializer.type();\n+                        FSTObjectSerializer ser = serializer.ser();\n+                        boolean alsoForAllSubclasses = serializer.alsoForAllSubclasses();\n+                        if (type != null && ser != null) {\n+                            fstFactory.registerSerializer(type, ser, alsoForAllSubclasses);\n+                            LOGGER.info(\"fst undo log parser load [{}].\", serializer.getClass().getName());\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (EnhancedServiceNotFoundException e) {\n+            LOGGER.info(\"FstSerializer not found children class.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjE1NzM3OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/KryoSerializerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxOTo1NFrOIYb4hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToxOTo1NFrOIYb4hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5MzU3Mw==", "bodyText": "isNotEmpty may not required.", "url": "https://github.com/seata/seata/pull/3228#discussion_r562493573", "createdAt": "2021-01-22T09:19:54Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/KryoSerializerFactory.java", "diffHunk": "@@ -60,11 +65,23 @@ public void returnKryo(KryoSerializer kryoSerializer) {\n         pool.release(kryoSerializer.getKryo());\n     }\n \n+    public void registerSerializer(Class type, Serializer ser) {\n+        if (type != null && ser != null) {\n+            TYPE_MAP.put(type, ser);\n+        }\n+    }\n+\n     @Override\n     public Kryo create() {\n         Kryo kryo = new Kryo();\n         kryo.setRegistrationRequired(false);\n \n+        if (CollectionUtils.isNotEmpty(TYPE_MAP)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjE2MTQ1OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToyMDo1NFrOIYb68A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToyMDo1NFrOIYb68A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5NDE5Mg==", "bodyText": "if (delegate != null) may not required.", "url": "https://github.com/seata/seata/pull/3228#discussion_r562494192", "createdAt": "2021-01-22T09:20:54Z", "author": {"login": "xingfudeshi"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/undo/parser/ProtostuffUndoLogParser.java", "diffHunk": "@@ -51,6 +60,20 @@\n \n     @Override\n     public void init() {\n+        try {\n+            List<ProtostuffDelegate> delegates = EnhancedServiceLoader.loadAll(ProtostuffDelegate.class);\n+            if (CollectionUtils.isNotEmpty(delegates)) {\n+                for (ProtostuffDelegate delegate : delegates) {\n+                    if (delegate != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjE2NjYzOnYy", "diffSide": "RIGHT", "path": "seata-plugin/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToyMjoxN1rOIYb-Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQwNDo1NjowOVrOIaFBOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5NTAxOQ==", "bodyText": "Should this version be consistent with the main version?", "url": "https://github.com/seata/seata/pull/3228#discussion_r562495019", "createdAt": "2021-01-22T09:22:17Z", "author": {"login": "xingfudeshi"}, "path": "seata-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~  Copyright 1999-2019 Seata.io Group.\n+  ~\n+  ~  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~  you may not use this file except in compliance with the License.\n+  ~  You may obtain a copy of the License at\n+  ~\n+  ~       http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>io.seata</groupId>\n+    <artifactId>seata-plugin</artifactId>\n+    <version>${revision}</version>\n+    <modules>\n+        <module>seata-jackson-parser-oracle</module>\n+    </modules>\n+    <packaging>pom</packaging>\n+\n+    <properties>\n+        <!-- seata plugin version -->\n+        <revision>1.5.0-SNAPSHOT</revision>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDIxNjEyMg==", "bodyText": "yes", "url": "https://github.com/seata/seata/pull/3228#discussion_r564216122", "createdAt": "2021-01-26T04:56:09Z", "author": {"login": "jsbxyyx"}, "path": "seata-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~  Copyright 1999-2019 Seata.io Group.\n+  ~\n+  ~  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~  you may not use this file except in compliance with the License.\n+  ~  You may obtain a copy of the License at\n+  ~\n+  ~       http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>io.seata</groupId>\n+    <artifactId>seata-plugin</artifactId>\n+    <version>${revision}</version>\n+    <modules>\n+        <module>seata-jackson-parser-oracle</module>\n+    </modules>\n+    <packaging>pom</packaging>\n+\n+    <properties>\n+        <!-- seata plugin version -->\n+        <revision>1.5.0-SNAPSHOT</revision>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5NTAxOQ=="}, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0MjE2NzAwOnYy", "diffSide": "RIGHT", "path": "seata-plugin/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwOToyMjoyNFrOIYb-Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQwNDo1NzoyMVrOIaFCUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5NTA3NA==", "bodyText": "Should this version be consistent with the main version?", "url": "https://github.com/seata/seata/pull/3228#discussion_r562495074", "createdAt": "2021-01-22T09:22:24Z", "author": {"login": "xingfudeshi"}, "path": "seata-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~  Copyright 1999-2019 Seata.io Group.\n+  ~\n+  ~  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~  you may not use this file except in compliance with the License.\n+  ~  You may obtain a copy of the License at\n+  ~\n+  ~       http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>io.seata</groupId>\n+    <artifactId>seata-plugin</artifactId>\n+    <version>${revision}</version>\n+    <modules>\n+        <module>seata-jackson-parser-oracle</module>\n+    </modules>\n+    <packaging>pom</packaging>\n+\n+    <properties>\n+        <!-- seata plugin version -->\n+        <revision>1.5.0-SNAPSHOT</revision>\n+\n+        <maven.compiler.source>1.8</maven.compiler.source>\n+        <maven.compiler.target>1.8</maven.compiler.target>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\n+        <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>\n+\n+        <ojdbc.version>19.3.0.0</ojdbc.version>\n+        <seata.version>1.5.0-SNAPSHOT</seata.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDIxNjQwMQ==", "bodyText": "the version is seata dependency version. must be seata support spi version.", "url": "https://github.com/seata/seata/pull/3228#discussion_r564216401", "createdAt": "2021-01-26T04:57:21Z", "author": {"login": "jsbxyyx"}, "path": "seata-plugin/pom.xml", "diffHunk": "@@ -0,0 +1,87 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~  Copyright 1999-2019 Seata.io Group.\n+  ~\n+  ~  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~  you may not use this file except in compliance with the License.\n+  ~  You may obtain a copy of the License at\n+  ~\n+  ~       http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing, software\n+  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~  See the License for the specific language governing permissions and\n+  ~  limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>io.seata</groupId>\n+    <artifactId>seata-plugin</artifactId>\n+    <version>${revision}</version>\n+    <modules>\n+        <module>seata-jackson-parser-oracle</module>\n+    </modules>\n+    <packaging>pom</packaging>\n+\n+    <properties>\n+        <!-- seata plugin version -->\n+        <revision>1.5.0-SNAPSHOT</revision>\n+\n+        <maven.compiler.source>1.8</maven.compiler.source>\n+        <maven.compiler.target>1.8</maven.compiler.target>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\n+        <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>\n+\n+        <ojdbc.version>19.3.0.0</ojdbc.version>\n+        <seata.version>1.5.0-SNAPSHOT</seata.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQ5NTA3NA=="}, "originalCommit": {"oid": "8cd5fe89b5eda555bf6fba24f7f85230ff4634b3"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1330, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}