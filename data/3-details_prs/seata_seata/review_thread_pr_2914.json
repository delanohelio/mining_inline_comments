{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjAwMTc2", "number": 2914, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo0NjowNFrOEQ4K2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo0NjowNFrOEQ4K2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTMyOTU0OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/io/seata/core/context/RootContextTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzo0NjowNFrOG1RoTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNToyOTo0NlrOG1TQhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNjU1OQ==", "bodyText": "I think we should merge these two cases into the existing method testBindBranchType_And_UnbindBranchType().", "url": "https://github.com/seata/seata/pull/2914#discussion_r458516559", "createdAt": "2020-07-22T03:46:04Z", "author": {"login": "booogu"}, "path": "core/src/test/java/io/seata/core/context/RootContextTest.java", "diffHunk": "@@ -57,6 +57,45 @@ public void testGetXID() {\n         assertThat(RootContext.getXID()).isNull();\n     }\n \n+    /**\n+     * Test bind and unbind branchType.\n+     */\n+    @Test\n+    public void testBind_And_Unbind_BranchType() {\n+        assertThat(RootContext.unbindBranchType()).isNull();\n+        RootContext.bindBranchType(DEFAULT_BRANCH_TYPE);\n+\n+        //before bind xid, branchType is null\n+        assertThat(RootContext.getBranchType()).isNull();\n+        //after bind xid, branchType is not null\n+        RootContext.bind(DEFAULT_XID);\n+        assertThat(RootContext.getBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+\n+        //unbind xid and branchType\n+        assertThat(RootContext.unbind()).isEqualTo(DEFAULT_XID);\n+        assertThat(RootContext.getBranchType()).isNull();\n+        assertThat(RootContext.unbindBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+        assertThat(RootContext.getBranchType()).isNull();\n+    }\n+\n+    /**\n+     * Test get branchType.\n+     */\n+    @Test\n+    public void testGetBranchType() {\n+        RootContext.bindBranchType(DEFAULT_BRANCH_TYPE);\n+\n+        //before bind xid, branchType is null\n+        assertThat(RootContext.getBranchType()).isNull();\n+        //after bind xid, branchType is not null\n+        RootContext.bind(DEFAULT_XID);\n+        assertThat(RootContext.getBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+\n+        RootContext.unbind();\n+        assertThat(RootContext.unbindBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+        assertThat(RootContext.getBranchType()).isNull();\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de00d941c79714128cc9e2bdc9c6764f07f90de7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0MzIzNw==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2914#discussion_r458543237", "createdAt": "2020-07-22T05:29:46Z", "author": {"login": "wangliang181230"}, "path": "core/src/test/java/io/seata/core/context/RootContextTest.java", "diffHunk": "@@ -57,6 +57,45 @@ public void testGetXID() {\n         assertThat(RootContext.getXID()).isNull();\n     }\n \n+    /**\n+     * Test bind and unbind branchType.\n+     */\n+    @Test\n+    public void testBind_And_Unbind_BranchType() {\n+        assertThat(RootContext.unbindBranchType()).isNull();\n+        RootContext.bindBranchType(DEFAULT_BRANCH_TYPE);\n+\n+        //before bind xid, branchType is null\n+        assertThat(RootContext.getBranchType()).isNull();\n+        //after bind xid, branchType is not null\n+        RootContext.bind(DEFAULT_XID);\n+        assertThat(RootContext.getBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+\n+        //unbind xid and branchType\n+        assertThat(RootContext.unbind()).isEqualTo(DEFAULT_XID);\n+        assertThat(RootContext.getBranchType()).isNull();\n+        assertThat(RootContext.unbindBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+        assertThat(RootContext.getBranchType()).isNull();\n+    }\n+\n+    /**\n+     * Test get branchType.\n+     */\n+    @Test\n+    public void testGetBranchType() {\n+        RootContext.bindBranchType(DEFAULT_BRANCH_TYPE);\n+\n+        //before bind xid, branchType is null\n+        assertThat(RootContext.getBranchType()).isNull();\n+        //after bind xid, branchType is not null\n+        RootContext.bind(DEFAULT_XID);\n+        assertThat(RootContext.getBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+\n+        RootContext.unbind();\n+        assertThat(RootContext.unbindBranchType()).isEqualTo(DEFAULT_BRANCH_TYPE.name());\n+        assertThat(RootContext.getBranchType()).isNull();\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUxNjU1OQ=="}, "originalCommit": {"oid": "de00d941c79714128cc9e2bdc9c6764f07f90de7"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1499, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}