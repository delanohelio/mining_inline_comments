{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMzYzNDQ5", "number": 3050, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNDo1MjowNlrOEayrXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNjo0NTozNFrOEmZJLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTI4NzMzOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNDo1MjowNlrOHEbheQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNTozOTozMFrOHEcQGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQwNzI4OQ==", "bodyText": "What is the purpose of this line\uff1f", "url": "https://github.com/seata/seata/pull/3050#discussion_r474407289", "createdAt": "2020-08-21T04:52:06Z", "author": {"login": "slievrly"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,12 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL();\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n-        if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+        this.buildWhereCondition(visitor, paramAppenderList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decfe1094cfe267fb46fa071561790c9ed101de4"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQxOTIyNw==", "bodyText": "What is the purpose of this line\uff1f\n\nneed to add param value", "url": "https://github.com/seata/seata/pull/3050#discussion_r474419227", "createdAt": "2020-08-21T05:39:30Z", "author": {"login": "a364176773"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,12 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL();\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n-        if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+        this.buildWhereCondition(visitor, paramAppenderList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQwNzI4OQ=="}, "originalCommit": {"oid": "decfe1094cfe267fb46fa071561790c9ed101de4"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTgxMDE5OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzozNDoyNVrOHIafQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzozNDoyNVrOHIafQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4NDY0MA==", "bodyText": "\"delete from user WHERE 1=1 limit 1\"\n\"delete from user where 1=1 limit 1\"\n\"delete from user \\nwhere 1=1 limit 1\"\nThe above three SQL statements are all correct, but only the first one constructs the normal where condition", "url": "https://github.com/seata/seata/pull/3050#discussion_r478584640", "createdAt": "2020-08-27T17:34:25Z", "author": {"login": "caohdgege"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,12 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL();\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n-        if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+        this.getParamAppenderList(paramAppenderList);\n+        String where = \" WHERE \";\n+        if (orgSql.contains(where)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b56531b9a094669078d8fb3d03f75f50770135"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjYwMzQ1OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoyOTowOVrOHNBPIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzo0NDoxMlrOHNDMXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxMzc5Mg==", "bodyText": "if where, how to process?", "url": "https://github.com/seata/seata/pull/3050#discussion_r483413792", "createdAt": "2020-09-04T06:29:09Z", "author": {"login": "slievrly"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,12 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL();\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n-        if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+        this.getParamAppenderList(paramAppenderList);\n+        String where = \" WHERE \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0c3b5f4185fe4ec80978b1dd48935d534df1f8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NTg1Mg==", "bodyText": "PTAL", "url": "https://github.com/seata/seata/pull/3050#discussion_r483445852", "createdAt": "2020-09-04T07:44:12Z", "author": {"login": "a364176773"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,12 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL();\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n-        if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+        this.getParamAppenderList(paramAppenderList);\n+        String where = \" WHERE \";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxMzc5Mg=="}, "originalCommit": {"oid": "8c0c3b5f4185fe4ec80978b1dd48935d534df1f8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mzc4MDk2OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzo0NjoyN1rOHV64XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODoxNzozNFrOHWcc2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0Njg0NA==", "bodyText": "I think we don't need to check sql grammer.", "url": "https://github.com/seata/seata/pull/3050#discussion_r492746844", "createdAt": "2020-09-22T13:46:27Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,13 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL().replaceAll(\"(\\\\\\r\\\\\\n|\\\\\\r|\\\\\\n|\\\\\\n\\\\\\r)\", \" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50c6d319b1e6bfad320cbc9d0436402582f4d18b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI5Njg1Nw==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/3050#discussion_r493296857", "createdAt": "2020-09-23T08:17:34Z", "author": {"login": "a364176773"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,13 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL().replaceAll(\"(\\\\\\r\\\\\\n|\\\\\\r|\\\\\\n|\\\\\\n\\\\\\r)\", \" \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0Njg0NA=="}, "originalCommit": {"oid": "50c6d319b1e6bfad320cbc9d0436402582f4d18b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mzg1NTQxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNDowMTowNlrOHV7mag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODoxNzo0NVrOHWcdbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc1ODYzNA==", "bodyText": "I think the here should not use \"substring\" take care of the sql parser.", "url": "https://github.com/seata/seata/pull/3050#discussion_r492758634", "createdAt": "2020-09-22T14:01:06Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,13 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL().replaceAll(\"(\\\\\\r\\\\\\n|\\\\\\r|\\\\\\n|\\\\\\n\\\\\\r)\", \" \");\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n-        if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+        this.getParamAppenderList(paramAppenderList);\n+        String where = \" where \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50c6d319b1e6bfad320cbc9d0436402582f4d18b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI5NzAwNQ==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/3050#discussion_r493297005", "createdAt": "2020-09-23T08:17:45Z", "author": {"login": "a364176773"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/DeleteExecutor.java", "diffHunk": "@@ -61,10 +60,13 @@ protected TableRecords beforeImage() throws SQLException {\n     }\n \n     private String buildBeforeImageSQL(SQLDeleteRecognizer visitor, TableMeta tableMeta, ArrayList<List<Object>> paramAppenderList) {\n-        String whereCondition = buildWhereCondition(visitor, paramAppenderList);\n+        String orgSql = visitor.getOriginalSQL().replaceAll(\"(\\\\\\r\\\\\\n|\\\\\\r|\\\\\\n|\\\\\\n\\\\\\r)\", \" \");\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n-        if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+        this.getParamAppenderList(paramAppenderList);\n+        String where = \" where \";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc1ODYzNA=="}, "originalCommit": {"oid": "50c6d319b1e6bfad320cbc9d0436402582f4d18b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjkzMjk0OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/UpdateExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNjo0NTozNFrOHWYpWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODoxNzo0OVrOHWcdtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzNDUyMw==", "bodyText": "order \u53c2\u6570\u5e94\u8be5\u4e5f\u8981\u52a0\u4e0a", "url": "https://github.com/seata/seata/pull/3050#discussion_r493234523", "createdAt": "2020-09-23T06:45:34Z", "author": {"login": "caohdgege"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/UpdateExecutor.java", "diffHunk": "@@ -77,7 +77,11 @@ private String buildBeforeImageSQL(TableMeta tableMeta, ArrayList<List<Object>>\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n         String whereCondition = buildWhereCondition(recognizer, paramAppenderList);\n         if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+            suffix.append(WHERE).append(whereCondition);\n+        }\n+        String limit = recognizer.getLimit();\n+        if (StringUtils.isNotBlank(limit)) {\n+            suffix.append(limit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b1b94f7088b6ab7f76e1febb71431448f390497"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI5NzA3Ng==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/3050#discussion_r493297076", "createdAt": "2020-09-23T08:17:49Z", "author": {"login": "a364176773"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/UpdateExecutor.java", "diffHunk": "@@ -77,7 +77,11 @@ private String buildBeforeImageSQL(TableMeta tableMeta, ArrayList<List<Object>>\n         StringBuilder suffix = new StringBuilder(\" FROM \").append(getFromTableInSQL());\n         String whereCondition = buildWhereCondition(recognizer, paramAppenderList);\n         if (StringUtils.isNotBlank(whereCondition)) {\n-            suffix.append(\" WHERE \").append(whereCondition);\n+            suffix.append(WHERE).append(whereCondition);\n+        }\n+        String limit = recognizer.getLimit();\n+        if (StringUtils.isNotBlank(limit)) {\n+            suffix.append(limit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzNDUyMw=="}, "originalCommit": {"oid": "3b1b94f7088b6ab7f76e1febb71431448f390497"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1406, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}