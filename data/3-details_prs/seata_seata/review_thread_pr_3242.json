{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNDQ5MTY0", "number": 3242, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMToyNTozNFrOEziwBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMToyNTozNFrOEziwBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDgyMTgxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/AbstractDMLBaseExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMToyNTozNFrOHq0paw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMToyNTozNFrOHq0paw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY2NDgxMQ==", "bodyText": "Look like new HashMap that s enough.", "url": "https://github.com/seata/seata/pull/3242#discussion_r514664811", "createdAt": "2020-10-30T01:25:34Z", "author": {"login": "l81893521"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/AbstractDMLBaseExecutor.java", "diffHunk": "@@ -98,6 +105,28 @@ protected T executeAutoCommitFalse(Object[] args) throws Exception {\n         return result;\n     }\n \n+    private boolean isMultiPk() {\n+        if (null != sqlRecognizer) {\n+            return getTableMeta().getPrimaryKeyOnlyName().size() > 1;\n+        }\n+        if (CollectionUtils.isNotEmpty(sqlRecognizers)) {\n+            List<SQLRecognizer> distinctSQLRecognizer = sqlRecognizers.stream().filter(\n+                distinctByKey(t -> t.getTableName())).collect(Collectors.toList());\n+            for (SQLRecognizer sqlRecognizer : distinctSQLRecognizer) {\n+                if (getTableMeta(sqlRecognizer.getTableName()).getPrimaryKeyOnlyName().size() > 1) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private static <T> Predicate<T> distinctByKey(Function<? super T, ?> keyExtractor) {\n+        Map<Object, Boolean> seen = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0aaa3e6f0ba0f7f86da86bb2466418124950677"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1333, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}