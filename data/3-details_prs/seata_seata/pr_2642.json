{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMDY4MzIy", "number": 2642, "title": "bugfix: unsafe double-checked locking in SofaRegistryServiceImpl", "bodyText": "\u2160. Describe what this PR did\nThis usage of double check locking is not thread-safe, the reason is present in this PR #1599 which I submitted before.\nHow to fix:\nBecause DefaultRegistryClient is in third-part jar, the init method invocation can't be moved to the constructor.\nSo the local variable is used to correct DCL and minimize the number of field reads.\nSee also: https://lgtm.com/rules/1507076816054/\nQuote from the article:\n// a local variable can be used to avoid reading the field more times than neccessary.\n\nprivate Object lock = new Object();\nprivate volatile MyObject f = null;\n\npublic MyObject getMyObject() {\n  MyObject result = f;\n  if (result == null) {\n    synchronized(lock) {\n      result = f;\n      if (result == null) {\n        result = new MyObject();\n        result.init();\n        f = result; // GOOD\n      }\n    }\n  }\n  return result;\n}\n\u2161. Does this pull request fix one issue?\n\n\u2162. Why don't you add test cases (unit test/integration test)?\n\u2163. Describe how to verify it\n\u2164. Special notes for reviews", "createdAt": "2020-04-30T01:50:58Z", "url": "https://github.com/seata/seata/pull/2642", "merged": true, "mergeCommit": {"oid": "d8f6e1ca4c1bde77a1ba9878bfbc00fd8f2f46be"}, "closed": true, "closedAt": "2020-05-06T08:40:33Z", "author": {"login": "chenxi-null"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcci4QjgH2gAyNDExMDY4MzIyOjViMmU2NThkMGEyMDcyNjliM2Y3MDRkMjAxYjkzOWFkZmY0NmQ3ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcekLSHgFqTQwNjM4OTQ5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3", "author": {"user": {"login": "chenxi-null", "name": "chenxi"}}, "url": "https://github.com/seata/seata/commit/5b2e658d0a207269b3f704d201b939adff46d7d3", "committedDate": "2020-04-30T01:34:11Z", "message": "bugfix: unsafe double-checked locking\n\nBecause `DefaultRegistryClient` is in third-part jar, the `init` method invocation can't be moved to constructor.\n\nSo the local variable is used to correct DCL and minimize the number of field reads.\n\nSee also: https://lgtm.com/rules/1507076816054/"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTkzNjM5", "url": "https://github.com/seata/seata/pull/2642#pullrequestreview-403193639", "createdAt": "2020-04-30T04:33:44Z", "commit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDozMzo0NFrOGOZS5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDozMzo0NFrOGOZS5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw==", "bodyText": "You can continue to return registryClient, and result is used as a local transit variable, keeping the minimum changes.", "url": "https://github.com/seata/seata/pull/2642#discussion_r417747687", "createdAt": "2020-04-30T04:33:44Z", "author": {"login": "zjinlei"}, "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "diffHunk": "@@ -131,12 +133,13 @@ private RegistryClient getRegistryInstance() {\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    registryClient = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient)registryClient).init();\n+                    result = new DefaultRegistryClient(config);\n+                    ((DefaultRegistryClient) result).init();\n+                    registryClient = result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d776f5120b67ebaf7a11837379baee55daf7251d", "author": {"user": {"login": "xingfudeshi", "name": "xingfudeshi"}}, "url": "https://github.com/seata/seata/commit/d776f5120b67ebaf7a11837379baee55daf7251d", "committedDate": "2020-05-02T16:09:15Z", "message": "Merge branch 'develop' into fix/unsafe-dcl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTQwMjE1", "url": "https://github.com/seata/seata/pull/2642#pullrequestreview-404540215", "createdAt": "2020-05-02T16:11:19Z", "commit": {"oid": "d776f5120b67ebaf7a11837379baee55daf7251d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjcwODEy", "url": "https://github.com/seata/seata/pull/2642#pullrequestreview-406270812", "createdAt": "2020-05-06T02:27:13Z", "commit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjoyNzoxM1rOGRCFyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMjoyNzoxM1rOGRCFyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUxMzIyNA==", "bodyText": "@zjinlei\nThis way minimizes the number of volatile field reads, which improves performance, but makes the code a bit complicated.\nIf minimum change or simple code is preferred, I will change the code to what you recommend \uff5e", "url": "https://github.com/seata/seata/pull/2642#discussion_r420513224", "createdAt": "2020-05-06T02:27:13Z", "author": {"login": "chenxi-null"}, "path": "discovery/seata-discovery-sofa/src/main/java/io/seata/discovery/registry/sofa/SofaRegistryServiceImpl.java", "diffHunk": "@@ -131,12 +133,13 @@ private RegistryClient getRegistryInstance() {\n                         .setRegistryEndpoint(StringUtils.substringBefore(address, HOST_SEPERATOR))\n                         .setRegistryEndpointPort(Integer.parseInt(portStr)).build();\n \n-                    registryClient = new DefaultRegistryClient(config);\n-                    ((DefaultRegistryClient)registryClient).init();\n+                    result = new DefaultRegistryClient(config);\n+                    ((DefaultRegistryClient) result).init();\n+                    registryClient = result;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0NzY4Nw=="}, "originalCommit": {"oid": "5b2e658d0a207269b3f704d201b939adff46d7d3"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9991608d7f3f4861e5042bdaed90bf9d21f5624", "author": {"user": {"login": "jsbxyyx", "name": "jsbxyyx"}}, "url": "https://github.com/seata/seata/commit/c9991608d7f3f4861e5042bdaed90bf9d21f5624", "committedDate": "2020-05-06T07:02:16Z", "message": "Merge branch 'develop' into fix/unsafe-dcl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0466e992abea88e38084858745b6c40e2463e8cd", "author": {"user": {"login": "chenxi-null", "name": "chenxi"}}, "url": "https://github.com/seata/seata/commit/0466e992abea88e38084858745b6c40e2463e8cd", "committedDate": "2020-05-06T07:09:32Z", "message": "bugfix: unsafe double-checked locking\n\nBecause `DefaultRegistryClient` is in third-part jar, the `init` method invocation can't be moved to constructor.\n\nSo the local variable is used to correct DCL and minimize the number of field reads.\n\nSee also: https://lgtm.com/rules/1507076816054/"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c682dfdc018b5706ba3d3854df4572f68994b7a9", "author": {"user": {"login": "chenxi-null", "name": "chenxi"}}, "url": "https://github.com/seata/seata/commit/c682dfdc018b5706ba3d3854df4572f68994b7a9", "committedDate": "2020-05-06T07:11:53Z", "message": "Merge branch 'fix/unsafe-dcl' of github.com:chenxi-null/seata into fix/double-check-lock"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Mzg5NDky", "url": "https://github.com/seata/seata/pull/2642#pullrequestreview-406389492", "createdAt": "2020-05-06T08:12:43Z", "commit": {"oid": "c682dfdc018b5706ba3d3854df4572f68994b7a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3951, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}