{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDMwOTg3", "number": 2354, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjo1NToxNlrODlRmEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjo1NToxNlrODlRmEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDEyMTc2OnYy", "diffSide": "RIGHT", "path": "config/seata-config-spring-cloud/src/main/java/io/seata/config/springcloud/SpringCloudConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMjo1NToxNlrOFyE5cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwMzowNjoxMVrOFyFDQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA1MzM2MQ==", "bodyText": "warn", "url": "https://github.com/seata/seata/pull/2354#discussion_r388053361", "createdAt": "2020-03-05T02:55:16Z", "author": {"login": "zjinlei"}, "path": "config/seata-config-spring-cloud/src/main/java/io/seata/config/springcloud/SpringCloudConfiguration.java", "diffHunk": "@@ -61,31 +63,30 @@ public String getConfig(String dataId, String defaultValue, long timeoutMills) {\n \n     @Override\n     public boolean putConfig(String dataId, String content, long timeoutMills) {\n-        throw new UnsupportedOperationException();\n+        return false;\n     }\n \n     @Override\n     public boolean putConfigIfAbsent(String dataId, String content, long timeoutMills) {\n-        throw new UnsupportedOperationException();\n+        return false;\n     }\n \n     @Override\n     public boolean removeConfig(String dataId, long timeoutMills) {\n-        throw new UnsupportedOperationException();\n+        return false;\n     }\n \n     @Override\n     public void addConfigListener(String dataId, ConfigurationChangeListener listener) {\n-        throw new UnsupportedOperationException();\n+        LOGGER.error(\"dynamic listening is not supported spring cloud config\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ab28d6cbe1204720659bf28847664c60805a8e7"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA1NTg3Mg==", "bodyText": "warn\n\nhas been adjusted", "url": "https://github.com/seata/seata/pull/2354#discussion_r388055872", "createdAt": "2020-03-05T03:06:11Z", "author": {"login": "a364176773"}, "path": "config/seata-config-spring-cloud/src/main/java/io/seata/config/springcloud/SpringCloudConfiguration.java", "diffHunk": "@@ -61,31 +63,30 @@ public String getConfig(String dataId, String defaultValue, long timeoutMills) {\n \n     @Override\n     public boolean putConfig(String dataId, String content, long timeoutMills) {\n-        throw new UnsupportedOperationException();\n+        return false;\n     }\n \n     @Override\n     public boolean putConfigIfAbsent(String dataId, String content, long timeoutMills) {\n-        throw new UnsupportedOperationException();\n+        return false;\n     }\n \n     @Override\n     public boolean removeConfig(String dataId, long timeoutMills) {\n-        throw new UnsupportedOperationException();\n+        return false;\n     }\n \n     @Override\n     public void addConfigListener(String dataId, ConfigurationChangeListener listener) {\n-        throw new UnsupportedOperationException();\n+        LOGGER.error(\"dynamic listening is not supported spring cloud config\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA1MzM2MQ=="}, "originalCommit": {"oid": "4ab28d6cbe1204720659bf28847664c60805a8e7"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1659, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}