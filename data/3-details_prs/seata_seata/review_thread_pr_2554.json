{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTEyODI1", "number": 2554, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowNToxMFrODyANCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMzoxNToyMlrOD1Ec-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzU4NzI5OnYy", "diffSide": "RIGHT", "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDowNToxMFrOGFyw2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjo0Mjo0M1rOGGjYlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNzc3MA==", "bodyText": "Exception replace to Throwable ? Class.forName can be appears LinkageError", "url": "https://github.com/seata/seata/pull/2554#discussion_r408727770", "createdAt": "2020-04-15T10:05:10Z", "author": {"login": "jsbxyyx"}, "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "diffHunk": "@@ -245,4 +250,23 @@ public void handleDataDeleted(String s) {\n         }\n     }\n \n+    private ZkSerializer getZkSerializer() {\n+        ZkSerializer zkSerializer = null;\n+        String serializer = FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + SERIALIZER_KEY);\n+        if (StringUtils.isNotBlank(serializer)) {\n+            try {\n+                Class<?> aClass = Class.forName(serializer);\n+                zkSerializer = (ZkSerializer) aClass.newInstance();\n+            } catch (ClassNotFoundException cfe) {\n+                LOGGER.error(\"No zk serializer class found, serializer:{}\", serializer, cfe);\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c635ca48730dc23a6daf0d55aa82d04d92b7b1eb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUyNDM3Mg==", "bodyText": "Done.", "url": "https://github.com/seata/seata/pull/2554#discussion_r409524372", "createdAt": "2020-04-16T12:42:43Z", "author": {"login": "objcoding"}, "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "diffHunk": "@@ -245,4 +250,23 @@ public void handleDataDeleted(String s) {\n         }\n     }\n \n+    private ZkSerializer getZkSerializer() {\n+        ZkSerializer zkSerializer = null;\n+        String serializer = FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + SERIALIZER_KEY);\n+        if (StringUtils.isNotBlank(serializer)) {\n+            try {\n+                Class<?> aClass = Class.forName(serializer);\n+                zkSerializer = (ZkSerializer) aClass.newInstance();\n+            } catch (ClassNotFoundException cfe) {\n+                LOGGER.error(\"No zk serializer class found, serializer:{}\", serializer, cfe);\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcyNzc3MA=="}, "originalCommit": {"oid": "c635ca48730dc23a6daf0d55aa82d04d92b7b1eb"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzA2MTAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/resources/registry.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDoxOTowMFrOGGnpiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDoyMzowOFrOGGn14g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU5NDI0OQ==", "bodyText": "Default config type is file.", "url": "https://github.com/seata/seata/pull/2554#discussion_r409594249", "createdAt": "2020-04-16T14:19:00Z", "author": {"login": "l81893521"}, "path": "server/src/main/resources/registry.conf", "diffHunk": "@@ -54,7 +54,7 @@ registry {\n \n config {\n   # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\n-  type = \"file\"\n+  type = \"zk\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbd18c3770a6663b2cf63def72d2664ecf9d7588"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU5NzQxMA==", "bodyText": "Done.", "url": "https://github.com/seata/seata/pull/2554#discussion_r409597410", "createdAt": "2020-04-16T14:23:08Z", "author": {"login": "objcoding"}, "path": "server/src/main/resources/registry.conf", "diffHunk": "@@ -54,7 +54,7 @@ registry {\n \n config {\n   # file\u3001nacos \u3001apollo\u3001zk\u3001consul\u3001etcd3\n-  type = \"file\"\n+  type = \"zk\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU5NDI0OQ=="}, "originalCommit": {"oid": "bbd18c3770a6663b2cf63def72d2664ecf9d7588"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzExMDA1OnYy", "diffSide": "RIGHT", "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDoyOToxMFrOGGoJKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozMjo1MlrOGGoUSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMjM0Nw==", "bodyText": "How about use log to tell users, zkSerializer would use DefaultZkSerializer", "url": "https://github.com/seata/seata/pull/2554#discussion_r409602347", "createdAt": "2020-04-16T14:29:10Z", "author": {"login": "l81893521"}, "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "diffHunk": "@@ -247,4 +252,23 @@ public void handleDataDeleted(String s) {\n         }\n     }\n \n+    private ZkSerializer getZkSerializer() {\n+        ZkSerializer zkSerializer = null;\n+        String serializer = FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + SERIALIZER_KEY);\n+        if (StringUtils.isNotBlank(serializer)) {\n+            try {\n+                Class<?> aClass = Class.forName(serializer);\n+                zkSerializer = (ZkSerializer) aClass.newInstance();\n+            } catch (ClassNotFoundException cfe) {\n+                LOGGER.error(\"No zk serializer class found, serializer:{}\", serializer, cfe);\n+            } catch (Throwable cause) {\n+                LOGGER.error(\"found zk serializer encountered an unknown exception\", cause);\n+            }\n+        }\n+        if (zkSerializer == null) {\n+            zkSerializer = new DefaultZkSerializer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbb229d0d025ae94b1227589dfa3e4a49fcbf0bc"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNTE5Mw==", "bodyText": "Done.", "url": "https://github.com/seata/seata/pull/2554#discussion_r409605193", "createdAt": "2020-04-16T14:32:52Z", "author": {"login": "objcoding"}, "path": "config/seata-config-zk/src/main/java/io/seata/config/zk/ZookeeperConfiguration.java", "diffHunk": "@@ -247,4 +252,23 @@ public void handleDataDeleted(String s) {\n         }\n     }\n \n+    private ZkSerializer getZkSerializer() {\n+        ZkSerializer zkSerializer = null;\n+        String serializer = FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + SERIALIZER_KEY);\n+        if (StringUtils.isNotBlank(serializer)) {\n+            try {\n+                Class<?> aClass = Class.forName(serializer);\n+                zkSerializer = (ZkSerializer) aClass.newInstance();\n+            } catch (ClassNotFoundException cfe) {\n+                LOGGER.error(\"No zk serializer class found, serializer:{}\", serializer, cfe);\n+            } catch (Throwable cause) {\n+                LOGGER.error(\"found zk serializer encountered an unknown exception\", cause);\n+            }\n+        }\n+        if (zkSerializer == null) {\n+            zkSerializer = new DefaultZkSerializer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMjM0Nw=="}, "originalCommit": {"oid": "dbb229d0d025ae94b1227589dfa3e4a49fcbf0bc"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTc0MDczOnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/resources/registry.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMzoxNToyMlrOGKUrlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDo1OTo1OFrOGKsvmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3Nzc4Mg==", "bodyText": "It is not recommended that the serializer be exposed to the user to increase the cost of understanding what code is actually defined for the configuration item.", "url": "https://github.com/seata/seata/pull/2554#discussion_r413477782", "createdAt": "2020-04-23T03:15:22Z", "author": {"login": "slievrly"}, "path": "config/seata-config-core/src/main/resources/registry.conf", "diffHunk": "@@ -66,6 +66,7 @@ config {\n     serverAddr = \"127.0.0.1:2181\"\n     sessionTimeout = 6000\n     connectTimeout = 2000\n+    serializer = \"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39b4617b91b76d8e74e7bb0629178c459889fe75"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg3MjAyNA==", "bodyText": "This suggestion is very good.", "url": "https://github.com/seata/seata/pull/2554#discussion_r413872024", "createdAt": "2020-04-23T14:59:58Z", "author": {"login": "objcoding"}, "path": "config/seata-config-core/src/main/resources/registry.conf", "diffHunk": "@@ -66,6 +66,7 @@ config {\n     serverAddr = \"127.0.0.1:2181\"\n     sessionTimeout = 6000\n     connectTimeout = 2000\n+    serializer = \"\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ3Nzc4Mg=="}, "originalCommit": {"oid": "39b4617b91b76d8e74e7bb0629178c459889fe75"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1542, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}