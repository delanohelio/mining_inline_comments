{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NDk3NDEz", "number": 3293, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyMDoyOVrOE8iNBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoyMDo0NVrOE9FDDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTEwNDA1OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyMDoyOVrOH4tgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyMDoyOVrOH4tgBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIyNzc4Mw==", "bodyText": "better use equalsIgnoreCase", "url": "https://github.com/seata/seata/pull/3293#discussion_r529227783", "createdAt": "2020-11-24T06:20:29Z", "author": {"login": "slievrly"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -103,4 +111,59 @@ public Configuration proxy(Configuration originalConfiguration) {\n     public void clear() {\n         CONFIG_CACHE.clear();\n     }\n+\n+    private static class ObjectWrapper {\n+\n+        static final String INT = \"Int\";\n+        static final String BOOLEAN = \"Boolean\";\n+        static final String DURATION = \"Duration\";\n+        static final String LONG = \"Long\";\n+        static final String SHORT = \"Short\";\n+\n+        private final Object data;\n+        private final String type;\n+\n+        ObjectWrapper(Object data, String type) {\n+            this.data = data;\n+            this.type = type;\n+        }\n+\n+        public Object getData() {\n+            return data;\n+        }\n+\n+        public String getType() {\n+            return type;\n+        }\n+\n+        public Object convertData(String aType) {\n+            if (data != null && Objects.equals(type, aType)) {\n+                return data;\n+            }\n+            if (data != null) {\n+                if (INT.equals(aType)) {\n+                    return Integer.parseInt(data.toString());\n+                } else if (BOOLEAN.equals(aType)) {\n+                    return Boolean.parseBoolean(data.toString());\n+                } else if (DURATION.equals(aType)) {\n+                    return DurationUtil.parse(data.toString());\n+                } else if (LONG.equals(aType)) {\n+                    return Long.parseLong(data.toString());\n+                } else if (SHORT.equals(aType)) {\n+                    return Short.parseShort(data.toString());\n+                }\n+                return String.valueOf(data);\n+            }\n+            return null;\n+        }\n+\n+        public static boolean supportType(String type) {\n+            return INT.equals(type)\n+                    || BOOLEAN.equals(type)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTEyMjg0OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyOTozM1rOH4trQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjoyOTozM1rOH4trQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIzMDY1Nw==", "bodyText": "if(oldVluue!=null && oldVluue!=newValue)  ->  (oldVluue.type)newValue ?", "url": "https://github.com/seata/seata/pull/3293#discussion_r529230657", "createdAt": "2020-11-24T06:29:33Z", "author": {"login": "slievrly"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -64,10 +68,11 @@ public static ConfigurationCache getInstance() {\n \n     @Override\n     public void onChangeEvent(ConfigurationChangeEvent event) {\n-        Object oldValue = CONFIG_CACHE.get(event.getDataId());\n-        if (null == oldValue || !oldValue.equals(event.getNewValue())) {\n+        ObjectWrapper wrapper = CONFIG_CACHE.get(event.getDataId());\n+        // The wrapper.data only exists in the cache when it is not null.\n+        if (null == wrapper || !wrapper.getData().equals(event.getNewValue())) {\n             if (StringUtils.isNotBlank(event.getNewValue())) {\n-                CONFIG_CACHE.put(event.getDataId(), event.getNewValue());\n+                CONFIG_CACHE.put(event.getDataId(), new ObjectWrapper(event.getNewValue(), null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86cf60ca49b8b5422337dc6129afc70256cc6cec"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDgwNzgyOnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxODoyMlrOH5kodg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxODoyMlrOH5kodg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTA2Mg==", "bodyText": "result ==null?null:result;", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131062", "createdAt": "2020-11-25T06:18:22Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);\n+                        wrapper = new ObjectWrapper(result, type);\n+                        // The wrapper.data only exists in the cache when it is not null.\n                         if (result != null) {\n-                            CONFIG_CACHE.put(rawDataId, result);\n+                            CONFIG_CACHE.put(rawDataId, wrapper);\n                         }\n                     }\n-                    if (null != result && method.getReturnType().equals(String.class)) {\n-                        return String.valueOf(result);\n-                    }\n-                    return result;\n+                    return wrapper.convertData(type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDgwOTQ2OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxOTowNVrOH5kpYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxOTowNVrOH5kpYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTI5Ng==", "bodyText": "wrapper = new ObjectWrapper(result, type);\nCONFIG_CACHE.put(rawDataId, wrapper);", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131296", "createdAt": "2020-11-25T06:19:05Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);\n+                        wrapper = new ObjectWrapper(result, type);\n+                        // The wrapper.data only exists in the cache when it is not null.\n                         if (result != null) {\n-                            CONFIG_CACHE.put(rawDataId, result);\n+                            CONFIG_CACHE.put(rawDataId, wrapper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDgwOTc2OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxOToxOFrOH5kpnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoxOToxOFrOH5kpnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTM1Ng==", "bodyText": "result = method.invoke(originalConfiguration, args);", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131356", "createdAt": "2020-11-25T06:19:18Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {\n+                        Object result = method.invoke(originalConfiguration, args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDgxMjMzOnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoyMDoyN1rOH5krDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoyMDoyN1rOH5krDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTcyNw==", "bodyText": "ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\nObject result = wrapper==null?null:wrapper.getData();", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131727", "createdAt": "2020-11-25T06:20:27Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDgxMjk0OnYy", "diffSide": "RIGHT", "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoyMDo0NVrOH5kraw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjoyMDo0NVrOH5kraw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTgxOQ==", "bodyText": "result == null", "url": "https://github.com/seata/seata/pull/3293#discussion_r530131819", "createdAt": "2020-11-25T06:20:45Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/ConfigurationCache.java", "diffHunk": "@@ -78,19 +85,22 @@ public Configuration proxy(Configuration originalConfiguration) {\n         return (Configuration)Enhancer.create(Configuration.class,\n             (MethodInterceptor)(proxy, method, args, methodProxy) -> {\n                 if (method.getName().startsWith(METHOD_PREFIX)\n-                    && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n+                        && !method.getName().equalsIgnoreCase(METHOD_LATEST_CONFIG)) {\n                     String rawDataId = (String)args[0];\n-                    Object result = CONFIG_CACHE.get(rawDataId);\n-                    if (null == result) {\n-                        result = method.invoke(originalConfiguration, args);\n+                    ObjectWrapper wrapper = CONFIG_CACHE.get(rawDataId);\n+                    String type = method.getName().substring(METHOD_PREFIX.length());\n+                    if (!ObjectWrapper.supportType(type)) {\n+                        type = null;\n+                    }\n+                    if (null == wrapper) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cd928294d15c3bf0fcbaf70618b10878efae1b"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1345, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}