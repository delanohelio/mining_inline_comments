{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzU2ODEx", "number": 2140, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowMDowNFrODWKlWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyODowNVrODXx9bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTY4NjY2OnYy", "diffSide": "RIGHT", "path": "compressor/seata-compressor-gzip/src/main/java/io/seata/compressor/gzip/GzipUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowMDowNFrOFaxNPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowMDowNFrOFaxNPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxMzUwMA==", "bodyText": "The close method of GZIPOutputStream should be called.And the close method of ByteArrayOutputStream actually does nothing.", "url": "https://github.com/seata/seata/pull/2140#discussion_r363613500", "createdAt": "2020-01-07T07:00:04Z", "author": {"login": "xingfudeshi"}, "path": "compressor/seata-compressor-gzip/src/main/java/io/seata/compressor/gzip/GzipUtil.java", "diffHunk": "@@ -28,48 +26,43 @@\n  */\n public class GzipUtil {\n \n+    private GzipUtil() {\n+\n+    }\n+\n     private static final int BUFFER_SIZE = 8192;\n \n     public static byte[] compress(byte[] bytes) {\n         if (bytes == null) {\n             throw new NullPointerException(\"bytes is null\");\n         }\n-        ByteArrayOutputStream out = null;\n-        GZIPOutputStream gzip = null;\n-        try {\n-            out = new ByteArrayOutputStream();\n-            gzip = new GZIPOutputStream(out);\n+\n+        try (ByteArrayOutputStream out = new ByteArrayOutputStream();\n+             GZIPOutputStream gzip = new GZIPOutputStream(out)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496dc747ca5201e886650bab7a1ceff37e27e146"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTY4ODU5OnYy", "diffSide": "RIGHT", "path": "compressor/seata-compressor-gzip/src/main/java/io/seata/compressor/gzip/GzipUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowMToxNlrOFaxOZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzowMToxNlrOFaxOZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxMzc5OQ==", "bodyText": "The close method of GZIPInputStream should be called.", "url": "https://github.com/seata/seata/pull/2140#discussion_r363613799", "createdAt": "2020-01-07T07:01:16Z", "author": {"login": "xingfudeshi"}, "path": "compressor/seata-compressor-gzip/src/main/java/io/seata/compressor/gzip/GzipUtil.java", "diffHunk": "@@ -28,48 +26,43 @@\n  */\n public class GzipUtil {\n \n+    private GzipUtil() {\n+\n+    }\n+\n     private static final int BUFFER_SIZE = 8192;\n \n     public static byte[] compress(byte[] bytes) {\n         if (bytes == null) {\n             throw new NullPointerException(\"bytes is null\");\n         }\n-        ByteArrayOutputStream out = null;\n-        GZIPOutputStream gzip = null;\n-        try {\n-            out = new ByteArrayOutputStream();\n-            gzip = new GZIPOutputStream(out);\n+\n+        try (ByteArrayOutputStream out = new ByteArrayOutputStream();\n+             GZIPOutputStream gzip = new GZIPOutputStream(out)) {\n             gzip.write(bytes);\n-            gzip.close();\n+            gzip.flush();\n+            gzip.finish();\n             return out.toByteArray();\n         } catch (IOException e) {\n             throw new RuntimeException(\"gzip compress error\", e);\n-        } finally {\n-            IOUtil.close(out);\n         }\n-\n     }\n \n     public static byte[] decompress(byte[] bytes) {\n         if (bytes == null) {\n             throw new NullPointerException(\"bytes is null\");\n         }\n-        ByteArrayOutputStream out = null;\n-        GZIPInputStream gunzip = null;\n-        try {\n-            out = new ByteArrayOutputStream();\n-            gunzip = new GZIPInputStream(new ByteArrayInputStream(bytes));\n+\n+        try (ByteArrayOutputStream out = new ByteArrayOutputStream();\n+             GZIPInputStream gunzip = new GZIPInputStream(new ByteArrayInputStream(bytes))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496dc747ca5201e886650bab7a1ceff37e27e146"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjYyMzgxOnYy", "diffSide": "RIGHT", "path": "compressor/seata-compressor-gzip/src/main/java/io/seata/compressor/gzip/GzipUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyODowNVrOFdQ4dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMDo1MDoxMVrOFdTYlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyOTYyMg==", "bodyText": "Is it necessary here? close will call the finish method.", "url": "https://github.com/seata/seata/pull/2140#discussion_r366229622", "createdAt": "2020-01-14T09:28:05Z", "author": {"login": "slievrly"}, "path": "compressor/seata-compressor-gzip/src/main/java/io/seata/compressor/gzip/GzipUtil.java", "diffHunk": "@@ -28,48 +26,42 @@\n  */\n public class GzipUtil {\n \n+    private GzipUtil() {\n+\n+    }\n+\n     private static final int BUFFER_SIZE = 8192;\n \n     public static byte[] compress(byte[] bytes) {\n         if (bytes == null) {\n             throw new NullPointerException(\"bytes is null\");\n         }\n-        ByteArrayOutputStream out = null;\n-        GZIPOutputStream gzip = null;\n-        try {\n-            out = new ByteArrayOutputStream();\n-            gzip = new GZIPOutputStream(out);\n+        ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        try (GZIPOutputStream gzip = new GZIPOutputStream(out)) {\n             gzip.write(bytes);\n-            gzip.close();\n+            gzip.flush();\n+            gzip.finish();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f02dc10e16b11839d6c7fda93ac0c2f3f341d6a8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI3MDYxNA==", "bodyText": "Is it necessary here? close will call the finish method.\n\nOf course not. If you do not call the flush method and the finish method before the close method, you will not be able to write data into the stream. Since the return statement will return before the finally block, the data was not written into the stream at that time, which caused compression failure. Further decompression failed, and I wrote a new unit test method for compression and decompression testing.", "url": "https://github.com/seata/seata/pull/2140#discussion_r366270614", "createdAt": "2020-01-14T10:50:11Z", "author": {"login": "InstallingB"}, "path": "compressor/seata-compressor-gzip/src/main/java/io/seata/compressor/gzip/GzipUtil.java", "diffHunk": "@@ -28,48 +26,42 @@\n  */\n public class GzipUtil {\n \n+    private GzipUtil() {\n+\n+    }\n+\n     private static final int BUFFER_SIZE = 8192;\n \n     public static byte[] compress(byte[] bytes) {\n         if (bytes == null) {\n             throw new NullPointerException(\"bytes is null\");\n         }\n-        ByteArrayOutputStream out = null;\n-        GZIPOutputStream gzip = null;\n-        try {\n-            out = new ByteArrayOutputStream();\n-            gzip = new GZIPOutputStream(out);\n+        ByteArrayOutputStream out = new ByteArrayOutputStream();\n+        try (GZIPOutputStream gzip = new GZIPOutputStream(out)) {\n             gzip.write(bytes);\n-            gzip.close();\n+            gzip.flush();\n+            gzip.finish();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyOTYyMg=="}, "originalCommit": {"oid": "f02dc10e16b11839d6c7fda93ac0c2f3f341d6a8"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1727, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}