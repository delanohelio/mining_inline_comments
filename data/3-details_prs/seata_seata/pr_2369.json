{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzI4NDk4", "number": 2369, "title": "refactor: log store sql with spi", "bodyText": "\u2160. Describe what this PR did\nrefactor log store sqls with spi\n\u2161. Does this pull request fix one issue?\n\u2162. Why don't you add test cases (unit test/integration test)?\n\u2163. Describe how to verify it\n\u2164. Special notes for reviews", "createdAt": "2020-03-06T09:51:06Z", "url": "https://github.com/seata/seata/pull/2369", "merged": true, "mergeCommit": {"oid": "94e09c2da4b503e406709ab1779b94d40e01dfa0"}, "closed": true, "closedAt": "2020-04-08T14:50:19Z", "author": {"login": "l81893521"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK8s_LAH2gAyMzg0NzI4NDk4OjA0NzA0YzQyZGI2NjBiNjgzNDBjNGU1MTA5MDAzZTU0ZjI1MmE3Yzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVpCcSAFqTM5MDA0NjA5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04704c42db660b68340c4e5109003e54f252a7c8", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/04704c42db660b68340c4e5109003e54f252a7c8", "committedDate": "2020-03-06T09:28:46Z", "message": "refactor log store sqls with spi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3b31a8409f7e3237c452e4459a1f5d15cee3727", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/e3b31a8409f7e3237c452e4459a1f5d15cee3727", "committedDate": "2020-03-06T09:44:08Z", "message": "remove db type from method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzMyNTU3", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-370732557", "createdAt": "2020-03-07T08:51:47Z", "commit": {"oid": "e3b31a8409f7e3237c452e4459a1f5d15cee3727"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwODo1MTo0OFrOFzNSmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwODo1MTo0OFrOFzNSmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzOTQ0OA==", "bodyText": "Why here inherit mysql?,This will lead to a strong correlation between Oceanbase and Mysql.", "url": "https://github.com/seata/seata/pull/2369#discussion_r389239448", "createdAt": "2020-03-07T08:51:48Z", "author": {"login": "objcoding"}, "path": "core/src/main/java/io/seata/core/store/db/sql/OceanbaseLogStoreSqls.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.store.db.sql;\n+\n+import io.seata.common.loader.LoadLevel;\n+\n+/**\n+ * Database log store oceanbase sql\n+ * @author will\n+ */\n+@LoadLevel(name = \"oceanbase\")\n+public class OceanbaseLogStoreSqls extends MysqlLogStoreSqls {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b31a8409f7e3237c452e4459a1f5d15cee3727"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODI3ODY4", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-370827868", "createdAt": "2020-03-08T12:52:57Z", "commit": {"oid": "e3b31a8409f7e3237c452e4459a1f5d15cee3727"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMjo1Mjo1OFrOFzVDZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQxMjo1Mjo1OFrOFzVDZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM2NjYyOA==", "bodyText": "Should not support multiple database, Can be changed to a single.", "url": "https://github.com/seata/seata/pull/2369#discussion_r389366628", "createdAt": "2020-03-08T12:52:58Z", "author": {"login": "objcoding"}, "path": "core/src/main/java/io/seata/core/store/db/sql/LogStoreSqlsFactory.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.store.db.sql;\n+\n+import io.seata.common.loader.EnhancedServiceLoader;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * @author will\n+ */\n+public class LogStoreSqlsFactory {\n+\n+    private static Map<String, LogStoreSqls> LOG_STORE_SQLS_MAP = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b31a8409f7e3237c452e4459a1f5d15cee3727"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODMxNjU1", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-370831655", "createdAt": "2020-03-08T13:50:48Z", "commit": {"oid": "e3b31a8409f7e3237c452e4459a1f5d15cee3727"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "084e1e2df68e233a86e7a20416e450f3a0667332", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/084e1e2df68e233a86e7a20416e450f3a0667332", "committedDate": "2020-03-12T01:12:16Z", "message": "Merge remote-tracking branch 'origin/develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc7f9f9c8f70a3cb689535134d37b2bb62b597f9", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/dc7f9f9c8f70a3cb689535134d37b2bb62b597f9", "committedDate": "2020-03-12T01:22:44Z", "message": "add log directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ec68d51783434568d08a2cbfbe39bddefc3570c", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/0ec68d51783434568d08a2cbfbe39bddefc3570c", "committedDate": "2020-03-12T01:43:28Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561a9c15d97c3c14acb9a0dd7dab9b9d1ed36eb6", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/561a9c15d97c3c14acb9a0dd7dab9b9d1ed36eb6", "committedDate": "2020-03-16T06:05:36Z", "message": "Merge branch 'develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODM0OTcw", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-376834970", "createdAt": "2020-03-18T12:55:59Z", "commit": {"oid": "561a9c15d97c3c14acb9a0dd7dab9b9d1ed36eb6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c607a9bcc3119eb0875671c625315791f3d214", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/d9c607a9bcc3119eb0875671c625315791f3d214", "committedDate": "2020-03-21T01:39:55Z", "message": "Merge remote-tracking branch 'origin/develop' into refactor_log_store_sql_with_spi\n\n# Conflicts:\n#\tserver/src/main/java/io/seata/server/storage/db/store/LogStoreSqls.java\n#\tserver/src/test/java/io/seata/server/lock/db/sql/log/LogStoreSqlsFactoryTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32cc3e7e3efbc2d646647bc6b57f3e8a32bb2351", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/32cc3e7e3efbc2d646647bc6b57f3e8a32bb2351", "committedDate": "2020-03-21T01:52:08Z", "message": "fix code conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cca4133c0b4b13e1f7c3116545b91992b6a33da", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/0cca4133c0b4b13e1f7c3116545b91992b6a33da", "committedDate": "2020-03-21T01:52:44Z", "message": "Merge remote-tracking branch 'me/refactor_log_store_sql_with_spi' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0077d4982c7e5be612ee501e66e58371af3db870", "author": {"user": {"login": "slievrly", "name": "jimin"}}, "url": "https://github.com/seata/seata/commit/0077d4982c7e5be612ee501e66e58371af3db870", "committedDate": "2020-03-27T03:42:23Z", "message": "Merge branch 'develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTYzNDU3", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-382563457", "createdAt": "2020-03-27T03:46:59Z", "commit": {"oid": "0077d4982c7e5be612ee501e66e58371af3db870"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a93666d040de2f7b67a0ed8430b8ea08d72cb556", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/a93666d040de2f7b67a0ed8430b8ea08d72cb556", "committedDate": "2020-03-31T08:51:52Z", "message": "Merge branch 'develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5984f32336094de66701d30e0799134f9f73cad9", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/5984f32336094de66701d30e0799134f9f73cad9", "committedDate": "2020-04-03T01:06:54Z", "message": "Merge branch 'develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a82b178bea5e0bc22bb2c7cd976a18cdf4f7120", "author": {"user": {"login": "zjinlei", "name": null}}, "url": "https://github.com/seata/seata/commit/3a82b178bea5e0bc22bb2c7cd976a18cdf4f7120", "committedDate": "2020-04-05T12:37:03Z", "message": "Merge branch 'develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODE1NDEz", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-387815413", "createdAt": "2020-04-05T12:48:03Z", "commit": {"oid": "3a82b178bea5e0bc22bb2c7cd976a18cdf4f7120"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMjo0ODowNFrOGA_uyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMjo0ODowNFrOGA_uyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5NzM1NQ==", "bodyText": "#2135 has merged,  LogStoreSqlsFactory can be deleted.", "url": "https://github.com/seata/seata/pull/2369#discussion_r403697355", "createdAt": "2020-04-05T12:48:04Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/store/db/sql/log/LogStoreSqlsFactory.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.store.db.sql.log;\n+\n+import io.seata.common.loader.EnhancedServiceLoader;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * @author will\n+ */\n+public class LogStoreSqlsFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a82b178bea5e0bc22bb2c7cd976a18cdf4f7120"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODE2NTE1", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-387816515", "createdAt": "2020-04-05T13:00:03Z", "commit": {"oid": "3a82b178bea5e0bc22bb2c7cd976a18cdf4f7120"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMzowMDowM1rOGA_0Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMzowMDowM1rOGA_0Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5ODc4Nw==", "bodyText": "Suggest:\nreturn getInsertGlobalTransactionSQL().replace(GLOBAL_TABLE_PLACEHOLD, globalTable);\nabstract String getInsertGlobalTransactionSQL();\nSame for other sql", "url": "https://github.com/seata/seata/pull/2369#discussion_r403698787", "createdAt": "2020-04-05T13:00:03Z", "author": {"login": "zjinlei"}, "path": "core/src/main/java/io/seata/core/store/db/sql/log/AbstractLogStoreSqls.java", "diffHunk": "@@ -0,0 +1,208 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.core.store.db.sql.log;\n+\n+import io.seata.common.exception.NotSupportYetException;\n+import io.seata.config.Configuration;\n+import io.seata.config.ConfigurationFactory;\n+import io.seata.core.constants.ConfigurationKeys;\n+import io.seata.core.constants.ServerTableColumnsName;\n+\n+\n+/**\n+ * The type Abstract log store sqls\n+ * @author will\n+ */\n+public abstract class AbstractLogStoreSqls implements LogStoreSqls {\n+\n+    /**\n+     * The constant CONFIG.\n+     */\n+    protected static final Configuration CONFIG = ConfigurationFactory.getInstance();\n+\n+    /**\n+     * The constant GLOBAL_TABLE_PLACEHOLD.\n+     */\n+    public static final String GLOBAL_TABLE_PLACEHOLD = \" #global_table# \";\n+\n+    /**\n+     * The constant BRANCH_TABLE_PLACEHOLD.\n+     */\n+    public static final String BRANCH_TABLE_PLACEHOLD = \" #branch_table# \";\n+\n+    /**\n+     * The constant PRAMETER_PLACEHOLD.\n+     */\n+    public static final String PRAMETER_PLACEHOLD = \" #PRAMETER_PLACEHOLD# \";\n+\n+    /**\n+     * The constant ALL_GLOBAL_COLUMNS.\n+     * xid, transaction_id, status, application_id, transaction_service_group, transaction_name, timeout, begin_time, application_data, gmt_create, gmt_modified\n+     */\n+    public static final String ALL_GLOBAL_COLUMNS\n+            = ServerTableColumnsName.GLOBAL_TABLE_XID + \", \" + ServerTableColumnsName.GLOBAL_TABLE_TRANSACTION_ID + \", \"\n+            + ServerTableColumnsName.GLOBAL_TABLE_STATUS + \", \" + ServerTableColumnsName.GLOBAL_TABLE_APPLICATION_ID + \", \"\n+            + ServerTableColumnsName.GLOBAL_TABLE_TRANSACTION_SERVICE_GROUP + \", \" + ServerTableColumnsName.GLOBAL_TABLE_TRANSACTION_NAME + \", \"\n+            + ServerTableColumnsName.GLOBAL_TABLE_TIMEOUT + \", \" + ServerTableColumnsName.GLOBAL_TABLE_BEGIN_TIME + \", \"\n+            + ServerTableColumnsName.GLOBAL_TABLE_APPLICATION_DATA + \", \" + ServerTableColumnsName.GLOBAL_TABLE_GMT_CREATE + \", \"\n+            + ServerTableColumnsName.GLOBAL_TABLE_GMT_MODIFIED;\n+\n+    /**\n+     * The constant ALL_BRANCH_COLUMNS.\n+     * xid, transaction_id, branch_id, resource_group_id, resource_id, lock_key, branch_type, status, client_id, application_data, gmt_create, gmt_modified\n+     */\n+    protected static final String ALL_BRANCH_COLUMNS\n+            = ServerTableColumnsName.BRANCH_TABLE_XID + \", \" + ServerTableColumnsName.BRANCH_TABLE_TRANSACTION_ID + \", \"\n+            + ServerTableColumnsName.BRANCH_TABLE_BRANCH_ID + \", \" + ServerTableColumnsName.BRANCH_TABLE_RESOURCE_GROUP_ID + \", \"\n+            + ServerTableColumnsName.BRANCH_TABLE_RESOURCE_ID + \", \"\n+            + ServerTableColumnsName.BRANCH_TABLE_BRANCH_TYPE + \", \" + ServerTableColumnsName.BRANCH_TABLE_STATUS + \", \"\n+            + ServerTableColumnsName.BRANCH_TABLE_CLIENT_ID + \", \" + ServerTableColumnsName.BRANCH_TABLE_APPLICATION_DATA + \", \"\n+            + ServerTableColumnsName.BRANCH_TABLE_GMT_CREATE + \", \" + ServerTableColumnsName.BRANCH_TABLE_GMT_MODIFIED;\n+\n+    /**\n+     * The constant DELETE_GLOBAL_TRANSACTION.\n+     */\n+    public static final String DELETE_GLOBAL_TRANSACTION = \"delete from \" + GLOBAL_TABLE_PLACEHOLD + \" where \" + ServerTableColumnsName.GLOBAL_TABLE_XID + \" = ?\";\n+\n+    /**\n+     * The constant QUERY_GLOBAL_TRANSACTION.\n+     */\n+    public static final String QUERY_GLOBAL_TRANSACTION = \"select \" + ALL_GLOBAL_COLUMNS + \" from \"\n+            + GLOBAL_TABLE_PLACEHOLD + \" where \" + ServerTableColumnsName.GLOBAL_TABLE_XID + \" = ?\";\n+\n+    /**\n+     * The constant QUERY_GLOBAL_TRANSACTION_ID.\n+     */\n+    public static final String QUERY_GLOBAL_TRANSACTION_BY_ID = \"select \" + ALL_GLOBAL_COLUMNS + \" from \"\n+            + GLOBAL_TABLE_PLACEHOLD + \" where \" + ServerTableColumnsName.GLOBAL_TABLE_TRANSACTION_ID + \" = ?\";\n+\n+    /**\n+     * The constant DELETE_BRANCH_TRANSACTION_BY_BRANCH_ID.\n+     */\n+    public static final String DELETE_BRANCH_TRANSACTION_BY_BRANCH_ID = \"delete from \" + BRANCH_TABLE_PLACEHOLD\n+            + \" where \" + ServerTableColumnsName.BRANCH_TABLE_XID + \" = ? and \" + ServerTableColumnsName.BRANCH_TABLE_BRANCH_ID\n+            + \" = ?\";\n+\n+    /**\n+     * The constant DELETE_BRANCH_TRANSACTION_BY_XID.\n+     */\n+    public static final String DELETE_BRANCH_TRANSACTION_BY_XID = \"delete from \" + BRANCH_TABLE_PLACEHOLD\n+            + \" where \" + ServerTableColumnsName.BRANCH_TABLE_XID + \" = ?\";\n+\n+\n+    /**\n+     * The constant QUERY_BRANCH_TRANSACTION.\n+     */\n+    public static final String QUERY_BRANCH_TRANSACTION = \"select \" + ALL_BRANCH_COLUMNS + \" from \"\n+            + BRANCH_TABLE_PLACEHOLD + \" where \" + ServerTableColumnsName.BRANCH_TABLE_XID + \" = ? order by \"\n+            + ServerTableColumnsName.BRANCH_TABLE_GMT_CREATE + \" asc\";\n+\n+    /**\n+     * The constant QUERY_BRANCH_TRANSACTION_XIDS.\n+     */\n+    public static final String QUERY_BRANCH_TRANSACTION_XIDS = \"select \" + ALL_BRANCH_COLUMNS + \" from \"\n+            + BRANCH_TABLE_PLACEHOLD + \" where \" + ServerTableColumnsName.BRANCH_TABLE_XID + \" in (\" + PRAMETER_PLACEHOLD + \") order by \"\n+            + ServerTableColumnsName.BRANCH_TABLE_GMT_CREATE + \" asc\";\n+\n+    /**\n+     * The constant CHECK_MAX_TRANS_ID.\n+     */\n+    public static final String QUERY_MAX_TRANS_ID = \"select max(\" + ServerTableColumnsName.GLOBAL_TABLE_TRANSACTION_ID\n+            + \") from \" + GLOBAL_TABLE_PLACEHOLD + \" where \" + ServerTableColumnsName.GLOBAL_TABLE_TRANSACTION_ID\n+            + \" < ? and \" + ServerTableColumnsName.GLOBAL_TABLE_TRANSACTION_ID + \" > ?\";\n+\n+    /**\n+     * The constant CHECK_MAX_BTANCH_ID.\n+     */\n+    public static final String QUERY_MAX_BTANCH_ID = \"select max(\" + ServerTableColumnsName.BRANCH_TABLE_BRANCH_ID\n+            + \") from \" + BRANCH_TABLE_PLACEHOLD + \" where \" + ServerTableColumnsName.BRANCH_TABLE_BRANCH_ID + \" < ? and \"\n+            + ServerTableColumnsName.BRANCH_TABLE_BRANCH_ID + \" > ?\";\n+\n+    @Override\n+    public String getInsertGlobalTransactionSQL(String globalTable) {\n+        throw new NotSupportYetException(\"unknown dbType:\" + CONFIG.getConfig(ConfigurationKeys.STORE_DB_TYPE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a82b178bea5e0bc22bb2c7cd976a18cdf4f7120"}, "originalPosition": 136}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "068e9fdfaed5ab8cd41ee64929e0d3154183cf06", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/068e9fdfaed5ab8cd41ee64929e0d3154183cf06", "committedDate": "2020-04-07T11:17:04Z", "message": "Merge remote-tracking branch 'origin/develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "201a95c84ecf6d1551c8ea30bc8fb095bebd368e", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/201a95c84ecf6d1551c8ea30bc8fb095bebd368e", "committedDate": "2020-04-07T11:27:42Z", "message": "optimize the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd29a06805cd6fec462dd50bff61ced7cf1f0960", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/bd29a06805cd6fec462dd50bff61ced7cf1f0960", "committedDate": "2020-04-07T11:30:08Z", "message": "Merge remote-tracking branch 'me/refactor_log_store_sql_with_spi' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86a6d7d54bd7eca34b40f1bb84c0575cf59100d5", "author": {"user": {"login": "l81893521", "name": "will"}}, "url": "https://github.com/seata/seata/commit/86a6d7d54bd7eca34b40f1bb84c0575cf59100d5", "committedDate": "2020-04-07T11:34:27Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3332612692dd7efa111b75b627e04bca387f7955", "author": {"user": {"login": "zjinlei", "name": null}}, "url": "https://github.com/seata/seata/commit/3332612692dd7efa111b75b627e04bca387f7955", "committedDate": "2020-04-08T13:34:30Z", "message": "Merge branch 'develop' into refactor_log_store_sql_with_spi"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDQ2MDk4", "url": "https://github.com/seata/seata/pull/2369#pullrequestreview-390046098", "createdAt": "2020-04-08T14:47:16Z", "commit": {"oid": "3332612692dd7efa111b75b627e04bca387f7955"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4061, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}