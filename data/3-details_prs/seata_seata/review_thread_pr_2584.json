{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NTIxNjQz", "number": 2584, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMTo1NlrOEGRM7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMTo1NlrOEGRM7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDA4NzUwOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/pcext/handlers/ServiceTaskStateHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOToyMTo1NlrOGk9UDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTo0Nzo0NlrOGk-TiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNjQ3Nw==", "bodyText": "Whether need to sort the interceptor?", "url": "https://github.com/seata/seata/pull/2584#discussion_r441406477", "createdAt": "2020-06-17T09:21:56Z", "author": {"login": "slievrly"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/pcext/handlers/ServiceTaskStateHandler.java", "diffHunk": "@@ -239,6 +239,13 @@ private Object compensateSubStateMachine(ProcessContext context, ServiceTaskStat\n         return interceptors;\n     }\n \n+    @Override\n+    public void addInterceptor(StateHandlerInterceptor interceptor) {\n+        if (interceptors != null && !interceptors.contains(interceptor)) {\n+            interceptors.add(interceptor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac00b3bc07ac6697ba15f690ed8eaf50019baf46"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQyMjcyOA==", "bodyText": "Sorting has been done in EnhancedServiceLoader.findAllExtensionDefinition method", "url": "https://github.com/seata/seata/pull/2584#discussion_r441422728", "createdAt": "2020-06-17T09:47:46Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/pcext/handlers/ServiceTaskStateHandler.java", "diffHunk": "@@ -239,6 +239,13 @@ private Object compensateSubStateMachine(ProcessContext context, ServiceTaskStat\n         return interceptors;\n     }\n \n+    @Override\n+    public void addInterceptor(StateHandlerInterceptor interceptor) {\n+        if (interceptors != null && !interceptors.contains(interceptor)) {\n+            interceptors.add(interceptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQwNjQ3Nw=="}, "originalCommit": {"oid": "ac00b3bc07ac6697ba15f690ed8eaf50019baf46"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1552, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}