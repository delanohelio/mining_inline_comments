{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MTg3OTY1", "number": 3212, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNzowODoyM1rOExelXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDowMDoyNVrOFIGPGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMzE2NzY0OnYy", "diffSide": "RIGHT", "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/postgresql/BasePostgresqlRecognizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNzowODoyNFrOHnpJKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMDoyMjoyMlrOIRPLcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMDYwMQ==", "bodyText": "\u4e0d\u662f PGOutputVisitor \u5417\uff1f", "url": "https://github.com/seata/seata/pull/3212#discussion_r511330601", "createdAt": "2020-10-24T07:08:24Z", "author": {"login": "caohdgege"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/postgresql/BasePostgresqlRecognizer.java", "diffHunk": "@@ -82,4 +85,26 @@ public String getWhereCondition(SQLExpr where) {\n         executeVisit(where, new PGOutputVisitor(sb));\n         return sb.toString();\n     }\n+\n+    protected String getLimitCondition(SQLLimit sqlLimit) {\n+        if (Objects.isNull(sqlLimit)) {\n+            return StringUtils.EMPTY;\n+        }\n+\n+        StringBuilder sb = new StringBuilder();\n+        executeLimit(sqlLimit, new MySqlOutputVisitor(sb));\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getOrderByCondition(SQLOrderBy sqlOrderBy) {\n+        if (Objects.isNull(sqlOrderBy)) {\n+            return StringUtils.EMPTY;\n+        }\n+\n+        StringBuilder sb = new StringBuilder();\n+        executeOrderBy(sqlOrderBy, new MySqlOutputVisitor(sb));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcc46334165d2e8672db9b98af15b1627a10196e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDk0NTM5Mg==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3212#discussion_r554945392", "createdAt": "2021-01-11T10:22:22Z", "author": {"login": "l81893521"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/postgresql/BasePostgresqlRecognizer.java", "diffHunk": "@@ -82,4 +85,26 @@ public String getWhereCondition(SQLExpr where) {\n         executeVisit(where, new PGOutputVisitor(sb));\n         return sb.toString();\n     }\n+\n+    protected String getLimitCondition(SQLLimit sqlLimit) {\n+        if (Objects.isNull(sqlLimit)) {\n+            return StringUtils.EMPTY;\n+        }\n+\n+        StringBuilder sb = new StringBuilder();\n+        executeLimit(sqlLimit, new MySqlOutputVisitor(sb));\n+\n+        return sb.toString();\n+    }\n+\n+    protected String getOrderByCondition(SQLOrderBy sqlOrderBy) {\n+        if (Objects.isNull(sqlOrderBy)) {\n+            return StringUtils.EMPTY;\n+        }\n+\n+        StringBuilder sb = new StringBuilder();\n+        executeOrderBy(sqlOrderBy, new MySqlOutputVisitor(sb));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMDYwMQ=="}, "originalCommit": {"oid": "fcc46334165d2e8672db9b98af15b1627a10196e"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODExMzM1OnYy", "diffSide": "RIGHT", "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/mysql/MySQLDeleteRecognizer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0MDoxMVrOHsvLNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMDoyMjoxMFrOIRPK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3MjMxMQ==", "bodyText": "\u8fd9\u91cc\u9700\u8981\u5224\u65ad\u662f\u5426\u5305\u542b\u5360\u4f4d\u7b26\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u9700\u8981\u628a\u5bf9\u5e94\u7684\u503c\u52a0\u5165\u5230paramAppenderList\u91cc\u9762", "url": "https://github.com/seata/seata/pull/3212#discussion_r516672311", "createdAt": "2020-11-03T13:40:11Z", "author": {"login": "caohdgege"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/mysql/MySQLDeleteRecognizer.java", "diffHunk": "@@ -94,13 +96,15 @@ public String getWhereCondition() {\n     }\n \n     @Override\n-    public String getLimit() {\n-        return super.getLimit(ast, getSQLType());\n+    public String getLimitCondition() {\n+        SQLLimit limit = ast.getLimit();\n+        return super.getLimitCondition(limit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcc46334165d2e8672db9b98af15b1627a10196e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MzI4Nw==", "bodyText": "+1", "url": "https://github.com/seata/seata/pull/3212#discussion_r547183287", "createdAt": "2020-12-22T10:02:12Z", "author": {"login": "a364176773"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/mysql/MySQLDeleteRecognizer.java", "diffHunk": "@@ -94,13 +96,15 @@ public String getWhereCondition() {\n     }\n \n     @Override\n-    public String getLimit() {\n-        return super.getLimit(ast, getSQLType());\n+    public String getLimitCondition() {\n+        SQLLimit limit = ast.getLimit();\n+        return super.getLimitCondition(limit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3MjMxMQ=="}, "originalCommit": {"oid": "fcc46334165d2e8672db9b98af15b1627a10196e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDk0NTI3NQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3212#discussion_r554945275", "createdAt": "2021-01-11T10:22:10Z", "author": {"login": "l81893521"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/mysql/MySQLDeleteRecognizer.java", "diffHunk": "@@ -94,13 +96,15 @@ public String getWhereCondition() {\n     }\n \n     @Override\n-    public String getLimit() {\n-        return super.getLimit(ast, getSQLType());\n+    public String getLimitCondition() {\n+        SQLLimit limit = ast.getLimit();\n+        return super.getLimitCondition(limit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3MjMxMQ=="}, "originalCommit": {"oid": "fcc46334165d2e8672db9b98af15b1627a10196e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDM1MDk2OnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/UpdateExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDowMDoyNVrOIJ1XVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMDowMDoyNVrOIJ1XVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE4MjQyMQ==", "bodyText": "\u201c \u201d you can set it to a constant, right?", "url": "https://github.com/seata/seata/pull/3212#discussion_r547182421", "createdAt": "2020-12-22T10:00:25Z", "author": {"login": "a364176773"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/exec/UpdateExecutor.java", "diffHunk": "@@ -81,13 +81,13 @@ private String buildBeforeImageSQL(TableMeta tableMeta, ArrayList<List<Object>>\n         if (StringUtils.isNotBlank(whereCondition)) {\n             suffix.append(WHERE).append(whereCondition);\n         }\n-        String orderBy = recognizer.getOrderBy();\n+        String orderBy = recognizer.getOrderByCondition();\n         if (StringUtils.isNotBlank(orderBy)) {\n-            suffix.append(orderBy);\n+            suffix.append(\" \").append(orderBy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcc46334165d2e8672db9b98af15b1627a10196e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1456, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}