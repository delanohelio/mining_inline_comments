{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzE0OTUz", "number": 2489, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNToxNzoxOFrODu4wrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNToxNzoxOFrODu4wrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDkxMDU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/io/seata/core/exception/AbstractExceptionHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNToxNzoxOFrOGBA2mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDo1NDowNFrOGCzDug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTczNg==", "bodyText": "I think this optimization is ok.", "url": "https://github.com/seata/seata/pull/2489#discussion_r403715736", "createdAt": "2020-04-05T15:17:18Z", "author": {"login": "objcoding"}, "path": "core/src/main/java/io/seata/core/exception/AbstractExceptionHandler.java", "diffHunk": "@@ -111,8 +111,7 @@ public void onException(T request, S response, Exception rex) {\n      * @param request  the request\n      * @param response the response\n      */\n-    public void exceptionHandleTemplate(Callback callback, AbstractTransactionRequest request,\n-        AbstractTransactionResponse response) {\n+    public <T extends AbstractTransactionRequest, S extends AbstractTransactionResponse> void exceptionHandleTemplate(Callback<T, S> callback, T request, S response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d12394f5936273d580f40e1b776eda74964636b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4MjU2MQ==", "bodyText": "ok i will change commit", "url": "https://github.com/seata/seata/pull/2489#discussion_r403882561", "createdAt": "2020-04-06T07:31:40Z", "author": {"login": "YuKongEr"}, "path": "core/src/main/java/io/seata/core/exception/AbstractExceptionHandler.java", "diffHunk": "@@ -111,8 +111,7 @@ public void onException(T request, S response, Exception rex) {\n      * @param request  the request\n      * @param response the response\n      */\n-    public void exceptionHandleTemplate(Callback callback, AbstractTransactionRequest request,\n-        AbstractTransactionResponse response) {\n+    public <T extends AbstractTransactionRequest, S extends AbstractTransactionResponse> void exceptionHandleTemplate(Callback<T, S> callback, T request, S response) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTczNg=="}, "originalCommit": {"oid": "1d12394f5936273d580f40e1b776eda74964636b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ5MjIxOQ==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2489#discussion_r404492219", "createdAt": "2020-04-07T01:59:15Z", "author": {"login": "YuKongEr"}, "path": "core/src/main/java/io/seata/core/exception/AbstractExceptionHandler.java", "diffHunk": "@@ -111,8 +111,7 @@ public void onException(T request, S response, Exception rex) {\n      * @param request  the request\n      * @param response the response\n      */\n-    public void exceptionHandleTemplate(Callback callback, AbstractTransactionRequest request,\n-        AbstractTransactionResponse response) {\n+    public <T extends AbstractTransactionRequest, S extends AbstractTransactionResponse> void exceptionHandleTemplate(Callback<T, S> callback, T request, S response) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTczNg=="}, "originalCommit": {"oid": "1d12394f5936273d580f40e1b776eda74964636b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU4Njg3NA==", "bodyText": "Please click the resolve button.", "url": "https://github.com/seata/seata/pull/2489#discussion_r405586874", "createdAt": "2020-04-08T14:54:04Z", "author": {"login": "objcoding"}, "path": "core/src/main/java/io/seata/core/exception/AbstractExceptionHandler.java", "diffHunk": "@@ -111,8 +111,7 @@ public void onException(T request, S response, Exception rex) {\n      * @param request  the request\n      * @param response the response\n      */\n-    public void exceptionHandleTemplate(Callback callback, AbstractTransactionRequest request,\n-        AbstractTransactionResponse response) {\n+    public <T extends AbstractTransactionRequest, S extends AbstractTransactionResponse> void exceptionHandleTemplate(Callback<T, S> callback, T request, S response) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTczNg=="}, "originalCommit": {"oid": "1d12394f5936273d580f40e1b776eda74964636b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1515, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}