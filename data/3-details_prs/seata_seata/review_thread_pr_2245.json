{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0Nzk2ODg5", "number": 2245, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyMDozMlrODfkB2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyMDozMlrODfkB2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDIyNzQ1OnYy", "diffSide": "RIGHT", "path": "discovery/seata-discovery-zk/src/main/java/io/seata/discovery/registry/zk/ZookeeperRegisterServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyMDozMlrOFpVh-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNDoyMzo0MVrOFpVplA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4ODY5Nw==", "bodyText": "authInfo may be NPE", "url": "https://github.com/seata/seata/pull/2245#discussion_r378888697", "createdAt": "2020-02-13T14:20:32Z", "author": {"login": "jsbxyyx"}, "path": "discovery/seata-discovery-zk/src/main/java/io/seata/discovery/registry/zk/ZookeeperRegisterServiceImpl.java", "diffHunk": "@@ -206,19 +209,27 @@ private ZkClient getClientInstance() {\n                 if (null == zkClient) {\n                     zkClient = buildZkClient(FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + SERVER_ADDR_KEY),\n                         FILE_CONFIG.getInt(FILE_CONFIG_KEY_PREFIX + SESSION_TIME_OUT_KEY),\n-                        FILE_CONFIG.getInt(FILE_CONFIG_KEY_PREFIX + CONNECT_TIME_OUT_KEY));\n+                        FILE_CONFIG.getInt(FILE_CONFIG_KEY_PREFIX + CONNECT_TIME_OUT_KEY),\n+                        FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + AUTH_USERNAME),\n+                        FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + AUTH_PASSWORD));\n                 }\n             }\n         }\n         return zkClient;\n     }\n \n     // visible for test.\n-    ZkClient buildZkClient(String address, int sessionTimeout, int connectTimeout) {\n+    ZkClient buildZkClient(String address, int sessionTimeout, int connectTimeout,String... authInfo) {\n         ZkClient zkClient = new ZkClient(address, sessionTimeout, connectTimeout);\n         if (!zkClient.exists(ROOT_PATH_WITHOUT_SUFFIX)) {\n             zkClient.createPersistent(ROOT_PATH_WITHOUT_SUFFIX, true);\n         }\n+        if (authInfo.length == 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80c28439f5c81069dbdf38c99c0dd488b2b74b01"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg5MDY0NA==", "bodyText": "authInfo may be NPE\n\nthanks ,i modify", "url": "https://github.com/seata/seata/pull/2245#discussion_r378890644", "createdAt": "2020-02-13T14:23:41Z", "author": {"login": "a364176773"}, "path": "discovery/seata-discovery-zk/src/main/java/io/seata/discovery/registry/zk/ZookeeperRegisterServiceImpl.java", "diffHunk": "@@ -206,19 +209,27 @@ private ZkClient getClientInstance() {\n                 if (null == zkClient) {\n                     zkClient = buildZkClient(FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + SERVER_ADDR_KEY),\n                         FILE_CONFIG.getInt(FILE_CONFIG_KEY_PREFIX + SESSION_TIME_OUT_KEY),\n-                        FILE_CONFIG.getInt(FILE_CONFIG_KEY_PREFIX + CONNECT_TIME_OUT_KEY));\n+                        FILE_CONFIG.getInt(FILE_CONFIG_KEY_PREFIX + CONNECT_TIME_OUT_KEY),\n+                        FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + AUTH_USERNAME),\n+                        FILE_CONFIG.getConfig(FILE_CONFIG_KEY_PREFIX + AUTH_PASSWORD));\n                 }\n             }\n         }\n         return zkClient;\n     }\n \n     // visible for test.\n-    ZkClient buildZkClient(String address, int sessionTimeout, int connectTimeout) {\n+    ZkClient buildZkClient(String address, int sessionTimeout, int connectTimeout,String... authInfo) {\n         ZkClient zkClient = new ZkClient(address, sessionTimeout, connectTimeout);\n         if (!zkClient.exists(ROOT_PATH_WITHOUT_SUFFIX)) {\n             zkClient.createPersistent(ROOT_PATH_WITHOUT_SUFFIX, true);\n         }\n+        if (authInfo.length == 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg4ODY5Nw=="}, "originalCommit": {"oid": "80c28439f5c81069dbdf38c99c0dd488b2b74b01"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1620, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}