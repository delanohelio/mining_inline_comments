{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMTU1MjM4", "number": 3341, "title": "optimize: get config from file system even without file: prefix", "bodyText": "\u2160. Describe what this PR did\n\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u65f6\uff0c\u5373\u4f7f\u6ca1\u6709\u4f7f\u7528 file: \u524d\u7f00\uff0c\u4f9d\u7136\u5c1d\u8bd5\u5728\u6587\u4ef6\u7cfb\u7edf\u67e5\u627e\u5e76\u52a0\u8f7d\n\u2161. Does this pull request fix one issue?\n\nfixes #3344\n\u2162. Why don't you add test cases (unit test/integration test)?\n\u2163. Describe how to verify it\n\u5728 registry.conf \u6587\u4ef6\u4e2d\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u7684\u65f6\u5019\uff0c\u4e0d\u6dfb\u52a0 file: \u524d\u7f00\u3002\u4f8b\u5982\uff1a\nconfig {\n  type = \"file\"\n\n  file {\n    name = \"/root/seata-config/file.conf\"\n  }\n}\n\n\u671f\u671b\u7684\u7ed3\u679c\uff1a\u914d\u7f6e\u6587\u4ef6\u80fd\u88ab\u52a0\u8f7d\n\u2164. Special notes for reviews", "createdAt": "2020-12-06T07:37:10Z", "url": "https://github.com/seata/seata/pull/3341", "merged": true, "mergeCommit": {"oid": "5d4c9915ef3db59ab49e3ca441409b828f1819c8"}, "closed": true, "closedAt": "2020-12-21T02:43:42Z", "author": {"login": "hoverruan"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjb21fgH2gAyNTMzMTU1MjM4OjQ1ZjY1Y2ZkZDliNTE5OGZjNDNlMDQyZGM0NTg5YWNhZmIyNDcwNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnus9EgFqTU1NTk0OTkwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45f65cfdd9b5198fc43e042dc4589acafb24706f", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/45f65cfdd9b5198fc43e042dc4589acafb24706f", "committedDate": "2020-12-06T07:31:55Z", "message": "optimize: show warning if config file not found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ed54437887c4e95aac7e0129a439da3e4a82159", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/3ed54437887c4e95aac7e0129a439da3e4a82159", "committedDate": "2020-12-06T08:15:55Z", "message": "optimize: reduce confusion due to filename"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NjgyNTQ5", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-545682549", "createdAt": "2020-12-06T08:32:38Z", "commit": {"oid": "3ed54437887c4e95aac7e0129a439da3e4a82159"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwODozMjozOVrOIAHJTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwODozMjozOVrOIAHJTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk4Nzk4MA==", "bodyText": "SEATA_CONFIG_NAME\u662f\u53ea\u9488\u5bf9registry.conf\u7684,\u800cfile.conf\u662f\u901a\u8fc7registry\u4e2d\u7684config.file.name\u6765\u6307\u5b9a\u7684,\u5efa\u8bae\u518dConfigurationFactory#load\u4e2d\u505a\u63d0\u793a\u8f93\u51fa", "url": "https://github.com/seata/seata/pull/3341#discussion_r536987980", "createdAt": "2020-12-06T08:32:39Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -187,6 +187,11 @@ private File getConfigFile(String name) {\n         } catch (UnsupportedEncodingException e) {\n             LOGGER.error(\"file not found--\" + e.getMessage(), e);\n         }\n+\n+        // try to get filename\n+        String basename = StringUtils.isNullOrEmpty(name) ? \"my-config.conf\" : new File(name).getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ed54437887c4e95aac7e0129a439da3e4a82159"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f35fb58b9cc8dc9289e1e4bd029515b45c79cbd1", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/f35fb58b9cc8dc9289e1e4bd029515b45c79cbd1", "committedDate": "2020-12-08T01:13:35Z", "message": "optimize: simplify log message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2335b72120e76f294a9b26337daf8b3d80d834e", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/a2335b72120e76f294a9b26337daf8b3d80d834e", "committedDate": "2020-12-08T02:41:02Z", "message": "optimize: try to get config from file system even without 'file:' prefix"}, "afterCommit": {"oid": "3541981b0b8f5e9ecbc5e97acdc12f2e8f45d4b4", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/3541981b0b8f5e9ecbc5e97acdc12f2e8f45d4b4", "committedDate": "2020-12-08T02:42:10Z", "message": "optimize: try to get config from file system even without 'file:' prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/395d1ea22e11a888fedfb9981a18a968291dfce1", "committedDate": "2020-12-08T02:52:29Z", "message": "optimize: try to get config from file system even without 'file:' prefix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3541981b0b8f5e9ecbc5e97acdc12f2e8f45d4b4", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/3541981b0b8f5e9ecbc5e97acdc12f2e8f45d4b4", "committedDate": "2020-12-08T02:42:10Z", "message": "optimize: try to get config from file system even without 'file:' prefix"}, "afterCommit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/395d1ea22e11a888fedfb9981a18a968291dfce1", "committedDate": "2020-12-08T02:52:29Z", "message": "optimize: try to get config from file system even without 'file:' prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe8c23d38fa715e394d5ddc726740ccaf708bf58", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/fe8c23d38fa715e394d5ddc726740ccaf708bf58", "committedDate": "2020-12-08T03:08:52Z", "message": "refactor: reduce duplicated log message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bad08c6934d8765f0278e518fbec3a9b8c81dc07", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/bad08c6934d8765f0278e518fbec3a9b8c81dc07", "committedDate": "2020-12-08T03:34:11Z", "message": "refactor: remove warning, in client environment, maybe load config from spring boot"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NzA3MTEy", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-546707112", "createdAt": "2020-12-08T02:55:07Z", "commit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo1NTowN1rOIBEl4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo1ODo0MFrOIBEqsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5NDcyMw==", "bodyText": "why did you change this", "url": "https://github.com/seata/seata/pull/3341#discussion_r537994723", "createdAt": "2020-12-08T02:55:07Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -112,7 +113,7 @@ public FileConfiguration(String name, boolean allowDynamicRefresh) {\n             targetFilePath = file.getPath();\n             fileConfig = FileConfigFactory.load(file, name);\n         }\n-        /**\n+        /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5NTk1NQ==", "bodyText": "why not use placeholders", "url": "https://github.com/seata/seata/pull/3341#discussion_r537995955", "createdAt": "2020-12-08T02:58:40Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,86 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"file not found--\" + e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395d1ea22e11a888fedfb9981a18a968291dfce1"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/99fac048c2a8cb283c5f0744f73cdaf196c0348f", "committedDate": "2020-12-08T13:48:11Z", "message": "refactor: remove e.getMessage()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODEwMzk3", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-547810397", "createdAt": "2020-12-09T03:33:00Z", "commit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozMzowMFrOICAtjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozMzowMFrOICAtjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk3OTcyNQ==", "bodyText": "LOGGER.error(\"decode name error:{}\",e.getMessage(), e);", "url": "https://github.com/seata/seata/pull/3341#discussion_r538979725", "createdAt": "2020-12-09T03:33:00Z", "author": {"login": "xingfudeshi"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n-                    }\n-                } else {\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"decode name error\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODEwNzc1", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-547810775", "createdAt": "2020-12-09T03:34:18Z", "commit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDoxOFrOICAvBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDoxOFrOICAvBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MDEwMQ==", "bodyText": "URLDecoder.decode(path, StandardCharsets.UTF_8);", "url": "https://github.com/seata/seata/pull/3341#discussion_r538980101", "createdAt": "2020-12-09T03:34:18Z", "author": {"login": "xingfudeshi"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n-                    }\n-                } else {\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"decode name error\", e);\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromFileSystem(String decodedPath) {\n+        String[] tryPaths = new String[] {\n+            // first: project dir\n+            Paths.get(this.getClass().getClassLoader().getResource(\"\").getPath(), decodedPath).toString(),\n+            // second: system path\n+            decodedPath\n+        };\n+\n+        for (String tryPath : tryPaths) {\n+            File targetFile = new File(tryPath);\n+            if (targetFile.exists()) {\n+                return targetFile;\n+            }\n+\n+            // try to append config suffix\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                targetFile = new File(tryPath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (targetFile.exists()) {\n+                    return targetFile;\n+                }\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromClasspath(String name) throws UnsupportedEncodingException {\n+        URL resource = this.getClass().getClassLoader().getResource(name);\n+        if (resource == null) {\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (resource != null) {\n                     if (LOGGER.isInfoEnabled()) {\n-                        LOGGER.info(\"The configuration file used is {}\", name);\n+                        LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n                     }\n                     String path = resource.getPath();\n                     path = URLDecoder.decode(path, \"utf-8\");\n                     return new File(path);\n                 }\n             }\n-        } catch (UnsupportedEncodingException e) {\n-            LOGGER.error(\"file not found--\" + e.getMessage(), e);\n+        } else {\n+            if (LOGGER.isInfoEnabled()) {\n+                LOGGER.info(\"The configuration file used is {}\", name);\n+            }\n+            String path = resource.getPath();\n+            path = URLDecoder.decode(path, \"utf-8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODEwODY3", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-547810867", "createdAt": "2020-12-09T03:34:39Z", "commit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDozOVrOICAvgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzozNDozOVrOICAvgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4MDIyNQ==", "bodyText": "URLDecoder.decode(path, StandardCharsets.UTF_8);", "url": "https://github.com/seata/seata/pull/3341#discussion_r538980225", "createdAt": "2020-12-09T03:34:39Z", "author": {"login": "xingfudeshi"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +136,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84\n             boolean filePathCustom = name.startsWith(SYS_FILE_RESOURCE_PREFIX);\n-            if (filePathCustom) {\n-                filePath = name.substring(SYS_FILE_RESOURCE_PREFIX.length());\n-            } else {\n-                // projectDir first\n-                filePath = this.getClass().getClassLoader().getResource(\"\").getPath() + name;\n-            }\n-            filePath = URLDecoder.decode(filePath, \"utf-8\");\n-            File targetFile = new File(filePath);\n-            if (!targetFile.exists()) {\n-                for (String s : FileConfigFactory.getSuffixSet()) {\n-                    targetFile = new File(filePath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                    if (targetFile.exists()) {\n-                        if (LOGGER.isInfoEnabled()) {\n-                            LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n-                        }\n-                        return targetFile;\n-                    }\n-                }\n-            } else {\n+            String filePath = filePathCustom ? name.substring(SYS_FILE_RESOURCE_PREFIX.length()) : name;\n+            String decodedPath = URLDecoder.decode(filePath, \"utf-8\");\n+\n+            File targetFile = getFileFromFileSystem(decodedPath);\n+            if (targetFile != null) {\n                 if (LOGGER.isInfoEnabled()) {\n-                    LOGGER.info(\"The configuration file used is {}\", name);\n+                    LOGGER.info(\"The configuration file used is {}\", targetFile.getPath());\n                 }\n                 return targetFile;\n             }\n+\n             if (!filePathCustom) {\n-                URL resource = this.getClass().getClassLoader().getResource(name);\n-                if (resource == null) {\n-                    for (String s : FileConfigFactory.getSuffixSet()) {\n-                        resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n-                        if (resource != null) {\n-                            if (LOGGER.isInfoEnabled()) {\n-                                LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n-                            }\n-                            String path = resource.getPath();\n-                            path = URLDecoder.decode(path, \"utf-8\");\n-                            return new File(path);\n-                        }\n-                    }\n-                } else {\n+                File classpathFile = getFileFromClasspath(name);\n+                if (classpathFile != null) {\n+                    return classpathFile;\n+                }\n+            }\n+        } catch (UnsupportedEncodingException e) {\n+            LOGGER.error(\"decode name error\", e);\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromFileSystem(String decodedPath) {\n+        String[] tryPaths = new String[] {\n+            // first: project dir\n+            Paths.get(this.getClass().getClassLoader().getResource(\"\").getPath(), decodedPath).toString(),\n+            // second: system path\n+            decodedPath\n+        };\n+\n+        for (String tryPath : tryPaths) {\n+            File targetFile = new File(tryPath);\n+            if (targetFile.exists()) {\n+                return targetFile;\n+            }\n+\n+            // try to append config suffix\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                targetFile = new File(tryPath + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (targetFile.exists()) {\n+                    return targetFile;\n+                }\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    private File getFileFromClasspath(String name) throws UnsupportedEncodingException {\n+        URL resource = this.getClass().getClassLoader().getResource(name);\n+        if (resource == null) {\n+            for (String s : FileConfigFactory.getSuffixSet()) {\n+                resource = this.getClass().getClassLoader().getResource(name + ConfigurationKeys.FILE_CONFIG_SPLIT_CHAR + s);\n+                if (resource != null) {\n                     if (LOGGER.isInfoEnabled()) {\n-                        LOGGER.info(\"The configuration file used is {}\", name);\n+                        LOGGER.info(\"The configuration file used is {}\", resource.getPath());\n                     }\n                     String path = resource.getPath();\n                     path = URLDecoder.decode(path, \"utf-8\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fac048c2a8cb283c5f0744f73cdaf196c0348f"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17063ad8795fdac3a09fa4d047144556bae6bbcf", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/17063ad8795fdac3a09fa4d047144556bae6bbcf", "committedDate": "2020-12-10T01:42:10Z", "message": "refactor: replace \"utf-8\" with StandardCharsets.UTF_8"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzEzOTU2", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-550713956", "createdAt": "2020-12-12T11:55:41Z", "commit": {"oid": "17063ad8795fdac3a09fa4d047144556bae6bbcf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODg3Njk0", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-550887694", "createdAt": "2020-12-13T05:57:30Z", "commit": {"oid": "17063ad8795fdac3a09fa4d047144556bae6bbcf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NzozMFrOIEwHAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NzozMFrOIEwHAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg1MzQ0MA==", "bodyText": "\u5efa\u8bae\u4f7f\u7528\u82f1\u6587\u6ce8\u91ca", "url": "https://github.com/seata/seata/pull/3341#discussion_r541853440", "createdAt": "2020-12-13T05:57:30Z", "author": {"login": "a364176773"}, "path": "config/seata-config-core/src/main/java/io/seata/config/FileConfiguration.java", "diffHunk": "@@ -135,58 +137,82 @@ private File getConfigFile(String name) {\n             if (name == null) {\n                 throw new IllegalArgumentException(\"name can't be null\");\n             }\n-            String filePath = null;\n+\n+            // \u662f\u5426\u6307\u5b9a\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u8def\u5f84", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17063ad8795fdac3a09fa4d047144556bae6bbcf"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36a13bd7f014eee2aacca662f0bf79c358c955f7", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/36a13bd7f014eee2aacca662f0bf79c358c955f7", "committedDate": "2020-12-13T06:28:07Z", "message": "refactor: remove Chinese comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "182a9e8cf4060de5c5354895b5e88d4f80bd7e8e", "author": {"user": null}, "url": "https://github.com/seata/seata/commit/182a9e8cf4060de5c5354895b5e88d4f80bd7e8e", "committedDate": "2020-12-13T06:25:05Z", "message": "refactor: remove Chinese comment"}, "afterCommit": {"oid": "36a13bd7f014eee2aacca662f0bf79c358c955f7", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/36a13bd7f014eee2aacca662f0bf79c358c955f7", "committedDate": "2020-12-13T06:28:07Z", "message": "refactor: remove Chinese comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce757f2771702234fe8e81ff906eafda5315607a", "author": {"user": {"login": "hoverruan", "name": "Hover Ruan"}}, "url": "https://github.com/seata/seata/commit/ce757f2771702234fe8e81ff906eafda5315607a", "committedDate": "2020-12-13T09:45:11Z", "message": "refactor: revert using Paths.get to construct paths"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTQ5OTAz", "url": "https://github.com/seata/seata/pull/3341#pullrequestreview-555949903", "createdAt": "2020-12-19T15:45:01Z", "commit": {"oid": "ce757f2771702234fe8e81ff906eafda5315607a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3540, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}