{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NTMwNjYy", "number": 3009, "reviewThreads": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzoyNzozOVrOFAASHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xM1QxMToxMzozOFrOF92VtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NTQ4OTU2OnYy", "diffSide": "RIGHT", "path": "server-starter/src/test/resources/file.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzoyNzozOVrOH-B81w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNDo1OToxM1rOIE_6dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgwNTcxOQ==", "bodyText": "\u8fd9\u4e2afile.conf\u7684\u7248\u672c\u662f\u4e0d\u662f\u6709\u70b9\u65e7\u4e86\uff1f", "url": "https://github.com/seata/seata/pull/3009#discussion_r534805719", "createdAt": "2020-12-03T07:27:39Z", "author": {"login": "caohdgege"}, "path": "server-starter/src/test/resources/file.conf", "diffHunk": "@@ -0,0 +1,44 @@\n+#reduce delay for test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48a883079ffb9df98afdc01b94e81aa81acb7276"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjExMjM3Mw==", "bodyText": "\u8fd9\u4e2a\u6587\u4ef6\u5df2\u7ecf\u6ca1\u7528\u4e86\uff0c\u6211\u5c06\u5220\u9664\u5b83", "url": "https://github.com/seata/seata/pull/3009#discussion_r542112373", "createdAt": "2020-12-14T04:59:13Z", "author": {"login": "spilledyear"}, "path": "server-starter/src/test/resources/file.conf", "diffHunk": "@@ -0,0 +1,44 @@\n+#reduce delay for test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgwNTcxOQ=="}, "originalCommit": {"oid": "48a883079ffb9df98afdc01b94e81aa81acb7276"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU0NzM2MTI5OnYy", "diffSide": "RIGHT", "path": "distribution/release-seata.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNFQwOToxODoxMFrOIZK0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QxNjowODo0NVrOIqP4Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzI2MjY2NQ==", "bodyText": "english description", "url": "https://github.com/seata/seata/pull/3009#discussion_r563262665", "createdAt": "2021-01-24T09:18:10Z", "author": {"login": "a364176773"}, "path": "distribution/release-seata.xml", "diffHunk": "@@ -45,18 +45,20 @@\n \n         <fileSet>\n             <includes>\n-                <include>lib/**</include>\n+                <include>logs/**</include>\n             </includes>\n-            <excludes>\n-                <exclude>lib/mysql-connector-java-*.jar</exclude>\n-            </excludes>\n         </fileSet>\n     </fileSets>\n     <files>\n         <file>\n             <source>LICENSE-BIN</source>\n             <destName>LICENSE</destName>\n         </file>\n+        <file>\n+            <!--\u6253\u597d\u7684jar\u5305\u540d\u79f0\u548c\u653e\u7f6e\u76ee\u5f55-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6da49a049eab19a43ce8950720126f3d28a45f15"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTE3MTI0Mw==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r581171243", "createdAt": "2021-02-23T16:08:45Z", "author": {"login": "spilledyear"}, "path": "distribution/release-seata.xml", "diffHunk": "@@ -45,18 +45,20 @@\n \n         <fileSet>\n             <includes>\n-                <include>lib/**</include>\n+                <include>logs/**</include>\n             </includes>\n-            <excludes>\n-                <exclude>lib/mysql-connector-java-*.jar</exclude>\n-            </excludes>\n         </fileSet>\n     </fileSets>\n     <files>\n         <file>\n             <source>LICENSE-BIN</source>\n             <destName>LICENSE</destName>\n         </file>\n+        <file>\n+            <!--\u6253\u597d\u7684jar\u5305\u540d\u79f0\u548c\u653e\u7f6e\u76ee\u5f55-->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzI2MjY2NQ=="}, "originalCommit": {"oid": "6da49a049eab19a43ce8950720126f3d28a45f15"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE3OTg3OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/properties/SeataProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNTo1OTowMFrOJGwPMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxMzozNFrOJH3ZUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MTU1Mw==", "bodyText": "import static", "url": "https://github.com/seata/seata/pull/3009#discussion_r611061553", "createdAt": "2021-04-10T15:59:00Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/properties/SeataProperties.java", "diffHunk": "@@ -16,17 +16,17 @@\n package io.seata.spring.boot.autoconfigure.properties;\n \n import io.seata.common.DefaultValues;\n+import io.seata.spring.boot.autoconfigure.StarterConstants;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.context.properties.ConfigurationProperties;\n import org.springframework.stereotype.Component;\n \n-import static io.seata.spring.boot.autoconfigure.StarterConstants.SEATA_PREFIX;\n \n /**\n  * @author xingfudeshi@gmail.com\n  */\n @Component\n-@ConfigurationProperties(prefix = SEATA_PREFIX)\n+@ConfigurationProperties(prefix = StarterConstants.SEATA_PREFIX)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyNzQwOQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612227409", "createdAt": "2021-04-13T08:13:34Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/properties/SeataProperties.java", "diffHunk": "@@ -16,17 +16,17 @@\n package io.seata.spring.boot.autoconfigure.properties;\n \n import io.seata.common.DefaultValues;\n+import io.seata.spring.boot.autoconfigure.StarterConstants;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.boot.context.properties.ConfigurationProperties;\n import org.springframework.stereotype.Component;\n \n-import static io.seata.spring.boot.autoconfigure.StarterConstants.SEATA_PREFIX;\n \n /**\n  * @author xingfudeshi@gmail.com\n  */\n @Component\n-@ConfigurationProperties(prefix = SEATA_PREFIX)\n+@ConfigurationProperties(prefix = StarterConstants.SEATA_PREFIX)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MTU1Mw=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4MTkwOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/provider/SpringBootConfigurationProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowMDo0NFrOJGwQIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxMzo0MFrOJH3Zog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MTc5Mg==", "bodyText": "please restore the code formatting style", "url": "https://github.com/seata/seata/pull/3009#discussion_r611061792", "createdAt": "2021-04-10T16:00:44Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/provider/SpringBootConfigurationProvider.java", "diffHunk": "@@ -32,6 +26,12 @@\n import org.springframework.cglib.proxy.MethodProxy;\n import org.springframework.context.ApplicationContext;\n \n+import java.lang.reflect.Field;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyNzQ5MA==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612227490", "createdAt": "2021-04-13T08:13:40Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/provider/SpringBootConfigurationProvider.java", "diffHunk": "@@ -32,6 +26,12 @@\n import org.springframework.cglib.proxy.MethodProxy;\n import org.springframework.context.ApplicationContext;\n \n+import java.lang.reflect.Field;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MTc5Mg=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4NDU1OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/MetricsProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNDo1OVrOJGwRiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxMzo0M1rOJH3Z4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjE1Mw==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062153", "createdAt": "2021-04-10T16:04:59Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/MetricsProperties.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.METRICS_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = METRICS_PREFIX)\n+public class MetricsProperties {\n+    Boolean enabled = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyNzU1NQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612227555", "createdAt": "2021-04-13T08:13:43Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/MetricsProperties.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.METRICS_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = METRICS_PREFIX)\n+public class MetricsProperties {\n+    Boolean enabled = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjE1Mw=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4NDc2OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNToyN1rOJGwRqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxMzo0OFrOJH3aJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjE4NQ==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062185", "createdAt": "2021-04-10T16:05:27Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerProperties.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import java.time.Duration;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SERVER_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = SERVER_PREFIX)\n+public class ServerProperties {\n+    Duration maxCommitRetryTimeout = Duration.ofMillis(-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyNzYyMA==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612227620", "createdAt": "2021-04-13T08:13:48Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerProperties.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import java.time.Duration;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SERVER_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = SERVER_PREFIX)\n+public class ServerProperties {\n+    Duration maxCommitRetryTimeout = Duration.ofMillis(-1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjE4NQ=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4NTI3OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerRecoveryProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNTo0MFrOJGwR4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxNDowNVrOJH3bAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjI0MA==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062240", "createdAt": "2021-04-10T16:05:40Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerRecoveryProperties.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SERVER_RECOVERY_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = SERVER_RECOVERY_PREFIX)\n+public class ServerRecoveryProperties {\n+    Integer committingRetryPeriod = 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyNzg0MQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612227841", "createdAt": "2021-04-13T08:14:05Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerRecoveryProperties.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SERVER_RECOVERY_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = SERVER_RECOVERY_PREFIX)\n+public class ServerRecoveryProperties {\n+    Integer committingRetryPeriod = 1000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjI0MA=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4NTQxOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerUndoProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNTo0NlrOJGwR8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNTo0NlrOJGwR8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjI1Ng==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062256", "createdAt": "2021-04-10T16:05:46Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerUndoProperties.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SERVER_UNDO_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = SERVER_UNDO_PREFIX)\n+public class ServerUndoProperties {\n+    Integer logSaveDays = 7;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4NjIxOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNjoyNlrOJGwSSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNjoyNlrOJGwSSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjM0Ng==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062346", "createdAt": "2021-04-10T16:06:26Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_DB_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_DB_PREFIX)\n+public class StoreDBProperties {\n+    String datasource = \"druid\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4NjY5OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreFileProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNzowMVrOJGwShw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxNDowOVrOJH3bLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjQwNw==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062407", "createdAt": "2021-04-10T16:07:01Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreFileProperties.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_FILE_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_FILE_PREFIX)\n+public class StoreFileProperties {\n+    String dir = \"sessionStore\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyNzg4Ng==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612227886", "createdAt": "2021-04-13T08:14:09Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreFileProperties.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_FILE_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_FILE_PREFIX)\n+public class StoreFileProperties {\n+    String dir = \"sessionStore\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjQwNw=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4NjkwOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNzoxNFrOJGwSog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxNDoxOVrOJH3bvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjQzNA==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062434", "createdAt": "2021-04-10T16:07:14Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreProperties.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_PREFIX)\n+public class StoreProperties {\n+    /**\n+     * file, db, redis\n+     */\n+    private String mode = \"file\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyODAzMQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612228031", "createdAt": "2021-04-13T08:14:19Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreProperties.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_PREFIX)\n+public class StoreProperties {\n+    /**\n+     * file, db, redis\n+     */\n+    private String mode = \"file\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjQzNA=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE4ODIxOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreRedisProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjowNzo1NVrOJGwTMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxNDoyNVrOJH3cFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjU3OA==", "bodyText": "please add private", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062578", "createdAt": "2021-04-10T16:07:55Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreRedisProperties.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_REDIS_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_REDIS_SINGLE_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_REDIS_SENTINEL_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_REDIS_PREFIX)\n+public class StoreRedisProperties {\n+    /**\n+     * single, sentinel\n+     */\n+    String mode = \"single\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyODExOA==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612228118", "createdAt": "2021-04-13T08:14:25Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreRedisProperties.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_REDIS_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_REDIS_SINGLE_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_REDIS_SENTINEL_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_REDIS_PREFIX)\n+public class StoreRedisProperties {\n+    /**\n+     * single, sentinel\n+     */\n+    String mode = \"single\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MjU3OA=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE5MTcwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/controller/HealthController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjoxMTo0NFrOJGwU1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxNDozMFrOJH3cTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2Mjk5OQ==", "bodyText": "private static final", "url": "https://github.com/seata/seata/pull/3009#discussion_r611062999", "createdAt": "2021-04-10T16:11:44Z", "author": {"login": "a364176773"}, "path": "server/src/main/java/io/seata/server/controller/HealthController.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server.controller;\n+\n+import io.seata.server.ServerRunner;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Controller\n+@RequestMapping\n+public class HealthController {\n+    private Logger logger = LoggerFactory.getLogger(HealthController.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyODE3Mw==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612228173", "createdAt": "2021-04-13T08:14:30Z", "author": {"login": "spilledyear"}, "path": "server/src/main/java/io/seata/server/controller/HealthController.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server.controller;\n+\n+import io.seata.server.ServerRunner;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Controller\n+@RequestMapping\n+public class HealthController {\n+    private Logger logger = LoggerFactory.getLogger(HealthController.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2Mjk5OQ=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NTE5MjI0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/ServerRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMFQxNjoxMjoyMlrOJGwVGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxNDozNFrOJH3cjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MzA2Nw==", "bodyText": "started = Boolean.FALSE;", "url": "https://github.com/seata/seata/pull/3009#discussion_r611063067", "createdAt": "2021-04-10T16:12:22Z", "author": {"login": "a364176773"}, "path": "server/src/main/java/io/seata/server/ServerRunner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+public class ServerRunner implements CommandLineRunner {\n+\n+    final Logger logger = LoggerFactory.getLogger(ServerRunner.class);\n+\n+    private Boolean started = Boolean.FALSE;\n+\n+\n+    @Override\n+    public void run(String... args) {\n+        try {\n+            long start = System.currentTimeMillis();\n+            Server.main(args);\n+            started = true;\n+\n+            long cost = System.currentTimeMillis() - start;\n+            logger.info(\"seata server started in {} millSeconds\", cost);\n+        } catch (Throwable e) {\n+            logger.error(\"seata server start error: {} \", e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyODIzOQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612228239", "createdAt": "2021-04-13T08:14:34Z", "author": {"login": "spilledyear"}, "path": "server/src/main/java/io/seata/server/ServerRunner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+public class ServerRunner implements CommandLineRunner {\n+\n+    final Logger logger = LoggerFactory.getLogger(ServerRunner.class);\n+\n+    private Boolean started = Boolean.FALSE;\n+\n+\n+    @Override\n+    public void run(String... args) {\n+        try {\n+            long start = System.currentTimeMillis();\n+            Server.main(args);\n+            started = true;\n+\n+            long cost = System.currentTimeMillis() - start;\n+            logger.info(\"seata server started in {} millSeconds\", cost);\n+        } catch (Throwable e) {\n+            logger.error(\"seata server start error: {} \", e.getMessage(), e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTA2MzA2Nw=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg2NjI2NTc4OnYy", "diffSide": "RIGHT", "path": "server/src/main/resources/application.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xMVQxMzo0Mjo0MVrOJG4H4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QwODoxNDo0MFrOJH3c2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTE5MDc1NQ==", "bodyText": "application: \"seata-server\"", "url": "https://github.com/seata/seata/pull/3009#discussion_r611190755", "createdAt": "2021-04-11T13:42:41Z", "author": {"login": "a364176773"}, "path": "server/src/main/resources/application.yaml", "diffHunk": "@@ -0,0 +1,134 @@\n+server:\n+  port: 9098\n+\n+logging:\n+  config: classpath:logback.xml\n+  file:\n+    path: ${user.home}/logs\n+\n+seata:\n+  config:\n+    type: file\n+    file:\n+      name: file.conf\n+    apollo:\n+      appId: seata-server\n+      apolloMeta: http://localhost:8801\n+      namespace: application\n+    nacos:\n+      serverAddr: 127.0.0.1:8848\n+      namespace:\n+      group: SEATA_GROUP\n+      username:\n+      password:\n+    consul:\n+      serverAddr: 127.0.0.1:8500\n+    zk:\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username:\n+      password:\n+    etcd3:\n+      serverAddr: http://localhost:2379\n+  registry:\n+    type: file\n+    file:\n+      name: file.conf\n+    zk:\n+      cluster: default\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username: \"\"\n+      password: \"\"\n+    nacos:\n+      application:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjIyODMxNQ==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612228315", "createdAt": "2021-04-13T08:14:40Z", "author": {"login": "spilledyear"}, "path": "server/src/main/resources/application.yaml", "diffHunk": "@@ -0,0 +1,134 @@\n+server:\n+  port: 9098\n+\n+logging:\n+  config: classpath:logback.xml\n+  file:\n+    path: ${user.home}/logs\n+\n+seata:\n+  config:\n+    type: file\n+    file:\n+      name: file.conf\n+    apollo:\n+      appId: seata-server\n+      apolloMeta: http://localhost:8801\n+      namespace: application\n+    nacos:\n+      serverAddr: 127.0.0.1:8848\n+      namespace:\n+      group: SEATA_GROUP\n+      username:\n+      password:\n+    consul:\n+      serverAddr: 127.0.0.1:8500\n+    zk:\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username:\n+      password:\n+    etcd3:\n+      serverAddr: http://localhost:2379\n+  registry:\n+    type: file\n+    file:\n+      name: file.conf\n+    zk:\n+      cluster: default\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username: \"\"\n+      password: \"\"\n+    nacos:\n+      application:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTE5MDc1NQ=="}, "originalCommit": {"oid": "d9afba0b8b92f4868e6fecd85a8da24392c206e1"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg3NDkwNDAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/resources/application.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QxNDoyMjoyOFrOJIHrBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNFQxNDo1MjozMVrOJI6GUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjQ5NDA4NA==", "bodyText": "\u9488\u5bf9\u8fd9\u4e9b\u914d\u7f6e\u5e94\u8be5\u5199\u4e00\u4e2aapplication.yaml.example", "url": "https://github.com/seata/seata/pull/3009#discussion_r612494084", "createdAt": "2021-04-13T14:22:28Z", "author": {"login": "a364176773"}, "path": "server/src/main/resources/application.yaml", "diffHunk": "@@ -0,0 +1,138 @@\n+server:\n+  port: 9091\n+\n+logging:\n+  config: classpath:logback.xml\n+  file:\n+    path: ${user.home}/logs\n+\n+seata:\n+  config:\n+    type: file\n+    nacos:\n+      serverAddr: 127.0.0.1:8848\n+      namespace:\n+      group: SEATA_GROUP\n+      username:\n+      password:\n+      dataId: seataServer.properties\n+    consul:\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    apollo:\n+      appId: seata-server\n+      apolloMeta: http://192.168.1.204:8801\n+      apolloConfigService: http://192.168.1.204:8080\n+      namespace: application\n+      apolloAccesskeySecret:\n+      cluster: seata\n+    zk:\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username:\n+      password:\n+      nodePath: /seata/seata.properties\n+    etcd3:\n+      serverAddr: http://localhost:2379\n+  registry:\n+    type: file\n+    nacos:\n+      application: seata-server\n+      serverAddr: 127.0.0.1:8848\n+      group: SEATA_GROUP\n+      namespace:\n+      cluster: default\n+      username:\n+      password:\n+    eureka:\n+      serviceUrl: http://localhost:8761/eureka\n+      application: default\n+      weight: 1\n+    redis:\n+      serverAddr: localhost:6379\n+      db: 0\n+      password:\n+      cluster: default\n+      timeout: 0\n+    zk:\n+      cluster: default\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username: \"\"\n+      password: \"\"\n+    consul:\n+      cluster: default\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    etcd3:\n+      cluster: default\n+      serverAddr: http://localhost:2379\n+    sofa:\n+      serverAddr: 127.0.0.1:9603\n+      application: default\n+      region: DEFAULT_ZONE\n+      datacenter: DefaultDataCenter\n+      cluster: default\n+      group: SEATA_GROUP\n+      addressWaitTime: 3000\n+\n+  server:\n+    maxCommitRetryTimeout: -1\n+    maxRollbackRetryTimeout: -1\n+    rollbackRetryTimeoutUnlockEnable: false\n+    recovery:\n+      rollbackingRetryPeriod: 1000\n+      timeoutRetryPeriod: 1000\n+    undo:\n+      logSaveDays: 7\n+      logDeletePeriod: 86400000\n+  store:\n+    mode: file\n+    file:\n+      dir: sessionStore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "054e6a2a5f3b4a4033b3cf29da70a9fb90959344"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjU4ODY3NA==", "bodyText": "added", "url": "https://github.com/seata/seata/pull/3009#discussion_r612588674", "createdAt": "2021-04-13T16:11:11Z", "author": {"login": "spilledyear"}, "path": "server/src/main/resources/application.yaml", "diffHunk": "@@ -0,0 +1,138 @@\n+server:\n+  port: 9091\n+\n+logging:\n+  config: classpath:logback.xml\n+  file:\n+    path: ${user.home}/logs\n+\n+seata:\n+  config:\n+    type: file\n+    nacos:\n+      serverAddr: 127.0.0.1:8848\n+      namespace:\n+      group: SEATA_GROUP\n+      username:\n+      password:\n+      dataId: seataServer.properties\n+    consul:\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    apollo:\n+      appId: seata-server\n+      apolloMeta: http://192.168.1.204:8801\n+      apolloConfigService: http://192.168.1.204:8080\n+      namespace: application\n+      apolloAccesskeySecret:\n+      cluster: seata\n+    zk:\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username:\n+      password:\n+      nodePath: /seata/seata.properties\n+    etcd3:\n+      serverAddr: http://localhost:2379\n+  registry:\n+    type: file\n+    nacos:\n+      application: seata-server\n+      serverAddr: 127.0.0.1:8848\n+      group: SEATA_GROUP\n+      namespace:\n+      cluster: default\n+      username:\n+      password:\n+    eureka:\n+      serviceUrl: http://localhost:8761/eureka\n+      application: default\n+      weight: 1\n+    redis:\n+      serverAddr: localhost:6379\n+      db: 0\n+      password:\n+      cluster: default\n+      timeout: 0\n+    zk:\n+      cluster: default\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username: \"\"\n+      password: \"\"\n+    consul:\n+      cluster: default\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    etcd3:\n+      cluster: default\n+      serverAddr: http://localhost:2379\n+    sofa:\n+      serverAddr: 127.0.0.1:9603\n+      application: default\n+      region: DEFAULT_ZONE\n+      datacenter: DefaultDataCenter\n+      cluster: default\n+      group: SEATA_GROUP\n+      addressWaitTime: 3000\n+\n+  server:\n+    maxCommitRetryTimeout: -1\n+    maxRollbackRetryTimeout: -1\n+    rollbackRetryTimeoutUnlockEnable: false\n+    recovery:\n+      rollbackingRetryPeriod: 1000\n+      timeoutRetryPeriod: 1000\n+    undo:\n+      logSaveDays: 7\n+      logDeletePeriod: 86400000\n+  store:\n+    mode: file\n+    file:\n+      dir: sessionStore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjQ5NDA4NA=="}, "originalCommit": {"oid": "054e6a2a5f3b4a4033b3cf29da70a9fb90959344"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzMyMDI3Mw==", "bodyText": "added\n\n\u4e2a\u4eba\u8ba4\u4e3aseata\u76f8\u5173\u914d\u7f6e\u4ec5\u9700\u7559seata: store: mode: file ,\u5176\u4f59\u90fd\u53ef\u4ee5\u653e\u5230example\u4e2d\u5373\u53ef,\u4fdd\u6301\u7cbe\u7b80", "url": "https://github.com/seata/seata/pull/3009#discussion_r613320273", "createdAt": "2021-04-14T14:52:31Z", "author": {"login": "a364176773"}, "path": "server/src/main/resources/application.yaml", "diffHunk": "@@ -0,0 +1,138 @@\n+server:\n+  port: 9091\n+\n+logging:\n+  config: classpath:logback.xml\n+  file:\n+    path: ${user.home}/logs\n+\n+seata:\n+  config:\n+    type: file\n+    nacos:\n+      serverAddr: 127.0.0.1:8848\n+      namespace:\n+      group: SEATA_GROUP\n+      username:\n+      password:\n+      dataId: seataServer.properties\n+    consul:\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    apollo:\n+      appId: seata-server\n+      apolloMeta: http://192.168.1.204:8801\n+      apolloConfigService: http://192.168.1.204:8080\n+      namespace: application\n+      apolloAccesskeySecret:\n+      cluster: seata\n+    zk:\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username:\n+      password:\n+      nodePath: /seata/seata.properties\n+    etcd3:\n+      serverAddr: http://localhost:2379\n+  registry:\n+    type: file\n+    nacos:\n+      application: seata-server\n+      serverAddr: 127.0.0.1:8848\n+      group: SEATA_GROUP\n+      namespace:\n+      cluster: default\n+      username:\n+      password:\n+    eureka:\n+      serviceUrl: http://localhost:8761/eureka\n+      application: default\n+      weight: 1\n+    redis:\n+      serverAddr: localhost:6379\n+      db: 0\n+      password:\n+      cluster: default\n+      timeout: 0\n+    zk:\n+      cluster: default\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username: \"\"\n+      password: \"\"\n+    consul:\n+      cluster: default\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    etcd3:\n+      cluster: default\n+      serverAddr: http://localhost:2379\n+    sofa:\n+      serverAddr: 127.0.0.1:9603\n+      application: default\n+      region: DEFAULT_ZONE\n+      datacenter: DefaultDataCenter\n+      cluster: default\n+      group: SEATA_GROUP\n+      addressWaitTime: 3000\n+\n+  server:\n+    maxCommitRetryTimeout: -1\n+    maxRollbackRetryTimeout: -1\n+    rollbackRetryTimeoutUnlockEnable: false\n+    recovery:\n+      rollbackingRetryPeriod: 1000\n+      timeoutRetryPeriod: 1000\n+    undo:\n+      logSaveDays: 7\n+      logDeletePeriod: 86400000\n+  store:\n+    mode: file\n+    file:\n+      dir: sessionStore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjQ5NDA4NA=="}, "originalCommit": {"oid": "054e6a2a5f3b4a4033b3cf29da70a9fb90959344"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg3NDk0Njg1OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/spring.factories", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QxNDoyOTo1MlrOJIIF9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xM1QxNjoxMDowMVrOJINZFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjUwMDk4MQ==", "bodyText": "SeataClientPropertiesAutoConfiguration", "url": "https://github.com/seata/seata/pull/3009#discussion_r612500981", "createdAt": "2021-04-13T14:29:52Z", "author": {"login": "a364176773"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/spring.factories", "diffHunk": "@@ -0,0 +1,2 @@\n+# Auto Configure\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=io.seata.spring.boot.autoconfigure.SeataServerPropertiesAutoConfiguration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "054e6a2a5f3b4a4033b3cf29da70a9fb90959344"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjU4Nzc5Nw==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r612587797", "createdAt": "2021-04-13T16:10:01Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/spring.factories", "diffHunk": "@@ -0,0 +1,2 @@\n+# Auto Configure\n+org.springframework.boot.autoconfigure.EnableAutoConfiguration=io.seata.spring.boot.autoconfigure.SeataServerPropertiesAutoConfiguration", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjUwMDk4MQ=="}, "originalCommit": {"oid": "054e6a2a5f3b4a4033b3cf29da70a9fb90959344"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTQ0MTU4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/controller/HealthController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNDo0MDoyN1rOJJrklA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNjo1MlrOJKHJsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDEzMDgzNg==", "bodyText": "simple to return serverRunner.started() ? OK : NOT_OK; ?", "url": "https://github.com/seata/seata/pull/3009#discussion_r614130836", "createdAt": "2021-04-15T14:40:27Z", "author": {"login": "caohdgege"}, "path": "server/src/main/java/io/seata/server/controller/HealthController.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server.controller;\n+\n+import io.seata.server.ServerRunner;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Controller\n+@RequestMapping\n+public class HealthController {\n+\n+    private static final String OK = \"ok\";\n+    private static final String NOT_OK = \"not_ok\";\n+\n+    @Autowired\n+    private ServerRunner serverRunner;\n+\n+\n+    @RequestMapping(\"/health\")\n+    @ResponseBody\n+    String healthCheck() {\n+        boolean started = serverRunner.started();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4MjcwNg==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r614582706", "createdAt": "2021-04-16T06:06:52Z", "author": {"login": "spilledyear"}, "path": "server/src/main/java/io/seata/server/controller/HealthController.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server.controller;\n+\n+import io.seata.server.ServerRunner;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.ResponseBody;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Controller\n+@RequestMapping\n+public class HealthController {\n+\n+    private static final String OK = \"ok\";\n+    private static final String NOT_OK = \"not_ok\";\n+\n+    @Autowired\n+    private ServerRunner serverRunner;\n+\n+\n+    @RequestMapping(\"/health\")\n+    @ResponseBody\n+    String healthCheck() {\n+        boolean started = serverRunner.started();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDEzMDgzNg=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTUwNzExOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/ServerRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNDo1MjozNFrOJJsN_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNjo1OVrOJKHJyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE0MTQzOA==", "bodyText": "\u6839\u636e\u4f20\u7edf\uff0clogger->LOGGER", "url": "https://github.com/seata/seata/pull/3009#discussion_r614141438", "createdAt": "2021-04-15T14:52:34Z", "author": {"login": "caohdgege"}, "path": "server/src/main/java/io/seata/server/ServerRunner.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+public class ServerRunner implements CommandLineRunner {\n+\n+    final Logger logger = LoggerFactory.getLogger(ServerRunner.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4MjczMA==", "bodyText": "fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r614582730", "createdAt": "2021-04-16T06:06:59Z", "author": {"login": "spilledyear"}, "path": "server/src/main/java/io/seata/server/ServerRunner.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+public class ServerRunner implements CommandLineRunner {\n+\n+    final Logger logger = LoggerFactory.getLogger(ServerRunner.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE0MTQzOA=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTUxMTIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/io/seata/server/ServerRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNDo1MzoyM1rOJJsQmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNzoxM1rOJKHKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE0MjEwNg==", "bodyText": "Boolean or boolean ?", "url": "https://github.com/seata/seata/pull/3009#discussion_r614142106", "createdAt": "2021-04-15T14:53:23Z", "author": {"login": "caohdgege"}, "path": "server/src/main/java/io/seata/server/ServerRunner.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+public class ServerRunner implements CommandLineRunner {\n+\n+    final Logger logger = LoggerFactory.getLogger(ServerRunner.class);\n+\n+    private Boolean started = Boolean.FALSE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4MjgzMQ==", "bodyText": "boolean fixed", "url": "https://github.com/seata/seata/pull/3009#discussion_r614582831", "createdAt": "2021-04-16T06:07:13Z", "author": {"login": "spilledyear"}, "path": "server/src/main/java/io/seata/server/ServerRunner.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.server;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.stereotype.Component;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+public class ServerRunner implements CommandLineRunner {\n+\n+    final Logger logger = LoggerFactory.getLogger(ServerRunner.class);\n+\n+    private Boolean started = Boolean.FALSE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE0MjEwNg=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTYzMTMyOnYy", "diffSide": "RIGHT", "path": "server/src/main/resources/README-zh.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNToxNToyOVrOJJtbMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNzoxOVrOJKHKUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2MTIwMQ==", "bodyText": "./mvnw ?", "url": "https://github.com/seata/seata/pull/3009#discussion_r614161201", "createdAt": "2021-04-15T15:15:29Z", "author": {"login": "caohdgege"}, "path": "server/src/main/resources/README-zh.md", "diffHunk": "@@ -28,3 +28,5 @@\n - etcd3: \u7528\u4e8e\u5411 Etcd3 \u4e2d\u6dfb\u52a0\u914d\u7f6e\n - consul: \u7528\u4e8e\u5411 consul \u4e2d\u6dfb\u52a0\u914d\u7f6e\n \n+## \u6253\u5305\n+mvn -Prelease-seata -Dmaven.test.skip=true clean install -U", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4Mjg2Nw==", "bodyText": "down", "url": "https://github.com/seata/seata/pull/3009#discussion_r614582867", "createdAt": "2021-04-16T06:07:19Z", "author": {"login": "spilledyear"}, "path": "server/src/main/resources/README-zh.md", "diffHunk": "@@ -28,3 +28,5 @@\n - etcd3: \u7528\u4e8e\u5411 Etcd3 \u4e2d\u6dfb\u52a0\u914d\u7f6e\n - consul: \u7528\u4e8e\u5411 consul \u4e2d\u6dfb\u52a0\u914d\u7f6e\n \n+## \u6253\u5305\n+mvn -Prelease-seata -Dmaven.test.skip=true clean install -U", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2MTIwMQ=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTY0NTI3OnYy", "diffSide": "RIGHT", "path": "server/src/main/resources/application.example.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNToxODowNFrOJJtjxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNzoyNVrOJKHKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2MzM5Nw==", "bodyText": "\u6839\u636eSpringBoot\u7684\u4f7f\u7528\u4e60\u60ef\u4e0a\u662f\u4e0d\u662f\u5e94\u8be5\u7528-\u800c\u4e0d\u662f\u5c0f\u5199\u9a7c\u5cf0\uff1f", "url": "https://github.com/seata/seata/pull/3009#discussion_r614163397", "createdAt": "2021-04-15T15:18:04Z", "author": {"login": "caohdgege"}, "path": "server/src/main/resources/application.example.yaml", "diffHunk": "@@ -0,0 +1,134 @@\n+server:\n+  port: 9091\n+\n+logging:\n+  config: classpath:logback.xml\n+  file:\n+    path: ${user.home}/logs\n+\n+seata:\n+  config:\n+    type: file\n+    nacos:\n+      serverAddr: 127.0.0.1:8848\n+      namespace:\n+      group: SEATA_GROUP\n+      username:\n+      password:\n+      dataId: seataServer.properties\n+    consul:\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    apollo:\n+      appId: seata-server\n+      apolloMeta: http://192.168.1.204:8801\n+      apolloConfigService: http://192.168.1.204:8080\n+      namespace: application\n+      apolloAccesskeySecret:\n+      cluster: seata\n+    zk:\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username:\n+      password:\n+      nodePath: /seata/seata.properties\n+    etcd3:\n+      serverAddr: http://localhost:2379\n+  registry:\n+    type: file\n+    nacos:\n+      application: seata-server\n+      serverAddr: 127.0.0.1:8848\n+      group: SEATA_GROUP\n+      namespace:\n+      cluster: default\n+      username:\n+      password:\n+    eureka:\n+      serviceUrl: http://localhost:8761/eureka\n+      application: default\n+      weight: 1\n+    redis:\n+      serverAddr: localhost:6379\n+      db: 0\n+      password:\n+      cluster: default\n+      timeout: 0\n+    zk:\n+      cluster: default\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username: \"\"\n+      password: \"\"\n+    consul:\n+      cluster: default\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    etcd3:\n+      cluster: default\n+      serverAddr: http://localhost:2379\n+    sofa:\n+      serverAddr: 127.0.0.1:9603\n+      application: default\n+      region: DEFAULT_ZONE\n+      datacenter: DefaultDataCenter\n+      cluster: default\n+      group: SEATA_GROUP\n+      addressWaitTime: 3000\n+\n+  server:\n+    maxCommitRetryTimeout: -1\n+    maxRollbackRetryTimeout: -1\n+    rollbackRetryTimeoutUnlockEnable: false\n+    recovery:\n+      committingRetryPeriod: 1000\n+      asynCommittingRetryPeriod: 1000\n+      rollbackingRetryPeriod: 1000\n+      timeoutRetryPeriod: 1000\n+    undo:\n+      logSaveDays: 7\n+      logDeletePeriod: 86400000\n+  store:\n+    mode: file\n+    file:\n+      dir: sessionStore\n+      maxBranchSessionSize: 16384", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4MjkwMQ==", "bodyText": "down", "url": "https://github.com/seata/seata/pull/3009#discussion_r614582901", "createdAt": "2021-04-16T06:07:25Z", "author": {"login": "spilledyear"}, "path": "server/src/main/resources/application.example.yaml", "diffHunk": "@@ -0,0 +1,134 @@\n+server:\n+  port: 9091\n+\n+logging:\n+  config: classpath:logback.xml\n+  file:\n+    path: ${user.home}/logs\n+\n+seata:\n+  config:\n+    type: file\n+    nacos:\n+      serverAddr: 127.0.0.1:8848\n+      namespace:\n+      group: SEATA_GROUP\n+      username:\n+      password:\n+      dataId: seataServer.properties\n+    consul:\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    apollo:\n+      appId: seata-server\n+      apolloMeta: http://192.168.1.204:8801\n+      apolloConfigService: http://192.168.1.204:8080\n+      namespace: application\n+      apolloAccesskeySecret:\n+      cluster: seata\n+    zk:\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username:\n+      password:\n+      nodePath: /seata/seata.properties\n+    etcd3:\n+      serverAddr: http://localhost:2379\n+  registry:\n+    type: file\n+    nacos:\n+      application: seata-server\n+      serverAddr: 127.0.0.1:8848\n+      group: SEATA_GROUP\n+      namespace:\n+      cluster: default\n+      username:\n+      password:\n+    eureka:\n+      serviceUrl: http://localhost:8761/eureka\n+      application: default\n+      weight: 1\n+    redis:\n+      serverAddr: localhost:6379\n+      db: 0\n+      password:\n+      cluster: default\n+      timeout: 0\n+    zk:\n+      cluster: default\n+      serverAddr: 127.0.0.1:2181\n+      sessionTimeout: 6000\n+      connectTimeout: 2000\n+      username: \"\"\n+      password: \"\"\n+    consul:\n+      cluster: default\n+      serverAddr: 127.0.0.1:8500\n+      aclToken:\n+    etcd3:\n+      cluster: default\n+      serverAddr: http://localhost:2379\n+    sofa:\n+      serverAddr: 127.0.0.1:9603\n+      application: default\n+      region: DEFAULT_ZONE\n+      datacenter: DefaultDataCenter\n+      cluster: default\n+      group: SEATA_GROUP\n+      addressWaitTime: 3000\n+\n+  server:\n+    maxCommitRetryTimeout: -1\n+    maxRollbackRetryTimeout: -1\n+    rollbackRetryTimeoutUnlockEnable: false\n+    recovery:\n+      committingRetryPeriod: 1000\n+      asynCommittingRetryPeriod: 1000\n+      rollbackingRetryPeriod: 1000\n+      timeoutRetryPeriod: 1000\n+    undo:\n+      logSaveDays: 7\n+      logDeletePeriod: 86400000\n+  store:\n+    mode: file\n+    file:\n+      dir: sessionStore\n+      maxBranchSessionSize: 16384", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2MzM5Nw=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTY0NjEyOnYy", "diffSide": "RIGHT", "path": "server/src/main/resources/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNToxODoxN1rOJJtkZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNzozNFrOJKHK1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2MzU1OQ==", "bodyText": "./mvnw ?", "url": "https://github.com/seata/seata/pull/3009#discussion_r614163559", "createdAt": "2021-04-15T15:18:17Z", "author": {"login": "caohdgege"}, "path": "server/src/main/resources/README.md", "diffHunk": "@@ -28,3 +28,6 @@\n - etcd3: Initialize script for Etcd3\n - consul: Initialize script for consul\n \n+## build packege \n+mvn -Prelease-seata -Dmaven.test.skip=true clean install -U", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4Mjk5Ng==", "bodyText": "down", "url": "https://github.com/seata/seata/pull/3009#discussion_r614582996", "createdAt": "2021-04-16T06:07:34Z", "author": {"login": "spilledyear"}, "path": "server/src/main/resources/README.md", "diffHunk": "@@ -28,3 +28,6 @@\n - etcd3: Initialize script for Etcd3\n - consul: Initialize script for consul\n \n+## build packege \n+mvn -Prelease-seata -Dmaven.test.skip=true clean install -U", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2MzU1OQ=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTY1ODg4OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNToyMDo1MFrOJJtsXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNzozOVrOJKHK_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2NTU5Nw==", "bodyText": "com.mysql.jdbc.Driver \u5e94\u8be5\u8ddfapplication.example.yaml\u540c\u6b65", "url": "https://github.com/seata/seata/pull/3009#discussion_r614165597", "createdAt": "2021-04-15T15:20:50Z", "author": {"login": "caohdgege"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_DB_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_DB_PREFIX)\n+public class StoreDBProperties {\n+    private String datasource = \"druid\";\n+    private String dbType = \"mysql\";\n+    private String driverClassName = \"com.mysql.cj.jdbc.Driver\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4MzAzNg==", "bodyText": "down", "url": "https://github.com/seata/seata/pull/3009#discussion_r614583036", "createdAt": "2021-04-16T06:07:39Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_DB_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_DB_PREFIX)\n+public class StoreDBProperties {\n+    private String datasource = \"druid\";\n+    private String dbType = \"mysql\";\n+    private String driverClassName = \"com.mysql.cj.jdbc.Driver\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2NTU5Nw=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4NTY2MTIxOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNVQxNToyMToxOVrOJJtt3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNjowNzo0NFrOJKHLJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2NTk4Mw==", "bodyText": "jdbc:mysql://127.0.0.1:3306/seata?rewriteBatchedStatements=true \u4e0b\u540c", "url": "https://github.com/seata/seata/pull/3009#discussion_r614165983", "createdAt": "2021-04-15T15:21:19Z", "author": {"login": "caohdgege"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_DB_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_DB_PREFIX)\n+public class StoreDBProperties {\n+    private String datasource = \"druid\";\n+    private String dbType = \"mysql\";\n+    private String driverClassName = \"com.mysql.cj.jdbc.Driver\";\n+    private String url = \"jdbc:mysql://localhost:3306/seata?useUnicode=true\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDU4MzA3OA==", "bodyText": "down", "url": "https://github.com/seata/seata/pull/3009#discussion_r614583078", "createdAt": "2021-04-16T06:07:44Z", "author": {"login": "spilledyear"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/store/StoreDBProperties.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server.store;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.STORE_DB_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = STORE_DB_PREFIX)\n+public class StoreDBProperties {\n+    private String datasource = \"druid\";\n+    private String dbType = \"mysql\";\n+    private String driverClassName = \"com.mysql.cj.jdbc.Driver\";\n+    private String url = \"jdbc:mysql://localhost:3306/seata?useUnicode=true\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDE2NTk4Mw=="}, "originalCommit": {"oid": "6288c8db69b1e4ac256325b8011f6b396a33a96b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4ODU5NjY2OnYy", "diffSide": "RIGHT", "path": "server/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwNzoxNzoxMFrOJKJHkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNDozNzo0OVrOJKZ46w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDYxNDkzMQ==", "bodyText": "Where s the groupId and version?", "url": "https://github.com/seata/seata/pull/3009#discussion_r614614931", "createdAt": "2021-04-16T07:17:10Z", "author": {"login": "l81893521"}, "path": "server/pom.xml", "diffHunk": "@@ -136,213 +162,61 @@\n         </dependency>\n     </dependencies>\n \n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <version>3.0.0</version>\n+                <configuration>\n+                    <archive>\n+                        <manifest>\n+                            <mainClass>io.seata.server.ServerApplication</mainClass>\n+                        </manifest>\n+                    </archive>\n+                    <descriptorRefs>\n+                        <descriptorRef>jar-with-dependencies</descriptorRef>\n+                    </descriptorRefs>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n     <profiles>\n         <profile>\n             <id>release-seata</id>\n             <build>\n+                <finalName>seata-server</finalName>\n                 <plugins>\n                     <plugin>\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-clean-plugin</artifactId>\n-                        <version>3.0.0</version>\n+                        <artifactId>maven-jar-plugin</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c78b80aa5496f1e55c5a3b494b6350bc046b311"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDg4OTcwNw==", "bodyText": "added", "url": "https://github.com/seata/seata/pull/3009#discussion_r614889707", "createdAt": "2021-04-16T14:37:49Z", "author": {"login": "spilledyear"}, "path": "server/pom.xml", "diffHunk": "@@ -136,213 +162,61 @@\n         </dependency>\n     </dependencies>\n \n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <version>3.0.0</version>\n+                <configuration>\n+                    <archive>\n+                        <manifest>\n+                            <mainClass>io.seata.server.ServerApplication</mainClass>\n+                        </manifest>\n+                    </archive>\n+                    <descriptorRefs>\n+                        <descriptorRef>jar-with-dependencies</descriptorRef>\n+                    </descriptorRefs>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n     <profiles>\n         <profile>\n             <id>release-seata</id>\n             <build>\n+                <finalName>seata-server</finalName>\n                 <plugins>\n                     <plugin>\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-clean-plugin</artifactId>\n-                        <version>3.0.0</version>\n+                        <artifactId>maven-jar-plugin</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDYxNDkzMQ=="}, "originalCommit": {"oid": "6c78b80aa5496f1e55c5a3b494b6350bc046b311"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg4OTAyMjg3OnYy", "diffSide": "RIGHT", "path": "server/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQwOTowMzoyOFrOJKNLEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0xNlQxNDozODoyM1rOJKZ6jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDY4MTM2Mw==", "bodyText": "I think can remove\naddDefaultImplementationEntries\n\nand\naddDefaultSpecificationEntries", "url": "https://github.com/seata/seata/pull/3009#discussion_r614681363", "createdAt": "2021-04-16T09:03:28Z", "author": {"login": "l81893521"}, "path": "server/pom.xml", "diffHunk": "@@ -136,213 +162,61 @@\n         </dependency>\n     </dependencies>\n \n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <version>3.0.0</version>\n+                <configuration>\n+                    <archive>\n+                        <manifest>\n+                            <mainClass>io.seata.server.ServerApplication</mainClass>\n+                        </manifest>\n+                    </archive>\n+                    <descriptorRefs>\n+                        <descriptorRef>jar-with-dependencies</descriptorRef>\n+                    </descriptorRefs>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n     <profiles>\n         <profile>\n             <id>release-seata</id>\n             <build>\n+                <finalName>seata-server</finalName>\n                 <plugins>\n                     <plugin>\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-clean-plugin</artifactId>\n-                        <version>3.0.0</version>\n+                        <artifactId>maven-jar-plugin</artifactId>\n                         <configuration>\n-                            <excludeDefaultDirectories>false</excludeDefaultDirectories>\n-                            <filesets>\n-                                <fileset>\n-                                    <directory>../distribution</directory>\n-                                    <includes>\n-                                        <include>bin/**</include>\n-                                        <include>conf/**</include>\n-                                        <include>logs/**</include>\n-                                        <include>lib/**</include>\n-                                        <include>seata-server-${revision}/**</include>\n-                                    </includes>\n-                                </fileset>\n-                            </filesets>\n+                            <archive>\n+                                <manifest>\n+                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c78b80aa5496f1e55c5a3b494b6350bc046b311"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDg5MDEyNQ==", "bodyText": "removed", "url": "https://github.com/seata/seata/pull/3009#discussion_r614890125", "createdAt": "2021-04-16T14:38:23Z", "author": {"login": "spilledyear"}, "path": "server/pom.xml", "diffHunk": "@@ -136,213 +162,61 @@\n         </dependency>\n     </dependencies>\n \n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-assembly-plugin</artifactId>\n+                <version>3.0.0</version>\n+                <configuration>\n+                    <archive>\n+                        <manifest>\n+                            <mainClass>io.seata.server.ServerApplication</mainClass>\n+                        </manifest>\n+                    </archive>\n+                    <descriptorRefs>\n+                        <descriptorRef>jar-with-dependencies</descriptorRef>\n+                    </descriptorRefs>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n     <profiles>\n         <profile>\n             <id>release-seata</id>\n             <build>\n+                <finalName>seata-server</finalName>\n                 <plugins>\n                     <plugin>\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-clean-plugin</artifactId>\n-                        <version>3.0.0</version>\n+                        <artifactId>maven-jar-plugin</artifactId>\n                         <configuration>\n-                            <excludeDefaultDirectories>false</excludeDefaultDirectories>\n-                            <filesets>\n-                                <fileset>\n-                                    <directory>../distribution</directory>\n-                                    <includes>\n-                                        <include>bin/**</include>\n-                                        <include>conf/**</include>\n-                                        <include>logs/**</include>\n-                                        <include>lib/**</include>\n-                                        <include>seata-server-${revision}/**</include>\n-                                    </includes>\n-                                </fileset>\n-                            </filesets>\n+                            <archive>\n+                                <manifest>\n+                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNDY4MTM2Mw=="}, "originalCommit": {"oid": "6c78b80aa5496f1e55c5a3b494b6350bc046b311"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjE1NzM4OnYy", "diffSide": "RIGHT", "path": ".gitignore", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjowNzoxNVrOJWfWog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjowNzoxNVrOJWfWog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU2MjE0Ng==", "bodyText": "\u8fd9\u4e2a\u4e0d\u7528\u6ce8\u91ca\u5427\u3002\u65b0\u65e7\u7248\u672c\u7684\u5206\u652f\u5207\u6362\u6765\u5207\u6362\u53bb\uff0c\u65e7\u7248\u672c\u7684\u6253\u5305\u8fc7\uff0c\u5207\u6362\u5230\u65b0\u7248\u672c\u5206\u652f\u7684\u65f6\u5019\uff0c\u90a3\u4e9b\u65e7\u7248\u672c\u6253\u5305\u751f\u6210\u51fa\u6765\u7684\u6587\u4ef6\u4f1a\u63d0\u793a\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627562146", "createdAt": "2021-05-06T16:07:15Z", "author": {"login": "wangliang181230"}, "path": ".gitignore", "diffHunk": "@@ -26,8 +26,8 @@ dependency-reduced-pom.xml\n *.diff\n *.patch\n *.tmp\n-/distribution/bin/\n-/distribution/conf/\n+#/distribution/bin/\n+#/distribution/conf/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM0MzY0OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjowM1rOJWhNiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjowM1rOJWhNiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5MjU4NA==", "bodyText": "\u8fd9\u4e2a\u662f\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627592584", "createdAt": "2021-05-06T16:36:03Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -0,0 +1,230 @@\n+{\n+  \"groups\": [],\n+  \"properties\": [\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.application-id\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM0NDA0OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjowOFrOJWhNzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjowOFrOJWhNzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5MjY1Mw==", "bodyText": "\u8fd9\u4e2a\u662f\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627592653", "createdAt": "2021-05-06T16:36:08Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -0,0 +1,230 @@\n+{\n+  \"groups\": [],\n+  \"properties\": [\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The application id, default value if '${spring.application.name}'.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"defaultValue\": \"${spring.application.name:}\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.application-id\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.application-id'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.tx-service-group\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM0NDc5OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjoxOVrOJWhOOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjoxOVrOJWhOOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5Mjc2Mg==", "bodyText": "\u8fd9\u4e2a\u662f\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627592762", "createdAt": "2021-05-06T16:36:19Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -0,0 +1,230 @@\n+{\n+  \"groups\": [],\n+  \"properties\": [\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The application id, default value if '${spring.application.name}'.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"defaultValue\": \"${spring.application.name:}\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.application-id\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.application-id'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.tx-service-group\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The tx-service-group.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.tx-service-group\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.tx-service-group'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"seata.application-id\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM0NTM4OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjoyN1rOJWhOlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNjoyN1rOJWhOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5Mjg1Mw==", "bodyText": "\u8fd9\u4e2a\u662f\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627592853", "createdAt": "2021-05-06T16:36:27Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -0,0 +1,230 @@\n+{\n+  \"groups\": [],\n+  \"properties\": [\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The application id, default value if '${spring.application.name}'.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"defaultValue\": \"${spring.application.name:}\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.application-id\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.application-id'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.tx-service-group\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The tx-service-group.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.tx-service-group\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.tx-service-group'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"${spring.application.name:}\"\n+    },\n+    {\n+      \"name\": \"seata.data-source-proxy-mode\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM0ODY0OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNzoxNVrOJWhQqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNzoxNVrOJWhQqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5MzM4NA==", "bodyText": "\u8fd9\u4e2a\u662f\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627593384", "createdAt": "2021-05-06T16:37:15Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -0,0 +1,230 @@\n+{\n+  \"groups\": [],\n+  \"properties\": [\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The application id, default value if '${spring.application.name}'.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"defaultValue\": \"${spring.application.name:}\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.application-id\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.application-id'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.tx-service-group\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The tx-service-group.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.tx-service-group\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.tx-service-group'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"${spring.application.name:}\"\n+    },\n+    {\n+      \"name\": \"seata.data-source-proxy-mode\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"AT\"\n+    },\n+    {\n+      \"name\": \"seata.transport.heartbeat\",\n+      \"type\": \"java.lang.Boolean\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.TransportProperties\",\n+      \"defaultValue\": true\n+    },\n+    {\n+      \"name\": \"seata.transport.enable-client-batch-send-request\",\n+      \"type\": \"java.lang.Boolean\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.TransportProperties\",\n+      \"defaultValue\": true\n+    },\n+    {\n+      \"name\": \"seata.transport.shutdown.wait\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ShutdownProperties\",\n+      \"defaultValue\": 3\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.boss-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyBoss\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.worker-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyServerNIOWorker\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.server-executor-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyServerBizHandler\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.client-selector-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyClientSelector\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.client-selector-thread-size\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": 1\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.client-worker-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyClientWorkerThread\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.worker-thread-size\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"Default\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.boss-thread-size\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": 1\n+    },\n+    {\n+      \"name\": \"seata.registry.load-balance\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.registry.RegistryProperties\",\n+      \"defaultValue\": \"RandomLoadBalance\",\n+      \"deprecation\": {\n+        \"level\": \"error\",\n+        \"replacement\": \"seata.client.load-balance.type\",\n+        \"reason\": \"Please configure to 'seata.client.load-balance.type'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"seata.registry.load-balance-virtual-nodes\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.registry.RegistryProperties\",\n+      \"defaultValue\": 10,\n+      \"deprecation\": {\n+        \"level\": \"error\",\n+        \"replacement\": \"seata.client.load-balance.virtual-nodes\",\n+        \"reason\": \"Please configure to 'seata.client.load-balance.virtual-nodes'.\"\n+      }\n+    }\n+  ],\n+  \"hints\": [\n+    {\n+      \"name\": \"seata.config.type\",\n+      \"providers\": [\n+        {\n+          \"name\": \"handle-as\",\n+          \"parameters\": {\n+            \"target\": \"io.seata.config.ConfigType\"\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"seata.registry.type\",\n+      \"providers\": [\n+        {\n+          \"name\": \"handle-as\",\n+          \"parameters\": {\n+            \"target\": \"io.seata.discovery.registry.RegistryType\"\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"seata.data-source-proxy-mode\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM0OTU2OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNzoyNlrOJWhRNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjozNzoyNlrOJWhRNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5MzUyNA==", "bodyText": "\u8fd9\u4e2a\u662f\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627593524", "createdAt": "2021-05-06T16:37:26Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -0,0 +1,230 @@\n+{\n+  \"groups\": [],\n+  \"properties\": [\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The application id, default value if '${spring.application.name}'.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"defaultValue\": \"${spring.application.name:}\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.application-id\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.application-id'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"spring.cloud.alibaba.seata.tx-service-group\",\n+      \"type\": \"java.lang.String\",\n+      \"description\": \"The tx-service-group.\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n+      \"deprecation\": {\n+        \"level\": \"warning\",\n+        \"replacement\": \"seata.tx-service-group\",\n+        \"reason\": \"It may be removed in a future release, please configure to 'seata.tx-service-group'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"${spring.application.name:}\"\n+    },\n+    {\n+      \"name\": \"seata.data-source-proxy-mode\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"AT\"\n+    },\n+    {\n+      \"name\": \"seata.transport.heartbeat\",\n+      \"type\": \"java.lang.Boolean\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.TransportProperties\",\n+      \"defaultValue\": true\n+    },\n+    {\n+      \"name\": \"seata.transport.enable-client-batch-send-request\",\n+      \"type\": \"java.lang.Boolean\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.TransportProperties\",\n+      \"defaultValue\": true\n+    },\n+    {\n+      \"name\": \"seata.transport.shutdown.wait\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ShutdownProperties\",\n+      \"defaultValue\": 3\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.boss-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyBoss\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.worker-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyServerNIOWorker\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.server-executor-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyServerBizHandler\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.client-selector-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyClientSelector\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.client-selector-thread-size\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": 1\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.client-worker-thread-prefix\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"NettyClientWorkerThread\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.worker-thread-size\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": \"Default\"\n+    },\n+    {\n+      \"name\": \"seata.transport.thread-factory.boss-thread-size\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.ThreadFactoryProperties\",\n+      \"defaultValue\": 1\n+    },\n+    {\n+      \"name\": \"seata.registry.load-balance\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.registry.RegistryProperties\",\n+      \"defaultValue\": \"RandomLoadBalance\",\n+      \"deprecation\": {\n+        \"level\": \"error\",\n+        \"replacement\": \"seata.client.load-balance.type\",\n+        \"reason\": \"Please configure to 'seata.client.load-balance.type'.\"\n+      }\n+    },\n+    {\n+      \"name\": \"seata.registry.load-balance-virtual-nodes\",\n+      \"type\": \"java.lang.Integer\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.registry.RegistryProperties\",\n+      \"defaultValue\": 10,\n+      \"deprecation\": {\n+        \"level\": \"error\",\n+        \"replacement\": \"seata.client.load-balance.virtual-nodes\",\n+        \"reason\": \"Please configure to 'seata.client.load-balance.virtual-nodes'.\"\n+      }\n+    }\n+  ],\n+  \"hints\": [\n+    {\n+      \"name\": \"seata.config.type\",\n+      \"providers\": [\n+        {\n+          \"name\": \"handle-as\",\n+          \"parameters\": {\n+            \"target\": \"io.seata.config.ConfigType\"\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"seata.registry.type\",\n+      \"providers\": [\n+        {\n+          \"name\": \"handle-as\",\n+          \"parameters\": {\n+            \"target\": \"io.seata.discovery.registry.RegistryType\"\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"seata.data-source-proxy-mode\",\n+      \"values\": [\n+        {\n+          \"value\": \"AT\",\n+          \"description\": \"the default mode.\"\n+        },\n+        {\n+          \"value\": \"XA\"\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"seata.excludes-for-auto-proxying\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM1OTkzOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MDowOVrOJWhYEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MDowOVrOJWhYEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5NTI4Mw==", "bodyText": "\u89e3\u51b3\u51b2\u7a81\u65f6\uff0c\u5f04\u9519\u4e86\u5427\u3002\n\u8fd9\u4e2a\u539f\u56e0\u63cf\u8ff0\u7b80\u5316\u6389\u4e86\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627595283", "createdAt": "2021-05-06T16:40:09Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -187,7 +152,7 @@\n       \"deprecation\": {\n         \"level\": \"error\",\n         \"replacement\": \"seata.log.exception-rate\",\n-        \"reason\": \"Please configure to 'seata.log.exception-rate'.\"\n+        \"reason\": \"The location of this configuration has been changed to 'seata.log.exception-rate'.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM2MzA5OnYy", "diffSide": "LEFT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MDo0OVrOJWhZ9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MDo0OVrOJWhZ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5NTc2NA==", "bodyText": "\u4ee5\u4e0a4\u4e2a\u662f\u5c5e\u4e8eclient\u7684\uff0c\u65e0\u9700\u79fb\u9664\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627595764", "createdAt": "2021-05-06T16:40:49Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -1,41 +1,6 @@\n {\n   \"groups\": [],\n   \"properties\": [\n-    {\n-      \"name\": \"spring.cloud.alibaba.seata.application-id\",\n-      \"type\": \"java.lang.String\",\n-      \"description\": \"The application id, default value if '${spring.application.name}'.\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n-      \"defaultValue\": \"${spring.application.name:}\",\n-      \"deprecation\": {\n-        \"level\": \"warning\",\n-        \"replacement\": \"seata.application-id\",\n-        \"reason\": \"It may be removed in a future release, please configure to 'seata.application-id'.\"\n-      }\n-    },\n-    {\n-      \"name\": \"spring.cloud.alibaba.seata.tx-service-group\",\n-      \"type\": \"java.lang.String\",\n-      \"description\": \"The tx-service-group.\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration\",\n-      \"deprecation\": {\n-        \"level\": \"warning\",\n-        \"replacement\": \"seata.tx-service-group\",\n-        \"reason\": \"It may be removed in a future release, please configure to 'seata.tx-service-group'.\"\n-      }\n-    },\n-    {\n-      \"name\": \"seata.application-id\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n-      \"defaultValue\": \"${spring.application.name:}\"\n-    },\n-    {\n-      \"name\": \"seata.data-source-proxy-mode\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n-      \"defaultValue\": \"AT\"\n-    },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM2NTYwOnYy", "diffSide": "LEFT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MToyNFrOJWhboA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MToyNFrOJWhboA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5NjE5Mg==", "bodyText": "\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627596192", "createdAt": "2021-05-06T16:41:24Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -202,130 +167,20 @@\n       \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ServiceProperties\",\n       \"defaultValue\": false\n     },\n-    {\n-      \"name\": \"seata.transport.heartbeat\",\n-      \"type\": \"java.lang.Boolean\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.TransportProperties\",\n-      \"defaultValue\": true\n-    },\n-    {\n-      \"name\": \"seata.transport.enable-client-batch-send-request\",\n-      \"type\": \"java.lang.Boolean\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.TransportProperties\",\n-      \"defaultValue\": true\n-    },\n-    {\n-      \"name\": \"seata.transport.shutdown.wait\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ShutdownProperties\",\n-      \"defaultValue\": 3\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.boss-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyBoss\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.worker-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyServerNIOWorker\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.server-executor-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyServerBizHandler\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.client-selector-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyClientSelector\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.client-selector-thread-size\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": 1\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.client-worker-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyClientWorkerThread\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.worker-thread-size\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"Default\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.boss-thread-size\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": 1\n-    },\n-    {\n-      \"name\": \"seata.registry.load-balance\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM2NTg3OnYy", "diffSide": "LEFT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MToyOVrOJWhb1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MToyOVrOJWhb1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5NjI0NA==", "bodyText": "\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627596244", "createdAt": "2021-05-06T16:41:29Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -202,130 +167,20 @@\n       \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ServiceProperties\",\n       \"defaultValue\": false\n     },\n-    {\n-      \"name\": \"seata.transport.heartbeat\",\n-      \"type\": \"java.lang.Boolean\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.TransportProperties\",\n-      \"defaultValue\": true\n-    },\n-    {\n-      \"name\": \"seata.transport.enable-client-batch-send-request\",\n-      \"type\": \"java.lang.Boolean\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.TransportProperties\",\n-      \"defaultValue\": true\n-    },\n-    {\n-      \"name\": \"seata.transport.shutdown.wait\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ShutdownProperties\",\n-      \"defaultValue\": 3\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.boss-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyBoss\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.worker-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyServerNIOWorker\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.server-executor-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyServerBizHandler\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.client-selector-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyClientSelector\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.client-selector-thread-size\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": 1\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.client-worker-thread-prefix\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"NettyClientWorkerThread\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.worker-thread-size\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": \"Default\"\n-    },\n-    {\n-      \"name\": \"seata.transport.thread-factory.boss-thread-size\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ThreadFactoryProperties\",\n-      \"defaultValue\": 1\n-    },\n-    {\n-      \"name\": \"seata.registry.load-balance\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.registry.RegistryProperties\",\n-      \"defaultValue\": \"RandomLoadBalance\",\n-      \"deprecation\": {\n-        \"level\": \"error\",\n-        \"replacement\": \"seata.client.load-balance.type\",\n-        \"reason\": \"Please configure to 'seata.client.load-balance.type'.\"\n-      }\n-    },\n-    {\n-      \"name\": \"seata.registry.load-balance-virtual-nodes\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM2NzUyOnYy", "diffSide": "LEFT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MTo0OFrOJWhcvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MTo0OFrOJWhcvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5NjQ3OQ==", "bodyText": "\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627596479", "createdAt": "2021-05-06T16:41:48Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -344,29 +199,6 @@\n         }\n       ]\n     },\n-    {\n-      \"name\": \"seata.data-source-proxy-mode\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 189}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjM2ODAxOnYy", "diffSide": "LEFT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MTo1MlrOJWhdCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo0MTo1MlrOJWhdCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU5NjU1Mw==", "bodyText": "\u5c5e\u4e8eclient\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627596553", "createdAt": "2021-05-06T16:41:52Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -344,29 +199,6 @@\n         }\n       ]\n     },\n-    {\n-      \"name\": \"seata.data-source-proxy-mode\",\n-      \"values\": [\n-        {\n-          \"value\": \"AT\",\n-          \"description\": \"the default mode.\"\n-        },\n-        {\n-          \"value\": \"XA\"\n-        }\n-      ]\n-    },\n-    {\n-      \"name\": \"seata.excludes-for-auto-proxying\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NjQxMTg4OnYy", "diffSide": "LEFT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/SeataCorePropertiesAutoConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo1MjoxN1rOJWh5bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQxNjo1MjoxN1rOJWh5bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzYwMzgyMw==", "bodyText": "Before\u79fb\u9664\u4e86\u3002\n\u90a3\u4e48\u9700\u8981\u5728SeataAutoConfiguration\u548cSeataDataSourceAutoConfiguration\u4e2d\u90fd\u8981\u6dfb\u52a0\n@AutoConfigureAfter({SeataCorePropertiesAutoConfiguration.class, SeataClientPropertiesAutoConfiguration.class})", "url": "https://github.com/seata/seata/pull/3009#discussion_r627603823", "createdAt": "2021-05-06T16:52:17Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/java/io/seata/spring/boot/autoconfigure/SeataCorePropertiesAutoConfiguration.java", "diffHunk": "@@ -44,72 +36,54 @@\n import io.seata.spring.boot.autoconfigure.properties.registry.RegistryRedisProperties;\n import io.seata.spring.boot.autoconfigure.properties.registry.RegistrySofaProperties;\n import io.seata.spring.boot.autoconfigure.properties.registry.RegistryZooKeeperProperties;\n-import io.seata.spring.boot.autoconfigure.properties.registry.LoadBalanceProperties;\n-import org.springframework.boot.autoconfigure.AutoConfigureBefore;\n+import io.seata.spring.boot.autoconfigure.provider.SpringApplicationContextProvider;\n+\n import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n \n import static io.seata.common.Constants.BEAN_NAME_SPRING_APPLICATION_CONTEXT_PROVIDER;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.CLIENT_RM_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.CLIENT_TM_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.COMPRESS_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_APOLLO_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_CONSUL_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_CUSTOM_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_ETCD3_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.PROPERTY_BEAN_MAP;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SEATA_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_FILE_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_NACOS_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_CONSUL_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_ZK_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.LOCK_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.LOG_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.PROPERTY_BEAN_MAP;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_APOLLO_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_ETCD3_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.CONFIG_CUSTOM_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_CONSUL_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_CUSTOM_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_ETCD3_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_EUREKA_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_NACOS_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_REDIS_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_SOFA_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_ZK_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.SEATA_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.SERVICE_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.SHUTDOWN_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.REGISTRY_CUSTOM_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.THREAD_FACTORY_PREFIX;\n import static io.seata.spring.boot.autoconfigure.StarterConstants.TRANSPORT_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.UNDO_PREFIX;\n-import static io.seata.spring.boot.autoconfigure.StarterConstants.LOAD_BALANCE_PREFIX;\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SHUTDOWN_PREFIX;\n \n /**\n- * The type Seata properties auto configuration\n- *\n  * @author xingfudeshi@gmail.com\n  */\n @ConditionalOnProperty(prefix = SEATA_PREFIX, name = \"enabled\", havingValue = \"true\", matchIfMissing = true)\n @ComponentScan(basePackages = \"io.seata.spring.boot.autoconfigure.properties\")\n-@AutoConfigureBefore({SeataAutoConfiguration.class, SeataDataSourceAutoConfiguration.class})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3ODEwMTIyOnYy", "diffSide": "RIGHT", "path": "server/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wN1QwMToyNzoxM1rOJWxyYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wN1QwMToyNzoxM1rOJWxyYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzg2NDE2Mw==", "bodyText": "\u5347\u7ea7\u52302.3.10.RELEASE\u5427\uff0c\u4fee\u590d\u8fc7\u6ee1\u591aBUG\u7684\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627864163", "createdAt": "2021-05-07T01:27:13Z", "author": {"login": "wangliang181230"}, "path": "server/pom.xml", "diffHunk": "@@ -28,11 +28,36 @@\n     <name>seata-server ${project.version}</name>\n \n     <properties>\n+        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3ODIwMDAyOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/test/java/io/seata/spring/boot/autoconfigure/ClientPropertiesTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wN1QwMjoxOTowMVrOJWyrCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wN1QwMjoxOTowMVrOJWyrCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzg3ODY2NQ==", "bodyText": "LogProperties\u662f\u901a\u7528\u7684\u3002\u76f8\u5173\u4ee3\u7801\u8bf7\u8f6c\u79fb\u5230core\u4e2d\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r627878665", "createdAt": "2021-05-07T02:19:01Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/test/java/io/seata/spring/boot/autoconfigure/ClientPropertiesTest.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure;\n+\n+import java.util.Map;\n+\n+import io.seata.spring.boot.autoconfigure.properties.client.LockProperties;\n+import io.seata.spring.boot.autoconfigure.properties.client.LogProperties;\n+import io.seata.spring.boot.autoconfigure.properties.client.RmProperties;\n+import io.seata.spring.boot.autoconfigure.properties.client.ServiceProperties;\n+import io.seata.spring.boot.autoconfigure.properties.client.TmProperties;\n+import io.seata.spring.boot.autoconfigure.properties.client.UndoProperties;\n+import io.seata.spring.boot.autoconfigure.properties.client.LoadBalanceProperties;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n+\n+import static io.seata.common.DefaultValues.DEFAULT_GLOBAL_TRANSACTION_TIMEOUT;\n+import static io.seata.common.DefaultValues.DEFAULT_TM_COMMIT_RETRY_COUNT;\n+import static io.seata.common.DefaultValues.DEFAULT_TM_ROLLBACK_RETRY_COUNT;\n+import static io.seata.common.DefaultValues.DEFAULT_TRANSACTION_UNDO_LOG_TABLE;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * @author xingfudeshi@gmail.com\n+ */\n+public class ClientPropertiesTest {\n+    private static AnnotationConfigApplicationContext context;\n+\n+    @BeforeAll\n+    public static void initContext() {\n+        context = new AnnotationConfigApplicationContext(\"io.seata.spring.boot.autoconfigure.properties\");\n+    }\n+\n+    @Test\n+    public void testLockProperties() {\n+        assertEquals(10, context.getBean(LockProperties.class).getRetryInterval());\n+        assertEquals(30, context.getBean(LockProperties.class).getRetryTimes());\n+        assertTrue(context.getBean(LockProperties.class).isRetryPolicyBranchRollbackOnConflict());\n+    }\n+\n+    @Test\n+    public void testLogProperties() {\n+        assertEquals(100, context.getBean(LogProperties.class).getExceptionRate());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3ODI0MDcwOnYy", "diffSide": "LEFT", "path": "distribution/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wN1QwMjo0MDozOVrOJWzB2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wN1QwMjo0MDozOVrOJWzB2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzg4NDUwNA==", "bodyText": "\u8fd9\u4e2a\u6a21\u5757\u4e0d\u9700\u8981deploy\u5427\uff1f\u4e3a\u4ec0\u4e48\u8981\u628a\u8fd9\u4e2askip\u79fb\u9664\u6389\uff1f", "url": "https://github.com/seata/seata/pull/3009#discussion_r627884504", "createdAt": "2021-05-07T02:40:39Z", "author": {"login": "wangliang181230"}, "path": "distribution/pom.xml", "diffHunk": "@@ -101,16 +70,4 @@\n             </build>\n         </profile>\n     </profiles>\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-deploy-plugin</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a09f31e01d26ff5a36dee520b1dda4ca5e1b6c4f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk5ODA0MDcwOnYy", "diffSide": "RIGHT", "path": "distribution/bin/seata-server.bat", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xMlQwNzo1NzoxMFrOJZlphQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xMlQwNzo1NzoxMFrOJZlphQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDgxMTAxMw==", "bodyText": "\u52a0\u4e00\u884cchcp 65001\u5427\u3002\u8868\u793a\u7f16\u7801\u8f6c\u4e3aUTF-8\uff0c\u907f\u514d\u4e2d\u6587\u4e71\u7801\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r630811013", "createdAt": "2021-05-12T07:57:10Z", "author": {"login": "wangliang181230"}, "path": "distribution/bin/seata-server.bat", "diffHunk": "@@ -0,0 +1,120 @@\n+@REM ----------------------------------------------------------------------------\n+@REM  Copyright 2001-2006 The Apache Software Foundation.\n+@REM\n+@REM  Licensed under the Apache License, Version 2.0 (the \"License\");\n+@REM  you may not use this file except in compliance with the License.\n+@REM  You may obtain a copy of the License at\n+@REM\n+@REM       http://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM  Unless required by applicable law or agreed to in writing, software\n+@REM  distributed under the License is distributed on an \"AS IS\" BASIS,\n+@REM  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+@REM  See the License for the specific language governing permissions and\n+@REM  limitations under the License.\n+@REM ----------------------------------------------------------------------------\n+@REM\n+@REM   Copyright (c) 2001-2006 The Apache Software Foundation.  All rights\n+@REM   reserved.\n+\n+@echo off\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dbb13d74f7c5866d4fd32c29dcdc64f30116b40"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk5ODkyNzUwOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xMlQxMToxOTo1MVrOJZuLJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xMlQxMToxOTo1MVrOJZuLJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMDk1MDY5Mw==", "bodyText": "Where s the enableCheckAuth and retryDeadThreshold?", "url": "https://github.com/seata/seata/pull/3009#discussion_r630950693", "createdAt": "2021-05-12T11:19:51Z", "author": {"login": "l81893521"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-server/src/main/java/io/seata/spring/boot/autoconfigure/properties/server/ServerProperties.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.spring.boot.autoconfigure.properties.server;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import java.time.Duration;\n+\n+import static io.seata.spring.boot.autoconfigure.StarterConstants.SERVER_PREFIX;\n+\n+/**\n+ * @author spilledyear@outlook.com\n+ */\n+@Component\n+@ConfigurationProperties(prefix = SERVER_PREFIX)\n+public class ServerProperties {\n+    private Duration maxCommitRetryTimeout = Duration.ofMillis(-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dbb13d74f7c5866d4fd32c29dcdc64f30116b40"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAwMzg5NDE3OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xM1QxMDo0NjoxMlrOJadXIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xOVQyMDoxNzoxN1rOJeHNyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTcyMzgwOQ==", "bodyText": "Is necessary add more properties of SeataProperties?", "url": "https://github.com/seata/seata/pull/3009#discussion_r631723809", "createdAt": "2021-05-13T10:46:12Z", "author": {"login": "l81893521"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -1,6 +1,18 @@\n {\n   \"groups\": [],\n   \"properties\": [\n+    {\n+      \"name\": \"seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"${spring.application.name:}\"\n+    },\n+    {\n+      \"name\": \"seata.data-source-proxy-mode\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"AT\"\n+    },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a783bb41fd64fd080512ab65bc3cea112aa42e6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTU1NTI3NQ==", "bodyText": "\u5176\u4ed6\u5c5e\u6027\u4f1a\u901a\u8fc7<artifactId>spring-boot-configuration-processor</artifactId>\u81ea\u52a8\u751f\u6210\u3002\n\u6dfb\u52a0\u8fd9\u4e2a\u662f\u56e0\u4e3a\u9ed8\u8ba4\u503c\u4f7f\u7528\u5e38\u91cf\u65f6\uff0c <artifactId>spring-boot-configuration-processor</artifactId>\u89e3\u6790\u4e0d\u4e86\u3002\n\u4e0d\u4f7f\u7528\u5e38\u91cf\u65f6\uff0c\u8fde\u8fd9\u4e2a\u5c5e\u6027\u90fd\u4e0d\u7528\u6dfb\u52a0\u5230additional-xxxxxx.json\u4e2d\u4e86\u3002", "url": "https://github.com/seata/seata/pull/3009#discussion_r635555275", "createdAt": "2021-05-19T20:17:17Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -1,6 +1,18 @@\n {\n   \"groups\": [],\n   \"properties\": [\n+    {\n+      \"name\": \"seata.application-id\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"${spring.application.name:}\"\n+    },\n+    {\n+      \"name\": \"seata.data-source-proxy-mode\",\n+      \"type\": \"java.lang.String\",\n+      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n+      \"defaultValue\": \"AT\"\n+    },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTcyMzgwOQ=="}, "originalCommit": {"oid": "3a783bb41fd64fd080512ab65bc3cea112aa42e6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAwMzkxMTIyOnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xM1QxMDo1MTo0MFrOJadhVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xOVQyMDoyNzoxNlrOJeHk-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTcyNjQyMA==", "bodyText": "Look like lack of tableMetaCheckerInterval", "url": "https://github.com/seata/seata/pull/3009#discussion_r631726420", "createdAt": "2021-05-13T10:51:40Z", "author": {"login": "l81893521"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -24,18 +36,7 @@\n         \"reason\": \"It may be removed in a future release, please configure to 'seata.tx-service-group'.\"\n       }\n     },\n-    {\n-      \"name\": \"seata.application-id\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n-      \"defaultValue\": \"${spring.application.name:}\"\n-    },\n-    {\n-      \"name\": \"seata.data-source-proxy-mode\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n-      \"defaultValue\": \"AT\"\n-    },\n+\n     {\n       \"name\": \"seata.client.rm.async-commit-buffer-limit\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a783bb41fd64fd080512ab65bc3cea112aa42e6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNTU2MTIxMQ==", "bodyText": "+1", "url": "https://github.com/seata/seata/pull/3009#discussion_r635561211", "createdAt": "2021-05-19T20:27:16Z", "author": {"login": "wangliang181230"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -24,18 +36,7 @@\n         \"reason\": \"It may be removed in a future release, please configure to 'seata.tx-service-group'.\"\n       }\n     },\n-    {\n-      \"name\": \"seata.application-id\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n-      \"defaultValue\": \"${spring.application.name:}\"\n-    },\n-    {\n-      \"name\": \"seata.data-source-proxy-mode\",\n-      \"type\": \"java.lang.String\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.SeataProperties\",\n-      \"defaultValue\": \"AT\"\n-    },\n+\n     {\n       \"name\": \"seata.client.rm.async-commit-buffer-limit\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTcyNjQyMA=="}, "originalCommit": {"oid": "3a783bb41fd64fd080512ab65bc3cea112aa42e6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAwMzk2NjM0OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xM1QxMTowOTo0NVrOJaeC-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xM1QxMTowOTo0NVrOJaeC-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTczNTAzNA==", "bodyText": "And please check ServiceProperties.", "url": "https://github.com/seata/seata/pull/3009#discussion_r631735034", "createdAt": "2021-05-13T11:09:45Z", "author": {"login": "l81893521"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-client/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -192,93 +193,23 @@\n       \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.UndoCompressProperties\",\n       \"defaultValue\": \"64k\"\n     },\n-    {\n-      \"name\": \"seata.client.log.exception-rate\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.LogProperties\",\n-      \"deprecation\": {\n-        \"level\": \"error\",\n-        \"replacement\": \"seata.log.exception-rate\",\n-        \"reason\": \"Please configure to 'seata.log.exception-rate'.\"\n-      }\n-    },\n-    {\n-      \"name\": \"seata.log.exception-rate\",\n-      \"type\": \"java.lang.Integer\",\n-      \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.LogProperties\",\n-      \"defaultValue\": 100\n-    },\n     {\n       \"name\": \"seata.service.disable-global-transaction\",\n       \"type\": \"java.lang.Boolean\",\n       \"sourceType\": \"io.seata.spring.boot.autoconfigure.properties.client.ServiceProperties\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a783bb41fd64fd080512ab65bc3cea112aa42e6"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDAwMzk3NzQ5OnYy", "diffSide": "RIGHT", "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xM1QxMToxMzozOFrOJaeKBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0xM1QxMToxMzozOFrOJaeKBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTczNjgzNg==", "bodyText": "And check this file make sure each properties is right.", "url": "https://github.com/seata/seata/pull/3009#discussion_r631736836", "createdAt": "2021-05-13T11:13:38Z", "author": {"login": "l81893521"}, "path": "seata-spring-autoconfigure/seata-spring-autoconfigure-core/src/main/resources/META-INF/additional-spring-configuration-metadata.json", "diffHunk": "@@ -0,0 +1,166 @@\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a783bb41fd64fd080512ab65bc3cea112aa42e6"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1400, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}