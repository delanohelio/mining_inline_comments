{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTMyMTgx", "number": 2551, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNDoyODozM1rODzidUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNTozOTowMFrOEmYIrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MzY4NTMwOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/impl/DefaultStateMachineConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNDoyODozM1rOGIConQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjo1ODozOVrOGKn-ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4NDk1Nw==", "bodyText": "\u662f\u4e0d\u662f\u56e0\u4e3a\u589e\u52a0\u4e86autoconfiguration\u6240\u4ee5\u8fd9\u91cc\u589e\u52a0\u4e86\u89e3\u6790\u901a\u914d\u7b26\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u539f\u6765\u7684demo\u662f\u7528\u7684spring xml\u914d\u7f6e\u7684\uff0c\u9ed8\u8ba4\u662f\u652f\u6301\u901a\u914d\u7b26\u7684\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r411084957", "createdAt": "2020-04-20T04:28:33Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/impl/DefaultStateMachineConfig.java", "diffHunk": "@@ -130,15 +132,18 @@ protected void init() throws Exception {\n             stateMachineRepository.setSeqGenerator(seqGenerator);\n             stateMachineRepository.setStateLangStore(stateLangStore);\n             stateMachineRepository.setDefaultTenantId(defaultTenantId);\n-            if (resources != null) {\n-                try {\n-                    stateMachineRepository.registryByResources(resources, defaultTenantId);\n-                } catch (IOException e) {\n-                    LOGGER.error(\"Load State Language Resources failed.\", e);\n-                }\n-            }\n             this.stateMachineRepository = stateMachineRepository;\n         }\n+        if (this.autoRegisterResources && this.resources != null && this.resources.length > 0) {\n+            try {\n+                Resource[] resources = ResourceUtil.getResources(this.resources);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk5NzMyMw==", "bodyText": "\u662f\u7684\uff0cAutoConfiguration\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u89e3\u6790\u901a\u914d\u7b26\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r411997323", "createdAt": "2020-04-21T08:49:47Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/impl/DefaultStateMachineConfig.java", "diffHunk": "@@ -130,15 +132,18 @@ protected void init() throws Exception {\n             stateMachineRepository.setSeqGenerator(seqGenerator);\n             stateMachineRepository.setStateLangStore(stateLangStore);\n             stateMachineRepository.setDefaultTenantId(defaultTenantId);\n-            if (resources != null) {\n-                try {\n-                    stateMachineRepository.registryByResources(resources, defaultTenantId);\n-                } catch (IOException e) {\n-                    LOGGER.error(\"Load State Language Resources failed.\", e);\n-                }\n-            }\n             this.stateMachineRepository = stateMachineRepository;\n         }\n+        if (this.autoRegisterResources && this.resources != null && this.resources.length > 0) {\n+            try {\n+                Resource[] resources = ResourceUtil.getResources(this.resources);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4NDk1Nw=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc5Mzg5Mg==", "bodyText": "OK", "url": "https://github.com/seata/seata/pull/2551#discussion_r413793892", "createdAt": "2020-04-23T12:58:39Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/impl/DefaultStateMachineConfig.java", "diffHunk": "@@ -130,15 +132,18 @@ protected void init() throws Exception {\n             stateMachineRepository.setSeqGenerator(seqGenerator);\n             stateMachineRepository.setStateLangStore(stateLangStore);\n             stateMachineRepository.setDefaultTenantId(defaultTenantId);\n-            if (resources != null) {\n-                try {\n-                    stateMachineRepository.registryByResources(resources, defaultTenantId);\n-                } catch (IOException e) {\n-                    LOGGER.error(\"Load State Language Resources failed.\", e);\n-                }\n-            }\n             this.stateMachineRepository = stateMachineRepository;\n         }\n+        if (this.autoRegisterResources && this.resources != null && this.resources.length > 0) {\n+            try {\n+                Resource[] resources = ResourceUtil.getResources(this.resources);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4NDk1Nw=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MzY4ODE5OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/pcext/handlers/ServiceTaskStateHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNDoyOTo1M1rOGICqEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOTozOTo0MFrOGI8iCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4NTMzMQ==", "bodyText": "\u8fd9\u91cc\u628a\u5f02\u5e38\u8bbe\u7f6e\u5230StateMachineInstance\u91cc\uff0c\u4f3c\u4e4e\u548c\u672c\u6b21pr\u63cf\u8ff0\u76843\u4e2a\u4f18\u5316\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u662f\u4e0d\u662f\u8981\u4fee\u590d\u53e6\u4e00\u4e2a\u95ee\u9898\uff1f", "url": "https://github.com/seata/seata/pull/2551#discussion_r411085331", "createdAt": "2020-04-20T04:29:53Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/pcext/handlers/ServiceTaskStateHandler.java", "diffHunk": "@@ -181,6 +182,11 @@ public void process(ProcessContext context) throws EngineExecutionException {\n \n             ((HierarchicalProcessContext) context).setVariableLocally(DomainConstants.VAR_NAME_CURRENT_EXCEPTION, e);\n \n+            StateMachineInstance stateMachineInstance = ProcessUtil.getStateMachineInstanceFromProcessContext(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk5ODQ0OQ==", "bodyText": "\u8fd9\u4e2a\u4e3b\u8981\u662f\u4e3a\u4e86\u5728saga\u4e8b\u52a1\u540c\u6b65\u65b9\u5f0f\u6267\u884c\u5f02\u5e38\u540e\uff0c\u80fd\u901a\u8fc7stateMachineInst.getException()\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5f02\u5e38\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r411998449", "createdAt": "2020-04-21T08:51:05Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/pcext/handlers/ServiceTaskStateHandler.java", "diffHunk": "@@ -181,6 +182,11 @@ public void process(ProcessContext context) throws EngineExecutionException {\n \n             ((HierarchicalProcessContext) context).setVariableLocally(DomainConstants.VAR_NAME_CURRENT_EXCEPTION, e);\n \n+            StateMachineInstance stateMachineInstance = ProcessUtil.getStateMachineInstanceFromProcessContext(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4NTMzMQ=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAzMzU0NQ==", "bodyText": "\u6211\u4e0d\u77e5\u9053\u539f\u6765saga\u6709\u6ca1\u6709\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5230\u5f02\u5e38\u4fe1\u606f\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r412033545", "createdAt": "2020-04-21T09:39:40Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine/src/main/java/io/seata/saga/engine/pcext/handlers/ServiceTaskStateHandler.java", "diffHunk": "@@ -181,6 +182,11 @@ public void process(ProcessContext context) throws EngineExecutionException {\n \n             ((HierarchicalProcessContext) context).setVariableLocally(DomainConstants.VAR_NAME_CURRENT_EXCEPTION, e);\n \n+            StateMachineInstance stateMachineInstance = ProcessUtil.getStateMachineInstanceFromProcessContext(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4NTMzMQ=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MzcwNjk2OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNDozOToxNFrOGIC0DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTozMTozNFrOGLPDgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4Nzg4NA==", "bodyText": "\u8fd9\u91cc\u628a\u5f02\u5e38\u53bb\u6389\uff0c\u4f3c\u4e4e\u548c\u672c\u6b21pr\u63cf\u8ff0\u76843\u4e2a\u4f18\u5316\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u662f\u4e0d\u662f\u8981\u4fee\u590d\u53e6\u4e00\u4e2a\u95ee\u9898\uff1f", "url": "https://github.com/seata/seata/pull/2551#discussion_r411087884", "createdAt": "2020-04-20T04:39:14Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -155,6 +155,11 @@ public void recordStateMachineFinished(StateMachineInstance machineInstance, Pro\n                 endParams.remove(DomainConstants.VAR_NAME_GLOBAL_TX);\n             }\n \n+            // if success, clear exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwNzMwMQ==", "bodyText": "\u548cServiceTaskStateHandler.java\u8c03\u6574\u7684\u76ee\u7684\u662f\u4e00\u6837\u7684\u3002\n\u8fd9\u4e2a\u4e3b\u8981\u662f\u4e3a\u4e86\u5728saga\u4e8b\u52a1\u540c\u6b65\u65b9\u5f0f\u6267\u884c\u5f02\u5e38\u540e\uff0c\u80fd\u901a\u8fc7stateMachineInst.getException()\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5f02\u5e38\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r412707301", "createdAt": "2020-04-22T06:34:20Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -155,6 +155,11 @@ public void recordStateMachineFinished(StateMachineInstance machineInstance, Pro\n                 endParams.remove(DomainConstants.VAR_NAME_GLOBAL_TX);\n             }\n \n+            // if success, clear exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4Nzg4NA=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc1MjY2Mg==", "bodyText": "\u4f46\u662f\uff0c\u5e76\u4e0d\u662f\u8bf4\uff0c\u5f02\u5e38\u4e86\uff0csaga\u5168\u5c40\u4e8b\u52a1\u5c31\u5f02\u5e38\uff0c\u53ef\u4ee5\u901a\u8fc7\u72b6\u6001\u673a\u5bf9\u670d\u52a1\u7684\u7f16\u6392\uff0c\u5c06\u5f02\u5e38\u5904\u7406\u6389\uff0c\u6700\u7ec8\u8ba9\u5168\u5c40\u4e8b\u52a1\u6210\u529f\u3002\u8fd9\u65f6\u5019\uff0c\u5c31\u4e0d\u9700\u8981\u8fd9\u4e2a\u5f02\u5e38\u7684\u4fe1\u606f\u4e86\u3002\u6240\u4ee5\u5168\u5c40\u4e8b\u52a1\u6210\u529f\u65f6\uff0c\u9700\u8981\u6e05\u7406\u6389\u5f02\u5e38\u4fe1\u606f\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r412752662", "createdAt": "2020-04-22T07:49:44Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -155,6 +155,11 @@ public void recordStateMachineFinished(StateMachineInstance machineInstance, Pro\n                 endParams.remove(DomainConstants.VAR_NAME_GLOBAL_TX);\n             }\n \n+            // if success, clear exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4Nzg4NA=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMTMwNA==", "bodyText": "\u5bf9\uff0c\u4f60\u8fd9\u4e2a\u7406\u89e3\u662f\u975e\u5e38\u6b63\u786e\u7684\u3002\u6240\u4ee5\u5728\u6846\u67b6\u8bbe\u8ba1\u65f6\u4e5f\u8003\u8651\u4e86\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f53\u4e00\u4e2a\u670d\u52a1\u6267\u884c\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u4f46\u662f\u6709Catch\u628a\u5f02\u5e38\u5904\u7406\u6389\u4e86\uff0c\u8fd9\u65f6\u5c31\u4f1a\u6e05\u9664\u8fd9\u4e2a\u5f02\u5e38\uff0c\u4f60\u53ef\u4ee5\u770b\u4e00\u4e0b\u6e90\u4ee3\u7801ServiceTaskStateHandlerInterceptor\u3002\u6240\u4ee5\u8fd9\u4e5f\u662f\u5728\u4e0a\u9762\u90a3\u91ccServiceTaskStateHandler\u91cc\u6ca1\u6709\u53bbsetExeception\uff0c\u8fd8\u6709\u4e00\u4e2a\u539f\u56e0\u662f\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u5f02\u5e38\uff0c\u6bd4\u5982\u8bf4\u4e00\u4e2a\u6b63\u5411\u670d\u52a1\u5f02\u5e38\u4e86\uff0c\u7136\u540e\u8fdb\u884c\u8865\u507f\uff0c\u8865\u507f\u670d\u52a1\u4e5f\u5f02\u5e38\uff0c\u8fd9\u65f6\u5c31\u6709\u4e24\u4e2a\u5f02\u5e38\uff0cstateMachineInstance\u5728\u7ed3\u675f\u65f6\u4f1aset\u6700\u540e\u4e00\u4e2a\u5f02\u5e38\u5230statemachineInstance\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0bEngineUtils\u7684\u4e24\u4e2a\u65b9\u6cd5\u3002\u6240\u4ee5\u6211\u7406\u89e3\u8fd9\u4e24setException\u4e0d\u9700\u7684\u3002\u5982\u679c\u60f3\u83b7\u53d6\u670d\u52a1\u6267\u884c\u7684\u5f02\u5e38\uff0c\u53ef\u4ee5\u904d\u5386stateInstance\u5217\u8868,\u4ecestateInstance\u91cc\u53d6", "url": "https://github.com/seata/seata/pull/2551#discussion_r414421304", "createdAt": "2020-04-24T09:11:59Z", "author": {"login": "long187"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -155,6 +155,11 @@ public void recordStateMachineFinished(StateMachineInstance machineInstance, Pro\n                 endParams.remove(DomainConstants.VAR_NAME_GLOBAL_TX);\n             }\n \n+            // if success, clear exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4Nzg4NA=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzNDE3Ng==", "bodyText": "\u90a3\u5c31\u662fCompensationTriggerStateHandler\u91cc\u7684\u7b2c63\u884c\u4ee3\u7801\uff0c\u628acontext\u91cc\u7684\u5f53\u524d\u5f02\u5e38\u7ed9\u6e05\u9664\u6389\u4e86\u3002\n\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u65f6\u5019\u8fd8\u6ca1\u5f00\u59cb\u6267\u884c\u8865\u507f\uff0c\u4e5f\u4e0d\u77e5\u9053\u8865\u507f\u662f\u5426\u4f1a\u6210\u529f\u6216\u5931\u8d25\u3002\n\u6700\u7ec8\u5bfc\u81f4\u8865\u507f\u6210\u529f\u4e86\uff0c\u5f02\u5e38\u4fe1\u606f\u5374\u4e22\u5931\u4e86\u3002\n\u90a3\u65f6\u5019\uff0c\u4e3b\u8981\u6211\u8fd8\u4e0d\u662f\u5f88\u7406\u89e3\u8fd9\u4e00\u884c\u4ee3\u7801\u4e3a\u4ec0\u4e48\u8981\u6e05\u9664\u6389\u5f02\u5e38\u4fe1\u606f\u3002\u6240\u4ee5\u505a\u4e86\u4e24\u4e2asetException\u6765\u4fdd\u8bc1\u5f02\u5e38\u4fe1\u606f\u80fd\u591f\u5199\u5230stateMachineInstance\u4e2d\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r414434176", "createdAt": "2020-04-24T09:31:34Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -155,6 +155,11 @@ public void recordStateMachineFinished(StateMachineInstance machineInstance, Pro\n                 endParams.remove(DomainConstants.VAR_NAME_GLOBAL_TX);\n             }\n \n+            // if success, clear exception", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA4Nzg4NA=="}, "originalCommit": {"oid": "783d3fbc9c6e15ec01188a0f498010c4f57ecea4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1OTgwOTA4OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-processctrl/src/main/java/io/seata/saga/proctrl/ProcessUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODozOToyNlrOGI51yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjozMzoxNVrOGJln1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk4OTQ1MQ==", "bodyText": "\u4f7f\u7528StateHandlerInterceptor\u6269\u5c55\uff0c\u89c1pr: #2584", "url": "https://github.com/seata/seata/pull/2551#discussion_r411989451", "createdAt": "2020-04-21T08:39:26Z", "author": {"login": "long187"}, "path": "saga/seata-saga-processctrl/src/main/java/io/seata/saga/proctrl/ProcessUtil.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.proctrl;\n+\n+import io.seata.common.util.StringUtils;\n+import io.seata.core.context.RootContext;\n+import io.seata.core.model.BranchType;\n+import io.seata.saga.statelang.domain.DomainConstants;\n+import io.seata.saga.statelang.domain.StateMachineInstance;\n+import io.seata.tm.api.GlobalTransaction;\n+import java.util.Map;\n+\n+/**\n+ * Process Util\n+ *\n+ * @author wang.liang\n+ */\n+public class ProcessUtil {\n+\n+    private ProcessUtil() {\n+    }\n+\n+    /**\n+     * Get state machine instance from process context.\n+     * @param context\n+     * @return the stateMachineInstance\n+     */\n+    public static StateMachineInstance getStateMachineInstanceFromProcessContext(ProcessContext context) {\n+        return (StateMachineInstance) context.getVariable(DomainConstants.VAR_NAME_STATEMACHINE_INST);\n+    }\n+\n+    /**\n+     * Gets xid from saga process context.\n+     *\n+     * @return the xid\n+     */\n+    public static String getXidFromProcessContext(ProcessContext context) {\n+        String xid = null;\n+        Map<String, Object> contextVariable = (Map<String, Object>) context.getVariable(DomainConstants.VAR_NAME_STATEMACHINE_CONTEXT);\n+        if (contextVariable != null && contextVariable.containsKey(DomainConstants.VAR_NAME_GLOBAL_TX)) {\n+            GlobalTransaction globalTransaction = (GlobalTransaction) contextVariable.get(DomainConstants.VAR_NAME_GLOBAL_TX);\n+            xid = globalTransaction.getXid();\n+        } else {\n+            StateMachineInstance smi = (StateMachineInstance) context.getVariable(DomainConstants.VAR_NAME_STATEMACHINE_INST);\n+            if (smi != null) {\n+                xid = smi.getId();\n+            }\n+        }\n+        return xid;\n+    }\n+\n+    /**\n+     * Run in the saga branch.\n+     *\n+     * @param context\n+     * @param runnable\n+     */\n+    public static void runInSagaBranch(ProcessContext context, Runnable runnable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebb53f32a97c6eb6718e7e61b18d45331e115327"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwNjc3NQ==", "bodyText": "\u6536\u5230\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r412706775", "createdAt": "2020-04-22T06:33:15Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-processctrl/src/main/java/io/seata/saga/proctrl/ProcessUtil.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.proctrl;\n+\n+import io.seata.common.util.StringUtils;\n+import io.seata.core.context.RootContext;\n+import io.seata.core.model.BranchType;\n+import io.seata.saga.statelang.domain.DomainConstants;\n+import io.seata.saga.statelang.domain.StateMachineInstance;\n+import io.seata.tm.api.GlobalTransaction;\n+import java.util.Map;\n+\n+/**\n+ * Process Util\n+ *\n+ * @author wang.liang\n+ */\n+public class ProcessUtil {\n+\n+    private ProcessUtil() {\n+    }\n+\n+    /**\n+     * Get state machine instance from process context.\n+     * @param context\n+     * @return the stateMachineInstance\n+     */\n+    public static StateMachineInstance getStateMachineInstanceFromProcessContext(ProcessContext context) {\n+        return (StateMachineInstance) context.getVariable(DomainConstants.VAR_NAME_STATEMACHINE_INST);\n+    }\n+\n+    /**\n+     * Gets xid from saga process context.\n+     *\n+     * @return the xid\n+     */\n+    public static String getXidFromProcessContext(ProcessContext context) {\n+        String xid = null;\n+        Map<String, Object> contextVariable = (Map<String, Object>) context.getVariable(DomainConstants.VAR_NAME_STATEMACHINE_CONTEXT);\n+        if (contextVariable != null && contextVariable.containsKey(DomainConstants.VAR_NAME_GLOBAL_TX)) {\n+            GlobalTransaction globalTransaction = (GlobalTransaction) contextVariable.get(DomainConstants.VAR_NAME_GLOBAL_TX);\n+            xid = globalTransaction.getXid();\n+        } else {\n+            StateMachineInstance smi = (StateMachineInstance) context.getVariable(DomainConstants.VAR_NAME_STATEMACHINE_INST);\n+            if (smi != null) {\n+                xid = smi.getId();\n+            }\n+        }\n+        return xid;\n+    }\n+\n+    /**\n+     * Run in the saga branch.\n+     *\n+     * @param context\n+     * @param runnable\n+     */\n+    public static void runInSagaBranch(ProcessContext context, Runnable runnable) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk4OTQ1MQ=="}, "originalCommit": {"oid": "ebb53f32a97c6eb6718e7e61b18d45331e115327"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjE3NDg0OnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/parser/utils/ResourceUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjowMToyMFrOGL_Ysg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwOToxNzo0OFrOGMBnaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIyNjAzNA==", "bodyText": "remove date tag", "url": "https://github.com/seata/seata/pull/2551#discussion_r415226034", "createdAt": "2020-04-26T06:01:20Z", "author": {"login": "jsbxyyx"}, "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/parser/utils/ResourceUtil.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.statelang.parser.utils;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+import org.springframework.core.io.Resource;\n+import org.springframework.core.io.support.PathMatchingResourcePatternResolver;\n+import org.springframework.core.io.support.ResourcePatternResolver;\n+\n+/**\n+ * State lang resource util.\n+ *\n+ * @author wang.liang\n+ * @date 2020/4/15", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf73392d7269ef16d5e78080a4cda0afbc7c5e8c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2MjU2OA==", "bodyText": "OK", "url": "https://github.com/seata/seata/pull/2551#discussion_r415262568", "createdAt": "2020-04-26T09:17:48Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/parser/utils/ResourceUtil.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.statelang.parser.utils;\n+\n+import java.io.IOException;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+import org.springframework.core.io.Resource;\n+import org.springframework.core.io.support.PathMatchingResourcePatternResolver;\n+import org.springframework.core.io.support.ResourcePatternResolver;\n+\n+/**\n+ * State lang resource util.\n+ *\n+ * @author wang.liang\n+ * @date 2020/4/15", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIyNjAzNA=="}, "originalCommit": {"oid": "bf73392d7269ef16d5e78080a4cda0afbc7c5e8c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjQ3ODE4OnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/io/seata/spring/tcc/TccActionInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzozNToxMVrOGvtCzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzozNToxMVrOGvtCzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3NDI1NA==", "bodyText": "\u867d\u7136\u5728SAGA\u4e2d\u4e00\u822c\u4e0d\u4f1a\u4f7f\u7528TCC\uff0c\u4e0d\u8fc7\u8fd8\u662f\u4ee5\u9632\u4e07\u4e00\u6dfb\u52a0\u4e00\u4e0b\u5224\u65ad\u3002", "url": "https://github.com/seata/seata/pull/2551#discussion_r452674254", "createdAt": "2020-07-10T07:35:11Z", "author": {"login": "wangliang181230"}, "path": "spring/src/main/java/io/seata/spring/tcc/TccActionInterceptor.java", "diffHunk": "@@ -65,7 +65,7 @@ public TccActionInterceptor(RemotingDesc remotingDesc) {\n \n     @Override\n     public Object invoke(final MethodInvocation invocation) throws Throwable {\n-        if (!RootContext.inGlobalTransaction()) {\n+        if (!RootContext.inGlobalTransaction() || RootContext.inSagaBranch()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0244c8aafd8940ea04b1bf3672f0c6b7b33bcc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjU4NjEyOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMzo1OToxNVrOHWVe1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNToyODo1MVrOHWW6Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE4MjY3OQ==", "bodyText": "finally", "url": "https://github.com/seata/seata/pull/2551#discussion_r493182679", "createdAt": "2020-09-23T03:59:15Z", "author": {"login": "slievrly"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -177,6 +178,7 @@ public void recordStateMachineFinished(StateMachineInstance machineInstance, Pro\n                 }\n             }\n             RootContext.unbind();\n+            RootContext.unbindBranchType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58e6784462bcce9d5c8b45ea6354f8aa7349959"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwNjA2Ng==", "bodyText": "done", "url": "https://github.com/seata/seata/pull/2551#discussion_r493206066", "createdAt": "2020-09-23T05:28:51Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/store/db/DbAndReportTcStateLogStore.java", "diffHunk": "@@ -177,6 +178,7 @@ public void recordStateMachineFinished(StateMachineInstance machineInstance, Pro\n                 }\n             }\n             RootContext.unbind();\n+            RootContext.unbindBranchType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE4MjY3OQ=="}, "originalCommit": {"oid": "a58e6784462bcce9d5c8b45ea6354f8aa7349959"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjU5MzkyOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/pcext/interceptors/InSagaBranchHandlerInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDowMzoxMVrOHWVjAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNToyOTo1OFrOHWW7lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE4Mzc0NQ==", "bodyText": "should be the first to execute?", "url": "https://github.com/seata/seata/pull/2551#discussion_r493183745", "createdAt": "2020-09-23T04:03:11Z", "author": {"login": "slievrly"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/pcext/interceptors/InSagaBranchHandlerInterceptor.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.engine.pcext.interceptors;\n+\n+import io.seata.common.loader.LoadLevel;\n+import io.seata.common.util.StringUtils;\n+import io.seata.core.context.RootContext;\n+import io.seata.core.model.BranchType;\n+import io.seata.saga.engine.exception.EngineExecutionException;\n+import io.seata.saga.engine.pcext.InterceptableStateHandler;\n+import io.seata.saga.engine.pcext.StateHandlerInterceptor;\n+import io.seata.saga.proctrl.ProcessContext;\n+import io.seata.saga.statelang.domain.DomainConstants;\n+import io.seata.saga.statelang.domain.StateMachineInstance;\n+import io.seata.tm.api.GlobalTransaction;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Map;\n+\n+/**\n+ * InSagaBranchHandler Interceptor\n+ *\n+ * @author wang.liang\n+ */\n+@LoadLevel(name = \"InSagaBranch\", order = 50)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58e6784462bcce9d5c8b45ea6354f8aa7349959"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwNjQyMg==", "bodyText": "The first is the smallest order.", "url": "https://github.com/seata/seata/pull/2551#discussion_r493206422", "createdAt": "2020-09-23T05:29:58Z", "author": {"login": "wangliang181230"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/pcext/interceptors/InSagaBranchHandlerInterceptor.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.engine.pcext.interceptors;\n+\n+import io.seata.common.loader.LoadLevel;\n+import io.seata.common.util.StringUtils;\n+import io.seata.core.context.RootContext;\n+import io.seata.core.model.BranchType;\n+import io.seata.saga.engine.exception.EngineExecutionException;\n+import io.seata.saga.engine.pcext.InterceptableStateHandler;\n+import io.seata.saga.engine.pcext.StateHandlerInterceptor;\n+import io.seata.saga.proctrl.ProcessContext;\n+import io.seata.saga.statelang.domain.DomainConstants;\n+import io.seata.saga.statelang.domain.StateMachineInstance;\n+import io.seata.tm.api.GlobalTransaction;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.Map;\n+\n+/**\n+ * InSagaBranchHandler Interceptor\n+ *\n+ * @author wang.liang\n+ */\n+@LoadLevel(name = \"InSagaBranch\", order = 50)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE4Mzc0NQ=="}, "originalCommit": {"oid": "a58e6784462bcce9d5c8b45ea6354f8aa7349959"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Njc2NzgzOnYy", "diffSide": "RIGHT", "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/pcext/interceptors/InSagaBranchHandlerInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNTozOTowMFrOHWXGXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNTozOTowMFrOHWXGXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwOTE4MA==", "bodyText": "Why was it placed in  engine-store instead of engine", "url": "https://github.com/seata/seata/pull/2551#discussion_r493209180", "createdAt": "2020-09-23T05:39:00Z", "author": {"login": "slievrly"}, "path": "saga/seata-saga-engine-store/src/main/java/io/seata/saga/engine/pcext/interceptors/InSagaBranchHandlerInterceptor.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ *  Copyright 1999-2019 Seata.io Group.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package io.seata.saga.engine.pcext.interceptors;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0551ce11a35f9c083df0faa7a0ef23f85035a8ac"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1535, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}