{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MTAzNjIx", "number": 2617, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMjozNTozOFrOD2dHqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwOTozMDoxMVrOD2lTMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDI2Nzk0OnYy", "diffSide": "RIGHT", "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMjozNTozOFrOGMOR5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMzoxMzozMFrOGMO7ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3MDA1Mw==", "bodyText": "How about to use lambda for more readable like :\n        return Optional.ofNullable(method)\n                       .map(m -> m.getAnnotation(annotationClass))\n                       .orElse(Optional.ofNullable(targetClass)\n                                       .map(t -> t.getAnnotation(annotationClass))\n                                       .orElse(null));", "url": "https://github.com/seata/seata/pull/2617#discussion_r415470053", "createdAt": "2020-04-27T02:35:38Z", "author": {"login": "helloworlde"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -166,8 +165,11 @@ public TransactionInfo getTransactionInfo() {\n     }\n \n     private <T extends Annotation> T getAnnotation(Method method, Class<?> targetClass, Class<T> annotationClass) {\n-        return method == null ? targetClass == null ? null : targetClass.getAnnotation(annotationClass)\n-            : method.getAnnotation(annotationClass);\n+        T annotation = null == method ? null : method.getAnnotation(annotationClass);\n+        if (null == annotation) {\n+            annotation = null == targetClass ? null : targetClass.getAnnotation(annotationClass);\n+        }\n+        return annotation;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aeaab270cd29cb40860e8cc3fbeac78924ebfb3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ4MDY4Mg==", "bodyText": "thx", "url": "https://github.com/seata/seata/pull/2617#discussion_r415480682", "createdAt": "2020-04-27T03:13:30Z", "author": {"login": "a364176773"}, "path": "spring/src/main/java/io/seata/spring/annotation/GlobalTransactionalInterceptor.java", "diffHunk": "@@ -166,8 +165,11 @@ public TransactionInfo getTransactionInfo() {\n     }\n \n     private <T extends Annotation> T getAnnotation(Method method, Class<?> targetClass, Class<T> annotationClass) {\n-        return method == null ? targetClass == null ? null : targetClass.getAnnotation(annotationClass)\n-            : method.getAnnotation(annotationClass);\n+        T annotation = null == method ? null : method.getAnnotation(annotationClass);\n+        if (null == annotation) {\n+            annotation = null == targetClass ? null : targetClass.getAnnotation(annotationClass);\n+        }\n+        return annotation;\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3MDA1Mw=="}, "originalCommit": {"oid": "2aeaab270cd29cb40860e8cc3fbeac78924ebfb3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTYwODE5OnYy", "diffSide": "RIGHT", "path": "spring/src/test/java/io/seata/spring/annotation/MethodDescTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwOTozMDoxMVrOGMZuyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwOTo1Nzo1OFrOGMa3yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY1NzY3NQ==", "bodyText": "The global variable declare in testGetAnnotation method?", "url": "https://github.com/seata/seata/pull/2617#discussion_r415657675", "createdAt": "2020-04-27T09:30:11Z", "author": {"login": "jsbxyyx"}, "path": "spring/src/test/java/io/seata/spring/annotation/MethodDescTest.java", "diffHunk": "@@ -37,6 +36,8 @@\n     private static Class<?> targetClass = null;\n     private static GlobalTransactional transactional = null;\n \n+    private static final GlobalTransactionalInterceptor globalTransactionalInterceptor=new GlobalTransactionalInterceptor(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "717c87397c06e46b779616f274125bb0112d3328"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY2MTU3Ng==", "bodyText": "ok", "url": "https://github.com/seata/seata/pull/2617#discussion_r415661576", "createdAt": "2020-04-27T09:35:56Z", "author": {"login": "a364176773"}, "path": "spring/src/test/java/io/seata/spring/annotation/MethodDescTest.java", "diffHunk": "@@ -37,6 +36,8 @@\n     private static Class<?> targetClass = null;\n     private static GlobalTransactional transactional = null;\n \n+    private static final GlobalTransactionalInterceptor globalTransactionalInterceptor=new GlobalTransactionalInterceptor(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY1NzY3NQ=="}, "originalCommit": {"oid": "717c87397c06e46b779616f274125bb0112d3328"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3NjM2MA==", "bodyText": "The global variable declare in testGetAnnotation method?\n\nPTAL @jsbxyyx", "url": "https://github.com/seata/seata/pull/2617#discussion_r415676360", "createdAt": "2020-04-27T09:57:58Z", "author": {"login": "a364176773"}, "path": "spring/src/test/java/io/seata/spring/annotation/MethodDescTest.java", "diffHunk": "@@ -37,6 +36,8 @@\n     private static Class<?> targetClass = null;\n     private static GlobalTransactional transactional = null;\n \n+    private static final GlobalTransactionalInterceptor globalTransactionalInterceptor=new GlobalTransactionalInterceptor(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY1NzY3NQ=="}, "originalCommit": {"oid": "717c87397c06e46b779616f274125bb0112d3328"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1563, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}