{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NDE5MjU4", "number": 2685, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMDowNFrOD8gUMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMDowNFrOD8gUMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzcwNjA4OnYy", "diffSide": "RIGHT", "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/mysql/MySQLInsertRecognizer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMDowNFrOGVfEOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDozMDowNFrOGVfEOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MjI2Ng==", "bodyText": "use Singleton to reuse new SqlMethodExpr()\u3001NotPlaceholderExpr\u3001SQLSequenceExpr", "url": "https://github.com/seata/seata/pull/2685#discussion_r425182266", "createdAt": "2020-05-14T14:30:04Z", "author": {"login": "zjinlei"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/mysql/MySQLInsertRecognizer.java", "diffHunk": "@@ -100,24 +101,28 @@ public boolean visit(SQLExprTableSource x) {\n     }\n \n     @Override\n-    public List<List<Object>> getInsertRows() {\n+    public List<List<Object>> getInsertRows(int primaryKeyIndex) {\n         List<SQLInsertStatement.ValuesClause> valuesClauses = ast.getValuesList();\n         List<List<Object>> rows = new ArrayList<>(valuesClauses.size());\n         for (SQLInsertStatement.ValuesClause valuesClause : valuesClauses) {\n             List<SQLExpr> exprs = valuesClause.getValues();\n             List<Object> row = new ArrayList<>(exprs.size());\n             rows.add(row);\n-            for (SQLExpr expr : valuesClause.getValues()) {\n+            for (int i = 0, len = exprs.size(); i < len; i++) {\n+                SQLExpr expr = exprs.get(i);\n                 if (expr instanceof SQLNullExpr) {\n                     row.add(Null.get());\n                 } else if (expr instanceof SQLValuableExpr) {\n-                    row.add(((SQLValuableExpr)expr).getValue());\n+                    row.add(((SQLValuableExpr) expr).getValue());\n                 } else if (expr instanceof SQLVariantRefExpr) {\n-                    row.add(((SQLVariantRefExpr)expr).getName());\n+                    row.add(((SQLVariantRefExpr) expr).getName());\n                 } else if (expr instanceof SQLMethodInvokeExpr) {\n                     row.add(new SqlMethodExpr());\n                 } else {\n-                    throw new SQLParsingException(\"Unknown SQLExpr: \" + expr.getClass() + \" \" + expr);\n+                    if (i == primaryKeyIndex) {\n+                        throw new SQLParsingException(\"Unknown SQLExpr: \" + expr.getClass() + \" \" + expr);\n+                    }\n+                    row.add(new NotPlaceholderExpr());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efcd2f996eb8455eb29a17d0cc27d0634adf65ad"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1594, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}