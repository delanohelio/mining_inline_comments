{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDcxOTIy", "number": 2242, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNTo1MFrODpbbAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTo0NjozNlrOEKcQ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzY3NDkxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/AbstractPreparedStatementProxy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNTo1MFrOF4mLeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNTo1MFrOF4mLeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDEwNg==", "bodyText": "I think we should use a dynamic array instead of HashMap, because only random access capability is needed.", "url": "https://github.com/seata/seata/pull/2242#discussion_r394890106", "createdAt": "2020-03-19T09:25:50Z", "author": {"login": "ggndnn"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/AbstractPreparedStatementProxy.java", "diffHunk": "@@ -49,14 +51,10 @@\n     /**\n      * The Parameters.\n      */\n-    protected ArrayList<Object>[] parameters;\n+    protected Map<Integer,ArrayList<Object>> parameters;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aff40a6b4a1649b6ca33bebc42e401ac7137934"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NzY3OTUxOnYy", "diffSide": "RIGHT", "path": "rm-datasource/src/main/java/io/seata/rm/datasource/AbstractPreparedStatementProxy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwOToyNzowOVrOF4mOig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTowODoyN1rOF5PjPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDg5MA==", "bodyText": "What's the purpose of op --? It looks inconsistent with method getParamsByIndex .", "url": "https://github.com/seata/seata/pull/2242#discussion_r394890890", "createdAt": "2020-03-19T09:27:09Z", "author": {"login": "ggndnn"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/AbstractPreparedStatementProxy.java", "diffHunk": "@@ -103,7 +101,10 @@ public AbstractPreparedStatementProxy(AbstractConnectionProxy connectionProxy, P\n      * @param x     the x\n      */\n     protected void setParamByIndex(int index, Object x) {\n-        parameters[--index].add(x);\n+        if (!parameters.containsKey(--index)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aff40a6b4a1649b6ca33bebc42e401ac7137934"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDk0MjE5Nw==", "bodyText": "The base class method of set()  will pass param from 1,and we should ensure that it is taken from 0, so we handle the index with --.", "url": "https://github.com/seata/seata/pull/2242#discussion_r394942197", "createdAt": "2020-03-19T10:56:42Z", "author": {"login": "booogu"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/AbstractPreparedStatementProxy.java", "diffHunk": "@@ -103,7 +101,10 @@ public AbstractPreparedStatementProxy(AbstractConnectionProxy connectionProxy, P\n      * @param x     the x\n      */\n     protected void setParamByIndex(int index, Object x) {\n-        parameters[--index].add(x);\n+        if (!parameters.containsKey(--index)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDg5MA=="}, "originalCommit": {"oid": "9aff40a6b4a1649b6ca33bebc42e401ac7137934"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU2NzkzMg==", "bodyText": "We should keep the index parameter of setParamByIndex and getParamByIndex the same meaning.", "url": "https://github.com/seata/seata/pull/2242#discussion_r395567932", "createdAt": "2020-03-20T11:08:27Z", "author": {"login": "ggndnn"}, "path": "rm-datasource/src/main/java/io/seata/rm/datasource/AbstractPreparedStatementProxy.java", "diffHunk": "@@ -103,7 +101,10 @@ public AbstractPreparedStatementProxy(AbstractConnectionProxy connectionProxy, P\n      * @param x     the x\n      */\n     protected void setParamByIndex(int index, Object x) {\n-        parameters[--index].add(x);\n+        if (!parameters.containsKey(--index)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDg5MDg5MA=="}, "originalCommit": {"oid": "9aff40a6b4a1649b6ca33bebc42e401ac7137934"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mzg0Mjg5OnYy", "diffSide": "RIGHT", "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/oracle/BaseOracleRecognizer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTo0NjozNlrOGre2Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDo0NjoxOFrOGr5u7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0NzM1OQ==", "bodyText": "if  need index+1 ?", "url": "https://github.com/seata/seata/pull/2242#discussion_r448247359", "createdAt": "2020-07-01T09:46:36Z", "author": {"login": "slievrly"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/oracle/BaseOracleRecognizer.java", "diffHunk": "@@ -50,7 +50,7 @@ public OracleOutputVisitor createOutputVisitor(final ParametersHolder parameters\n             @Override\n             public boolean visit(SQLVariantRefExpr x) {\n                 if (\"?\".equals(x.getName())) {\n-                    ArrayList<Object> oneParamValues = parametersHolder.getParameters()[x.getIndex()];\n+                    ArrayList<Object> oneParamValues = parametersHolder.getParameters().get(x.getIndex());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0b05c19aa9e6536d136784a23578c945d824ce2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2NDg0MQ==", "bodyText": "Yeah, my fault.", "url": "https://github.com/seata/seata/pull/2242#discussion_r448264841", "createdAt": "2020-07-01T10:18:41Z", "author": {"login": "booogu"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/oracle/BaseOracleRecognizer.java", "diffHunk": "@@ -50,7 +50,7 @@ public OracleOutputVisitor createOutputVisitor(final ParametersHolder parameters\n             @Override\n             public boolean visit(SQLVariantRefExpr x) {\n                 if (\"?\".equals(x.getName())) {\n-                    ArrayList<Object> oneParamValues = parametersHolder.getParameters()[x.getIndex()];\n+                    ArrayList<Object> oneParamValues = parametersHolder.getParameters().get(x.getIndex());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0NzM1OQ=="}, "originalCommit": {"oid": "b0b05c19aa9e6536d136784a23578c945d824ce2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY4Nzg1NA==", "bodyText": "Corrected\uff0cplease take a look.", "url": "https://github.com/seata/seata/pull/2242#discussion_r448687854", "createdAt": "2020-07-02T00:46:18Z", "author": {"login": "booogu"}, "path": "sqlparser/seata-sqlparser-druid/src/main/java/io/seata/sqlparser/druid/oracle/BaseOracleRecognizer.java", "diffHunk": "@@ -50,7 +50,7 @@ public OracleOutputVisitor createOutputVisitor(final ParametersHolder parameters\n             @Override\n             public boolean visit(SQLVariantRefExpr x) {\n                 if (\"?\".equals(x.getName())) {\n-                    ArrayList<Object> oneParamValues = parametersHolder.getParameters()[x.getIndex()];\n+                    ArrayList<Object> oneParamValues = parametersHolder.getParameters().get(x.getIndex());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI0NzM1OQ=="}, "originalCommit": {"oid": "b0b05c19aa9e6536d136784a23578c945d824ce2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1617, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}