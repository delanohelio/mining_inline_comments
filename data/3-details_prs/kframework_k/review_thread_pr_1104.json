{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDg5OTU4", "number": 1104, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0NToyNFrODgah6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNzozMTozNVrODgdyiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzE1Njg5OnYy", "diffSide": "RIGHT", "path": "k-distribution/tutorial/2_languages/4_logik/basic/logik.k", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDo0NToyNFrOFqm4dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjozNjozOVrOFqqfTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMTU1Ng==", "bodyText": "I think I understand why, but this looks wrong. I'm curious what Grigore has to say.", "url": "https://github.com/kframework/k/pull/1104#discussion_r380221556", "createdAt": "2020-02-17T14:45:24Z", "author": {"login": "radumereuta"}, "path": "k-distribution/tutorial/2_languages/4_logik/basic/logik.k", "diffHunk": "@@ -343,7 +343,7 @@ another clause can be chosen using the rule above):  */\n   rule <k> L:Term => . ...</k>\n        <fresh>  L:Term . => . </fresh>\n \n-  rule <k> L:Term => Ls ...</k>\n+  rule <k> L:Term :KItem => Ls ...</k>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67cc1be4924f6d657aaecf189186626c40162864"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI2OTI4NA==", "bodyText": "The reason this happens is in order to set the sort of the rewrite to KItem instead of Terms. This then prevents a list terminator from being erroneously added.", "url": "https://github.com/kframework/k/pull/1104#discussion_r380269284", "createdAt": "2020-02-17T16:14:20Z", "author": {"login": "dwightguth"}, "path": "k-distribution/tutorial/2_languages/4_logik/basic/logik.k", "diffHunk": "@@ -343,7 +343,7 @@ another clause can be chosen using the rule above):  */\n   rule <k> L:Term => . ...</k>\n        <fresh>  L:Term . => . </fresh>\n \n-  rule <k> L:Term => Ls ...</k>\n+  rule <k> L:Term :KItem => Ls ...</k>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMTU1Ng=="}, "originalCommit": {"oid": "67cc1be4924f6d657aaecf189186626c40162864"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MDY1NA==", "bodyText": "@radumereuta I agree that it looks suspicious, but I think it is ok.  Now with the more generous AML semantics to K, where you can define and do pretty much whatever makes sense with sorts and types, almost every decision that makes practical sense is acceptable.  Especially if it improves the performance and the error messages.", "url": "https://github.com/kframework/k/pull/1104#discussion_r380280654", "createdAt": "2020-02-17T16:36:39Z", "author": {"login": "grosu"}, "path": "k-distribution/tutorial/2_languages/4_logik/basic/logik.k", "diffHunk": "@@ -343,7 +343,7 @@ another clause can be chosen using the rule above):  */\n   rule <k> L:Term => . ...</k>\n        <fresh>  L:Term . => . </fresh>\n \n-  rule <k> L:Term => Ls ...</k>\n+  rule <k> L:Term :KItem => Ls ...</k>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyMTU1Ng=="}, "originalCommit": {"oid": "67cc1be4924f6d657aaecf189186626c40162864"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzI0NDQ3OnYy", "diffSide": "RIGHT", "path": "kernel/src/main/java/org/kframework/compile/AddSortInjections.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTowOTo0M1rOFqntiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTowOTo0M1rOFqntiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIzNTE0NA==", "bodyText": "This needs a small description.", "url": "https://github.com/kframework/k/pull/1104#discussion_r380235144", "createdAt": "2020-02-17T15:09:43Z", "author": {"login": "radumereuta"}, "path": "kernel/src/main/java/org/kframework/compile/AddSortInjections.java", "diffHunk": "@@ -249,6 +221,40 @@ private K visitChildren(K term, Sort actualSort, Sort expectedSort) {\n         }\n     }\n \n+    public Production substituteProd(Production prod, Sort expectedSort, BiFunction<Integer, Production, Sort> getSort, HasLocation loc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67cc1be4924f6d657aaecf189186626c40162864"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzY5MDk3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNzozMTozNVrOFqr6fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTozMzoxMVrOFr0xVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMwMzk5OQ==", "bodyText": "Is this for the final version? I haven't seen it before.", "url": "https://github.com/kframework/k/pull/1104#discussion_r380303999", "createdAt": "2020-02-17T17:31:35Z", "author": {"login": "radumereuta"}, "path": "Jenkinsfile", "diffHunk": "@@ -89,7 +89,7 @@ pipeline {\n                     stage('Checkout code') {\n                       steps {\n                         dir('k-exercises') {\n-                          git url: 'git@github.com:kframework/k-exercises.git'\n+                          git url: 'git@github.com:kframework/k-exercises.git', branch: 'emptylists'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "004375bad3794e1fc2db0b745463c5cf69c9b8ae"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ5NzY4NA==", "bodyText": "no, this is just for testing purposes.", "url": "https://github.com/kframework/k/pull/1104#discussion_r381497684", "createdAt": "2020-02-19T19:33:11Z", "author": {"login": "dwightguth"}, "path": "Jenkinsfile", "diffHunk": "@@ -89,7 +89,7 @@ pipeline {\n                     stage('Checkout code') {\n                       steps {\n                         dir('k-exercises') {\n-                          git url: 'git@github.com:kframework/k-exercises.git'\n+                          git url: 'git@github.com:kframework/k-exercises.git', branch: 'emptylists'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMwMzk5OQ=="}, "originalCommit": {"oid": "004375bad3794e1fc2db0b745463c5cf69c9b8ae"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3166, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}