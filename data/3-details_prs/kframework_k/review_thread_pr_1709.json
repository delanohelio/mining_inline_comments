{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzUxMDI5", "number": 1709, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo1ODo0NFrOFFunFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo1ODo0NFrOFFunFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTUwODcxOnYy", "diffSide": "RIGHT", "path": "k-distribution/include/kframework/builtin/domains.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo1ODo0NFrOIGYguw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo1ODo0NFrOIGYguw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2Mzk2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              rule ensureOffsetList(L::List, IDX::Int, D::KItem) => updateList(makeList(IDX +Int 1, D), 0, L) requires         IDX >=Int size(L)\n          \n          \n            \n              rule ensureOffsetList(L::List, IDX::Int, D::KItem) => L                                         requires notBool IDX >=Int size(L)\n          \n          \n            \n              rule ensureOffsetList(L::List, IDX::Int, D::KItem) => updateList(makeList(IDX +Int 1, D), 0, L) requires         IDX >=Int size(L)\n          \n          \n            \n              rule ensureOffsetList(L::List, IDX::Int, _::KItem) => L                                         requires notBool IDX >=Int size(L)", "url": "https://github.com/kframework/k/pull/1709#discussion_r543563963", "createdAt": "2020-12-15T17:58:44Z", "author": {"login": "ehildenb"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -164,7 +164,8 @@ of any of the syntax defined in any of these modules.\n   rule arr(_      , _, D::KItem) [ _        ] => D      [owise]\n \n   syntax List ::= ensureOffsetList(List, Int, KItem) [function]\n-  rule ensureOffsetList(L::List, IDX::Int, D::KItem) => #if IDX >=Int size(L) #then updateList(makeList(IDX +Int 1, D), 0, L) #else L #fi\n+  rule ensureOffsetList(L::List, IDX::Int, D::KItem) => updateList(makeList(IDX +Int 1, D), 0, L) requires         IDX >=Int size(L)\n+  rule ensureOffsetList(L::List, IDX::Int, D::KItem) => L                                         requires notBool IDX >=Int size(L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f7e939fd7c109280d563117f44f11d3fca7851f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2884, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}