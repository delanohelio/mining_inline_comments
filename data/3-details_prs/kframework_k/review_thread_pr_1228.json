{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MjU1NTE0", "number": 1228, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0NzoxNFrOD3QtgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo1NTo1NlrOD3Q91Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjcyMDY1OnYy", "diffSide": "RIGHT", "path": "Dockerfile", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0NzoxNFrOGNayTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjo1MToyOVrOGOnzKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNA==", "bodyText": "please move this back where it was, immediately before its use. moving it to the top reduces caching in the dockerfile.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416723534", "createdAt": "2020-04-28T15:47:14Z", "author": {"login": "dwightguth"}, "path": "Dockerfile", "diffHunk": "@@ -1,12 +1,16 @@\n FROM ubuntu:bionic\n \n+ARG USER_ID=1000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc0OTYyMw==", "bodyText": "I don't think this will reduce any cacheing, actually may improve it since these lines are more stable than the next lines (installing a bunch of stuff).\nI mostly just like having all the arguments at the top for scanability. I can move it back if you really want, but don't see the need.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416749623", "createdAt": "2020-04-28T16:22:29Z", "author": {"login": "ehildenb"}, "path": "Dockerfile", "diffHunk": "@@ -1,12 +1,16 @@\n FROM ubuntu:bionic\n \n+ARG USER_ID=1000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNA=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4MDk3OQ==", "bodyText": "Everything after the ARG line depends on the value of the argument, so if the user id changes, we will have to reinstall all the debian packages and stack.", "url": "https://github.com/kframework/k/pull/1228#discussion_r417980979", "createdAt": "2020-04-30T12:44:00Z", "author": {"login": "dwightguth"}, "path": "Dockerfile", "diffHunk": "@@ -1,12 +1,16 @@\n FROM ubuntu:bionic\n \n+ARG USER_ID=1000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNA=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4NTMyMA==", "bodyText": "Ok, I moved it back.", "url": "https://github.com/kframework/k/pull/1228#discussion_r417985320", "createdAt": "2020-04-30T12:51:29Z", "author": {"login": "ehildenb"}, "path": "Dockerfile", "diffHunk": "@@ -1,12 +1,16 @@\n FROM ubuntu:bionic\n \n+ARG USER_ID=1000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMzUzNA=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjcyNDk0OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0ODowNFrOGNa01Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoyODo0NFrOGNcp7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNDE4MQ==", "bodyText": "why did you remove the beforeAgent line?", "url": "https://github.com/kframework/k/pull/1228#discussion_r416724181", "createdAt": "2020-04-28T15:48:04Z", "author": {"login": "dwightguth"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,15 +364,20 @@ pipeline {\n       }\n     }\n     stage('Deploy') {\n+      when { branch 'master' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1NDE1OQ==", "bodyText": "I put it back.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416754159", "createdAt": "2020-04-28T16:28:44Z", "author": {"login": "ehildenb"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,15 +364,20 @@ pipeline {\n       }\n     }\n     stage('Deploy') {\n+      when { branch 'master' }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNDE4MQ=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjcyNjkwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0ODoyOVrOGNa2Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjoyMzo1MlrOGNccVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNDQ4Mg==", "bodyText": "what is this doing?", "url": "https://github.com/kframework/k/pull/1228#discussion_r416724482", "createdAt": "2020-04-28T15:48:29Z", "author": {"login": "dwightguth"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,15 +364,20 @@ pipeline {\n       }\n     }\n     stage('Deploy') {\n+      when { branch 'master' }\n       agent {\n         dockerfile {\n           additionalBuildArgs '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'\n+          args '-v /var/run/docker.sock:/var/run/docker.sock'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MDY3OQ==", "bodyText": "This allows this docker container to speak to the LXC container docker daemon directly. Launching a docker daemon inside a docker container is strongly discouraged (see https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/), instead you are supposed to launch it using the hosts docker daemon, which this enables.\nNote this is better for cacheing the images that are build inside this container too.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416750679", "createdAt": "2020-04-28T16:23:52Z", "author": {"login": "ehildenb"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,15 +364,20 @@ pipeline {\n       }\n     }\n     stage('Deploy') {\n+      when { branch 'master' }\n       agent {\n         dockerfile {\n           additionalBuildArgs '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'\n+          args '-v /var/run/docker.sock:/var/run/docker.sock'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNDQ4Mg=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjczMjk5OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo0OTo0MFrOGNa5mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTozNToyNVrOGNn4ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNTQwMw==", "bodyText": "is this storing your password on Jenkins? we probably should not use your user account.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416725403", "createdAt": "2020-04-28T15:49:40Z", "author": {"login": "dwightguth"}, "path": "Jenkinsfile", "diffHunk": "@@ -381,54 +386,70 @@ pipeline {\n         GITHUB_TOKEN          = credentials('rv-jenkins')\n         GIT_SSH_COMMAND       = 'ssh -o StrictHostKeyChecking=accept-new'\n       }\n-      steps {\n-        unstash \"src\"\n-        unstash \"binary\"\n-        dir('bionic') { unstash 'bionic' }\n-        dir('buster') { unstash 'buster' }\n-        dir('arch')   { unstash 'arch'   }\n-        dir('mojave') { unstash 'mojave' }\n-        sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n-          sh '''\n-            git remote add release 'ssh://github.com/kframework/k.git'\n-            git tag \"${K_RELEASE_TAG}\" \"${SHORT_REV}\"\n-            git push release \"${K_RELEASE_TAG}\"\n-\n-            mv bionic/kframework_${VERSION}_amd64.deb bionic/kframework_${VERSION}_amd64_bionic.deb\n-            mv buster/kframework_${VERSION}_amd64.deb buster/kframework_${VERSION}_amd64_buster.deb\n-            LOCAL_BOTTLE_NAME=$(echo mojave/kframework--${VERSION}.mojave.bottle*.tar.gz)\n-            BOTTLE_NAME=`cd mojave && echo kframework--${VERSION}.mojave.bottle*.tar.gz | sed 's!kframework--!kframework-!'`\n-            mv $LOCAL_BOTTLE_NAME mojave/$BOTTLE_NAME\n-            echo \"K Framework Release ${K_RELEASE_TAG}\"  > release.md\n-            echo \"\"                                     >> release.md\n-            cat k-distribution/INSTALL.md               >> release.md\n-            hub release create                                                                         \\\n-                --attach kframework-${VERSION}-src.tar.gz\"#Source tar.gz\"                              \\\n-                --attach bionic/kframework_${VERSION}_amd64_bionic.deb\"#Ubuntu Bionic (18.04) Package\" \\\n-                --attach buster/kframework_${VERSION}_amd64_buster.deb\"#Debian Buster (10) Package\"    \\\n-                --attach arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.xz\"#Arch Package\"             \\\n-                --attach mojave/$BOTTLE_NAME\"#Mac OS X Homebrew Bottle\"                                \\\n-                --attach k-nightly.tar.gz\"#Platform Indepdendent K Binary\"                             \\\n-                --file release.md \"${K_RELEASE_TAG}\"\n-          '''\n-        }\n-        dir(\"homebrew-k\") {\n-          git url: 'git@github.com:kframework/homebrew-k.git', branch: 'brew-release-kframework'\n-          sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n+      stages {\n+        stage('DockerHub Images') {\n+          environment { DOCKERHUB_TOKEN = credentials('dockerhub-ehildenb') }\n+          steps {\n+            dir('bionic') { unstash 'bionic' }\n             sh '''\n-              git checkout master\n-              git merge brew-release-$PACKAGE\n-              git push origin master\n-              git push origin -d brew-release-$PACKAGE\n+                sudo docker login --username ehildenb --password \"${DOCKERHUB_TOKEN}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzODA4NQ==", "bodyText": "Switched to rvdockerhub.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416938085", "createdAt": "2020-04-28T21:35:25Z", "author": {"login": "ehildenb"}, "path": "Jenkinsfile", "diffHunk": "@@ -381,54 +386,70 @@ pipeline {\n         GITHUB_TOKEN          = credentials('rv-jenkins')\n         GIT_SSH_COMMAND       = 'ssh -o StrictHostKeyChecking=accept-new'\n       }\n-      steps {\n-        unstash \"src\"\n-        unstash \"binary\"\n-        dir('bionic') { unstash 'bionic' }\n-        dir('buster') { unstash 'buster' }\n-        dir('arch')   { unstash 'arch'   }\n-        dir('mojave') { unstash 'mojave' }\n-        sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n-          sh '''\n-            git remote add release 'ssh://github.com/kframework/k.git'\n-            git tag \"${K_RELEASE_TAG}\" \"${SHORT_REV}\"\n-            git push release \"${K_RELEASE_TAG}\"\n-\n-            mv bionic/kframework_${VERSION}_amd64.deb bionic/kframework_${VERSION}_amd64_bionic.deb\n-            mv buster/kframework_${VERSION}_amd64.deb buster/kframework_${VERSION}_amd64_buster.deb\n-            LOCAL_BOTTLE_NAME=$(echo mojave/kframework--${VERSION}.mojave.bottle*.tar.gz)\n-            BOTTLE_NAME=`cd mojave && echo kframework--${VERSION}.mojave.bottle*.tar.gz | sed 's!kframework--!kframework-!'`\n-            mv $LOCAL_BOTTLE_NAME mojave/$BOTTLE_NAME\n-            echo \"K Framework Release ${K_RELEASE_TAG}\"  > release.md\n-            echo \"\"                                     >> release.md\n-            cat k-distribution/INSTALL.md               >> release.md\n-            hub release create                                                                         \\\n-                --attach kframework-${VERSION}-src.tar.gz\"#Source tar.gz\"                              \\\n-                --attach bionic/kframework_${VERSION}_amd64_bionic.deb\"#Ubuntu Bionic (18.04) Package\" \\\n-                --attach buster/kframework_${VERSION}_amd64_buster.deb\"#Debian Buster (10) Package\"    \\\n-                --attach arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.xz\"#Arch Package\"             \\\n-                --attach mojave/$BOTTLE_NAME\"#Mac OS X Homebrew Bottle\"                                \\\n-                --attach k-nightly.tar.gz\"#Platform Indepdendent K Binary\"                             \\\n-                --file release.md \"${K_RELEASE_TAG}\"\n-          '''\n-        }\n-        dir(\"homebrew-k\") {\n-          git url: 'git@github.com:kframework/homebrew-k.git', branch: 'brew-release-kframework'\n-          sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n+      stages {\n+        stage('DockerHub Images') {\n+          environment { DOCKERHUB_TOKEN = credentials('dockerhub-ehildenb') }\n+          steps {\n+            dir('bionic') { unstash 'bionic' }\n             sh '''\n-              git checkout master\n-              git merge brew-release-$PACKAGE\n-              git push origin master\n-              git push origin -d brew-release-$PACKAGE\n+                sudo docker login --username ehildenb --password \"${DOCKERHUB_TOKEN}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNTQwMw=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjczNzEzOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo1MDozOVrOGNa8Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjo0OTozMVrOGOnuYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNjA3MQ==", "bodyText": "running docker as root should not be necessary if you use an unprivileged container.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416726071", "createdAt": "2020-04-28T15:50:39Z", "author": {"login": "dwightguth"}, "path": "Jenkinsfile", "diffHunk": "@@ -381,54 +386,70 @@ pipeline {\n         GITHUB_TOKEN          = credentials('rv-jenkins')\n         GIT_SSH_COMMAND       = 'ssh -o StrictHostKeyChecking=accept-new'\n       }\n-      steps {\n-        unstash \"src\"\n-        unstash \"binary\"\n-        dir('bionic') { unstash 'bionic' }\n-        dir('buster') { unstash 'buster' }\n-        dir('arch')   { unstash 'arch'   }\n-        dir('mojave') { unstash 'mojave' }\n-        sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n-          sh '''\n-            git remote add release 'ssh://github.com/kframework/k.git'\n-            git tag \"${K_RELEASE_TAG}\" \"${SHORT_REV}\"\n-            git push release \"${K_RELEASE_TAG}\"\n-\n-            mv bionic/kframework_${VERSION}_amd64.deb bionic/kframework_${VERSION}_amd64_bionic.deb\n-            mv buster/kframework_${VERSION}_amd64.deb buster/kframework_${VERSION}_amd64_buster.deb\n-            LOCAL_BOTTLE_NAME=$(echo mojave/kframework--${VERSION}.mojave.bottle*.tar.gz)\n-            BOTTLE_NAME=`cd mojave && echo kframework--${VERSION}.mojave.bottle*.tar.gz | sed 's!kframework--!kframework-!'`\n-            mv $LOCAL_BOTTLE_NAME mojave/$BOTTLE_NAME\n-            echo \"K Framework Release ${K_RELEASE_TAG}\"  > release.md\n-            echo \"\"                                     >> release.md\n-            cat k-distribution/INSTALL.md               >> release.md\n-            hub release create                                                                         \\\n-                --attach kframework-${VERSION}-src.tar.gz\"#Source tar.gz\"                              \\\n-                --attach bionic/kframework_${VERSION}_amd64_bionic.deb\"#Ubuntu Bionic (18.04) Package\" \\\n-                --attach buster/kframework_${VERSION}_amd64_buster.deb\"#Debian Buster (10) Package\"    \\\n-                --attach arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.xz\"#Arch Package\"             \\\n-                --attach mojave/$BOTTLE_NAME\"#Mac OS X Homebrew Bottle\"                                \\\n-                --attach k-nightly.tar.gz\"#Platform Indepdendent K Binary\"                             \\\n-                --file release.md \"${K_RELEASE_TAG}\"\n-          '''\n-        }\n-        dir(\"homebrew-k\") {\n-          git url: 'git@github.com:kframework/homebrew-k.git', branch: 'brew-release-kframework'\n-          sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n+      stages {\n+        stage('DockerHub Images') {\n+          environment { DOCKERHUB_TOKEN = credentials('dockerhub-ehildenb') }\n+          steps {\n+            dir('bionic') { unstash 'bionic' }\n             sh '''\n-              git checkout master\n-              git merge brew-release-$PACKAGE\n-              git push origin master\n-              git push origin -d brew-release-$PACKAGE\n+                sudo docker login --username ehildenb --password \"${DOCKERHUB_TOKEN}\"\n+\n+                bionic_commit_tag=\"ubuntu-bionic-${SHORT_REV}\"\n+                kframework_k_docker_repo=\"runtimeverificationinc/kframework-k\"\n+                mv bionic/kframework_${VERSION}_amd64.deb kframework_amd64_bionic.deb\n+                sudo docker image build . --file package/docker/Dockerfile.ubuntu-bionic --tag \"${kframework_k_docker_repo}:${bionic_commit_tag}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1NDQ1MA==", "bodyText": "I added the user to the docker group, and removed use of sudo. Need to test that it works.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416754450", "createdAt": "2020-04-28T16:29:08Z", "author": {"login": "ehildenb"}, "path": "Jenkinsfile", "diffHunk": "@@ -381,54 +386,70 @@ pipeline {\n         GITHUB_TOKEN          = credentials('rv-jenkins')\n         GIT_SSH_COMMAND       = 'ssh -o StrictHostKeyChecking=accept-new'\n       }\n-      steps {\n-        unstash \"src\"\n-        unstash \"binary\"\n-        dir('bionic') { unstash 'bionic' }\n-        dir('buster') { unstash 'buster' }\n-        dir('arch')   { unstash 'arch'   }\n-        dir('mojave') { unstash 'mojave' }\n-        sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n-          sh '''\n-            git remote add release 'ssh://github.com/kframework/k.git'\n-            git tag \"${K_RELEASE_TAG}\" \"${SHORT_REV}\"\n-            git push release \"${K_RELEASE_TAG}\"\n-\n-            mv bionic/kframework_${VERSION}_amd64.deb bionic/kframework_${VERSION}_amd64_bionic.deb\n-            mv buster/kframework_${VERSION}_amd64.deb buster/kframework_${VERSION}_amd64_buster.deb\n-            LOCAL_BOTTLE_NAME=$(echo mojave/kframework--${VERSION}.mojave.bottle*.tar.gz)\n-            BOTTLE_NAME=`cd mojave && echo kframework--${VERSION}.mojave.bottle*.tar.gz | sed 's!kframework--!kframework-!'`\n-            mv $LOCAL_BOTTLE_NAME mojave/$BOTTLE_NAME\n-            echo \"K Framework Release ${K_RELEASE_TAG}\"  > release.md\n-            echo \"\"                                     >> release.md\n-            cat k-distribution/INSTALL.md               >> release.md\n-            hub release create                                                                         \\\n-                --attach kframework-${VERSION}-src.tar.gz\"#Source tar.gz\"                              \\\n-                --attach bionic/kframework_${VERSION}_amd64_bionic.deb\"#Ubuntu Bionic (18.04) Package\" \\\n-                --attach buster/kframework_${VERSION}_amd64_buster.deb\"#Debian Buster (10) Package\"    \\\n-                --attach arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.xz\"#Arch Package\"             \\\n-                --attach mojave/$BOTTLE_NAME\"#Mac OS X Homebrew Bottle\"                                \\\n-                --attach k-nightly.tar.gz\"#Platform Indepdendent K Binary\"                             \\\n-                --file release.md \"${K_RELEASE_TAG}\"\n-          '''\n-        }\n-        dir(\"homebrew-k\") {\n-          git url: 'git@github.com:kframework/homebrew-k.git', branch: 'brew-release-kframework'\n-          sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n+      stages {\n+        stage('DockerHub Images') {\n+          environment { DOCKERHUB_TOKEN = credentials('dockerhub-ehildenb') }\n+          steps {\n+            dir('bionic') { unstash 'bionic' }\n             sh '''\n-              git checkout master\n-              git merge brew-release-$PACKAGE\n-              git push origin master\n-              git push origin -d brew-release-$PACKAGE\n+                sudo docker login --username ehildenb --password \"${DOCKERHUB_TOKEN}\"\n+\n+                bionic_commit_tag=\"ubuntu-bionic-${SHORT_REV}\"\n+                kframework_k_docker_repo=\"runtimeverificationinc/kframework-k\"\n+                mv bionic/kframework_${VERSION}_amd64.deb kframework_amd64_bionic.deb\n+                sudo docker image build . --file package/docker/Dockerfile.ubuntu-bionic --tag \"${kframework_k_docker_repo}:${bionic_commit_tag}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNjA3MQ=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc4MjcwMA==", "bodyText": "It appears not to work. I think the issue is that the docker group inside the container does not map to the same gid as the docker group on the lxc host. See this thread for a similar issue seen with Azure containers microsoft/azure-pipelines-agent#2056.\nI don't think it's really worth it investigating how to get the group maps to work, since I don't think using sudo in the main CI file is that much of a problem.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416782700", "createdAt": "2020-04-28T17:11:08Z", "author": {"login": "ehildenb"}, "path": "Jenkinsfile", "diffHunk": "@@ -381,54 +386,70 @@ pipeline {\n         GITHUB_TOKEN          = credentials('rv-jenkins')\n         GIT_SSH_COMMAND       = 'ssh -o StrictHostKeyChecking=accept-new'\n       }\n-      steps {\n-        unstash \"src\"\n-        unstash \"binary\"\n-        dir('bionic') { unstash 'bionic' }\n-        dir('buster') { unstash 'buster' }\n-        dir('arch')   { unstash 'arch'   }\n-        dir('mojave') { unstash 'mojave' }\n-        sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n-          sh '''\n-            git remote add release 'ssh://github.com/kframework/k.git'\n-            git tag \"${K_RELEASE_TAG}\" \"${SHORT_REV}\"\n-            git push release \"${K_RELEASE_TAG}\"\n-\n-            mv bionic/kframework_${VERSION}_amd64.deb bionic/kframework_${VERSION}_amd64_bionic.deb\n-            mv buster/kframework_${VERSION}_amd64.deb buster/kframework_${VERSION}_amd64_buster.deb\n-            LOCAL_BOTTLE_NAME=$(echo mojave/kframework--${VERSION}.mojave.bottle*.tar.gz)\n-            BOTTLE_NAME=`cd mojave && echo kframework--${VERSION}.mojave.bottle*.tar.gz | sed 's!kframework--!kframework-!'`\n-            mv $LOCAL_BOTTLE_NAME mojave/$BOTTLE_NAME\n-            echo \"K Framework Release ${K_RELEASE_TAG}\"  > release.md\n-            echo \"\"                                     >> release.md\n-            cat k-distribution/INSTALL.md               >> release.md\n-            hub release create                                                                         \\\n-                --attach kframework-${VERSION}-src.tar.gz\"#Source tar.gz\"                              \\\n-                --attach bionic/kframework_${VERSION}_amd64_bionic.deb\"#Ubuntu Bionic (18.04) Package\" \\\n-                --attach buster/kframework_${VERSION}_amd64_buster.deb\"#Debian Buster (10) Package\"    \\\n-                --attach arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.xz\"#Arch Package\"             \\\n-                --attach mojave/$BOTTLE_NAME\"#Mac OS X Homebrew Bottle\"                                \\\n-                --attach k-nightly.tar.gz\"#Platform Indepdendent K Binary\"                             \\\n-                --file release.md \"${K_RELEASE_TAG}\"\n-          '''\n-        }\n-        dir(\"homebrew-k\") {\n-          git url: 'git@github.com:kframework/homebrew-k.git', branch: 'brew-release-kframework'\n-          sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n+      stages {\n+        stage('DockerHub Images') {\n+          environment { DOCKERHUB_TOKEN = credentials('dockerhub-ehildenb') }\n+          steps {\n+            dir('bionic') { unstash 'bionic' }\n             sh '''\n-              git checkout master\n-              git merge brew-release-$PACKAGE\n-              git push origin master\n-              git push origin -d brew-release-$PACKAGE\n+                sudo docker login --username ehildenb --password \"${DOCKERHUB_TOKEN}\"\n+\n+                bionic_commit_tag=\"ubuntu-bionic-${SHORT_REV}\"\n+                kframework_k_docker_repo=\"runtimeverificationinc/kframework-k\"\n+                mv bionic/kframework_${VERSION}_amd64.deb kframework_amd64_bionic.deb\n+                sudo docker image build . --file package/docker/Dockerfile.ubuntu-bionic --tag \"${kframework_k_docker_repo}:${bionic_commit_tag}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNjA3MQ=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4NDA5Ng==", "bodyText": "Doesn't running docker with sudo mean that the root user inside the container has root access outside the container? Isn't that a security problem?", "url": "https://github.com/kframework/k/pull/1228#discussion_r417984096", "createdAt": "2020-04-30T12:49:31Z", "author": {"login": "dwightguth"}, "path": "Jenkinsfile", "diffHunk": "@@ -381,54 +386,70 @@ pipeline {\n         GITHUB_TOKEN          = credentials('rv-jenkins')\n         GIT_SSH_COMMAND       = 'ssh -o StrictHostKeyChecking=accept-new'\n       }\n-      steps {\n-        unstash \"src\"\n-        unstash \"binary\"\n-        dir('bionic') { unstash 'bionic' }\n-        dir('buster') { unstash 'buster' }\n-        dir('arch')   { unstash 'arch'   }\n-        dir('mojave') { unstash 'mojave' }\n-        sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n-          sh '''\n-            git remote add release 'ssh://github.com/kframework/k.git'\n-            git tag \"${K_RELEASE_TAG}\" \"${SHORT_REV}\"\n-            git push release \"${K_RELEASE_TAG}\"\n-\n-            mv bionic/kframework_${VERSION}_amd64.deb bionic/kframework_${VERSION}_amd64_bionic.deb\n-            mv buster/kframework_${VERSION}_amd64.deb buster/kframework_${VERSION}_amd64_buster.deb\n-            LOCAL_BOTTLE_NAME=$(echo mojave/kframework--${VERSION}.mojave.bottle*.tar.gz)\n-            BOTTLE_NAME=`cd mojave && echo kframework--${VERSION}.mojave.bottle*.tar.gz | sed 's!kframework--!kframework-!'`\n-            mv $LOCAL_BOTTLE_NAME mojave/$BOTTLE_NAME\n-            echo \"K Framework Release ${K_RELEASE_TAG}\"  > release.md\n-            echo \"\"                                     >> release.md\n-            cat k-distribution/INSTALL.md               >> release.md\n-            hub release create                                                                         \\\n-                --attach kframework-${VERSION}-src.tar.gz\"#Source tar.gz\"                              \\\n-                --attach bionic/kframework_${VERSION}_amd64_bionic.deb\"#Ubuntu Bionic (18.04) Package\" \\\n-                --attach buster/kframework_${VERSION}_amd64_buster.deb\"#Debian Buster (10) Package\"    \\\n-                --attach arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.xz\"#Arch Package\"             \\\n-                --attach mojave/$BOTTLE_NAME\"#Mac OS X Homebrew Bottle\"                                \\\n-                --attach k-nightly.tar.gz\"#Platform Indepdendent K Binary\"                             \\\n-                --file release.md \"${K_RELEASE_TAG}\"\n-          '''\n-        }\n-        dir(\"homebrew-k\") {\n-          git url: 'git@github.com:kframework/homebrew-k.git', branch: 'brew-release-kframework'\n-          sshagent(['2b3d8d6b-0855-4b59-864a-6b3ddf9c9d1a']) {\n+      stages {\n+        stage('DockerHub Images') {\n+          environment { DOCKERHUB_TOKEN = credentials('dockerhub-ehildenb') }\n+          steps {\n+            dir('bionic') { unstash 'bionic' }\n             sh '''\n-              git checkout master\n-              git merge brew-release-$PACKAGE\n-              git push origin master\n-              git push origin -d brew-release-$PACKAGE\n+                sudo docker login --username ehildenb --password \"${DOCKERHUB_TOKEN}\"\n+\n+                bionic_commit_tag=\"ubuntu-bionic-${SHORT_REV}\"\n+                kframework_k_docker_repo=\"runtimeverificationinc/kframework-k\"\n+                mv bionic/kframework_${VERSION}_amd64.deb kframework_amd64_bionic.deb\n+                sudo docker image build . --file package/docker/Dockerfile.ubuntu-bionic --tag \"${kframework_k_docker_repo}:${bionic_commit_tag}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyNjA3MQ=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5Mjc2MjQ1OnYy", "diffSide": "RIGHT", "path": "package/docker/Dockerfile.ubuntu-bionic", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo1NTo1NlrOGNbL8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjo1MTozN1rOGOnziA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczMDA5Ng==", "bodyText": "the same problem with ARG exists here.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416730096", "createdAt": "2020-04-28T15:55:56Z", "author": {"login": "dwightguth"}, "path": "package/docker/Dockerfile.ubuntu-bionic", "diffHunk": "@@ -0,0 +1,36 @@\n+FROM ubuntu:bionic\n+\n+ARG USER_ID=1000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTEwMg==", "bodyText": "Same response. I like arguments at the top of the file, and don't think this will reduce cacheing.", "url": "https://github.com/kframework/k/pull/1228#discussion_r416751102", "createdAt": "2020-04-28T16:24:26Z", "author": {"login": "ehildenb"}, "path": "package/docker/Dockerfile.ubuntu-bionic", "diffHunk": "@@ -0,0 +1,36 @@\n+FROM ubuntu:bionic\n+\n+ARG USER_ID=1000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczMDA5Ng=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4NTQxNg==", "bodyText": "Moved it back.", "url": "https://github.com/kframework/k/pull/1228#discussion_r417985416", "createdAt": "2020-04-30T12:51:37Z", "author": {"login": "ehildenb"}, "path": "package/docker/Dockerfile.ubuntu-bionic", "diffHunk": "@@ -0,0 +1,36 @@\n+FROM ubuntu:bionic\n+\n+ARG USER_ID=1000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczMDA5Ng=="}, "originalCommit": {"oid": "8bf9f5436405f265acebe59e3a98020975872b78"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3128, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}