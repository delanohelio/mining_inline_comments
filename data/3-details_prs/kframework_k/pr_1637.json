{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NzAyNzg2", "number": 1637, "title": "Better defined ARRAY Lookup", "bodyText": "From the discussion in kframework/kore#2253", "createdAt": "2020-11-10T19:04:49Z", "url": "https://github.com/kframework/k/pull/1637", "merged": true, "mergeCommit": {"oid": "258d7017af4fb951c5710f5fc38ddc3401a84af8"}, "closed": true, "closedAt": "2020-11-11T21:50:15Z", "author": {"login": "gtrepta"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbOEy9AH2gAyNTE4NzAyNzg2OmEzMmI4MjZjNTg4YzdlNjEzNGU3ZWJhODhjMDQyZWY0NzZhMDE0ZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbkSyxAH2gAyNTE4NzAyNzg2OmQwOTYxOWM4YTUwZjBjY2UzOGJiNDYxMjRjMmEwZDkxOTViMDNjNzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a32b826c588c7e6134e7eba88c042ef476a014f6", "author": {"user": {"login": "gtrepta", "name": null}}, "url": "https://github.com/kframework/k/commit/a32b826c588c7e6134e7eba88c042ef476a014f6", "committedDate": "2020-11-10T18:57:06Z", "message": "domains.md: Make ARRAY lookup semantics better defined"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTIxOTky", "url": "https://github.com/kframework/k/pull/1637#pullrequestreview-527521992", "createdAt": "2020-11-10T19:06:09Z", "commit": {"oid": "a32b826c588c7e6134e7eba88c042ef476a014f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowNjowOVrOHwrksw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowNjowOVrOHwrksw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwNzYwMw==", "bodyText": "I think for completeness you need to say 0 <=Int IDX andBool IDX <Int size(L)", "url": "https://github.com/kframework/k/pull/1637#discussion_r520807603", "createdAt": "2020-11-10T19:06:09Z", "author": {"login": "ehildenb"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -159,7 +159,8 @@ of any of the syntax defined in any of these modules.\n \n   rule makeArray(I::Int, D::KItem) => arr(.List, I, D)\n \n-  rule arr(L::List, _, D::KItem) [ IDX::Int ] => #if IDX >=Int size(L) #then D #else L[IDX] #fi\n+  rule arr(L::List, _, _       ) [ IDX::Int ] => L[IDX] requires IDX <Int size(L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a32b826c588c7e6134e7eba88c042ef476a014f6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeef8b27bb69db8269bbb25dd8c13ba48aa3c205", "author": {"user": {"login": "gtrepta", "name": null}}, "url": "https://github.com/kframework/k/commit/aeef8b27bb69db8269bbb25dd8c13ba48aa3c205", "committedDate": "2020-11-10T19:15:00Z", "message": "domains.md: Require positive index for array lookup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTMyMTMz", "url": "https://github.com/kframework/k/pull/1637#pullrequestreview-527532133", "createdAt": "2020-11-10T19:19:56Z", "commit": {"oid": "aeef8b27bb69db8269bbb25dd8c13ba48aa3c205"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOToxOTo1NlrOHwsDgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOToxOTo1NlrOHwsDgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNTQ4OQ==", "bodyText": "These rules don't cover the case that IDX <Int 0 though, which we should cover I think to keep it total. I would stick with the owise rule.", "url": "https://github.com/kframework/k/pull/1637#discussion_r520815489", "createdAt": "2020-11-10T19:19:56Z", "author": {"login": "ehildenb"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -159,8 +159,8 @@ of any of the syntax defined in any of these modules.\n \n   rule makeArray(I::Int, D::KItem) => arr(.List, I, D)\n \n-  rule arr(L::List, _, _       ) [ IDX::Int ] => L[IDX] requires IDX <Int size(L)\n-  rule arr(_      , _, D::KItem) [ _        ] => D      [owise]\n+  rule arr(L::List, _, _       ) [ IDX::Int ] => L[IDX] requires 0 <=Int IDX andBool IDX  <Int size(L)\n+  rule arr(L::List, _, D::KItem) [ IDX::Int ] => D      requires 0 <=Int IDX andBool IDX >=Int size(L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeef8b27bb69db8269bbb25dd8c13ba48aa3c205"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ebf961bebd4fe71d207b607cc71a81ca6e058ca", "author": {"user": {"login": "gtrepta", "name": null}}, "url": "https://github.com/kframework/k/commit/7ebf961bebd4fe71d207b607cc71a81ca6e058ca", "committedDate": "2020-11-10T19:28:14Z", "message": "domains.md: Allow negative indices into an array"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4670caf886df5a0e5a70e342d83362d386301d62", "author": {"user": {"login": "gtrepta", "name": null}}, "url": "https://github.com/kframework/k/commit/4670caf886df5a0e5a70e342d83362d386301d62", "committedDate": "2020-11-10T19:47:42Z", "message": "k-distrubition/tests/regression-new: Add haskell tests for arrays"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTc5Mjg3", "url": "https://github.com/kframework/k/pull/1637#pullrequestreview-527579287", "createdAt": "2020-11-10T20:25:24Z", "commit": {"oid": "4670caf886df5a0e5a70e342d83362d386301d62"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoyNToyNVrOHwuTdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoyNToyNVrOHwuTdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1MjM0MA==", "bodyText": "Should we look up the size from the second argument of arr instead? Computing size(L) is O(log n).", "url": "https://github.com/kframework/k/pull/1637#discussion_r520852340", "createdAt": "2020-11-10T20:25:25Z", "author": {"login": "ttuegel"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -159,7 +159,8 @@ of any of the syntax defined in any of these modules.\n \n   rule makeArray(I::Int, D::KItem) => arr(.List, I, D)\n \n-  rule arr(L::List, _, D::KItem) [ IDX::Int ] => #if IDX >=Int size(L) #then D #else L[IDX] #fi\n+  rule arr(L::List, _, _       ) [ IDX::Int ] => L[IDX] requires 0 <=Int IDX andBool IDX  <Int size(L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4670caf886df5a0e5a70e342d83362d386301d62"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDA1Njk1", "url": "https://github.com/kframework/k/pull/1637#pullrequestreview-528405695", "createdAt": "2020-11-11T17:53:03Z", "commit": {"oid": "4670caf886df5a0e5a70e342d83362d386301d62"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzo1MzowNFrOHxYCGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzo1MzowNFrOHxYCGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUzNjAyNg==", "bodyText": "so, the idea is that you can specify a length for an array but the List only creates elements up to the highest offset that was actually accessed. It's a lazy initialization. So the length of the array and the length of the list are not necessarily the same, but the list ought to never be longer than the array.", "url": "https://github.com/kframework/k/pull/1637#discussion_r521536026", "createdAt": "2020-11-11T17:53:04Z", "author": {"login": "dwightguth"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -159,7 +159,8 @@ of any of the syntax defined in any of these modules.\n \n   rule makeArray(I::Int, D::KItem) => arr(.List, I, D)\n \n-  rule arr(L::List, _, D::KItem) [ IDX::Int ] => #if IDX >=Int size(L) #then D #else L[IDX] #fi\n+  rule arr(L::List, _, _       ) [ IDX::Int ] => L[IDX] requires 0 <=Int IDX andBool IDX  <Int size(L)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1MjM0MA=="}, "originalCommit": {"oid": "4670caf886df5a0e5a70e342d83362d386301d62"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d09619c8a50f0cce38bb46124c2a0d9195b03c77", "author": {"user": {"login": "rv-jenkins", "name": null}}, "url": "https://github.com/kframework/k/commit/d09619c8a50f0cce38bb46124c2a0d9195b03c77", "committedDate": "2020-11-11T20:50:18Z", "message": "Merge branch 'master' into array_frontend"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2252, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}