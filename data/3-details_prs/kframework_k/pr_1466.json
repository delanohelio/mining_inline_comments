{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3OTUzODA1", "number": 1466, "title": "Convert lambda to markdown", "bodyText": "Fixes: #1410\nAnd use the bison parser for programs.\nI run the tests on my machine before and after the switch to the bison parser and the runtimes are exactly the same.\nThe input files are too small to see a difference here.\nThere are a few other issues with the content of the comments (regarding latex usage), but they might require a complete overhaul of the entire tutorial so I didn't touch them.", "createdAt": "2020-07-28T17:37:47Z", "url": "https://github.com/kframework/k/pull/1466", "merged": true, "mergeCommit": {"oid": "6df5a502855478445949ccf4d63217a3970215cb"}, "closed": true, "closedAt": "2020-08-04T19:26:53Z", "author": {"login": "radumereuta"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5tRS1gBqjM1OTk3NjMxOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7q3o8AH2gAyNDU3OTUzODA1OjZhZjgwZGY3MzQ3NjViYzIwY2M5YmE5MWFjZWMxN2I1MTc0YmRiNDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "260a95584db81dedea1e29162f0b34b994bbf3c1", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/260a95584db81dedea1e29162f0b34b994bbf3c1", "committedDate": "2020-07-28T17:24:30Z", "message": "Convert lambda to markdown\n\nand use the bison parser for programs"}, "afterCommit": {"oid": "fe2821016caab1b0fa4a7ab50dbdf8d64264ef5e", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/fe2821016caab1b0fa4a7ab50dbdf8d64264ef5e", "committedDate": "2020-07-29T16:04:00Z", "message": "Convert lambda to markdown"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NzIwMjYw", "url": "https://github.com/kframework/k/pull/1466#pullrequestreview-457720260", "createdAt": "2020-07-29T17:05:50Z", "commit": {"oid": "fe2821016caab1b0fa4a7ab50dbdf8d64264ef5e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzowNTo1MFrOG5B3Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzowNTo1MFrOG5B3Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ1MjU1MQ==", "bodyText": "Use the format used in other markdown files for the copyright instead. Look at k-distribution/tutorial/1_k/README.md for an example.", "url": "https://github.com/kframework/k/pull/1466#discussion_r462452551", "createdAt": "2020-07-29T17:05:50Z", "author": {"login": "ehildenb"}, "path": "k-distribution/tutorial/1_k/1_lambda/lesson_9/lambda.md", "diffHunk": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2014-2019 K Team. All Rights Reserved.\n+<!--- Copyright (c) 2014-2020 K Team. All Rights Reserved. --->\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe2821016caab1b0fa4a7ab50dbdf8d64264ef5e"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjQxMzM2", "url": "https://github.com/kframework/k/pull/1466#pullrequestreview-458641336", "createdAt": "2020-07-30T18:11:05Z", "commit": {"oid": "8ce14922096a0e59b44ac1a952a653b6edf860dc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoxMTowNVrOG5uUvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoxMTo0OVrOG5uWOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MDk4OQ==", "bodyText": "let's remove this comment and replace it with something talking about how markdown works, because this is not accurate otherwise.", "url": "https://github.com/kframework/k/pull/1466#discussion_r463180989", "createdAt": "2020-07-30T18:11:05Z", "author": {"login": "dwightguth"}, "path": "k-distribution/tutorial/1_k/1_lambda/lesson_9/lambda.md", "diffHunk": "@@ -1,4 +1,6 @@\n-// Copyright (c) 2014-2019 K Team. All Rights Reserved.\n+---\n+copyright: Copyright (c) 2014-2020 K Team. All Rights Reserved.\n+---\n \n // C/Java-like comments like this one are completely ignored by the K tool.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce14922096a0e59b44ac1a952a653b6edf860dc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MTM3MA==", "bodyText": "let's adjust the language here too.", "url": "https://github.com/kframework/k/pull/1466#discussion_r463181370", "createdAt": "2020-07-30T18:11:49Z", "author": {"login": "dwightguth"}, "path": "k-distribution/tutorial/1_k/1_lambda/lesson_9/lambda.md", "diffHunk": "@@ -13,103 +15,103 @@ several lines, are ignored, too.  */\n // of the generated Latex documentation, that is, before \"\\begin{document}\"\n // (e.g., when your comment includes macros, or defines a title, etc.)\n \n-/*!\n-\\setlength{\\parindent}{1em}\n-\\title{Tutorial 1 --- LAMBDA}\n-\\author {Grigore Ro\\c{s}u (\\texttt{grosu@illinois.edu})}\n-\\organization{University of Illinois at Urbana-Champaign}\n-*/\n+Tutorial 1 --- LAMBDA\n+=====================\n \n-/*@ \\section{Abstract}\n-This file defines a simple functional language in \\K, called LAMBDA,\n+Author: Grigore Ro\u0219u (grosu@illinois.edu)  \n+Organization: University of Illinois at Urbana-Champaign\n+\n+### Abstract\n+This file defines a simple functional language in **K**, called LAMBDA,\n using a substitution style.  The explicit objective here is to teach some\n-\\K concepts and how they work in the K tool, and not to teach\n-$\\lambda$-calculus or to argue for one definitional style against another\n+**K** concepts and how they work in the K tool, and not to teach\n+\u03bb-calculus or to argue for one definitional style against another\n (e.g., some may prefer environment/closure-based definitions of such\n languages).\n \n Note that the subsequent definition is so simple, that it hardly shows any\n-of the strengths of \\K.  Perhaps the most interesting \\K aspect it shows is\n+of the strengths of **K**.  Perhaps the most interesting **K** aspect it shows is\n that substitution can be defined fully generically, and then used to give\n semantics to various constructs in various languages.\n \n-\\paragraph{Note:}{\n-\\K follows the\n-\\href{https://en.wikipedia.org/wiki/Literate_programming}{literate\n-programming} approach.  The various semantic features defined in a \\K\n+Note:\n+ **K** follows the\n+[literate programming](https://en.wikipedia.org/wiki/Literate_programming)\n+approach. The various semantic features defined in a **K**\n module can be reordered at will and can be commented using normal\n comments like in C/C++/Java.  If those comments start with\n-`\\texttt{@}' preceded by no space (e.g.,\n-`\\texttt{//{@} {\\textbackslash}section\\{Variable declarations\\}}'\n+`\\texttt{@}` preceded by no space (e.g.,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce14922096a0e59b44ac1a952a653b6edf860dc"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDQ0NjU3", "url": "https://github.com/kframework/k/pull/1466#pullrequestreview-459444657", "createdAt": "2020-07-31T20:16:33Z", "commit": {"oid": "95bb3c1dbc698c92ffa562dc0a082a1f6e40cafc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoxNjozNFrOG6VCoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoxNjozNFrOG6VCoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxNTMyOQ==", "bodyText": "this is another reference that should probably be adjusted", "url": "https://github.com/kframework/k/pull/1466#discussion_r463815329", "createdAt": "2020-07-31T20:16:34Z", "author": {"login": "dwightguth"}, "path": "k-distribution/tutorial/1_k/1_lambda/lesson_9/lambda.md", "diffHunk": "@@ -0,0 +1,145 @@\n+---\n+copyright: Copyright (c) 2014-2020 K Team. All Rights Reserved.\n+---\n+\n+**K** code can be nested inside Markdown using annotated code blocks.\n+Use the tag `k` to tell the compiler which blocks to select.\n+\n+Inside `.k` files, C/Java-like comments are available.\n+```k\n+// Single line comment\n+/* Multiline\n+comments */\n+```\n+\n+Tutorial 1 --- LAMBDA\n+=====================\n+\n+Author: Grigore Ro\u0219u (grosu@illinois.edu)  \n+Organization: University of Illinois at Urbana-Champaign\n+\n+### Abstract\n+This file defines a simple functional language in **K**, called LAMBDA,\n+using a substitution style.  The explicit objective here is to teach some\n+**K** concepts and how they work in the K tool, and not to teach\n+\u03bb-calculus or to argue for one definitional style against another\n+(e.g., some may prefer environment/closure-based definitions of such\n+languages).\n+\n+Note that the subsequent definition is so simple, that it hardly shows any\n+of the strengths of **K**.  Perhaps the most interesting **K** aspect it shows is\n+that substitution can be defined fully generically, and then used to give\n+semantics to various constructs in various languages.\n+\n+Note:\n+ **K** follows the\n+[literate programming](https://en.wikipedia.org/wiki/Literate_programming)\n+approach. The various semantic features defined in a **K**\n+module can be reordered at will and can be commented using normal\n+comments like in C/C++/Java.\n+While comments are useful in general, they can annoy the expert user\n+of **K**. To turn them off, you can do one of the following (unless you\n+want to remove them manually):  \n+(1) Use an [editor](https://github.com/kframework/k-editor-support) which can\n+hide or highlight Markdown and conventional C-like comments; or  \n+(2) Run `kompile --debug <def>`. Inside `./.kompiled-xxx/.md2.k/` you will find\n+all the K code extracted from the markdown files as used for compilation.\n+\n+### Substitution\n+We need the predefined substitution module, so we require it with the command\n+below.  Then we should make sure we import its module called SUBSTITUTION\n+in our LAMBDA module below.\n+\n+```k\n+require \"substitution.md\"\n+\n+module LAMBDA\n+  imports DOMAINS\n+  imports SUBSTITUTION\n+```\n+### Basic Call-by-value \u03bb-Calculus\n+\n+We first define a conventional call-by-value \u03bb-calculus, making sure\n+we declare the lambda abstraction construct to be a binder, the\n+lambda application to be strict, and the parentheses used for grouping as\n+a bracket.\n+\n+Note:\n+Syntax in **K** is defined using the familiar BNF notation, with\n+terminals enclosed in quotes and nonterminals starting with capital\n+letters. **K** actually extends BNF with several attributes, which will be\n+described in this tutorial.\n+\n+Note:\n+The `strict` constructs can evaluate their arguments in any (fully\n+interleaved) order.\n+\n+\n+The initial syntax of our \u03bb-calculus:\n+```k\n+  syntax Val ::= KVar\n+               | \"lambda\" KVar \".\" Exp  [binder, latex(\\lambda{#1}.{#2})]\n+  syntax Exp ::= Val\n+               | Exp Exp              [left, strict]\n+               | \"(\" Exp \")\"          [bracket]\n+  syntax KResult ::= Val\n+```\n+### \u03b2-reduction\n+\n+```k\n+  rule (lambda X:KVar . E:Exp) V:Val => E[V / X]\n+```\n+\n+### Integer and Boolean Builtins\n+The LAMBDA arithmetic and Boolean expression constructs are simply rewritten\n+to their builtin counterparts once their arguments are evaluated.\n+The operations with subscripts in the right-hand sides of the rules below are\n+builtin and come with the corresponding builtin sort; they are actually\n+written like `+Int` in ASCII, but they have LaTeX attributes to be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95bb3c1dbc698c92ffa562dc0a082a1f6e40cafc"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b7e1b3f501c73b6c17e1cddf1d91276bebd4f45", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/2b7e1b3f501c73b6c17e1cddf1d91276bebd4f45", "committedDate": "2020-07-31T21:03:20Z", "message": "Rename extension to md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "115ea170e2008759992e3ccebb6ac3e00b0bb606", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/115ea170e2008759992e3ccebb6ac3e00b0bb606", "committedDate": "2020-07-31T21:03:43Z", "message": "Convert lambda to markdown"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95bb3c1dbc698c92ffa562dc0a082a1f6e40cafc", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/95bb3c1dbc698c92ffa562dc0a082a1f6e40cafc", "committedDate": "2020-07-30T20:00:33Z", "message": "Update comments comments."}, "afterCommit": {"oid": "115ea170e2008759992e3ccebb6ac3e00b0bb606", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/115ea170e2008759992e3ccebb6ac3e00b0bb606", "committedDate": "2020-07-31T21:03:43Z", "message": "Convert lambda to markdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42b66572b5945c88d34eeeee49c6cf032bde7cd7", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/42b66572b5945c88d34eeeee49c6cf032bde7cd7", "committedDate": "2020-08-03T16:18:21Z", "message": "Merge branch 'master' into lambdaMD"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDU5Njgy", "url": "https://github.com/kframework/k/pull/1466#pullrequestreview-461059682", "createdAt": "2020-08-04T18:21:39Z", "commit": {"oid": "42b66572b5945c88d34eeeee49c6cf032bde7cd7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af80df734765bc20cc9ba91acec17b5174bdb47", "author": {"user": {"login": "radumereuta", "name": "Radu Mereuta"}}, "url": "https://github.com/kframework/k/commit/6af80df734765bc20cc9ba91acec17b5174bdb47", "committedDate": "2020-08-04T18:24:24Z", "message": "Merge branch 'master' into lambdaMD"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2331, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}