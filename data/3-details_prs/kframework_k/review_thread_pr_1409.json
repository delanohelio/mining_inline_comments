{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDU4MDA1", "number": 1409, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjozNzo1M1rOENVyow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo0MDo1OFrOENV2kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDIzOTcxOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/checkWarns/Makefile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjozNzo1M1rOGv-BnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjozODo0MFrOGv-DFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1MjQ3Nw==", "bodyText": "Hmmmm, why is this here? Is there a test in this directory which has an existential on the RHS (so it was now failing for the wrong reason?)\nMaybe we shouldn't be failing until we collect all the warnings then.", "url": "https://github.com/kframework/k/pull/1409#discussion_r452952477", "createdAt": "2020-07-10T16:37:53Z", "author": {"login": "ehildenb"}, "path": "k-distribution/tests/regression-new/checkWarns/Makefile", "diffHunk": "@@ -1,4 +1,4 @@\n KOMPILE_FLAGS=-w2e\n-KOMPILE_BACKEND=llvm\n+KOMPILE_BACKEND=haskell", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c108297e0e58119a4be4d70f781dbdf30750a62d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1Mjg1NQ==", "bodyText": "Or maybe we should be running these checks tests with both backends all the time.\nIt makes me nervous that we'll be missing some warnings/errors because we're going through the slightly different kompile pipelines.", "url": "https://github.com/kframework/k/pull/1409#discussion_r452952855", "createdAt": "2020-07-10T16:38:40Z", "author": {"login": "ehildenb"}, "path": "k-distribution/tests/regression-new/checkWarns/Makefile", "diffHunk": "@@ -1,4 +1,4 @@\n KOMPILE_FLAGS=-w2e\n-KOMPILE_BACKEND=llvm\n+KOMPILE_BACKEND=haskell", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1MjQ3Nw=="}, "originalCommit": {"oid": "c108297e0e58119a4be4d70f781dbdf30750a62d"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDI0OTc4OnYy", "diffSide": "RIGHT", "path": "kernel/src/main/java/org/kframework/compile/checks/CheckRHSVariables.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo0MDo1OFrOGv-Hrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjo0MDo1OFrOGv-Hrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk1NDAzMA==", "bodyText": "Why are macro allowed to have existential variables on the RHS?\nPlease add test-cases exercising each of the clauses in this big conjunct.", "url": "https://github.com/kframework/k/pull/1409#discussion_r452954030", "createdAt": "2020-07-10T16:40:58Z", "author": {"login": "ehildenb"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckRHSVariables.java", "diffHunk": "@@ -29,33 +30,37 @@\n  */\n public class CheckRHSVariables {\n     private final Set<KEMException> errors;\n+    private final boolean errorExistential;\n \n-    public CheckRHSVariables(Set<KEMException> errors) {\n+    public CheckRHSVariables(Set<KEMException> errors, boolean errorExistential) {\n         this.errors = errors;\n+        this.errorExistential = errorExistential;\n     }\n     private void check(Rule rule) {\n         resetVars();\n         Set<String> unboundVariableNames = getUnboundVarNames(rule);\n-        gatherVars(true, rule.body());\n-        gatherVars(false, rule.requires());\n-        gatherVars(false, rule.ensures());\n+        boolean isMacro = ExpandMacros.isMacro(rule);\n+        boolean errorExistential = !isMacro && this.errorExistential && !(rule.att().contains(Att.LABEL()) && rule.att().get(Att.LABEL()).equals(\"STDIN-STREAM.stdinUnblock\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c108297e0e58119a4be4d70f781dbdf30750a62d"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2951, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}