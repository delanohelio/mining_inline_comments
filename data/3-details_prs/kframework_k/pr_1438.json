{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMzAyMzg5", "number": 1438, "title": "Report location of import on error importing something", "bodyText": "Fixes #1429", "createdAt": "2020-07-17T17:36:05Z", "url": "https://github.com/kframework/k/pull/1438", "merged": true, "mergeCommit": {"oid": "84ffaaecfa16db3d844695c18743ffb4d21fff2b"}, "closed": true, "closedAt": "2020-07-17T19:21:46Z", "author": {"login": "dwightguth"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc13XsyAH2gAyNDUxMzAyMzg5Ojg2ZDQ5OWVjYTZlMDk3NzZkZWEwZTBlNzAwZmZlN2E1Y2M4ZjY2NzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc14nbUgFqTQ1MDg5MTg3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "86d499eca6e09776dea0e0e700ffe7a5cc8f6672", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/86d499eca6e09776dea0e0e700ffe7a5cc8f6672", "committedDate": "2020-07-17T17:34:44Z", "message": "track attributes of imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6d3ce20ba0b6c3f8ae09361b5df9018ec0aa0fd", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/b6d3ce20ba0b6c3f8ae09361b5df9018ec0aa0fd", "committedDate": "2020-07-17T17:34:44Z", "message": "add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODg4MjQ4", "url": "https://github.com/kframework/k/pull/1438#pullrequestreview-450888248", "createdAt": "2020-07-17T18:55:53Z", "commit": {"oid": "b6d3ce20ba0b6c3f8ae09361b5df9018ec0aa0fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo1NTo1M1rOGzd2mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo1NTo1M1rOGzd2mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxOTY3Mg==", "bodyText": "Hmmmm, shouldn't we be correctly encoding/decoding the imports to JSON?", "url": "https://github.com/kframework/k/pull/1438#discussion_r456619672", "createdAt": "2020-07-17T18:55:53Z", "author": {"login": "ehildenb"}, "path": "kernel/src/main/java/org/kframework/parser/json/JsonParser.java", "diffHunk": "@@ -155,8 +156,8 @@ public static FlatModule toFlatModule(JsonObject data) throws IOException {\n         String name = data.getString(\"name\");\n \n         JsonArray jsonimports = data.getJsonArray(\"imports\");\n-        Set<String> imports = new HashSet<>();\n-        jsonimports.getValuesAs(JsonString.class).forEach(i -> imports.add(i.getString()));\n+        Set<Import> imports = new HashSet<>();\n+        jsonimports.getValuesAs(JsonString.class).forEach(i -> imports.add(Import.apply(i.getString(), Att.empty())));\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6d3ce20ba0b6c3f8ae09361b5df9018ec0aa0fd"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODg5ODY2", "url": "https://github.com/kframework/k/pull/1438#pullrequestreview-450889866", "createdAt": "2020-07-17T18:58:33Z", "commit": {"oid": "b6d3ce20ba0b6c3f8ae09361b5df9018ec0aa0fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo1ODozM1rOGzd7ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo1ODozM1rOGzd7ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYyMDkzOA==", "bodyText": "Because the JSON encoding is directly an encoding of the FlatModule, I think it should be a faithful encoding of the actual Import, not just the name.", "url": "https://github.com/kframework/k/pull/1438#discussion_r456620938", "createdAt": "2020-07-17T18:58:33Z", "author": {"login": "ehildenb"}, "path": "kore/src/main/scala/org/kframework/definition/outer-ext.scala", "diffHunk": "@@ -61,7 +63,32 @@ object FlatModule {\n   }\n }\n \n-case class FlatModule(name: String, imports: Set[String], localSentences: Set[Sentence], @(Nonnull@param) val att: Att = Att.empty)\n+case class Import(name: String, att: Att = Att.empty) extends HasLocation {\n+  override def location(): Optional[Location] = att.getOptional(classOf[Location])\n+  override def source(): Optional[Source] = att.getOptional(classOf[Source])\n+}\n+\n+object Import {\n+  val syntaxString = \"$SYNTAX\"\n+\n+  def isSyntax(name: String): Boolean = name.endsWith(syntaxString)\n+\n+  def asSyntax(_import: Import): Import =\n+    if (isSyntax(_import.name))\n+      _import\n+    else\n+      Import(_import.name ++ syntaxString, _import.att)\n+\n+  def noSyntax(name: String): String =\n+    if (isSyntax(name))\n+      name.dropRight(syntaxString.length)\n+    else\n+      name\n+}\n+\n+\n+\n+case class FlatModule(name: String, imports: Set[Import], localSentences: Set[Sentence], @(Nonnull@param) val att: Att = Att.empty)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6d3ce20ba0b6c3f8ae09361b5df9018ec0aa0fd"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODkxODc4", "url": "https://github.com/kframework/k/pull/1438#pullrequestreview-450891878", "createdAt": "2020-07-17T19:01:49Z", "commit": {"oid": "b6d3ce20ba0b6c3f8ae09361b5df9018ec0aa0fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2308, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}