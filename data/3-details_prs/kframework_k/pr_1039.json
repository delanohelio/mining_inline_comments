{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzODExMDEw", "number": 1039, "title": "Significant performance improvements to parsing and compilation time", "bodyText": "Includes several different changes:\n\nwe now use lock-free synchronization in order to deal with initializing type inferencers in parser threads, which should remove a significant source of lock contention\nwe don't call ParseInModule.initialize() unless at least one bubble in the module is a cache miss\nwe call the implementation of ParseInModule.getCombinedGrammar lazily\nI fixed a serious performance problem in the constructor for ExpandMacros.", "createdAt": "2020-01-16T19:37:46Z", "url": "https://github.com/kframework/k/pull/1039", "merged": true, "mergeCommit": {"oid": "59e94d6d646626baa7745118f3a6575f92733d66"}, "closed": true, "closedAt": "2020-01-20T17:51:14Z", "author": {"login": "dwightguth"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6tcWlAH2gAyMzYzODExMDEwOjhkNjNjZDllYWFkNTRjNWVmM2Q3MjU4ZjM2YjdjNjgxODM4NTEyMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8PdYNgH2gAyMzYzODExMDEwOmI5MGJkMTA5NmE4MWU4MDkyMjg5NzdlYTIyNTliNmMwMDUxMzFlYWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8d63cd9eaad54c5ef3d7258f36b7c68183851225", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/8d63cd9eaad54c5ef3d7258f36b7c68183851225", "committedDate": "2020-01-15T22:39:14Z", "message": "fix synchronization for type inferencer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aab3291f89c2275ba5c7bcb94bc1fc5cd5b2b11", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/1aab3291f89c2275ba5c7bcb94bc1fc5cd5b2b11", "committedDate": "2020-01-16T18:22:51Z", "message": "fix blocking on set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "671e3d46986ebe9a3e15655a410c876428d57425", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/671e3d46986ebe9a3e15655a410c876428d57425", "committedDate": "2020-01-16T18:51:04Z", "message": "only initialize the lazily evaluated stuff if at least one cache miss\nexists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daa373efaf4e165dd6763a95ae9f0c745b8452f1", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/daa373efaf4e165dd6763a95ae9f0c745b8452f1", "committedDate": "2020-01-16T18:51:41Z", "message": "don't call implementation of getCombinedGrammar until we actually need\nto parse something"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bac28b6820c0712bc2fea1c5db2a74e55c3a67b", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/4bac28b6820c0712bc2fea1c5db2a74e55c3a67b", "committedDate": "2020-01-16T19:08:19Z", "message": "fix serious performance regression in ExpandMacros"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da422eb174c126bde83a79cc57cdb73ae2afe8f0", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/da422eb174c126bde83a79cc57cdb73ae2afe8f0", "committedDate": "2020-01-16T20:01:55Z", "message": "fix bug in macro performance fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MjM5ODE4", "url": "https://github.com/kframework/k/pull/1039#pullrequestreview-344239818", "createdAt": "2020-01-16T21:49:21Z", "commit": {"oid": "da422eb174c126bde83a79cc57cdb73ae2afe8f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTo0OToyMVrOFeortw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQyMTo0OToyMVrOFeortw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY2ODE1MQ==", "bodyText": "Can we factor out a private void loadModules() here which all of getExtensionModule(), getParsingModule(), and getDisambiguationModule() can use?", "url": "https://github.com/kframework/k/pull/1039#discussion_r367668151", "createdAt": "2020-01-16T21:49:21Z", "author": {"login": "ehildenb"}, "path": "kernel/src/main/java/org/kframework/parser/concrete2kore/ParseInModule.java", "diffHunk": "@@ -92,19 +100,51 @@ public Module seedModule() {\n      * @return Module with extra productions defined during parser generator.\n      */\n     public Module getExtensionModule() {\n-        return extensionModule;\n+        Module extM = extensionModule;\n+        if (extM == null) {\n+            Tuple3<Module, Module, Module> mods = RuleGrammarGenerator.getCombinedGrammarImpl(seedModule);\n+            extM = mods._1();\n+            disambModule = mods._2();\n+            parsingModule = mods._3();\n+            extensionModule = extM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da422eb174c126bde83a79cc57cdb73ae2afe8f0"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MzEzNzUw", "url": "https://github.com/kframework/k/pull/1039#pullrequestreview-344313750", "createdAt": "2020-01-17T01:09:24Z", "commit": {"oid": "da422eb174c126bde83a79cc57cdb73ae2afe8f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b90bd1096a81e809228977ea2259b6c005131eac", "author": {"user": {"login": "rv-jenkins", "name": null}}, "url": "https://github.com/kframework/k/commit/b90bd1096a81e809228977ea2259b6c005131eac", "committedDate": "2020-01-20T16:51:03Z", "message": "Merge branch 'master' into sync"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2489, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}