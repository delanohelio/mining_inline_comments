{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4ODA5NTMy", "number": 1671, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNToxNTozOFrOE-sy2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNToxNzozOFrOE-s2mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTgxMDgwOnYy", "diffSide": "LEFT", "path": "k-distribution/tests/regression-new/kprove-java/rhs-vars-broken-spec.k.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNToxNTozOFrOH7_tJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo1Njo1MlrOH8JIWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3MTc4MA==", "bodyText": "It seems to me this should be part of the test? Seems it's testing broken variables?", "url": "https://github.com/kframework/k/pull/1671#discussion_r532671780", "createdAt": "2020-11-30T15:15:38Z", "author": {"login": "ehildenb"}, "path": "k-distribution/tests/regression-new/kprove-java/rhs-vars-broken-spec.k.out", "diffHunk": "@@ -1,15 +1 @@\n #Top\n-[Warning] Critical: Found variable _ on right hand side of rule, not bound on\n-left hand side. Did you mean \"?_\"?\n-Note: this warning will become an error in subsequent releases.\n-\tSource(rhs-vars-broken-spec.k)\n-\tLocation(10,20,10,21)\n-[Warning] Compiler: Variable 'A' defined but not used. Prefix variable name\n-with underscore if this is intentional.\n-\tSource(rhs-vars-broken-spec.k)\n-\tLocation(12,20,12,21)\n-[Warning] Critical: Found variable A on right hand side of rule, not bound on\n-left hand side. Did you mean \"?A\"?\n-Note: this warning will become an error in subsequent releases.\n-\tSource(rhs-vars-broken-spec.k)\n-\tLocation(12,20,12,21)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f04459f54eb4e33afa8f466062cdd376e1d51c0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyNjIwMQ==", "bodyText": "@traiansf you are the author of this test. Is this what you had in mind?", "url": "https://github.com/kframework/k/pull/1671#discussion_r532826201", "createdAt": "2020-11-30T18:56:52Z", "author": {"login": "radumereuta"}, "path": "k-distribution/tests/regression-new/kprove-java/rhs-vars-broken-spec.k.out", "diffHunk": "@@ -1,15 +1 @@\n #Top\n-[Warning] Critical: Found variable _ on right hand side of rule, not bound on\n-left hand side. Did you mean \"?_\"?\n-Note: this warning will become an error in subsequent releases.\n-\tSource(rhs-vars-broken-spec.k)\n-\tLocation(10,20,10,21)\n-[Warning] Compiler: Variable 'A' defined but not used. Prefix variable name\n-with underscore if this is intentional.\n-\tSource(rhs-vars-broken-spec.k)\n-\tLocation(12,20,12,21)\n-[Warning] Critical: Found variable A on right hand side of rule, not bound on\n-left hand side. Did you mean \"?A\"?\n-Note: this warning will become an error in subsequent releases.\n-\tSource(rhs-vars-broken-spec.k)\n-\tLocation(12,20,12,21)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3MTc4MA=="}, "originalCommit": {"oid": "3f04459f54eb4e33afa8f466062cdd376e1d51c0"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTgyMDQyOnYy", "diffSide": "RIGHT", "path": "kernel/src/main/java/org/kframework/compile/checks/CheckRewrite.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNToxNzozOFrOH7_zGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODo1Mzo0NFrOH8JBDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3MzMwNQ==", "bodyText": "Are we not enabling this check on claim? They should have at least one rewrite as well, I would think?", "url": "https://github.com/kframework/k/pull/1671#discussion_r532673305", "createdAt": "2020-11-30T15:17:38Z", "author": {"login": "ehildenb"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckRewrite.java", "diffHunk": "@@ -130,7 +131,7 @@ public void apply(KApply k) {\n                 }\n             }\n         }.accept(body);\n-        if (!h.hasRewrite) {\n+        if (!h.hasRewrite && !isClaim) {\n             errors.add(KEMException.compilerError(\"Rules must have at least one rewrite.\", body));\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f04459f54eb4e33afa8f466062cdd376e1d51c0"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgyNDMzMw==", "bodyText": "There are several claims which don't contain rewrites:\nhttps://github.com/kframework/k/blob/master/k-distribution/tests/regression-new/kbmc/success-test1-spec-bmc.k#L13\nThere are a couple more but I can't find them right now.", "url": "https://github.com/kframework/k/pull/1671#discussion_r532824333", "createdAt": "2020-11-30T18:53:44Z", "author": {"login": "radumereuta"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckRewrite.java", "diffHunk": "@@ -130,7 +131,7 @@ public void apply(KApply k) {\n                 }\n             }\n         }.accept(body);\n-        if (!h.hasRewrite) {\n+        if (!h.hasRewrite && !isClaim) {\n             errors.add(KEMException.compilerError(\"Rules must have at least one rewrite.\", body));\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY3MzMwNQ=="}, "originalCommit": {"oid": "3f04459f54eb4e33afa8f466062cdd376e1d51c0"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2940, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}