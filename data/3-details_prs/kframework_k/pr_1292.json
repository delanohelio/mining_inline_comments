{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4OTUxOTQ5", "number": 1292, "title": "Upstream symbolic integer reasoning", "bodyText": "In KEVM and KWasm we often use the same body of lemmas which do arithmetic normalization/simplification for the Haskell backend.\nThis adds these lemmas to domains.k in the INT-SYMBOLIC module, and sets up a testing harness for these lemmas, both with and without SMT solver enabled, for these lemmas (and any other lemmas in domains.k we want to test in the future).\nThe arithmetic simplification lemmas come from KEVM directly, and were supplied by @ana-pantilie . The tests come from there as well, and I added a few.\nI'm making this PR because now I need these same lemmas in KWasm.", "createdAt": "2020-05-16T11:01:03Z", "url": "https://github.com/kframework/k/pull/1292", "merged": true, "mergeCommit": {"oid": "4b18dee874575d62e746381814f19df7d48048b4"}, "closed": true, "closedAt": "2020-05-28T16:21:46Z", "author": {"login": "ehildenb"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABch1R3eAFqTQxMzA3MDgyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABclvgKggH2gAyNDE4OTUxOTQ5Ojk4NzA3NjAyMDQ3NmFlOTE2NzlmNDViYTQ1NzQ1YWM5ZTE3YjQyZTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDcwODI2", "url": "https://github.com/kframework/k/pull/1292#pullrequestreview-413070826", "createdAt": "2020-05-16T11:50:04Z", "commit": {"oid": "aadb254f427cd4a69cb51ac4cde423f9f4a5b7a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDcxNjQ4", "url": "https://github.com/kframework/k/pull/1292#pullrequestreview-413071648", "createdAt": "2020-05-16T12:05:59Z", "commit": {"oid": "aadb254f427cd4a69cb51ac4cde423f9f4a5b7a4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTEyODAx", "url": "https://github.com/kframework/k/pull/1292#pullrequestreview-413112801", "createdAt": "2020-05-16T22:28:24Z", "commit": {"oid": "b090fbe318f43027c9038c9904f629bcf5e6dbab"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6a679b22b9a30d8b9fb4dc52cec060571cd063b", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/f6a679b22b9a30d8b9fb4dc52cec060571cd063b", "committedDate": "2020-05-17T07:58:05Z", "message": "domains-lemmas-no-smt: add case that Daejun suggested"}, "afterCommit": {"oid": "aa2b74df3384b45236a1a2d0c0bbfd6bfec29830", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/aa2b74df3384b45236a1a2d0c0bbfd6bfec29830", "committedDate": "2020-05-17T08:03:31Z", "message": "domains-lemmas-no-smt: add case that Daejun suggested"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODI2ODUz", "url": "https://github.com/kframework/k/pull/1292#pullrequestreview-416826853", "createdAt": "2020-05-22T11:02:44Z", "commit": {"oid": "aa2b74df3384b45236a1a2d0c0bbfd6bfec29830"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NTkzMzMz", "url": "https://github.com/kframework/k/pull/1292#pullrequestreview-418593333", "createdAt": "2020-05-26T19:05:57Z", "commit": {"oid": "aa2b74df3384b45236a1a2d0c0bbfd6bfec29830"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowNTo1N1rOGasTKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOTowNjo0M1rOGasU0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MTk2MQ==", "bodyText": "These must have attribute simplification. I don't think anywhere is necessary: it should have no effect because #Ceil isn't a constructor. However, it shouldn't hurt anything.", "url": "https://github.com/kframework/k/pull/1292#discussion_r430641961", "createdAt": "2020-05-26T19:05:57Z", "author": {"login": "ttuegel"}, "path": "k-distribution/include/builtin/domains.k", "diffHunk": "@@ -444,39 +444,40 @@ module INT-SYMBOLIC [symbolic, kore]\n   imports  INT-COMMON\n   imports ML-SYNTAX\n \n-  /**\n-   * Definability conditions\n-   */\n-\n-  rule\n-    #Ceil(@I1:Int /Int @I2:Int)\n-  =>\n-    {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int %Int @I2:Int)\n-  =>\n-    {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int modInt @I2:Int)\n-  =>\n-    {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int >>Int @I2:Int)\n-  =>\n-    {(@I2 >=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int <<Int @I2:Int)\n-  =>\n-    {(@I2 >=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n+  // Definability Conditions\n+  rule #Ceil(@I1:Int /Int   @I2:Int) => {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int %Int   @I2:Int) => {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int modInt @I2:Int) => {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int >>Int  @I2:Int) => {(@I2 >=Int 0)  #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int <<Int  @I2:Int) => {(@I2 >=Int 0)  #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2b74df3384b45236a1a2d0c0bbfd6bfec29830"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0MjM4Ng==", "bodyText": "What is this priority attribute intended to do?", "url": "https://github.com/kframework/k/pull/1292#discussion_r430642386", "createdAt": "2020-05-26T19:06:43Z", "author": {"login": "ttuegel"}, "path": "k-distribution/include/builtin/domains.k", "diffHunk": "@@ -444,39 +444,40 @@ module INT-SYMBOLIC [symbolic, kore]\n   imports  INT-COMMON\n   imports ML-SYNTAX\n \n-  /**\n-   * Definability conditions\n-   */\n-\n-  rule\n-    #Ceil(@I1:Int /Int @I2:Int)\n-  =>\n-    {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int %Int @I2:Int)\n-  =>\n-    {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int modInt @I2:Int)\n-  =>\n-    {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int >>Int @I2:Int)\n-  =>\n-    {(@I2 >=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n-\n-  rule\n-    #Ceil(@I1:Int <<Int @I2:Int)\n-  =>\n-    {(@I2 >=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2)\n-  [anywhere]\n+  // Definability Conditions\n+  rule #Ceil(@I1:Int /Int   @I2:Int) => {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int %Int   @I2:Int) => {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int modInt @I2:Int) => {(@I2 =/=Int 0) #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int >>Int  @I2:Int) => {(@I2 >=Int 0)  #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+  rule #Ceil(@I1:Int <<Int  @I2:Int) => {(@I2 >=Int 0)  #Equals true} #And #Ceil(@I1) #And #Ceil(@I2) [anywhere]\n+\n+  // Arithmetic Normalization\n+  rule I +Int 0 => I [simplification]\n+  rule I -Int 0 => I [simplification]\n+\n+  rule I +Int B => B +Int I          [concrete(I), symbolic(B), priority(51), simplification]\n+  rule A -Int I => A +Int (0 -Int I) [concrete(I), symbolic(A), priority(51), simplification]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2b74df3384b45236a1a2d0c0bbfd6bfec29830"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261188ad51f93b9bfe3e6d9c26a79d2fadc06034", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/261188ad51f93b9bfe3e6d9c26a79d2fadc06034", "committedDate": "2020-05-28T09:23:00Z", "message": "domains.k: formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b9de70741a04d8ae326ad50f78dbd5484e29cc6", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/5b9de70741a04d8ae326ad50f78dbd5484e29cc6", "committedDate": "2020-05-28T09:23:26Z", "message": "domains.k: arithmetic normalization lemmas from KEVM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5246a16af533b5abef8792e3091f7715003b0a22", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/5246a16af533b5abef8792e3091f7715003b0a22", "committedDate": "2020-05-28T09:23:27Z", "message": "k-distribution/tests/regression-new/domains-lemmas-no-smt: upstream tests from KEVM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33afccdb2cfbb32ba0da333f9be8f045a532dd4f", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/33afccdb2cfbb32ba0da333f9be8f045a532dd4f", "committedDate": "2020-05-28T09:23:27Z", "message": "tests/domains-lemmas-no-smt: allow other types of proofs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26207324325dcf16e71e477c3d64898bad19e734", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/26207324325dcf16e71e477c3d64898bad19e734", "committedDate": "2020-05-28T09:23:27Z", "message": "tests/domains-lemmas-smt: add tests of modular arithmetic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a063c47e1ff1f0cef06ae3d80667b66dc927c4", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/30a063c47e1ff1f0cef06ae3d80667b66dc927c4", "committedDate": "2020-05-28T09:23:27Z", "message": "tests/domains-lemmas-no-smt: test double increment simplification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07c24be88623f7f033c5a39e7ef639d8134f8eaf", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/07c24be88623f7f033c5a39e7ef639d8134f8eaf", "committedDate": "2020-05-28T09:23:27Z", "message": "domains.k: add modular arith and bitshifts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d12eac66ab8db50dcfa2c3d1ed2f2285772c509", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/2d12eac66ab8db50dcfa2c3d1ed2f2285772c509", "committedDate": "2020-05-28T09:23:27Z", "message": "domains. domains-lemmas-no-smt-spec: simplify out identities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90ee5e265c456f12af5fbf02c9587bcc2f8d9e80", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/90ee5e265c456f12af5fbf02c9587bcc2f8d9e80", "committedDate": "2020-05-28T09:23:27Z", "message": "domains-lemmas-no-smt: add case that Daejun suggested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c0125a8e6463aee6079b25666856a35f5f3efab", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/0c0125a8e6463aee6079b25666856a35f5f3efab", "committedDate": "2020-05-28T14:06:51Z", "message": "domains.k: formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2036b12ad72f8f9f81fe89ae450ee264bddaaaa6", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/2036b12ad72f8f9f81fe89ae450ee264bddaaaa6", "committedDate": "2020-05-28T14:09:56Z", "message": "regression-new/domains-lemmas-{no-smt,smt}: update Makefile"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa2b74df3384b45236a1a2d0c0bbfd6bfec29830", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/aa2b74df3384b45236a1a2d0c0bbfd6bfec29830", "committedDate": "2020-05-17T08:03:31Z", "message": "domains-lemmas-no-smt: add case that Daejun suggested"}, "afterCommit": {"oid": "2036b12ad72f8f9f81fe89ae450ee264bddaaaa6", "author": {"user": {"login": "ehildenb", "name": "Everett Hildenbrandt"}}, "url": "https://github.com/kframework/k/commit/2036b12ad72f8f9f81fe89ae450ee264bddaaaa6", "committedDate": "2020-05-28T14:09:56Z", "message": "regression-new/domains-lemmas-{no-smt,smt}: update Makefile"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTUzODA5", "url": "https://github.com/kframework/k/pull/1292#pullrequestreview-420153809", "createdAt": "2020-05-28T14:17:49Z", "commit": {"oid": "2036b12ad72f8f9f81fe89ae450ee264bddaaaa6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "987076020476ae91679f45ba45745ac9e17b42e4", "author": {"user": {"login": "rv-jenkins", "name": null}}, "url": "https://github.com/kframework/k/commit/987076020476ae91679f45ba45745ac9e17b42e4", "committedDate": "2020-05-28T15:21:57Z", "message": "Merge branch 'master' into upstream-symbolic-reasoning"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2375, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}