{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzkxOTE3", "number": 1661, "reviewThreads": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozMzoyNFrOE8rhjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0NDowNVrOFFsUJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDYzMTE5OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-7-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozMzoyNFrOH48tuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozMzoyNFrOH48tuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ3NzA1MQ==", "bodyText": "On the Java backend, the result is\n<k>\n  lookupResult ( false )\n</k>", "url": "https://github.com/kframework/k/pull/1661#discussion_r529477051", "createdAt": "2020-11-24T11:33:24Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-7-spec.k.out", "diffHunk": "@@ -0,0 +1 @@\n+#Top", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDY1MTAxOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozODozOVrOH485uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNToxMDo1NFrOH53zTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4MDEyMw==", "bodyText": "These tests are missing from the Java backend test suite, even though they exist in the inkeys file.", "url": "https://github.com/kframework/k/pull/1661#discussion_r529480123", "createdAt": "2020-11-24T11:38:39Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys", "diffHunk": "@@ -0,0 +1,9 @@\n+claim <k> inkeys ( X:MyId in_keys ( .Map  ) ) => . </k>\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map ) ) => . </k> requires Y in_keys(M)\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map ) ) => . </k> requires notBool Y in_keys(M)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0NTEzNQ==", "bodyText": "We don't expect these to pass until we finish kframework/kore#2249.", "url": "https://github.com/kframework/k/pull/1661#discussion_r530445135", "createdAt": "2020-11-25T15:10:54Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys", "diffHunk": "@@ -0,0 +1,9 @@\n+claim <k> inkeys ( X:MyId in_keys ( .Map  ) ) => . </k>\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map ) ) => . </k> requires Y in_keys(M)\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map ) ) => . </k> requires notBool Y in_keys(M)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4MDEyMw=="}, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDY1NDcwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-2-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozOTozOVrOH4876A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTozOTozOVrOH4876A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4MDY4MA==", "bodyText": "Should this be inkeysResult ( true )?", "url": "https://github.com/kframework/k/pull/1661#discussion_r529480680", "createdAt": "2020-11-24T11:39:39Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-2-spec.k.out", "diffHunk": "@@ -0,0 +1,9 @@\n+  <k>\n+    inkeysResult ( Y:MyId in_keys ( M ) ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDY2MDYxOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-3-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0MToxMlrOH48_Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0MToxMlrOH48_Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4MTU1NA==", "bodyText": "Should this be inkeysResult ( false )?", "url": "https://github.com/kframework/k/pull/1661#discussion_r529481554", "createdAt": "2020-11-24T11:41:12Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-3-spec.k.out", "diffHunk": "@@ -0,0 +1,9 @@\n+  <k>\n+    inkeysResult ( Y:MyId in_keys ( M ) ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDY2NjkwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-6-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0Mjo1OVrOH49DHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo0Mjo1OVrOH49DHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4MjUyNA==", "bodyText": "This is the expected output on the Java backend as well, but I don't understand what this really tests. Maybe it would make sense if the expected output is inkeysResult ( false ), and we add X =/=K Y to the requires? I tried this out and it fails, but it's just an idea.", "url": "https://github.com/kframework/k/pull/1661#discussion_r529482524", "createdAt": "2020-11-24T11:42:59Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-6-spec.k.out", "diffHunk": "@@ -0,0 +1,16 @@\n+  <k>\n+    inkeysResult ( Y:MyId in_keys ( M\n+    ( X:MyId |-> 0 ) ) ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDcxNjIyOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-8-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo1NjozNlrOH49hBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo1NjozNlrOH49hBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ5MDE4MA==", "bodyText": "This is the expected output on the Java backend as well, I don't understand what this tests.", "url": "https://github.com/kframework/k/pull/1661#discussion_r529490180", "createdAt": "2020-11-24T11:56:36Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-8-spec.k.out", "diffHunk": "@@ -0,0 +1,23 @@\n+  #Not ( {\n+    X\n+  #Equals\n+    Z\n+  } )\n+#And\n+  <k>\n+    inkeysResult ( Y:MyId in_keys ( M\n+    X:MyId |-> 0\n+    ( Z:MyId |-> 1 ) ) ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDc0MTE4OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMjowMzowOVrOH49wGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMjowMzowOVrOH49wGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ5NDA0Mw==", "bodyText": "I can't find this test either.", "url": "https://github.com/kframework/k/pull/1661#discussion_r529494043", "createdAt": "2020-11-24T12:03:09Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys", "diffHunk": "@@ -0,0 +1,9 @@\n+claim <k> inkeys ( X:MyId in_keys ( .Map  ) ) => . </k>\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map ) ) => . </k> requires Y in_keys(M)\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map ) ) => . </k> requires notBool Y in_keys(M)\n+claim <k> inkeys ( X:MyId in_keys ( M:Map X      |-> 0 ) ) => . </k>\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map X:MyId |-> 0 ) ) => . </k>\n+claim <k> inkeys ( Y:MyId in_keys ( M:Map X:MyId |-> 0 ) ) => . </k> requires notBool Y in_keys(M)\n+claim <k> inkeys ( X:MyId in_keys ( Z:MyId |-> 1 M:Map X      |-> 0 ) ) => . </k>\n+claim <k> inkeys ( Y:MyId in_keys ( Z:MyId |-> 1 M:Map X:MyId |-> 0 ) ) => . </k>\n+claim <k> inkeys ( Y:MyId in_keys ( Z:MyId |-> 1 M:Map X:MyId |-> 0 ) ) => . </k> requires notBool Y in_keys(M)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781785807df99c75a22dab87aea62b5aafd67a56"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mjk4MzcxOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-26-spec.k.out", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOTo1NDoxMlrOH_JTGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOTo1NDoxMlrOH_JTGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk3NDY4Mw==", "bodyText": "I think this gets simplified correctly.\nOn the Java backend, though, the expected result is:\n<k>\n  assignmentResult ( 1 |-> 4\n  ( ( X |-> 3 ) [ 0 <- 5 ] ) )\n</k>\n\nIt's also in the failing directory. So I don't know what to make of this test.", "url": "https://github.com/kframework/k/pull/1661#discussion_r535974683", "createdAt": "2020-12-04T09:54:12Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-26-spec.k.out", "diffHunk": "@@ -0,0 +1,5 @@\n+<k>\n+  assignmentResult ( 0 |-> 5\n+  1 |-> 4\n+  X:MyId |-> 3 ) ~> .\n+</k>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4981d6f381772e8ca3f5c2b9b9ed2e0aef4b57"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzA3NzUxOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-6-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxNTo1NlrOH_KJjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxNTo1NlrOH_KJjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4ODYyMg==", "bodyText": "The expected Java result is:\n<k>\n  removeResult ( ( MAP\n  X |-> 1 ) [ Y <- undef ] [ Z ] )\n</k>\n\nSince Z =/=K X, I think the Haskell backend result (removeResult ( MAP [ Y:MyId <- undef ] [ Z:MyId ] )) is correct.", "url": "https://github.com/kframework/k/pull/1661#discussion_r535988622", "createdAt": "2020-12-04T10:15:56Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-6-spec.k.out", "diffHunk": "@@ -0,0 +1,41 @@\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  #Not ( {\n+    X\n+  #Equals\n+    Z\n+  } )\n+#And\n+  <k>\n+    removeResult ( MAP [ Y:MyId <- undef ] [ Z:MyId ] ~> . ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4981d6f381772e8ca3f5c2b9b9ed2e0aef4b57"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzA5NDkzOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-9-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxOTo1NVrOH_KTjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoxOTo1NVrOH_KTjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5MTE4Mw==", "bodyText": "I think this is similar to remove-6.", "url": "https://github.com/kframework/k/pull/1661#discussion_r535991183", "createdAt": "2020-12-04T10:19:55Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-9-spec.k.out", "diffHunk": "@@ -0,0 +1,47 @@\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  #Not ( {\n+    X\n+  #Equals\n+    Z\n+  } )\n+#And\n+  #Not ( {\n+    Y\n+  #Equals\n+    Z\n+  } )\n+#And\n+  <k>\n+    removeResult ( MAP [ Y:MyId <- undef ] [ Z:MyId ] ~> . ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4981d6f381772e8ca3f5c2b9b9ed2e0aef4b57"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzEzNDAwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-13-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOToxMFrOH_Kp_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOToxMFrOH_Kp_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5NjkyNA==", "bodyText": "This does not fail on the Java backend.", "url": "https://github.com/kframework/k/pull/1661#discussion_r535996924", "createdAt": "2020-12-04T10:29:10Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-13-spec.k.out", "diffHunk": "@@ -0,0 +1,24 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4981d6f381772e8ca3f5c2b9b9ed2e0aef4b57"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzEzODcxOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-20-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozMDoxM1rOH_KsqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozMDoxM1rOH_KsqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5NzYwOQ==", "bodyText": "This does not fail on the Java backend.", "url": "https://github.com/kframework/k/pull/1661#discussion_r535997609", "createdAt": "2020-12-04T10:30:13Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-20-spec.k.out", "diffHunk": "@@ -0,0 +1,24 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4981d6f381772e8ca3f5c2b9b9ed2e0aef4b57"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE0MTgwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-11-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozMTowNVrOH_KuhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozMTowNVrOH_KuhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5ODA4NQ==", "bodyText": "This fails on the Java backend as well.", "url": "https://github.com/kframework/k/pull/1661#discussion_r535998085", "createdAt": "2020-12-04T10:31:05Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-11-spec.k.out", "diffHunk": "@@ -0,0 +1,51 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE0MzIzOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-12-spec.k.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozMToyMlrOH_KvRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1ODo1MFrOH_P1hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5ODI3Ng==", "bodyText": "This fails on the Java backend as well.", "url": "https://github.com/kframework/k/pull/1661#discussion_r535998276", "createdAt": "2020-12-04T10:31:22Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-12-spec.k.out", "diffHunk": "@@ -0,0 +1,24 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MTc5Nw==", "bodyText": "Does not fail on Haskell backend after 7735052.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536081797", "createdAt": "2020-12-04T12:58:50Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-12-spec.k.out", "diffHunk": "@@ -0,0 +1,24 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5ODI3Ng=="}, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE1OTUwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-10-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNToxMVrOH_K4sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNToxMVrOH_K4sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMDY5MA==", "bodyText": "If I'm not mistaken, we already discussed that we can't support this at the moment, so it will go to failing.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536000690", "createdAt": "2020-12-04T10:35:11Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-10-spec.k.out", "diffHunk": "@@ -0,0 +1,37 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE2MDE0OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-11-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNToyMFrOH_K5Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNToyMFrOH_K5Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMDc4Mg==", "bodyText": "If I'm not mistaken, we already discussed that we can't support this at the moment, so it will go to failing.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536000782", "createdAt": "2020-12-04T10:35:20Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-11-spec.k.out", "diffHunk": "@@ -0,0 +1,38 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE2NjA3OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-6-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNjo0MlrOH_K8fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozNjo0MlrOH_K8fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMTY2Mw==", "bodyText": "If I'm not mistaken, we already discussed that we can't support this at the moment, so it will go to failing.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536001663", "createdAt": "2020-12-04T10:36:42Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-6-spec.k.out", "diffHunk": "@@ -0,0 +1,23 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE3NTA1OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-5-spec.k.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozODo1M1rOH_LBvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1NjowNVrOH_PvEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMzAwNQ==", "bodyText": "This does not fail on the Java backend.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536003005", "createdAt": "2020-12-04T10:38:53Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-5-spec.k.out", "diffHunk": "@@ -0,0 +1,38 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MDE0Nw==", "bodyText": "Outdated after 7735052.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536080147", "createdAt": "2020-12-04T12:56:05Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-5-spec.k.out", "diffHunk": "@@ -0,0 +1,38 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMzAwNQ=="}, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE3NzcwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-6-spec.k.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozOToyOFrOH_LDMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1NjoxNVrOH_PvYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMzM3OQ==", "bodyText": "This does not fail on the Java backend.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536003379", "createdAt": "2020-12-04T10:39:28Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-6-spec.k.out", "diffHunk": "@@ -0,0 +1,42 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MDIyNQ==", "bodyText": "Outdated after 7735052.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536080225", "createdAt": "2020-12-04T12:56:15Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-6-spec.k.out", "diffHunk": "@@ -0,0 +1,42 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMzM3OQ=="}, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzE3OTM3OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-7-spec.k.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozOTo1N1rOH_LEQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1NjoyNFrOH_Pv0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMzY1MQ==", "bodyText": "This does not fail on the Java backend.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536003651", "createdAt": "2020-12-04T10:39:57Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-7-spec.k.out", "diffHunk": "@@ -0,0 +1,44 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MDMzOQ==", "bodyText": "Outdated after 7735052.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536080339", "createdAt": "2020-12-04T12:56:24Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-7-spec.k.out", "diffHunk": "@@ -0,0 +1,44 @@\n+  #Not ( {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMzY1MQ=="}, "originalCommit": {"oid": "e4e663c209352a6136ab3f39b17bf61ebbc79a01"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzYxMzYxOnYy", "diffSide": "RIGHT", "path": "k-distribution/include/kframework/builtin/domains.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozMzowMFrOH_O75Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjozMzowMFrOH_O75Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2NzA0NQ==", "bodyText": "After adding the rule at 419 (in 7735052), assignment-15 would loop if I kept 418 as well.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536067045", "createdAt": "2020-12-04T12:33:00Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -407,9 +407,34 @@ endmodule\n \n module MAP-KORE-SYMBOLIC [kore,symbolic]\n   imports MAP\n+  imports K-EQUAL\n \n    rule #Ceil(@M:Map [@K:KItem]) => {(@K in_keys(@M)) #Equals true} #And #Ceil(@M) #And #Ceil(@K) [anywhere, simplification]\n \n+   // Symbolic update\n+   rule (K |-> _ M:Map) [ K <- V ] => (K |-> V M) [simplification]\n+   rule M:Map [ K <- V ] => (K |-> V M) requires notBool (K in_keys(M)) [simplification]\n+   rule M:Map [ K <- _ ] [ K <- V ] => M [ K <- V ] [simplification]\n+   // rule M:Map [ K1 <- V1 ] [ K2 <- V2 ] => M [ K2 <- V2 ] [ K1 <- V1 ] requires K1 =/=K K2 andBool K2 in_keys(M) [simplification]\n+   rule (K1 |-> V1 M:Map) [ K2 <- V2 ] => (K1 |-> V1 (M [ K2 <- V2 ])) requires K1 =/=K K2 [simplification]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7735052eb2d17c2a39e2897d157e432ed139bd7e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzY3MzYwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-10-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo0ODoxMVrOH_Pdnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo0ODoxMVrOH_Pdnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3NTY3OQ==", "bodyText": "This is consistent with the Java backend result, meaning that [ Y <- 2] appears before X |-> 1. I believe this is a consequence of adding the simplification rule from 419 in domains.k (7735052). There are other tests with the same behavior. I believe that this rule application would only be visible (checked) in the test if we kept the RHS as fail. Edit: we decided on using . on the RHS for all the claims.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536075679", "createdAt": "2020-12-04T12:48:11Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-10-spec.k.out", "diffHunk": "@@ -0,0 +1,28 @@\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  #Not ( {\n+    Y\n+  #Equals\n+    Z\n+  } )\n+#And\n+  <k>\n+    assignmentResult ( ( MAP [ Y:MyId <- 2 ]\n+    X:MyId |-> 1 ) [ Z:MyId <- 3 ] ) ~> .\n+  </k>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21842fa41f664176ab0a1a93b77708380f3cc51c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDMxODQzOnYy", "diffSide": "RIGHT", "path": "k-distribution/include/kframework/builtin/domains.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxNjoxM1rOH_VUlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxNjoxM1rOH_VUlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MTY2OA==", "bodyText": "If this passes all the tests, I think we can go ahead and delete this rule.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536171668", "createdAt": "2020-12-04T15:16:13Z", "author": {"login": "ttuegel"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -407,9 +407,34 @@ endmodule\n \n module MAP-KORE-SYMBOLIC [kore,symbolic]\n   imports MAP\n+  imports K-EQUAL\n \n    rule #Ceil(@M:Map [@K:KItem]) => {(@K in_keys(@M)) #Equals true} #And #Ceil(@M) #And #Ceil(@K) [anywhere, simplification]\n \n+   // Symbolic update\n+   rule (K |-> _ M:Map) [ K <- V ] => (K |-> V M) [simplification]\n+   rule M:Map [ K <- V ] => (K |-> V M) requires notBool (K in_keys(M)) [simplification]\n+   rule M:Map [ K <- _ ] [ K <- V ] => M [ K <- V ] [simplification]\n+   // rule M:Map [ K1 <- V1 ] [ K2 <- V2 ] => M [ K2 <- V2 ] [ K1 <- V1 ] requires K1 =/=K K2 andBool K2 in_keys(M) [simplification]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21842fa41f664176ab0a1a93b77708380f3cc51c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQzNzY3OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-29-spec.k.out", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowNTozNlrOH_6YZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjo0Mjo0OFrOIAk92g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc3ODg1Mw==", "bodyText": "Should this be -Int 30 instead?", "url": "https://github.com/kframework/k/pull/1661#discussion_r536778853", "createdAt": "2020-12-05T14:05:36Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-29-spec.k.out", "diffHunk": "@@ -1 +1,23 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  <k>\n+    assignmentResult ( MAP\n+    X:MyId |-> BAL_TO:Int\n+    Y:MyId |-> BAL_FROM +Int -30 ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMjcwMg==", "bodyText": "I think there is a simplification rule for this, but maybe I'm thinking of EVM?", "url": "https://github.com/kframework/k/pull/1661#discussion_r536822702", "createdAt": "2020-12-05T16:58:36Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-29-spec.k.out", "diffHunk": "@@ -1 +1,23 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  <k>\n+    assignmentResult ( MAP\n+    X:MyId |-> BAL_TO:Int\n+    Y:MyId |-> BAL_FROM +Int -30 ) ~> .", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc3ODg1Mw=="}, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3NjU3MA==", "bodyText": "No, the arithmetic simplification rules are in domains.k now. But it looks like this particular result comes from the application of this rule.", "url": "https://github.com/kframework/k/pull/1661#discussion_r537476570", "createdAt": "2020-12-07T12:42:48Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-29-spec.k.out", "diffHunk": "@@ -1 +1,23 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  <k>\n+    assignmentResult ( MAP\n+    X:MyId |-> BAL_TO:Int\n+    Y:MyId |-> BAL_FROM +Int -30 ) ~> .", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc3ODg1Mw=="}, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQzODU4OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-30-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowNTo1NlrOH_6Y8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowNTo1NlrOH_6Y8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc3ODk5NA==", "bodyText": "Should this be -Int 30 instead?", "url": "https://github.com/kframework/k/pull/1661#discussion_r536778994", "createdAt": "2020-12-05T14:05:56Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-30-spec.k.out", "diffHunk": "@@ -1 +1,23 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  <k>\n+    assignmentResult ( MAP\n+    foo ( X ) |-> BAL_TO:Int\n+    foo ( Y ) |-> BAL_FROM +Int -30 ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQzOTUzOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-31-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowNjoyMlrOH_6ZfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowNjoyMlrOH_6ZfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc3OTEzMw==", "bodyText": "Should this be -Int 30 instead?", "url": "https://github.com/kframework/k/pull/1661#discussion_r536779133", "createdAt": "2020-12-05T14:06:22Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/assignment-31-spec.k.out", "diffHunk": "@@ -1 +1,23 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  <k>\n+    assignmentResult ( MAP\n+    foo ( X ) |-> BAL_TO:Int\n+    foo ( Y ) |-> BAL_FROM +Int -30 ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQ0ODUxOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-2-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowOToyNFrOH_6e0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowOToyNFrOH_6e0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4MDQ5Nw==", "bodyText": "Why doesn't this get simplified further?", "url": "https://github.com/kframework/k/pull/1661#discussion_r536780497", "createdAt": "2020-12-05T14:09:24Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-2-spec.k.out", "diffHunk": "@@ -1 +1,9 @@\n-#Top\n+  <k>\n+    inkeysResult ( Y:MyId in_keys ( M ) ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQ0OTYwOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-3-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowOTo0NFrOH_6fjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDowOTo0NFrOH_6fjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4MDY4NQ==", "bodyText": "Why doesn't this get simplified further?", "url": "https://github.com/kframework/k/pull/1661#discussion_r536780685", "createdAt": "2020-12-05T14:09:44Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/inkeys-3-spec.k.out", "diffHunk": "@@ -1 +1,9 @@\n-#Top\n+  <k>\n+    inkeysResult ( Y:MyId in_keys ( M ) ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQ3MjU5OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-23-spec.k.out", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDoxNzozM1rOH_6t9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDoxNzozM1rOH_6t9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4NDM3NQ==", "bodyText": "Why doesn't this get simplified any further? I think this is correct, actually.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536784375", "createdAt": "2020-12-05T14:17:33Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-23-spec.k.out", "diffHunk": "@@ -1 +1,16 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    y\n+  } )\n+#And\n+  <k>\n+    lookupResult ( ( X:MyId |-> 3 ) [ x <- 5 ] [ X:MyId ] ~> . ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQ3ODQ2OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-9-spec.k.out", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDoxOTozMlrOH_6xmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDoxOTozMlrOH_6xmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4NTMwNQ==", "bodyText": "I think this is actually the correct result, since Y =/=K Z.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536785305", "createdAt": "2020-12-05T14:19:32Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-9-spec.k.out", "diffHunk": "@@ -1 +1,47 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  #Not ( {\n+    X\n+  #Equals\n+    Z\n+  } )\n+#And\n+  #Not ( {\n+    Y\n+  #Equals\n+    Z\n+  } )\n+#And\n+  <k>\n+    lookupResult ( MAP [ Z:MyId ] ~> . ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODQ4NTQ3OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDoyMjowM1rOH_62Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDoyMjowM1rOH_62Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4NjQ2Mg==", "bodyText": "I think this is actually the correct result, since X =/=K y.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536786462", "createdAt": "2020-12-05T14:22:03Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "diffHunk": "@@ -1 +1,28 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    y\n+  } )\n+#And\n+  <k>\n+    removeResult ( ( X:MyId |-> 3 ) [ x <- undef ] [ X:MyId ] ~> . ) ~> .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2ODUwNzQ1OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-2-spec.k", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQxNDoyOTo1NVrOH_7D3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMzoxNzowMlrOIAmSCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4OTk4Mg==", "bodyText": "The output is still #Top here, and I'm not sure if this is right.", "url": "https://github.com/kframework/k/pull/1661#discussion_r536789982", "createdAt": "2020-12-05T14:29:55Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-2-spec.k", "diffHunk": "@@ -6,6 +6,6 @@ requires \"map-tests.k\"\n module REMOVE-2-SPEC\n     imports MAP-TESTS\n \n-    claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => removeResult ( MAP [ Z ] ) </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X\n+    claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ5ODEyMw==", "bodyText": "That is correct. All the keys are the same. Looking up the key after deleting it is \\bottom.", "url": "https://github.com/kframework/k/pull/1661#discussion_r537498123", "createdAt": "2020-12-07T13:17:02Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-2-spec.k", "diffHunk": "@@ -6,6 +6,6 @@ requires \"map-tests.k\"\n module REMOVE-2-SPEC\n     imports MAP-TESTS\n \n-    claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => removeResult ( MAP [ Z ] ) </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X\n+    claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjc4OTk4Mg=="}, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTMzMzYyOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-23-spec.k.out", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0NDoyNlrOIBVfrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0NDoyNlrOIBVfrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI3MTY2Mw==", "bodyText": "I think the result above is correct, but this should be simplified further. The X is obviously in the keys of the map.", "url": "https://github.com/kframework/k/pull/1661#discussion_r538271663", "createdAt": "2020-12-08T11:44:26Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-23-spec.k.out", "diffHunk": "@@ -1 +1,16 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    y\n+  } )\n+#And\n+  <k>\n+    lookupResult ( ( X:MyId |-> 3 ) [ x <- 5 ] [ X:MyId ] ~> . ) ~> .\n+  </k>\n+#And\n+  {\n+    true\n+  #Equals\n+    X:MyId in_keys ( ( X:MyId |-> 3 ) [ x <- 5 ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTM1MDI2OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-9-spec.k.out", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0NzowMVrOIBVqXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0NzowMVrOIBVqXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI3NDM5Ng==", "bodyText": "This is a little weird. Strictly, we only need the { true #Equals Z:MyId in_keys ( MAP ) } side condition.", "url": "https://github.com/kframework/k/pull/1661#discussion_r538274396", "createdAt": "2020-12-08T11:47:01Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup-9-spec.k.out", "diffHunk": "@@ -1 +1,47 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    Y\n+  } )\n+#And\n+  #Not ( {\n+    X\n+  #Equals\n+    Z\n+  } )\n+#And\n+  #Not ( {\n+    Y\n+  #Equals\n+    Z\n+  } )\n+#And\n+  <k>\n+    lookupResult ( MAP [ Z:MyId ] ~> . ) ~> .\n+  </k>\n+#And\n+  {\n+    false\n+  #Equals\n+    X:MyId in_keys ( MAP )\n+  }\n+#And\n+  {\n+    true\n+  #Equals\n+    Z:MyId in_keys ( ( MAP\n+    X:MyId |-> 1 ) [ Y:MyId <- 2 ] )\n+  }\n+#And\n+  {\n+    true\n+  #Equals\n+    Z:MyId in_keys ( MAP )\n+  }\n+#And\n+  {\n+    true\n+  #Equals\n+    Z:MyId in_keys ( MAP [ Y:MyId <- 2 ]\n+    ( X:MyId |-> 1 ) )\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTM1OTM1OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0ODoyNFrOIBVwbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0ODoyNFrOIBVwbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI3NTk1MA==", "bodyText": "The result above is correct, but I think this should be simplified away.", "url": "https://github.com/kframework/k/pull/1661#discussion_r538275950", "createdAt": "2020-12-08T11:48:24Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "diffHunk": "@@ -1 +1,28 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    y\n+  } )\n+#And\n+  <k>\n+    removeResult ( ( X:MyId |-> 3 ) [ x <- undef ] [ X:MyId ] ~> . ) ~> .\n+  </k>\n+#And\n+  {\n+    false\n+  #Equals\n+    y in_keys ( ( X:MyId |-> 3 ) [ x <- undef ] )\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTM2MTg3OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0ODo0NlrOIBVx-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0ODo0NlrOIBVx-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI3NjM0NQ==", "bodyText": "This should also be simplified, I think.", "url": "https://github.com/kframework/k/pull/1661#discussion_r538276345", "createdAt": "2020-12-08T11:48:46Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "diffHunk": "@@ -1 +1,28 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    y\n+  } )\n+#And\n+  <k>\n+    removeResult ( ( X:MyId |-> 3 ) [ x <- undef ] [ X:MyId ] ~> . ) ~> .\n+  </k>\n+#And\n+  {\n+    false\n+  #Equals\n+    y in_keys ( ( X:MyId |-> 3 ) [ x <- undef ] )\n+  }\n+#And\n+  {\n+    true\n+  #Equals\n+    X:MyId in_keys ( ( X:MyId |-> 3 ) [ x <- undef ]\n+    ( y |-> 4 ) )\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTM2NDQ3OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0OTowOVrOIBVzqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMTo0OTowOVrOIBVzqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODI3Njc3OA==", "bodyText": "I think this should not be simplified. We don't know that X =/= x.", "url": "https://github.com/kframework/k/pull/1661#discussion_r538276778", "createdAt": "2020-12-08T11:49:09Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove-17-spec.k.out", "diffHunk": "@@ -1 +1,28 @@\n-#Top\n+  #Not ( {\n+    X\n+  #Equals\n+    y\n+  } )\n+#And\n+  <k>\n+    removeResult ( ( X:MyId |-> 3 ) [ x <- undef ] [ X:MyId ] ~> . ) ~> .\n+  </k>\n+#And\n+  {\n+    false\n+  #Equals\n+    y in_keys ( ( X:MyId |-> 3 ) [ x <- undef ] )\n+  }\n+#And\n+  {\n+    true\n+  #Equals\n+    X:MyId in_keys ( ( X:MyId |-> 3 ) [ x <- undef ]\n+    ( y |-> 4 ) )\n+  }\n+#And\n+  {\n+    true\n+  #Equals\n+    X:MyId in_keys ( ( X:MyId |-> 3 ) [ x <- undef ] )\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b95d30ceb02decb4c6ec72ce35d651e09992c8"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTExODQ2OnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0MTo0NVrOIGU57Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMToyMTo1OFrOIHAenA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNDg3Nw==", "bodyText": "Could you please add\nclaim <k> lookup ( (Y:MyId |-> 1 X:MyId |-> 2) [ Y:MyId ] ) => . </k>\n\nI'm curious to see what the backend does here.", "url": "https://github.com/kframework/k/pull/1661#discussion_r543504877", "createdAt": "2020-12-15T16:41:45Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup", "diffHunk": "@@ -0,0 +1,24 @@\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y ==K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k>\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z  ==K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z  ==K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z  ==K Y\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K Y\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z  ==K X andBool Y =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1 Y:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (MAP:Map Y:MyId |-> 1 X:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (X:MyId |-> 1 MAP:Map Y:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (Y:MyId |-> 1 MAP:Map X:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (X:MyId |-> 1 Y:MyId |-> 2 MAP:Map) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (Y:MyId |-> 1 X:MyId |-> 2 MAP:Map) [ Y:MyId ] ) => . </k> requires X =/=K Y", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3350e3d1a60ed90714201ae25037975e2886eca"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIxODc4MA==", "bodyText": "The result is:\n<k>\n  lookupResult ( 1 ~> . ) ~> .\n</k>", "url": "https://github.com/kframework/k/pull/1661#discussion_r544218780", "createdAt": "2020-12-16T11:21:58Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/lookup", "diffHunk": "@@ -0,0 +1,24 @@\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y ==K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k>\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z  ==K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z  ==K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z  ==K Y\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K Y\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1) [Y:MyId <- 2] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z  ==K X andBool Y =/=K X\n+claim <k> lookup ( (MAP:Map X:MyId |-> 1 Y:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (MAP:Map Y:MyId |-> 1 X:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (X:MyId |-> 1 MAP:Map Y:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (Y:MyId |-> 1 MAP:Map X:MyId |-> 2) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (X:MyId |-> 1 Y:MyId |-> 2 MAP:Map) [ Y:MyId ] ) => . </k> requires X =/=K Y\n+claim <k> lookup ( (Y:MyId |-> 1 X:MyId |-> 2 MAP:Map) [ Y:MyId ] ) => . </k> requires X =/=K Y", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNDg3Nw=="}, "originalCommit": {"oid": "a3350e3d1a60ed90714201ae25037975e2886eca"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTEyMDM2OnYy", "diffSide": "RIGHT", "path": "k-distribution/include/kframework/builtin/domains.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0MjowMFrOIGU67w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0MjowMFrOIGU67w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNTEzNQ==", "bodyText": "I have a pointed question about this rule, below.", "url": "https://github.com/kframework/k/pull/1661#discussion_r543505135", "createdAt": "2020-12-15T16:42:00Z", "author": {"login": "ttuegel"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -408,9 +408,33 @@ endmodule\n \n module MAP-KORE-SYMBOLIC [kore,symbolic]\n   imports MAP\n+  imports K-EQUAL\n+\n+  rule #Ceil(@M:Map [@K:KItem]) => {(@K in_keys(@M)) #Equals true} #And #Ceil(@M) #And #Ceil(@K) [anywhere, simplification]\n+\n+  // Symbolic update\n+  rule (K |-> _ M:Map) [ K <- V ] => (K |-> V M) [simplification]\n+  rule M:Map [ K <- V ] => (K |-> V M) requires notBool (K in_keys(M)) [simplification]\n+  rule M:Map [ K <- _ ] [ K <- V ] => M [ K <- V ] [simplification]\n+  rule (K1 |-> V1 M:Map) [ K2 <- V2 ] => (K1 |-> V1 (M [ K2 <- V2 ])) requires K1 =/=K K2 [simplification]\n \n-   rule #Ceil(@M:Map [@K:KItem]) => {(@K in_keys(@M)) #Equals true} #And #Ceil(@M) #And #Ceil(@K) [anywhere, simplification]\n+  // Symbolic remove\n+  rule (K |-> _ M:Map) [ K <- undef ] => M [simplification]\n+  rule M:Map [ K <- undef ] => M requires notBool (K in_keys(M)) [simplification]\n+  rule (K1 |-> V1 M:Map) [ K2 <- undef ] => (K1 |-> V1 (M [ K2 <- undef ])) requires K1 =/=K K2 [simplification]\n \n+  // Symbolic lookup\n+  rule (K |-> V _:Map) [ K ] => V [simplification]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3350e3d1a60ed90714201ae25037975e2886eca"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTEzMTEyOnYy", "diffSide": "RIGHT", "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0Mzo1MFrOIGVBBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMToyNDo1MFrOIHAltw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNjY5Mg==", "bodyText": "Could you please add\nclaim <k> remove ( (X:MyId |-> 1 Y:MyId |-> 2) [ X <- undef ] ) => . </k>", "url": "https://github.com/kframework/k/pull/1661#discussion_r543506692", "createdAt": "2020-12-15T16:43:50Z", "author": {"login": "ttuegel"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove", "diffHunk": "@@ -0,0 +1,17 @@\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k>\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z  ==K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z  ==K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z  ==K Y\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K Y\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z  ==K X andBool Y =/=K X\n+claim <k> remove ( (X:MyId |-> 3 y |-> 4) [ x <- undef ] [ X ] ) => . </k> requires X =/=K x\n+claim <k> remove ( (X:MyId |-> 3 y |-> 4) [ x <- undef ] [ X ] ) => . </k> requires X =/=K y", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3350e3d1a60ed90714201ae25037975e2886eca"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIyMDU5OQ==", "bodyText": "The result is:\n<k>\n  removeResult ( Y:MyId |-> 2 ~> . ) ~> .\n</k>", "url": "https://github.com/kframework/k/pull/1661#discussion_r544220599", "createdAt": "2020-12-16T11:24:50Z", "author": {"login": "ana-pantilie"}, "path": "k-distribution/tests/regression-new/map-symbolic-tests-haskell/remove", "diffHunk": "@@ -0,0 +1,17 @@\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z  ==K Y andBool Z  ==K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y ==K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k>\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z  ==K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Y =/=K X andBool Z =/=K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z  ==K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z  ==K Y\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K Y\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z =/=K X\n+claim <k> remove ( (MAP:Map X:MyId |-> 1) [Y:MyId <- undef] [ Z:MyId ] ) => . </k> requires Z =/=K Y andBool Z  ==K X andBool Y =/=K X\n+claim <k> remove ( (X:MyId |-> 3 y |-> 4) [ x <- undef ] [ X ] ) => . </k> requires X =/=K x\n+claim <k> remove ( (X:MyId |-> 3 y |-> 4) [ x <- undef ] [ X ] ) => . </k> requires X =/=K y", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNjY5Mg=="}, "originalCommit": {"oid": "a3350e3d1a60ed90714201ae25037975e2886eca"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTEzMjUyOnYy", "diffSide": "RIGHT", "path": "k-distribution/include/kframework/builtin/domains.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0NDowNVrOIGVBzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0NDowNVrOIGVBzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNjg5NQ==", "bodyText": "I also have a pointed question about this rule below.", "url": "https://github.com/kframework/k/pull/1661#discussion_r543506895", "createdAt": "2020-12-15T16:44:05Z", "author": {"login": "ttuegel"}, "path": "k-distribution/include/kframework/builtin/domains.md", "diffHunk": "@@ -408,9 +408,33 @@ endmodule\n \n module MAP-KORE-SYMBOLIC [kore,symbolic]\n   imports MAP\n+  imports K-EQUAL\n+\n+  rule #Ceil(@M:Map [@K:KItem]) => {(@K in_keys(@M)) #Equals true} #And #Ceil(@M) #And #Ceil(@K) [anywhere, simplification]\n+\n+  // Symbolic update\n+  rule (K |-> _ M:Map) [ K <- V ] => (K |-> V M) [simplification]\n+  rule M:Map [ K <- V ] => (K |-> V M) requires notBool (K in_keys(M)) [simplification]\n+  rule M:Map [ K <- _ ] [ K <- V ] => M [ K <- V ] [simplification]\n+  rule (K1 |-> V1 M:Map) [ K2 <- V2 ] => (K1 |-> V1 (M [ K2 <- V2 ])) requires K1 =/=K K2 [simplification]\n \n-   rule #Ceil(@M:Map [@K:KItem]) => {(@K in_keys(@M)) #Equals true} #And #Ceil(@M) #And #Ceil(@K) [anywhere, simplification]\n+  // Symbolic remove\n+  rule (K |-> _ M:Map) [ K <- undef ] => M [simplification]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3350e3d1a60ed90714201ae25037975e2886eca"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2933, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}