{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTI1OTEx", "number": 1252, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoxODo1MlrOEFE2aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoxODo1MlrOEFE2aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzU3ODAwOnYy", "diffSide": "RIGHT", "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoxODo1MlrOGjFv1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMTo1NToxMFrOG5LoCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ==", "bodyText": "We should allow priority on simplification rules. For example, this is needed for the arithmetic simplification lemmas.", "url": "https://github.com/kframework/k/pull/1252#discussion_r439447509", "createdAt": "2020-06-12T14:18:52Z", "author": {"login": "ana-pantilie"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcxNDM3MA==", "bodyText": "@ana-pantilie could you provide an example?", "url": "https://github.com/kframework/k/pull/1252#discussion_r439714370", "createdAt": "2020-06-13T06:30:22Z", "author": {"login": "traiansf"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ=="}, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3MTc1Ng==", "bodyText": "@traiansf These rules need to apply after any of the less general rules below.", "url": "https://github.com/kframework/k/pull/1252#discussion_r439971756", "createdAt": "2020-06-15T07:12:29Z", "author": {"login": "ana-pantilie"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ=="}, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk5OTAzNg==", "bodyText": "@ana-pantilie I agree it makes sense to try some simplification rules only after other simplification rules have been attempted, but I'm wondering whether using priority would not create confusion.\nThe reason I'm saying this is that for other cases (rules, function definitions), priority has semantic meaning (forces a check that rules with less priority cannot be applies), while priority for simplification axioms probably shouldn't, as it is more of a preference to attempt it before other simplification axioms. Maybe we could allow the simplification attribute to take an extra argument?", "url": "https://github.com/kframework/k/pull/1252#discussion_r439999036", "createdAt": "2020-06-15T08:06:22Z", "author": {"login": "traiansf"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ=="}, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODM0NQ==", "bodyText": "@traiansf Yes, you're right, it could be confusing. @ttuegel what do you think?", "url": "https://github.com/kframework/k/pull/1252#discussion_r440008345", "createdAt": "2020-06-15T08:23:13Z", "author": {"login": "ana-pantilie"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ=="}, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIwNzAyMg==", "bodyText": "Maybe we could allow the simplification attribute to take an extra argument?\n\nThat sounds fine.", "url": "https://github.com/kframework/k/pull/1252#discussion_r440207022", "createdAt": "2020-06-15T14:14:54Z", "author": {"login": "ttuegel"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ=="}, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2MDQxMw==", "bodyText": "@dwightguth I'm trying to add an optional argument to the simplification attribute so we can write (for example) simplification(51). When I add arguments like that, the frontend starts to encode simplification (without arguments) as simplification(\"\") in the generated Kore. I want similar behavior to the concrete attribute: concrete becomes concrete(), concrete(X) becomes concrete(\"X\"), etc. Can you advise how I might do that?", "url": "https://github.com/kframework/k/pull/1252#discussion_r462560413", "createdAt": "2020-07-29T20:13:38Z", "author": {"login": "ttuegel"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ=="}, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjYxMjQ4OQ==", "bodyText": "I have no idea how that happens the way it does now with the concrete attribute. If anything that sounds suspicious to me and indicates that the code is probably doing something unintended. The way it is supposed to work in the current code is to decide whether the attribute has an argument based on whether a nonempty string appears anywhere as the argument of the attribute. So in that sense what you describe is the intended behavior. The k frontend doesn't actually know how to distinguish between an attribute foo and an attribute foo(). This could in theory be changed, but it's not remotely trivial and would likely be a very intrusive change to the frontend.", "url": "https://github.com/kframework/k/pull/1252#discussion_r462612489", "createdAt": "2020-07-29T21:55:10Z", "author": {"login": "dwightguth"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckAtt.java", "diffHunk": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2016-2019 K Team. All Rights Reserved.\n+package org.kframework.compile.checks;\n+\n+import org.kframework.attributes.Att;\n+import org.kframework.attributes.HasLocation;\n+import org.kframework.definition.Module;\n+import org.kframework.definition.Rule;\n+import org.kframework.definition.Sentence;\n+import org.kframework.utils.errorsystem.KEMException;\n+\n+import java.util.Set;\n+\n+/**\n+ * Created by dwightguth on 1/25/16.\n+ */\n+public class CheckAtt {\n+    private final Set<KEMException> errors;\n+    private final Module m;\n+\n+    public CheckAtt(Set<KEMException> errors, Module m) {\n+        this.errors = errors;\n+        this.m = m;\n+    }\n+\n+    public void check(Sentence sentence) {\n+        if (sentence instanceof Rule) {\n+            check(((Rule) sentence).att(), sentence);\n+        }\n+    }\n+\n+    private void check(Att att, HasLocation loc) {\n+        if (att.contains(Att.OWISE()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"owise attribute is not supported on simplification rules.\", loc));\n+        }\n+        if (att.contains(Att.PRIORITY()) && att.contains(Att.SIMPLIFICATION())) {\n+          errors.add(KEMException.compilerError(\"priority attribute is not supported on simplification rules.\", loc));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0NzUwOQ=="}, "originalCommit": {"oid": "e46f70b2fe4812ebad726f06d7798b80eff8dab0"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3081, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}