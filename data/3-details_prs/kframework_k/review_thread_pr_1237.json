{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDI2MDI2", "number": 1237, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwOTo1NjowN1rOD2SrWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMDoxMDo0OVrOD2S0jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjU1NzA0OnYy", "diffSide": "RIGHT", "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwOTo1NjowN1rOGMCEfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNToxMjoyMVrOGMRB8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDAxNQ==", "bodyText": "contains() must be used here", "url": "https://github.com/kframework/k/pull/1237#discussion_r415270015", "createdAt": "2020-04-26T09:56:07Z", "author": {"login": "denis-bogdanas"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -656,6 +676,13 @@ public SMTLibTerm transform(BitVector bitVector) {\n \n     @Override\n     public SMTLibTerm transform(UninterpretedToken uninterpretedToken) {\n+        if (uninterpretedToken.sort() == Sort.KVARIABLE) {\n+            if (binders.search(uninterpretedToken) != -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxNTEyMw==", "bodyText": "fixed", "url": "https://github.com/kframework/k/pull/1237#discussion_r415515123", "createdAt": "2020-04-27T05:12:21Z", "author": {"login": "daejunpark"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -656,6 +676,13 @@ public SMTLibTerm transform(BitVector bitVector) {\n \n     @Override\n     public SMTLibTerm transform(UninterpretedToken uninterpretedToken) {\n+        if (uninterpretedToken.sort() == Sort.KVARIABLE) {\n+            if (binders.search(uninterpretedToken) != -1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDAxNQ=="}, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjU2MjY0OnYy", "diffSide": "RIGHT", "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwOTo1OTozMVrOGMCHEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMToxMzo1MlrOGMdwog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDY3NA==", "bodyText": "This whole feature is extraordinary error-prone. I'd say a warning must be added here when it is used.", "url": "https://github.com/kframework/k/pull/1237#discussion_r415270674", "createdAt": "2020-04-26T09:59:31Z", "author": {"login": "denis-bogdanas"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -571,10 +587,14 @@ public SMTLibTerm transform(KItem kItem) {\n         if (label.startsWith(\"(\")) {\n             // smtlib expression instead of operator\n             String expression = label;\n+            boolean hasBinder = recordBinders(label, kList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxNTE1Mw==", "bodyText": "added", "url": "https://github.com/kframework/k/pull/1237#discussion_r415515153", "createdAt": "2020-04-27T05:12:27Z", "author": {"login": "daejunpark"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -571,10 +587,14 @@ public SMTLibTerm transform(KItem kItem) {\n         if (label.startsWith(\"(\")) {\n             // smtlib expression instead of operator\n             String expression = label;\n+            boolean hasBinder = recordBinders(label, kList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDY3NA=="}, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyMzY4Mg==", "bodyText": "This is no longer applicable.", "url": "https://github.com/kframework/k/pull/1237#discussion_r415723682", "createdAt": "2020-04-27T11:13:52Z", "author": {"login": "daejunpark"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -571,10 +587,14 @@ public SMTLibTerm transform(KItem kItem) {\n         if (label.startsWith(\"(\")) {\n             // smtlib expression instead of operator\n             String expression = label;\n+            boolean hasBinder = recordBinders(label, kList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDY3NA=="}, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjU4MDYyOnYy", "diffSide": "RIGHT", "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMDoxMDo0OVrOGMCPPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMToxNDo1MlrOGMdzKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3Mjc2Nw==", "bodyText": "This variable must be renamed. Like smtlibForallOrExistsBinder ? Long names are better than confusing names.", "url": "https://github.com/kframework/k/pull/1237#discussion_r415272767", "createdAt": "2020-04-26T10:10:49Z", "author": {"login": "denis-bogdanas"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -243,6 +246,7 @@ public static CharSequence translateImplication(\n     private final LinkedHashSet<Variable> variables;\n     private final LinkedHashMap<Term, Variable> termAbstractionMap;\n     private final LinkedHashMap<UninterpretedToken, Integer> tokenEncoding;\n+    private final Stack<Term> binders;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxNTE4MQ==", "bodyText": "done", "url": "https://github.com/kframework/k/pull/1237#discussion_r415515181", "createdAt": "2020-04-27T05:12:34Z", "author": {"login": "daejunpark"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -243,6 +246,7 @@ public static CharSequence translateImplication(\n     private final LinkedHashSet<Variable> variables;\n     private final LinkedHashMap<Term, Variable> termAbstractionMap;\n     private final LinkedHashMap<UninterpretedToken, Integer> tokenEncoding;\n+    private final Stack<Term> binders;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3Mjc2Nw=="}, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNDMzMQ==", "bodyText": "Now this PR becomes more general, and the name binders is appropriate.", "url": "https://github.com/kframework/k/pull/1237#discussion_r415724331", "createdAt": "2020-04-27T11:14:52Z", "author": {"login": "daejunpark"}, "path": "java-backend/src/main/java/org/kframework/backend/java/symbolic/KILtoSMTLib.java", "diffHunk": "@@ -243,6 +246,7 @@ public static CharSequence translateImplication(\n     private final LinkedHashSet<Variable> variables;\n     private final LinkedHashMap<Term, Variable> termAbstractionMap;\n     private final LinkedHashMap<UninterpretedToken, Integer> tokenEncoding;\n+    private final Stack<Term> binders;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3Mjc2Nw=="}, "originalCommit": {"oid": "edb4b23f0f6142daaa6a0db54fa5d7fb83da2b80"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3133, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}