{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTAyNTYx", "number": 1054, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMTozMToxNFrODaUYWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMTozMjowNVrODaUZbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTIzNDgwOnYy", "diffSide": "RIGHT", "path": "kernel/src/main/java/org/kframework/compile/ExpandMacros.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMTozMToxNFrOFhNS4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjozMzoxNFrOFhjUvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTE1NA==", "bodyText": "I'm not entirely sure what's going on here, but I don't like that we're calling out variables by name specifically. Would this be affected if I named a variable as BLAH_Configuration in my definition?", "url": "https://github.com/kframework/k/pull/1054#discussion_r370365154", "createdAt": "2020-01-23T21:31:14Z", "author": {"login": "ehildenb"}, "path": "kernel/src/main/java/org/kframework/compile/ExpandMacros.java", "diffHunk": "@@ -220,6 +220,9 @@ public K apply(KApply k) {\n                                 public K apply(KVariable k) {\n                                     K result = subst.get(k);\n                                     if (result == null) {\n+                                      if (k.name().equals(\"_Configuration\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1076513957b82ab26ed8aa4eb5838e02b36f194d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyNjA3Ng==", "bodyText": "No, it's an exact string match, and this particular string is not part of the syntax of variables in K, so it can't be written by the user. This isn't really a new design choice though; the function context pass was already written this way, we're just fixing a bug in how it interacts with macros.", "url": "https://github.com/kframework/k/pull/1054#discussion_r370726076", "createdAt": "2020-01-24T16:33:14Z", "author": {"login": "dwightguth"}, "path": "kernel/src/main/java/org/kframework/compile/ExpandMacros.java", "diffHunk": "@@ -220,6 +220,9 @@ public K apply(KApply k) {\n                                 public K apply(KVariable k) {\n                                     K result = subst.get(k);\n                                     if (result == null) {\n+                                      if (k.name().equals(\"_Configuration\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTE1NA=="}, "originalCommit": {"oid": "1076513957b82ab26ed8aa4eb5838e02b36f194d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTIzNzU4OnYy", "diffSide": "LEFT", "path": "kernel/src/main/java/org/kframework/compile/ResolveFunctionWithConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMTozMjowNVrOFhNUgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNjozMzozNlrOFhjVYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTU3MA==", "bodyText": "So now we are expanding macros on macro rules? Just want to make sure that I understand what this is doing.", "url": "https://github.com/kframework/k/pull/1054#discussion_r370365570", "createdAt": "2020-01-23T21:32:05Z", "author": {"login": "ehildenb"}, "path": "kernel/src/main/java/org/kframework/compile/ResolveFunctionWithConfig.java", "diffHunk": "@@ -233,9 +233,6 @@ public Sentence resolveConfigVar(Sentence s) {\n     }\n \n     public Sentence resolve(Module m, Sentence s) {\n-        if (ExpandMacros.isMacro(s)) {\n-            return s;\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1076513957b82ab26ed8aa4eb5838e02b36f194d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDcyNjI0Mw==", "bodyText": "This is applying the function context pass to macro rules.", "url": "https://github.com/kframework/k/pull/1054#discussion_r370726243", "createdAt": "2020-01-24T16:33:36Z", "author": {"login": "dwightguth"}, "path": "kernel/src/main/java/org/kframework/compile/ResolveFunctionWithConfig.java", "diffHunk": "@@ -233,9 +233,6 @@ public Sentence resolveConfigVar(Sentence s) {\n     }\n \n     public Sentence resolve(Module m, Sentence s) {\n-        if (ExpandMacros.isMacro(s)) {\n-            return s;\n-        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM2NTU3MA=="}, "originalCommit": {"oid": "1076513957b82ab26ed8aa4eb5838e02b36f194d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3148, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}