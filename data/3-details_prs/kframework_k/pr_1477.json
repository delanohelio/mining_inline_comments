{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMjI4MDU4", "number": 1477, "title": "Check attributes (symbolic/concrete/simplification)", "bodyText": "Fixes #1470", "createdAt": "2020-07-31T15:03:33Z", "url": "https://github.com/kframework/k/pull/1477", "merged": true, "mergeCommit": {"oid": "4726e93bc8a273a38d528b4366df5f847dbb04b1"}, "closed": true, "closedAt": "2020-08-04T21:33:54Z", "author": {"login": "dwightguth"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7owIFgH2gAyNDYwMjI4MDU4OjJmZDBhOTI4OGEwNjY4YjAxOWFlZmEwNWRhOThlOWNmNzA5YjJmMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7sTf2AH2gAyNDYwMjI4MDU4OmY1YjJiZDdkOGMwZDE5MzNjMDIxNDQzNWIyNTJhNTllM2UyMDdiNDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2fd0a9288a0668b019aefa05da98e9cf709b2f1d", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/2fd0a9288a0668b019aefa05da98e9cf709b2f1d", "committedDate": "2020-08-04T15:56:23Z", "message": "fix missing simplification attribute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51ac68a0cc35faefa267fc748c309e6fb7f029c3", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/51ac68a0cc35faefa267fc748c309e6fb7f029c3", "committedDate": "2020-08-04T15:58:30Z", "message": "add check for concrete and symbolic attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "315dbda44d9955b2ee314777246cda59c6a09f40", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/315dbda44d9955b2ee314777246cda59c6a09f40", "committedDate": "2020-08-04T16:01:39Z", "message": "add test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac0af879eb49222d57f491188ceff23708b07412", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/ac0af879eb49222d57f491188ceff23708b07412", "committedDate": "2020-07-31T15:41:58Z", "message": "fix test"}, "afterCommit": {"oid": "315dbda44d9955b2ee314777246cda59c6a09f40", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/315dbda44d9955b2ee314777246cda59c6a09f40", "committedDate": "2020-08-04T16:01:39Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be8cbe1bee3c26bc921f563343b59b61e9f85085", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/be8cbe1bee3c26bc921f563343b59b61e9f85085", "committedDate": "2020-08-04T17:54:41Z", "message": "Merge branch 'master' into checkatt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDQyMjc5", "url": "https://github.com/kframework/k/pull/1477#pullrequestreview-461042279", "createdAt": "2020-08-04T17:56:42Z", "commit": {"oid": "be8cbe1bee3c26bc921f563343b59b61e9f85085"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzo1Njo0MlrOG7rVhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzo1Njo0MlrOG7rVhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIyOTE5MQ==", "bodyText": "Just to make sure, can you add a test that uses concrete(X) or symbolic(X,Y) as well? Because that's another form that these show up in.", "url": "https://github.com/kframework/k/pull/1477#discussion_r465229191", "createdAt": "2020-08-04T17:56:42Z", "author": {"login": "ehildenb"}, "path": "k-distribution/tests/regression-new/checks/concrete.k", "diffHunk": "@@ -0,0 +1,26 @@\n+module CONCRETE\n+  imports INT\n+\n+  rule 0 +Int X => X [symbolic, simplification]\n+  rule 1 +Int X => X +Int 1 [concrete, simplification]\n+  rule 0 *Int X => 0 [symbolic]\n+  rule 1 *Int X => X [concrete]\n+\n+  syntax Int ::= foo(Int) [function]\n+  rule foo(0) => 0 [symbolic, concrete]\n+\n+  syntax Int ::= bar(Int) [function]\n+  rule bar(0) => 0 [symbolic]\n+\n+  syntax Int ::= bar2(Int) [function]\n+  rule bar2(0) => 0 [symbolic]\n+  rule bar2(1) => 1\n+\n+  syntax Int ::= baz(Int) [function]\n+  rule baz(0) => 0 [concrete]\n+\n+  syntax Int ::= baz2(Int) [function]\n+  rule baz2(0) => 0 [concrete]\n+  rule baz2(1) => 1\n+\n+endmodule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be8cbe1bee3c26bc921f563343b59b61e9f85085"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDQ0Mjg0", "url": "https://github.com/kframework/k/pull/1477#pullrequestreview-461044284", "createdAt": "2020-08-04T17:59:22Z", "commit": {"oid": "be8cbe1bee3c26bc921f563343b59b61e9f85085"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzo1OToyMlrOG7rbYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzo1OToyMlrOG7rbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMDY4OQ==", "bodyText": "Also add a test that does both concrete(X), symbolic(X), simplification, because it looks like you added a check for this case too.", "url": "https://github.com/kframework/k/pull/1477#discussion_r465230689", "createdAt": "2020-08-04T17:59:22Z", "author": {"login": "ehildenb"}, "path": "k-distribution/tests/regression-new/checks/concrete.k", "diffHunk": "@@ -0,0 +1,26 @@\n+module CONCRETE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be8cbe1bee3c26bc921f563343b59b61e9f85085"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDQ3MDY1", "url": "https://github.com/kframework/k/pull/1477#pullrequestreview-461047065", "createdAt": "2020-08-04T18:03:19Z", "commit": {"oid": "be8cbe1bee3c26bc921f563343b59b61e9f85085"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODowMzoxOVrOG7rjow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODowMzoxOVrOG7rjow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIzMjgwMw==", "bodyText": "I really am not a fan of this way of selecting \"foo\" as the default to compare too. Would prefer something like:\nSet<String> concreteVars = computeConcreteVars();\nSet<String> symbolicVars = computeSymbolicVars();\nif ((! (concreteVars.isEmpty() && symbolicVars.isEmpty())) && hasSimplification()) {\n   error(\"Can't have concrete/symbolic without simplification\");\n}\nif (concreteVars.intersects(symbolicVars)) {\n   error(\"Can't have the same variable both concrete/symbolic: \" concreteVars.intersection(symbolicVars));\n}\n\nThe logic you have here is pretty hard to read.", "url": "https://github.com/kframework/k/pull/1477#discussion_r465232803", "createdAt": "2020-08-04T18:03:19Z", "author": {"login": "ehildenb"}, "path": "kernel/src/main/java/org/kframework/compile/checks/CheckKLabels.java", "diffHunk": "@@ -149,6 +150,32 @@ public void check() {\n                 kem.registerCompilerWarning(ExceptionType.UNUSED_SYMBOL, errors, \"Symbol '\" + symbol + \"' defined but not used. Add the 'unused' attribute if this is intentional.\", klabelProds.get(symbol));\n             }\n         }\n+        for (KLabel function : iterable(mainMod.functions())) {\n+            boolean allConcrete = true;\n+            boolean allSymbolic = true;\n+            for (Rule rule : iterable(mainMod.rulesFor().get(function).getOrElse(() -> Collections.<Rule>Set()))) {\n+                if ((rule.att().getOptional(Att.CONCRETE()).orElse(\"foo\").equals(\"\") &&\n+                    rule.att().contains(Att.SYMBOLIC())) ||\n+                    (rule.att().getOptional(Att.SYMBOLIC()).orElse(\"foo\").equals(\"\") &&\n+                    rule.att().contains(Att.CONCRETE()))) {\n+                    errors.add(KEMException.compilerError(\"Rule cannot be both concrete and symbolic in the same variable.\", rule));\n+                }\n+                if (!rule.att().getOptional(Att.CONCRETE()).orElse(\"foo\").equals(\"\")) {\n+                    allConcrete = false;\n+                }\n+                if (!rule.att().getOptional(Att.SYMBOLIC()).orElse(\"foo\").equals(\"\")) {\n+                    allSymbolic = false;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be8cbe1bee3c26bc921f563343b59b61e9f85085"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f564dba2e462af2a74fa8a0944fd5b55134bd97d", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/f564dba2e462af2a74fa8a0944fd5b55134bd97d", "committedDate": "2020-08-04T18:15:56Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4737e09256ae30e72c6755335392fb0bd3e79d55", "author": {"user": {"login": "dwightguth", "name": "Dwight Guth"}}, "url": "https://github.com/kframework/k/commit/4737e09256ae30e72c6755335392fb0bd3e79d55", "committedDate": "2020-08-04T18:18:47Z", "message": "make code more readable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDYxMTI0", "url": "https://github.com/kframework/k/pull/1477#pullrequestreview-461061124", "createdAt": "2020-08-04T18:23:43Z", "commit": {"oid": "4737e09256ae30e72c6755335392fb0bd3e79d55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDYzODQ0", "url": "https://github.com/kframework/k/pull/1477#pullrequestreview-461063844", "createdAt": "2020-08-04T18:27:39Z", "commit": {"oid": "4737e09256ae30e72c6755335392fb0bd3e79d55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5b2bd7d8c0d1933c0214435b252a59e3e207b40", "author": {"user": {"login": "rv-jenkins", "name": null}}, "url": "https://github.com/kframework/k/commit/f5b2bd7d8c0d1933c0214435b252a59e3e207b40", "committedDate": "2020-08-04T20:04:44Z", "message": "Merge branch 'master' into checkatt"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2339, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}