{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTQ4MDEw", "number": 10481, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo0ODoyN1rOEqgc9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNToyNTozMFrOEs3rag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDA3MzQ4OnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo0ODoyN1rOHcwSUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMzoyMzo0NVrOHcw8rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxMzI5OQ==", "bodyText": "shardSpec was introduced in this change #9883 and changing it to shard_spec would be a breaking change. I don't think we should do this without an upgrade plan", "url": "https://github.com/apache/druid/pull/10481#discussion_r499913299", "createdAt": "2020-10-05T22:48:27Z", "author": {"login": "suneet-s"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -142,7 +143,7 @@\n       .add(\"is_available\", ValueType.LONG)\n       .add(\"is_realtime\", ValueType.LONG)\n       .add(\"is_overshadowed\", ValueType.LONG)\n-      .add(\"shardSpec\", ValueType.STRING)\n+      .add(\"shard_spec\", ValueType.STRING)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2f9d86cafc1b634af904599cf96c813e56e7553"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxOTI3NA==", "bodyText": "I don't think there is anything in Druid depending on shardSpec (similar to how the linked PR changed payload to shardSpec, metrics, dimensions). I can update the document but I don't think anything will break. I guess unless someone has a custom script reading this field which is probably unlikely and is why we should change this ASAP.", "url": "https://github.com/apache/druid/pull/10481#discussion_r499919274", "createdAt": "2020-10-05T23:07:33Z", "author": {"login": "maytasm"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -142,7 +143,7 @@\n       .add(\"is_available\", ValueType.LONG)\n       .add(\"is_realtime\", ValueType.LONG)\n       .add(\"is_overshadowed\", ValueType.LONG)\n-      .add(\"shardSpec\", ValueType.STRING)\n+      .add(\"shard_spec\", ValueType.STRING)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxMzI5OQ=="}, "originalCommit": {"oid": "a2f9d86cafc1b634af904599cf96c813e56e7553"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkyMjQ3OQ==", "bodyText": "The linked PR added those fields, so we didn't have to worry about backwards incompatibility.\n@yuanlihan since you introduced this field, do you have any comments on changing the name of this field?", "url": "https://github.com/apache/druid/pull/10481#discussion_r499922479", "createdAt": "2020-10-05T23:18:05Z", "author": {"login": "suneet-s"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -142,7 +143,7 @@\n       .add(\"is_available\", ValueType.LONG)\n       .add(\"is_realtime\", ValueType.LONG)\n       .add(\"is_overshadowed\", ValueType.LONG)\n-      .add(\"shardSpec\", ValueType.STRING)\n+      .add(\"shard_spec\", ValueType.STRING)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxMzI5OQ=="}, "originalCommit": {"oid": "a2f9d86cafc1b634af904599cf96c813e56e7553"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkyNDE0MA==", "bodyText": "The linked PR removed payload and added shardSpec, metrics, dimensions", "url": "https://github.com/apache/druid/pull/10481#discussion_r499924140", "createdAt": "2020-10-05T23:23:45Z", "author": {"login": "maytasm"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -142,7 +143,7 @@\n       .add(\"is_available\", ValueType.LONG)\n       .add(\"is_realtime\", ValueType.LONG)\n       .add(\"is_overshadowed\", ValueType.LONG)\n-      .add(\"shardSpec\", ValueType.STRING)\n+      .add(\"shard_spec\", ValueType.STRING)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxMzI5OQ=="}, "originalCommit": {"oid": "a2f9d86cafc1b634af904599cf96c813e56e7553"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDg1MDM0OnYy", "diffSide": "RIGHT", "path": "docs/querying/sql.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNToyNTozMFrOHgV2Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNToyMToyNVrOHhCnqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3NDQ2Mg==", "bodyText": "suggest \"JSON-serialized form\" instead here and elsewhere", "url": "https://github.com/apache/druid/pull/10481#discussion_r503674462", "createdAt": "2020-10-13T05:25:30Z", "author": {"login": "jon-wei"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1083,10 +1083,10 @@ Segments table provides details on all Druid segments, whether they are publishe\n |is_available|LONG|Boolean is represented as long type where 1 = true, 0 = false. 1 if this segment is currently being served by any process(Historical or realtime). See the [Architecture page](../design/architecture.md#segment-lifecycle) for more details.|\n |is_realtime|LONG|Boolean is represented as long type where 1 = true, 0 = false. 1 if this segment is _only_ served by realtime tasks, and 0 if any historical process is serving this segment.|\n |is_overshadowed|LONG|Boolean is represented as long type where 1 = true, 0 = false. 1 if this segment is published and is _fully_ overshadowed by some other published segments. Currently, is_overshadowed is always false for unpublished segments, although this may change in the future. You can filter for segments that \"should be published\" by filtering for `is_published = 1 AND is_overshadowed = 0`. Segments can briefly be both published and overshadowed if they were recently replaced, but have not been unpublished yet. See the [Architecture page](../design/architecture.md#segment-lifecycle) for more details.|\n-|shardSpec|STRING|The toString of specific `ShardSpec`|\n-|dimensions|STRING|The dimensions of the segment|\n-|metrics|STRING|The metrics of the segment|\n-|last_compaction_state|STRING|The configurations of the compaction task which created this segment. May be null if segment was not created by compaction task.|\n+|shard_spec|STRING|JSON-serialized of the segment `ShardSpec`|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a0448d736cd26aa56280632631139e158e1d13a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwNzk3OA==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10481#discussion_r504407978", "createdAt": "2020-10-14T05:21:25Z", "author": {"login": "maytasm"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1083,10 +1083,10 @@ Segments table provides details on all Druid segments, whether they are publishe\n |is_available|LONG|Boolean is represented as long type where 1 = true, 0 = false. 1 if this segment is currently being served by any process(Historical or realtime). See the [Architecture page](../design/architecture.md#segment-lifecycle) for more details.|\n |is_realtime|LONG|Boolean is represented as long type where 1 = true, 0 = false. 1 if this segment is _only_ served by realtime tasks, and 0 if any historical process is serving this segment.|\n |is_overshadowed|LONG|Boolean is represented as long type where 1 = true, 0 = false. 1 if this segment is published and is _fully_ overshadowed by some other published segments. Currently, is_overshadowed is always false for unpublished segments, although this may change in the future. You can filter for segments that \"should be published\" by filtering for `is_published = 1 AND is_overshadowed = 0`. Segments can briefly be both published and overshadowed if they were recently replaced, but have not been unpublished yet. See the [Architecture page](../design/architecture.md#segment-lifecycle) for more details.|\n-|shardSpec|STRING|The toString of specific `ShardSpec`|\n-|dimensions|STRING|The dimensions of the segment|\n-|metrics|STRING|The metrics of the segment|\n-|last_compaction_state|STRING|The configurations of the compaction task which created this segment. May be null if segment was not created by compaction task.|\n+|shard_spec|STRING|JSON-serialized of the segment `ShardSpec`|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY3NDQ2Mg=="}, "originalCommit": {"oid": "4a0448d736cd26aa56280632631139e158e1d13a"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3010, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}