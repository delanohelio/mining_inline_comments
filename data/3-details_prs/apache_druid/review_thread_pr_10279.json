{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NzI5MjI2", "number": 10279, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo1Mzo1OFrOEacf_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0Mjo1MVrOEarmnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTY1MzcyOnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidQuery.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo1Mzo1OFrOHD4cpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOToyMzo0NlrOHEP6TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgzMjYxMw==", "bodyText": "Would it be worth pushing a method into OffsetLimit to check that limit is greater than 0 to use for timeseries/group by/scan to use instead of hasLimit?", "url": "https://github.com/apache/druid/pull/10279#discussion_r473832613", "createdAt": "2020-08-20T09:53:58Z", "author": {"login": "clintropolis"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidQuery.java", "diffHunk": "@@ -762,9 +756,20 @@ public TimeseriesQuery toTimeseriesQuery()\n           Iterables.getOnlyElement(grouping.getDimensions()).toDimensionSpec().getOutputName()\n       );\n       if (sorting != null) {\n-        // If there is sorting, set timeseriesLimit to given value if less than Integer.Max_VALUE\n-        if (sorting.isLimited()) {\n-          timeseriesLimit = Ints.checkedCast(sorting.getLimit());\n+        if (sorting.getOffsetLimit().hasOffset()) {\n+          // Timeseries cannot handle offsets.\n+          return null;\n+        }\n+\n+        if (sorting.getOffsetLimit().hasLimit()) {\n+          final long limit = sorting.getOffsetLimit().getLimit();\n+\n+          if (limit == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891a38952b40e1af876f0b5e233a3dd6c7f635ba"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg1MzIzNA==", "bodyText": "Ah i wasn't thinking it through, I guess you still need to check hasLimit for the non-zero case.\nFor timeseries though, it looks like timeseriesLimit is initialized to 0, is returning null here changing behavior? I guess a zero here is an explicit zero, meaning unlimited wasn't probably the expected response?", "url": "https://github.com/apache/druid/pull/10279#discussion_r473853234", "createdAt": "2020-08-20T10:19:06Z", "author": {"login": "clintropolis"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidQuery.java", "diffHunk": "@@ -762,9 +756,20 @@ public TimeseriesQuery toTimeseriesQuery()\n           Iterables.getOnlyElement(grouping.getDimensions()).toDimensionSpec().getOutputName()\n       );\n       if (sorting != null) {\n-        // If there is sorting, set timeseriesLimit to given value if less than Integer.Max_VALUE\n-        if (sorting.isLimited()) {\n-          timeseriesLimit = Ints.checkedCast(sorting.getLimit());\n+        if (sorting.getOffsetLimit().hasOffset()) {\n+          // Timeseries cannot handle offsets.\n+          return null;\n+        }\n+\n+        if (sorting.getOffsetLimit().hasLimit()) {\n+          final long limit = sorting.getOffsetLimit().getLimit();\n+\n+          if (limit == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgzMjYxMw=="}, "originalCommit": {"oid": "891a38952b40e1af876f0b5e233a3dd6c7f635ba"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxNzAzNg==", "bodyText": "That's true; at this point, a zero should be treated as an explicit zero. The native timeseries query treats 0 and null equivalently and both result in an unlimited query. So we have to bail out if the limit is an explicit zero.", "url": "https://github.com/apache/druid/pull/10279#discussion_r474217036", "createdAt": "2020-08-20T19:23:46Z", "author": {"login": "gianm"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidQuery.java", "diffHunk": "@@ -762,9 +756,20 @@ public TimeseriesQuery toTimeseriesQuery()\n           Iterables.getOnlyElement(grouping.getDimensions()).toDimensionSpec().getOutputName()\n       );\n       if (sorting != null) {\n-        // If there is sorting, set timeseriesLimit to given value if less than Integer.Max_VALUE\n-        if (sorting.isLimited()) {\n-          timeseriesLimit = Ints.checkedCast(sorting.getLimit());\n+        if (sorting.getOffsetLimit().hasOffset()) {\n+          // Timeseries cannot handle offsets.\n+          return null;\n+        }\n+\n+        if (sorting.getOffsetLimit().hasLimit()) {\n+          final long limit = sorting.getOffsetLimit().getLimit();\n+\n+          if (limit == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgzMjYxMw=="}, "originalCommit": {"oid": "891a38952b40e1af876f0b5e233a3dd6c7f635ba"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDEyODI4OnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0Mjo1MVrOHEQxNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo0NjoxM1rOHEQ3zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMTA5NQ==", "bodyText": "can limit be less than 0 here because of the preconditions in OffsetLimit?", "url": "https://github.com/apache/druid/pull/10279#discussion_r474231095", "createdAt": "2020-08-20T19:42:51Z", "author": {"login": "clintropolis"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidQuery.java", "diffHunk": "@@ -897,6 +906,11 @@ public GroupByQuery toGroupByQuery()\n       return null;\n     }\n \n+    if (sorting != null && sorting.getOffsetLimit().hasLimit() && sorting.getOffsetLimit().getLimit() <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891a38952b40e1af876f0b5e233a3dd6c7f635ba"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMjc4Mg==", "bodyText": "It can't, but I guess it doesn't hurt to overcheck.", "url": "https://github.com/apache/druid/pull/10279#discussion_r474232782", "createdAt": "2020-08-20T19:46:13Z", "author": {"login": "gianm"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/rel/DruidQuery.java", "diffHunk": "@@ -897,6 +906,11 @@ public GroupByQuery toGroupByQuery()\n       return null;\n     }\n \n+    if (sorting != null && sorting.getOffsetLimit().hasLimit() && sorting.getOffsetLimit().getLimit() <= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMTA5NQ=="}, "originalCommit": {"oid": "891a38952b40e1af876f0b5e233a3dd6c7f635ba"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2278, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}