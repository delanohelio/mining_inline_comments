{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTAwNjg2", "number": 10284, "title": "Add dynamic coordinator config that allows control over how many segments are considered when picking a segment to move.", "bodyText": "Release Notes\nA new Coordinator Dynamic Config, percentOfSegmentsToConsiderPerMove, has been added. This configuration specifies the percent of served segments that will be considered when picking a segment to potentially move. The coordinator uses this value and the number of currently served segments to calculate the number of segments that will be candidates. It will not consider any segments beyond that calculated number when picking a segment to move. The default value is 100, meaning the coordinator will consider all segments every time it is picking a segment to move. This default leads to the same behavior that existed prior to this configuration being added.\n\n\n\nDescription\n\nA large cluster with many segments results in a lot of work being done by the Coordinator in order to complete its duties. I believe that any optimization to coordinator duties can help in a large cluster. This patch gives an experienced admin a knob to turn in order to try and shave some time off of the balance segments duty. As of now, existing Balancer Strategies iterate over all of the segments in the cluster when choosing a segment to move. The first segment candidate is the most likely to be moved and the last segment candidate is the least likely to move. This patch gives an admin the ability to put a limit on the number of segments that will be candidates to be moved. For most cases, I don't think this knob will be needed, but in some large enterprise cases I feel that it could be beneficial.\n\nI updated the BalancerStrategy Interface. The pickSegmentToMove method gained a 3rd parameter that specifies the number of segments that should be considered when picking a segment to move.\nCostBalancerStrategy (and it's inheriting classes) and RandomBalancerStrategy both leverage ReservoirSegmentSampler to choose a segment \"at random\" from a list of candidate servers. I updated the required method in ReservoirSegmentSampler to adhere to the limiting parameter described above. If the limit is reached, the method picking a segment will break out of its iteration and return immediately.\nCurrently all code paths use a new dynamic coordinator config that an admin can tune if they'd like to put a limiter on this action of picking a segment to move. The default value for the config is such that all segments will be iterated and be candidates to pick. I thought a dynamic config was good because it is flexible and could be leveraged in times such as if you wanted to temporarily boost up the number of segments to move in order rebalance to new servers faster. If doing that, and you also wanted to make this go quicker by not bothering with having so many potential segments to be picked to move.\nThe new dynamic config is maxSegmentsToConsiderPerMove with a default of Integer.MAX_VALUE\nI call out in the documentation that an admin should be experienced when considering altering this config. I say that because in many cases, the default is fine.\n\n\nAn alternative of this approach would be to restrict what is sent to pickSegmentToMove in the first place. I choose not to approach this at this time because I didn't like the idea of either choosing the number of ServerHolders to send to pickSegmentsToMove or to analyze the ServerHolders before picking how many to send to ensure only a certain number of segments are sent. I'd be open to re-assessing whether or not this would be a better approach or not if someone suggests it may be the proper approach.\n\n\n\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nBalancerStrategy Interface\nCostBalancerStrategy\nRandomBalancerStrategy\nReservoirSegmentSampler\nCoordinatorDynamicConfig", "createdAt": "2020-08-14T17:33:36Z", "url": "https://github.com/apache/druid/pull/10284", "merged": true, "mergeCommit": {"oid": "58ce2e55d8f49e1cb0de0b1579dff049ac9c873d"}, "closed": true, "closedAt": "2020-12-22T16:27:56Z", "author": {"login": "capistrant"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-4HoEAH2gAyNDY4MTAwNjg2OjYxNGE5NmJiNGVjOWY1MmEyNjU0ZTBlYTM5Zjc2OWE3NTlhZWRjYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoZio2AFqTU1NjU1MjI2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "614a96bb4ec9f52a2654e0ea39f769a759aedcb3", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/614a96bb4ec9f52a2654e0ea39f769a759aedcb3", "committedDate": "2020-08-14T17:32:24Z", "message": "dynamic coord config adding more balancing control\n\nadd new dynamic coordinator config, maxSegmentsToConsiderPerMove. This\nconfig caps the number of segments that are iterated over when selecting\na segment to move. The default value combined with current balancing\nstrategies will still iterate over all provided segments. However,\nsetting this value to something > 0 will cap the number of segments\nvisited. This could make sense in cases where a cluster has a very large\nnumber of segments and the admins prefer less iterations vs a thorough\nconsideration of all segments provided."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7c53cd91368d070f4fe9a6d5c95dc1045db75dc", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/f7c53cd91368d070f4fe9a6d5c95dc1045db75dc", "committedDate": "2020-08-14T23:02:22Z", "message": "fix checkstyle failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1d47653b9ec74e97ed64a3ea57687d9ca9bc404", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/e1d47653b9ec74e97ed64a3ea57687d9ca9bc404", "committedDate": "2020-09-02T20:35:40Z", "message": "Make doc more detailed for admin to understand when/why to use new config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f525f0aba4266932578188d94c6b5cd7bd664611", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/f525f0aba4266932578188d94c6b5cd7bd664611", "committedDate": "2020-09-02T20:36:03Z", "message": "Merge branch 'master' into bounded-segment-balancer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ff7c5aefd947ed20e289fc8e0309aa77628c943", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/0ff7c5aefd947ed20e289fc8e0309aa77628c943", "committedDate": "2020-09-03T14:41:40Z", "message": "refactor PR to use a % of segments instead of raw number"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3993e34b2464c83c17ff15f9a50a3132bc0fbd6", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/f3993e34b2464c83c17ff15f9a50a3132bc0fbd6", "committedDate": "2020-09-03T15:01:59Z", "message": "update the docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b042135fb261eced2ce09cc127ce568aa305e2b", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/3b042135fb261eced2ce09cc127ce568aa305e2b", "committedDate": "2020-09-03T15:02:30Z", "message": "remove bad doc line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d69897e47cea1e4671dc3b7780e93b9419b85244", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/d69897e47cea1e4671dc3b7780e93b9419b85244", "committedDate": "2020-09-03T15:03:26Z", "message": "fix typo in name of new dynamic config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "213599aaedf106581959acb9c2143499fad95062", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/213599aaedf106581959acb9c2143499fad95062", "committedDate": "2020-09-03T15:11:02Z", "message": "update RservoirSegmentSampler to gracefully deal with values > 100%"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e5a1df98cd935979fc503222dc6e286fc431cf4", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/8e5a1df98cd935979fc503222dc6e286fc431cf4", "committedDate": "2020-09-03T18:16:49Z", "message": "add handler for <= 0 in ReservoirSegmentSampler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3f680dfc1dcf0418b6c8cc8d910e2211779f10e", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/b3f680dfc1dcf0418b6c8cc8d910e2211779f10e", "committedDate": "2020-09-03T18:17:05Z", "message": "fixup CoordinatorDynamicConfigTest naming and argument ordering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8a7c4277f4a1654a319bdf2f9668578cb260f05", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/a8a7c4277f4a1654a319bdf2f9668578cb260f05", "committedDate": "2020-09-08T17:18:13Z", "message": "fix items in docs after spellcheck flags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb20cb2cad1efee921acbe44091255d8487b3b4c", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/fb20cb2cad1efee921acbe44091255d8487b3b4c", "committedDate": "2020-09-08T21:04:32Z", "message": "Fix lgtm flag on missing space in string literal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd221c8ad96c05bbec2841aba0c46f29d0aba535", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/fd221c8ad96c05bbec2841aba0c46f29d0aba535", "committedDate": "2020-10-29T13:49:30Z", "message": "Merge branch 'master' into bounded-segment-balancer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85660be45588b0ac53dc3534faa2fc1937188ed6", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/85660be45588b0ac53dc3534faa2fc1937188ed6", "committedDate": "2020-10-29T14:00:30Z", "message": "improve documentation for new config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTI2ODc4", "url": "https://github.com/apache/druid/pull/10284#pullrequestreview-520926878", "createdAt": "2020-10-30T18:18:58Z", "commit": {"oid": "85660be45588b0ac53dc3534faa2fc1937188ed6"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODoxODo1OFrOHrbIfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOToxNjozMFrOHrczqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5NTM1Nw==", "bodyText": "Could you please add the default value for this property into the Default column?", "url": "https://github.com/apache/druid/pull/10284#discussion_r515295357", "createdAt": "2020-10-30T18:18:58Z", "author": {"login": "a2l007"}, "path": "docs/configuration/index.md", "diffHunk": "@@ -764,6 +765,7 @@ Issuing a GET request at the same URL will return the spec that is currently in\n |`mergeBytesLimit`|The maximum total uncompressed size in bytes of segments to merge.|524288000L|\n |`mergeSegmentsLimit`|The maximum number of segments that can be in a single [append task](../ingestion/tasks.md).|100|\n |`maxSegmentsToMove`|The maximum number of segments that can be moved at any given time.|5|\n+|`percentOfSegmentsToConsiderPerMove`|The percentage of the total number of segments in the cluster that are considered every time a segment needs to be selected for a move. Druid orders servers by available capacity ascending (the least available capacity first) and then iterates over the servers. For each server, Druid iterates over the segments on the server, considering them for moving. The default config of 100% means that every segment on every server is a candidate to be moved. This should make sense for most small to medium-sized clusters. However, an admin may find it preferable to drop this value lower if they don't think that it is worthwhile to consider every single segment in the cluster each time it is looking for a segment to move.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85660be45588b0ac53dc3534faa2fc1937188ed6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5OTc2Nw==", "bodyText": "Thanks for the doc \ud83d\udc4d", "url": "https://github.com/apache/druid/pull/10284#discussion_r515299767", "createdAt": "2020-10-30T18:27:43Z", "author": {"login": "a2l007"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/ReservoirSegmentSampler.java", "diffHunk": "@@ -28,15 +29,50 @@\n final class ReservoirSegmentSampler\n {\n \n+  private static final EmittingLogger log = new EmittingLogger(ReservoirSegmentSampler.class);\n+\n+  /**\n+   * Iterates over segments that live on the candidate servers passed in {@link ServerHolder} and (possibly) picks a\n+   * segment to return to caller in a {@link BalancerSegmentHolder} object.\n+   *\n+   * @param serverHolders List of {@link ServerHolder} objects containing segments who are candidates to be chosen.\n+   * @param broadcastDatasources Set of DataSource names that identify broadcast datasources. We don't want to consider\n+   *                             segments from these datasources.\n+   * @param percentOfSegmentsToConsider The % of total cluster segments to consider before short-circuiting and\n+   *                                   returning immediately.\n+   * @return\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85660be45588b0ac53dc3534faa2fc1937188ed6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyMjc5Mg==", "bodyText": "Also it would be helpful to provide some sort of recommended percentage value that operators with large clusters can use as a starting point for this property. We could either add it here or in the Basic Cluster Tuning doc.", "url": "https://github.com/apache/druid/pull/10284#discussion_r515322792", "createdAt": "2020-10-30T19:16:30Z", "author": {"login": "a2l007"}, "path": "docs/configuration/index.md", "diffHunk": "@@ -764,6 +765,7 @@ Issuing a GET request at the same URL will return the spec that is currently in\n |`mergeBytesLimit`|The maximum total uncompressed size in bytes of segments to merge.|524288000L|\n |`mergeSegmentsLimit`|The maximum number of segments that can be in a single [append task](../ingestion/tasks.md).|100|\n |`maxSegmentsToMove`|The maximum number of segments that can be moved at any given time.|5|\n+|`percentOfSegmentsToConsiderPerMove`|The percentage of the total number of segments in the cluster that are considered every time a segment needs to be selected for a move. Druid orders servers by available capacity ascending (the least available capacity first) and then iterates over the servers. For each server, Druid iterates over the segments on the server, considering them for moving. The default config of 100% means that every segment on every server is a candidate to be moved. This should make sense for most small to medium-sized clusters. However, an admin may find it preferable to drop this value lower if they don't think that it is worthwhile to consider every single segment in the cluster each time it is looking for a segment to move.|", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5NTM1Nw=="}, "originalCommit": {"oid": "85660be45588b0ac53dc3534faa2fc1937188ed6"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f899ade562426c903aa92cb4f0e1a8f8a7a6a23d", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/f899ade562426c903aa92cb4f0e1a8f8a7a6a23d", "committedDate": "2020-10-30T20:53:05Z", "message": "Add default value to config docs and add advice in cluster tuning doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "848ac007d557347b039bd1611e1c30cb215661ea", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/848ac007d557347b039bd1611e1c30cb215661ea", "committedDate": "2020-10-30T21:59:01Z", "message": "Add percentOfSegmentsToConsiderPerMove to web console coord config dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "982b0167153fecb8b9e0701af9a7cb5f9c8c4af5", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/982b0167153fecb8b9e0701af9a7cb5f9c8c4af5", "committedDate": "2020-11-03T16:06:14Z", "message": "update jest snapshot after console change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cce72eb3fc67e1980ef45f2598068cee7f7e5b38", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/cce72eb3fc67e1980ef45f2598068cee7f7e5b38", "committedDate": "2020-11-03T16:07:56Z", "message": "fix spell checker errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c8e9da06a6455bd461e16556c95e0b5cd6e3ee1", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/1c8e9da06a6455bd461e16556c95e0b5cd6e3ee1", "committedDate": "2020-11-03T18:15:03Z", "message": "Improve debug logging in getRandomSegmentBalancerHolder to cover all bad inputs for % of segments to consider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f0a928bee7addd8eea36236230d4254bb62bba", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/48f0a928bee7addd8eea36236230d4254bb62bba", "committedDate": "2020-12-18T23:04:25Z", "message": "Merge branch 'master' into bounded-segment-balancer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf5907491dc33809c150f1c26140f3dae951dfd5", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/bf5907491dc33809c150f1c26140f3dae951dfd5", "committedDate": "2020-12-18T23:19:09Z", "message": "add new config back to web console module after merge with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc3f80af30d215ef231b19e183494c9aff562348", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/dc3f80af30d215ef231b19e183494c9aff562348", "committedDate": "2020-12-18T23:19:21Z", "message": "fix ReservoirSegmentSamplerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ac54ffddbd6ada5f4c4dda4677cde3f1a383673", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/9ac54ffddbd6ada5f4c4dda4677cde3f1a383673", "committedDate": "2020-12-18T23:30:43Z", "message": "fix line breaks in coordinator console dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9197bb0b1738be30f79016dab9837002a8056152", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/9197bb0b1738be30f79016dab9837002a8056152", "committedDate": "2020-12-19T00:42:24Z", "message": "Add a test that helps ensure not regressions for percentOfSegmentsToConsiderPerMove"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTAyOTEw", "url": "https://github.com/apache/druid/pull/10284#pullrequestreview-555902910", "createdAt": "2020-12-19T01:31:29Z", "commit": {"oid": "9197bb0b1738be30f79016dab9837002a8056152"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozMToyOVrOII3ooQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMTozNToxMlrOII3qrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3MTA0MQ==", "bodyText": "Since this is a json configured property, I think we should throw an exception here so the user knows they've done something incorrect.\nEDIT: Something like\nPreconditions.checkArgument(percentOfSegmentsToConsiderPerMove > 0 && percentOfSegmentsToConsiderPerMove <= 100, \"percentOfSegmentsToConsiderPerMove should be between 0 and 100!\");", "url": "https://github.com/apache/druid/pull/10284#discussion_r546171041", "createdAt": "2020-12-19T01:31:29Z", "author": {"login": "suneet-s"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/CoordinatorDynamicConfig.java", "diffHunk": "@@ -123,6 +125,12 @@ public CoordinatorDynamicConfig(\n     this.mergeBytesLimit = mergeBytesLimit;\n     this.mergeSegmentsLimit = mergeSegmentsLimit;\n     this.maxSegmentsToMove = maxSegmentsToMove;\n+    // This helps with ease of migration to the new config, but could confuse users. Docs explicitly state this value must be > 0\n+    if (percentOfSegmentsToConsiderPerMove <= 0 || percentOfSegmentsToConsiderPerMove > 100) {\n+      this.percentOfSegmentsToConsiderPerMove = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9197bb0b1738be30f79016dab9837002a8056152"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3MTE4Mw==", "bodyText": "Should this be a double since we're dealing with percentages? I think it would make it less likely for someone in the future to make some math mistake by accidentally dividing by an integer.", "url": "https://github.com/apache/druid/pull/10284#discussion_r546171183", "createdAt": "2020-12-19T01:32:32Z", "author": {"login": "suneet-s"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/CoordinatorDynamicConfig.java", "diffHunk": "@@ -95,6 +96,7 @@ public CoordinatorDynamicConfig(\n       @JsonProperty(\"mergeBytesLimit\") long mergeBytesLimit,\n       @JsonProperty(\"mergeSegmentsLimit\") int mergeSegmentsLimit,\n       @JsonProperty(\"maxSegmentsToMove\") int maxSegmentsToMove,\n+      @JsonProperty(\"percentOfSegmentsToConsiderPerMove\") int percentOfSegmentsToConsiderPerMove,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9197bb0b1738be30f79016dab9837002a8056152"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3MTQwNQ==", "bodyText": "Should this have a PreCondition check that it falls between 0 - 100 ?", "url": "https://github.com/apache/druid/pull/10284#discussion_r546171405", "createdAt": "2020-12-19T01:34:07Z", "author": {"login": "suneet-s"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/CoordinatorDynamicConfig.java", "diffHunk": "@@ -463,6 +485,7 @@ public Builder(\n       this.mergeBytesLimit = mergeBytesLimit;\n       this.mergeSegmentsLimit = mergeSegmentsLimit;\n       this.maxSegmentsToMove = maxSegmentsToMove;\n+      this.percentOfSegmentsToConsiderPerMove = percentOfSegmentsToConsiderPerMove;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9197bb0b1738be30f79016dab9837002a8056152"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3MTU2Ng==", "bodyText": "IMO this should be at least a WARN since it should be impossible that percentOfSegmentsToConsider should have already been checked earlier in the system", "url": "https://github.com/apache/druid/pull/10284#discussion_r546171566", "createdAt": "2020-12-19T01:35:12Z", "author": {"login": "suneet-s"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/ReservoirSegmentSampler.java", "diffHunk": "@@ -28,15 +29,51 @@\n final class ReservoirSegmentSampler\n {\n \n+  private static final EmittingLogger log = new EmittingLogger(ReservoirSegmentSampler.class);\n+\n+  /**\n+   * Iterates over segments that live on the candidate servers passed in {@link ServerHolder} and (possibly) picks a\n+   * segment to return to caller in a {@link BalancerSegmentHolder} object.\n+   *\n+   * @param serverHolders List of {@link ServerHolder} objects containing segments who are candidates to be chosen.\n+   * @param broadcastDatasources Set of DataSource names that identify broadcast datasources. We don't want to consider\n+   *                             segments from these datasources.\n+   * @param percentOfSegmentsToConsider The % of total cluster segments to consider before short-circuiting and\n+   *                                   returning immediately.\n+   * @return\n+   */\n   static BalancerSegmentHolder getRandomBalancerSegmentHolder(\n       final List<ServerHolder> serverHolders,\n-      Set<String> broadcastDatasources\n+      Set<String> broadcastDatasources,\n+      int percentOfSegmentsToConsider\n   )\n   {\n     ServerHolder fromServerHolder = null;\n     DataSegment proposalSegment = null;\n+    int calculatedSegmentLimit = Integer.MAX_VALUE;\n     int numSoFar = 0;\n \n+    // Reset a bad value of percentOfSegmentsToConsider to 100. We don't allow consideration less than or equal to\n+    // 0% of segments or greater than 100% of segments.\n+    if (percentOfSegmentsToConsider <= 0 || percentOfSegmentsToConsider > 100) {\n+      log.debug(\"Resetting percentOfSegmentsToConsider to 100 because only values from 1 to 100 are allowed.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9197bb0b1738be30f79016dab9837002a8056152"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f24d44757ea227aae61f6fd0ea7c7fb1d54ae4f", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/6f24d44757ea227aae61f6fd0ea7c7fb1d54ae4f", "committedDate": "2020-12-19T04:01:24Z", "message": "Make improvements based off of feedback in review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62962e0bcfe0afb57440f9ed1317db566066a3fa", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/62962e0bcfe0afb57440f9ed1317db566066a3fa", "committedDate": "2020-12-19T04:06:56Z", "message": "additional cleanup coming from review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93bed105b71da265866bbf5bbc6dd41d5fa5218f", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/93bed105b71da265866bbf5bbc6dd41d5fa5218f", "committedDate": "2020-12-21T16:14:36Z", "message": "Add a warning log if limit on segments to consider for move can't be calcluated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d76c92487e4e70c75633ab0ead3670e6152af3cb", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/d76c92487e4e70c75633ab0ead3670e6152af3cb", "committedDate": "2020-12-21T16:24:53Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e30ddf3e9247968a4dc468a1a18f7e3b2a453000", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/e30ddf3e9247968a4dc468a1a18f7e3b2a453000", "committedDate": "2020-12-21T16:31:39Z", "message": "fix tests for CoordinatorDynamicConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43766ed659a84e547fb0f25dc4a82ea5692b6788", "author": {"user": {"login": "capistrant", "name": "Lucas Capistrant"}}, "url": "https://github.com/apache/druid/commit/43766ed659a84e547fb0f25dc4a82ea5692b6788", "committedDate": "2020-12-21T16:31:53Z", "message": "remove precondition test that is redundant in CoordinatorDynamicConfig Builder class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTUyMjYz", "url": "https://github.com/apache/druid/pull/10284#pullrequestreview-556552263", "createdAt": "2020-12-21T17:39:40Z", "commit": {"oid": "43766ed659a84e547fb0f25dc4a82ea5692b6788"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1975, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}