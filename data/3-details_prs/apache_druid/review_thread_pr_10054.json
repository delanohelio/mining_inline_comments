{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2ODQ5Mzg5", "number": 10054, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMjozODozOFrOEG-OdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMjozODozOFrOEG-OdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzQ2NDIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/rules/Rule.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMjozODozOFrOGmGMEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwOTo1NDo0NVrOGmPDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng==", "bodyText": "It seems leaky to tie this call to an API method, rather, what is being captured here is whether or not a Rule will load data instead of dropping data, because not all rules that load data are of type LoadRule. Should this just be isLoadRule() or something to that effect?", "url": "https://github.com/apache/druid/pull/10054#discussion_r442600466", "createdAt": "2020-06-19T02:38:38Z", "author": {"login": "clintropolis"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/rules/Rule.java", "diffHunk": "@@ -51,6 +51,14 @@\n \n   boolean appliesTo(Interval interval, DateTime referenceTimestamp);\n \n+  /**\n+   * Returns whether this Rules should be matched and considered in loadstatus API.\n+   * In general, Rules that load segment onto any Druid node should return true.\n+   * Any Rule that returns true for this method should add a compute logic (as if case condition) for the particular\n+   * Rule class in {@link DruidCoordinator#computeUnderReplicationCountsPerDataSourcePerTierForSegments}\n+   */\n+  boolean matchLoadStatusCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c7dbf24f3b23dd9d5051fa840200d5ebf02955"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwODY1Ng==", "bodyText": "I don't like calling it isLoadRule because there is a class/interface LoadRule and not all things that return true for this method are of the class/subclass of that class/interface LoadRule. But I agree let's not tie it to API. How about calling it isRuleLoadSegments or canLoadSegments or isLoadSegments.\nAlthough, I still want to leave the comment Any Rule that returns true for this method should add a compute logic (as if case condition) for the particular Rule class in {@link DruidCoordinator#computeUnderReplicationCountsPerDataSourcePerTierForSegments} there. Since that will help people find the appropriate place to change/add when creating new Rule. What do you think?", "url": "https://github.com/apache/druid/pull/10054#discussion_r442608656", "createdAt": "2020-06-19T03:14:08Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/rules/Rule.java", "diffHunk": "@@ -51,6 +51,14 @@\n \n   boolean appliesTo(Interval interval, DateTime referenceTimestamp);\n \n+  /**\n+   * Returns whether this Rules should be matched and considered in loadstatus API.\n+   * In general, Rules that load segment onto any Druid node should return true.\n+   * Any Rule that returns true for this method should add a compute logic (as if case condition) for the particular\n+   * Rule class in {@link DruidCoordinator#computeUnderReplicationCountsPerDataSourcePerTierForSegments}\n+   */\n+  boolean matchLoadStatusCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng=="}, "originalCommit": {"oid": "34c7dbf24f3b23dd9d5051fa840200d5ebf02955"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYyMTI5MQ==", "bodyText": "I think canLoadSegments works, also doesLoadSegments or willLoadSegments.", "url": "https://github.com/apache/druid/pull/10054#discussion_r442621291", "createdAt": "2020-06-19T04:13:44Z", "author": {"login": "clintropolis"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/rules/Rule.java", "diffHunk": "@@ -51,6 +51,14 @@\n \n   boolean appliesTo(Interval interval, DateTime referenceTimestamp);\n \n+  /**\n+   * Returns whether this Rules should be matched and considered in loadstatus API.\n+   * In general, Rules that load segment onto any Druid node should return true.\n+   * Any Rule that returns true for this method should add a compute logic (as if case condition) for the particular\n+   * Rule class in {@link DruidCoordinator#computeUnderReplicationCountsPerDataSourcePerTierForSegments}\n+   */\n+  boolean matchLoadStatusCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng=="}, "originalCommit": {"oid": "34c7dbf24f3b23dd9d5051fa840200d5ebf02955"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc0NTc1Mw==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10054#discussion_r442745753", "createdAt": "2020-06-19T09:54:45Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/rules/Rule.java", "diffHunk": "@@ -51,6 +51,14 @@\n \n   boolean appliesTo(Interval interval, DateTime referenceTimestamp);\n \n+  /**\n+   * Returns whether this Rules should be matched and considered in loadstatus API.\n+   * In general, Rules that load segment onto any Druid node should return true.\n+   * Any Rule that returns true for this method should add a compute logic (as if case condition) for the particular\n+   * Rule class in {@link DruidCoordinator#computeUnderReplicationCountsPerDataSourcePerTierForSegments}\n+   */\n+  boolean matchLoadStatusCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYwMDQ2Ng=="}, "originalCommit": {"oid": "34c7dbf24f3b23dd9d5051fa840200d5ebf02955"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2350, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}