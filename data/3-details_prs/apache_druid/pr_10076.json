{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5Njg1NTU3", "number": 10076, "title": "ensure ParallelMergeCombiningSequence closes its closeables", "bodyText": "Description\n#9934 but for ParallelMergeCombiningSequence. Also spotted a place where we weren't closing a non-exploding BatchedResultCursor so fixes more leaks than I was anticipating \ud83e\udd18.\nI might be abusing ExplodingSequence added in #9934 in my added tests... but I needed an interface for checking if my Sequence yielders were cleaning up after themselves, so.. it served my purposes.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\nKey changed/added classes in this PR\n\nParallelMergeCombiningSequence", "createdAt": "2020-06-25T06:04:30Z", "url": "https://github.com/apache/druid/pull/10076", "merged": true, "mergeCommit": {"oid": "4b99c6d3efa66312d9b6c2ecf34d02dd194e573f"}, "closed": true, "closedAt": "2020-06-26T21:37:20Z", "author": {"login": "clintropolis"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuoM9CgH2gAyNDM5Njg1NTU3OjQwMGJjNGVkZGQzMTQyOGNjM2ZmZTI2ZjVmYjZlZjJmYzk0NDZjODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvJ8zggFqTQzODU5OTkwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "400bc4eddd31428cc3ffe26f5fb6ef2fc9446c84", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/400bc4eddd31428cc3ffe26f5fb6ef2fc9446c84", "committedDate": "2020-06-25T05:56:57Z", "message": "ensure close for all closeables of ParallelMergeCombiningSequence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c2a22073ee2ae98b8f1707ca6b7538acf5dae99", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/0c2a22073ee2ae98b8f1707ca6b7538acf5dae99", "committedDate": "2020-06-25T06:02:28Z", "message": "revert unneeded change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTkyNjIx", "url": "https://github.com/apache/druid/pull/10076#pullrequestreview-437192621", "createdAt": "2020-06-25T06:08:30Z", "commit": {"oid": "0c2a22073ee2ae98b8f1707ca6b7538acf5dae99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNjowODozMFrOGoslsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNjowODozMFrOGoslsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMyNjc2OA==", "bodyText": "I... can't remember if there is a reason why this explodes violently while the others are all CloseQuietly... I'll try to figure out if this should be eaten too.", "url": "https://github.com/apache/druid/pull/10076#discussion_r445326768", "createdAt": "2020-06-25T06:08:30Z", "author": {"login": "clintropolis"}, "path": "core/src/main/java/org/apache/druid/java/util/common/guava/ParallelMergeCombiningSequence.java", "diffHunk": "@@ -1036,11 +1047,13 @@ public boolean isReleasable()\n     @Override\n     public void close()\n     {\n-      try {\n-        yielder.close();\n-      }\n-      catch (IOException e) {\n-        throw new RuntimeException(\"Failed to close yielder\", e);\n+      if (yielder != null) {\n+        try {\n+          yielder.close();\n+        }\n+        catch (IOException e) {\n+          throw new RuntimeException(\"Failed to close yielder\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2a22073ee2ae98b8f1707ca6b7538acf5dae99"}, "originalPosition": 118}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3Njc2Mzk4", "url": "https://github.com/apache/druid/pull/10076#pullrequestreview-437676398", "createdAt": "2020-06-25T16:46:24Z", "commit": {"oid": "0c2a22073ee2ae98b8f1707ca6b7538acf5dae99"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0NjoyNFrOGpDLZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzoxMDo0N1rOGpEEPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5Njg3MA==", "bodyText": "nit: Closer.register() has null check. You can use registerAll() instead.", "url": "https://github.com/apache/druid/pull/10076#discussion_r445696870", "createdAt": "2020-06-25T16:46:24Z", "author": {"login": "jihoonson"}, "path": "core/src/main/java/org/apache/druid/java/util/common/guava/ParallelMergeCombiningSequence.java", "diffHunk": "@@ -1350,4 +1363,24 @@ long getTotalCpuTimeNanos()\n       return totalCpuTimeNanos;\n     }\n   }\n+\n+  private static <T> void closeAllCursors(final PriorityQueue<BatchedResultsCursor<T>> pQueue)\n+  {\n+    Closer closer = Closer.create();\n+    while (!pQueue.isEmpty()) {\n+      final BatchedResultsCursor<T> yielder = pQueue.poll();\n+      if (yielder != null) {\n+        // Note: yielder can be null if our comparator threw an exception during queue.add.\n+        closer.register(yielder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2a22073ee2ae98b8f1707ca6b7538acf5dae99"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcxMDUyNQ==", "bodyText": "It seems the exception will be eventually handled by CloseQuietly.", "url": "https://github.com/apache/druid/pull/10076#discussion_r445710525", "createdAt": "2020-06-25T17:09:15Z", "author": {"login": "jihoonson"}, "path": "core/src/main/java/org/apache/druid/java/util/common/guava/ParallelMergeCombiningSequence.java", "diffHunk": "@@ -1036,11 +1047,13 @@ public boolean isReleasable()\n     @Override\n     public void close()\n     {\n-      try {\n-        yielder.close();\n-      }\n-      catch (IOException e) {\n-        throw new RuntimeException(\"Failed to close yielder\", e);\n+      if (yielder != null) {\n+        try {\n+          yielder.close();\n+        }\n+        catch (IOException e) {\n+          throw new RuntimeException(\"Failed to close yielder\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMyNjc2OA=="}, "originalCommit": {"oid": "0c2a22073ee2ae98b8f1707ca6b7538acf5dae99"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcxMTQyMw==", "bodyText": "You can merge these methods if you use registerAll() above.", "url": "https://github.com/apache/druid/pull/10076#discussion_r445711423", "createdAt": "2020-06-25T17:10:47Z", "author": {"login": "jihoonson"}, "path": "core/src/main/java/org/apache/druid/java/util/common/guava/ParallelMergeCombiningSequence.java", "diffHunk": "@@ -1350,4 +1363,24 @@ long getTotalCpuTimeNanos()\n       return totalCpuTimeNanos;\n     }\n   }\n+\n+  private static <T> void closeAllCursors(final PriorityQueue<BatchedResultsCursor<T>> pQueue)\n+  {\n+    Closer closer = Closer.create();\n+    while (!pQueue.isEmpty()) {\n+      final BatchedResultsCursor<T> yielder = pQueue.poll();\n+      if (yielder != null) {\n+        // Note: yielder can be null if our comparator threw an exception during queue.add.\n+        closer.register(yielder);\n+      }\n+    }\n+    CloseQuietly.close(closer);\n+  }\n+\n+  private static <T> void closeAllCursors(final List<BatchedResultsCursor<T>> list)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2a22073ee2ae98b8f1707ca6b7538acf5dae99"}, "originalPosition": 141}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "464136b55ab430dc4b684980b31a07af719f4fee", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/464136b55ab430dc4b684980b31a07af719f4fee", "committedDate": "2020-06-25T19:28:11Z", "message": "consolidate methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3ODQ1NjU3", "url": "https://github.com/apache/druid/pull/10076#pullrequestreview-437845657", "createdAt": "2020-06-25T20:45:54Z", "commit": {"oid": "464136b55ab430dc4b684980b31a07af719f4fee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MzE3OTM3", "url": "https://github.com/apache/druid/pull/10076#pullrequestreview-438317937", "createdAt": "2020-06-26T13:57:37Z", "commit": {"oid": "464136b55ab430dc4b684980b31a07af719f4fee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1NzozN1rOGph7Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo1NzozN1rOGph7Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMDYzMA==", "bodyText": "Have you considered closing the sequenceCursors in a finally block incase a Throwable is thrown instead of an exception?", "url": "https://github.com/apache/druid/pull/10076#discussion_r446200630", "createdAt": "2020-06-26T13:57:37Z", "author": {"login": "suneet-s"}, "path": "core/src/main/java/org/apache/druid/java/util/common/guava/ParallelMergeCombiningSequence.java", "diffHunk": "@@ -341,6 +344,7 @@ protected void compute()\n         }\n       }\n       catch (Exception ex) {\n+        closeAllCursors(sequenceCursors);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "464136b55ab430dc4b684980b31a07af719f4fee"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDMyNjg0", "url": "https://github.com/apache/druid/pull/10076#pullrequestreview-438432684", "createdAt": "2020-06-26T16:27:34Z", "commit": {"oid": "464136b55ab430dc4b684980b31a07af719f4fee"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjoyNzozNVrOGpnHzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjoyNzozNVrOGpnHzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI4NTc3NA==", "bodyText": "Sorry, I misread this. A finally block won't work \ud83e\udd26\nDoes it provide any better guarantees if we catch a Throwable instead of an exception here - so that in case any of the code in the try block throws an Error instead of an Exception\nThis code appears to have been running ok all this time with a catch (Exception) block so I'm guessing it's not too bad if the catch condition is left as is", "url": "https://github.com/apache/druid/pull/10076#discussion_r446285774", "createdAt": "2020-06-26T16:27:35Z", "author": {"login": "suneet-s"}, "path": "core/src/main/java/org/apache/druid/java/util/common/guava/ParallelMergeCombiningSequence.java", "diffHunk": "@@ -341,6 +344,7 @@ protected void compute()\n         }\n       }\n       catch (Exception ex) {\n+        closeAllCursors(sequenceCursors);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIwMDYzMA=="}, "originalCommit": {"oid": "464136b55ab430dc4b684980b31a07af719f4fee"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d574714bdf92450cf33f51341da3f9d4517723ae", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/d574714bdf92450cf33f51341da3f9d4517723ae", "committedDate": "2020-06-26T19:16:14Z", "message": "catch throwable instead of exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTk5OTA4", "url": "https://github.com/apache/druid/pull/10076#pullrequestreview-438599908", "createdAt": "2020-06-26T21:16:06Z", "commit": {"oid": "d574714bdf92450cf33f51341da3f9d4517723ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2151, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}