{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjUyODAz", "number": 9655, "title": "Fix wrong cardinality computation in BufferArrayGrouper", "bodyText": "Description\nThe below query fails with an integer overflow because of wrong cardinality computation in BufferArrayGrouper.\n> select count(*) from wikitikcer where page in (select k from lookup.lu);\n\nCaused by: java.lang.IllegalArgumentException: Out of range: 2147483648\n        at com.google.common.primitives.Ints.checkedCast(Ints.java:91) ~[guava-16.0.1.jar:?]\n        at org.apache.druid.query.groupby.epinephelinae.BufferArrayGrouper.<init>(BufferArrayGrouper.java:111) ~[druid-processing-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.newGrouper(GroupByQueryEngineV2.java:750) ~[druid-processing-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$ArrayAggregateIterator.newGrouper(GroupByQueryEngineV2.java:712) ~[druid-processing-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.initNewDelegate(GroupByQueryEngineV2.java:411) ~[druid-processing-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$GroupByEngineIterator.hasNext(GroupByQueryEngineV2.java:469) ~[druid-processing-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:43) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.ConcatSequence.lambda$accumulate$0(ConcatSequence.java:41) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.MappingAccumulator.accumulate(MappingAccumulator.java:40) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.BaseSequence.accumulate(BaseSequence.java:44) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.MappedSequence.accumulate(MappedSequence.java:43) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.ConcatSequence.accumulate(ConcatSequence.java:41) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.WrappingSequence$1.get(WrappingSequence.java:50) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.SequenceWrapper.wrap(SequenceWrapper.java:55) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.java.util.common.guava.WrappingSequence.accumulate(WrappingSequence.java:45) ~[druid-core-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:246) ~[druid-processing-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at org.apache.druid.query.groupby.epinephelinae.GroupByMergingQueryRunnerV2$1$1$1.call(GroupByMergingQueryRunnerV2.java:233) ~[druid-processing-0.19.0-SNAPSHOT.jar:0.19.0-SNAPSHOT]\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]\n\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-04-09T21:26:22Z", "url": "https://github.com/apache/druid/pull/9655", "merged": true, "mergeCommit": {"oid": "e157fb089a8f1863b49ea14841d7653582a60117"}, "closed": true, "closedAt": "2020-04-10T16:05:39Z", "author": {"login": "jihoonson"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWDT5kAH2gAyNDAxNjUyODAzOmNhOTczZGQ5M2RkMGRiZGMwNzg1ZDhkM2E0MzAwODg2YTQ0Y2QxY2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWGnDPAFqTM5MTIyMDgxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca973dd93dd0dbdc0785d8d3a4300886a44cd1ca", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/ca973dd93dd0dbdc0785d8d3a4300886a44cd1ca", "committedDate": "2020-04-09T21:23:52Z", "message": "Fix wrong cardinality computation in BufferArrayGrouper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjEyNDUw", "url": "https://github.com/apache/druid/pull/9655#pullrequestreview-391212450", "createdAt": "2020-04-10T00:37:59Z", "commit": {"oid": "ca973dd93dd0dbdc0785d8d3a4300886a44cd1ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjE0MTU5", "url": "https://github.com/apache/druid/pull/9655#pullrequestreview-391214159", "createdAt": "2020-04-10T00:44:59Z", "commit": {"oid": "ca973dd93dd0dbdc0785d8d3a4300886a44cd1ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDo0NDo1OVrOGDt2-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDo0NDo1OVrOGDt2-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU1MDI2NQ==", "bodyText": "I think the comment here should have > Integer.MAX_VALUE instead", "url": "https://github.com/apache/druid/pull/9655#discussion_r406550265", "createdAt": "2020-04-10T00:44:59Z", "author": {"login": "jon-wei"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/BufferArrayGrouper.java", "diffHunk": "@@ -69,12 +69,20 @@\n   @Nullable\n   private int[] vAggregationRows = null;\n \n-  static long requiredBufferCapacity(\n-      int cardinality,\n-      AggregatorFactory[] aggregatorFactories\n-  )\n+  /**\n+   * Computes required buffer capacity for a grouping key of the given cardinaltiy and aggregatorFactories.\n+   * This method assumes that the given cardinality doesn't count nulls.\n+   *\n+   * Returns -1 if it cardinality + 1 (for null) = Integer.MAX_VALUE. Returns computed required buffer capacity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca973dd93dd0dbdc0785d8d3a4300886a44cd1ca"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b4b7adf17c252057b9959e0b0869aa26025da6", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/d0b4b7adf17c252057b9959e0b0869aa26025da6", "committedDate": "2020-04-10T01:06:30Z", "message": "fix javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjIwODE0", "url": "https://github.com/apache/druid/pull/9655#pullrequestreview-391220814", "createdAt": "2020-04-10T01:14:30Z", "commit": {"oid": "d0b4b7adf17c252057b9959e0b0869aa26025da6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2483, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}