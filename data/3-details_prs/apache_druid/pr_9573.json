{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NjUzNDA5", "number": 9573, "title": "Fix some flaws of KafkaEmitter", "bodyText": "Description\nThere are some flaws in KafkaEmitter:\n\nannoying error logs(see KAFKA-4854), like this\n2020-03-27T09:53:02,057 ERROR [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.producer.internals.RecordBatch - Error executing user-provided callback on message for topic-partition 'druid_metrics_test-0' java.lang.NullPointerException\nthe start method is called twice by the LifecycleStart framework\nredundant periodic scheduling of send tasks\n\n\nThis PR has:\n\n been self-reviewed.\n been tested in a test Druid cluster.\n\n\nKey changed class in this PR\n\nKafkaEmitter", "createdAt": "2020-03-27T09:50:38Z", "url": "https://github.com/apache/druid/pull/9573", "merged": true, "mergeCommit": {"oid": "8ccc0b241a38838e2e4031050f08d8b82b9c8fce"}, "closed": true, "closedAt": "2020-04-10T06:31:33Z", "author": {"login": "yuanlihan"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRtYqwAH2gAyMzk0NjUzNDA5OjE5NTM3ZDJhZjY5Zjk4N2E5Y2Y0NTM2Nzc3NGFiZDhiMDdkYjUxYmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWG9-CAH2gAyMzk0NjUzNDA5Ojg5YzUwYmE3ZmFkZmM3NjM0YjQyOTdhMWU4ZmRlMjc3MTk1YmQzZTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "19537d2af69f987a9cf45367774abd8b07db51be", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/19537d2af69f987a9cf45367774abd8b07db51be", "committedDate": "2020-03-27T09:35:28Z", "message": "fix flaws of KafkaEmitter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c17052e6898318d71225fad003453cc054d9228b", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/c17052e6898318d71225fad003453cc054d9228b", "committedDate": "2020-03-27T09:35:39Z", "message": "fix flaws of KafkaEmitter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "047635bd13a858211499c85662452ca6b4d9c4d2", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/047635bd13a858211499c85662452ca6b4d9c4d2", "committedDate": "2020-03-27T13:16:03Z", "message": "fix flaws of KafkaEmitter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTYwODk4", "url": "https://github.com/apache/druid/pull/9573#pullrequestreview-387960898", "createdAt": "2020-04-06T06:25:25Z", "commit": {"oid": "047635bd13a858211499c85662452ca6b4d9c4d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjoyNToyNVrOGBJTGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNjoyNToyNVrOGBJTGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1NDEwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                catch (InterruptedException e) {\n          \n          \n            \n                catch (Throwable e) {", "url": "https://github.com/apache/druid/pull/9573#discussion_r403854106", "createdAt": "2020-04-06T06:25:25Z", "author": {"login": "himanshug"}, "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,21 +120,21 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n     catch (InterruptedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047635bd13a858211499c85662452ca6b4d9c4d2"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f493e70581ec5f9230864b9e606496f26968773", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/0f493e70581ec5f9230864b9e606496f26968773", "committedDate": "2020-04-08T06:15:51Z", "message": "Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjI3NzYz", "url": "https://github.com/apache/druid/pull/9573#pullrequestreview-390227763", "createdAt": "2020-04-08T18:30:51Z", "commit": {"oid": "0f493e70581ec5f9230864b9e606496f26968773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODozMDo1MVrOGC7wbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODozMDo1MVrOGC7wbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ==", "bodyText": "on any  exception  from the block inside while(true) { ... } would lead to event emission getting stopped. Does it make sense to have a try-catch inside there to ignore exceptions except for InterruptedException so that emitting stops only on thread interrupt which would happen when druid is shutting down.", "url": "https://github.com/apache/druid/pull/9573#discussion_r405729389", "createdAt": "2020-04-08T18:30:51Z", "author": {"login": "himanshug"}, "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,24 +120,24 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n-    catch (InterruptedException e) {\n+    catch (Throwable e) {\n       log.warn(e, \"Failed to take record from queue!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f493e70581ec5f9230864b9e606496f26968773"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTAyNjAw", "url": "https://github.com/apache/druid/pull/9573#pullrequestreview-390502600", "createdAt": "2020-04-09T05:37:57Z", "commit": {"oid": "0f493e70581ec5f9230864b9e606496f26968773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNTozNzo1N1rOGDKPHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNTozNzo1N1rOGDKPHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjYyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  log.warn(e, \"Failed to take record from queue!\");\n          \n          \n            \n                  log.warn(e, \"Exception while getting record from queue or producer send, Events would not be emitted anymore.\");", "url": "https://github.com/apache/druid/pull/9573#discussion_r405966622", "createdAt": "2020-04-09T05:37:57Z", "author": {"login": "himanshug"}, "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,24 +120,24 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n-    catch (InterruptedException e) {\n+    catch (Throwable e) {\n       log.warn(e, \"Failed to take record from queue!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f493e70581ec5f9230864b9e606496f26968773"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "committedDate": "2020-04-10T01:39:32Z", "message": "Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2741, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}