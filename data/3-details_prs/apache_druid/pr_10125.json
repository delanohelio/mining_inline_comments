{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDQxODg4", "number": 10125, "title": "Fix CachingClusteredClient when querying specific segments", "bodyText": "Description\nCachingClusteredClient.getQueryRunnerForSegments() can be called when RetryQueryRunner retries the query for missing segments. Since it is possible to query only a subset of core partition set per time chunk, CachingClusteredClient should use TimelineLookup.lookupWithIncompletePartitions() instead. The query can return incomplete result otherwise. Maybe later, it is possible to refactor CachingClusteredClient.getQueryRunnerForSegments() to use the given segments as they are instead of creating a timeline with them.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-07-02T11:01:03Z", "url": "https://github.com/apache/druid/pull/10125", "merged": true, "mergeCommit": {"oid": "2b93dc60193d50b8f8d20a658b7837b152d75bec"}, "closed": true, "closedAt": "2020-07-03T00:50:51Z", "author": {"login": "jihoonson"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw8omlAH2gAyNDQzNDQxODg4OmM1MGUyZGQ2MzhlMDExMjg4MWI2NjczM2RhMzI1ZjAwMGQzMDAxM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxIhZAgFqTQ0MjA4NzQzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c50e2dd638e0112881b66733da325f000d30013c", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/c50e2dd638e0112881b66733da325f000d30013c", "committedDate": "2020-07-02T10:53:06Z", "message": "Fix CachingClusteredClient when querying specific segments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4d1e23492a4eced7e3649ff41a2d7a7899b5ece", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/a4d1e23492a4eced7e3649ff41a2d7a7899b5ece", "committedDate": "2020-07-02T10:59:59Z", "message": "delete useless test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f90aa8c94363d493b12594a0914518c52b392cf", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/4f90aa8c94363d493b12594a0914518c52b392cf", "committedDate": "2020-07-02T11:00:36Z", "message": "roll back timeout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTg5NzAx", "url": "https://github.com/apache/druid/pull/10125#pullrequestreview-441589701", "createdAt": "2020-07-02T11:29:13Z", "commit": {"oid": "4f90aa8c94363d493b12594a0914518c52b392cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTA4Nzgx", "url": "https://github.com/apache/druid/pull/10125#pullrequestreview-441908781", "createdAt": "2020-07-02T17:51:55Z", "commit": {"oid": "4f90aa8c94363d493b12594a0914518c52b392cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTE3ODg0", "url": "https://github.com/apache/druid/pull/10125#pullrequestreview-441917884", "createdAt": "2020-07-02T18:06:22Z", "commit": {"oid": "4f90aa8c94363d493b12594a0914518c52b392cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowNjoyMlrOGsYOGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowNjoyMlrOGsYOGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NzM1NQ==", "bodyText": "This still isn't right. It will get all segments for the time chunk. We should use timeline.findEntry when the incoming QSS calls for specific segments, like ServerManager.getQueryRunnerForSegments does.", "url": "https://github.com/apache/druid/pull/10125#discussion_r449187355", "createdAt": "2020-07-02T18:06:22Z", "author": {"login": "gianm"}, "path": "server/src/main/java/org/apache/druid/client/CachingClusteredClient.java", "diffHunk": "@@ -401,11 +407,16 @@ private ClusterQueryResult(Sequence<T> sequence, int numQueryServers)\n       }\n     }\n \n-    private Set<SegmentServerSelector> computeSegmentsToQuery(TimelineLookup<String, ServerSelector> timeline)\n+    private Set<SegmentServerSelector> computeSegmentsToQuery(\n+        TimelineLookup<String, ServerSelector> timeline,\n+        boolean specificSegments\n+    )\n     {\n+      final java.util.function.Function<Interval, List<TimelineObjectHolder<String, ServerSelector>>> lookupFn\n+          = specificSegments ? timeline::lookupWithIncompletePartitions : timeline::lookup;\n       final List<TimelineObjectHolder<String, ServerSelector>> serversLookup = toolChest.filterSegments(\n           query,\n-          intervals.stream().flatMap(i -> timeline.lookup(i).stream()).collect(Collectors.toList())\n+          intervals.stream().flatMap(i -> lookupFn.apply(i).stream()).collect(Collectors.toList())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f90aa8c94363d493b12594a0914518c52b392cf"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDg3NDM0", "url": "https://github.com/apache/druid/pull/10125#pullrequestreview-442087434", "createdAt": "2020-07-03T00:44:05Z", "commit": {"oid": "4f90aa8c94363d493b12594a0914518c52b392cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1789, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}