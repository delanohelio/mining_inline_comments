{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNDU3MTUx", "number": 10026, "title": "Add aggregator factory check to determine if vectorized aggregators are supported for the inputs", "bodyText": "All aggregators should check if column can be vectorize\nDescription\nAll aggregators should check if column can be vectorize. The bug is caused by the fact that the canVecotrize method of the aggregators only look at the aggregator class. This is incomplete as whether we can or cannot vectorize also depends on the column type. For example, vector object selector isn\u2019t implemented for strings. (String columns have dimension vector selectors just not implemented to use them as aggregator inputs since they have different interfaces).\nThe solution in this PR is to make canVectorize method of aggregators take an argument that have access to the column capabilities so they can check all fields of the aggregator. Each aggregator will then use the argument (argument to canVecotrize mentioned above) to get column capabilities for the field and make the necessary check to make sure that the column type can be vectorized for that particular aggregator. (For example, DoubleSumAggregatorFactory must be Numeric ValueType)\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-06-12T04:29:48Z", "url": "https://github.com/apache/druid/pull/10026", "merged": true, "mergeCommit": {"oid": "7569ee3ec6e8955bb704f9b8ab2e88a344d1ed52"}, "closed": true, "closedAt": "2020-06-17T11:52:04Z", "author": {"login": "maytasm"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqbGY5gH2gAyNDMzNDU3MTUxOmM3M2NkZDAxZTk2OTRiMjQxYzU1ZTU5ODQ2OTk2MTVjNTdjMGZjNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsIdw3AFqTQzMjMyMjQyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c73cdd01e9694b241c55e5984699615c57c0fc53", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/c73cdd01e9694b241c55e5984699615c57c0fc53", "committedDate": "2020-06-12T04:25:19Z", "message": "All aggregators should use vectorization-aware column processor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "219c89018a0408c5dfa7dfd18488ec11ef8994b2", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/219c89018a0408c5dfa7dfd18488ec11ef8994b2", "committedDate": "2020-06-12T04:27:36Z", "message": "All aggregators should use vectorization-aware column processor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f82d92f9607c3580ebb61b110b4f010667e7f8cc", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/f82d92f9607c3580ebb61b110b4f010667e7f8cc", "committedDate": "2020-06-15T23:51:52Z", "message": "fix canVectorize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ced7e51d77f32d021c2b844beb79890ba174c610", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/ced7e51d77f32d021c2b844beb79890ba174c610", "committedDate": "2020-06-15T23:53:31Z", "message": "fix canVectorize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de92e3cad6d6f31d7f442537819e74ed49ff5266", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/de92e3cad6d6f31d7f442537819e74ed49ff5266", "committedDate": "2020-06-16T00:38:10Z", "message": "add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDgzOTk2", "url": "https://github.com/apache/druid/pull/10026#pullrequestreview-431083996", "createdAt": "2020-06-16T00:42:48Z", "commit": {"oid": "de92e3cad6d6f31d7f442537819e74ed49ff5266"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0Mjo0OFrOGkHXIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0Mjo0OFrOGkHXIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMjUzMQ==", "bodyText": "Setting this to TRUE to see if any other tests fail.", "url": "https://github.com/apache/druid/pull/10026#discussion_r440522531", "createdAt": "2020-06-16T00:42:48Z", "author": {"login": "maytasm"}, "path": "processing/src/main/java/org/apache/druid/query/QueryContexts.java", "diffHunk": "@@ -59,7 +59,7 @@\n   public static final boolean DEFAULT_USE_CACHE = true;\n   public static final boolean DEFAULT_POPULATE_RESULTLEVEL_CACHE = true;\n   public static final boolean DEFAULT_USE_RESULTLEVEL_CACHE = true;\n-  public static final Vectorize DEFAULT_VECTORIZE = Vectorize.FALSE;\n+  public static final Vectorize DEFAULT_VECTORIZE = Vectorize.TRUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de92e3cad6d6f31d7f442537819e74ed49ff5266"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bae6784f7154abba0e2ce8628dcd87ccc76d49a", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/6bae6784f7154abba0e2ce8628dcd87ccc76d49a", "committedDate": "2020-06-16T20:53:22Z", "message": "revert back default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTQwMzM0", "url": "https://github.com/apache/druid/pull/10026#pullrequestreview-431940334", "createdAt": "2020-06-16T22:39:18Z", "commit": {"oid": "6bae6784f7154abba0e2ce8628dcd87ccc76d49a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjozOToxOFrOGkvkbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMjozOToxOFrOGkvkbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE4MTI5NA==", "bodyText": "ColumnCapabilities#type is annotated as nullable. originalCapabilities.getType().isNumeric() could throw an NPE.\nSame comment in Float and Long SumAggregatorFactories", "url": "https://github.com/apache/druid/pull/10026#discussion_r441181294", "createdAt": "2020-06-16T22:39:18Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/query/aggregation/DoubleSumAggregatorFactory.java", "diffHunk": "@@ -79,8 +81,12 @@ protected VectorValueSelector vectorSelector(VectorColumnSelectorFactory columnS\n   }\n \n   @Override\n-  public boolean canVectorize()\n+  public boolean canVectorize(ColumnCapabilitiesProvider columnCapabilitiesProvider)\n   {\n+    if (fieldName != null) {\n+      final ColumnCapabilities originalCapabilities = columnCapabilitiesProvider.getColumnCapabilities(fieldName);\n+      return expression == null && (originalCapabilities == null || originalCapabilities.getType().isNumeric());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bae6784f7154abba0e2ce8628dcd87ccc76d49a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c764b66176796d08d01d0a13d54ec8460ff01e01", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/c764b66176796d08d01d0a13d54ec8460ff01e01", "committedDate": "2020-06-16T23:54:11Z", "message": "address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTg5OTU1", "url": "https://github.com/apache/druid/pull/10026#pullrequestreview-431989955", "createdAt": "2020-06-17T01:03:12Z", "commit": {"oid": "c764b66176796d08d01d0a13d54ec8460ff01e01"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMTowMzoxM1rOGkyHcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMTowMzoxM1rOGkyHcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIyMzAyNw==", "bodyText": "Which tests validate these conditions? Similar comments for the other AggregatorFactories. I see DoubleMeanAggregator is being tested", "url": "https://github.com/apache/druid/pull/10026#discussion_r441223027", "createdAt": "2020-06-17T01:03:13Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/query/aggregation/LongSumAggregatorFactory.java", "diffHunk": "@@ -87,8 +89,12 @@ protected VectorAggregator factorizeVector(\n   }\n \n   @Override\n-  public boolean canVectorize()\n+  public boolean canVectorize(ColumnCapabilitiesProvider columnCapabilitiesProvider)\n   {\n+    if (fieldName != null) {\n+      final ColumnCapabilities originalCapabilities = columnCapabilitiesProvider.getColumnCapabilities(fieldName);\n+      return expression == null && (originalCapabilities == null || originalCapabilities.getType().isNumeric());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c764b66176796d08d01d0a13d54ec8460ff01e01"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzY0Njk4", "url": "https://github.com/apache/druid/pull/10026#pullrequestreview-431764698", "createdAt": "2020-06-16T18:08:29Z", "commit": {"oid": "de92e3cad6d6f31d7f442537819e74ed49ff5266"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODowODoyOVrOGknPkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjozMDo1N1rOGkzfvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0NDg4Mg==", "bodyText": "I really really (really really) think this needs a better name that doesn't include Provider, seeing that in a class name makes me expect this implements Provider<ColumnCapabilities> from com.google.inject.Provider. I'll try to think of some alternatives and get back to you on this.", "url": "https://github.com/apache/druid/pull/10026#discussion_r441044882", "createdAt": "2020-06-16T18:08:29Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/segment/ColumnCapabilitiesProvider.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.segment.column.ColumnCapabilities;\n+\n+import javax.annotation.Nullable;\n+\n+public interface ColumnCapabilitiesProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de92e3cad6d6f31d7f442537819e74ed49ff5266"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NTYyOQ==", "bodyText": "fieldName cannot be null for this one, there is a precondition in the constructor", "url": "https://github.com/apache/druid/pull/10026#discussion_r441245629", "createdAt": "2020-06-17T02:30:57Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/query/aggregation/mean/DoubleMeanAggregatorFactory.java", "diffHunk": "@@ -106,8 +108,12 @@ public VectorAggregator factorizeVector(final VectorColumnSelectorFactory select\n   }\n \n   @Override\n-  public boolean canVectorize()\n+  public boolean canVectorize(ColumnCapabilitiesProvider columnCapabilitiesProvider)\n   {\n+    if (fieldName != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c764b66176796d08d01d0a13d54ec8460ff01e01"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e595091948bc525f49e3de1a8c76e2832df6818f", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/e595091948bc525f49e3de1a8c76e2832df6818f", "committedDate": "2020-06-17T02:45:28Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e89084a2c39355bcbe34c7bdd4fc6c2d685dc12c", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/e89084a2c39355bcbe34c7bdd4fc6c2d685dc12c", "committedDate": "2020-06-17T07:02:24Z", "message": "address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d0c54b24cd8c7235ae48b6cc809aee89e510ba", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/36d0c54b24cd8c7235ae48b6cc809aee89e510ba", "committedDate": "2020-06-17T08:41:26Z", "message": "address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMzIyNDI1", "url": "https://github.com/apache/druid/pull/10026#pullrequestreview-432322425", "createdAt": "2020-06-17T11:50:30Z", "commit": {"oid": "36d0c54b24cd8c7235ae48b6cc809aee89e510ba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2077, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}