{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODM4MTM2", "number": 9778, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDo1MzozOFrOD3YFCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDo1MzozOFrOD3YFCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzkyNzc4OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/main/java/org/testng/DruidTestRunnerFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDo1MzozOFrOGNmfDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTo0NjowM1rOGNoNOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxNTIxNQ==", "bodyText": "Seems like neither SuiteListener.onStart() nor runTests() throw an Exception. Is this for logging? I changed LoggerListener to print stack trace properly in my PR and this probably wouldn't be necessary.", "url": "https://github.com/apache/druid/pull/9778#discussion_r416915215", "createdAt": "2020-04-28T20:53:38Z", "author": {"login": "jihoonson"}, "path": "integration-tests/src/main/java/org/testng/DruidTestRunnerFactory.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package /*CHECKSTYLE.OFF: PackageName*/org.testng/*CHECKSTYLE.ON: PackageName*/;\n+\n+import org.apache.druid.java.util.common.logger.Logger;\n+import org.apache.druid.testing.utils.SuiteListener;\n+import org.testng.internal.IConfiguration;\n+import org.testng.internal.Systematiser;\n+import org.testng.internal.annotations.IAnnotationFinder;\n+import org.testng.xml.XmlTest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * This class must be in package org.testng to access protected methods like TestNG.getDefault().getConfiguration()\n+ */\n+public class DruidTestRunnerFactory implements ITestRunnerFactory\n+{\n+  private static final Logger LOG = new Logger(DruidTestRunnerFactory.class);\n+  private static final SuiteListener SUITE_LISTENER = new SuiteListener();\n+\n+  @Override\n+  public TestRunner newTestRunner(ISuite suite,\n+                                  XmlTest test,\n+                                  Collection<IInvokedMethodListener> methodListeners,\n+                                  List<IClassListener> classListeners)\n+  {\n+    IConfiguration configuration = TestNG.getDefault().getConfiguration();\n+    String outputDirectory = suite.getOutputDirectory();\n+    IAnnotationFinder annotationFinder = configuration.getAnnotationFinder();\n+    Boolean skipFailedInvocationCounts = suite.getXmlSuite().skipFailedInvocationCounts();\n+    return new DruidTestRunner(\n+        configuration,\n+        suite,\n+        test,\n+        outputDirectory,\n+        annotationFinder,\n+        skipFailedInvocationCounts,\n+        methodListeners,\n+        classListeners\n+    );\n+  }\n+\n+  private static class DruidTestRunner extends TestRunner\n+  {\n+    DruidTestRunner(\n+        IConfiguration configuration,\n+        ISuite suite,\n+        XmlTest test,\n+        String outputDirectory,\n+        IAnnotationFinder finder,\n+        boolean skipFailedInvocationCounts,\n+        Collection<IInvokedMethodListener> methodListeners,\n+        List<IClassListener> classListeners\n+    )\n+    {\n+      super(configuration, suite, test, outputDirectory, finder, skipFailedInvocationCounts, methodListeners, classListeners, Systematiser.getComparator(), Collections.emptyMap());\n+    }\n+\n+    @Override\n+    public void run()\n+    {\n+      try {\n+        // IntegrationTestSuite is run when -Dit.test is not specify in maven command.\n+        // IntegrationTestSuite uses the configuration from integration-tests/src/test/resources/testng.xml\n+        // which already handle suite onStart and onFinish automatically\n+        if (!\"IntegrationTestSuite\".equals(getSuite().getName())) {\n+          SUITE_LISTENER.onStart(getSuite());\n+        }\n+        runTests();\n+      }\n+      catch (Exception e) {\n+        LOG.error(e, \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb03274fc6a10282b982a510008b6ee186f68412"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk0MzQxOA==", "bodyText": "Removed it.", "url": "https://github.com/apache/druid/pull/9778#discussion_r416943418", "createdAt": "2020-04-28T21:46:03Z", "author": {"login": "maytasm"}, "path": "integration-tests/src/main/java/org/testng/DruidTestRunnerFactory.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package /*CHECKSTYLE.OFF: PackageName*/org.testng/*CHECKSTYLE.ON: PackageName*/;\n+\n+import org.apache.druid.java.util.common.logger.Logger;\n+import org.apache.druid.testing.utils.SuiteListener;\n+import org.testng.internal.IConfiguration;\n+import org.testng.internal.Systematiser;\n+import org.testng.internal.annotations.IAnnotationFinder;\n+import org.testng.xml.XmlTest;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * This class must be in package org.testng to access protected methods like TestNG.getDefault().getConfiguration()\n+ */\n+public class DruidTestRunnerFactory implements ITestRunnerFactory\n+{\n+  private static final Logger LOG = new Logger(DruidTestRunnerFactory.class);\n+  private static final SuiteListener SUITE_LISTENER = new SuiteListener();\n+\n+  @Override\n+  public TestRunner newTestRunner(ISuite suite,\n+                                  XmlTest test,\n+                                  Collection<IInvokedMethodListener> methodListeners,\n+                                  List<IClassListener> classListeners)\n+  {\n+    IConfiguration configuration = TestNG.getDefault().getConfiguration();\n+    String outputDirectory = suite.getOutputDirectory();\n+    IAnnotationFinder annotationFinder = configuration.getAnnotationFinder();\n+    Boolean skipFailedInvocationCounts = suite.getXmlSuite().skipFailedInvocationCounts();\n+    return new DruidTestRunner(\n+        configuration,\n+        suite,\n+        test,\n+        outputDirectory,\n+        annotationFinder,\n+        skipFailedInvocationCounts,\n+        methodListeners,\n+        classListeners\n+    );\n+  }\n+\n+  private static class DruidTestRunner extends TestRunner\n+  {\n+    DruidTestRunner(\n+        IConfiguration configuration,\n+        ISuite suite,\n+        XmlTest test,\n+        String outputDirectory,\n+        IAnnotationFinder finder,\n+        boolean skipFailedInvocationCounts,\n+        Collection<IInvokedMethodListener> methodListeners,\n+        List<IClassListener> classListeners\n+    )\n+    {\n+      super(configuration, suite, test, outputDirectory, finder, skipFailedInvocationCounts, methodListeners, classListeners, Systematiser.getComparator(), Collections.emptyMap());\n+    }\n+\n+    @Override\n+    public void run()\n+    {\n+      try {\n+        // IntegrationTestSuite is run when -Dit.test is not specify in maven command.\n+        // IntegrationTestSuite uses the configuration from integration-tests/src/test/resources/testng.xml\n+        // which already handle suite onStart and onFinish automatically\n+        if (!\"IntegrationTestSuite\".equals(getSuite().getName())) {\n+          SUITE_LISTENER.onStart(getSuite());\n+        }\n+        runTests();\n+      }\n+      catch (Exception e) {\n+        LOG.error(e, \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxNTIxNQ=="}, "originalCommit": {"oid": "bb03274fc6a10282b982a510008b6ee186f68412"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2400, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}