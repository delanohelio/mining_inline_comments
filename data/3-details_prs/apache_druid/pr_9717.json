{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NjcwNzY5", "number": 9717, "title": "remove DruidLeaderClient.goAsync(..) that does not follow redirect. Replace its usage by DruidLeaderClient.go(..) with InputStreamFullResponseHandler", "bodyText": "Fixes #8716.\nAfter this, we can revert #9702\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.\n\n\n@surekhasaharan @jihoonson", "createdAt": "2020-04-16T19:57:26Z", "url": "https://github.com/apache/druid/pull/9717", "merged": true, "mergeCommit": {"oid": "12ae84165e8da0d775f5e5e1c5c042d903f260f4"}, "closed": true, "closedAt": "2020-08-14T17:51:19Z", "author": {"login": "himanshug"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYSLIjgH2gAyNDA0NjcwNzY5OjMzN2Q3MGUwYTljZGMxOTgxOTUxNzJkZWJhNGE3NDNkYjE5Y2M5OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-vIz-gFqTQ2NzM1MDUzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "337d70e0a9cdc198195172deba4a743db19cc997", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/337d70e0a9cdc198195172deba4a743db19cc997", "committedDate": "2020-04-16T19:50:43Z", "message": "remove DruidLeaderClient.goAsync(..) that does not follow redirect.\nReplace its usage by DruidLeaadereClient.go(..) with\nInputStreamFullResponseHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzE0Mjk4", "url": "https://github.com/apache/druid/pull/9717#pullrequestreview-409714298", "createdAt": "2020-05-12T05:46:23Z", "commit": {"oid": "337d70e0a9cdc198195172deba4a743db19cc997"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNTo0NjoyM1rOGT24WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNjoxNzo1MlrOGT3iRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ3NTI4OQ==", "bodyText": "addChunk seems to be implemented by all the subclasses, then why remove this ?", "url": "https://github.com/apache/druid/pull/9717#discussion_r423475289", "createdAt": "2020-05-12T05:46:23Z", "author": {"login": "surekhasaharan"}, "path": "core/src/main/java/org/apache/druid/java/util/http/client/response/FullResponseHolder.java", "diffHunk": "@@ -49,12 +49,7 @@ public HttpResponse getResponse()\n   }\n \n   /**\n-   * Append a new chunk of data.\n-   */\n-  public abstract FullResponseHolder addChunk(T chunk);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "337d70e0a9cdc198195172deba4a743db19cc997"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ3ODE3Mw==", "bodyText": "it would always use cached \"CurrentKnownLeader\", it lead to some issues earlier if the cached leader is not reachable, is that case handled somewhere now?", "url": "https://github.com/apache/druid/pull/9717#discussion_r423478173", "createdAt": "2020-05-12T05:55:24Z", "author": {"login": "surekhasaharan"}, "path": "server/src/main/java/org/apache/druid/discovery/DruidLeaderClient.java", "diffHunk": "@@ -121,42 +120,20 @@ public void stop()\n     log.debug(\"Stopped.\");\n   }\n \n-  /**\n-   * Make a Request object aimed at the leader. Throws IOException if the leader cannot be located.\n-   *\n-   * @param cached Uses cached leader if true, else uses the current leader\n-   */\n-  public Request makeRequest(HttpMethod httpMethod, String urlPath, boolean cached) throws IOException\n-  {\n-    Preconditions.checkState(lifecycleLock.awaitStarted(1, TimeUnit.MILLISECONDS));\n-    return new Request(httpMethod, new URL(StringUtils.format(\"%s%s\", getCurrentKnownLeader(cached), urlPath)));\n-  }\n-\n   /**\n    * Make a Request object aimed at the leader. Throws IOException if the leader cannot be located.\n    */\n   public Request makeRequest(HttpMethod httpMethod, String urlPath) throws IOException\n   {\n-    return makeRequest(httpMethod, urlPath, true);\n+    Preconditions.checkState(lifecycleLock.awaitStarted(1, TimeUnit.MILLISECONDS));\n+    return new Request(httpMethod, new URL(StringUtils.format(\"%s%s\", getCurrentKnownLeader(true), urlPath)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "337d70e0a9cdc198195172deba4a743db19cc997"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ4NDQ5Nw==", "bodyText": "instead of query, it should be request.getUrl().toString() or something which gives info about the leader location.", "url": "https://github.com/apache/druid/pull/9717#discussion_r423484497", "createdAt": "2020-05-12T06:13:50Z", "author": {"login": "surekhasaharan"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/MetadataSegmentView.java", "diffHunk": "@@ -201,32 +197,41 @@ private void poll()\n       query = \"/druid/coordinator/v1/metadata/segments?includeOvershadowedStatus&\" + sb;\n     }\n     Request request;\n+    InputStreamFullResponseHolder responseHolder;\n     try {\n       request = coordinatorClient.makeRequest(\n           HttpMethod.GET,\n-          StringUtils.format(query),\n-          false\n+          StringUtils.format(query)\n       );\n+\n+      responseHolder = coordinatorClient.go(\n+          request,\n+          new InputStreamFullResponseHandler()\n+      );\n+      if (responseHolder.getStatus().getCode() != HttpServletResponse.SC_OK) {\n+        throw new RE(\n+            \"Failed to talk to coordinator leader at [%s]. Error code[%d], description[%s].\",\n+            query,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "337d70e0a9cdc198195172deba4a743db19cc997"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ4NTE4Mg==", "bodyText": "can we remove this param now", "url": "https://github.com/apache/druid/pull/9717#discussion_r423485182", "createdAt": "2020-05-12T06:15:38Z", "author": {"login": "surekhasaharan"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/MetadataSegmentView.java", "diffHunk": "@@ -201,32 +197,41 @@ private void poll()\n       query = \"/druid/coordinator/v1/metadata/segments?includeOvershadowedStatus&\" + sb;\n     }\n     Request request;\n+    InputStreamFullResponseHolder responseHolder;\n     try {\n       request = coordinatorClient.makeRequest(\n           HttpMethod.GET,\n-          StringUtils.format(query),\n-          false\n+          StringUtils.format(query)\n       );\n+\n+      responseHolder = coordinatorClient.go(\n+          request,\n+          new InputStreamFullResponseHandler()\n+      );\n+      if (responseHolder.getStatus().getCode() != HttpServletResponse.SC_OK) {\n+        throw new RE(\n+            \"Failed to talk to coordinator leader at [%s]. Error code[%d], description[%s].\",\n+            query,\n+            responseHolder.getStatus().getCode(),\n+            responseHolder.getStatus().getReasonPhrase()\n+        );\n+      }\n     }\n-    catch (IOException e) {\n+    catch (IOException | InterruptedException e) {\n       throw new RuntimeException(e);\n     }\n-    ListenableFuture<InputStream> future = coordinatorClient.goAsync(\n-        request,\n-        responseHandler\n-    );\n \n     final JavaType typeRef = jsonMapper.getTypeFactory().constructType(new TypeReference<SegmentWithOvershadowedStatus>()\n     {\n     });\n     return new JsonParserIterator<>(\n         typeRef,\n-        future,\n+        Futures.immediateFuture(responseHolder.getContent()),\n         request.getUrl().toString(),\n         null,\n         request.getUrl().getHost(),\n         jsonMapper,\n-        responseHandler\n+        null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "337d70e0a9cdc198195172deba4a743db19cc997"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ4NjAyMA==", "bodyText": "same comment about replacing query with more meaningful info here and at other places", "url": "https://github.com/apache/druid/pull/9717#discussion_r423486020", "createdAt": "2020-05-12T06:17:52Z", "author": {"login": "surekhasaharan"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -736,37 +733,48 @@ public void close()\n   //Note that overlord must be up to get tasks\n   private static JsonParserIterator<TaskStatusPlus> getTasks(\n       DruidLeaderClient indexingServiceClient,\n-      ObjectMapper jsonMapper,\n-      BytesAccumulatingResponseHandler responseHandler\n+      ObjectMapper jsonMapper\n   )\n   {\n     Request request;\n+    InputStreamFullResponseHolder responseHolder;\n     try {\n+      String query = \"/druid/indexer/v1/tasks\";\n+\n       request = indexingServiceClient.makeRequest(\n           HttpMethod.GET,\n-          \"/druid/indexer/v1/tasks\",\n-          false\n+          query\n+      );\n+\n+      responseHolder = indexingServiceClient.go(\n+          request,\n+          new InputStreamFullResponseHandler()\n       );\n+\n+      if (responseHolder.getStatus().getCode() != HttpServletResponse.SC_OK) {\n+        throw new RE(\n+            \"Failed to talk to overlord leader at [%s]. Error code[%d], description[%s].\",\n+            query,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "337d70e0a9cdc198195172deba4a743db19cc997"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a7cba2cb5387a344a87b7c6fe60c0dce75ac2ed", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/6a7cba2cb5387a344a87b7c6fe60c0dce75ac2ed", "committedDate": "2020-05-30T00:17:21Z", "message": "remove ByteArrayResponseHolder dependency from JsonParserIterator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef28b6360a08c84565396f8b4346a13d65e95c8", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/3ef28b6360a08c84565396f8b4346a13d65e95c8", "committedDate": "2020-05-30T00:37:01Z", "message": "Merge remote-tracking branch 'apache/master' into fix_8716"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79a4691cea989fc624aa0d34d827919515fdd63c", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/79a4691cea989fc624aa0d34d827919515fdd63c", "committedDate": "2020-06-10T16:21:52Z", "message": "Merge remote-tracking branch 'apache/master' into fix_8716"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d458b8ad74c86dca0e3942449386f1f56eb1feb4", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/d458b8ad74c86dca0e3942449386f1f56eb1feb4", "committedDate": "2020-07-25T17:20:52Z", "message": "Merge remote-tracking branch 'apache/master' into fix_8716"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "330aba3dd98ce15a13cd6ca607824bc07036ee81", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/330aba3dd98ce15a13cd6ca607824bc07036ee81", "committedDate": "2020-07-26T17:57:31Z", "message": "add UT to cover lines in InputStreamFullResponseHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18d1a910bd78cc33cc9729e21269aaf3a929bb5e", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/18d1a910bd78cc33cc9729e21269aaf3a929bb5e", "committedDate": "2020-07-26T17:57:44Z", "message": "refactor SystemSchema to reduce branches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec993a986fe5a4d17c5d808d33d1a1589074042b", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/ec993a986fe5a4d17c5d808d33d1a1589074042b", "committedDate": "2020-07-26T23:33:40Z", "message": "further reduce branches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0285687413a2d1d7d3f2c9156d0671d6a6c088", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/ee0285687413a2d1d7d3f2c9156d0671d6a6c088", "committedDate": "2020-07-27T00:05:07Z", "message": "Revert \"add UT to cover lines in InputStreamFullResponseHandler\"\n\nThis reverts commit 330aba3dd98ce15a13cd6ca607824bc07036ee81."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b139b8e8ca9f544a99af2bf025652459700a54a", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/0b139b8e8ca9f544a99af2bf025652459700a54a", "committedDate": "2020-07-27T00:05:34Z", "message": "UTs for InputStreamFullResponseHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0d64850b29413ba920414ffd8e5feaad206ee46", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/e0d64850b29413ba920414ffd8e5feaad206ee46", "committedDate": "2020-07-27T01:45:52Z", "message": "remove unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzUwNTMx", "url": "https://github.com/apache/druid/pull/9717#pullrequestreview-467350531", "createdAt": "2020-08-14T07:04:33Z", "commit": {"oid": "e0d64850b29413ba920414ffd8e5feaad206ee46"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2530, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}