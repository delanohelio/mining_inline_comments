{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMzI0NzQz", "number": 10080, "title": "Add integration tests for SqlInputSource", "bodyText": "Add integration tests for SqlInputSource\nDescription\nAdd integration tests for SqlInputSource introduced in #9449\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-06-26T00:45:54Z", "url": "https://github.com/apache/druid/pull/10080", "merged": true, "mergeCommit": {"oid": "ec46d82c710d3bb3481c0dace029729ba49aadd8"}, "closed": true, "closedAt": "2020-06-26T20:32:43Z", "author": {"login": "maytasm"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu4SimAH2gAyNDQwMzI0NzQzOjNlYjc4NTY0YjI1N2M4Yzk2YjJkYzk0YTg2Zjc1NWFkOTc1ZTAyYzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvDcovgFqTQzODMwNDk2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3eb78564b257c8c96b2dc94a86f755ad975e02c4", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/3eb78564b257c8c96b2dc94a86f755ad975e02c4", "committedDate": "2020-06-26T00:41:32Z", "message": "Add integration tests for SqlInputSource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "866647254c9a2c6db42a9e64d722473a00914b55", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/866647254c9a2c6db42a9e64d722473a00914b55", "committedDate": "2020-06-26T01:53:28Z", "message": "make it faster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTg1NTg3", "url": "https://github.com/apache/druid/pull/10080#pullrequestreview-437985587", "createdAt": "2020-06-26T03:04:00Z", "commit": {"oid": "866647254c9a2c6db42a9e64d722473a00914b55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MzA0OTYw", "url": "https://github.com/apache/druid/pull/10080#pullrequestreview-438304960", "createdAt": "2020-06-26T13:41:20Z", "commit": {"oid": "866647254c9a2c6db42a9e64d722473a00914b55"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo0MToyMVrOGphV2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMzo0MToyMVrOGphV2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE5MTA2Nw==", "bodyText": "nit: Maybe consider making the name of the test part of the parameters, then you can use the @TestCaseName annotation to print out the name of each parameterized test and it could also be used as the name of the datasource.\nlike @TestCaseName(\"testSqlInputSource - {1}\")", "url": "https://github.com/apache/druid/pull/10080#discussion_r446191067", "createdAt": "2020-06-26T13:41:21Z", "author": {"login": "suneet-s"}, "path": "integration-tests/src/test/java/org/apache/druid/tests/parallelized/ITSqlInputSourceTest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.tests.parallelized;\n+\n+import com.google.common.collect.ImmutableList;\n+import org.apache.druid.indexer.partitions.DynamicPartitionsSpec;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.apache.druid.testing.guice.DruidTestModuleFactory;\n+import org.apache.druid.tests.TestNGGroup;\n+import org.apache.druid.tests.indexer.AbstractITBatchIndexTest;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Guice;\n+import org.testng.annotations.Test;\n+\n+import java.io.Closeable;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.function.Function;\n+\n+@Test(groups = TestNGGroup.BATCH_INDEX)\n+@Guice(moduleFactory = DruidTestModuleFactory.class)\n+public class ITSqlInputSourceTest extends AbstractITBatchIndexTest\n+{\n+  private static final String INDEX_TASK = \"/indexer/wikipedia_index_task.json\";\n+  private static final String INDEX_QUERIES_RESOURCE = \"/indexer/wikipedia_index_queries.json\";\n+\n+  @DataProvider(parallel = true)\n+  public static Object[][] resources()\n+  {\n+    return new Object[][]{\n+        // Multiple query. No filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "866647254c9a2c6db42a9e64d722473a00914b55"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2156, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}