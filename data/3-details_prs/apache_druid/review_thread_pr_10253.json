{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0Mzk2NDIz", "number": 10253, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMTozMlrOEW1egw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOToyOToxMVrOEXWgxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzgwMjkxOnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMTozMlrOG-S1rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDo0MzowNFrOG_7ybQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzU0OQ==", "bodyText": "Can we default to false instead of making this nullable?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Boolean forceLimitPushDown;\n          \n          \n            \n              private boolean forceLimitPushDown;", "url": "https://github.com/apache/druid/pull/10253#discussion_r467973549", "createdAt": "2020-08-10T15:11:32Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "diffHunk": "@@ -121,6 +120,10 @@ public static Builder builder()\n   @Nullable\n   private final DateTime universalTimestamp;\n \n+  private final boolean canPushDownLimit;\n+  @Nullable\n+  private Boolean forceLimitPushDown;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f63335e145685d2af61493da22ad3f6cf4c061f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxMTY1Ng==", "bodyText": "I think this would cause extra calls to validateAndGetForceLimitPushDown whenever isApplyLimitPushdown is called because of being unable to distinguish between an actual false and the value not being computed yet. It's probably not especially harmful, but it also seems unnecessary.", "url": "https://github.com/apache/druid/pull/10253#discussion_r468811656", "createdAt": "2020-08-11T19:22:22Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "diffHunk": "@@ -121,6 +120,10 @@ public static Builder builder()\n   @Nullable\n   private final DateTime universalTimestamp;\n \n+  private final boolean canPushDownLimit;\n+  @Nullable\n+  private Boolean forceLimitPushDown;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzU0OQ=="}, "originalCommit": {"oid": "8f63335e145685d2af61493da22ad3f6cf4c061f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY5MzAzNw==", "bodyText": "Yeah, it's nullable to lazily initialize and cache it. Checking the value of forceLimitPushDown is needed a couple of times during a query. Even though it's not very harmful, I don't see any reason to not cache it.", "url": "https://github.com/apache/druid/pull/10253#discussion_r469693037", "createdAt": "2020-08-13T04:43:04Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "diffHunk": "@@ -121,6 +120,10 @@ public static Builder builder()\n   @Nullable\n   private final DateTime universalTimestamp;\n \n+  private final boolean canPushDownLimit;\n+  @Nullable\n+  private Boolean forceLimitPushDown;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzU0OQ=="}, "originalCommit": {"oid": "8f63335e145685d2af61493da22ad3f6cf4c061f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTIwMzUzOnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOToyNToyOFrOG_GFxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDo0MzoxMFrOG_7ygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxMzI1Mg==", "bodyText": "super nit: it seems funny to have ...LimitPushDown and ...PushDownLimit, but I'm not really sure what is the best way to square these up. I guess ...LimitPushDown is more prevalent, so maybe renaming to canDoLimitPushDown to be more consistent?", "url": "https://github.com/apache/druid/pull/10253#discussion_r468813252", "createdAt": "2020-08-11T19:25:28Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "diffHunk": "@@ -409,7 +412,10 @@ public boolean getContextSortByDimsFirst()\n   @JsonIgnore\n   public boolean isApplyLimitPushDown()\n   {\n-    return applyLimitPushDown;\n+    if (forceLimitPushDown == null) {\n+      forceLimitPushDown = validateAndGetForceLimitPushDown();\n+    }\n+    return forceLimitPushDown || canPushDownLimit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f63335e145685d2af61493da22ad3f6cf4c061f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY5MzA1OQ==", "bodyText": "Renamed.", "url": "https://github.com/apache/druid/pull/10253#discussion_r469693059", "createdAt": "2020-08-13T04:43:10Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "diffHunk": "@@ -409,7 +412,10 @@ public boolean getContextSortByDimsFirst()\n   @JsonIgnore\n   public boolean isApplyLimitPushDown()\n   {\n-    return applyLimitPushDown;\n+    if (forceLimitPushDown == null) {\n+      forceLimitPushDown = validateAndGetForceLimitPushDown();\n+    }\n+    return forceLimitPushDown || canPushDownLimit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxMzI1Mg=="}, "originalCommit": {"oid": "8f63335e145685d2af61493da22ad3f6cf4c061f"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTIxNTQzOnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOToyOToxMVrOG_GNNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwNDo0Mzo1NFrOG_7zKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxNTE1OA==", "bodyText": "nit: this method name should probably include LimitPushDown or at least Limit somehow to make it clearer that it applies to limits, maybe canDoLimitPushDown() if you decide to rename the field as well?", "url": "https://github.com/apache/druid/pull/10253#discussion_r468815158", "createdAt": "2020-08-11T19:29:11Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "diffHunk": "@@ -474,14 +480,12 @@ private RowSignature computeResultRowSignature()\n                   .build();\n   }\n \n-  private boolean determineApplyLimitPushDown()\n+  private boolean canPushDown()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f63335e145685d2af61493da22ad3f6cf4c061f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY5MzIyNw==", "bodyText": "Added limitSpec, havingSpec, and subtotalsSpec as params and renamed.", "url": "https://github.com/apache/druid/pull/10253#discussion_r469693227", "createdAt": "2020-08-13T04:43:54Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQuery.java", "diffHunk": "@@ -474,14 +480,12 @@ private RowSignature computeResultRowSignature()\n                   .build();\n   }\n \n-  private boolean determineApplyLimitPushDown()\n+  private boolean canPushDown()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgxNTE1OA=="}, "originalCommit": {"oid": "8f63335e145685d2af61493da22ad3f6cf4c061f"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2261, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}