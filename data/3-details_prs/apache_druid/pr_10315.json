{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTUzOTA3", "number": 10315, "title": "Handle internal kinesis sequence numbers when reporting lag", "bodyText": "Handles a scenario in which the result from getHighestCurrentOffsets has expired shards. In such a case, the sequence for a shard can be \"EXPIRED\". The lag reporter calls the AWS API with this offset and runs into an exception since \"EXPIRED\" string is not a valid sequence number.\n\nThis PR has:\n\n been self-reviewed.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-08-24T14:20:17Z", "url": "https://github.com/apache/druid/pull/10315", "merged": true, "mergeCommit": {"oid": "d4ac62f284e4e8038239082f6371c440d9ffef18"}, "closed": true, "closedAt": "2020-08-26T18:27:38Z", "author": {"login": "abhishekagarwal87"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCCZ2qAH2gAyNDcyNTUzOTA3OmNiMDE4OTZmNTgyMjhiZDNkMzYzNmJhZDkyYzllMDIzNjA1YTIwNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCgLCTAFqTQ3NTA2MTAwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb01896f58228bd3d3636bad92c9e023605a2050", "author": {"user": {"login": "abhishekagarwal87", "name": "Abhishek Agarwal"}}, "url": "https://github.com/apache/druid/commit/cb01896f58228bd3d3636bad92c9e023605a2050", "committedDate": "2020-08-24T13:13:08Z", "message": "Handle internal kinesis sequence numbers when reporting lag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTIyMzI5", "url": "https://github.com/apache/druid/pull/10315#pullrequestreview-474122329", "createdAt": "2020-08-25T04:14:06Z", "commit": {"oid": "cb01896f58228bd3d3636bad92c9e023605a2050"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDoxNDowNlrOHGFp8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDoxODoxNFrOHGF1XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE0NjE2MQ==", "bodyText": "nit: use isValidAWSKinesisSequence instead\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (END_OF_SHARD_MARKER.equals(sequenceNumber)\n          \n          \n            \n                    || NO_END_SEQUENCE_NUMBER.equals(sequenceNumber)\n          \n          \n            \n                    || EXPIRED_MARKER.equals(sequenceNumber)) {\n          \n          \n            \n                if (!isValidAWSKinesisSequence(sequenceNumber)) {", "url": "https://github.com/apache/druid/pull/10315#discussion_r476146161", "createdAt": "2020-08-25T04:14:06Z", "author": {"login": "suneet-s"}, "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisSequenceNumber.java", "diffHunk": "@@ -62,7 +62,9 @@\n   private KinesisSequenceNumber(String sequenceNumber, boolean isExclusive)\n   {\n     super(sequenceNumber, isExclusive);\n-    if (END_OF_SHARD_MARKER.equals(sequenceNumber) || NO_END_SEQUENCE_NUMBER.equals(sequenceNumber)) {\n+    if (END_OF_SHARD_MARKER.equals(sequenceNumber)\n+        || NO_END_SEQUENCE_NUMBER.equals(sequenceNumber)\n+        || EXPIRED_MARKER.equals(sequenceNumber)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb01896f58228bd3d3636bad92c9e023605a2050"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE0OTA4NQ==", "bodyText": "Can we add some tests for this? I don't know if we can simulate this scenario in an integration test, but can we add a unit test for this", "url": "https://github.com/apache/druid/pull/10315#discussion_r476149085", "createdAt": "2020-08-25T04:18:14Z", "author": {"login": "suneet-s"}, "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java", "diffHunk": "@@ -718,9 +718,11 @@ public String getEarliestSequenceNumber(StreamPartition<String> partition)\n   {\n     Map<String, Long> partitionLag = Maps.newHashMapWithExpectedSize(currentOffsets.size());\n     for (Map.Entry<String, String> partitionOffset : currentOffsets.entrySet()) {\n-      StreamPartition<String> partition = new StreamPartition<>(stream, partitionOffset.getKey());\n-      long currentLag = getPartitionTimeLag(partition, partitionOffset.getValue());\n-      partitionLag.put(partitionOffset.getKey(), currentLag);\n+      if (KinesisSequenceNumber.isValidAWSKinesisSequence(partitionOffset.getValue())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb01896f58228bd3d3636bad92c9e023605a2050"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjA4Mzg4", "url": "https://github.com/apache/druid/pull/10315#pullrequestreview-474208388", "createdAt": "2020-08-25T07:33:20Z", "commit": {"oid": "cb01896f58228bd3d3636bad92c9e023605a2050"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "165c0350707d71b7d613cff641e155b6f0ba9a1f", "author": {"user": {"login": "abhishekagarwal87", "name": "Abhishek Agarwal"}}, "url": "https://github.com/apache/druid/commit/165c0350707d71b7d613cff641e155b6f0ba9a1f", "committedDate": "2020-08-25T13:17:49Z", "message": "add unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MDYxMDA0", "url": "https://github.com/apache/druid/pull/10315#pullrequestreview-475061004", "createdAt": "2020-08-25T23:54:06Z", "commit": {"oid": "165c0350707d71b7d613cff641e155b6f0ba9a1f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3479, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}