{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjQxMDkz", "number": 10264, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMDowOFrOEZFTfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMDowOFrOEZFTfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzM2NzY0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/segment/realtime/firehose/CombiningFirehoseFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNTowMDowOFrOHBsdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNDozMzozOFrOHCXe5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzOTE0Ng==", "bodyText": "I looked for implementations of FirehoseFactory that do not also implement FiniteFirehoseFactory and I found a few... eg. ClippedFirehoseFactory, FixedCountFirehoseFactory, etc.\nI think the underlying problem is in IndexIOConfig#getNonNullInputSource\nIndexIOConfig accepts a FirehoseFactory, but getNonNullInputSource expects a FiniteFirehoseFactory.\nI wonder if we could fix this by creating an adapter that translates any FirehoseFactory into a non-splittable FiniteFirehoseFactory (ie. the same functionality you've implemented in this class).\nI understand that the FirehoseFactories are deprecated, so I'm open to other ways of fixing the broken quickstart material as well - can we update the spec used so that the combining firehose factory works without a code change?", "url": "https://github.com/apache/druid/pull/10264#discussion_r471539146", "createdAt": "2020-08-17T15:00:08Z", "author": {"login": "suneet-s"}, "path": "server/src/main/java/org/apache/druid/segment/realtime/firehose/CombiningFirehoseFactory.java", "diffHunk": "@@ -33,11 +36,12 @@\n import java.io.IOException;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.stream.Stream;\n \n /**\n  * Creates firehose that combines data from different Firehoses. Useful for ingesting data from multiple sources.\n  */\n-public class CombiningFirehoseFactory implements FirehoseFactory<InputRowParser>\n+public class CombiningFirehoseFactory implements FiniteFirehoseFactory<InputRowParser, List<FirehoseFactory>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ab1298f839b584544047f970f511bb95eb8dcc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI0Mzk0Mg==", "bodyText": "I feel that adding a non-splittable adapter would apply only to CombiningFirehoseFactory.  ClippedFirehoseFactory , TimedShutoffFirehoseFactory and FixedCountFirehoseFactory can be potentially splittable if the delegate FirehoseFactory is splittable, it's just that they haven't been fixed yet.\nWhat we actually need is for index_parallel to support nested InputSource say DelegateInputSource. The delegate FirehoseFactories such as the ones listed above can then be easily provided their equivalent InputSource implementations. I've been looking at adding this support and hopefully can have a proposal out once I have something.", "url": "https://github.com/apache/druid/pull/10264#discussion_r472243942", "createdAt": "2020-08-18T14:33:38Z", "author": {"login": "a2l007"}, "path": "server/src/main/java/org/apache/druid/segment/realtime/firehose/CombiningFirehoseFactory.java", "diffHunk": "@@ -33,11 +36,12 @@\n import java.io.IOException;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.stream.Stream;\n \n /**\n  * Creates firehose that combines data from different Firehoses. Useful for ingesting data from multiple sources.\n  */\n-public class CombiningFirehoseFactory implements FirehoseFactory<InputRowParser>\n+public class CombiningFirehoseFactory implements FiniteFirehoseFactory<InputRowParser, List<FirehoseFactory>>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUzOTE0Ng=="}, "originalCommit": {"oid": "10ab1298f839b584544047f970f511bb95eb8dcc"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2264, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}