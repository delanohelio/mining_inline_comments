{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzA2NzIz", "number": 9594, "title": "Fix double count ssl connection metrics", "bodyText": "Description\nThis PR fixes an issue where the jetty/numOpenConnections metric is double counted for SSL connections due to the way all ConnectionFactory instances are wrapped in JettyMonitoringConnectionFactory in JettyServerModule initialization, instead of what I believe to be the correct usage of only monitoring the default ConnectionFactory for the ServerConnector.\nThe TLS ServerConnector is constructed with 2 ConnectionFactory instances:\n...\n      final ServerConnector connector = new ServerConnector(\n          server,\n          new SslConnectionFactory(sslContextFactory, HTTP_1_1_STRING),\n          new HttpConnectionFactory(httpsConfiguration)\n      );\n...\n\nIt is my understanding (and observation using the debugger) that both create a connection, the SslConnectionFactory to un-encrypt the request connection, and the HttpConnectionFactory to do HTTP stuff to the now un-encrypted connection. However, since both of these were prior to this PR wrapped in JettyMonitoringConnectionFactory, a single TLS connection would count as 2 active connections, despite only 1 request being made. This PR modifies JettyServerModule to now only monitor the ConnectionFactory with the same protocol as the default ServerConnector protocol to correctly single count the connection.\nThe added test JettyTest.testNumConnectionsMetricHttps fails without the modifications to JettyServerModule. The keystore/truststore in the test resources were generated in the same manner as used in the integration tests.\n\nThis PR has:\n\n been self-reviewed.\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nJettyServerModule", "createdAt": "2020-03-31T12:39:52Z", "url": "https://github.com/apache/druid/pull/9594", "merged": true, "mergeCommit": {"oid": "4d277dbf9901a592789fbcc6b1dff1ebebb5e00e"}, "closed": true, "closedAt": "2020-04-04T06:29:24Z", "author": {"login": "clintropolis"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS-LmNAH2gAyMzk2MzA2NzIzOjU1NjY3YmIwZThiZWYzZmZiNWQyMGJmODllODY5MDM0ZWM4MDA5MDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUIDWYAFqTM4NzU5OTc5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "55667bb0e8bef3ffb5d20bf89e869034ec800909", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/55667bb0e8bef3ffb5d20bf89e869034ec800909", "committedDate": "2020-03-31T07:43:30Z", "message": "fix double counted jetty/numOpenConnections metric for ssl connections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/111cc1f61fbc3f51d0de1cc730f409b4c91a2a70", "committedDate": "2020-03-31T12:22:59Z", "message": "tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODEwMjkz", "url": "https://github.com/apache/druid/pull/9594#pullrequestreview-386810293", "createdAt": "2020-04-02T22:05:04Z", "commit": {"oid": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjowNTowNFrOF_-Jhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjoyNzo1NVrOF_-uog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMjg1NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/druid/pull/9594#discussion_r402622855", "createdAt": "2020-04-02T22:05:04Z", "author": {"login": "jihoonson"}, "path": "examples/bin/dsql-main", "diffHunk": "@@ -400,7 +400,7 @@ def main():\n   parser_fmt.add_argument('--format', type=str, default='table', choices=('csv', 'tsv', 'json', 'table'), help='Result format')\n   parser_fmt.add_argument('--header', action='store_true', help='Include header row for formats \"csv\" and \"tsv\"')\n   parser_fmt.add_argument('--tsv-delimiter', type=str, default='\\t', help='Delimiter for format \"tsv\"')\n-  parser_oth.add_argument('--context-option', '-c', type=str, action='append', help='Set context option for this connection, see https://docs.imply.io/on-prem/query-data/sql for options')\n+  parser_oth.add_argument('--context-option', '-c', type=str, action='append', help='Set context option for this connection, see https://druid.apache.org/docs/latest/querying/sql.html#connection-context for options')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYzMjM1NA==", "bodyText": "Maybe there is some better way for waiting here rather than sleeping.. Maybe we can do like\nwhile (jsm.getActiveConnections() == 0) {\n  Thread.sleep(100);\n}\nAssert.assertEquals(1, jsm.getActiveConnections());\ngo.get();", "url": "https://github.com/apache/druid/pull/9594#discussion_r402632354", "createdAt": "2020-04-02T22:27:55Z", "author": {"login": "jihoonson"}, "path": "server/src/test/java/org/apache/druid/server/initialization/JettyTest.java", "diffHunk": "@@ -311,4 +430,69 @@ public void testGzipRequestDecompression() throws Exception\n         new InputStreamResponseHandler()\n     ).get()), Charset.defaultCharset()));\n   }\n+\n+  @Test\n+  public void testNumConnectionsMetricHttp() throws Exception\n+  {\n+    String text = \"hello\";\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    try (GZIPOutputStream gzipOutputStream = new GZIPOutputStream(out)) {\n+      gzipOutputStream.write(text.getBytes(Charset.defaultCharset()));\n+    }\n+    Request request = new Request(HttpMethod.POST, new URL(\"http://localhost:\" + port + \"/slow/hello\"));\n+    request.setHeader(\"Content-Encoding\", \"gzip\");\n+    request.setContent(MediaType.TEXT_PLAIN, out.toByteArray());\n+\n+    JettyServerModule jsm = inj.getInstance(JettyServerModule.class);\n+    Assert.assertEquals(0, jsm.getActiveConnections());\n+    ListenableFuture<InputStream> go = client.go(\n+        request,\n+        new InputStreamResponseHandler()\n+    );\n+    // sad\n+    Thread.sleep(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70"}, "originalPosition": 231}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a69f46e1d274e190bc3e3e1e06146a58f27fffe6", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/a69f46e1d274e190bc3e3e1e06146a58f27fffe6", "committedDate": "2020-04-03T01:33:50Z", "message": "more better"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4768b7e91001052289540227d4f048d26dae7aa", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/e4768b7e91001052289540227d4f048d26dae7aa", "committedDate": "2020-04-03T08:07:19Z", "message": "style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTk5Nzk1", "url": "https://github.com/apache/druid/pull/9594#pullrequestreview-387599795", "createdAt": "2020-04-03T21:47:28Z", "commit": {"oid": "e4768b7e91001052289540227d4f048d26dae7aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2767, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}