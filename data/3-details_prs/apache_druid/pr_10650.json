{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNTM3MDQy", "number": 10650, "title": "Historical load Segments enhancement", "bodyText": "Fixes #10649.\nThere are two minor shortcomings in Druid historical loading, which can be enhancement to improve the robustness.\nFitst :\nWhen Historical start up or do compact action, Druid will check segments are loaded or not.\nThe existing logic is based on whether the directory exists. When directory exists but segment files are damaged during download and unzip from DeepStorage, like crashed, this simple check will pass. What's worse is that any action using this segments like segment loading or datasource compaction will fail unexpectedly.\nSecond :\nWhen set druid.coordinator.loadqueuepeon.type=http  using \"http\"  implementation to assign segment loads/drops to historical, there is a LRU cache design to maintain idempotent if same request shows up again and to return status of a completed request \n  \n    \n      druid/server/src/main/java/org/apache/druid/server/coordination/SegmentLoadDropHandler.java\n    \n    \n         Line 95\n      in\n      b91a169\n    \n    \n    \n    \n\n        \n          \n           private final Cache<DataSegmentChangeRequest, AtomicReference<Status>> requestStatuses; \n        \n    \n  \n\n\nAnd only new requests can be executed\n\n  \n    \n      druid/server/src/main/java/org/apache/druid/server/coordination/SegmentLoadDropHandler.java\n    \n    \n         Line 510\n      in\n      b91a169\n    \n    \n    \n    \n\n        \n          \n           if (requestStatuses.getIfPresent(changeRequest) == null) { \n        \n    \n  \n\n\nIf last action loads damaged segment files mentioned above , this action is failed and cached.\nNext time coordinator asks historical to load this segment again, Historical Server will response failure based on cache rather than try to load again which will success.\nThis cycle may cause coordinator letting current historical node loading this segments over and over again. And Historical will keep response failure without a retry until LRU cache is Invalidation or Stream Index Task is failed because of completionTimeout limitation.\nDescription\n\nDo segment files integrity check before loading based on downloadStartMarker\nTry to load segments again after failure.\n\n\n\n\n\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nSegmentLoaderLocalCacheManager.java\nSegmentLoadDropHandler.java", "createdAt": "2020-12-07T09:49:30Z", "url": "https://github.com/apache/druid/pull/10650", "merged": true, "mergeCommit": {"oid": "0ad27c06da4e0bb195a67ed623cc8fbba5967e27"}, "closed": true, "closedAt": "2020-12-14T21:56:04Z", "author": {"login": "zhangyue19921010"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiFuGEAH2gAyNTMzNTM3MDQyOjU3YTlhZjNjOTk5N2I2MjgzMDRhZjQ5YzBiNjIzMTQxZDgxZTRiZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmHHXIAH2gAyNTMzNTM3MDQyOmQwNGQ0ZjdlNjRkMGM1OWVmNWM5Y2UxNTY5ODM5NmJkZjBmMmI5YWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "57a9af3c9997b628304af49c0b623141d81e4be0", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/57a9af3c9997b628304af49c0b623141d81e4be0", "committedDate": "2020-12-02T03:10:32Z", "message": "load segments with segment files check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06679f761d54eba00847980759afde11b4f8117c", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/06679f761d54eba00847980759afde11b4f8117c", "committedDate": "2020-12-02T03:18:59Z", "message": "add more java docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3239ac2544e1a62322c0378b810b9e3b9ac957c6", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/3239ac2544e1a62322c0378b810b9e3b9ac957c6", "committedDate": "2020-12-07T09:33:28Z", "message": "Merge branch 'master' into historical-load-enhancment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90540f5e00dbaba3a9c29449e655ba1920965370", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/90540f5e00dbaba3a9c29449e655ba1920965370", "committedDate": "2020-12-07T09:34:26Z", "message": "done"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b23a56803d563635b18acb733d49b72ccd591c56", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/b23a56803d563635b18acb733d49b72ccd591c56", "committedDate": "2020-12-07T09:39:50Z", "message": "add java docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89fac7c14d0a9d370ec6c547d9b5fb2b65d74e1e", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/89fac7c14d0a9d370ec6c547d9b5fb2b65d74e1e", "committedDate": "2020-12-07T09:40:25Z", "message": "revert misc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c745d601dd5491ffec721eff9d82dcbb9f3de2a", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/5c745d601dd5491ffec721eff9d82dcbb9f3de2a", "committedDate": "2020-12-07T11:43:43Z", "message": "resolve ci failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a77bf43f5e81b7b10f6aef43f4afa72435ecf480", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/a77bf43f5e81b7b10f6aef43f4afa72435ecf480", "committedDate": "2020-12-07T11:44:17Z", "message": "resolve ci failures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjQ1MjQ2", "url": "https://github.com/apache/druid/pull/10650#pullrequestreview-550645246", "createdAt": "2020-12-11T23:33:57Z", "commit": {"oid": "a77bf43f5e81b7b10f6aef43f4afa72435ecf480"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzozMzo1N1rOIEVSTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMzozMzo1N1rOIEVSTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQxMzk2NA==", "bodyText": "nit: maybe we can push this check inside findStorageLocationIfLoaded(segment) itself next to its dirExists? check.", "url": "https://github.com/apache/druid/pull/10650#discussion_r541413964", "createdAt": "2020-12-11T23:33:57Z", "author": {"login": "himanshug"}, "path": "server/src/main/java/org/apache/druid/segment/loading/SegmentLoaderLocalCacheManager.java", "diffHunk": "@@ -157,7 +184,15 @@ public File getSegmentFiles(DataSegment segment) throws SegmentLoadingException\n       try {\n         StorageLocation loc = findStorageLocationIfLoaded(segment);\n         String storageDir = DataSegmentPusher.getDefaultStorageDir(segment, false);\n-\n+        if (loc != null) {\n+          File localStorageDir = new File(loc.getPath(), storageDir);\n+          if (checkSegmentFilesIntact(localStorageDir)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a77bf43f5e81b7b10f6aef43f4afa72435ecf480"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjQ1Mjg3", "url": "https://github.com/apache/druid/pull/10650#pullrequestreview-550645287", "createdAt": "2020-12-11T23:34:08Z", "commit": {"oid": "a77bf43f5e81b7b10f6aef43f4afa72435ecf480"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b73d2e780a7981407212d04367b524976afcc394", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/b73d2e780a7981407212d04367b524976afcc394", "committedDate": "2020-12-14T14:50:12Z", "message": "done"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d04d4f7e64d0c59ef5c9ce15698396bdf0f2b9ad", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/d04d4f7e64d0c59ef5c9ce15698396bdf0f2b9ad", "committedDate": "2020-12-14T15:03:44Z", "message": "Merge branch 'master' into historical-load-enhancment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3143, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}