{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTI3MjA1", "number": 10309, "title": "introduce DynamicConfigProvider interface and make kafka consumer props extensible", "bodyText": "supersedes #9693\nDescription\nThis patch really came from need of supplying few kafka consumer properties such as bootstrap.servers using user specific extensible mechanisms similar to PasswordProvider . This patch introduces DynamicConfigProvider as proposed in #9351 except it is not named CredentialsProvider so as to make it useful for dynamic/extensible user configuration in addition to credentials.\nAt some point, fixing #9351 should lead to removal of PasswordProvider and replace all its usage with DynamicConfigProvider\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nDynamicConfigProvider\nKafkaRecordSupplier", "createdAt": "2020-08-22T03:12:47Z", "url": "https://github.com/apache/druid/pull/10309", "merged": true, "mergeCommit": {"oid": "7e9522870f019db444b4b6eb5cb3945d6545cf7a"}, "closed": true, "closedAt": "2020-12-03T00:38:28Z", "author": {"login": "himanshug"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBQhUZAH2gAyNDcxOTI3MjA1OjA4NDIyNTYzOTBkMjFmMWM4Njc4ZmVhM2Y0ZDEwZDU0NzU5MmEwNWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiXE70AH2gAyNDcxOTI3MjA1OjFjZWJlOGJiNTE5MjRhNDA2NjA2NmFiMmI2ZmIxNTU1ODhjMWM0Zjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0842256390d21f1c8678fea3f4d10d547592a05f", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/0842256390d21f1c8678fea3f4d10d547592a05f", "committedDate": "2020-08-22T03:06:02Z", "message": "introduce DynamicConfigProvider interface and make kafka consumer props extensible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc575c338f85a088214888f81b5e63d915243cd9", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/bc575c338f85a088214888f81b5e63d915243cd9", "committedDate": "2020-08-22T06:14:47Z", "message": "fix intellij inspection error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDM0Njk3", "url": "https://github.com/apache/druid/pull/10309#pullrequestreview-473034697", "createdAt": "2020-08-23T19:05:21Z", "commit": {"oid": "bc575c338f85a088214888f81b5e63d915243cd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxOTowNToyMVrOHFPL6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxOTowNToyMVrOHFPL6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1MzczNg==", "bodyText": "should this return Map<String, Object> to support a wider range of possible configuration value types since any extension other than Kafka could use it?", "url": "https://github.com/apache/druid/pull/10309#discussion_r475253736", "createdAt": "2020-08-23T19:05:21Z", "author": {"login": "abhishekagarwal87"}, "path": "core/src/main/java/org/apache/druid/metadata/DynamicConfigProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.metadata;\n+\n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import org.apache.druid.guice.annotations.ExtensionPoint;\n+\n+import java.util.Map;\n+\n+/**\n+ * This is used to get [secure] configuration in various places in an extensible way.\n+ */\n+@ExtensionPoint\n+@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"type\", defaultImpl = MapBasedDynamicConfigProvider.class)\n+@JsonSubTypes(value = {\n+    @JsonSubTypes.Type(name = \"map\", value = MapBasedDynamicConfigProvider.class),\n+})\n+public interface DynamicConfigProvider\n+{\n+  Map<String, String> getConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc575c338f85a088214888f81b5e63d915243cd9"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24fa183c413830a05c9b692526291f0a82a1e2e0", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/24fa183c413830a05c9b692526291f0a82a1e2e0", "committedDate": "2020-08-26T16:56:32Z", "message": "make DynamicConfigProvider generic\n\nChange-Id: I2e3e89f8617b6fe7fc96859deca4011f609dc5a3"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNjIzMDU1", "url": "https://github.com/apache/druid/pull/10309#pullrequestreview-542623055", "createdAt": "2020-12-02T09:04:47Z", "commit": {"oid": "24fa183c413830a05c9b692526291f0a82a1e2e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTAyOTEy", "url": "https://github.com/apache/druid/pull/10309#pullrequestreview-543102912", "createdAt": "2020-12-02T18:03:45Z", "commit": {"oid": "24fa183c413830a05c9b692526291f0a82a1e2e0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODowMzo0NVrOH9nkzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODowMzo0NVrOH9nkzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM3MzU4MQ==", "bodyText": "nit: should we annotate PasswordProvider as @Deprecated in favor of this class?", "url": "https://github.com/apache/druid/pull/10309#discussion_r534373581", "createdAt": "2020-12-02T18:03:45Z", "author": {"login": "jihoonson"}, "path": "core/src/main/java/org/apache/druid/metadata/DynamicConfigProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.metadata;\n+\n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+import org.apache.druid.guice.annotations.ExtensionPoint;\n+\n+import java.util.Map;\n+\n+/**\n+ * This is used to get [secure] configuration in various places in an extensible way.\n+ */\n+@ExtensionPoint\n+@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"type\", defaultImpl = MapStringDynamicConfigProvider.class)\n+@JsonSubTypes(value = {\n+    @JsonSubTypes.Type(name = \"mapString\", value = MapStringDynamicConfigProvider.class),\n+})\n+public interface DynamicConfigProvider<T>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fa183c413830a05c9b692526291f0a82a1e2e0"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cebe8bb51924a4066066ab2b6fb155588c1c4f9", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/1cebe8bb51924a4066066ab2b6fb155588c1c4f9", "committedDate": "2020-12-02T23:23:52Z", "message": "deprecate PasswordProvider"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3458, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}