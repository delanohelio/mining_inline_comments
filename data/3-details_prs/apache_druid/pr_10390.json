{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MTQwNjE2", "number": 10390, "title": "Vectorized variance aggregators", "bodyText": "Description\nVectorize the variance aggregators. Calculating variance of rows in batches is ~ 3-4x faster than calculating the variance one value at a time. This is on top of the other benefits of reading values in batches.\n\n\n\nBenchmark\n(vectorSize)\nMode\nCnt\nScore\nError\nUnits\n\n\n\n\nVarianceBenchmark.collectVarianceInBatch\n128\navgt\n5\n289.814\n\u00b1  32.115\nns/op\n\n\nVarianceBenchmark.collectVarianceOneByOne\n128\navgt\n5\n1000.025\n\u00b1 116.370\nns/op\n\n\nVarianceBenchmark.collectVarianceInBatch\n256\navgt\n5\n619.034\n\u00b1  77.887\nns/op\n\n\nVarianceBenchmark.collectVarianceOneByOne\n256\navgt\n5\n2034.088\n\u00b1 198.090\nns/op\n\n\nVarianceBenchmark.collectVarianceInBatch\n512\navgt\n5\n1262.792\n\u00b1 561.809\nns/op\n\n\nVarianceBenchmark.collectVarianceOneByOne\n512\navgt\n5\n3974.194\n\u00b1 266.338\nns/op\n\n\nVarianceBenchmark.collectVarianceInBatch\n1024\navgt\n5\n2296.927\n\u00b1 142.809\nns/op\n\n\nVarianceBenchmark.collectVarianceOneByOne\n1024\navgt\n5\n7990.919\n\u00b1 485.781\nns/op\n\n\n\n\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-09-13T07:01:10Z", "url": "https://github.com/apache/druid/pull/10390", "merged": true, "mergeCommit": {"oid": "0b4c897fbe046c109c8e63f51221b2955cd5fe39"}, "closed": true, "closedAt": "2020-09-17T22:05:41Z", "author": {"login": "suneet-s"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHQAswgH2gAyNDg2MTQwNjE2OjQ0ODg3NDYzZTFhYzgxMDMxMTkxNjEzMmQ5Y2M1NDdkZTQ5NWIxOWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ4ZPAAFqTQ5MTAyMDg0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44887463e1ac810311916132d9cc547de495b19e", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/44887463e1ac810311916132d9cc547de495b19e", "committedDate": "2020-09-09T17:53:57Z", "message": "wip vectorize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf554ae135f029a8290169188b69cc40cdc2b411", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/bf554ae135f029a8290169188b69cc40cdc2b411", "committedDate": "2020-09-12T00:35:30Z", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aa4d77bfeb7f7b76e4df56dd533d1cca575a4b7", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/7aa4d77bfeb7f7b76e4df56dd533d1cca575a4b7", "committedDate": "2020-09-13T03:57:33Z", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdd1ca15b9800183508963301ab361accce8ac37", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/bdd1ca15b9800183508963301ab361accce8ac37", "committedDate": "2020-09-13T06:56:44Z", "message": "close but not quite"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzEyNDcx", "url": "https://github.com/apache/druid/pull/10390#pullrequestreview-487312471", "createdAt": "2020-09-13T14:31:44Z", "commit": {"oid": "bdd1ca15b9800183508963301ab361accce8ac37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDozMTo0NFrOHQ84dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDozMTo0NFrOHQ84dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNjc1Nw==", "bodyText": "It may be more informative to log type here instead since inputType could be null.", "url": "https://github.com/apache/druid/pull/10390#discussion_r487536757", "createdAt": "2020-09-13T14:31:44Z", "author": {"login": "abhishekagarwal87"}, "path": "extensions-core/stats/src/main/java/org/apache/druid/query/aggregation/variance/VarianceAggregatorFactory.java", "diffHunk": "@@ -166,6 +169,32 @@ public BufferAggregator factorizeBuffered(ColumnSelectorFactory metricFactory)\n     );\n   }\n \n+  @Override\n+  public VectorAggregator factorizeVector(VectorColumnSelectorFactory selectorFactory)\n+  {\n+    final String type = getTypeString(selectorFactory);\n+    if (ValueType.FLOAT.name().equalsIgnoreCase(type)) {\n+      return new VarianceFloatVectorAggregator(selectorFactory.makeValueSelector(fieldName));\n+    } else if (ValueType.DOUBLE.name().equalsIgnoreCase(type)) {\n+      return new VarianceDoubleVectorAggregator(selectorFactory.makeValueSelector(fieldName));\n+    } else if (ValueType.LONG.name().equalsIgnoreCase(type)) {\n+      return new VarianceLongVectorAggregator(selectorFactory.makeValueSelector(fieldName));\n+    } else if (VARIANCE_TYPE_NAME.equalsIgnoreCase(type)) {\n+      return new VarianceObjectVectorAggregator(selectorFactory.makeObjectSelector(fieldName));\n+    }\n+    throw new IAE(\n+        \"Incompatible type for metric[%s], expected a float, double, long, or variance, but got a %s\",\n+        fieldName,\n+        inputType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd1ca15b9800183508963301ab361accce8ac37"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzEyNzI4", "url": "https://github.com/apache/druid/pull/10390#pullrequestreview-487312728", "createdAt": "2020-09-13T14:35:19Z", "commit": {"oid": "bdd1ca15b9800183508963301ab361accce8ac37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDozNToxOVrOHQ855w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QxNDozNToxOVrOHQ855w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNzEyNw==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  VarianceBufferAggregator.writeNVariance(buf, position, count, sum, nvariance);\n          \n          \n            \n                  writeNVariance(buf, position, count, sum, nvariance);", "url": "https://github.com/apache/druid/pull/10390#discussion_r487537127", "createdAt": "2020-09-13T14:35:19Z", "author": {"login": "abhishekagarwal87"}, "path": "extensions-core/stats/src/main/java/org/apache/druid/query/aggregation/variance/VarianceBufferAggregator.java", "diffHunk": "@@ -213,9 +250,7 @@ public void aggregate(ByteBuffer buf, int position)\n       count += holder2.count;\n       sum += holder2.sum;\n \n-      buf.putLong(position, count);\n-      buf.putDouble(position + SUM_OFFSET, sum);\n-      buf.putDouble(position + NVARIANCE_OFFSET, nvariance);\n+      VarianceBufferAggregator.writeNVariance(buf, position, count, sum, nvariance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdd1ca15b9800183508963301ab361accce8ac37"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "033436b253ad6fe03e684b069b0791889f65b1ae", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/033436b253ad6fe03e684b069b0791889f65b1ae", "committedDate": "2020-09-13T20:49:57Z", "message": "faster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "496f5f8431d0353706eb73a8b9ecf6b2a83c197f", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/496f5f8431d0353706eb73a8b9ecf6b2a83c197f", "committedDate": "2020-09-13T23:00:10Z", "message": "unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDg0MTc3", "url": "https://github.com/apache/druid/pull/10390#pullrequestreview-488084177", "createdAt": "2020-09-14T19:39:34Z", "commit": {"oid": "496f5f8431d0353706eb73a8b9ecf6b2a83c197f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxOTozOTozNFrOHRj3pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxOTozOTozNFrOHRj3pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NTUyNw==", "bodyText": "Oh, this isn't actually correct. This method is backed by getType, which means VARIANCE_TYPE_NAME.equalsIgnoreCase(type) will never be true.  I suggest instead of using getTypeString to get the column capabilities, and then this enum can switch on getType directly instead of converting them to and from strings, and if type is ValueType.COMPLEX then to treat it as the object aggregator factory.\nAfter #10277 goes in, then we can check getComplexTypeName matches VARIANCE_TYPE_NAME.", "url": "https://github.com/apache/druid/pull/10390#discussion_r488175527", "createdAt": "2020-09-14T19:39:34Z", "author": {"login": "clintropolis"}, "path": "extensions-core/stats/src/main/java/org/apache/druid/query/aggregation/variance/VarianceAggregatorFactory.java", "diffHunk": "@@ -162,10 +167,36 @@ public BufferAggregator factorizeBuffered(ColumnSelectorFactory metricFactory)\n     throw new IAE(\n         \"Incompatible type for metric[%s], expected a float, double, long, or variance, but got a %s\",\n         fieldName,\n-        inputType\n+        type\n     );\n   }\n \n+  @Override\n+  public VectorAggregator factorizeVector(VectorColumnSelectorFactory selectorFactory)\n+  {\n+    final String type = getTypeString(selectorFactory);\n+    if (ValueType.FLOAT.name().equalsIgnoreCase(type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "496f5f8431d0353706eb73a8b9ecf6b2a83c197f"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1cbdd4acdcb71316b92f431bbf6738d0da8a7b3", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/e1cbdd4acdcb71316b92f431bbf6738d0da8a7b3", "committedDate": "2020-09-15T00:33:09Z", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92ea649242cb5109299c28f0a47ebc797bed39b8", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/92ea649242cb5109299c28f0a47ebc797bed39b8", "committedDate": "2020-09-15T00:33:52Z", "message": "fix complex types for variance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjgxODMz", "url": "https://github.com/apache/druid/pull/10390#pullrequestreview-490281833", "createdAt": "2020-09-17T06:36:05Z", "commit": {"oid": "496f5f8431d0353706eb73a8b9ecf6b2a83c197f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d22795d6ffdd4a7ef3b921baf024173fec278b00", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/d22795d6ffdd4a7ef3b921baf024173fec278b00", "committedDate": "2020-09-17T13:37:02Z", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDIwODQ3", "url": "https://github.com/apache/druid/pull/10390#pullrequestreview-491020847", "createdAt": "2020-09-17T22:04:48Z", "commit": {"oid": "d22795d6ffdd4a7ef3b921baf024173fec278b00"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3632, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}