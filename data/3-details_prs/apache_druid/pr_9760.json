{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjMyMDI4", "number": 9760, "title": "Fix potential NPEs in joins", "bodyText": "intelliJ reported issues with potential NPEs. This was first hit in testing\nwith a filter being pushed down to the left hand table when joining against\nan indexed table.\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.\n\n\nWIP - there are over 600 issues reported within the druid-processing sub-module. This patch cleans up the issues reported under the joins sub-package. This PR still needs to add tests for these issues.", "createdAt": "2020-04-23T22:27:18Z", "url": "https://github.com/apache/druid/pull/9760", "merged": true, "mergeCommit": {"oid": "7510e6e722fa3829d809e7151b870ebcf947194c"}, "closed": true, "closedAt": "2020-04-29T18:03:14Z", "author": {"login": "suneet-s"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcakh7KgH2gAyNDA4MjMyMDI4OmYzM2JiZmM4NWJkMzNkYTA0OGZlMDdkM2JiNGUwOTJkNGJlZWExNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccQDRagH2gAyNDA4MjMyMDI4OjllN2ZmYzA0N2E0MDNkMjQ5MmE4NjhiOTYwYmNiODE0OGViYjFiODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/f33bbfc85bd33da048fe07d3bb4e092d4beea159", "committedDate": "2020-04-23T22:21:45Z", "message": "Fix potential NPEs in joins\n\nintelliJ reported issues with potential NPEs. This was first hit in testing\nwith a filter being pushed down to the left hand table when joining against\nan indexed table."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTIxNTA1", "url": "https://github.com/apache/druid/pull/9760#pullrequestreview-399521505", "createdAt": "2020-04-23T22:29:12Z", "commit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjoyOToxMlrOGK-sTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjoyOToxMlrOGK-sTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE2NjA5Mw==", "bodyText": "should this return 0 if the idLookup does not exist?", "url": "https://github.com/apache/druid/pull/9760#discussion_r414166093", "createdAt": "2020-04-23T22:29:12Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/join/PossiblyNullDimensionSelector.java", "diffHunk": "@@ -138,7 +138,8 @@ public int lookupId(@Nullable String name)\n       // id 0 is always null for this selector impl.\n       return 0;\n     } else {\n-      return baseSelector.idLookup().lookupId(name) + nullAdjustment;\n+      IdLookup idLookup = baseSelector.idLookup();\n+      return (idLookup == null ? 0 : idLookup.lookupId(name)) + nullAdjustment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f9797e4c5d29c54bf098511932ea6e3447978eb", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/9f9797e4c5d29c54bf098511932ea6e3447978eb", "committedDate": "2020-04-24T16:40:20Z", "message": "More null check cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjMwNzEy", "url": "https://github.com/apache/druid/pull/9760#pullrequestreview-399630712", "createdAt": "2020-04-24T04:25:21Z", "commit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNDoyNToyMVrOGLFzkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMjoyOTozMlrOGLrYUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI4MjY0MA==", "bodyText": "When can entry be null?", "url": "https://github.com/apache/druid/pull/9760#discussion_r414282640", "createdAt": "2020-04-24T04:25:21Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/segment/join/lookup/LookupJoinMatcher.java", "diffHunk": "@@ -277,7 +277,7 @@ public void matchRemainder()\n     } else {\n       currentIterator = Iterators.filter(\n           extractor.iterable().iterator(),\n-          entry -> !matchedKeys.contains(entry.getKey())\n+          entry -> entry != null && !matchedKeys.contains(entry.getKey())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5ODI1Nw==", "bodyText": "It should probably fail if idLooup = null.", "url": "https://github.com/apache/druid/pull/9760#discussion_r414898257", "createdAt": "2020-04-24T22:29:32Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/segment/join/PossiblyNullDimensionSelector.java", "diffHunk": "@@ -138,7 +138,8 @@ public int lookupId(@Nullable String name)\n       // id 0 is always null for this selector impl.\n       return 0;\n     } else {\n-      return baseSelector.idLookup().lookupId(name) + nullAdjustment;\n+      IdLookup idLookup = baseSelector.idLookup();\n+      return (idLookup == null ? 0 : idLookup.lookupId(name)) + nullAdjustment;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE2NjA5Mw=="}, "originalCommit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d09a9d474e0f714ac1286309b585357533a39cdb", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/d09a9d474e0f714ac1286309b585357533a39cdb", "committedDate": "2020-04-28T16:23:23Z", "message": "Merge remote-tracking branch 'upstream/master' into join-npe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d1bfed5ffe2ed51a269f5b06cc3e244964862f6", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/5d1bfed5ffe2ed51a269f5b06cc3e244964862f6", "committedDate": "2020-04-28T16:24:22Z", "message": "Optimize filter value rewrite for IndexedTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65375a85f8626d25d170c91fd4bdbe6819fd31e4", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/65375a85f8626d25d170c91fd4bdbe6819fd31e4", "committedDate": "2020-04-28T21:32:59Z", "message": "Add unit tests for LookupJoinable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a3de21a19f43f115c92c385ddb800a914fda4bd", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/9a3de21a19f43f115c92c385ddb800a914fda4bd", "committedDate": "2020-04-28T21:51:16Z", "message": "Add tests for IndexedTableJoinable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79eb23832004e90ed498aa1448d3bc9513cd6b50", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/79eb23832004e90ed498aa1448d3bc9513cd6b50", "committedDate": "2020-04-28T21:53:11Z", "message": "Merge remote-tracking branch 'upstream/master' into join-npe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e18ee5ac39feb028286929dd2d652a2a13b3f3c2", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/e18ee5ac39feb028286929dd2d652a2a13b3f3c2", "committedDate": "2020-04-28T22:47:24Z", "message": "Add non null assert for dimension selector"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjcyMTc5", "url": "https://github.com/apache/druid/pull/9760#pullrequestreview-402272179", "createdAt": "2020-04-28T23:04:24Z", "commit": {"oid": "79eb23832004e90ed498aa1448d3bc9513cd6b50"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzowNDoyNVrOGNqK6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzowOToxM1rOGNqSbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NTU5Mw==", "bodyText": "What's the impact of removing the distinct() call (is it just unnecessary since they're being collected to a set already?)", "url": "https://github.com/apache/druid/pull/9760#discussion_r416975593", "createdAt": "2020-04-28T23:04:25Z", "author": {"login": "jon-wei"}, "path": "processing/src/main/java/org/apache/druid/segment/join/JoinConditionAnalysis.java", "diffHunk": "@@ -79,7 +79,7 @@ private JoinConditionAnalysis(\n                                                                 .allMatch(expr -> expr.isLiteral() && expr.eval(\n                                                                     ExprUtils.nilBindings()).asBoolean());\n     canHashJoin = nonEquiConditions.stream().allMatch(Expr::isLiteral);\n-    rightKeyColumns = getEquiConditions().stream().map(Equality::getRightColumn).distinct().collect(Collectors.toSet());\n+    rightKeyColumns = getEquiConditions().stream().map(Equality::getRightColumn).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79eb23832004e90ed498aa1448d3bc9513cd6b50"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3Njc5Mg==", "bodyText": "A null idLookup there should be an error condition, since the caller should check if idLookup() returned null before calling lookupId(name) on the PossiblyNullDimensionSelector", "url": "https://github.com/apache/druid/pull/9760#discussion_r416976792", "createdAt": "2020-04-28T23:07:26Z", "author": {"login": "jon-wei"}, "path": "processing/src/main/java/org/apache/druid/segment/join/PossiblyNullDimensionSelector.java", "diffHunk": "@@ -138,7 +138,8 @@ public int lookupId(@Nullable String name)\n       // id 0 is always null for this selector impl.\n       return 0;\n     } else {\n-      return baseSelector.idLookup().lookupId(name) + nullAdjustment;\n+      IdLookup idLookup = baseSelector.idLookup();\n+      return (idLookup == null ? 0 : idLookup.lookupId(name)) + nullAdjustment;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE2NjA5Mw=="}, "originalCommit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3NzUxOQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/druid/pull/9760#discussion_r416977519", "createdAt": "2020-04-28T23:09:13Z", "author": {"login": "jon-wei"}, "path": "processing/src/main/java/org/apache/druid/segment/join/lookup/LookupJoinable.java", "diffHunk": "@@ -95,18 +96,23 @@ public JoinMatcher makeJoinMatcher(\n       boolean allowNonKeyColumnSearch\n   )\n   {\n+    if (!ALL_COLUMNS.contains(searchColumnName) || !ALL_COLUMNS.contains(retrievalColumnName)) {\n+      return ImmutableSet.of();\n+    }\n     Set<String> correlatedValues;\n     if (LookupColumnSelectorFactory.KEY_COLUMN.equals(searchColumnName)) {\n       if (LookupColumnSelectorFactory.KEY_COLUMN.equals(retrievalColumnName)) {\n         correlatedValues = ImmutableSet.of(searchColumnValue);\n       } else {\n-        correlatedValues = ImmutableSet.of(extractor.apply(searchColumnName));\n+        // This should not happen in practice because the column to be joined on must be a key.\n+        correlatedValues = Collections.singleton(extractor.apply(searchColumnValue));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79eb23832004e90ed498aa1448d3bc9513cd6b50"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjg1NTA3", "url": "https://github.com/apache/druid/pull/9760#pullrequestreview-402285507", "createdAt": "2020-04-28T23:39:32Z", "commit": {"oid": "79eb23832004e90ed498aa1448d3bc9513cd6b50"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjgzMjA5", "url": "https://github.com/apache/druid/pull/9760#pullrequestreview-402283209", "createdAt": "2020-04-28T23:33:11Z", "commit": {"oid": "79eb23832004e90ed498aa1448d3bc9513cd6b50"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzozMzoxMVrOGNqzTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzo0Mjo1OFrOGNrANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NTkzNA==", "bodyText": "Yeah. It also doesn't seem reasonable that a \"row\" can be null. I think it's a false warning because of the Predicate interface of Guava. It would be better to suppress warning instead of checking null.", "url": "https://github.com/apache/druid/pull/9760#discussion_r416985934", "createdAt": "2020-04-28T23:33:11Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/segment/join/lookup/LookupJoinMatcher.java", "diffHunk": "@@ -277,7 +277,7 @@ public void matchRemainder()\n     } else {\n       currentIterator = Iterators.filter(\n           extractor.iterable().iterator(),\n-          entry -> !matchedKeys.contains(entry.getKey())\n+          entry -> entry != null && !matchedKeys.contains(entry.getKey())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI4MjY0MA=="}, "originalCommit": {"oid": "f33bbfc85bd33da048fe07d3bb4e092d4beea159"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4OTIzNw==", "bodyText": "Does all callers need to check the returned eval? Seems there are a couple of missing places.", "url": "https://github.com/apache/druid/pull/9760#discussion_r416989237", "createdAt": "2020-04-28T23:42:58Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/segment/virtual/MultiValueExpressionDimensionSelector.java", "diffHunk": "@@ -50,11 +50,13 @@ public MultiValueExpressionDimensionSelector(ColumnValueSelector<ExprEval> baseS\n     this.baseSelector = baseSelector;\n   }\n \n+  @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79eb23832004e90ed498aa1448d3bc9513cd6b50"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94507aaca0812b01b730acd099b6fe0e435b7205", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/94507aaca0812b01b730acd099b6fe0e435b7205", "committedDate": "2020-04-28T23:54:47Z", "message": "Supress null warning in LookupJoinMatcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e7ffc047a403d2492a868b960bcb8148ebb1b81", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/9e7ffc047a403d2492a868b960bcb8148ebb1b81", "committedDate": "2020-04-29T03:38:01Z", "message": "remove some null checks on hot path"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2578, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}