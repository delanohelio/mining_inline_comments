{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjg0NTAz", "number": 10631, "title": "Fixes and tests related to the Indexer process.", "bodyText": "Three bugs fixed:\n\n\nIndexers would not announce themselves as segment servers if they\ndid not have storage locations defined. This used to work, but was\nbroken in #9971. Fixed this by adding an \"isSegmentServer\" method\nto ServerType and updating SegmentLoadDropHandler to always announce\nif this method returns true.\n\n\nCertain batch task types were written in a way that assumed \"isReady\"\nwould be called before \"run\", which is not guaranteed. In particular,\nthey relied on it in order to initialize \"taskLockHelper\". Fixed this\nby updating AbstractBatchIndexTask to ensure \"isReady\" is called\nbefore \"run\" for these tasks.\n\n\nUnifiedIndexerAppenderatorsManager did not properly handle join\ndatasources. Introduced DataSourceAnalysis in order to fix this.\n\n\nTest changes:\n\n\nAdd a new \"docker-compose.cli-indexer.yml\" config that spins up an\nIndexer instead of a MiddleManager.\n\n\nIntroduce a \"USE_INDEXER\" environment variable that determines if\ndocker-compose will start up an Indexer or a MiddleManager.\n\n\nDuplicate all the jdk8 tests and run them in both MiddleManager and\nIndexer mode.\n\n\nVarious adjustments to encourage fail-fast errors in the Docker\nbuild scripts.\n\n\nVarious adjustments to speed up integration tests and reduce memory\nusage.\n\n\nAdd another Mac-specific approach to determining a machine's own IP.\nThis was useful on my development machine.\n\n\nUpdate segment-count check in ITCompactionTaskTest to eliminate a\nrace condition (it was looking for 6 segments, which only exist\ntogether briefly, until the older 4 are marked unused).\n\n\nJavadoc updates:\n\n\nAbstractBatchIndexTask: Added javadocs to determineLockGranularityXXX\nthat make it clear when taskLockHelper will be initialized as a side\neffect. (Related to the second bug above.)\n\n\nTask: Clarified that \"isReady\" is not guaranteed to be called before\n\"run\". It was already implied, but now it's explicit.\n\n\nZkCoordinator: Clarified deprecation message.\n\n\nDataSegmentServerAnnouncer: Clarified deprecation message.", "createdAt": "2020-12-04T04:53:39Z", "url": "https://github.com/apache/druid/pull/10631", "merged": true, "mergeCommit": {"oid": "96a387d972ba69ab92f95ebf75bfb03cd9bb5807"}, "closed": true, "closedAt": "2020-12-09T00:02:27Z", "author": {"login": "gianm"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiwkewgBqjQwNzEwMTMzMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkNB3pgH2gAyNTMyMjg0NTAzOmI4NGNlMmIzZWJkMjMxOWMzYjgwNGFiNTBjNDVmMGEyZjNlMGM1Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/7ae9e3c5ae125499abb1683d13bfc17b137818fa", "committedDate": "2020-12-04T05:15:48Z", "message": "Fixes and tests related to the Indexer process.\n\nThree bugs fixed:\n\n1) Indexers would not announce themselves as segment servers if they\n   did not have storage locations defined. This used to work, but was\n   broken in #9971. Fixed this by adding an \"isSegmentServer\" method\n   to ServerType and updating SegmentLoadDropHandler to always announce\n   if this method returns true.\n\n2) Certain batch task types were written in a way that assumed \"isReady\"\n   would be called before \"run\", which is not guaranteed. In particular,\n   they relied on it in order to initialize \"taskLockHelper\". Fixed this\n   by updating AbstractBatchIndexTask to ensure \"isReady\" is called\n   before \"run\" for these tasks.\n\n3) UnifiedIndexerAppenderatorsManager did not properly handle complex\n   datasources. Introduced DataSourceAnalysis in order to fix this.\n\nTest changes:\n\n1) Add a new \"docker-compose.cli-indexer.yml\" config that spins up an\n   Indexer instead of a MiddleManager.\n\n2) Introduce a \"USE_INDEXER\" environment variable that determines if\n   docker-compose will start up an Indexer or a MiddleManager.\n\n3) Duplicate all the jdk8 tests and run them in both MiddleManager and\n   Indexer mode.\n\n4) Various adjustments to encourage fail-fast errors in the Docker\n   build scripts.\n\n5) Various adjustments to speed up integration tests and reduce memory\n   usage.\n\n6) Add another Mac-specific approach to determining a machine's own IP.\n   This was useful on my development machine.\n\n7) Update segment-count check in ITCompactionTaskTest to eliminate a\n   race condition (it was looking for 6 segments, which only exist\n   together briefly, until the older 4 are marked unused).\n\nJavadoc updates:\n\n1) AbstractBatchIndexTask: Added javadocs to determineLockGranularityXXX\n   that make it clear when taskLockHelper will be initialized as a side\n   effect. (Related to the second bug above.)\n\n2) Task: Clarified that \"isReady\" is not guaranteed to be called before\n   \"run\". It was already implied, but now it's explicit.\n\n3) ZkCoordinator: Clarified deprecation message.\n\n4) DataSegmentServerAnnouncer: Clarified deprecation message."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/7ae9e3c5ae125499abb1683d13bfc17b137818fa", "committedDate": "2020-12-04T05:15:48Z", "message": "Fixes and tests related to the Indexer process.\n\nThree bugs fixed:\n\n1) Indexers would not announce themselves as segment servers if they\n   did not have storage locations defined. This used to work, but was\n   broken in #9971. Fixed this by adding an \"isSegmentServer\" method\n   to ServerType and updating SegmentLoadDropHandler to always announce\n   if this method returns true.\n\n2) Certain batch task types were written in a way that assumed \"isReady\"\n   would be called before \"run\", which is not guaranteed. In particular,\n   they relied on it in order to initialize \"taskLockHelper\". Fixed this\n   by updating AbstractBatchIndexTask to ensure \"isReady\" is called\n   before \"run\" for these tasks.\n\n3) UnifiedIndexerAppenderatorsManager did not properly handle complex\n   datasources. Introduced DataSourceAnalysis in order to fix this.\n\nTest changes:\n\n1) Add a new \"docker-compose.cli-indexer.yml\" config that spins up an\n   Indexer instead of a MiddleManager.\n\n2) Introduce a \"USE_INDEXER\" environment variable that determines if\n   docker-compose will start up an Indexer or a MiddleManager.\n\n3) Duplicate all the jdk8 tests and run them in both MiddleManager and\n   Indexer mode.\n\n4) Various adjustments to encourage fail-fast errors in the Docker\n   build scripts.\n\n5) Various adjustments to speed up integration tests and reduce memory\n   usage.\n\n6) Add another Mac-specific approach to determining a machine's own IP.\n   This was useful on my development machine.\n\n7) Update segment-count check in ITCompactionTaskTest to eliminate a\n   race condition (it was looking for 6 segments, which only exist\n   together briefly, until the older 4 are marked unused).\n\nJavadoc updates:\n\n1) AbstractBatchIndexTask: Added javadocs to determineLockGranularityXXX\n   that make it clear when taskLockHelper will be initialized as a side\n   effect. (Related to the second bug above.)\n\n2) Task: Clarified that \"isReady\" is not guaranteed to be called before\n   \"run\". It was already implied, but now it's explicit.\n\n3) ZkCoordinator: Clarified deprecation message.\n\n4) DataSegmentServerAnnouncer: Clarified deprecation message."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjY3MjQ1", "url": "https://github.com/apache/druid/pull/10631#pullrequestreview-544667245", "createdAt": "2020-12-04T05:30:22Z", "commit": {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNTozMDoyMlrOH_BeoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNTo0NDoyNVrOH_Bv1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0NjU2MA==", "bodyText": "Hmm, how can this happen? I thought Task.isReady() is always called before Task.run() because a task can be scheduled only when Task.isReady() returns true. Task.run() will be called after the task is scheduled in some indexer or middleManager.", "url": "https://github.com/apache/druid/pull/10631#discussion_r535846560", "createdAt": "2020-12-04T05:30:22Z", "author": {"login": "jihoonson"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/Task.java", "diffHunk": "@@ -160,8 +160,11 @@ default int getPriority()\n   /**\n    * Execute preflight actions for a task. This can be used to acquire locks, check preconditions, and so on. The\n    * actions must be idempotent, since this method may be executed multiple times. This typically runs on the\n-   * coordinator. If this method throws an exception, the task should be considered a failure.\n-   * <p/>\n+   * Overlord. If this method throws an exception, the task should be considered a failure.\n+   *\n+   * This method will not necessarily be executed before {@link #run(TaskToolbox)}, since this task readiness check\n+   * may be done on a different machine from the one that actually runs the task.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg1MDk2NQ==", "bodyText": "Is this too aggressive? \ud83d\ude05", "url": "https://github.com/apache/druid/pull/10631#discussion_r535850965", "createdAt": "2020-12-04T05:44:25Z", "author": {"login": "jihoonson"}, "path": "integration-tests/docker/environment-configs/coordinator", "diffHunk": "@@ -32,7 +32,11 @@ druid_coordinator_startDelay=PT5S\n druid_manager_lookups_hostUpdateTimeout=PT30S\n druid_manager_lookups_period=10000\n druid_manager_lookups_threadPoolSize=2\n+druid_manager_config_pollDuration=PT10S\n+druid_manager_rules_pollDuration=PT10S\n+druid_manager_segments_pollDuration=PT2S\n druid_auth_basic_common_cacheDirectory=/tmp/authCache/coordinator\n druid_auth_unsecuredPaths=[\"/druid/coordinator/v1/loadqueue\"]\n druid_server_https_crlPath=/tls/revocations.crl\n-druid_coordinator_period_indexingPeriod=PT180000S\n\\ No newline at end of file\n+druid_coordinator_period_indexingPeriod=PT180000S\n+druid_coordinator_period=PT1S", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Njg2NTk2", "url": "https://github.com/apache/druid/pull/10631#pullrequestreview-544686596", "createdAt": "2020-12-04T06:28:06Z", "commit": {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoyODowNlrOH_CrPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoyODowNlrOH_CrPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2NjE3Mw==", "bodyText": "Oh, I see. I think it happens only in indexers because peon calls isReady() before it runs its task.", "url": "https://github.com/apache/druid/pull/10631#discussion_r535866173", "createdAt": "2020-12-04T06:28:06Z", "author": {"login": "jihoonson"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/Task.java", "diffHunk": "@@ -160,8 +160,11 @@ default int getPriority()\n   /**\n    * Execute preflight actions for a task. This can be used to acquire locks, check preconditions, and so on. The\n    * actions must be idempotent, since this method may be executed multiple times. This typically runs on the\n-   * coordinator. If this method throws an exception, the task should be considered a failure.\n-   * <p/>\n+   * Overlord. If this method throws an exception, the task should be considered a failure.\n+   *\n+   * This method will not necessarily be executed before {@link #run(TaskToolbox)}, since this task readiness check\n+   * may be done on a different machine from the one that actually runs the task.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg0NjU2MA=="}, "originalCommit": {"oid": "7ae9e3c5ae125499abb1683d13bfc17b137818fa"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fafa6477ad5effc5886859352ae0d33186e42ed7", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/fafa6477ad5effc5886859352ae0d33186e42ed7", "committedDate": "2020-12-04T10:18:49Z", "message": "Merge branch 'master' into fix-indexer-stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd91645540c9557fe4ea7bd44b5a3ddcf31499e", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/6dd91645540c9557fe4ea7bd44b5a3ddcf31499e", "committedDate": "2020-12-04T10:28:20Z", "message": "Fix stop_cluster script."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b16ec719dc0db44ba8c0ca2117bef1406f5eb968", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/b16ec719dc0db44ba8c0ca2117bef1406f5eb968", "committedDate": "2020-12-04T16:19:46Z", "message": "Fix sanity check in script."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b47693cc5b3002261ce246132f78c245fba9c98a", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/b47693cc5b3002261ce246132f78c245fba9c98a", "committedDate": "2020-12-05T22:00:40Z", "message": "Fix hashbang lines."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df43ebb6c23c52e5d8abf6ad101b6c5cd4edb3f5", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/df43ebb6c23c52e5d8abf6ad101b6c5cd4edb3f5", "committedDate": "2020-12-06T01:26:52Z", "message": "Merge branch 'master' into fix-indexer-stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df57231b53da429beaae16c127ffbf360bc85ebe", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/df57231b53da429beaae16c127ffbf360bc85ebe", "committedDate": "2020-12-07T03:27:13Z", "message": "Test and doc adjustments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7e85c619acede1596b424444364a7bdf2b611e6", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/c7e85c619acede1596b424444364a7bdf2b611e6", "committedDate": "2020-12-07T06:39:01Z", "message": "Additional tests, and adjustments for tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcda0cc5a2ed05f3ffc084edb0594b076bf8dec5", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/bcda0cc5a2ed05f3ffc084edb0594b076bf8dec5", "committedDate": "2020-12-07T06:39:18Z", "message": "Merge branch 'master' into fix-indexer-stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12bdb4a2274ce9c8665097ca72596190791d6057", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/12bdb4a2274ce9c8665097ca72596190791d6057", "committedDate": "2020-12-07T18:40:53Z", "message": "Split ITs back out."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5154b69a467756310f9ad6c2a3d36e86bae49266", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/5154b69a467756310f9ad6c2a3d36e86bae49266", "committedDate": "2020-12-07T18:46:40Z", "message": "Revert change to druid_coordinator_period_indexingPeriod."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5804ab831a6b2e4186d8db9a73f0bd4f9c5498ca", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/5804ab831a6b2e4186d8db9a73f0bd4f9c5498ca", "committedDate": "2020-12-07T19:38:52Z", "message": "Set Indexer capacity to match MM."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f64c5c863700f2d4a1604f7c7ece2c7378ec577", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/9f64c5c863700f2d4a1604f7c7ece2c7378ec577", "committedDate": "2020-12-07T19:39:04Z", "message": "Merge branch 'master' into fix-indexer-stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8a26c104b5984b27a6e9a44198b7f4515c85ffa", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/c8a26c104b5984b27a6e9a44198b7f4515c85ffa", "committedDate": "2020-12-08T00:54:43Z", "message": "Bump up Historical memory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be5453b2b16bd47cbdddea0a04ed0853d859bf7a", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/be5453b2b16bd47cbdddea0a04ed0853d859bf7a", "committedDate": "2020-12-08T00:55:42Z", "message": "Bump down coordinator, overlord memory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f21e20a46dcf23bfc31be468325338a68ad6a733", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/f21e20a46dcf23bfc31be468325338a68ad6a733", "committedDate": "2020-12-08T01:13:57Z", "message": "Bump up Broker memory."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b84ce2b3ebd2319c3b804ab50c45f0a2f3e0c539", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/b84ce2b3ebd2319c3b804ab50c45f0a2f3e0c539", "committedDate": "2020-12-08T16:49:19Z", "message": "Merge branch 'master' into fix-indexer-stuff"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3126, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}