{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyODY1MzQx", "number": 10592, "title": "Allow missing intervals for Parallel task with hash/range partitioning", "bodyText": "Description\nThis PR allows Parallel task to run without explicit intervals in granularitySpec. If intervals are missing, the parallel task executes an extra step for input sampling which collects the intervals to index.\nThis PR additionally fixes a bug when numShards is missing in hash partitioning. When numShards is missing, the parallel task computes it by scanning the whole input. However, the computed numShards was ignored when it's serialized into JSON. To fix it, this PR adds another field intervalToNumShardsOverride which stores the computed numShards per interval so that we can handle data skew well across intervals.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-11-18T02:26:16Z", "url": "https://github.com/apache/druid/pull/10592", "merged": true, "mergeCommit": {"oid": "7462b0b953e87890a683a0bee7b7480465450342"}, "closed": true, "closedAt": "2020-11-25T22:50:23Z", "author": {"login": "jihoonson"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddknEtAH2gAyNTIyODY1MzQxOjViMzFiYTRjOWI2NzA0YWQwMmY2NmM2Y2E3YTJjNGJhZGUxMjBiZWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfdlI5AFqTUzNjkxOTk3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b31ba4c9b6704ad02f66c6ca7a2c4bade120beb", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/5b31ba4c9b6704ad02f66c6ca7a2c4bade120beb", "committedDate": "2020-11-18T02:20:18Z", "message": "Allow missing intervals for Parallel task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff116a436d03ea5edccb6c1777e1c8121f51cc92", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/ff116a436d03ea5edccb6c1777e1c8121f51cc92", "committedDate": "2020-11-18T02:34:19Z", "message": "fix row filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMDgzMTI4", "url": "https://github.com/apache/druid/pull/10592#pullrequestreview-533083128", "createdAt": "2020-11-18T03:45:03Z", "commit": {"oid": "ff116a436d03ea5edccb6c1777e1c8121f51cc92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bef2ff2a03384f77d312ff8a13cf7f98da6f3b0", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/9bef2ff2a03384f77d312ff8a13cf7f98da6f3b0", "committedDate": "2020-11-18T05:19:49Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTc4MzAz", "url": "https://github.com/apache/druid/pull/10592#pullrequestreview-533178303", "createdAt": "2020-11-18T07:55:02Z", "commit": {"oid": "9bef2ff2a03384f77d312ff8a13cf7f98da6f3b0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNzo1NTowM1rOH1g9ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODowMToyMVrOH1hKqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3NjYzOA==", "bodyText": "this log statement needs a change now", "url": "https://github.com/apache/druid/pull/10592#discussion_r525876638", "createdAt": "2020-11-18T07:55:03Z", "author": {"login": "abhishekagarwal87"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java", "diffHunk": "@@ -541,9 +561,12 @@ private TaskStatus runHashPartitionMultiPhaseParallel(TaskToolbox toolbox) throw\n       );\n     }\n \n-    final Integer numShardsOverride;\n+    final Map<Interval, Integer> intervalToNumShards;\n     HashedPartitionsSpec partitionsSpec = (HashedPartitionsSpec) ingestionSchema.getTuningConfig().getPartitionsSpec();\n-    if (partitionsSpec.getNumShards() == null) {\n+    final boolean needsInputSampling =\n+        partitionsSpec.getNumShards() == null\n+        || ingestionSchemaToUse.getDataSchema().getGranularitySpec().inputIntervals().isEmpty();\n+    if (needsInputSampling) {\n       // 0. need to determine numShards by scanning the data\n       LOG.info(\"numShards is unspecified, beginning %s phase.\", PartialDimensionCardinalityTask.TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bef2ff2a03384f77d312ff8a13cf7f98da6f3b0"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3OTk3Ng==", "bodyText": "is there an equivalent info being logged somewhere now?", "url": "https://github.com/apache/druid/pull/10592#discussion_r525879976", "createdAt": "2020-11-18T08:01:21Z", "author": {"login": "abhishekagarwal87"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java", "diffHunk": "@@ -552,38 +575,50 @@ private TaskStatus runHashPartitionMultiPhaseParallel(TaskToolbox toolbox) throw\n               this::createPartialDimensionCardinalityRunner\n           );\n \n-      if (cardinalityRunner == null) {\n-        throw new ISE(\"Could not create cardinality runner for hash partitioning.\");\n-      }\n-\n       state = runNextPhase(cardinalityRunner);\n       if (state.isFailure()) {\n         return TaskStatus.failure(getId());\n       }\n \n-      int effectiveMaxRowsPerSegment = partitionsSpec.getMaxRowsPerSegment() == null\n-                                       ? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT\n-                                       : partitionsSpec.getMaxRowsPerSegment();\n-      LOG.info(\"effective maxRowsPerSegment is: \" + effectiveMaxRowsPerSegment);\n+      if (cardinalityRunner.getReports().isEmpty()) {\n+        String msg = \"No valid rows for hash partitioning.\"\n+                     + \" All rows may have invalid timestamps or have been filtered out.\";\n+        LOG.warn(msg);\n+        return TaskStatus.success(getId(), msg);\n+      }\n+\n+      if (partitionsSpec.getNumShards() == null) {\n+        int effectiveMaxRowsPerSegment = partitionsSpec.getMaxRowsPerSegment() == null\n+                                         ? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT\n+                                         : partitionsSpec.getMaxRowsPerSegment();\n+        LOG.info(\"effective maxRowsPerSegment is: \" + effectiveMaxRowsPerSegment);\n \n-      if (cardinalityRunner.getReports() == null) {\n-        throw new ISE(\"Could not determine cardinalities for hash partitioning.\");\n+        intervalToNumShards = determineNumShardsFromCardinalityReport(\n+            cardinalityRunner.getReports().values(),\n+            effectiveMaxRowsPerSegment\n+        );\n+      } else {\n+        intervalToNumShards = CollectionUtils.mapValues(\n+            mergeCardinalityReports(cardinalityRunner.getReports().values()),\n+            k -> partitionsSpec.getNumShards()\n+        );\n       }\n-      numShardsOverride = determineNumShardsFromCardinalityReport(\n-          cardinalityRunner.getReports().values(),\n-          effectiveMaxRowsPerSegment\n-      );\n \n-      LOG.info(\"Automatically determined numShards: \" + numShardsOverride);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bef2ff2a03384f77d312ff8a13cf7f98da6f3b0"}, "originalPosition": 154}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec3b49411828db74c1db36eaa719af8335138bf3", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/ec3b49411828db74c1db36eaa719af8335138bf3", "committedDate": "2020-11-18T19:34:57Z", "message": "fix log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTE5OTc0", "url": "https://github.com/apache/druid/pull/10592#pullrequestreview-536919974", "createdAt": "2020-11-23T23:16:42Z", "commit": {"oid": "ec3b49411828db74c1db36eaa719af8335138bf3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3078, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}