{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NDIzMTg2", "number": 10714, "title": "use actual dataInterval in cache key", "bodyText": "Description\nCurrently, the interval used in CachingQueryRunner by CacheUtil.computeSegmentCacheKey() is the intersection of query interval and Segment interval from segment identifier.\nIt's better to use the intersection of query interval and the actual dataInterval of the segment(the min/max data time in the segment, not the interval in the segment identifier).\nFor example, when the segment granularity is DAY and there are many partitions built by realtime tasks :\ndatasource_name1_2020-12-28T00:00:00.000Z_2020-12-29T00:00:00.000Z_2020-12-28T00:00:00.505Z:\ndatasource_name1_2020-12-28T00:00:00.000Z_2020-12-29T00:00:00.000Z_2020-12-28T00:00:00.505Z_1:\ndatasource_name1_2020-12-28T00:00:00.000Z_2020-12-29T00:00:00.000Z_2020-12-28T00:00:00.505Z_2:\nThe actual min/max time in these segments are:\n00:09:00 ~ 00:37:22\n01:11:34 ~ 01:45:43\n02:04:22 ~ 02:54:12\nCurrently, the first query with query interval 00:00:00/02:14:19 populates a cache with interval 00:00:00/02:14:19 in cache key.\nthe next query with query interval 00:00:00/02:15:19 can't reuse the cache populated by the first query, as we know the actual result is the same, due to '00:00:00/02:14:19' used in the cache key.\nFor this case, the interval used in cache key should be changed to 00:09:00/00:37:22, 01:11:34/01:45:43, 02:04:22/02:14:19\nThis change will not break any contract, because of Interval actualInterval = interval.overlap(dataInterval); in makeCursors() in IncrementalIndexStorageAdapter and QueryableIndexStorageAdapter\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\nKey changed/added classes in this PR\n\nCachingQueryRunner", "createdAt": "2020-12-29T10:22:04Z", "url": "https://github.com/apache/druid/pull/10714", "merged": true, "mergeCommit": {"oid": "4437c6af60316e86980d3ed75ca5fa7816f93697"}, "closed": true, "closedAt": "2021-01-14T02:31:36Z", "author": {"login": "kaijianding"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdq3_nTgH2gAyNTQ2NDIzMTg2Ojg4MzZjOWY0NzhlYjZmNDlkYTNhNWVmNTljN2Q4ZDQ0ZmUzMGVlM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdv67z9AFqTU2NzgwOTAxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8836c9f478eb6f49da3a5ef59c7d8d44fe30ee3d", "author": {"user": {"login": "kaijianding", "name": null}}, "url": "https://github.com/apache/druid/commit/8836c9f478eb6f49da3a5ef59c7d8d44fe30ee3d", "committedDate": "2020-12-29T10:16:19Z", "message": "use actual dataInterval in cache key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27f50085539debe32bfdce0141aa6487ab736ba2", "author": {"user": {"login": "kaijianding", "name": null}}, "url": "https://github.com/apache/druid/commit/27f50085539debe32bfdce0141aa6487ab736ba2", "committedDate": "2020-12-30T13:05:10Z", "message": "fix ut fail"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "27f50085539debe32bfdce0141aa6487ab736ba2", "author": {"user": {"login": "kaijianding", "name": null}}, "url": "https://github.com/apache/druid/commit/27f50085539debe32bfdce0141aa6487ab736ba2", "committedDate": "2020-12-30T13:05:10Z", "message": "fix ut fail"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MDE4MjAz", "url": "https://github.com/apache/druid/pull/10714#pullrequestreview-564018203", "createdAt": "2021-01-08T05:53:15Z", "commit": {"oid": "27f50085539debe32bfdce0141aa6487ab736ba2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNTo1MzoxNVrOIQGkEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNTo1MzoxNVrOIQGkEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1NTY2Nw==", "bodyText": "I think there's an off by one here: storageAdapter.getMaxTime() is the highest timestamp in the segment, but the end of actualDataInterval is exclusive, and so it doesn't include that highest timestamp. I think doing segmentMaxTime.plus(1) will fix it. There's a similar issue in ServerManager.", "url": "https://github.com/apache/druid/pull/10714#discussion_r553755667", "createdAt": "2021-01-08T05:53:15Z", "author": {"login": "gianm"}, "path": "server/src/main/java/org/apache/druid/segment/realtime/appenderator/SinkQuerySegmentWalker.java", "diffHunk": "@@ -230,10 +232,15 @@ public SinkQuerySegmentWalker(\n                       // 1) Only use caching if data is immutable\n                       // 2) Hydrants are not the same between replicas, make sure cache is local\n                       if (hydrantDefinitelySwapped && cache.isLocal()) {\n+                        StorageAdapter storageAdapter = segmentAndCloseable.lhs.asStorageAdapter();\n+                        long segmentMinTime = storageAdapter.getMinTime().getMillis();\n+                        long segmentMaxTime = storageAdapter.getMaxTime().getMillis();\n+                        Interval actualDataInterval = Intervals.utc(segmentMinTime, segmentMaxTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27f50085539debe32bfdce0141aa6487ab736ba2"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fee9798ca623c5edb2391b35effd98c382227a4c", "author": {"user": {"login": "kaijianding", "name": null}}, "url": "https://github.com/apache/druid/commit/fee9798ca623c5edb2391b35effd98c382227a4c", "committedDate": "2021-01-13T09:13:26Z", "message": "fix segmentMaxTime exclusive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3ODA5MDEy", "url": "https://github.com/apache/druid/pull/10714#pullrequestreview-567809012", "createdAt": "2021-01-14T02:31:30Z", "commit": {"oid": "fee9798ca623c5edb2391b35effd98c382227a4c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3228, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}