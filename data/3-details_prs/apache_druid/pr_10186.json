{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MjQ1MjAw", "number": 10186, "title": "Add integration tests for Appends", "bodyText": "Add integration tests for Appends\nDescription\nThe native batch ingestion currently allows appending dynamically partitioned segments regardless of the original partitioning scheme. The new integration tests include the followings:\n\nAppend dynamically-partitioned segments to a dynamically-partitioned datasource\nAppend dynamically-partitioned segments to a hash-partitioned datasource. Compact hash-partitioned segments and dynamically-partitioned segments after append.\nAppend dynamically-partitioned segments to a range-partitioned datasource. Compact range-partitioned segments and dynamically-partitioned segments after append.\n\nSome notes on the tests:\n\nNote that the intervals of the appended segment overlap with those of original segments. This is done by using the same data for initial write and append.\nBatch append itself is pretty well covered by unit tests (the unit tests mimic the distributed ingestion using multi-threaded ingestion testing framework (see AbstractParallelIndexSupervisorTaskTest). The integration tests focus on missing parts such as querying segments of mixed partitioning schemes.\n\nNote: This PR also updates Integration Test's areSegmentsLoaded/getLoadStatus to use the new API to verify a datasource has the latest ingested data (#9965) instead of a Cluster wide loadstatus API. There are two benefits. First, we are now able to query status of a specific datasource, allowing multiple integration tests to be run concurrently. Second, we are able to take advantage of the new API's forceMetadataRefresh to make sure that we get latest published segment information (and compare/verify against the latest published segment information). This allows us to verify the segment count after the task finished. (Note that because of this, ITAutoCompactionTest.java test was also updated to verify segment count of only used and non-overshadowed segments).\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-07-15T05:02:31Z", "url": "https://github.com/apache/druid/pull/10186", "merged": true, "mergeCommit": {"oid": "0cabc53bd56b49ef32e63ff536d0d193c9144baf"}, "closed": true, "closedAt": "2020-07-20T20:43:13Z", "author": {"login": "maytasm"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc08jrUgH2gAyNDQ5MjQ1MjAwOjAxZjA1NGE0YmZkODZjZTIzZWE0ZjNhMGJhZmNiMGI4NzdiYzgzYTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc23gUGAFqTQ1MTkyODQwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01f054a4bfd86ce23ea4f3a0bafcb0b877bc83a4", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/01f054a4bfd86ce23ea4f3a0bafcb0b877bc83a4", "committedDate": "2020-07-14T21:03:25Z", "message": "append test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8c8df8f9f0ac9dc4ee31ac02a3d40b635aca56f", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/f8c8df8f9f0ac9dc4ee31ac02a3d40b635aca56f", "committedDate": "2020-07-15T00:37:53Z", "message": "add append IT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f30c98792852d0a32df7b7b4861d8a9f5a69111", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/9f30c98792852d0a32df7b7b4861d8a9f5a69111", "committedDate": "2020-07-15T00:39:55Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed74f8388bb58efad9fc156a08f71d6d847cdfa0", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/ed74f8388bb58efad9fc156a08f71d6d847cdfa0", "committedDate": "2020-07-15T05:00:01Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3c7ead602bea2e276119e7bf9d46d6f608457aa", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/f3c7ead602bea2e276119e7bf9d46d6f608457aa", "committedDate": "2020-07-17T00:53:26Z", "message": "Remove parallel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdf7659467e7b88afb5c6f8034fd63221a3deffe", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/bdf7659467e7b88afb5c6f8034fd63221a3deffe", "committedDate": "2020-07-17T00:55:09Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba4f75a6f09cb2e5b57efdd3ab25abc3200d8717", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/ba4f75a6f09cb2e5b57efdd3ab25abc3200d8717", "committedDate": "2020-07-17T06:32:46Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc878da5e433ce05efdbcf9bfd1b9f60575d763e", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/fc878da5e433ce05efdbcf9bfd1b9f60575d763e", "committedDate": "2020-07-17T08:37:43Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODA5NzA3", "url": "https://github.com/apache/druid/pull/10186#pullrequestreview-450809707", "createdAt": "2020-07-17T16:48:23Z", "commit": {"oid": "fc878da5e433ce05efdbcf9bfd1b9f60575d763e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNjo0ODoyM1rOGzaC-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNjo1MDowNVrOGzaGGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NzMwNA==", "bodyText": "Maybe non_perfect_rollup is a better name than without_roll_up.", "url": "https://github.com/apache/druid/pull/10186#discussion_r456557304", "createdAt": "2020-07-17T16:48:23Z", "author": {"login": "jihoonson"}, "path": "integration-tests/src/test/java/org/apache/druid/tests/indexer/ITAppendBatchIndexTest.java", "diffHunk": "@@ -0,0 +1,245 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.tests.indexer;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import org.apache.druid.indexer.partitions.DynamicPartitionsSpec;\n+import org.apache.druid.indexer.partitions.HashedPartitionsSpec;\n+import org.apache.druid.indexer.partitions.PartitionsSpec;\n+import org.apache.druid.indexer.partitions.SecondaryPartitionType;\n+import org.apache.druid.indexer.partitions.SingleDimensionPartitionsSpec;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.apache.druid.java.util.common.logger.Logger;\n+import org.apache.druid.testing.guice.DruidTestModuleFactory;\n+import org.apache.druid.testing.utils.ITRetryUtil;\n+import org.apache.druid.tests.TestNGGroup;\n+import org.apache.druid.timeline.DataSegment;\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Guice;\n+import org.testng.annotations.Test;\n+\n+import java.io.Closeable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.Function;\n+\n+@Test(groups = {TestNGGroup.OTHER_INDEX})\n+@Guice(moduleFactory = DruidTestModuleFactory.class)\n+public class ITAppendBatchIndexTest extends AbstractITBatchIndexTest\n+{\n+  private static final Logger LOG = new Logger(ITAppendBatchIndexTest.class);\n+  private static final String INDEX_TASK = \"/indexer/wikipedia_local_input_source_index_task.json\";\n+  private static final String INDEX_QUERIES_INITIAL_INGESTION_RESOURCE = \"/indexer/wikipedia_index_queries.json\";\n+  private static final String INDEX_QUERIES_POST_APPEND_PRE_COMPACT_RESOURCE = \"/indexer/wikipedia_double_without_roll_up_index_queries.json\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc878da5e433ce05efdbcf9bfd1b9f60575d763e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1ODEwNQ==", "bodyText": "Also, would you please add some comments for each queries about what non-perfect-rollup or perfect-rollup mean?", "url": "https://github.com/apache/druid/pull/10186#discussion_r456558105", "createdAt": "2020-07-17T16:50:05Z", "author": {"login": "jihoonson"}, "path": "integration-tests/src/test/java/org/apache/druid/tests/indexer/ITAppendBatchIndexTest.java", "diffHunk": "@@ -0,0 +1,245 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.tests.indexer;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import org.apache.druid.indexer.partitions.DynamicPartitionsSpec;\n+import org.apache.druid.indexer.partitions.HashedPartitionsSpec;\n+import org.apache.druid.indexer.partitions.PartitionsSpec;\n+import org.apache.druid.indexer.partitions.SecondaryPartitionType;\n+import org.apache.druid.indexer.partitions.SingleDimensionPartitionsSpec;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.apache.druid.java.util.common.logger.Logger;\n+import org.apache.druid.testing.guice.DruidTestModuleFactory;\n+import org.apache.druid.testing.utils.ITRetryUtil;\n+import org.apache.druid.tests.TestNGGroup;\n+import org.apache.druid.timeline.DataSegment;\n+import org.testng.Assert;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Guice;\n+import org.testng.annotations.Test;\n+\n+import java.io.Closeable;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.function.Function;\n+\n+@Test(groups = {TestNGGroup.OTHER_INDEX})\n+@Guice(moduleFactory = DruidTestModuleFactory.class)\n+public class ITAppendBatchIndexTest extends AbstractITBatchIndexTest\n+{\n+  private static final Logger LOG = new Logger(ITAppendBatchIndexTest.class);\n+  private static final String INDEX_TASK = \"/indexer/wikipedia_local_input_source_index_task.json\";\n+  private static final String INDEX_QUERIES_INITIAL_INGESTION_RESOURCE = \"/indexer/wikipedia_index_queries.json\";\n+  private static final String INDEX_QUERIES_POST_APPEND_PRE_COMPACT_RESOURCE = \"/indexer/wikipedia_double_without_roll_up_index_queries.json\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NzMwNA=="}, "originalCommit": {"oid": "fc878da5e433ce05efdbcf9bfd1b9f60575d763e"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28543b3a9c91ea1f78a127ae04a8e4594643def8", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/28543b3a9c91ea1f78a127ae04a8e4594643def8", "committedDate": "2020-07-17T18:43:26Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ef2b8eb23bca0564f25d89949cc9532b3fe292a", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/0ef2b8eb23bca0564f25d89949cc9532b3fe292a", "committedDate": "2020-07-17T20:54:47Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56413b1a01b453aa059e518d4a914c6062c7a6b4", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/56413b1a01b453aa059e518d4a914c6062c7a6b4", "committedDate": "2020-07-17T20:55:20Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07c8c40e429f90c1f578b960abb5f7953298c7c2", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/07c8c40e429f90c1f578b960abb5f7953298c7c2", "committedDate": "2020-07-17T23:33:31Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f00e70261e1c93b7e910637a0bcc5658fbc72efd", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/f00e70261e1c93b7e910637a0bcc5658fbc72efd", "committedDate": "2020-07-17T23:35:28Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52aa434c4ebe113f6dd618e211df4bbd5e58b566", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/52aa434c4ebe113f6dd618e211df4bbd5e58b566", "committedDate": "2020-07-18T01:08:13Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cee40e039da3b22055d10444908fc149897f109", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/6cee40e039da3b22055d10444908fc149897f109", "committedDate": "2020-07-18T04:33:21Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "296942de34cd9db851e904d8f6d19def1490e324", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/296942de34cd9db851e904d8f6d19def1490e324", "committedDate": "2020-07-18T04:34:00Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a97ae58b5eb982791dd3f555a8bb794d7703c486", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/a97ae58b5eb982791dd3f555a8bb794d7703c486", "committedDate": "2020-07-18T22:39:55Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7df13ed517a0c617a42891c3edf71d559d8a6cf4", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/7df13ed517a0c617a42891c3edf71d559d8a6cf4", "committedDate": "2020-07-19T04:59:57Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51b1fe938d11ba66e845c1d3346021a715b32d0c", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/51b1fe938d11ba66e845c1d3346021a715b32d0c", "committedDate": "2020-07-19T18:02:54Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e3b8fca8bb9b0085acc251254663f48e3a6447c", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/8e3b8fca8bb9b0085acc251254663f48e3a6447c", "committedDate": "2020-07-19T20:31:19Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTI4NDAy", "url": "https://github.com/apache/druid/pull/10186#pullrequestreview-451928402", "createdAt": "2020-07-20T20:18:04Z", "commit": {"oid": "8e3b8fca8bb9b0085acc251254663f48e3a6447c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1857, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}