{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDQ5MTU5", "number": 9883, "title": "Remove payload field from table sys.segment", "bodyText": "Motivation\nThis PR proposes to remove the payload field from table sys.segments mainly to handle performance issue caused by serializing object to JSON string.\nDrop alternative\nAdd a projection rule for scanning table sys.segment.\nOperational impact\nSince the payload field has been already public documented, it's a little aggressive to remove it. But I would like to suppose that there may be rare possibility someone has a dependency on this field. The RESTful api /druid/coordinator/v1/datasources/{dataSourceName}/segments/{segmentId}  should be the priority option to retrieve segment metadata.\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.\n\n\nKey changed/added classes in this PR\n\nSystemSchema", "createdAt": "2020-05-17T02:08:36Z", "url": "https://github.com/apache/druid/pull/9883", "merged": true, "mergeCommit": {"oid": "fc555980e8cadc61fcb8cee9d6dadec9cf0e0496"}, "closed": true, "closedAt": "2020-06-30T05:20:23Z", "author": {"login": "yuanlihan"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABch3KnAgH2gAyNDE5MDQ5MTU5Ojc4MjQ2ZWY4YTNlZjg1NjVjNzg4YTAxN2IxODJmN2M3NjIyMTE1YTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwOi8QgFqTQzOTY3MzYwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "78246ef8a3ef8565c788a017b182f7c7622115a7", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/78246ef8a3ef8565c788a017b182f7c7622115a7", "committedDate": "2020-05-16T14:01:57Z", "message": "remove payload field from table sys.segments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e72393028598726eeae07813cefae7a1f4e131c", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/1e72393028598726eeae07813cefae7a1f4e131c", "committedDate": "2020-05-17T01:01:50Z", "message": "update doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d10d48f6fca65482a660fb100b913d2d2e932d4", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/2d10d48f6fca65482a660fb100b913d2d2e932d4", "committedDate": "2020-05-17T02:05:21Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bc81881364b88ed764bb14e9847b6801ae94181", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/4bc81881364b88ed764bb14e9847b6801ae94181", "committedDate": "2020-06-08T00:40:49Z", "message": "fix CI failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a36fe1cc0b5a87184992d22a83597a6461ad37fd", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/a36fe1cc0b5a87184992d22a83597a6461ad37fd", "committedDate": "2020-06-22T10:45:45Z", "message": "add necessary fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/b713308d75d926275475f9db28ce00485cf9058d", "committedDate": "2020-06-22T11:08:22Z", "message": "fix doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4Njc3OTE2", "url": "https://github.com/apache/druid/pull/9883#pullrequestreview-438677916", "createdAt": "2020-06-27T06:44:58Z", "commit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo0NDo1OFrOGpzysQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo1MTowMlrOGpz0pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5MzM2MQ==", "bodyText": "Why these fields are null, i think available segments would have shardSpec, dimensions and metrics as well", "url": "https://github.com/apache/druid/pull/9883#discussion_r446493361", "createdAt": "2020-06-27T06:44:58Z", "author": {"login": "surekhasaharan"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -333,33 +330,30 @@ public TableType getJdbcTableType()\n               root\n           ))\n           .transform(val -> {\n-            try {\n-              if (segmentsAlreadySeen.contains(val.getKey())) {\n-                return null;\n-              }\n-              final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n-              final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n-              return new Object[]{\n-                  val.getKey(),\n-                  val.getKey().getDataSource(),\n-                  val.getKey().getInterval().getStart().toString(),\n-                  val.getKey().getInterval().getEnd().toString(),\n-                  val.getValue().getSegment().getSize(),\n-                  val.getKey().getVersion(),\n-                  (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n-                  numReplicas,\n-                  val.getValue().getNumRows(),\n-                  IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n-                  // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n-                  IS_AVAILABLE_TRUE,\n-                  val.getValue().isRealtime(),\n-                  IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n-                  jsonMapper.writeValueAsString(val.getKey())\n-              };\n-            }\n-            catch (JsonProcessingException e) {\n-              throw new RE(e, \"Error getting segment payload for segment %s\", val.getKey());\n+            if (segmentsAlreadySeen.contains(val.getKey())) {\n+              return null;\n             }\n+            final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n+            final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n+            return new Object[]{\n+                val.getKey(),\n+                val.getKey().getDataSource(),\n+                val.getKey().getInterval().getStart().toString(),\n+                val.getKey().getInterval().getEnd().toString(),\n+                val.getValue().getSegment().getSize(),\n+                val.getKey().getVersion(),\n+                (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n+                numReplicas,\n+                val.getValue().getNumRows(),\n+                IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n+                // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n+                IS_AVAILABLE_TRUE,\n+                val.getValue().isRealtime(),\n+                IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n+                null,\n+                null,\n+                null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Mzg2MQ==", "bodyText": "I don't know TypeScript much, but shouldn't we add the additional fields to this query ?", "url": "https://github.com/apache/druid/pull/9883#discussion_r446493861", "createdAt": "2020-06-27T06:51:02Z", "author": {"login": "surekhasaharan"}, "path": "web-console/src/views/segments-view/segments-view.tsx", "diffHunk": "@@ -221,7 +221,7 @@ export class SegmentsView extends React.PureComponent<SegmentsViewProps, Segment\n           queryParts = compact([\n             `SELECT`,\n             `  (\"start\" || '/' || \"end\") AS \"interval\",`,\n-            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\", \"payload\"`,\n+            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\"`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89a0d6b59d907bf520c6db81525bc0dba8b464a2", "author": {"user": {"login": "yuanlihan", "name": "Yuanli Han"}}, "url": "https://github.com/apache/druid/commit/89a0d6b59d907bf520c6db81525bc0dba8b464a2", "committedDate": "2020-06-29T03:32:34Z", "message": "fix comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjY2MzQ3", "url": "https://github.com/apache/druid/pull/9883#pullrequestreview-439666347", "createdAt": "2020-06-30T04:45:48Z", "commit": {"oid": "89a0d6b59d907bf520c6db81525bc0dba8b464a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjczNjA0", "url": "https://github.com/apache/druid/pull/9883#pullrequestreview-439673604", "createdAt": "2020-06-30T05:09:18Z", "commit": {"oid": "89a0d6b59d907bf520c6db81525bc0dba8b464a2"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTowOToxOFrOGqr6IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTowOToxOFrOGqr6IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxMjc2OA==", "bodyText": "Yeah, it looks like this information is fetched outside of system table from /druid/coordinator/v1/metadata/datasources/${datasourceId}/segments/${segmentId}", "url": "https://github.com/apache/druid/pull/9883#discussion_r447412768", "createdAt": "2020-06-30T05:09:18Z", "author": {"login": "clintropolis"}, "path": "web-console/src/views/segments-view/segments-view.tsx", "diffHunk": "@@ -221,7 +221,7 @@ export class SegmentsView extends React.PureComponent<SegmentsViewProps, Segment\n           queryParts = compact([\n             `SELECT`,\n             `  (\"start\" || '/' || \"end\") AS \"interval\",`,\n-            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\", \"payload\"`,\n+            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\"`,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Mzg2MQ=="}, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2351, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}