{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5OTk4MjQ4", "number": 10680, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzoyNzoyMlrOFFb_1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzoxMjowOFrOFF2eSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ1OTExOnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzoyNzoyMlrOIF8mCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToyNDo1NFrOIGBBfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwNjU3MQ==", "bodyText": "hmm. shouldn't this always be zero?  Data nodes don't have any leader.", "url": "https://github.com/apache/druid/pull/10680#discussion_r543106571", "createdAt": "2020-12-15T07:27:22Z", "author": {"login": "abhishekagarwal87"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -586,7 +638,8 @@ public TableType getJdbcTableType()\n           StringUtils.toLowerCase(discoveryDruidNode.getNodeRole().toString()),\n           druidServerToUse.getTier(),\n           currentSize,\n-          druidServerToUse.getMaxSize()\n+          druidServerToUse.getMaxSize(),\n+          NullHandling.defaultLongValue()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caa2205aa7956ab2f54870dace78ee551b0b6b97"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NTk4OQ==", "bodyText": "ideally it should always be null because they don't have the concept of leadership at all and then you can distinguish between things which are leader, are not leader, and which don't have leaders. NullHandling.defaultLongValue() is null when druid.generic.useDefaultValueForNull=false, but in default mode numbers cannot be null so it is 0 there.", "url": "https://github.com/apache/druid/pull/10680#discussion_r543145989", "createdAt": "2020-12-15T08:36:08Z", "author": {"login": "clintropolis"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -586,7 +638,8 @@ public TableType getJdbcTableType()\n           StringUtils.toLowerCase(discoveryDruidNode.getNodeRole().toString()),\n           druidServerToUse.getTier(),\n           currentSize,\n-          druidServerToUse.getMaxSize()\n+          druidServerToUse.getMaxSize(),\n+          NullHandling.defaultLongValue()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwNjU3MQ=="}, "originalCommit": {"oid": "caa2205aa7956ab2f54870dace78ee551b0b6b97"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3OTEzMg==", "bodyText": "yeah. that works. \ud83d\udc4d", "url": "https://github.com/apache/druid/pull/10680#discussion_r543179132", "createdAt": "2020-12-15T09:24:54Z", "author": {"login": "abhishekagarwal87"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -586,7 +638,8 @@ public TableType getJdbcTableType()\n           StringUtils.toLowerCase(discoveryDruidNode.getNodeRole().toString()),\n           druidServerToUse.getTier(),\n           currentSize,\n-          druidServerToUse.getMaxSize()\n+          druidServerToUse.getMaxSize(),\n+          NullHandling.defaultLongValue()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEwNjU3MQ=="}, "originalCommit": {"oid": "caa2205aa7956ab2f54870dace78ee551b0b6b97"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjc5NjkwOnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMzoxMjowOFrOIGkLHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjowNzozOVrOIHbQ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1NTAzNw==", "bodyText": "not sure why this is a LONG type variable and not STRING type which could have values \"true\", \"false\" and \"not-applicable\" ?", "url": "https://github.com/apache/druid/pull/10680#discussion_r543755037", "createdAt": "2020-12-15T23:12:08Z", "author": {"login": "himanshug"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -159,6 +160,7 @@\n       .add(\"tier\", ValueType.STRING)\n       .add(\"curr_size\", ValueType.LONG)\n       .add(\"max_size\", ValueType.LONG)\n+      .add(\"is_leader\", ValueType.LONG)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a917c791d21df8b9e7021c16e3d97599613de0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3ODk1Mg==", "bodyText": "I guess it's to be consistent with other boolean types such as is_published in the segments table. It is useful for those boolean columns in the segments table to be long so that we can easily compute sums of them. For this column, I think it doesn't have to be long, but I don't mind either.", "url": "https://github.com/apache/druid/pull/10680#discussion_r543778952", "createdAt": "2020-12-16T00:08:18Z", "author": {"login": "jihoonson"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -159,6 +160,7 @@\n       .add(\"tier\", ValueType.STRING)\n       .add(\"curr_size\", ValueType.LONG)\n       .add(\"max_size\", ValueType.LONG)\n+      .add(\"is_leader\", ValueType.LONG)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1NTAzNw=="}, "originalCommit": {"oid": "c6a917c791d21df8b9e7021c16e3d97599613de0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMjE4MQ==", "bodyText": "Yeah, what @jihoonson was my reasoning for using long, to be consistent with other boolean-ish columns, but i'm not super attached to it and can change if that is better", "url": "https://github.com/apache/druid/pull/10680#discussion_r544632181", "createdAt": "2020-12-16T21:22:29Z", "author": {"login": "clintropolis"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -159,6 +160,7 @@\n       .add(\"tier\", ValueType.STRING)\n       .add(\"curr_size\", ValueType.LONG)\n       .add(\"max_size\", ValueType.LONG)\n+      .add(\"is_leader\", ValueType.LONG)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1NTAzNw=="}, "originalCommit": {"oid": "c6a917c791d21df8b9e7021c16e3d97599613de0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY1NzY2Mg==", "bodyText": "thanks for explaining, in the big scheme of things it hardly matters... consider it a nit", "url": "https://github.com/apache/druid/pull/10680#discussion_r544657662", "createdAt": "2020-12-16T22:07:39Z", "author": {"login": "himanshug"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -159,6 +160,7 @@\n       .add(\"tier\", ValueType.STRING)\n       .add(\"curr_size\", ValueType.LONG)\n       .add(\"max_size\", ValueType.LONG)\n+      .add(\"is_leader\", ValueType.LONG)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc1NTAzNw=="}, "originalCommit": {"oid": "c6a917c791d21df8b9e7021c16e3d97599613de0"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2921, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}