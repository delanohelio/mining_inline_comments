{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNzUzNTU3", "number": 9536, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMjo0NDowN1rODpWb_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMjo0NDowN1rODpWb_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Njg1ODIyOnYy", "diffSide": "RIGHT", "path": "web-console/src/views/load-data-view/load-data-view.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMjo0NDowOFrOF4eQiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjo1MjowOVrOF5brmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2MDMyOQ==", "bodyText": "What do you think about adding a test for the data loader to verify a reopened spec can be resubmitted?", "url": "https://github.com/apache/druid/pull/9536#discussion_r394760329", "createdAt": "2020-03-19T02:44:08Z", "author": {"login": "ccaominh"}, "path": "web-console/src/views/load-data-view/load-data-view.tsx", "diffHunk": "@@ -2967,7 +2968,7 @@ export class LoadDataView extends React.PureComponent<LoadDataViewProps, LoadDat\n \n     try {\n       const resp = await axios.get(`/druid/indexer/v1/task/${initTaskId}`);\n-      this.updateSpec(resp.data.payload);\n+      this.updateSpec(cleanSpec(resp.data.payload));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf2998908316ad916760505da3cd35e6cb4a1f50"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMxMDgxNg==", "bodyText": "like this: https://github.com/apache/druid/pull/9536/files#diff-ff16ebd3aaa7f975353b795b18c80c2dR104", "url": "https://github.com/apache/druid/pull/9536#discussion_r395310816", "createdAt": "2020-03-19T20:48:22Z", "author": {"login": "vogievetsky"}, "path": "web-console/src/views/load-data-view/load-data-view.tsx", "diffHunk": "@@ -2967,7 +2968,7 @@ export class LoadDataView extends React.PureComponent<LoadDataViewProps, LoadDat\n \n     try {\n       const resp = await axios.get(`/druid/indexer/v1/task/${initTaskId}`);\n-      this.updateSpec(resp.data.payload);\n+      this.updateSpec(cleanSpec(resp.data.payload));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2MDMyOQ=="}, "originalCommit": {"oid": "cf2998908316ad916760505da3cd35e6cb4a1f50"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTMzMDQzOA==", "bodyText": "Yeah, that's a good unit test for the utility method.\nI was thinking it'd also be nice to have something that ensures the load data view itself is behaving as expected (e.g., it should be calling cleanSpec in the right places).", "url": "https://github.com/apache/druid/pull/9536#discussion_r395330438", "createdAt": "2020-03-19T21:29:43Z", "author": {"login": "ccaominh"}, "path": "web-console/src/views/load-data-view/load-data-view.tsx", "diffHunk": "@@ -2967,7 +2968,7 @@ export class LoadDataView extends React.PureComponent<LoadDataViewProps, LoadDat\n \n     try {\n       const resp = await axios.get(`/druid/indexer/v1/task/${initTaskId}`);\n-      this.updateSpec(resp.data.payload);\n+      this.updateSpec(cleanSpec(resp.data.payload));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2MDMyOQ=="}, "originalCommit": {"oid": "cf2998908316ad916760505da3cd35e6cb4a1f50"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc2NjY4MQ==", "bodyText": "I ideally we would have a Druid endpoint that can output the same spec that was given to it: #7631\nThe console calling cleanSpec is really a workaround around not having \u261d\ufe0f", "url": "https://github.com/apache/druid/pull/9536#discussion_r395766681", "createdAt": "2020-03-20T16:52:09Z", "author": {"login": "vogievetsky"}, "path": "web-console/src/views/load-data-view/load-data-view.tsx", "diffHunk": "@@ -2967,7 +2968,7 @@ export class LoadDataView extends React.PureComponent<LoadDataViewProps, LoadDat\n \n     try {\n       const resp = await axios.get(`/druid/indexer/v1/task/${initTaskId}`);\n-      this.updateSpec(resp.data.payload);\n+      this.updateSpec(cleanSpec(resp.data.payload));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2MDMyOQ=="}, "originalCommit": {"oid": "cf2998908316ad916760505da3cd35e6cb4a1f50"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2653, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}