{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTAyMTI0", "number": 9858, "title": "druid.storage.maxListingLength should default to 1000 for s3", "bodyText": "Description\nThe value of the druid.storage.maxListingLength property defines how many files should be read or deleted at a given time. AWS S3 client supports deleting a maximum of 1000 files at once, any more than that, and the delete request fails. Setting the default value for this property to the maximum value allowed by S3.\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-05-12T18:41:11Z", "url": "https://github.com/apache/druid/pull/9858", "merged": true, "mergeCommit": {"oid": "80b212fe43af1f6d3272f84de506fd124f33fbd4"}, "closed": true, "closedAt": "2020-05-14T14:00:52Z", "author": {"login": "zachjsh"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgostpAH2gAyNDE2OTAyMTI0OjczMWM0MzY5Yjc2OTdiMTUwZjI1OTA0NWZmNDJmZmM3MDNmN2VmOGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchN8zrAFqTQxMTgzNDYzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "731c4369b7697b150f259045ff42ffc703f7ef8b", "author": {"user": {"login": "zachjsh", "name": null}}, "url": "https://github.com/apache/druid/commit/731c4369b7697b150f259045ff42ffc703f7ef8b", "committedDate": "2020-05-12T18:36:42Z", "message": "druid.storage.maxListingLength should default to 1000 for s3"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzU2MzE2", "url": "https://github.com/apache/druid/pull/9858#pullrequestreview-410356316", "createdAt": "2020-05-12T19:28:52Z", "commit": {"oid": "731c4369b7697b150f259045ff42ffc703f7ef8b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyODo1M1rOGUVtaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToyODo1M1rOGUVtaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4MDM5NQ==", "bodyText": "Are there any tests that verify the default / min and max ?\nAlso how is the setter used below? it doesn't look like it checks that the passed in maxListingLength is within the provided bounds.\nIt would be good if you linked to the AWS documentation that lists the max as 1000 so we can update it in the future if that changes", "url": "https://github.com/apache/druid/pull/9858#discussion_r423980395", "createdAt": "2020-05-12T19:28:53Z", "author": {"login": "suneet-s"}, "path": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java", "diffHunk": "@@ -35,7 +36,8 @@\n    */\n   @JsonProperty\n   @Min(1)\n-  private int maxListingLength = 1024;\n+  @Max(1000)\n+  private int maxListingLength = 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "731c4369b7697b150f259045ff42ffc703f7ef8b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "489195b0156648b08ab07e9e86f96f3ee503b8f2", "author": {"user": {"login": "zachjsh", "name": null}}, "url": "https://github.com/apache/druid/commit/489195b0156648b08ab07e9e86f96f3ee503b8f2", "committedDate": "2020-05-12T22:11:31Z", "message": "* Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDk2NzQx", "url": "https://github.com/apache/druid/pull/9858#pullrequestreview-411096741", "createdAt": "2020-05-13T16:27:08Z", "commit": {"oid": "489195b0156648b08ab07e9e86f96f3ee503b8f2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjoyNzowOVrOGU5xMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjoyNzowOVrOGU5xMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MTE4NA==", "bodyText": "Does this only affect deleting objects? If the API allows you to list more than 1000 objects, I think a better fix would be in S3Utils#deleteObjectsInPath to check if keysToDelete.size() >= Math.min(1000, config.getMaxListingLength())\nYou could even extract Math.min(1000, config.getMaxListingLength()) to a JsonIgnore function in this config file. This way there's a clear distinction between listing many files and the number of files you're allowed to delete in a single request", "url": "https://github.com/apache/druid/pull/9858#discussion_r424571184", "createdAt": "2020-05-13T16:27:09Z", "author": {"login": "suneet-s"}, "path": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java", "diffHunk": "@@ -29,16 +32,33 @@\n  */\n public class S3InputDataConfig\n {\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MIN = 1;\n+\n+  /**\n+   * AWS S3 only allows deleting 1000 elements at a time:\n+   * https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/DeleteObjectsRequest.html", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489195b0156648b08ab07e9e86f96f3ee503b8f2"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDE1NzQ2", "url": "https://github.com/apache/druid/pull/9858#pullrequestreview-411415746", "createdAt": "2020-05-14T02:02:25Z", "commit": {"oid": "489195b0156648b08ab07e9e86f96f3ee503b8f2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjowMjoyNVrOGVJhTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMjowNDo0M1rOGVJjgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyOTI2MA==", "bodyText": "This seems ok to me, 1k is probably enough to list even if it isn't the true maximum limit the API can handle.", "url": "https://github.com/apache/druid/pull/9858#discussion_r424829260", "createdAt": "2020-05-14T02:02:25Z", "author": {"login": "clintropolis"}, "path": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java", "diffHunk": "@@ -29,16 +32,33 @@\n  */\n public class S3InputDataConfig\n {\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MIN = 1;\n+\n+  /**\n+   * AWS S3 only allows deleting 1000 elements at a time:\n+   * https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/model/DeleteObjectsRequest.html", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU3MTE4NA=="}, "originalCommit": {"oid": "489195b0156648b08ab07e9e86f96f3ee503b8f2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyOTgyNQ==", "bodyText": "super nit: since each of these variables is only used once and tied to a specific test, maybe this would be slightly clearer what is going on here to instead make a static function that wraps the StringUtils.format and just call it inline for all of the tests.", "url": "https://github.com/apache/druid/pull/9858#discussion_r424829825", "createdAt": "2020-05-14T02:04:43Z", "author": {"login": "clintropolis"}, "path": "extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.storage.s3;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.druid.java.util.common.IAE;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class S3InputDataConfigTest\n+{\n+  private static final int MAX_LISTING_LENGTH_TOO_LOW = S3InputDataConfig.MAX_LISTING_LENGTH_MIN - 1;\n+  private static final int MAX_LISTING_LENGTH_TOO_HIGH = S3InputDataConfig.MAX_LISTING_LENGTH_MAX + 1;\n+  private static final String INPUT_DATA_TEMPLATE_JSON_STR =\n+      \"{\\n\"\n+      + \"    \\\"maxListingLength\\\": \\\"%1$d\\\"\\n\"\n+      + \"}\";\n+  private static final String INPUT_DATA_MAX_LISTING_LENGTH_TOO_LOW_JSON_STR =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489195b0156648b08ab07e9e86f96f3ee503b8f2"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d588b4e70f185691bf69bb20a7ebb8b34c6f08d", "author": {"user": {"login": "zachjsh", "name": null}}, "url": "https://github.com/apache/druid/commit/4d588b4e70f185691bf69bb20a7ebb8b34c6f08d", "committedDate": "2020-05-14T02:20:20Z", "message": "* Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7", "author": {"user": {"login": "zachjsh", "name": null}}, "url": "https://github.com/apache/druid/commit/572360f9c8acb1a86c58d7dbfaf351b9e47e87a7", "committedDate": "2020-05-14T02:20:56Z", "message": "Merge remote-tracking branch 'origin/master' into max_listing_default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDY4OTk3", "url": "https://github.com/apache/druid/pull/9858#pullrequestreview-411468997", "createdAt": "2020-05-14T05:12:06Z", "commit": {"oid": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDg1NDM1", "url": "https://github.com/apache/druid/pull/9858#pullrequestreview-411485435", "createdAt": "2020-05-14T05:59:57Z", "commit": {"oid": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNTo1OTo1N1rOGVNGzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjowOToyM1rOGVNSpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4ODAxNQ==", "bodyText": "nit : \"or delete from Amazon S3\"", "url": "https://github.com/apache/druid/pull/9858#discussion_r424888015", "createdAt": "2020-05-14T05:59:57Z", "author": {"login": "surekhasaharan"}, "path": "extensions-core/s3-extensions/src/main/java/org/apache/druid/storage/s3/S3InputDataConfig.java", "diffHunk": "@@ -29,16 +32,34 @@\n  */\n public class S3InputDataConfig\n {\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MIN = 1;\n+\n+  /**\n+   * AWS S3 only allows listing and deleting 1000 elements at a time:\n+   * https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html#API_ListObjects_RequestSyntax\n+   * https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjects.html#API_DeleteObjects_RequestSyntax\n+   */\n+  @VisibleForTesting\n+  static final int MAX_LISTING_LENGTH_MAX = 1000;\n+\n   /**\n    * The maximum number of input files matching a given prefix to retrieve\n-   * from Amazon S3 at a time.\n+   * or delete Amazon S3 at a time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5MTA0Nw==", "bodyText": "JSON_MAPPER can be private as well", "url": "https://github.com/apache/druid/pull/9858#discussion_r424891047", "createdAt": "2020-05-14T06:09:23Z", "author": {"login": "surekhasaharan"}, "path": "extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/S3InputDataConfigTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.storage.s3;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.druid.java.util.common.IAE;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class S3InputDataConfigTest\n+{\n+  private static final int MAX_LISTING_LENGTH_TOO_LOW = S3InputDataConfig.MAX_LISTING_LENGTH_MIN - 1;\n+  private static final int MAX_LISTING_LENGTH_TOO_HIGH = S3InputDataConfig.MAX_LISTING_LENGTH_MAX + 1;\n+  private static final String INPUT_DATA_TEMPLATE_JSON_STR =\n+      \"{\\n\"\n+      + \"    \\\"maxListingLength\\\": \\\"%1$d\\\"\\n\"\n+      + \"}\";\n+\n+  public static final ObjectMapper JSON_MAPPER = new ObjectMapper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572360f9c8acb1a86c58d7dbfaf351b9e47e87a7"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3de0eb190fe83dc12179481792862d9af7529404", "author": {"user": {"login": "zachjsh", "name": null}}, "url": "https://github.com/apache/druid/commit/3de0eb190fe83dc12179481792862d9af7529404", "committedDate": "2020-05-14T07:54:08Z", "message": "* Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODM0NjMz", "url": "https://github.com/apache/druid/pull/9858#pullrequestreview-411834633", "createdAt": "2020-05-14T14:00:46Z", "commit": {"oid": "3de0eb190fe83dc12179481792862d9af7529404"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2327, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}