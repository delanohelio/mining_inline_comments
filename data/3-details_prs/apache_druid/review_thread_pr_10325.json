{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NDA4MzEz", "number": 10325, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjoxNzoyOFrOEgEGLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjoxNzoyOFrOEgEGLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDU3MDA2OnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/column/StringGroupByColumnSelectorStrategy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjoxNzoyOFrOHMuFpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzo0Nzo1M1rOHM68Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEwMDA3MQ==", "bodyText": "Could you add some javadocs to this method explaining what it does in general, and also specifically what it does when stringComparator is null?\nAlso, do you think this NPE could have got triggered by a real query? If so, is defaulting to lexicographic the right behavior for that query?", "url": "https://github.com/apache/druid/pull/10325#discussion_r483100071", "createdAt": "2020-09-03T16:17:28Z", "author": {"login": "gianm"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/column/StringGroupByColumnSelectorStrategy.java", "diffHunk": "@@ -157,8 +157,8 @@ private void initializeGroupingKeyV2Dimension(\n         capabilities != null &&\n         capabilities.hasBitmapIndexes() &&\n         capabilities.areDictionaryValuesSorted().and(capabilities.areDictionaryValuesUnique()).isTrue();\n-\n-    if (canCompareInts && (stringComparator == null || StringComparators.LEXICOGRAPHIC.equals(stringComparator))) {\n+    final StringComparator comparator = stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bad4065e4ff4a22ededc908e6503941b9dbc3348"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5MDgzNw==", "bodyText": "It looks like it can if the Order By is not set for the dimension. See GroupByEngineKeySerde#getDimensionComparators which calls DefaultLimitSpec#getComparatorForDimName which can return null.\nMaybe it makes more sense for the default to be something faster since we can't use the indexes in this case, something like alphanumeric or strlen would be faster.\nI haven't seen this triggered in a real query yet, but I think I've seen the lexicographic comparator used as a default in other parts of the query stack (BoundDimFilter and DimensionTopNMetricSpec)", "url": "https://github.com/apache/druid/pull/10325#discussion_r483290837", "createdAt": "2020-09-03T22:40:41Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/column/StringGroupByColumnSelectorStrategy.java", "diffHunk": "@@ -157,8 +157,8 @@ private void initializeGroupingKeyV2Dimension(\n         capabilities != null &&\n         capabilities.hasBitmapIndexes() &&\n         capabilities.areDictionaryValuesSorted().and(capabilities.areDictionaryValuesUnique()).isTrue();\n-\n-    if (canCompareInts && (stringComparator == null || StringComparators.LEXICOGRAPHIC.equals(stringComparator))) {\n+    final StringComparator comparator = stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEwMDA3MQ=="}, "originalCommit": {"oid": "bad4065e4ff4a22ededc908e6503941b9dbc3348"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxMDY0Ng==", "bodyText": "Lexicographic is our usual default because it matches the order that stuff is stored in the dictionaries. I wouldn't choose something different, since we want to be consistent about what the default ordering is.", "url": "https://github.com/apache/druid/pull/10325#discussion_r483310646", "createdAt": "2020-09-03T23:47:53Z", "author": {"login": "gianm"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/column/StringGroupByColumnSelectorStrategy.java", "diffHunk": "@@ -157,8 +157,8 @@ private void initializeGroupingKeyV2Dimension(\n         capabilities != null &&\n         capabilities.hasBitmapIndexes() &&\n         capabilities.areDictionaryValuesSorted().and(capabilities.areDictionaryValuesUnique()).isTrue();\n-\n-    if (canCompareInts && (stringComparator == null || StringComparators.LEXICOGRAPHIC.equals(stringComparator))) {\n+    final StringComparator comparator = stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEwMDA3MQ=="}, "originalCommit": {"oid": "bad4065e4ff4a22ededc908e6503941b9dbc3348"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3127, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}