{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NjQ4MjE4", "number": 10277, "title": "make dimension column extensible with COMPLEX type", "bodyText": "WIP tag is added because I am still in the process of testing it more thoroughly, However code in current patch is working in preliminary testing. I will also try and add some UTs for the changes. That said, code is totally reviewable.\nDescription\nThis patch adds support for adding COMPLEX type Dimension column via Extensions, similar support for Metric columns exist.\nMain changes are to add String getTypeName() in ColumnCapabilities interface and to add DimensionHandlerUtils.registerDimensionHandlerProvider(String typeName, DimensionHandlerProvider) to enable extensions to register custom type specific DimensionHandler, very similar to existing ComplexMetrics.registerSerde(..)\nAfter this patch, Users can have extensions with custom implementations of DimensionHandler, ComplexMetricSerde\nand related interfaces to add COMPLEX type Dimension Column.\nIn addition to above, extension would also make ComplexMetrics.registerSerde(typeName,..) and DimensionHandlerUtils.registerDimensionHandlerProvider(typeName,..) to register custom type specific implementations.\nSide-note: I am using this extensibility to add a Map<String, String> type Dimension column for various reasons which will later be added in a separate PR as contrib extension.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\nKey changed/added classes in this PR\n\nColumnCapabilities\nDimensionHandlerUtils", "createdAt": "2020-08-13T21:43:39Z", "url": "https://github.com/apache/druid/pull/10277", "merged": true, "mergeCommit": {"oid": "813e18774e86811bfd82ca87160a0a82d24e6201"}, "closed": true, "closedAt": "2020-12-03T16:58:17Z", "author": {"login": "himanshug"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-m5HhAH2gAyNDY3NjQ4MjE4OmJiOTM0MjY1NWRhZjI4NzMzYjJmZGNiOGY4ODlhMWU2MDYwOGJhMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdid3x5AFqTU0MzY2MzY2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb9342655daf28733b2fdcb8f889a1e60608ba2d", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/bb9342655daf28733b2fdcb8f889a1e60608ba2d", "committedDate": "2020-08-13T21:28:10Z", "message": "make dimension column extensible with COMPLEX type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzYzNjYw", "url": "https://github.com/apache/druid/pull/10277#pullrequestreview-469763660", "createdAt": "2020-08-18T19:35:32Z", "commit": {"oid": "bb9342655daf28733b2fdcb8f889a1e60608ba2d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTozNTozMlrOHCjD7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTo0MDozNFrOHCjNxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQzMzY0Nw==", "bodyText": "could this be getComplexTypeName to tie it more strongly to complex types? It would also match the aggregator factory changes in #9638 which I've started working on again recently. If you recall this discussion #9638 (comment), I decided to go ahead and rename it to getComplexTypeName there because there are already breaking changes with the new abstract methods, so might as well make it intuitive.", "url": "https://github.com/apache/druid/pull/10277#discussion_r472433647", "createdAt": "2020-08-18T19:35:32Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/segment/column/ColumnCapabilities.java", "diffHunk": "@@ -37,6 +37,12 @@\n    */\n   ValueType getType();\n \n+  /**\n+   *\n+   * If ValueType is COMPLEX, then the typeName associated with it.\n+   */\n+  String getTypeName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9342655daf28733b2fdcb8f889a1e60608ba2d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQzNjE2Ng==", "bodyText": "Apologies for the conflicts here, I made some semi disruptive changes to push ColumnCapabilities into the DimensionIndexer implementations so they can be more accurate. I think the changes should still be workable with your addition of DimensionHandlerProvider, just the dimension indexer it provides will need to provide the complex column capabilities.", "url": "https://github.com/apache/druid/pull/10277#discussion_r472436166", "createdAt": "2020-08-18T19:40:34Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/segment/incremental/IncrementalIndex.java", "diffHunk": "@@ -314,7 +315,12 @@ protected IncrementalIndex(\n     for (DimensionSchema dimSchema : dimensionsSpec.getDimensions()) {\n       ValueType type = TYPE_MAP.get(dimSchema.getValueType());\n       String dimName = dimSchema.getName();\n-      ColumnCapabilitiesImpl capabilities = makeDefaultCapabilitiesFromValueType(type);\n+\n+      // Note: Things might be simpler if DimensionSchema had a method \"getColumnCapabilities()\" which could return\n+      // type specific capabilities by itself. However, for various reasons, DimensionSchema currently lives in druid-core\n+      // while ColumnCapabilities lives in druid-processing which makes that approach difficult.\n+      ColumnCapabilitiesImpl capabilities = makeDefaultCapabilitiesFromValueType(type, dimSchema.getTypeName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9342655daf28733b2fdcb8f889a1e60608ba2d"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef550dc66c8db89a84693805fe3a4e20c4690a06", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/ef550dc66c8db89a84693805fe3a4e20c4690a06", "committedDate": "2020-08-26T18:18:01Z", "message": "Merge remote-tracking branch 'apache/master' into extensible_dim\n\nChange-Id: I6aad1f268c9304082806e2efb5f8fe9ec03a1aa6"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9eb0f85f9864d1c9f004146337e21d76a35c4bd", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/a9eb0f85f9864d1c9f004146337e21d76a35c4bd", "committedDate": "2020-08-26T18:20:38Z", "message": "more changes\n\nChange-Id: I9707dd644b8d71030b74a8c1d6fff0c0020d960d"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7535e3d2e2103e7a531d425d970062b66c263dc1", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/7535e3d2e2103e7a531d425d970062b66c263dc1", "committedDate": "2020-08-26T19:22:48Z", "message": "Merge remote-tracking branch 'apache/master' into extensible_dim\n\nChange-Id: I4f900940120512b0e058bdbbf9cc0d3b17a1fea0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4998a0cabf98b6825a0955a95da01f3af40f4e5c", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/4998a0cabf98b6825a0955a95da01f3af40f4e5c", "committedDate": "2020-08-27T16:20:11Z", "message": "Merge remote-tracking branch 'apache/master' into extensible_dim\n\nChange-Id: I687a2799c105cc4ec68bbbc51f613ee36075541a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "026ca40bb1efa39a93f09ea10c7dc5a9d71a0572", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/026ca40bb1efa39a93f09ea10c7dc5a9d71a0572", "committedDate": "2020-08-27T17:19:01Z", "message": "processing module changes for build fix\n\nChange-Id: I146f95a41b79d20edb1721be13f0e9641f788e0e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cc4de73e1a8324e5b7aa65d958fc0dd4db54eb3", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/3cc4de73e1a8324e5b7aa65d958fc0dd4db54eb3", "committedDate": "2020-11-24T01:41:27Z", "message": "Merge remote-tracking branch 'origin/master' into extensible_dim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2a7d9e309cc39c33f1b031503e8d626a9b01fc0", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/a2a7d9e309cc39c33f1b031503e8d626a9b01fc0", "committedDate": "2020-11-29T23:08:24Z", "message": "rename ColumnCapabilities.getTypeName() to getComplexTypeName()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aef7890ef15c10e43bc212d1c19b595dc5f5eae1", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/aef7890ef15c10e43bc212d1c19b595dc5f5eae1", "committedDate": "2020-11-29T23:11:31Z", "message": "Merge remote-tracking branch 'origin/master' into extensible_dim"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwODE3NjIx", "url": "https://github.com/apache/druid/pull/10277#pullrequestreview-540817621", "createdAt": "2020-11-30T11:23:50Z", "commit": {"oid": "aef7890ef15c10e43bc212d1c19b595dc5f5eae1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMToyMzo1MFrOH72w0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMToyMzo1MFrOH72w0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUyNTI2Nw==", "bodyText": "nit: this should be setComplexTypeName probably to match capabilities", "url": "https://github.com/apache/druid/pull/10277#discussion_r532525267", "createdAt": "2020-11-30T11:23:50Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/segment/column/ColumnBuilder.java", "diffHunk": "@@ -58,6 +58,12 @@ public ColumnBuilder setType(ValueType type)\n     return this;\n   }\n \n+  public ColumnBuilder setTypeName(String typeName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aef7890ef15c10e43bc212d1c19b595dc5f5eae1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ccbf40db37eed7be1c5f6e2f334438a5cc9d67e", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/5ccbf40db37eed7be1c5f6e2f334438a5cc9d67e", "committedDate": "2020-12-03T00:42:14Z", "message": "Merge remote-tracking branch 'origin/master' into extensible_dim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa365ef5d4edf6ffd1008cff207b4a408adae668", "author": {"user": {"login": "himanshug", "name": "Himanshu"}}, "url": "https://github.com/apache/druid/commit/fa365ef5d4edf6ffd1008cff207b4a408adae668", "committedDate": "2020-12-03T00:42:55Z", "message": "rename ColumnBuilder.setTypeName(..) -> ColumnBuilder.setComplexTypeName(..)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjYzNjY2", "url": "https://github.com/apache/druid/pull/10277#pullrequestreview-543663666", "createdAt": "2020-12-03T07:18:50Z", "commit": {"oid": "fa365ef5d4edf6ffd1008cff207b4a408adae668"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1956, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}