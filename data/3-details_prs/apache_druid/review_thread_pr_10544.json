{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMTQzOTk2", "number": 10544, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDowNzo1N1rOFFAAsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDowNzo1N1rOFFAAsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzg3Mzc5OnYy", "diffSide": "RIGHT", "path": "extensions-core/kubernetes-extensions/src/main/java/org/apache/druid/k8s/discovery/DiscoveryDruidNodeList.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDowNzo1N1rOIFSHGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNToxMDowM1rOIF5Mkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxMDUyMA==", "bodyText": "nit: Add @nullable annotations.", "url": "https://github.com/apache/druid/pull/10544#discussion_r542410520", "createdAt": "2020-12-14T14:07:57Z", "author": {"login": "nishantmonu51"}, "path": "extensions-core/kubernetes-extensions/src/main/java/org/apache/druid/k8s/discovery/DiscoveryDruidNodeList.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.k8s.discovery;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.druid.discovery.DiscoveryDruidNode;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+public class DiscoveryDruidNodeList\n+{\n+  private final String resourceVersion;\n+  private final Map<String, DiscoveryDruidNode> druidNodes;\n+\n+  public DiscoveryDruidNodeList(\n+      String resourceVersion,\n+      Map<String, DiscoveryDruidNode> druidNodes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2120851bea5ab81d50905283ac290f20b07f2a6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA1MDg5OQ==", "bodyText": "added, thanks", "url": "https://github.com/apache/druid/pull/10544#discussion_r543050899", "createdAt": "2020-12-15T05:10:03Z", "author": {"login": "himanshug"}, "path": "extensions-core/kubernetes-extensions/src/main/java/org/apache/druid/k8s/discovery/DiscoveryDruidNodeList.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.k8s.discovery;\n+\n+import com.google.common.base.Preconditions;\n+import org.apache.druid.discovery.DiscoveryDruidNode;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+public class DiscoveryDruidNodeList\n+{\n+  private final String resourceVersion;\n+  private final Map<String, DiscoveryDruidNode> druidNodes;\n+\n+  public DiscoveryDruidNodeList(\n+      String resourceVersion,\n+      Map<String, DiscoveryDruidNode> druidNodes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxMDUyMA=="}, "originalCommit": {"oid": "b2120851bea5ab81d50905283ac290f20b07f2a6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3080, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}