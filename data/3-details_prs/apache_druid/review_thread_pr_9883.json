{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDQ5MTU5", "number": 9883, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo0NDo1OFrOEJUphg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo1MTowMlrOEJUrNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjEwOTUwOnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo0NDo1OFrOGpzysQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMzo0NDoxN1rOGqDy_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5MzM2MQ==", "bodyText": "Why these fields are null, i think available segments would have shardSpec, dimensions and metrics as well", "url": "https://github.com/apache/druid/pull/9883#discussion_r446493361", "createdAt": "2020-06-27T06:44:58Z", "author": {"login": "surekhasaharan"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -333,33 +330,30 @@ public TableType getJdbcTableType()\n               root\n           ))\n           .transform(val -> {\n-            try {\n-              if (segmentsAlreadySeen.contains(val.getKey())) {\n-                return null;\n-              }\n-              final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n-              final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n-              return new Object[]{\n-                  val.getKey(),\n-                  val.getKey().getDataSource(),\n-                  val.getKey().getInterval().getStart().toString(),\n-                  val.getKey().getInterval().getEnd().toString(),\n-                  val.getValue().getSegment().getSize(),\n-                  val.getKey().getVersion(),\n-                  (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n-                  numReplicas,\n-                  val.getValue().getNumRows(),\n-                  IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n-                  // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n-                  IS_AVAILABLE_TRUE,\n-                  val.getValue().isRealtime(),\n-                  IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n-                  jsonMapper.writeValueAsString(val.getKey())\n-              };\n-            }\n-            catch (JsonProcessingException e) {\n-              throw new RE(e, \"Error getting segment payload for segment %s\", val.getKey());\n+            if (segmentsAlreadySeen.contains(val.getKey())) {\n+              return null;\n             }\n+            final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n+            final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n+            return new Object[]{\n+                val.getKey(),\n+                val.getKey().getDataSource(),\n+                val.getKey().getInterval().getStart().toString(),\n+                val.getKey().getInterval().getEnd().toString(),\n+                val.getValue().getSegment().getSize(),\n+                val.getKey().getVersion(),\n+                (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n+                numReplicas,\n+                val.getValue().getNumRows(),\n+                IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n+                // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n+                IS_AVAILABLE_TRUE,\n+                val.getValue().isRealtime(),\n+                IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n+                null,\n+                null,\n+                null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5NDEwNw==", "bodyText": "I think you can get the values for those fields by adding them to AvailableSegmentMetadata from DruidSchema and populating in PartialSegmentData in SystemSchema", "url": "https://github.com/apache/druid/pull/9883#discussion_r446494107", "createdAt": "2020-06-27T06:53:56Z", "author": {"login": "surekhasaharan"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -333,33 +330,30 @@ public TableType getJdbcTableType()\n               root\n           ))\n           .transform(val -> {\n-            try {\n-              if (segmentsAlreadySeen.contains(val.getKey())) {\n-                return null;\n-              }\n-              final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n-              final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n-              return new Object[]{\n-                  val.getKey(),\n-                  val.getKey().getDataSource(),\n-                  val.getKey().getInterval().getStart().toString(),\n-                  val.getKey().getInterval().getEnd().toString(),\n-                  val.getValue().getSegment().getSize(),\n-                  val.getKey().getVersion(),\n-                  (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n-                  numReplicas,\n-                  val.getValue().getNumRows(),\n-                  IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n-                  // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n-                  IS_AVAILABLE_TRUE,\n-                  val.getValue().isRealtime(),\n-                  IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n-                  jsonMapper.writeValueAsString(val.getKey())\n-              };\n-            }\n-            catch (JsonProcessingException e) {\n-              throw new RE(e, \"Error getting segment payload for segment %s\", val.getKey());\n+            if (segmentsAlreadySeen.contains(val.getKey())) {\n+              return null;\n             }\n+            final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n+            final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n+            return new Object[]{\n+                val.getKey(),\n+                val.getKey().getDataSource(),\n+                val.getKey().getInterval().getStart().toString(),\n+                val.getKey().getInterval().getEnd().toString(),\n+                val.getValue().getSegment().getSize(),\n+                val.getKey().getVersion(),\n+                (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n+                numReplicas,\n+                val.getValue().getNumRows(),\n+                IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n+                // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n+                IS_AVAILABLE_TRUE,\n+                val.getValue().isRealtime(),\n+                IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n+                null,\n+                null,\n+                null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5MzM2MQ=="}, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1NTU4MQ==", "bodyText": "Hi @surekhasaharan, I have filled these null fields.", "url": "https://github.com/apache/druid/pull/9883#discussion_r446755581", "createdAt": "2020-06-29T03:44:17Z", "author": {"login": "yuanlihan"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -333,33 +330,30 @@ public TableType getJdbcTableType()\n               root\n           ))\n           .transform(val -> {\n-            try {\n-              if (segmentsAlreadySeen.contains(val.getKey())) {\n-                return null;\n-              }\n-              final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n-              final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n-              return new Object[]{\n-                  val.getKey(),\n-                  val.getKey().getDataSource(),\n-                  val.getKey().getInterval().getStart().toString(),\n-                  val.getKey().getInterval().getEnd().toString(),\n-                  val.getValue().getSegment().getSize(),\n-                  val.getKey().getVersion(),\n-                  (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n-                  numReplicas,\n-                  val.getValue().getNumRows(),\n-                  IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n-                  // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n-                  IS_AVAILABLE_TRUE,\n-                  val.getValue().isRealtime(),\n-                  IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n-                  jsonMapper.writeValueAsString(val.getKey())\n-              };\n-            }\n-            catch (JsonProcessingException e) {\n-              throw new RE(e, \"Error getting segment payload for segment %s\", val.getKey());\n+            if (segmentsAlreadySeen.contains(val.getKey())) {\n+              return null;\n             }\n+            final PartialSegmentData partialSegmentData = partialSegmentDataMap.get(val.getKey());\n+            final long numReplicas = partialSegmentData == null ? 0L : partialSegmentData.getNumReplicas();\n+            return new Object[]{\n+                val.getKey(),\n+                val.getKey().getDataSource(),\n+                val.getKey().getInterval().getStart().toString(),\n+                val.getKey().getInterval().getEnd().toString(),\n+                val.getValue().getSegment().getSize(),\n+                val.getKey().getVersion(),\n+                (long) val.getValue().getSegment().getShardSpec().getPartitionNum(),\n+                numReplicas,\n+                val.getValue().getNumRows(),\n+                IS_PUBLISHED_FALSE, // is_published is false for unpublished segments\n+                // is_available is assumed to be always true for segments announced by historicals or realtime tasks\n+                IS_AVAILABLE_TRUE,\n+                val.getValue().isRealtime(),\n+                IS_OVERSHADOWED_FALSE, // there is an assumption here that unpublished segments are never overshadowed\n+                null,\n+                null,\n+                null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5MzM2MQ=="}, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjExMzgzOnYy", "diffSide": "RIGHT", "path": "web-console/src/views/segments-view/segments-view.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QwNjo1MTowMlrOGpz0pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNTowOToxOFrOGqr6IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Mzg2MQ==", "bodyText": "I don't know TypeScript much, but shouldn't we add the additional fields to this query ?", "url": "https://github.com/apache/druid/pull/9883#discussion_r446493861", "createdAt": "2020-06-27T06:51:02Z", "author": {"login": "surekhasaharan"}, "path": "web-console/src/views/segments-view/segments-view.tsx", "diffHunk": "@@ -221,7 +221,7 @@ export class SegmentsView extends React.PureComponent<SegmentsViewProps, Segment\n           queryParts = compact([\n             `SELECT`,\n             `  (\"start\" || '/' || \"end\") AS \"interval\",`,\n-            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\", \"payload\"`,\n+            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\"`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc1MzE2NQ==", "bodyText": "Hi @surekhasaharan, I think the content in this popover already includes these fields.", "url": "https://github.com/apache/druid/pull/9883#discussion_r446753165", "createdAt": "2020-06-29T03:31:46Z", "author": {"login": "yuanlihan"}, "path": "web-console/src/views/segments-view/segments-view.tsx", "diffHunk": "@@ -221,7 +221,7 @@ export class SegmentsView extends React.PureComponent<SegmentsViewProps, Segment\n           queryParts = compact([\n             `SELECT`,\n             `  (\"start\" || '/' || \"end\") AS \"interval\",`,\n-            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\", \"payload\"`,\n+            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\"`,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Mzg2MQ=="}, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQxMjc2OA==", "bodyText": "Yeah, it looks like this information is fetched outside of system table from /druid/coordinator/v1/metadata/datasources/${datasourceId}/segments/${segmentId}", "url": "https://github.com/apache/druid/pull/9883#discussion_r447412768", "createdAt": "2020-06-30T05:09:18Z", "author": {"login": "clintropolis"}, "path": "web-console/src/views/segments-view/segments-view.tsx", "diffHunk": "@@ -221,7 +221,7 @@ export class SegmentsView extends React.PureComponent<SegmentsViewProps, Segment\n           queryParts = compact([\n             `SELECT`,\n             `  (\"start\" || '/' || \"end\") AS \"interval\",`,\n-            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\", \"payload\"`,\n+            `  \"segment_id\", \"datasource\", \"start\", \"end\", \"size\", \"version\", \"partition_num\", \"num_replicas\", \"num_rows\", \"is_published\", \"is_available\", \"is_realtime\", \"is_overshadowed\"`,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ5Mzg2MQ=="}, "originalCommit": {"oid": "b713308d75d926275475f9db28ce00485cf9058d"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2443, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}