{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3ODEwNzY4", "number": 10280, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxODo1Njo1OFrOEY1GbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjo1MjozOFrOEiUcIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NDcxMjc2OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxODo1Njo1OFrOHBUe8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxODo1Njo1OFrOHBUe8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE0NjIyNA==", "bodyText": "do we need to worry about abandoning resources after removing this? Should the exec possibly be shutdown in stopBeingLeader() in your patch?", "url": "https://github.com/apache/druid/pull/10280#discussion_r471146224", "createdAt": "2020-08-16T18:56:58Z", "author": {"login": "capistrant"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -733,11 +762,24 @@ public void run()\n       catch (Exception e) {\n         log.makeAlert(e, \"Caught exception, ignoring so that schedule keeps going.\").emit();\n       }\n-      finally {\n-        if (balancerExec != null) {\n-          balancerExec.shutdownNow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77b81b6bef3e62d48a0565a1cc7379c2a1ddfafd"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDQwODMxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxOToyMzo0NFrOHOq5vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDowNjo1M1rOHQNjWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0NTAyMg==", "bodyText": "I see DutiesRunnable used to be public with a protected constructor but was flipped to private/private in pull 9644 ... Now we are flipping the class and constructor to protected. I want to make sure @maytasm sees this PR and can comment on the idea of going back to protected from private.", "url": "https://github.com/apache/druid/pull/10280#discussion_r485145022", "createdAt": "2020-09-08T19:23:44Z", "author": {"login": "capistrant"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -647,22 +678,53 @@ private void stopBeingLeader()\n     return ImmutableList.of(compactSegments);\n   }\n \n-  private class DutiesRunnable implements Runnable\n+  protected class DutiesRunnable implements Runnable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd0666acee5e3cc46186626755278d42df1ce32"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3NzY0OQ==", "bodyText": "LGTM. Maybe add @VisibleForTesting too", "url": "https://github.com/apache/druid/pull/10280#discussion_r486677649", "createdAt": "2020-09-10T22:54:55Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -647,22 +678,53 @@ private void stopBeingLeader()\n     return ImmutableList.of(compactSegments);\n   }\n \n-  private class DutiesRunnable implements Runnable\n+  protected class DutiesRunnable implements Runnable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0NTAyMg=="}, "originalCommit": {"oid": "ebd0666acee5e3cc46186626755278d42df1ce32"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc2MTMwNw==", "bodyText": "added, and thanks for your time.", "url": "https://github.com/apache/druid/pull/10280#discussion_r486761307", "createdAt": "2020-09-11T04:06:53Z", "author": {"login": "ArvinZheng"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -647,22 +678,53 @@ private void stopBeingLeader()\n     return ImmutableList.of(compactSegments);\n   }\n \n-  private class DutiesRunnable implements Runnable\n+  protected class DutiesRunnable implements Runnable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0NTAyMg=="}, "originalCommit": {"oid": "ebd0666acee5e3cc46186626755278d42df1ce32"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNDc5OTQxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMToyNzoyMlrOHOumnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMDo0OTo1MlrOHPZ0VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIwNTY2MA==", "bodyText": "unused variables should be removed instead of commented", "url": "https://github.com/apache/druid/pull/10280#discussion_r485205660", "createdAt": "2020-09-08T21:27:22Z", "author": {"login": "capistrant"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -653,8 +683,8 @@ private void stopBeingLeader()\n     private final long startTimeNanos = System.nanoTime();\n     private final List<CoordinatorDuty> duties;\n     private final int startingLeaderCounter;\n-    private int cachedBalancerThreadNumber;\n-    private ListeningExecutorService balancerExec;\n+    //private int cachedBalancerThreadNumber;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd0666acee5e3cc46186626755278d42df1ce32"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTkxMzY4NQ==", "bodyText": "oh, good catch, will remove them, thanks for reviewing", "url": "https://github.com/apache/druid/pull/10280#discussion_r485913685", "createdAt": "2020-09-09T20:49:52Z", "author": {"login": "ArvinZheng"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -653,8 +683,8 @@ private void stopBeingLeader()\n     private final long startTimeNanos = System.nanoTime();\n     private final List<CoordinatorDuty> duties;\n     private final int startingLeaderCounter;\n-    private int cachedBalancerThreadNumber;\n-    private ListeningExecutorService balancerExec;\n+    //private int cachedBalancerThreadNumber;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIwNTY2MA=="}, "originalCommit": {"oid": "ebd0666acee5e3cc46186626755278d42df1ce32"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDIxODYyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjo1MjoyNFrOHQIZfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDowNzoyOFrOHQNjzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3Njg2Mg==", "bodyText": "nit: comment is not needed since we already have @VisibleForTesting annotation", "url": "https://github.com/apache/druid/pull/10280#discussion_r486676862", "createdAt": "2020-09-10T22:52:24Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -483,6 +487,24 @@ public void moveSegment(\n     }\n   }\n \n+  /**\n+   * This method should be used for only testing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e502cb45efd86ff505976ce0b4df73bf2ce25f1"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc2MTQyMg==", "bodyText": "addressed", "url": "https://github.com/apache/druid/pull/10280#discussion_r486761422", "createdAt": "2020-09-11T04:07:28Z", "author": {"login": "ArvinZheng"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -483,6 +487,24 @@ public void moveSegment(\n     }\n   }\n \n+  /**\n+   * This method should be used for only testing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3Njg2Mg=="}, "originalCommit": {"oid": "1e502cb45efd86ff505976ce0b4df73bf2ce25f1"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDIxOTIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMjo1MjozOFrOHQIZzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDowNzozM1rOHQNj3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3Njk0Mw==", "bodyText": "nit: same here as above", "url": "https://github.com/apache/druid/pull/10280#discussion_r486676943", "createdAt": "2020-09-10T22:52:38Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -483,6 +487,24 @@ public void moveSegment(\n     }\n   }\n \n+  /**\n+   * This method should be used for only testing.\n+   */\n+  @VisibleForTesting\n+  public int getCachedBalancerThreadNumber()\n+  {\n+    return cachedBalancerThreadNumber;\n+  }\n+\n+  /**\n+   * This method should be used for only testing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e502cb45efd86ff505976ce0b4df73bf2ce25f1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc2MTQzOQ==", "bodyText": "addressed", "url": "https://github.com/apache/druid/pull/10280#discussion_r486761439", "createdAt": "2020-09-11T04:07:33Z", "author": {"login": "ArvinZheng"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/DruidCoordinator.java", "diffHunk": "@@ -483,6 +487,24 @@ public void moveSegment(\n     }\n   }\n \n+  /**\n+   * This method should be used for only testing.\n+   */\n+  @VisibleForTesting\n+  public int getCachedBalancerThreadNumber()\n+  {\n+    return cachedBalancerThreadNumber;\n+  }\n+\n+  /**\n+   * This method should be used for only testing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3Njk0Mw=="}, "originalCommit": {"oid": "1e502cb45efd86ff505976ce0b4df73bf2ce25f1"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2279, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}