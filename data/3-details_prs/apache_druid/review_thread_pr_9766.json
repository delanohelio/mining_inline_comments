{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NjU2ODc3", "number": 9766, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzowMToxOFrOD2B0Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzozODo1OFrOD2CJTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTc5NDg3OnYy", "diffSide": "RIGHT", "path": "docs/tutorials/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzowMToxOFrOGLvQBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODoxMjowMFrOGMw_qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTY3MQ==", "bodyText": "Maybe \"you'll need a larger machine and configuration profile\"?  This paragraph talks about configuration profiles, and the original description mentioned \"we recommend a larger configuration than micro-quickstart\".  The focus on the configuration profile seems to have lost here.", "url": "https://github.com/apache/druid/pull/9766#discussion_r414961671", "createdAt": "2020-04-25T03:01:18Z", "author": {"login": "weishiuntsai"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -23,71 +23,63 @@ title: \"Quickstart\"\n   -->\n \n \n-In this quickstart, we will download Druid and set it up on a single machine. The cluster will be ready to load data\n-after completing this initial setup.\n+This quickstart gets you started with Apache Druid and introduces you to some of its basic features. \n+Following these steps, you will install Druid and load sample \n+data using its native batch ingestion feature. \n \n-Before beginning the quickstart, it is helpful to read the [general Druid overview](../design/index.md) and the\n-[ingestion overview](../ingestion/index.md), as the tutorials will refer to concepts discussed on those pages.\n+Before starting, you may want to read the [general Druid overview](../design/index.md) and\n+[ingestion overview](../ingestion/index.md), as the tutorials refer to concepts discussed on those pages.\n \n-## Prerequisites\n+## Requirements\n \n-### Software\n+You can follow these steps on a relatively small machine, such as a laptop with around 4 CPU and 16 GB of RAM. \n \n-You will need:\n+Druid comes with several startup configuration profiles for a range of machine sizes. \n+The `micro-quickstart`configuration profile shown here is suitable for early evaluation scenarios. To explore \n+Druid's performance or scaling capabilities, you'll need a larger machine.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAzODgyNA==", "bodyText": "Done.", "url": "https://github.com/apache/druid/pull/9766#discussion_r416038824", "createdAt": "2020-04-27T18:12:00Z", "author": {"login": "sthetland"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -23,71 +23,63 @@ title: \"Quickstart\"\n   -->\n \n \n-In this quickstart, we will download Druid and set it up on a single machine. The cluster will be ready to load data\n-after completing this initial setup.\n+This quickstart gets you started with Apache Druid and introduces you to some of its basic features. \n+Following these steps, you will install Druid and load sample \n+data using its native batch ingestion feature. \n \n-Before beginning the quickstart, it is helpful to read the [general Druid overview](../design/index.md) and the\n-[ingestion overview](../ingestion/index.md), as the tutorials will refer to concepts discussed on those pages.\n+Before starting, you may want to read the [general Druid overview](../design/index.md) and\n+[ingestion overview](../ingestion/index.md), as the tutorials refer to concepts discussed on those pages.\n \n-## Prerequisites\n+## Requirements\n \n-### Software\n+You can follow these steps on a relatively small machine, such as a laptop with around 4 CPU and 16 GB of RAM. \n \n-You will need:\n+Druid comes with several startup configuration profiles for a range of machine sizes. \n+The `micro-quickstart`configuration profile shown here is suitable for early evaluation scenarios. To explore \n+Druid's performance or scaling capabilities, you'll need a larger machine.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTY3MQ=="}, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTgwMjg5OnYy", "diffSide": "RIGHT", "path": "docs/tutorials/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzowNjo0OVrOGLvTjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzowNjo0OVrOGLvTjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MjU3NA==", "bodyText": "\"X-Large\", instead of \"X-large\" perhaps, to be consistent with \"Nano-Quickstart\".  In single-server.md, it uses \"nano-quickstart\", \"xlarge\" at the beginning, and \"Nano-Quickstart\", \"X-Large\" at the end.  If \"Nano-Quickstart\" is used here, I think \"X-Large\" should go with it.", "url": "https://github.com/apache/druid/pull/9766#discussion_r414962574", "createdAt": "2020-04-25T03:06:49Z", "author": {"login": "weishiuntsai"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -23,71 +23,63 @@ title: \"Quickstart\"\n   -->\n \n \n-In this quickstart, we will download Druid and set it up on a single machine. The cluster will be ready to load data\n-after completing this initial setup.\n+This quickstart gets you started with Apache Druid and introduces you to some of its basic features. \n+Following these steps, you will install Druid and load sample \n+data using its native batch ingestion feature. \n \n-Before beginning the quickstart, it is helpful to read the [general Druid overview](../design/index.md) and the\n-[ingestion overview](../ingestion/index.md), as the tutorials will refer to concepts discussed on those pages.\n+Before starting, you may want to read the [general Druid overview](../design/index.md) and\n+[ingestion overview](../ingestion/index.md), as the tutorials refer to concepts discussed on those pages.\n \n-## Prerequisites\n+## Requirements\n \n-### Software\n+You can follow these steps on a relatively small machine, such as a laptop with around 4 CPU and 16 GB of RAM. \n \n-You will need:\n+Druid comes with several startup configuration profiles for a range of machine sizes. \n+The `micro-quickstart`configuration profile shown here is suitable for early evaluation scenarios. To explore \n+Druid's performance or scaling capabilities, you'll need a larger machine.\n \n-* **Java 8 (8u92+) or later**\n-* Linux, Mac OS X, or other Unix-like OS (Windows is not supported)\n-\n-> **Warning:** Druid only officially supports Java 8. Any Java version later than 8 is still experimental.\n->\n-> If needed, you can specify where to find Java using the environment variables `DRUID_JAVA_HOME` or `JAVA_HOME`. For more details run the verify-java script.\n+The configuration profiles included with Druid range from the even smaller _Nano-Quickstart_ configuration (1 CPU, 4GB RAM) \n+to the _X-large_ configuration (64 CPU, 512GB RAM). For more information, see ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTgwNjYyOnYy", "diffSide": "LEFT", "path": "docs/tutorials/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzowOTo0OVrOGLvVPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODo0MjozNVrOGMyPkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MzAwNw==", "bodyText": "In my personal opinion, I find this part useful when I was reading the original version.  It gives the reader a sense of what's included in the package.", "url": "https://github.com/apache/druid/pull/9766#discussion_r414963007", "createdAt": "2020-04-25T03:09:49Z", "author": {"login": "weishiuntsai"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -23,71 +23,63 @@ title: \"Quickstart\"\n   -->\n \n \n-In this quickstart, we will download Druid and set it up on a single machine. The cluster will be ready to load data\n-after completing this initial setup.\n+This quickstart gets you started with Apache Druid and introduces you to some of its basic features. \n+Following these steps, you will install Druid and load sample \n+data using its native batch ingestion feature. \n \n-Before beginning the quickstart, it is helpful to read the [general Druid overview](../design/index.md) and the\n-[ingestion overview](../ingestion/index.md), as the tutorials will refer to concepts discussed on those pages.\n+Before starting, you may want to read the [general Druid overview](../design/index.md) and\n+[ingestion overview](../ingestion/index.md), as the tutorials refer to concepts discussed on those pages.\n \n-## Prerequisites\n+## Requirements\n \n-### Software\n+You can follow these steps on a relatively small machine, such as a laptop with around 4 CPU and 16 GB of RAM. \n \n-You will need:\n+Druid comes with several startup configuration profiles for a range of machine sizes. \n+The `micro-quickstart`configuration profile shown here is suitable for early evaluation scenarios. To explore \n+Druid's performance or scaling capabilities, you'll need a larger machine.\n \n-* **Java 8 (8u92+) or later**\n-* Linux, Mac OS X, or other Unix-like OS (Windows is not supported)\n-\n-> **Warning:** Druid only officially supports Java 8. Any Java version later than 8 is still experimental.\n->\n-> If needed, you can specify where to find Java using the environment variables `DRUID_JAVA_HOME` or `JAVA_HOME`. For more details run the verify-java script.\n+The configuration profiles included with Druid range from the even smaller _Nano-Quickstart_ configuration (1 CPU, 4GB RAM) \n+to the _X-large_ configuration (64 CPU, 512GB RAM). For more information, see \n+[Single server deployment](operations/single-server). Alternatively, see [Clustered deployment](tutorials/cluster) for \n+information on deploying Druid services across clustered machines. \n \n-### Hardware\n+The software requirements for the installation machine are:\n \n-Druid includes several example [single-server configurations](../operations/single-server.md), along with scripts to\n-start the Druid processes using these configurations.\n+* Linux, Mac OS X, or other Unix-like OS (Windows is not supported)\n+* Java 8, Update 92 or later (8u92+)\n \n-If you're running on a small machine such as a laptop for a quick evaluation, the `micro-quickstart` configuration is\n-a good choice, sized for a 4CPU/16GB RAM environment.\n+> Druid officially supports Java 8 only. Support for later major versions of Java is currently in experimental status.\n \n-If you plan to use the single-machine deployment for further evaluation beyond the tutorials, we recommend a larger\n-configuration than `micro-quickstart`.\n+> Druid relies on the environment variables `JAVA_HOME` or `DRUID_JAVA_HOME` to find Java on the machine. You can set \n+`DRUID_JAVA_HOME` if there is more than one instance of Java. To verify Java requirements for your environment, run the \n+`bin/verify-java` script.\n \n-## Getting started\n \n-[Download](https://www.apache.org/dyn/closer.cgi?path=/druid/{{DRUIDVERSION}}/apache-druid-{{DRUIDVERSION}}-bin.tar.gz)\n-the {{DRUIDVERSION}} release.\n+## Step 1. Install Druid\n \n-Extract Druid by running the following commands in your terminal:\n+After confirming the [requirements](#requirements), follow these steps: \n \n-```bash\n-tar -xzf apache-druid-{{DRUIDVERSION}}-bin.tar.gz\n-cd apache-druid-{{DRUIDVERSION}}\n-```\n+1. Download\n+the [{{DRUIDVERSION}} release](https://www.apache.org/dyn/closer.cgi?path=/druid/{{DRUIDVERSION}}/apache-druid-{{DRUIDVERSION}}-bin.tar.gz).\n+2. In your terminal, extract Druid and change directories to the distribution directory:\n \n-In the package, you should find:\n+   ```bash\n+   tar -xzf apache-druid-{{DRUIDVERSION}}-bin.tar.gz\n+   cd apache-druid-{{DRUIDVERSION}}\n+   ```\n+In the directory, you'll find `LICENSE` and `NOTICE` files and subdirectories for executable files, configuration files, sample data and more.\n \n-* `LICENSE` and `NOTICE` files\n-* `bin/*` - scripts useful for this quickstart\n-* `conf/*` - example configurations for single-server and clustered setup\n-* `extensions/*` - core Druid extensions\n-* `hadoop-dependencies/*` - Druid Hadoop dependencies\n-* `lib/*` - libraries and dependencies for core Druid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1OTI4Mw==", "bodyText": "Thanks, I'll keep a note of this and see how this change goes over... I removed the list based on previous feedback (plus a directory and file were missing, so the content was out of date).\nI'm open to restoring though, especially if installation isn't covered elsewhere..I'd say it's a lot of detail for a quickstart, especially one that's gotten much longer, but the right level for an installation guide.", "url": "https://github.com/apache/druid/pull/9766#discussion_r416059283", "createdAt": "2020-04-27T18:42:35Z", "author": {"login": "sthetland"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -23,71 +23,63 @@ title: \"Quickstart\"\n   -->\n \n \n-In this quickstart, we will download Druid and set it up on a single machine. The cluster will be ready to load data\n-after completing this initial setup.\n+This quickstart gets you started with Apache Druid and introduces you to some of its basic features. \n+Following these steps, you will install Druid and load sample \n+data using its native batch ingestion feature. \n \n-Before beginning the quickstart, it is helpful to read the [general Druid overview](../design/index.md) and the\n-[ingestion overview](../ingestion/index.md), as the tutorials will refer to concepts discussed on those pages.\n+Before starting, you may want to read the [general Druid overview](../design/index.md) and\n+[ingestion overview](../ingestion/index.md), as the tutorials refer to concepts discussed on those pages.\n \n-## Prerequisites\n+## Requirements\n \n-### Software\n+You can follow these steps on a relatively small machine, such as a laptop with around 4 CPU and 16 GB of RAM. \n \n-You will need:\n+Druid comes with several startup configuration profiles for a range of machine sizes. \n+The `micro-quickstart`configuration profile shown here is suitable for early evaluation scenarios. To explore \n+Druid's performance or scaling capabilities, you'll need a larger machine.\n \n-* **Java 8 (8u92+) or later**\n-* Linux, Mac OS X, or other Unix-like OS (Windows is not supported)\n-\n-> **Warning:** Druid only officially supports Java 8. Any Java version later than 8 is still experimental.\n->\n-> If needed, you can specify where to find Java using the environment variables `DRUID_JAVA_HOME` or `JAVA_HOME`. For more details run the verify-java script.\n+The configuration profiles included with Druid range from the even smaller _Nano-Quickstart_ configuration (1 CPU, 4GB RAM) \n+to the _X-large_ configuration (64 CPU, 512GB RAM). For more information, see \n+[Single server deployment](operations/single-server). Alternatively, see [Clustered deployment](tutorials/cluster) for \n+information on deploying Druid services across clustered machines. \n \n-### Hardware\n+The software requirements for the installation machine are:\n \n-Druid includes several example [single-server configurations](../operations/single-server.md), along with scripts to\n-start the Druid processes using these configurations.\n+* Linux, Mac OS X, or other Unix-like OS (Windows is not supported)\n+* Java 8, Update 92 or later (8u92+)\n \n-If you're running on a small machine such as a laptop for a quick evaluation, the `micro-quickstart` configuration is\n-a good choice, sized for a 4CPU/16GB RAM environment.\n+> Druid officially supports Java 8 only. Support for later major versions of Java is currently in experimental status.\n \n-If you plan to use the single-machine deployment for further evaluation beyond the tutorials, we recommend a larger\n-configuration than `micro-quickstart`.\n+> Druid relies on the environment variables `JAVA_HOME` or `DRUID_JAVA_HOME` to find Java on the machine. You can set \n+`DRUID_JAVA_HOME` if there is more than one instance of Java. To verify Java requirements for your environment, run the \n+`bin/verify-java` script.\n \n-## Getting started\n \n-[Download](https://www.apache.org/dyn/closer.cgi?path=/druid/{{DRUIDVERSION}}/apache-druid-{{DRUIDVERSION}}-bin.tar.gz)\n-the {{DRUIDVERSION}} release.\n+## Step 1. Install Druid\n \n-Extract Druid by running the following commands in your terminal:\n+After confirming the [requirements](#requirements), follow these steps: \n \n-```bash\n-tar -xzf apache-druid-{{DRUIDVERSION}}-bin.tar.gz\n-cd apache-druid-{{DRUIDVERSION}}\n-```\n+1. Download\n+the [{{DRUIDVERSION}} release](https://www.apache.org/dyn/closer.cgi?path=/druid/{{DRUIDVERSION}}/apache-druid-{{DRUIDVERSION}}-bin.tar.gz).\n+2. In your terminal, extract Druid and change directories to the distribution directory:\n \n-In the package, you should find:\n+   ```bash\n+   tar -xzf apache-druid-{{DRUIDVERSION}}-bin.tar.gz\n+   cd apache-druid-{{DRUIDVERSION}}\n+   ```\n+In the directory, you'll find `LICENSE` and `NOTICE` files and subdirectories for executable files, configuration files, sample data and more.\n \n-* `LICENSE` and `NOTICE` files\n-* `bin/*` - scripts useful for this quickstart\n-* `conf/*` - example configurations for single-server and clustered setup\n-* `extensions/*` - core Druid extensions\n-* `hadoop-dependencies/*` - Druid Hadoop dependencies\n-* `lib/*` - libraries and dependencies for core Druid", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MzAwNw=="}, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTgxOTI5OnYy", "diffSide": "RIGHT", "path": "docs/tutorials/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzoxODo0MFrOGLvayw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzoxODo0MFrOGLvayw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2NDQyNw==", "bodyText": "I think it's worthwhile to mention the data file that we will be loading here.  The original version has this part \"This sample data is located at quickstart/tutorial/wikiticker-2015-09-12-sampled.json.gz from the Druid package root.\".  That makes it a bit more clear before diving into base directory and file filer.  I agree that the part talking about columns can go.  I felt it was a bit too much even when I first read it.", "url": "https://github.com/apache/druid/pull/9766#discussion_r414964427", "createdAt": "2020-04-25T03:18:40Z", "author": {"login": "weishiuntsai"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -99,96 +91,173 @@ $ ./bin/start-micro-quickstart\n [Fri May  3 11:40:50 2019] Running command[middleManager], logging to[/apache-druid-{{DRUIDVERSION}}/var/sv/middleManager.log]: bin/run-druid middleManager conf/druid/single-server/micro-quickstart\n ```\n \n-All persistent state such as the cluster metadata store and segments for the services will be kept in the `var` directory under the apache-druid-{{DRUIDVERSION}} package root. Logs for the services are located at `var/sv`.\n+All persistent state, such as the cluster metadata store and segments for the services, are kept in the `var` directory under \n+the Druid root directory, apache-druid-{{DRUIDVERSION}}. Each service writes to a log file under `var/sv`, as noted in the startup script output above.\n+\n+At any time, you can revert Druid to its original, post-installation state by deleting the entire `var` directory. You may\n+want to do this, for example, between Druid tutorials or after experimentation, to start with a fresh instance. \n+\n+To stop Druid at any time, use CTRL-C in the terminal. This exits the `bin/start-micro-quickstart` script and \n+terminates all Druid processes. \n+\n \n-Later on, if you'd like to stop the services, CTRL-C to exit the `bin/start-micro-quickstart` script, which will terminate the Druid processes.\n+## Step 3. Open the Druid console \n \n-Once the cluster has started, you can navigate to [http://localhost:8888](http://localhost:8888).\n-The [Druid router process](../design/router.md), which serves the [Druid console](../operations/druid-console.md), resides at this address.\n+After the Druid services finish startup, open the [Druid console](../operations/druid-console.md) at [http://localhost:8888](http://localhost:8888). \n \n ![Druid console](../assets/tutorial-quickstart-01.png \"Druid console\")\n \n-It takes a few seconds for all the Druid processes to fully start up. If you open the console immediately after starting the services, you may see some errors that you can safely ignore.\n-\n-\n-## Loading data\n-\n-### Tutorial dataset\n-\n-For the following data loading tutorials, we have included a sample data file containing Wikipedia page edit events that occurred on 2015-09-12.\n-\n-This sample data is located at `quickstart/tutorial/wikiticker-2015-09-12-sampled.json.gz` from the Druid package root.\n-The page edit events are stored as JSON objects in a text file.\n-\n-The sample data has the following columns, and an example event is shown below:\n-\n-  * added\n-  * channel\n-  * cityName\n-  * comment\n-  * countryIsoCode\n-  * countryName\n-  * deleted\n-  * delta\n-  * isAnonymous\n-  * isMinor\n-  * isNew\n-  * isRobot\n-  * isUnpatrolled\n-  * metroCode\n-  * namespace\n-  * page\n-  * regionIsoCode\n-  * regionName\n-  * user\n-\n-```json\n-{\n-  \"timestamp\":\"2015-09-12T20:03:45.018Z\",\n-  \"channel\":\"#en.wikipedia\",\n-  \"namespace\":\"Main\",\n-  \"page\":\"Spider-Man's powers and equipment\",\n-  \"user\":\"foobar\",\n-  \"comment\":\"/* Artificial web-shooters */\",\n-  \"cityName\":\"New York\",\n-  \"regionName\":\"New York\",\n-  \"regionIsoCode\":\"NY\",\n-  \"countryName\":\"United States\",\n-  \"countryIsoCode\":\"US\",\n-  \"isAnonymous\":false,\n-  \"isNew\":false,\n-  \"isMinor\":false,\n-  \"isRobot\":false,\n-  \"isUnpatrolled\":false,\n-  \"added\":99,\n-  \"delta\":99,\n-  \"deleted\":0,\n-}\n-```\n+It may take a few seconds for all Druid services to finish starting, including the [Druid router](../design/router.md), which serves the console. If you attempt to open the Druid console before startup is complete, you may see errors in the browser. Wait a few moments and try again. \n \n \n-### Data loading tutorials\n+## Step 4. Load data\n \n-The following tutorials demonstrate various methods of loading data into Druid, including both batch and streaming use cases.\n-All tutorials assume that you are using the `micro-quickstart` single-machine configuration mentioned above.\n \n-- [Loading a file](./tutorial-batch.md) - this tutorial demonstrates how to perform a batch file load, using Druid's native batch ingestion.\n-- [Loading stream data from Apache Kafka](./tutorial-kafka.md) - this tutorial demonstrates how to load streaming data from a Kafka topic.\n-- [Loading a file using Apache Hadoop](./tutorial-batch-hadoop.md) - this tutorial demonstrates how to perform a batch file load, using a remote Hadoop cluster.\n-- [Writing your own ingestion spec](./tutorial-ingestion-spec.md) - this tutorial demonstrates how to write a new ingestion spec and use it to load data.\n+Ingestion specs define the schema of the data Druid reads and stores. You can write ingestion specs by hand or using the _data loader_, \n+as we will do here. \n \n-### Resetting cluster state\n+For this tutorial, we'll load sample data bundled with Druid that represents Wikipedia page edits on a given day. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTgzMzE4OnYy", "diffSide": "RIGHT", "path": "docs/tutorials/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzoyODozMFrOGLvg5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzoyODozMFrOGLvg5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2NTk4OA==", "bodyText": "We might want to mention that the tutorial here is to do the batch file load using Druid's native batch ingestion.  The original page separates the data loading into 4 different links \"Loading a file\", \"Loading stream data from Apache Kafka\", \"Loading a file using Apache Hadoop\" and \"Writing your own ingestion spec\" with explanations after each link.  That makes it clear about what the user is reading when a link is clicked.  But once we move part of content from \"Loading a file\" here, it becomes less clear that we will be doing batch file load with native batch ingestion here.", "url": "https://github.com/apache/druid/pull/9766#discussion_r414965988", "createdAt": "2020-04-25T03:28:30Z", "author": {"login": "weishiuntsai"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -99,96 +91,173 @@ $ ./bin/start-micro-quickstart\n [Fri May  3 11:40:50 2019] Running command[middleManager], logging to[/apache-druid-{{DRUIDVERSION}}/var/sv/middleManager.log]: bin/run-druid middleManager conf/druid/single-server/micro-quickstart\n ```\n \n-All persistent state such as the cluster metadata store and segments for the services will be kept in the `var` directory under the apache-druid-{{DRUIDVERSION}} package root. Logs for the services are located at `var/sv`.\n+All persistent state, such as the cluster metadata store and segments for the services, are kept in the `var` directory under \n+the Druid root directory, apache-druid-{{DRUIDVERSION}}. Each service writes to a log file under `var/sv`, as noted in the startup script output above.\n+\n+At any time, you can revert Druid to its original, post-installation state by deleting the entire `var` directory. You may\n+want to do this, for example, between Druid tutorials or after experimentation, to start with a fresh instance. \n+\n+To stop Druid at any time, use CTRL-C in the terminal. This exits the `bin/start-micro-quickstart` script and \n+terminates all Druid processes. \n+\n \n-Later on, if you'd like to stop the services, CTRL-C to exit the `bin/start-micro-quickstart` script, which will terminate the Druid processes.\n+## Step 3. Open the Druid console \n \n-Once the cluster has started, you can navigate to [http://localhost:8888](http://localhost:8888).\n-The [Druid router process](../design/router.md), which serves the [Druid console](../operations/druid-console.md), resides at this address.\n+After the Druid services finish startup, open the [Druid console](../operations/druid-console.md) at [http://localhost:8888](http://localhost:8888). \n \n ![Druid console](../assets/tutorial-quickstart-01.png \"Druid console\")\n \n-It takes a few seconds for all the Druid processes to fully start up. If you open the console immediately after starting the services, you may see some errors that you can safely ignore.\n-\n-\n-## Loading data\n-\n-### Tutorial dataset\n-\n-For the following data loading tutorials, we have included a sample data file containing Wikipedia page edit events that occurred on 2015-09-12.\n-\n-This sample data is located at `quickstart/tutorial/wikiticker-2015-09-12-sampled.json.gz` from the Druid package root.\n-The page edit events are stored as JSON objects in a text file.\n-\n-The sample data has the following columns, and an example event is shown below:\n-\n-  * added\n-  * channel\n-  * cityName\n-  * comment\n-  * countryIsoCode\n-  * countryName\n-  * deleted\n-  * delta\n-  * isAnonymous\n-  * isMinor\n-  * isNew\n-  * isRobot\n-  * isUnpatrolled\n-  * metroCode\n-  * namespace\n-  * page\n-  * regionIsoCode\n-  * regionName\n-  * user\n-\n-```json\n-{\n-  \"timestamp\":\"2015-09-12T20:03:45.018Z\",\n-  \"channel\":\"#en.wikipedia\",\n-  \"namespace\":\"Main\",\n-  \"page\":\"Spider-Man's powers and equipment\",\n-  \"user\":\"foobar\",\n-  \"comment\":\"/* Artificial web-shooters */\",\n-  \"cityName\":\"New York\",\n-  \"regionName\":\"New York\",\n-  \"regionIsoCode\":\"NY\",\n-  \"countryName\":\"United States\",\n-  \"countryIsoCode\":\"US\",\n-  \"isAnonymous\":false,\n-  \"isNew\":false,\n-  \"isMinor\":false,\n-  \"isRobot\":false,\n-  \"isUnpatrolled\":false,\n-  \"added\":99,\n-  \"delta\":99,\n-  \"deleted\":0,\n-}\n-```\n+It may take a few seconds for all Druid services to finish starting, including the [Druid router](../design/router.md), which serves the console. If you attempt to open the Druid console before startup is complete, you may see errors in the browser. Wait a few moments and try again. \n \n \n-### Data loading tutorials\n+## Step 4. Load data\n \n-The following tutorials demonstrate various methods of loading data into Druid, including both batch and streaming use cases.\n-All tutorials assume that you are using the `micro-quickstart` single-machine configuration mentioned above.\n \n-- [Loading a file](./tutorial-batch.md) - this tutorial demonstrates how to perform a batch file load, using Druid's native batch ingestion.\n-- [Loading stream data from Apache Kafka](./tutorial-kafka.md) - this tutorial demonstrates how to load streaming data from a Kafka topic.\n-- [Loading a file using Apache Hadoop](./tutorial-batch-hadoop.md) - this tutorial demonstrates how to perform a batch file load, using a remote Hadoop cluster.\n-- [Writing your own ingestion spec](./tutorial-ingestion-spec.md) - this tutorial demonstrates how to write a new ingestion spec and use it to load data.\n+Ingestion specs define the schema of the data Druid reads and stores. You can write ingestion specs by hand or using the _data loader_, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 200}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTgzNTU1OnYy", "diffSide": "RIGHT", "path": "docs/tutorials/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzozMDoxMlrOGLvh5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzozMDoxMlrOGLvh5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2NjI0Ng==", "bodyText": "\"Segment Granularity\" should be \"Segment granularity\"", "url": "https://github.com/apache/druid/pull/9766#discussion_r414966246", "createdAt": "2020-04-25T03:30:12Z", "author": {"login": "weishiuntsai"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -99,96 +91,173 @@ $ ./bin/start-micro-quickstart\n [Fri May  3 11:40:50 2019] Running command[middleManager], logging to[/apache-druid-{{DRUIDVERSION}}/var/sv/middleManager.log]: bin/run-druid middleManager conf/druid/single-server/micro-quickstart\n ```\n \n-All persistent state such as the cluster metadata store and segments for the services will be kept in the `var` directory under the apache-druid-{{DRUIDVERSION}} package root. Logs for the services are located at `var/sv`.\n+All persistent state, such as the cluster metadata store and segments for the services, are kept in the `var` directory under \n+the Druid root directory, apache-druid-{{DRUIDVERSION}}. Each service writes to a log file under `var/sv`, as noted in the startup script output above.\n+\n+At any time, you can revert Druid to its original, post-installation state by deleting the entire `var` directory. You may\n+want to do this, for example, between Druid tutorials or after experimentation, to start with a fresh instance. \n+\n+To stop Druid at any time, use CTRL-C in the terminal. This exits the `bin/start-micro-quickstart` script and \n+terminates all Druid processes. \n+\n \n-Later on, if you'd like to stop the services, CTRL-C to exit the `bin/start-micro-quickstart` script, which will terminate the Druid processes.\n+## Step 3. Open the Druid console \n \n-Once the cluster has started, you can navigate to [http://localhost:8888](http://localhost:8888).\n-The [Druid router process](../design/router.md), which serves the [Druid console](../operations/druid-console.md), resides at this address.\n+After the Druid services finish startup, open the [Druid console](../operations/druid-console.md) at [http://localhost:8888](http://localhost:8888). \n \n ![Druid console](../assets/tutorial-quickstart-01.png \"Druid console\")\n \n-It takes a few seconds for all the Druid processes to fully start up. If you open the console immediately after starting the services, you may see some errors that you can safely ignore.\n-\n-\n-## Loading data\n-\n-### Tutorial dataset\n-\n-For the following data loading tutorials, we have included a sample data file containing Wikipedia page edit events that occurred on 2015-09-12.\n-\n-This sample data is located at `quickstart/tutorial/wikiticker-2015-09-12-sampled.json.gz` from the Druid package root.\n-The page edit events are stored as JSON objects in a text file.\n-\n-The sample data has the following columns, and an example event is shown below:\n-\n-  * added\n-  * channel\n-  * cityName\n-  * comment\n-  * countryIsoCode\n-  * countryName\n-  * deleted\n-  * delta\n-  * isAnonymous\n-  * isMinor\n-  * isNew\n-  * isRobot\n-  * isUnpatrolled\n-  * metroCode\n-  * namespace\n-  * page\n-  * regionIsoCode\n-  * regionName\n-  * user\n-\n-```json\n-{\n-  \"timestamp\":\"2015-09-12T20:03:45.018Z\",\n-  \"channel\":\"#en.wikipedia\",\n-  \"namespace\":\"Main\",\n-  \"page\":\"Spider-Man's powers and equipment\",\n-  \"user\":\"foobar\",\n-  \"comment\":\"/* Artificial web-shooters */\",\n-  \"cityName\":\"New York\",\n-  \"regionName\":\"New York\",\n-  \"regionIsoCode\":\"NY\",\n-  \"countryName\":\"United States\",\n-  \"countryIsoCode\":\"US\",\n-  \"isAnonymous\":false,\n-  \"isNew\":false,\n-  \"isMinor\":false,\n-  \"isRobot\":false,\n-  \"isUnpatrolled\":false,\n-  \"added\":99,\n-  \"delta\":99,\n-  \"deleted\":0,\n-}\n-```\n+It may take a few seconds for all Druid services to finish starting, including the [Druid router](../design/router.md), which serves the console. If you attempt to open the Druid console before startup is complete, you may see errors in the browser. Wait a few moments and try again. \n \n \n-### Data loading tutorials\n+## Step 4. Load data\n \n-The following tutorials demonstrate various methods of loading data into Druid, including both batch and streaming use cases.\n-All tutorials assume that you are using the `micro-quickstart` single-machine configuration mentioned above.\n \n-- [Loading a file](./tutorial-batch.md) - this tutorial demonstrates how to perform a batch file load, using Druid's native batch ingestion.\n-- [Loading stream data from Apache Kafka](./tutorial-kafka.md) - this tutorial demonstrates how to load streaming data from a Kafka topic.\n-- [Loading a file using Apache Hadoop](./tutorial-batch-hadoop.md) - this tutorial demonstrates how to perform a batch file load, using a remote Hadoop cluster.\n-- [Writing your own ingestion spec](./tutorial-ingestion-spec.md) - this tutorial demonstrates how to write a new ingestion spec and use it to load data.\n+Ingestion specs define the schema of the data Druid reads and stores. You can write ingestion specs by hand or using the _data loader_, \n+as we will do here. \n \n-### Resetting cluster state\n+For this tutorial, we'll load sample data bundled with Druid that represents Wikipedia page edits on a given day. \n \n-If you want a clean start after stopping the services, delete the `var` directory and run the `bin/start-micro-quickstart` script again.\n+1. Click **Load data** from the Druid console header (![Load data](../assets/tutorial-batch-data-loader-00.png)).\n \n-Once every service has started, you are now ready to load data.\n+2. Select the **Local disk** tile and then click **Connect data**.\n \n-#### Resetting Kafka\n+   ![Data loader init](../assets/tutorial-batch-data-loader-01.png \"Data loader init\")\n+\n+3. Enter the following values: \n+\n+   - **Base directory**: `quickstart/tutorial/`\n+\n+   - **File filter**: `wikiticker-2015-09-12-sampled.json.gz` \n+\n+   ![Data location](../assets/tutorial-batch-data-loader-015.png \"Data location\")\n+\n+   Entering the base directory and [wildcard file filter](https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/filefilter/WildcardFileFilter.html) separately, as afforded by the UI, allows you to specify multiple files for ingestion at once.\n+\n+4. Click **Apply**. \n+\n+   The data loader displays the raw data, giving you a chance to verify that the data \n+   appears as expected. \n+\n+   ![Data loader sample](../assets/tutorial-batch-data-loader-02.png \"Data loader sample\")\n+\n+   Notice that your position in the sequence of steps to load data, **Connect** in our case, appears at the top of the console, as shown below. \n+   You can click other steps to move forward or backward in the sequence at any time.\n+   \n+   ![Load data](../assets/tutorial-batch-data-loader-12.png)  \n+   \n+\n+5. Click **Next: Parse data**. \n+\n+   The data loader tries to determine the parser appropriate for the data format automatically. In this case \n+   it identifies the data format as `json`, as shown in the **Input format** field at the bottom right.\n+\n+   ![Data loader parse data](../assets/tutorial-batch-data-loader-03.png \"Data loader parse data\")\n+\n+   Feel free to select other **Input format** options to get a sense of their configuration settings \n+   and how Druid parses other types of data.  \n+\n+6. With the JSON parser selected, click **Next: Parse time**. The **Parse time** settings are where you view and adjust the \n+   primary timestamp column for the data.\n+\n+   ![Data loader parse time](../assets/tutorial-batch-data-loader-04.png \"Data loader parse time\")\n+\n+   Druid requires data to have a primary timestamp column (internally stored in a column called `__time`).\n+   If you do not have a timestamp in your data, select `Constant value`. In our example, the data loader \n+   determines that the `time` column is the only candidate that can be used as the primary time column.\n+\n+7. Click **Next: Transform**, **Next: Filter**, and then **Next: Configure schema**, skipping a few steps.\n+\n+   You do not need to adjust transformation or filtering settings, as applying ingestion time transforms and \n+   filters are out of scope for this tutorial.\n+\n+8. The Configure schema settings are where you configure what [dimensions](../ingestion/index.md#dimensions) \n+   and [metrics](../ingestion/index.md#metrics) are ingested. The outcome of this configuration represents exactly how the \n+   data will appear in Druid after ingestion. \n+\n+   Since our dataset is very small, you can turn off [rollup](../ingestion/index.md#rollup) \n+   by unsetting the **Rollup** switch and confirming the change when prompted.\n+\n+   ![Data loader schema](../assets/tutorial-batch-data-loader-05.png \"Data loader schema\")\n+\n+\n+10. Click **Next: Partition** to configure how the data will be split into segments. In this case, choose `DAY` as \n+    the **Segment Granularity**. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 273}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTg0ODQ2OnYy", "diffSide": "RIGHT", "path": "docs/tutorials/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzozODo1OFrOGLvndA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODozNDozM1rOGMx66w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2NzY2OA==", "bodyText": "Perhaps incorporate the original sentence \"Let's name this datasource wikipedia\" here with \"and change the default from wikiticker-2015-09-12-sampled\" ?  The original sentence makes it more clear that the user has a choice here.", "url": "https://github.com/apache/druid/pull/9766#discussion_r414967668", "createdAt": "2020-04-25T03:38:58Z", "author": {"login": "weishiuntsai"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -99,96 +91,173 @@ $ ./bin/start-micro-quickstart\n [Fri May  3 11:40:50 2019] Running command[middleManager], logging to[/apache-druid-{{DRUIDVERSION}}/var/sv/middleManager.log]: bin/run-druid middleManager conf/druid/single-server/micro-quickstart\n ```\n \n-All persistent state such as the cluster metadata store and segments for the services will be kept in the `var` directory under the apache-druid-{{DRUIDVERSION}} package root. Logs for the services are located at `var/sv`.\n+All persistent state, such as the cluster metadata store and segments for the services, are kept in the `var` directory under \n+the Druid root directory, apache-druid-{{DRUIDVERSION}}. Each service writes to a log file under `var/sv`, as noted in the startup script output above.\n+\n+At any time, you can revert Druid to its original, post-installation state by deleting the entire `var` directory. You may\n+want to do this, for example, between Druid tutorials or after experimentation, to start with a fresh instance. \n+\n+To stop Druid at any time, use CTRL-C in the terminal. This exits the `bin/start-micro-quickstart` script and \n+terminates all Druid processes. \n+\n \n-Later on, if you'd like to stop the services, CTRL-C to exit the `bin/start-micro-quickstart` script, which will terminate the Druid processes.\n+## Step 3. Open the Druid console \n \n-Once the cluster has started, you can navigate to [http://localhost:8888](http://localhost:8888).\n-The [Druid router process](../design/router.md), which serves the [Druid console](../operations/druid-console.md), resides at this address.\n+After the Druid services finish startup, open the [Druid console](../operations/druid-console.md) at [http://localhost:8888](http://localhost:8888). \n \n ![Druid console](../assets/tutorial-quickstart-01.png \"Druid console\")\n \n-It takes a few seconds for all the Druid processes to fully start up. If you open the console immediately after starting the services, you may see some errors that you can safely ignore.\n-\n-\n-## Loading data\n-\n-### Tutorial dataset\n-\n-For the following data loading tutorials, we have included a sample data file containing Wikipedia page edit events that occurred on 2015-09-12.\n-\n-This sample data is located at `quickstart/tutorial/wikiticker-2015-09-12-sampled.json.gz` from the Druid package root.\n-The page edit events are stored as JSON objects in a text file.\n-\n-The sample data has the following columns, and an example event is shown below:\n-\n-  * added\n-  * channel\n-  * cityName\n-  * comment\n-  * countryIsoCode\n-  * countryName\n-  * deleted\n-  * delta\n-  * isAnonymous\n-  * isMinor\n-  * isNew\n-  * isRobot\n-  * isUnpatrolled\n-  * metroCode\n-  * namespace\n-  * page\n-  * regionIsoCode\n-  * regionName\n-  * user\n-\n-```json\n-{\n-  \"timestamp\":\"2015-09-12T20:03:45.018Z\",\n-  \"channel\":\"#en.wikipedia\",\n-  \"namespace\":\"Main\",\n-  \"page\":\"Spider-Man's powers and equipment\",\n-  \"user\":\"foobar\",\n-  \"comment\":\"/* Artificial web-shooters */\",\n-  \"cityName\":\"New York\",\n-  \"regionName\":\"New York\",\n-  \"regionIsoCode\":\"NY\",\n-  \"countryName\":\"United States\",\n-  \"countryIsoCode\":\"US\",\n-  \"isAnonymous\":false,\n-  \"isNew\":false,\n-  \"isMinor\":false,\n-  \"isRobot\":false,\n-  \"isUnpatrolled\":false,\n-  \"added\":99,\n-  \"delta\":99,\n-  \"deleted\":0,\n-}\n-```\n+It may take a few seconds for all Druid services to finish starting, including the [Druid router](../design/router.md), which serves the console. If you attempt to open the Druid console before startup is complete, you may see errors in the browser. Wait a few moments and try again. \n \n \n-### Data loading tutorials\n+## Step 4. Load data\n \n-The following tutorials demonstrate various methods of loading data into Druid, including both batch and streaming use cases.\n-All tutorials assume that you are using the `micro-quickstart` single-machine configuration mentioned above.\n \n-- [Loading a file](./tutorial-batch.md) - this tutorial demonstrates how to perform a batch file load, using Druid's native batch ingestion.\n-- [Loading stream data from Apache Kafka](./tutorial-kafka.md) - this tutorial demonstrates how to load streaming data from a Kafka topic.\n-- [Loading a file using Apache Hadoop](./tutorial-batch-hadoop.md) - this tutorial demonstrates how to perform a batch file load, using a remote Hadoop cluster.\n-- [Writing your own ingestion spec](./tutorial-ingestion-spec.md) - this tutorial demonstrates how to write a new ingestion spec and use it to load data.\n+Ingestion specs define the schema of the data Druid reads and stores. You can write ingestion specs by hand or using the _data loader_, \n+as we will do here. \n \n-### Resetting cluster state\n+For this tutorial, we'll load sample data bundled with Druid that represents Wikipedia page edits on a given day. \n \n-If you want a clean start after stopping the services, delete the `var` directory and run the `bin/start-micro-quickstart` script again.\n+1. Click **Load data** from the Druid console header (![Load data](../assets/tutorial-batch-data-loader-00.png)).\n \n-Once every service has started, you are now ready to load data.\n+2. Select the **Local disk** tile and then click **Connect data**.\n \n-#### Resetting Kafka\n+   ![Data loader init](../assets/tutorial-batch-data-loader-01.png \"Data loader init\")\n+\n+3. Enter the following values: \n+\n+   - **Base directory**: `quickstart/tutorial/`\n+\n+   - **File filter**: `wikiticker-2015-09-12-sampled.json.gz` \n+\n+   ![Data location](../assets/tutorial-batch-data-loader-015.png \"Data location\")\n+\n+   Entering the base directory and [wildcard file filter](https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/filefilter/WildcardFileFilter.html) separately, as afforded by the UI, allows you to specify multiple files for ingestion at once.\n+\n+4. Click **Apply**. \n+\n+   The data loader displays the raw data, giving you a chance to verify that the data \n+   appears as expected. \n+\n+   ![Data loader sample](../assets/tutorial-batch-data-loader-02.png \"Data loader sample\")\n+\n+   Notice that your position in the sequence of steps to load data, **Connect** in our case, appears at the top of the console, as shown below. \n+   You can click other steps to move forward or backward in the sequence at any time.\n+   \n+   ![Load data](../assets/tutorial-batch-data-loader-12.png)  \n+   \n+\n+5. Click **Next: Parse data**. \n+\n+   The data loader tries to determine the parser appropriate for the data format automatically. In this case \n+   it identifies the data format as `json`, as shown in the **Input format** field at the bottom right.\n+\n+   ![Data loader parse data](../assets/tutorial-batch-data-loader-03.png \"Data loader parse data\")\n+\n+   Feel free to select other **Input format** options to get a sense of their configuration settings \n+   and how Druid parses other types of data.  \n+\n+6. With the JSON parser selected, click **Next: Parse time**. The **Parse time** settings are where you view and adjust the \n+   primary timestamp column for the data.\n+\n+   ![Data loader parse time](../assets/tutorial-batch-data-loader-04.png \"Data loader parse time\")\n+\n+   Druid requires data to have a primary timestamp column (internally stored in a column called `__time`).\n+   If you do not have a timestamp in your data, select `Constant value`. In our example, the data loader \n+   determines that the `time` column is the only candidate that can be used as the primary time column.\n+\n+7. Click **Next: Transform**, **Next: Filter**, and then **Next: Configure schema**, skipping a few steps.\n+\n+   You do not need to adjust transformation or filtering settings, as applying ingestion time transforms and \n+   filters are out of scope for this tutorial.\n+\n+8. The Configure schema settings are where you configure what [dimensions](../ingestion/index.md#dimensions) \n+   and [metrics](../ingestion/index.md#metrics) are ingested. The outcome of this configuration represents exactly how the \n+   data will appear in Druid after ingestion. \n+\n+   Since our dataset is very small, you can turn off [rollup](../ingestion/index.md#rollup) \n+   by unsetting the **Rollup** switch and confirming the change when prompted.\n+\n+   ![Data loader schema](../assets/tutorial-batch-data-loader-05.png \"Data loader schema\")\n+\n+\n+10. Click **Next: Partition** to configure how the data will be split into segments. In this case, choose `DAY` as \n+    the **Segment Granularity**. \n+\n+    ![Data loader partition](../assets/tutorial-batch-data-loader-06.png \"Data loader partition\")\n+\n+    Since this is a small dataset, we can have just a single segment, which is what selecting `DAY` as the \n+    segment granularity gives us. \n+\n+11. Click **Next: Tune** and **Next: Publish**.\n+\n+12. The Publish settings are where you can specify the datasource name in Druid. Change the default from `wikiticker-2015-09-12-sampled` ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1Mzk5NQ==", "bodyText": "Done. Alternatively, I wondered if we should call it something unique, like wikipedia-batchfile, or something, to allow the tutorial datasources to live together without name collisions. Perhaps for later...", "url": "https://github.com/apache/druid/pull/9766#discussion_r416053995", "createdAt": "2020-04-27T18:34:33Z", "author": {"login": "sthetland"}, "path": "docs/tutorials/index.md", "diffHunk": "@@ -99,96 +91,173 @@ $ ./bin/start-micro-quickstart\n [Fri May  3 11:40:50 2019] Running command[middleManager], logging to[/apache-druid-{{DRUIDVERSION}}/var/sv/middleManager.log]: bin/run-druid middleManager conf/druid/single-server/micro-quickstart\n ```\n \n-All persistent state such as the cluster metadata store and segments for the services will be kept in the `var` directory under the apache-druid-{{DRUIDVERSION}} package root. Logs for the services are located at `var/sv`.\n+All persistent state, such as the cluster metadata store and segments for the services, are kept in the `var` directory under \n+the Druid root directory, apache-druid-{{DRUIDVERSION}}. Each service writes to a log file under `var/sv`, as noted in the startup script output above.\n+\n+At any time, you can revert Druid to its original, post-installation state by deleting the entire `var` directory. You may\n+want to do this, for example, between Druid tutorials or after experimentation, to start with a fresh instance. \n+\n+To stop Druid at any time, use CTRL-C in the terminal. This exits the `bin/start-micro-quickstart` script and \n+terminates all Druid processes. \n+\n \n-Later on, if you'd like to stop the services, CTRL-C to exit the `bin/start-micro-quickstart` script, which will terminate the Druid processes.\n+## Step 3. Open the Druid console \n \n-Once the cluster has started, you can navigate to [http://localhost:8888](http://localhost:8888).\n-The [Druid router process](../design/router.md), which serves the [Druid console](../operations/druid-console.md), resides at this address.\n+After the Druid services finish startup, open the [Druid console](../operations/druid-console.md) at [http://localhost:8888](http://localhost:8888). \n \n ![Druid console](../assets/tutorial-quickstart-01.png \"Druid console\")\n \n-It takes a few seconds for all the Druid processes to fully start up. If you open the console immediately after starting the services, you may see some errors that you can safely ignore.\n-\n-\n-## Loading data\n-\n-### Tutorial dataset\n-\n-For the following data loading tutorials, we have included a sample data file containing Wikipedia page edit events that occurred on 2015-09-12.\n-\n-This sample data is located at `quickstart/tutorial/wikiticker-2015-09-12-sampled.json.gz` from the Druid package root.\n-The page edit events are stored as JSON objects in a text file.\n-\n-The sample data has the following columns, and an example event is shown below:\n-\n-  * added\n-  * channel\n-  * cityName\n-  * comment\n-  * countryIsoCode\n-  * countryName\n-  * deleted\n-  * delta\n-  * isAnonymous\n-  * isMinor\n-  * isNew\n-  * isRobot\n-  * isUnpatrolled\n-  * metroCode\n-  * namespace\n-  * page\n-  * regionIsoCode\n-  * regionName\n-  * user\n-\n-```json\n-{\n-  \"timestamp\":\"2015-09-12T20:03:45.018Z\",\n-  \"channel\":\"#en.wikipedia\",\n-  \"namespace\":\"Main\",\n-  \"page\":\"Spider-Man's powers and equipment\",\n-  \"user\":\"foobar\",\n-  \"comment\":\"/* Artificial web-shooters */\",\n-  \"cityName\":\"New York\",\n-  \"regionName\":\"New York\",\n-  \"regionIsoCode\":\"NY\",\n-  \"countryName\":\"United States\",\n-  \"countryIsoCode\":\"US\",\n-  \"isAnonymous\":false,\n-  \"isNew\":false,\n-  \"isMinor\":false,\n-  \"isRobot\":false,\n-  \"isUnpatrolled\":false,\n-  \"added\":99,\n-  \"delta\":99,\n-  \"deleted\":0,\n-}\n-```\n+It may take a few seconds for all Druid services to finish starting, including the [Druid router](../design/router.md), which serves the console. If you attempt to open the Druid console before startup is complete, you may see errors in the browser. Wait a few moments and try again. \n \n \n-### Data loading tutorials\n+## Step 4. Load data\n \n-The following tutorials demonstrate various methods of loading data into Druid, including both batch and streaming use cases.\n-All tutorials assume that you are using the `micro-quickstart` single-machine configuration mentioned above.\n \n-- [Loading a file](./tutorial-batch.md) - this tutorial demonstrates how to perform a batch file load, using Druid's native batch ingestion.\n-- [Loading stream data from Apache Kafka](./tutorial-kafka.md) - this tutorial demonstrates how to load streaming data from a Kafka topic.\n-- [Loading a file using Apache Hadoop](./tutorial-batch-hadoop.md) - this tutorial demonstrates how to perform a batch file load, using a remote Hadoop cluster.\n-- [Writing your own ingestion spec](./tutorial-ingestion-spec.md) - this tutorial demonstrates how to write a new ingestion spec and use it to load data.\n+Ingestion specs define the schema of the data Druid reads and stores. You can write ingestion specs by hand or using the _data loader_, \n+as we will do here. \n \n-### Resetting cluster state\n+For this tutorial, we'll load sample data bundled with Druid that represents Wikipedia page edits on a given day. \n \n-If you want a clean start after stopping the services, delete the `var` directory and run the `bin/start-micro-quickstart` script again.\n+1. Click **Load data** from the Druid console header (![Load data](../assets/tutorial-batch-data-loader-00.png)).\n \n-Once every service has started, you are now ready to load data.\n+2. Select the **Local disk** tile and then click **Connect data**.\n \n-#### Resetting Kafka\n+   ![Data loader init](../assets/tutorial-batch-data-loader-01.png \"Data loader init\")\n+\n+3. Enter the following values: \n+\n+   - **Base directory**: `quickstart/tutorial/`\n+\n+   - **File filter**: `wikiticker-2015-09-12-sampled.json.gz` \n+\n+   ![Data location](../assets/tutorial-batch-data-loader-015.png \"Data location\")\n+\n+   Entering the base directory and [wildcard file filter](https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/filefilter/WildcardFileFilter.html) separately, as afforded by the UI, allows you to specify multiple files for ingestion at once.\n+\n+4. Click **Apply**. \n+\n+   The data loader displays the raw data, giving you a chance to verify that the data \n+   appears as expected. \n+\n+   ![Data loader sample](../assets/tutorial-batch-data-loader-02.png \"Data loader sample\")\n+\n+   Notice that your position in the sequence of steps to load data, **Connect** in our case, appears at the top of the console, as shown below. \n+   You can click other steps to move forward or backward in the sequence at any time.\n+   \n+   ![Load data](../assets/tutorial-batch-data-loader-12.png)  \n+   \n+\n+5. Click **Next: Parse data**. \n+\n+   The data loader tries to determine the parser appropriate for the data format automatically. In this case \n+   it identifies the data format as `json`, as shown in the **Input format** field at the bottom right.\n+\n+   ![Data loader parse data](../assets/tutorial-batch-data-loader-03.png \"Data loader parse data\")\n+\n+   Feel free to select other **Input format** options to get a sense of their configuration settings \n+   and how Druid parses other types of data.  \n+\n+6. With the JSON parser selected, click **Next: Parse time**. The **Parse time** settings are where you view and adjust the \n+   primary timestamp column for the data.\n+\n+   ![Data loader parse time](../assets/tutorial-batch-data-loader-04.png \"Data loader parse time\")\n+\n+   Druid requires data to have a primary timestamp column (internally stored in a column called `__time`).\n+   If you do not have a timestamp in your data, select `Constant value`. In our example, the data loader \n+   determines that the `time` column is the only candidate that can be used as the primary time column.\n+\n+7. Click **Next: Transform**, **Next: Filter**, and then **Next: Configure schema**, skipping a few steps.\n+\n+   You do not need to adjust transformation or filtering settings, as applying ingestion time transforms and \n+   filters are out of scope for this tutorial.\n+\n+8. The Configure schema settings are where you configure what [dimensions](../ingestion/index.md#dimensions) \n+   and [metrics](../ingestion/index.md#metrics) are ingested. The outcome of this configuration represents exactly how the \n+   data will appear in Druid after ingestion. \n+\n+   Since our dataset is very small, you can turn off [rollup](../ingestion/index.md#rollup) \n+   by unsetting the **Rollup** switch and confirming the change when prompted.\n+\n+   ![Data loader schema](../assets/tutorial-batch-data-loader-05.png \"Data loader schema\")\n+\n+\n+10. Click **Next: Partition** to configure how the data will be split into segments. In this case, choose `DAY` as \n+    the **Segment Granularity**. \n+\n+    ![Data loader partition](../assets/tutorial-batch-data-loader-06.png \"Data loader partition\")\n+\n+    Since this is a small dataset, we can have just a single segment, which is what selecting `DAY` as the \n+    segment granularity gives us. \n+\n+11. Click **Next: Tune** and **Next: Publish**.\n+\n+12. The Publish settings are where you can specify the datasource name in Druid. Change the default from `wikiticker-2015-09-12-sampled` ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2NzY2OA=="}, "originalCommit": {"oid": "e6e7bc68b4ea8392f94d2bcec74951ad8668c645"}, "originalPosition": 282}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2593, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}