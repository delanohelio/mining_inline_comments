{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MjQ1NjUy", "number": 9943, "title": "fix unsafe concurrent access in StreamAppenderatorDriver", "bodyText": "during segment publishing we do streaming operations on a collection not\nsafe for concurrent modification. To guarantee correct results we must\nalso guard any operations on the stream itself.\nThis may explain the issue seen in #9845", "createdAt": "2020-05-28T04:48:05Z", "url": "https://github.com/apache/druid/pull/9943", "merged": true, "mergeCommit": {"oid": "acfcfd35b1ff09b681920bc08d6fa9216f934715"}, "closed": true, "closedAt": "2020-05-31T16:12:26Z", "author": {"login": "xvrl"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclmYi8gH2gAyNDI0MjQ1NjUyOjhiOTc5NDE4Yzg1Njg5YjAxOTRiNzdlMzUzOGVhNmQ1YjIyZjJiNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmhQ20gFqTQyMTQ1NDIwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8b979418c85689b0194b77e3538ea6d5b22f2b70", "author": {"user": {"login": "xvrl", "name": "Xavier L\u00e9aut\u00e9"}}, "url": "https://github.com/apache/druid/commit/8b979418c85689b0194b77e3538ea6d5b22f2b70", "committedDate": "2020-05-28T04:44:29Z", "message": "fix unsafe concurrent access in StreamAppenderatorDriver\n\nduring segment publishing we do streaming operations on a collection not\nsafe for concurrent modification. To guarantee correct results we must\nalso guard any operations on the stream itself.\n\nThis may explain the issue seen in https://github.com/apache/druid/issues/9845"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjY0ODk3", "url": "https://github.com/apache/druid/pull/9943#pullrequestreview-420664897", "createdAt": "2020-05-29T05:40:01Z", "commit": {"oid": "8b979418c85689b0194b77e3538ea6d5b22f2b70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo0MDowMVrOGcPaWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTo0MDowMVrOGcPaWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2NTgxOA==", "bodyText": "Since the only uses of these methods is just to get the segment identifier and collect it to a set\n...\n        .map(SegmentWithState::getSegmentIdentifier)\n        .collect(Collectors.toSet());\n\nshould these methods instead just return Set<SegmentIdWithShardSpec> instead of a stream so we can't make the error?", "url": "https://github.com/apache/druid/pull/9943#discussion_r432265818", "createdAt": "2020-05-29T05:40:01Z", "author": {"login": "clintropolis"}, "path": "server/src/main/java/org/apache/druid/segment/realtime/appenderator/BaseAppenderatorDriver.java", "diffHunk": "@@ -427,30 +428,36 @@ protected AppenderatorDriverAddResult append(\n \n   /**\n    * Returns a stream of {@link SegmentWithState} for the given sequenceNames.\n+   *\n+   * Note: it is not enough to synchronize on segments to access to this method,\n+   * any operation on the resulting stream must also be synchronized on segments.\n    */\n+  @GuardedBy(\"segments\")\n   Stream<SegmentWithState> getSegmentWithStates(Collection<String> sequenceNames)\n   {\n-    synchronized (segments) {\n-      return sequenceNames\n-          .stream()\n-          .map(segments::get)\n-          .filter(Objects::nonNull)\n-          .flatMap(segmentsForSequence -> segmentsForSequence.intervalToSegmentStates.values().stream())\n-          .flatMap(segmentsOfInterval -> segmentsOfInterval.getAllSegments().stream());\n-    }\n+    return sequenceNames", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b979418c85689b0194b77e3538ea6d5b22f2b70"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b495a60dd64be630c75a4db8d8ac839436bb46b8", "author": {"user": {"login": "xvrl", "name": "Xavier L\u00e9aut\u00e9"}}, "url": "https://github.com/apache/druid/commit/b495a60dd64be630c75a4db8d8ac839436bb46b8", "committedDate": "2020-05-29T22:40:18Z", "message": "remove streams"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b495a60dd64be630c75a4db8d8ac839436bb46b8", "author": {"user": {"login": "xvrl", "name": "Xavier L\u00e9aut\u00e9"}}, "url": "https://github.com/apache/druid/commit/b495a60dd64be630c75a4db8d8ac839436bb46b8", "committedDate": "2020-05-29T22:40:18Z", "message": "remove streams"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDU0MjAw", "url": "https://github.com/apache/druid/pull/9943#pullrequestreview-421454200", "createdAt": "2020-05-31T01:20:29Z", "commit": {"oid": "b495a60dd64be630c75a4db8d8ac839436bb46b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2417, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}