{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzY5NDc0", "number": 9215, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDo0NTowM1rODY-Kpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDo0NTowM1rODY-Kpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTEwOTUwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/druid/java/util/common/StringUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDo0NTowM1rOFfIjzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMDo0NTowM1rOFfIjzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MDQxNA==", "bodyText": "To resolve I moved chop and fastLooseChop to StringUtils since this has tests with them and renamed references in StringFirst/Last aggs", "url": "https://github.com/apache/druid/pull/9215#discussion_r368190414", "createdAt": "2020-01-18T00:45:03Z", "author": {"login": "suneet-s"}, "path": "core/src/main/java/org/apache/druid/java/util/common/StringUtils.java", "diffHunk": "@@ -546,4 +546,39 @@ public static String rpad(String base, Integer len, String pad)\n     return new String(data);\n   }\n \n+  /**\n+   * Returns the string truncated to maxBytes.\n+   * If given string input is shorter than maxBytes, then it remains the same.\n+   *\n+   * @param s        The input string to possibly be truncated\n+   * @param maxBytes The max bytes that string input will be truncated to\n+   *\n+   * @return the string after truncated to maxBytes\n+   */\n+  @Nullable\n+  public static String chop(@Nullable final String s, final int maxBytes)\n+  {\n+    if (s == null) {\n+      return null;\n+    } else {\n+      // Shorten firstValue to what could fit in maxBytes as UTF-8.\n+      final byte[] bytes = new byte[maxBytes];\n+      final int len = StringUtils.toUtf8WithLimit(s, ByteBuffer.wrap(bytes));\n+      return new String(bytes, 0, len, StandardCharsets.UTF_8);\n+    }\n+  }\n+\n+  /**\n+   * Shorten \"s\" to \"maxBytes\" chars. Fast and loose because these are *chars* not *bytes*. Use\n+   * {@link #chop(String, int)} for slower, but accurate chopping.\n+   */\n+  @Nullable\n+  public static String fastLooseChop(@Nullable final String s, final int maxBytes)\n+  {\n+    if (s == null || s.length() <= maxBytes) {\n+      return s;\n+    } else {\n+      return s.substring(0, maxBytes);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26592a33c08421dc8672beac17386d8823818336"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2139, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}