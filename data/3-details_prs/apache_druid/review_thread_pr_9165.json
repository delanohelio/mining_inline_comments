{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjM4ODUz", "number": 9165, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxNjo1MVrODYa2PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzo0Mzo1MFrODd73dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTMyMjg0OnYy", "diffSide": "RIGHT", "path": "codestyle/druid-forbidden-apis.txt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxNjo1MVrOFeRD8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxNjo1MVrOFeRD8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI4MTEzOQ==", "bodyText": "LinkedHashMap should be prohibited, too, even though there is no method ready in Guava. A polyfill method could be added to CollectionUtils.", "url": "https://github.com/apache/druid/pull/9165#discussion_r367281139", "createdAt": "2020-01-16T08:16:51Z", "author": {"login": "leventov"}, "path": "codestyle/druid-forbidden-apis.txt", "diffHunk": "@@ -31,6 +31,12 @@ java.lang.String#replace(java.lang.CharSequence,java.lang.CharSequence) @ Use on\n java.lang.String#replaceAll(java.lang.String,java.lang.String) @ Use one of the appropriate methods in StringUtils instead, or compile and cache a Pattern explicitly\n java.lang.String#replaceFirst(java.lang.String,java.lang.String) @ Use String.indexOf() and substring methods, or compile and cache a Pattern explicitly\n java.nio.file.Files#createTempDirectory(java.lang.String prefix,java.nio.file.FileAttribute...) @ Use org.apache.druid.java.util.common.FileUtils.createTempDir()\n+java.util.HashMap#<init>(int) @ Use com.google.common.collect.Maps#newHashMapWithExpectedSize(int) instead\n+java.util.HashMap#<init>(int, float) @ Use com.google.common.collect.Maps#newHashMapWithExpectedSize(int) instead\n+java.util.HashSet#<init>(int) @ Use com.google.collect.Sets#newHashSetWithExpectedSize(int) instead\n+java.util.HashSet#<init>(int, float) @ Use com.google.collect.Sets#newHashSetWithExpectedSize(int) instead\n+java.util.LinkedHashSet#<init>(int) @ Use com.google.collect.Sets#newLinkedHashSatWithExpectedSize(int) instead\n+java.util.LinkedHashSet#<init>(int, float) @ Use com.google.collect.Sets#newLinkedHashSatWithExpectedSize(int) instead", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33160aa6fd3ebef58ece747590ce189260ca7b1c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTI4Mjg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/druid/utils/CollectionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwNzo1OTo0NFrOFfJ-Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMzozODozNVrOFfK0VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxMzU5MQ==", "bodyText": "Nit: should better be private.", "url": "https://github.com/apache/druid/pull/9165#discussion_r368213591", "createdAt": "2020-01-18T07:59:44Z", "author": {"login": "leventov"}, "path": "core/src/main/java/org/apache/druid/utils/CollectionUtils.java", "diffHunk": "@@ -39,6 +41,8 @@\n \n public final class CollectionUtils\n {\n+  public static final int MAX_EXPECTED_SIZE = (1 << 30);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b10662517f7087e8677cf15ec30805acc8a3905"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyNzQxMg==", "bodyText": "Thanks for catching that", "url": "https://github.com/apache/druid/pull/9165#discussion_r368227412", "createdAt": "2020-01-18T13:38:35Z", "author": {"login": "capistrant"}, "path": "core/src/main/java/org/apache/druid/utils/CollectionUtils.java", "diffHunk": "@@ -39,6 +41,8 @@\n \n public final class CollectionUtils\n {\n+  public static final int MAX_EXPECTED_SIZE = (1 << 30);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxMzU5MQ=="}, "originalCommit": {"oid": "5b10662517f7087e8677cf15ec30805acc8a3905"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzE2MTUxOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzo0Mzo1MFrOFm0idQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwNzo0Mzo1MFrOFm0idQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI1MDk5Nw==", "bodyText": "I've created https://issues.apache.org/jira/browse/AVRO-2731 and #9331 to track this. FYI @Fokko.\n@capistrant please try to create such issues yourself to close the loops and offload info from the heads of people.", "url": "https://github.com/apache/druid/pull/9165#discussion_r376250997", "createdAt": "2020-02-07T07:43:50Z", "author": {"login": "leventov"}, "path": "pom.xml", "diffHunk": "@@ -1341,6 +1341,9 @@\n                         <signaturesFile>${project.parent.basedir}/codestyle/joda-time-forbidden-apis.txt</signaturesFile>\n                         <signaturesFile>${project.parent.basedir}/codestyle/druid-forbidden-apis.txt</signaturesFile>\n                     </signaturesFiles>\n+                    <excludes>\n+                      <exclude>**/SomeAvroDatum.class</exclude>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f8090fb9bf471edb5b84c13f9ed511ef0c93b1f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2115, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}