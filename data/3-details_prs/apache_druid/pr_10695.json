{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMDQ5MjQ2", "number": 10695, "title": "Add documentation re alphabetical sorted of MV dimensions", "bodyText": "Simple updating of documentation. It's very relevant to know that that multi-value dimensions are sorted by default and that it's possible to change this behaviour.\nTo someone more intune with Druid's inner workings: Do we really want alphabetical sorted to be the default for MV dimensions? Would it not be better to default to ARRAY in DimensionSchema L89?\n\n\nDescription\n\n\n\nFixed the bug ...\nRenamed the class ...\nAdded a forbidden-apis entry ...\n\n\n\n\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nMyFoo\nOurBar\nTheirBaz", "createdAt": "2020-12-20T10:40:44Z", "url": "https://github.com/apache/druid/pull/10695", "merged": true, "mergeCommit": {"oid": "9be2a5cdc2a5fbae5d6e38885f75e9f674da1e8f"}, "closed": true, "closedAt": "2021-05-07T08:12:32Z", "author": {"login": "lkm"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdofi7kgFqTU1Njc0NTY5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABeSOj7EAFqTY0OTM5MzY3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NzQ1Njk4", "url": "https://github.com/apache/druid/pull/10695#pullrequestreview-556745698", "createdAt": "2020-12-22T00:30:30Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMDozMDozMFrOIJqQQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMDozODo0MlrOIJqY1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMDM4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | multiValueHandling | Specify the type of handling multi-value fields will get, possible values are `SORTED_ARRAY`, `SORTED_SET` and `ARRAY`. The first two will order the array upon ingestion and `SORTED_SET` will remove duplicates. `ARRAY` will ingest data as-is | `SORTED_ARRAY` |\n          \n          \n            \n            | multiValueHandling | Specify the type of handling for multi-value fields. Possible values are `SORTED_ARRAY`, `SORTED_SET`, and `ARRAY`. `SORTED_ARRAY` and `SORTED_SET` order the array upon ingestion. `SORTED_SET` removes duplicates. `ARRAY` ingests data as-is | `SORTED_ARRAY` |", "url": "https://github.com/apache/druid/pull/10695#discussion_r547000384", "createdAt": "2020-12-22T00:30:30Z", "author": {"login": "techdocsmith"}, "path": "docs/ingestion/index.md", "diffHunk": "@@ -480,6 +480,7 @@ Dimension objects can have the following components:\n | type | Either `string`, `long`, `float`, or `double`. | `string` |\n | name | The name of the dimension. This will be used as the field name to read from input records, as well as the column name stored in generated segments.<br><br>Note that you can use a [`transformSpec`](#transformspec) if you want to rename columns during ingestion time. | none (required) |\n | createBitmapIndex | For `string` typed dimensions, whether or not bitmap indexes should be created for the column in generated segments. Creating a bitmap index requires more storage, but speeds up certain kinds of filtering (especially equality and prefix filtering). Only supported for `string` typed dimensions. | `true` |\n+| multiValueHandling | Specify the type of handling multi-value fields will get, possible values are `SORTED_ARRAY`, `SORTED_SET` and `ARRAY`. The first two will order the array upon ingestion and `SORTED_SET` will remove duplicates. `ARRAY` will ingest data as-is | `SORTED_ARRAY` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.\n          \n          \n            \n            characters), by default Druid lists the values in alphabetical order, see [Dimension Objects](../ingestion/index.md#dimension-objects) for configuration.\n          \n      \n    \n    \n  \n\nPlease use .md for links. Also, it's not clear to me what the related information is at the destination. But I'm a still fairly new to Druid.", "url": "https://github.com/apache/druid/pull/10695#discussion_r547002582", "createdAt": "2020-12-22T00:38:42Z", "author": {"login": "techdocsmith"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MDIxMTkw", "url": "https://github.com/apache/druid/pull/10695#pullrequestreview-564021190", "createdAt": "2021-01-08T06:02:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNjowMjo1OFrOIQGteg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNjowNDowNlrOIQGu4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1ODA3NA==", "bodyText": "This is a run on sentence. Please replace the comma with a period and split up the sentences.", "url": "https://github.com/apache/druid/pull/10695#discussion_r553758074", "createdAt": "2021-01-08T06:02:58Z", "author": {"login": "gianm"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default Druid ingests the values in alphabetical order, see [Dimension Objects](../ingestion/index.md#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1ODQzNQ==", "bodyText": "It'd be nice to link \"multi-value fields\" to the ../querying/multi-value-dimensions.md doc, so these two pages cross-link to each other.", "url": "https://github.com/apache/druid/pull/10695#discussion_r553758435", "createdAt": "2021-01-08T06:04:06Z", "author": {"login": "gianm"}, "path": "docs/ingestion/index.md", "diffHunk": "@@ -480,6 +480,7 @@ Dimension objects can have the following components:\n | type | Either `string`, `long`, `float`, or `double`. | `string` |\n | name | The name of the dimension. This will be used as the field name to read from input records, as well as the column name stored in generated segments.<br><br>Note that you can use a [`transformSpec`](#transformspec) if you want to rename columns during ingestion time. | none (required) |\n | createBitmapIndex | For `string` typed dimensions, whether or not bitmap indexes should be created for the column in generated segments. Creating a bitmap index requires more storage, but speeds up certain kinds of filtering (especially equality and prefix filtering). Only supported for `string` typed dimensions. | `true` |\n+| multiValueHandling | Specify the type of handling for multi-value fields. Possible values are `sorted_array`, `sorted_set`, and `array`. `sorted_array` and `sorted_set` order the array upon ingestion. `sorted_set` removes duplicates. `array` ingests data as-is | `sorted_array` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa5f4873933d5d877bb753b61142f185a1b68d59", "author": {"user": {"login": "lkm", "name": "Lasse Krogh Mammen"}}, "url": "https://github.com/apache/druid/commit/aa5f4873933d5d877bb753b61142f185a1b68d59", "committedDate": "2021-04-15T15:16:59Z", "message": "Add documentation re alphabetical sorted of MV dimensions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "aa5f4873933d5d877bb753b61142f185a1b68d59", "author": {"user": {"login": "lkm", "name": "Lasse Krogh Mammen"}}, "url": "https://github.com/apache/druid/commit/aa5f4873933d5d877bb753b61142f185a1b68d59", "committedDate": "2021-04-15T15:16:59Z", "message": "Add documentation re alphabetical sorted of MV dimensions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ5MzkzNjc0", "url": "https://github.com/apache/druid/pull/10695#pullrequestreview-649393674", "createdAt": "2021-04-30T16:36:56Z", "commit": {"oid": "aa5f4873933d5d877bb753b61142f185a1b68d59"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3211, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}