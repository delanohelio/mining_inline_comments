{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5ODM0Nzc4", "number": 9891, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzoxNDozNlrOD95M6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo0MzowNVrOD-TbIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjI2OTIzOnYy", "diffSide": "RIGHT", "path": "web-console/src/components/rule-editor/rule-editor.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzoxNDozNlrOGXqdDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMzowODo0OVrOGX5v3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2NTk5Nw==", "bodyText": "Can you add a test for this in rule-editor.spec.tsx?", "url": "https://github.com/apache/druid/pull/9891#discussion_r427465997", "createdAt": "2020-05-19T17:14:36Z", "author": {"login": "ccaominh"}, "path": "web-console/src/components/rule-editor/rule-editor.tsx", "diffHunk": "@@ -102,8 +102,11 @@ export const RuleEditor = React.memo(function RuleEditor(props: RuleEditorProps)\n               onChange(RuleUtil.renameTieredReplicants(rule, tier, e.target.value))\n             }\n           >\n+            <option key={tier} value={tier}>\n+              {tier}\n+            </option>\n             {tiers\n-              .filter(t => t === tier || !tieredReplicants[t])\n+              .filter(t => t !== tier && !tieredReplicants[t])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a13f3199db34a0f777b4045733878b12651b9734"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxNjU3Mw==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/9891#discussion_r427716573", "createdAt": "2020-05-20T03:08:49Z", "author": {"login": "maytasm"}, "path": "web-console/src/components/rule-editor/rule-editor.tsx", "diffHunk": "@@ -102,8 +102,11 @@ export const RuleEditor = React.memo(function RuleEditor(props: RuleEditorProps)\n               onChange(RuleUtil.renameTieredReplicants(rule, tier, e.target.value))\n             }\n           >\n+            <option key={tier} value={tier}>\n+              {tier}\n+            </option>\n             {tiers\n-              .filter(t => t === tier || !tieredReplicants[t])\n+              .filter(t => t !== tier && !tieredReplicants[t])", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2NTk5Nw=="}, "originalCommit": {"oid": "a13f3199db34a0f777b4045733878b12651b9734"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjU2NTQ2OnYy", "diffSide": "RIGHT", "path": "web-console/src/components/rule-editor/rule-editor.spec.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo0MzowNVrOGYUraw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjowOTo0MFrOGYfkhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NzgwMw==", "bodyText": "CI is flagging the extra indentation for this test\nhttps://travis-ci.org/github/apache/druid/jobs/689087087#L411", "url": "https://github.com/apache/druid/pull/9891#discussion_r428157803", "createdAt": "2020-05-20T16:43:05Z", "author": {"login": "ccaominh"}, "path": "web-console/src/components/rule-editor/rule-editor.spec.tsx", "diffHunk": "@@ -36,4 +36,64 @@ describe('rule editor', () => {\n     const { container } = render(ruleEditor);\n     expect(container.firstChild).toMatchSnapshot();\n   });\n+\n+  it('matches snapshot with non existing tier in rule', () => {\n+    const ruleEditor = (\n+      <RuleEditor\n+        rule={{\n+          type: 'loadByInterval',\n+          period: '2010-01-01/2015-01-01',\n+          tieredReplicants: { nonexist: 2 },\n+        }}\n+        tiers={['test1', 'test2', 'test3']}\n+        onChange={() => {}}\n+        onDelete={() => {}}\n+        moveUp={null}\n+        moveDown={null}\n+      />\n+    );\n+    const { container } = render(ruleEditor);\n+    expect(container.firstChild).toMatchSnapshot();\n+  });\n+\n+  it('matches snapshot with existing tier in rule', () => {\n+    const ruleEditor = (\n+      <RuleEditor\n+        rule={{\n+          type: 'loadByInterval',\n+          period: '2010-01-01/2015-01-01',\n+          tieredReplicants: { test1: 2 },\n+        }}\n+        tiers={['test1', 'test2', 'test3']}\n+        onChange={() => {}}\n+        onDelete={() => {}}\n+        moveUp={null}\n+        moveDown={null}\n+      />\n+    );\n+    const { container } = render(ruleEditor);\n+    expect(container.firstChild).toMatchSnapshot();\n+  });\n+\n+    it('matches snapshot with existing tier and non existing tier in rule', () => {\n+      const ruleEditor = (\n+        <RuleEditor\n+          rule={{\n+            type: 'loadByInterval',\n+            period: '2010-01-01/2015-01-01',\n+            tieredReplicants: {\n+              test1: 2,\n+              nonexist: 1,\n+            },\n+          }}\n+          tiers={['test1', 'test2', 'test3']}\n+          onChange={() => {}}\n+          onDelete={() => {}}\n+          moveUp={null}\n+          moveDown={null}\n+        />\n+      );\n+      const { container } = render(ruleEditor);\n+      expect(container.firstChild).toMatchSnapshot();\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ef33d01d8fe13bc250f1c73ecaf45bf8ebe46a4"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzNjI2MQ==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/9891#discussion_r428336261", "createdAt": "2020-05-20T22:09:40Z", "author": {"login": "maytasm"}, "path": "web-console/src/components/rule-editor/rule-editor.spec.tsx", "diffHunk": "@@ -36,4 +36,64 @@ describe('rule editor', () => {\n     const { container } = render(ruleEditor);\n     expect(container.firstChild).toMatchSnapshot();\n   });\n+\n+  it('matches snapshot with non existing tier in rule', () => {\n+    const ruleEditor = (\n+      <RuleEditor\n+        rule={{\n+          type: 'loadByInterval',\n+          period: '2010-01-01/2015-01-01',\n+          tieredReplicants: { nonexist: 2 },\n+        }}\n+        tiers={['test1', 'test2', 'test3']}\n+        onChange={() => {}}\n+        onDelete={() => {}}\n+        moveUp={null}\n+        moveDown={null}\n+      />\n+    );\n+    const { container } = render(ruleEditor);\n+    expect(container.firstChild).toMatchSnapshot();\n+  });\n+\n+  it('matches snapshot with existing tier in rule', () => {\n+    const ruleEditor = (\n+      <RuleEditor\n+        rule={{\n+          type: 'loadByInterval',\n+          period: '2010-01-01/2015-01-01',\n+          tieredReplicants: { test1: 2 },\n+        }}\n+        tiers={['test1', 'test2', 'test3']}\n+        onChange={() => {}}\n+        onDelete={() => {}}\n+        moveUp={null}\n+        moveDown={null}\n+      />\n+    );\n+    const { container } = render(ruleEditor);\n+    expect(container.firstChild).toMatchSnapshot();\n+  });\n+\n+    it('matches snapshot with existing tier and non existing tier in rule', () => {\n+      const ruleEditor = (\n+        <RuleEditor\n+          rule={{\n+            type: 'loadByInterval',\n+            period: '2010-01-01/2015-01-01',\n+            tieredReplicants: {\n+              test1: 2,\n+              nonexist: 1,\n+            },\n+          }}\n+          tiers={['test1', 'test2', 'test3']}\n+          onChange={() => {}}\n+          onDelete={() => {}}\n+          moveUp={null}\n+          moveDown={null}\n+        />\n+      );\n+      const { container } = render(ruleEditor);\n+      expect(container.firstChild).toMatchSnapshot();\n+    });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE1NzgwMw=="}, "originalCommit": {"oid": "4ef33d01d8fe13bc250f1c73ecaf45bf8ebe46a4"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2447, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}