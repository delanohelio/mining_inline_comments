{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMDQ5MjQ2", "number": 10695, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMDozMDozMFrOFH-oyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNjowNDowNlrOFMZsMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTEwNjAzOnYy", "diffSide": "RIGHT", "path": "docs/ingestion/index.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMDozMDozMFrOIJqQQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMDozMDozMFrOIJqQQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMDM4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | multiValueHandling | Specify the type of handling multi-value fields will get, possible values are `SORTED_ARRAY`, `SORTED_SET` and `ARRAY`. The first two will order the array upon ingestion and `SORTED_SET` will remove duplicates. `ARRAY` will ingest data as-is | `SORTED_ARRAY` |\n          \n          \n            \n            | multiValueHandling | Specify the type of handling for multi-value fields. Possible values are `SORTED_ARRAY`, `SORTED_SET`, and `ARRAY`. `SORTED_ARRAY` and `SORTED_SET` order the array upon ingestion. `SORTED_SET` removes duplicates. `ARRAY` ingests data as-is | `SORTED_ARRAY` |", "url": "https://github.com/apache/druid/pull/10695#discussion_r547000384", "createdAt": "2020-12-22T00:30:30Z", "author": {"login": "techdocsmith"}, "path": "docs/ingestion/index.md", "diffHunk": "@@ -480,6 +480,7 @@ Dimension objects can have the following components:\n | type | Either `string`, `long`, `float`, or `double`. | `string` |\n | name | The name of the dimension. This will be used as the field name to read from input records, as well as the column name stored in generated segments.<br><br>Note that you can use a [`transformSpec`](#transformspec) if you want to rename columns during ingestion time. | none (required) |\n | createBitmapIndex | For `string` typed dimensions, whether or not bitmap indexes should be created for the column in generated segments. Creating a bitmap index requires more storage, but speeds up certain kinds of filtering (especially equality and prefix filtering). Only supported for `string` typed dimensions. | `true` |\n+| multiValueHandling | Specify the type of handling multi-value fields will get, possible values are `SORTED_ARRAY`, `SORTED_SET` and `ARRAY`. The first two will order the array upon ingestion and `SORTED_SET` will remove duplicates. `ARRAY` will ingest data as-is | `SORTED_ARRAY` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTEyMjEyOnYy", "diffSide": "RIGHT", "path": "docs/querying/multi-value-dimensions.md", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMDozODo0MlrOIJqY1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwODoxMzoyMFrOIKaVmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.\n          \n          \n            \n            characters), by default Druid lists the values in alphabetical order, see [Dimension Objects](../ingestion/index.md#dimension-objects) for configuration.\n          \n      \n    \n    \n  \n\nPlease use .md for links. Also, it's not clear to me what the related information is at the destination. But I'm a still fairly new to Druid.", "url": "https://github.com/apache/druid/pull/10695#discussion_r547002582", "createdAt": "2020-12-22T00:38:42Z", "author": {"login": "techdocsmith"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1ODMwMw==", "bodyText": "Thanks @techdocsmith, I've updated the commit with your recommendations. \"Lists\" is the wrong verb here, \"ingests\" would be more appropriate. The referred section is the above committed detail about multiValueHandling.", "url": "https://github.com/apache/druid/pull/10695#discussion_r547158303", "createdAt": "2020-12-22T09:12:56Z", "author": {"login": "lkm"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTM0OQ==", "bodyText": "Also .md should be .html, check the rest of the reference in the file. The markdown is compiled for the web version of the doc.", "url": "https://github.com/apache/druid/pull/10695#discussion_r547159349", "createdAt": "2020-12-22T09:14:55Z", "author": {"login": "lkm"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQwNDMwOQ==", "bodyText": "@lkm , please see: #10528 Using .md is more flexible for viewing docs locally and for publishing to the web", "url": "https://github.com/apache/druid/pull/10695#discussion_r547404309", "createdAt": "2020-12-22T17:26:57Z", "author": {"login": "techdocsmith"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc4ODE4Nw==", "bodyText": "Thanks for the context @techdocsmith, I've changed it to .md", "url": "https://github.com/apache/druid/pull/10695#discussion_r547788187", "createdAt": "2020-12-23T08:13:20Z", "author": {"login": "lkm"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default they are sorted alphabetically, see [Dimension Objects](../ingestion/index.html#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzAwMjU4Mg=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTQ3ODc4OnYy", "diffSide": "RIGHT", "path": "docs/querying/multi-value-dimensions.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNjowMjo1OFrOIQGteg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNjowMjo1OFrOIQGteg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1ODA3NA==", "bodyText": "This is a run on sentence. Please replace the comma with a period and split up the sentences.", "url": "https://github.com/apache/druid/pull/10695#discussion_r553758074", "createdAt": "2021-01-08T06:02:58Z", "author": {"login": "gianm"}, "path": "docs/querying/multi-value-dimensions.md", "diffHunk": "@@ -25,7 +25,7 @@ title: \"Multi-value dimensions\"\n \n Apache Druid supports \"multi-value\" string dimensions. These are generated when an input field contains an\n array of values instead of a single value (e.g. JSON arrays, or a TSV field containing one or more `listDelimiter`\n-characters).\n+characters), by default Druid ingests the values in alphabetical order, see [Dimension Objects](../ingestion/index.md#dimension-objects) for configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTQ4MTQ3OnYy", "diffSide": "RIGHT", "path": "docs/ingestion/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNjowNDowNlrOIQGu4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNjowNDowNlrOIQGu4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1ODQzNQ==", "bodyText": "It'd be nice to link \"multi-value fields\" to the ../querying/multi-value-dimensions.md doc, so these two pages cross-link to each other.", "url": "https://github.com/apache/druid/pull/10695#discussion_r553758435", "createdAt": "2021-01-08T06:04:06Z", "author": {"login": "gianm"}, "path": "docs/ingestion/index.md", "diffHunk": "@@ -480,6 +480,7 @@ Dimension objects can have the following components:\n | type | Either `string`, `long`, `float`, or `double`. | `string` |\n | name | The name of the dimension. This will be used as the field name to read from input records, as well as the column name stored in generated segments.<br><br>Note that you can use a [`transformSpec`](#transformspec) if you want to rename columns during ingestion time. | none (required) |\n | createBitmapIndex | For `string` typed dimensions, whether or not bitmap indexes should be created for the column in generated segments. Creating a bitmap index requires more storage, but speeds up certain kinds of filtering (especially equality and prefix filtering). Only supported for `string` typed dimensions. | `true` |\n+| multiValueHandling | Specify the type of handling for multi-value fields. Possible values are `sorted_array`, `sorted_set`, and `array`. `sorted_array` and `sorted_set` order the array upon ingestion. `sorted_set` removes duplicates. `array` ingests data as-is | `sorted_array` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2935, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}