{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNjkxNDI5", "number": 10318, "title": "Fix handling of 'join' on top of 'union' datasources.", "bodyText": "The problem is that unions are typically rewritten into a series of individual queries on the underlying tables, but this isn't done when the union is wrapped in a join.\nThe main changes are in UnionQueryRunner:\n\nReplace an instanceof UnionQueryRunner check with DataSourceAnalysis.\nReplace a query.withDataSource call with a new function, Queries.withBaseDataSource.\n\nTogether, these enable UnionQueryRunner to \"see through\" a join.", "createdAt": "2020-08-24T18:28:44Z", "url": "https://github.com/apache/druid/pull/10318", "merged": true, "mergeCommit": {"oid": "21703d81ac4aabb8c2dfc66cacd18a42b3c38fbd"}, "closed": true, "closedAt": "2020-08-26T21:23:55Z", "author": {"login": "gianm"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCG5b7gH2gAyNDcyNjkxNDI5OjViMWUxOWZlZTQ5MGNmMWFmNmQ3OWViMjE0ZDY1NGE3ZGMwODNhNWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCymU6AFqTQ3NTg2ODcxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b1e19fee490cf1af6d79eb214d654a7dc083a5e", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/5b1e19fee490cf1af6d79eb214d654a7dc083a5e", "committedDate": "2020-08-24T18:27:15Z", "message": "Fix handling of 'join' on top of 'union' datasources.\n\nThe problem is that unions are typically rewritten into a series of\nindividual queries on the underlying tables, but this isn't done when\nthe union is wrapped in a join.\n\nThe main changes are in UnionQueryRunner:\n\n1) Replace an instanceof UnionQueryRunner check with DataSourceAnalysis.\n2) Replace a \"query.withDataSource\" call with a new function, \"Queries.withBaseDataSource\".\n\nTogether, these enable UnionQueryRunner to \"see through\" a join."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6373fd243c55d1737bfc7313432b7b2f6480d8c", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/a6373fd243c55d1737bfc7313432b7b2f6480d8c", "committedDate": "2020-08-25T05:47:27Z", "message": "Tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bc0c3b4b585afab4865057245a7d0266fa4a94b", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/2bc0c3b4b585afab4865057245a7d0266fa4a94b", "committedDate": "2020-08-25T07:51:12Z", "message": "Adjust heap sizes for integration tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "2bc0c3b4b585afab4865057245a7d0266fa4a94b", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/2bc0c3b4b585afab4865057245a7d0266fa4a94b", "committedDate": "2020-08-25T07:51:12Z", "message": "Adjust heap sizes for integration tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MjM4NDk4", "url": "https://github.com/apache/druid/pull/10318#pullrequestreview-475238498", "createdAt": "2020-08-26T07:52:57Z", "commit": {"oid": "2bc0c3b4b585afab4865057245a7d0266fa4a94b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo1Mjo1N1rOHHAKDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNzo1Mjo1N1rOHHAKDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzEwNDY1NQ==", "bodyText": "can we use more explicit condition such as analysis.getBaseDataSource() instanceof UnionDataSource than this analysis.getBaseTableDataSources().get().size() != 1?  May be the assumption around number of tables will not be valid in future.", "url": "https://github.com/apache/druid/pull/10318#discussion_r477104655", "createdAt": "2020-08-26T07:52:57Z", "author": {"login": "abhishekagarwal87"}, "path": "processing/src/main/java/org/apache/druid/query/UnionQueryRunner.java", "diffHunk": "@@ -41,30 +42,27 @@ public UnionQueryRunner(\n   public Sequence<T> run(final QueryPlus<T> queryPlus, final ResponseContext responseContext)\n   {\n     Query<T> query = queryPlus.getQuery();\n-    DataSource dataSource = query.getDataSource();\n-    if (dataSource instanceof UnionDataSource) {\n+\n+    final DataSourceAnalysis analysis = DataSourceAnalysis.forDataSource(query.getDataSource());\n+\n+    if (analysis.isConcreteTableBased() && analysis.getBaseTableDataSources().get().size() != 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc0c3b4b585afab4865057245a7d0266fa4a94b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02aabcd637e36b4a8373803f688af43ee7ad3b14", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/02aabcd637e36b4a8373803f688af43ee7ad3b14", "committedDate": "2020-08-26T18:24:10Z", "message": "Different approach, more tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ecb6138e89a24d7eafde7aba8fc8e5691446223", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/8ecb6138e89a24d7eafde7aba8fc8e5691446223", "committedDate": "2020-08-26T18:24:37Z", "message": "Merge branch 'master' into fix-join-union"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5d3e75b74ccd4e8be4113c58630912da314802e", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/d5d3e75b74ccd4e8be4113c58630912da314802e", "committedDate": "2020-08-26T18:25:46Z", "message": "Tweak."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "575b30d63e601d7b395161da0e9d3ceeb60f2806", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/575b30d63e601d7b395161da0e9d3ceeb60f2806", "committedDate": "2020-08-26T18:26:22Z", "message": "Styling."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODE2MzY2", "url": "https://github.com/apache/druid/pull/10318#pullrequestreview-475816366", "createdAt": "2020-08-26T20:00:52Z", "commit": {"oid": "575b30d63e601d7b395161da0e9d3ceeb60f2806"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMDo1MlrOHHbsKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDowMDo1MlrOHHbsKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU1NTc1Mg==", "bodyText": "is it optimization because of which this else if is not folded into else?", "url": "https://github.com/apache/druid/pull/10318#discussion_r477555752", "createdAt": "2020-08-26T20:00:52Z", "author": {"login": "abhishekagarwal87"}, "path": "processing/src/main/java/org/apache/druid/query/UnionQueryRunner.java", "diffHunk": "@@ -41,34 +44,51 @@ public UnionQueryRunner(\n   public Sequence<T> run(final QueryPlus<T> queryPlus, final ResponseContext responseContext)\n   {\n     Query<T> query = queryPlus.getQuery();\n-    DataSource dataSource = query.getDataSource();\n-    if (dataSource instanceof UnionDataSource) {\n \n-      return new MergeSequence<>(\n-          query.getResultOrdering(),\n-          Sequences.simple(\n-              Lists.transform(\n-                  ((UnionDataSource) dataSource).getDataSources(),\n-                  new Function<DataSource, Sequence<T>>()\n-                  {\n-                    @Override\n-                    public Sequence<T> apply(DataSource singleSource)\n-                    {\n-                      return baseRunner.run(\n-                          queryPlus.withQuery(\n-                              query.withDataSource(singleSource)\n-                                   // assign the subqueryId. this will be used to validate that every query servers\n-                                   // have responded per subquery in RetryQueryRunner\n-                                   .withDefaultSubQueryId()\n-                          ),\n-                          responseContext\n-                      );\n-                    }\n-                  }\n-              )\n-          )\n-      );\n+    final DataSourceAnalysis analysis = DataSourceAnalysis.forDataSource(query.getDataSource());\n+\n+    if (analysis.isConcreteTableBased() && analysis.getBaseUnionDataSource().isPresent()) {\n+      // Union of tables.\n+\n+      final UnionDataSource unionDataSource = analysis.getBaseUnionDataSource().get();\n+\n+      if (unionDataSource.getDataSources().isEmpty()) {\n+        // Shouldn't happen, because UnionDataSource doesn't allow empty unions.\n+        throw new ISE(\"Unexpectedly received empty union\");\n+      } else if (unionDataSource.getDataSources().size() == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575b30d63e601d7b395161da0e9d3ceeb60f2806"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODYxMzY5", "url": "https://github.com/apache/druid/pull/10318#pullrequestreview-475861369", "createdAt": "2020-08-26T21:10:08Z", "commit": {"oid": "575b30d63e601d7b395161da0e9d3ceeb60f2806"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODY4NzE4", "url": "https://github.com/apache/druid/pull/10318#pullrequestreview-475868718", "createdAt": "2020-08-26T21:22:12Z", "commit": {"oid": "575b30d63e601d7b395161da0e9d3ceeb60f2806"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3488, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}