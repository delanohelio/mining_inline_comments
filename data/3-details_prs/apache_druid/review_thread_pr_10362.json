{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNzg2MDg0", "number": 10362, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoxOTo0OVrOElCO7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzozNDoxM1rOEmmlOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjY5MzU3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/druid/server/coordinator/LoadQueuePeonTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoxOTo0OVrOHUTudA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDoxODoyOFrOHVJT7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1Njc1Ng==", "bodyText": "Instead of this, would it be better to have a separate countdown latch of size 2 and decrement it in the CuratorLoadQueuePeon callback and do an Assert with awaitLatch?", "url": "https://github.com/apache/druid/pull/10362#discussion_r491056756", "createdAt": "2020-09-18T16:19:49Z", "author": {"login": "a2l007"}, "path": "server/src/test/java/org/apache/druid/server/coordinator/LoadQueuePeonTest.java", "diffHunk": "@@ -336,6 +336,12 @@ public void execute()\n     Assert.assertTrue(timing.forWaiting().awaitLatch(segmentLoadedSignal));\n     Assert.assertEquals(0, loadQueuePeon.getSegmentsToLoad().size());\n     Assert.assertEquals(0L, loadQueuePeon.getLoadQueueSize());\n+    curator.delete().guaranteed().forPath(loadRequestPath);\n+    while (null != curator.checkExists().forPath(loadRequestPath)) {\n+      Thread.sleep(5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa57a1e0e43a6bc513405765e3d84421ec269a0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkzNDcwMQ==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10362#discussion_r491934701", "createdAt": "2020-09-21T10:18:28Z", "author": {"login": "viongpanzi"}, "path": "server/src/test/java/org/apache/druid/server/coordinator/LoadQueuePeonTest.java", "diffHunk": "@@ -336,6 +336,12 @@ public void execute()\n     Assert.assertTrue(timing.forWaiting().awaitLatch(segmentLoadedSignal));\n     Assert.assertEquals(0, loadQueuePeon.getSegmentsToLoad().size());\n     Assert.assertEquals(0L, loadQueuePeon.getLoadQueueSize());\n+    curator.delete().guaranteed().forPath(loadRequestPath);\n+    while (null != curator.checkExists().forPath(loadRequestPath)) {\n+      Thread.sleep(5);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1Njc1Ng=="}, "originalCommit": {"oid": "9aa57a1e0e43a6bc513405765e3d84421ec269a0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjY5NDY0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/CuratorLoadQueuePeon.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNjoyMDowNlrOHUTvDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMDoxODowMFrOHVJS_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NjkxMQ==", "bodyText": "Could you please add a comment here?", "url": "https://github.com/apache/druid/pull/10362#discussion_r491056911", "createdAt": "2020-09-18T16:20:06Z", "author": {"login": "a2l007"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/CuratorLoadQueuePeon.java", "diffHunk": "@@ -302,8 +302,9 @@ private void actionCompleted(SegmentHolder segmentHolder)\n   {\n     switch (segmentHolder.getType()) {\n       case LOAD:\n-        segmentsToLoad.remove(segmentHolder.getSegment());\n-        queuedSize.addAndGet(-segmentHolder.getSegmentSize());\n+        if (null != segmentsToLoad.remove(segmentHolder.getSegment())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa57a1e0e43a6bc513405765e3d84421ec269a0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkzNDQ2MQ==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10362#discussion_r491934461", "createdAt": "2020-09-21T10:18:00Z", "author": {"login": "viongpanzi"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/CuratorLoadQueuePeon.java", "diffHunk": "@@ -302,8 +302,9 @@ private void actionCompleted(SegmentHolder segmentHolder)\n   {\n     switch (segmentHolder.getType()) {\n       case LOAD:\n-        segmentsToLoad.remove(segmentHolder.getSegment());\n-        queuedSize.addAndGet(-segmentHolder.getSegmentSize());\n+        if (null != segmentsToLoad.remove(segmentHolder.getSegment())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA1NjkxMQ=="}, "originalCommit": {"oid": "9aa57a1e0e43a6bc513405765e3d84421ec269a0"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTEzNDY3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/CuratorLoadQueuePeon.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzozNDoxM1rOHWul4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNjo0OToyOFrOHXMB3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU5NDA4MA==", "bodyText": "Typo for negative", "url": "https://github.com/apache/druid/pull/10362#discussion_r493594080", "createdAt": "2020-09-23T13:34:13Z", "author": {"login": "a2l007"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/CuratorLoadQueuePeon.java", "diffHunk": "@@ -302,8 +302,12 @@ private void actionCompleted(SegmentHolder segmentHolder)\n   {\n     switch (segmentHolder.getType()) {\n       case LOAD:\n-        segmentsToLoad.remove(segmentHolder.getSegment());\n-        queuedSize.addAndGet(-segmentHolder.getSegmentSize());\n+        // When load failed a segment will be removed from the segmentsToLoad twice and\n+        // null value will be returned at the second time in which case queueSize may be negitive.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8d9d1d0c25031b2fa66e92a6ee2e1efd30961ed"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA3NjM4Mw==", "bodyText": "Fixed", "url": "https://github.com/apache/druid/pull/10362#discussion_r494076383", "createdAt": "2020-09-24T06:49:28Z", "author": {"login": "viongpanzi"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/CuratorLoadQueuePeon.java", "diffHunk": "@@ -302,8 +302,12 @@ private void actionCompleted(SegmentHolder segmentHolder)\n   {\n     switch (segmentHolder.getType()) {\n       case LOAD:\n-        segmentsToLoad.remove(segmentHolder.getSegment());\n-        queuedSize.addAndGet(-segmentHolder.getSegmentSize());\n+        // When load failed a segment will be removed from the segmentsToLoad twice and\n+        // null value will be returned at the second time in which case queueSize may be negitive.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU5NDA4MA=="}, "originalCommit": {"oid": "e8d9d1d0c25031b2fa66e92a6ee2e1efd30961ed"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3174, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}