{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzk1MDUx", "number": 9928, "title": "Fix various processing buffer leaks and simplify BlockingPool.", "bodyText": "GroupByQueryEngineV2: Fix leak of intermediate processing buffer when\nexceptions are thrown before result sequence is created.\nPooledTopNAlgorithm: Fix leak of intermediate processing buffer when\nexceptions are thrown before the PooledTopNParams object is created.\nBlockingPool: Remove unused \"take\" methods.", "createdAt": "2020-05-26T19:01:06Z", "url": "https://github.com/apache/druid/pull/9928", "merged": true, "mergeCommit": {"oid": "3d81564a14253515f9dc849334fa7db073eb5f58"}, "closed": true, "closedAt": "2020-06-03T01:26:19Z", "author": {"login": "gianm"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclJa3NAH2gAyNDIzMzk1MDUxOjVkODc2MzY1YThmODNmMzUyMmVjYTZkZjNjOTcxMTZmYzlhMWIxNjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnd49-AFqTQyMzEzMzMzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d876365a8f83f3522eca6df3c97116fc9a1b168", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/5d876365a8f83f3522eca6df3c97116fc9a1b168", "committedDate": "2020-05-26T18:59:46Z", "message": "- GroupByQueryEngineV2: Fix leak of intermediate processing buffer when\n  exceptions are thrown before result sequence is created.\n- PooledTopNAlgorithm: Fix leak of intermediate processing buffer when\n  exceptions are thrown before the PooledTopNParams object is created.\n- BlockingPool: Remove unused \"take\" methods."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4Nzk4NDcy", "url": "https://github.com/apache/druid/pull/9928#pullrequestreview-418798472", "createdAt": "2020-05-27T01:31:52Z", "commit": {"oid": "5d876365a8f83f3522eca6df3c97116fc9a1b168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMTozMTo1MlrOGa2V8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMTozMTo1MlrOGa2V8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgwNjUxNQ==", "bodyText": "What line can throw an exception? Or is this more like to be safer?", "url": "https://github.com/apache/druid/pull/9928#discussion_r430806515", "createdAt": "2020-05-27T01:31:52Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/query/topn/PooledTopNAlgorithm.java", "diffHunk": "@@ -243,27 +240,38 @@ public PooledTopNParams makeInitParams(ColumnSelectorPlus selectorPlus, Cursor c\n       }\n     };\n \n-    final int numBytesToWorkWith = resultsBuf.remaining();\n-    final int[] aggregatorSizes = new int[query.getAggregatorSpecs().size()];\n-    int numBytesPerRecord = 0;\n+    final ResourceHolder<ByteBuffer> resultsBufHolder = bufferPool.take();\n \n-    for (int i = 0; i < query.getAggregatorSpecs().size(); ++i) {\n-      aggregatorSizes[i] = query.getAggregatorSpecs().get(i).getMaxIntermediateSizeWithNulls();\n-      numBytesPerRecord += aggregatorSizes[i];\n-    }\n+    try {\n+      final ByteBuffer resultsBuf = resultsBufHolder.get();\n+      resultsBuf.clear();\n+\n+      final int numBytesToWorkWith = resultsBuf.remaining();\n+      final int[] aggregatorSizes = new int[query.getAggregatorSpecs().size()];\n+      int numBytesPerRecord = 0;\n \n-    final int numValuesPerPass = numBytesPerRecord > 0 ? numBytesToWorkWith / numBytesPerRecord : cardinality;\n-\n-    return PooledTopNParams.builder()\n-                           .withSelectorPlus(selectorPlus)\n-                           .withCursor(cursor)\n-                           .withResultsBufHolder(resultsBufHolder)\n-                           .withResultsBuf(resultsBuf)\n-                           .withArrayProvider(arrayProvider)\n-                           .withNumBytesPerRecord(numBytesPerRecord)\n-                           .withNumValuesPerPass(numValuesPerPass)\n-                           .withAggregatorSizes(aggregatorSizes)\n-                           .build();\n+      for (int i = 0; i < query.getAggregatorSpecs().size(); ++i) {\n+        aggregatorSizes[i] = query.getAggregatorSpecs().get(i).getMaxIntermediateSizeWithNulls();\n+        numBytesPerRecord += aggregatorSizes[i];\n+      }\n+\n+      final int numValuesPerPass = numBytesPerRecord > 0 ? numBytesToWorkWith / numBytesPerRecord : cardinality;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d876365a8f83f3522eca6df3c97116fc9a1b168"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "870c9215452460b83d10077719aa8dde5c83289b", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/870c9215452460b83d10077719aa8dde5c83289b", "committedDate": "2020-06-02T02:23:23Z", "message": "Merge branch 'master' into fix-buffer-leaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2653d2adedb88446611dee9a8c4bccbbb5c21688", "author": {"user": {"login": "gianm", "name": "Gian Merlino"}}, "url": "https://github.com/apache/druid/commit/2653d2adedb88446611dee9a8c4bccbbb5c21688", "committedDate": "2020-06-02T02:46:47Z", "message": "Add tests to verify that buffers have been returned."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTMzMzMz", "url": "https://github.com/apache/druid/pull/9928#pullrequestreview-423133333", "createdAt": "2020-06-02T23:58:36Z", "commit": {"oid": "2653d2adedb88446611dee9a8c4bccbbb5c21688"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2401, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}