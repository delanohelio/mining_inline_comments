{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTMyMTE4", "number": 10012, "title": "Set the core partition set size properly for batch ingestion with dynamic partitioning", "bodyText": "Fixes #9972.\nDescription\nThis PR add a new shardSpec to fix #9972 which is used in batch ingestion with dynamic partitioning. The new shardSpec contains only the partitionId and is converted to the NumberedShardSpec with the proper core set size when the segment is published.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.\n\n\nKey changed/added classes in this PR\n\nBuildingNumberedShardSpec\nSegmentPublisherHelper", "createdAt": "2020-06-10T00:25:55Z", "url": "https://github.com/apache/druid/pull/10012", "merged": true, "mergeCommit": {"oid": "9a10f8352bd0c8c0fd5199226a4ff3a4cf2e6d46"}, "closed": true, "closedAt": "2020-06-13T04:39:38Z", "author": {"login": "jihoonson"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpuYxWAH2gAyNDMyMTMyMTE4OmVkYWZkMTYxN2IyN2VmZjJlZWY4MTJlNDY5NzY5MzBkNzVmZDA5ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqFyZAAFqTQyODU3MDA2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "edafd1617b27eff2eef812e46976930d75fd09e8", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/edafd1617b27eff2eef812e46976930d75fd09e8", "committedDate": "2020-06-10T00:19:40Z", "message": "Fill in the core partition set size properly for batch ingestion with\ndynamic partitioning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "771eec1364aa3e2707a4c10d97cb372b15807842", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/771eec1364aa3e2707a4c10d97cb372b15807842", "committedDate": "2020-06-10T00:21:58Z", "message": "Merge branch 'master' of github.com:apache/druid into dynamic-partition-atomic-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1aeddb63487c4e646acc7b541fd00a3079479df", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/f1aeddb63487c4e646acc7b541fd00a3079479df", "committedDate": "2020-06-10T00:37:38Z", "message": "incomplete javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDg3MzIz", "url": "https://github.com/apache/druid/pull/10012#pullrequestreview-428487323", "createdAt": "2020-06-10T23:07:03Z", "commit": {"oid": "f1aeddb63487c4e646acc7b541fd00a3079479df"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzowNzowM1rOGiJKdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzowOTo0MlrOGiJNqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1NDkwMA==", "bodyText": "Suggest mentioning here that overwrites with segment locking use NumberedOverwriteShardSpec", "url": "https://github.com/apache/druid/pull/10012#discussion_r438454900", "createdAt": "2020-06-10T23:07:03Z", "author": {"login": "jon-wei"}, "path": "core/src/main/java/org/apache/druid/timeline/partition/BuildingNumberedShardSpec.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.timeline.partition;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.RangeSet;\n+import org.apache.druid.data.input.InputRow;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * This is a special shardSpec which is temporarily used during batch ingestion. In Druid, there is a concept\n+ * of core partition set which is a set of segments atomically becoming queryable together in Brokers. The core\n+ * partition set is represented as a range of partitionIds. For {@link NumberedShardSpec}, the core partition set\n+ * is [0, {@link NumberedShardSpec#partitions}).\n+ *\n+ * The NumberedShardSpec is used for dynamic partitioning which is based on the number of rows in each segment.\n+ * In streaming ingestion, the core partition set size cannot be determined since it's impossible to know how many\n+ * segments will be created per time chunk. However, in batch ingestion with time chunk locking, the core partition\n+ * set is the set of segments created by an initial task or an overwriting task. Since the core partition set is\n+ * determined when the task publishes segments at the end, the task postpones creating proper NumberedShardSpec\n+ * until the end.\n+ *\n+ * This shardSpec is used for such use case. A non-appending batch task can use this shardSpec until it publishes\n+ * segments at last. When it publishes segments, it should convert the shardSpec of those segments to NumberedShardSpec.\n+ * See {@code SegmentPublisherHelper#annotateShardSpec} for converting to NumberedShardSpec. Note that, when\n+ * the segment lock is used, the Overlord coordinates the segment allocation and this class is never used. See\n+ * {@link PartialShardSpec} for that case.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1aeddb63487c4e646acc7b541fd00a3079479df"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1NTE0Mg==", "bodyText": "determins -> determines", "url": "https://github.com/apache/druid/pull/10012#discussion_r438455142", "createdAt": "2020-06-10T23:07:49Z", "author": {"login": "jon-wei"}, "path": "core/src/main/java/org/apache/druid/timeline/partition/PartialShardSpec.java", "diffHunk": "@@ -29,7 +29,10 @@\n \n /**\n  * Class to contain all information of a {@link ShardSpec} except for the partition ID.\n- * This class is mainly used by the indexing tasks to allocate new segments using the Overlord.\n+ * This class is used when the segment allocation is coordinated by the Overlord; when appending segments to an\n+ * existing datasource (either streaming ingestion or batch append) or when using segment locking.\n+ * The ingestion tasks send all information required for allocating a new segment using this class and the Overlord\n+ * determins the partition ID to create a new segment.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1aeddb63487c4e646acc7b541fd00a3079479df"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1NTcyMg==", "bodyText": "Is this used for all segment locking cases? (is PartialShardSpec also involved in overwrites with segment locking, or is that just OverwriteShardSpec?)", "url": "https://github.com/apache/druid/pull/10012#discussion_r438455722", "createdAt": "2020-06-10T23:09:42Z", "author": {"login": "jon-wei"}, "path": "core/src/main/java/org/apache/druid/timeline/partition/PartialShardSpec.java", "diffHunk": "@@ -29,7 +29,10 @@\n \n /**\n  * Class to contain all information of a {@link ShardSpec} except for the partition ID.\n- * This class is mainly used by the indexing tasks to allocate new segments using the Overlord.\n+ * This class is used when the segment allocation is coordinated by the Overlord; when appending segments to an\n+ * existing datasource (either streaming ingestion or batch append) or when using segment locking.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1aeddb63487c4e646acc7b541fd00a3079479df"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42e37e2e85f58af0b0da4c7fcf6cfad29af4dadb", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/42e37e2e85f58af0b0da4c7fcf6cfad29af4dadb", "committedDate": "2020-06-10T23:51:06Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5e197ea19b23d8cd68d61d9c5bb12da66a53332", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/d5e197ea19b23d8cd68d61d9c5bb12da66a53332", "committedDate": "2020-06-11T00:20:19Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99842f9d4793e185ab5c156ea1ff66b8ee187737", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/99842f9d4793e185ab5c156ea1ff66b8ee187737", "committedDate": "2020-06-11T01:13:07Z", "message": "fix json serde, add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2222b9a6596a88a9f44aa966adc364ba087c10e", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/b2222b9a6596a88a9f44aa966adc364ba087c10e", "committedDate": "2020-06-11T03:18:48Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTcwMDYx", "url": "https://github.com/apache/druid/pull/10012#pullrequestreview-428570061", "createdAt": "2020-06-11T03:35:28Z", "commit": {"oid": "b2222b9a6596a88a9f44aa966adc364ba087c10e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2051, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}