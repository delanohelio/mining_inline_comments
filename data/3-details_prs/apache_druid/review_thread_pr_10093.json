{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzYyODMz", "number": 10093, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzozMjowNlrOEJwpxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo0ODozM1rOEMLlow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NjY5NzY1OnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzozMjowNlrOGqbF3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNjoyNDo1NlrOGtKOtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNzI0NQ==", "bodyText": "Does this also need to consider the havingSpec similar to the ResultLevelCacheKey below?", "url": "https://github.com/apache/druid/pull/10093#discussion_r447137245", "createdAt": "2020-06-29T17:32:06Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChest.java", "diffHunk": "@@ -524,6 +524,7 @@ public boolean isCacheable(GroupByQuery query, boolean willMergeRunners)\n             .appendCacheables(query.getAggregatorSpecs())\n             .appendCacheables(query.getDimensions())\n             .appendCacheable(query.getVirtualColumns())\n+            .appendCacheable(query.getLimitSpec())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e47a076128b04024cc3e9cb0aa8529829dc5785"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwNjcxMQ==", "bodyText": "havingSpec is used in post-processing step only, so it should not be required here", "url": "https://github.com/apache/druid/pull/10093#discussion_r450006711", "createdAt": "2020-07-06T06:24:56Z", "author": {"login": "nishantmonu51"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChest.java", "diffHunk": "@@ -524,6 +524,7 @@ public boolean isCacheable(GroupByQuery query, boolean willMergeRunners)\n             .appendCacheables(query.getAggregatorSpecs())\n             .appendCacheables(query.getDimensions())\n             .appendCacheable(query.getVirtualColumns())\n+            .appendCacheable(query.getLimitSpec())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNzI0NQ=="}, "originalCommit": {"oid": "8e47a076128b04024cc3e9cb0aa8529829dc5785"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjA4MjI3OnYy", "diffSide": "RIGHT", "path": "processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo0ODozM1rOGuJSPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxNToyMlrOGwoAXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzOTgwNg==", "bodyText": "Would you please add another query which has the same spec and CTX_KEY_APPLY_LIMIT_PUSH_DOWN of true in the context, and check the equality of the cache key of the query and query1?", "url": "https://github.com/apache/druid/pull/10093#discussion_r451039806", "createdAt": "2020-07-07T17:48:33Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java", "diffHunk": "@@ -929,6 +930,64 @@ private void doTestCacheStrategy(final ValueType valueType, final Object dimValu\n     Assert.assertEquals(typeAdjustedResult2, fromResultCacheResult);\n   }\n \n+  @Test\n+  public void testQueryCacheKeyWithLimitSpec()\n+  {\n+    final GroupByQuery query1 = GroupByQuery", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c0aee0a98574002dd2b5f8281cc48e623b33af"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4NTA5Ng==", "bodyText": "Oh sorry, I forgot to approve this PR. This comment is not a blocker if you want to do in a follow-up.", "url": "https://github.com/apache/druid/pull/10093#discussion_r452385096", "createdAt": "2020-07-09T17:42:01Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java", "diffHunk": "@@ -929,6 +930,64 @@ private void doTestCacheStrategy(final ValueType valueType, final Object dimValu\n     Assert.assertEquals(typeAdjustedResult2, fromResultCacheResult);\n   }\n \n+  @Test\n+  public void testQueryCacheKeyWithLimitSpec()\n+  {\n+    final GroupByQuery query1 = GroupByQuery", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzOTgwNg=="}, "originalCommit": {"oid": "54c0aee0a98574002dd2b5f8281cc48e623b33af"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0MDI4Ng==", "bodyText": "added test for this.", "url": "https://github.com/apache/druid/pull/10093#discussion_r453640286", "createdAt": "2020-07-13T13:15:22Z", "author": {"login": "nishantmonu51"}, "path": "processing/src/test/java/org/apache/druid/query/groupby/GroupByQueryQueryToolChestTest.java", "diffHunk": "@@ -929,6 +930,64 @@ private void doTestCacheStrategy(final ValueType valueType, final Object dimValu\n     Assert.assertEquals(typeAdjustedResult2, fromResultCacheResult);\n   }\n \n+  @Test\n+  public void testQueryCacheKeyWithLimitSpec()\n+  {\n+    final GroupByQuery query1 = GroupByQuery", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAzOTgwNg=="}, "originalCommit": {"oid": "54c0aee0a98574002dd2b5f8281cc48e623b33af"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2381, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}