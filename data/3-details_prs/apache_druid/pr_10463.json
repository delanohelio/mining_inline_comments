{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzAyNjQx", "number": 10463, "title": "adjustments to Kafka integration tests to allow running against Azure Event Hubs streams", "bodyText": "Description\nThis PR adjust the Kafka integration tests to slightly adjust the order in which the druid.test.config.properties.kafka.test.property.* overrides are applied, allowing bootstrap.servers to be overridden in the docker tests to point at Azure event hubs. Additionally, an option to disable transaction tests (Azure Event Hubs does not support Kafka transactions) in ITKafkaIndexingServiceDataFormatTest. Note that this PR does not actually add any new integration tests, it just allows more configurability making this stuff possible.\nWith these adjustments I was able to run ITKafkaIndexingServiceDataFormatTest and ITKafkaIndexingServiceNonTransactionalSerializedTest with all tests passing by overriding the kafka configs with something like this:\n-Ddruid.test.config.properties.kafka.test.property.security.protocol=SASL_SSL\n-Ddruid.test.config.properties.kafka.test.property.sasl.mechanism=PLAIN\n-Ddruid.test.config.properties.kafka.test.property.sasl.jaas.config=\"org.apache.kafka.common.security.plain.PlainLoginModule required username=\\\"$ConnectionString\\\" password=\\\"Endpoint=sb://{my-hub-name}.servicebus.windows.net/;SharedAccessKeyName={key-name};SharedAccessKey={shared-key}\";\"\n-Ddruid.test.config.properties.kafka.test.property.bootstrap.servers={my-hub-name}.servicebus.windows.net:9093\n\nFor ITKafkaIndexingServiceNonTransactionalParallelizedTest, I encountered an exception in the test itself with the admin client API trying to change the partition count for testKafkaIndexDataWithKafkaReshardSplit:\njava.util.concurrent.ExecutionException: org.apache.kafka.common.errors.InvalidRequestException: This most likely occurs because of a request being malformed by the client library or the message was sent to an incompatible broker. See the broker logs for more details.\n\n\tat org.apache.kafka.common.internals.KafkaFutureImpl.wrapAndThrow(KafkaFutureImpl.java:45)\n\tat org.apache.kafka.common.internals.KafkaFutureImpl.access$000(KafkaFutureImpl.java:32)\n\tat org.apache.kafka.common.internals.KafkaFutureImpl$SingleWaiter.await(KafkaFutureImpl.java:89)\n\tat org.apache.kafka.common.internals.KafkaFutureImpl.get(KafkaFutureImpl.java:260)\n\tat org.apache.druid.testing.utils.KafkaAdminClient.updatePartitionCount(KafkaAdminClient.java:82)\n\tat org.apache.druid.tests.indexer.AbstractStreamIndexingTest.testIndexWithStreamReshardHelper(AbstractStreamIndexingTest.java:427)\n\nso it cannot be run successfully at this time (the other test, testKafkaIndexDataWithStartStopSupervisor does succeed), and none of the transactional tests can run since it isn't supported.\n\nThis PR has:\n\n been self-reviewed.\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.", "createdAt": "2020-10-02T06:08:05Z", "url": "https://github.com/apache/druid/pull/10463", "merged": true, "mergeCommit": {"oid": "307c1b072006115dc0780913bb3fd7d1831849b4"}, "closed": true, "closedAt": "2020-10-05T15:54:30Z", "author": {"login": "clintropolis"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOfI7XgH2gAyNDk2NzAyNjQxOmYwYWNmZDFmNDhmODJiNWFiZGJjMGFmMmQyMWJjYTVlMWQ4ZWZjZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOtX-_AFqTUwMTQ3MTM2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f0acfd1f48f82b5abdbc0af2d21bca5e1d8efcd2", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/f0acfd1f48f82b5abdbc0af2d21bca5e1d8efcd2", "committedDate": "2020-10-02T05:28:59Z", "message": "adjustments to kafka integration tests to allow running against azure event hubs in kafka mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0ad8a54673505c4e0696abc2618fb4fc2b01b01", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/d0ad8a54673505c4e0696abc2618fb4fc2b01b01", "committedDate": "2020-10-02T12:20:01Z", "message": "oops"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjA3NDA2", "url": "https://github.com/apache/druid/pull/10463#pullrequestreview-501207406", "createdAt": "2020-10-02T14:54:55Z", "commit": {"oid": "d0ad8a54673505c4e0696abc2618fb4fc2b01b01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo1NDo1NVrOHbwyiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo1NDo1NVrOHbwyiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3Mjk2OQ==", "bodyText": "How does this flatten the map? It looks like it's just ignoring any value that isn't a String?", "url": "https://github.com/apache/druid/pull/10463#discussion_r498872969", "createdAt": "2020-10-02T14:54:55Z", "author": {"login": "suneet-s"}, "path": "integration-tests/src/main/java/org/apache/druid/testing/DockerConfigProvider.java", "diffHunk": "@@ -260,4 +269,32 @@ public String getStreamEndpoint()\n       }\n     };\n   }\n+\n+  // there is probably a better way to do this...\n+  static class ArbitraryPropertiesJsonDeserializer extends JsonDeserializer<Map<String, String>>\n+  {\n+    @Override\n+    public Map<String, String> deserialize(JsonParser jsonParser, DeserializationContext deserializationContext)\n+        throws IOException\n+    {\n+      // reading like this results in a map that has both nested objects and also flattened string pairs\n+      // so the map looks something like this:\n+\n+      //    {\n+      //      \"a\" : { \"b\": { \"c\" : \"d\" }}},\n+      //      \"a.b.c\":\"d\"\n+      //    }\n+\n+      // filtering out the top level keys which do not have string values produces what we want here that\n+      // '-Ddruid.test.config.properites.some.property.key=foo' -> { \"some.property.key\":\"foo\"}\n+      Map<String, Object> parsed = jsonParser.readValueAs(Map.class);\n+      Map<String, String> flat = new HashMap<>();\n+      for (Map.Entry<String, Object> entry : parsed.entrySet()) {\n+        if (entry.getValue() instanceof String) {\n+          flat.put(entry.getKey(), (String) entry.getValue());\n+        }\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0ad8a54673505c4e0696abc2618fb4fc2b01b01"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjEwMjYx", "url": "https://github.com/apache/druid/pull/10463#pullrequestreview-501210261", "createdAt": "2020-10-02T14:58:07Z", "commit": {"oid": "d0ad8a54673505c4e0696abc2618fb4fc2b01b01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo1ODowOFrOHbw6hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDo1ODowOFrOHbw6hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg3NTAxMg==", "bodyText": "Maybe move this to line 56 so that the config can override other properties like acks if needed in the future", "url": "https://github.com/apache/druid/pull/10463#discussion_r498875012", "createdAt": "2020-10-02T14:58:08Z", "author": {"login": "suneet-s"}, "path": "integration-tests/src/main/java/org/apache/druid/testing/utils/KafkaEventWriter.java", "diffHunk": "@@ -42,8 +42,8 @@\n   public KafkaEventWriter(IntegrationTestingConfig config, boolean txnEnabled)\n   {\n     Properties properties = new Properties();\n-    KafkaUtil.addPropertiesFromTestConfig(config, properties);\n     properties.setProperty(\"bootstrap.servers\", config.getKafkaHost());\n+    KafkaUtil.addPropertiesFromTestConfig(config, properties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0ad8a54673505c4e0696abc2618fb4fc2b01b01"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjE0MjUz", "url": "https://github.com/apache/druid/pull/10463#pullrequestreview-501214253", "createdAt": "2020-10-02T15:02:47Z", "commit": {"oid": "d0ad8a54673505c4e0696abc2618fb4fc2b01b01"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0624e82271ab325e22767267f4b86e9ce37ae987", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/0624e82271ab325e22767267f4b86e9ce37ae987", "committedDate": "2020-10-02T21:52:45Z", "message": "make better"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDY4ODE5", "url": "https://github.com/apache/druid/pull/10463#pullrequestreview-501468819", "createdAt": "2020-10-02T21:57:09Z", "commit": {"oid": "0624e82271ab325e22767267f4b86e9ce37ae987"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efb8b2d17dbc4c54cb31139447831376b8cf6724", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/efb8b2d17dbc4c54cb31139447831376b8cf6724", "committedDate": "2020-10-02T21:58:41Z", "message": "more better"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDcxMzYw", "url": "https://github.com/apache/druid/pull/10463#pullrequestreview-501471360", "createdAt": "2020-10-02T22:04:06Z", "commit": {"oid": "efb8b2d17dbc4c54cb31139447831376b8cf6724"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3317, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}