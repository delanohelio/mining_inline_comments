{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTQyOTMw", "number": 9563, "title": "add lane enforcement for joinish queries", "bodyText": "Description\nThis PR partially squares up the joins work of #9503, #9533, and #9545 with the query laning added in #9407, by extending lane enforcement to queries that run with the LocalQuerySegmentWalker of ClientQuerySegmentWalker, fixing a bug that queries that only use the LocalQuerySegmentWalker are not counted at all. This PR puts things into an interim state so that these queries can fall under lane enforcement, but it has a flaw that it will sequentially acquire and release lanes for each time the ClientQuerySegmentWalker invokes either its local or cluster walker to run a part of a query rather than acquiring all necessary lanes up front and holding through the duration of the query. This is not really an ideal state, since it opens the possibility to fail midway through if a query loses a lane to another query, but it is better than not counting them, and so worth doing for the short term I think.\nIdeally, we could bring up the call to QueryScheduler.run into ClientQuerySegmentWalker or even the http resources, but this isn't currently possible without a fairly heavy refactor of how the broker runs queries. This is due to how they are transformed on the way down, where QueryScheduler.prioritizeAndLaneQuery happens on in the deepest part of the cluster and local walkers runners right before they call QueryScheduler.run because that is when the segments participating in the query are available. I'm not quite sure what this will look like yet.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nLocalQuerySegmentWalker", "createdAt": "2020-03-25T11:50:35Z", "url": "https://github.com/apache/druid/pull/9563", "merged": true, "mergeCommit": {"oid": "fa5da6693ca4dbb614c6398e50e34b772298f5ae"}, "closed": true, "closedAt": "2020-03-30T18:58:17Z", "author": {"login": "clintropolis"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRF5KAgH2gAyMzkzNTQyOTMwOjVlYWFlODQ3YzEyNTE0NmE5OGZjZjYwYzFmOTJkZDFhNTMxYThkOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR2FuHgFqTM4MzE1MzM2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5eaae847c125146a98fcf60c1f92dd1a531a8d94", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/5eaae847c125146a98fcf60c1f92dd1a531a8d94", "committedDate": "2020-03-25T11:34:45Z", "message": "add lane enforcement for joinish queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3387430bdaa6cd10399773bc710d87bfd2400f51", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/3387430bdaa6cd10399773bc710d87bfd2400f51", "committedDate": "2020-03-25T11:35:40Z", "message": "Merge remote-tracking branch 'upstream/master' into joins-and-laning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "606af3f8c4b80c59df9d5664c911edaf3aff1cbb", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/606af3f8c4b80c59df9d5664c911edaf3aff1cbb", "committedDate": "2020-03-25T12:11:32Z", "message": "oops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beb572259a54eb906aca50319709e35af4177d70", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/beb572259a54eb906aca50319709e35af4177d70", "committedDate": "2020-03-25T19:12:58Z", "message": "style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDEzMDQ5", "url": "https://github.com/apache/druid/pull/9563#pullrequestreview-382413049", "createdAt": "2020-03-26T20:59:41Z", "commit": {"oid": "beb572259a54eb906aca50319709e35af4177d70"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDo1OTo0MlrOF8aMCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMToxMToxM1rOF8aozA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg4Nzk0NQ==", "bodyText": "Unnecessary change?", "url": "https://github.com/apache/druid/pull/9563#discussion_r398887945", "createdAt": "2020-03-26T20:59:42Z", "author": {"login": "jihoonson"}, "path": "server/src/main/java/org/apache/druid/server/ClientQuerySegmentWalker.java", "diffHunk": "@@ -462,7 +462,8 @@ public QuerySwappingQueryRunner(QueryRunner<T> baseRunner, Query<T> query, Query\n         throw new ISE(\"Unexpected query received\");\n       }\n \n-      return baseRunner.run(queryPlus.withQuery(newQuery), responseContext);\n+      Sequence<T> result = baseRunner.run(queryPlus.withQuery(newQuery), responseContext);\n+      return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beb572259a54eb906aca50319709e35af4177d70"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg5NTMwOA==", "bodyText": "Would you add @Nullable to the constructor parameter of SegmentServerSelector and getServer()?", "url": "https://github.com/apache/druid/pull/9563#discussion_r398895308", "createdAt": "2020-03-26T21:11:13Z", "author": {"login": "jihoonson"}, "path": "server/src/main/java/org/apache/druid/server/LocalQuerySegmentWalker.java", "diffHunk": "@@ -107,17 +116,25 @@ public LocalQuerySegmentWalker(\n     // Note: Not calling 'postProcess'; it isn't official/documented functionality so we'll only support it where\n     // it is already supported.\n     return new FluentQueryRunnerBuilder<>(queryRunnerFactory.getToolchest())\n-        .create(baseRunner)\n+        .create(scheduler.wrapQueryRunner(baseRunner))\n         .applyPreMergeDecoration()\n         .mergeResults()\n         .applyPostMergeDecoration()\n         .emitCPUTimeMetric(emitter, cpuAccumulator);\n   }\n-\n   @Override\n   public <T> QueryRunner<T> getQueryRunnerForSegments(final Query<T> query, final Iterable<SegmentDescriptor> specs)\n   {\n     // SegmentWranglers only work based on intervals and cannot run with specific segments.\n     throw new ISE(\"Cannot run with specific segments\");\n   }\n+\n+  private <T> Query<T> prioritizeAndLaneQuery(Query<T> query, Iterable<Segment> segments)\n+  {\n+    Set<SegmentServerSelector> segmentServerSelectors = new HashSet<>();\n+    for (Segment s : segments) {\n+      segmentServerSelectors.add(new SegmentServerSelector(null, s.getId().toDescriptor()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beb572259a54eb906aca50319709e35af4177d70"}, "originalPosition": 103}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "830a628378639aa5a9fb47086d38dc131ddc0ae4", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/830a628378639aa5a9fb47086d38dc131ddc0ae4", "committedDate": "2020-03-27T09:48:51Z", "message": "review stuffs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTUzMzY2", "url": "https://github.com/apache/druid/pull/9563#pullrequestreview-383153366", "createdAt": "2020-03-27T19:43:55Z", "commit": {"oid": "830a628378639aa5a9fb47086d38dc131ddc0ae4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2727, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}