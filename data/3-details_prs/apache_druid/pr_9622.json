{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MzM1NjUz", "number": 9622, "title": "Preserve the null values for numeric type dimensions post-compaction.", "bodyText": "With druid.generic.useDefaultValueForNull=false  set and post compaction, we notice the dimensions with numeric types the original null value gets replaced with the default 0 value. However, dimensions of string type work as expected. This would surprise users/systems with null compliance.\nThis issue was reported here: #8221\nI tested this change set by hand, but I am happy to add a test case if someone could please point me in the right direction. Looks like CompactionTaskRunTest.java and CompactionTaskParallelRunTest.java are the test files of interest?\nAlso, fix a typo I came across while debugging.\nCC: @clintropolis @himanshug @gianm, thanks!", "createdAt": "2020-04-06T01:33:12Z", "url": "https://github.com/apache/druid/pull/9622", "merged": true, "mergeCommit": {"oid": "08851c0198711025ecced3b7b47942d5247c94df"}, "closed": true, "closedAt": "2020-04-09T01:56:07Z", "author": {"login": "abhishekrb19"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU0PXigH2gAyMzk5MzM1NjUzOmQzOTk1ZmEyOTMwMWNhMWZkYmFhOTMwOTZmZTcyZWY5OTY3OWQ1ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVymm_gFqTM5MDQ0Mjk3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d3995fa29301ca1fdbaa93096fe72ef99679d5e8", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/d3995fa29301ca1fdbaa93096fe72ef99679d5e8", "committedDate": "2020-04-06T01:16:25Z", "message": "Add selector null check to preserve null values as-is."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af65a9ddd294edfc589975fe161930033e8e2bff", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/af65a9ddd294edfc589975fe161930033e8e2bff", "committedDate": "2020-04-06T01:17:40Z", "message": "Fix typo."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NzI1Mzg0", "url": "https://github.com/apache/druid/pull/9622#pullrequestreview-388725384", "createdAt": "2020-04-07T01:25:03Z", "commit": {"oid": "af65a9ddd294edfc589975fe161930033e8e2bff"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "committedDate": "2020-04-07T16:18:15Z", "message": "add wrapping dimension selector test."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a", "committedDate": "2020-04-07T16:18:15Z", "message": "add wrapping dimension selector test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTA0Njcw", "url": "https://github.com/apache/druid/pull/9622#pullrequestreview-389504670", "createdAt": "2020-04-07T21:29:43Z", "commit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMToyOTo0M1rOGCW23Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjoyOTo1N1rOGCYdew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDgyOQ==", "bodyText": "Probably this should return 0 when doubles[index] == null && NullHandling.replaceWithDefault() == true? Otherwise it probably should throw an exception.", "url": "https://github.com/apache/druid/pull/9622#discussion_r405124829", "createdAt": "2020-04-07T21:29:43Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    return doubles[index] == null ? NullHandling.ZERO_DOUBLE : doubles[index];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDkyMw==", "bodyText": "Same for other column selectors.", "url": "https://github.com/apache/druid/pull/9622#discussion_r405124923", "createdAt": "2020-04-07T21:29:53Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    return doubles[index] == null ? NullHandling.ZERO_DOUBLE : doubles[index];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDgyOQ=="}, "originalCommit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyODA5NA==", "bodyText": "We usually append \"Test\" at end of the class name instead of the beginning.", "url": "https://github.com/apache/druid/pull/9622#discussion_r405128094", "createdAt": "2020-04-07T21:36:40Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestWrappingDimensionSelector.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestWrappingDimensionSelector", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MDc5OA==", "bodyText": "Probably this should be return NullHandling.replaceWithDefault() ? false : doubles[index] == null.", "url": "https://github.com/apache/druid/pull/9622#discussion_r405150798", "createdAt": "2020-04-07T22:29:14Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    return doubles[index] == null ? NullHandling.ZERO_DOUBLE : doubles[index];\n+  }\n+\n+  @Override\n+  public boolean isNull()\n+  {\n+    return doubles[index] == null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MDkyMg==", "bodyText": "Same for other column selectors.", "url": "https://github.com/apache/druid/pull/9622#discussion_r405150922", "createdAt": "2020-04-07T22:29:30Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    return doubles[index] == null ? NullHandling.ZERO_DOUBLE : doubles[index];\n+  }\n+\n+  @Override\n+  public boolean isNull()\n+  {\n+    return doubles[index] == null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MDc5OA=="}, "originalCommit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MTA5OQ==", "bodyText": "lngSelector.getLong should be never called when the current value is null and NullHandling.sqlCompatible() == true. Probably better to check\nif (NullHandling.sqlCompatible()) {\n  Assert.assertTrue(lngSelector.isNull());\n} else {\n  Assert.assertEquals(0L, lngSelector.getLong());\n}", "url": "https://github.com/apache/druid/pull/9622#discussion_r405151099", "createdAt": "2020-04-07T22:29:57Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestWrappingDimensionSelector.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestWrappingDimensionSelector\n+{\n+  @Test\n+  public void testLongWrappingDimensionSelector()\n+  {\n+    Long[] vals = new Long[]{24L, null, 50L, 0L, -60L};\n+    TestNullableLongColumnSelector lngSelector = new TestNullableLongColumnSelector(vals);\n+\n+    LongWrappingDimensionSelector lngWrapSelector = new LongWrappingDimensionSelector(lngSelector, null);\n+    Assert.assertEquals(24L, lngSelector.getLong());\n+    Assert.assertEquals(\"24\", lngWrapSelector.getValue());\n+\n+    lngSelector.increment();\n+    Assert.assertEquals(0L, lngSelector.getLong());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b861e63da1eec33eb6d8b8a91ae914ec5c6ce46a"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "committedDate": "2020-04-08T04:39:42Z", "message": "Address review comments."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/fa8510e91ab3b417aa67ef9495dbe9f9024f7510", "committedDate": "2020-04-08T04:39:42Z", "message": "Address review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjQ2ODUw", "url": "https://github.com/apache/druid/pull/9622#pullrequestreview-389646850", "createdAt": "2020-04-08T04:37:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNDozNzo1NFrOGCetZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNDo0MDo0NlrOGCewHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1MzQ3Nw==", "bodyText": "Would you please fix here too?", "url": "https://github.com/apache/druid/pull/9622#discussion_r405253477", "createdAt": "2020-04-08T04:37:54Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestNullableFloatColumnSelector.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableFloatColumnSelector extends TestFloatColumnSelector\n+{\n+\n+  private final Float[] floats;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableFloatColumnSelector(Float[] floats)\n+  {\n+    this.floats = floats;\n+  }\n+\n+  @Override\n+  public float getFloat()\n+  {\n+    if (floats[index] != null) {\n+      return floats[index];\n+    } else {\n+      return NullHandling.ZERO_FLOAT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI1NDE3NQ==", "bodyText": "nit: I don't think it matters much, but perhaps NullPointerException or InvalidStateException would be more appropriate.", "url": "https://github.com/apache/druid/pull/9622#discussion_r405254175", "createdAt": "2020-04-08T04:40:46Z", "author": {"login": "jihoonson"}, "path": "processing/src/test/java/org/apache/druid/segment/TestNullableDoubleColumnSelector.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.segment;\n+\n+import org.apache.druid.common.config.NullHandling;\n+\n+public class TestNullableDoubleColumnSelector extends TestDoubleColumnSelector\n+{\n+  private final Double[] doubles;\n+\n+  static {\n+    NullHandling.initializeForTests();\n+  }\n+\n+  private int index = 0;\n+\n+  public TestNullableDoubleColumnSelector(Double[] doubles)\n+  {\n+    this.doubles = doubles;\n+  }\n+\n+  @Override\n+  public double getDouble()\n+  {\n+    if (doubles[index] != null) {\n+      return doubles[index];\n+    } else if (NullHandling.replaceWithDefault()) {\n+      return NullHandling.ZERO_DOUBLE;\n+    } else {\n+      throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa8510e91ab3b417aa67ef9495dbe9f9024f7510"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5952a800eb3544ae1ba24690334826bba1f435bd", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/5952a800eb3544ae1ba24690334826bba1f435bd", "committedDate": "2020-04-08T05:55:59Z", "message": "nit: replace exception type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6f9b96915ffe1fc7a7211083f75ac18534ed976", "author": {"user": {"login": "abhishekrb19", "name": "Abhishek Radhakrishnan"}}, "url": "https://github.com/apache/druid/commit/b6f9b96915ffe1fc7a7211083f75ac18534ed976", "committedDate": "2020-04-08T21:23:46Z", "message": "uh, float is indeed NOT a special case."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNDE5Njgx", "url": "https://github.com/apache/druid/pull/9622#pullrequestreview-390419681", "createdAt": "2020-04-09T00:33:57Z", "commit": {"oid": "b6f9b96915ffe1fc7a7211083f75ac18534ed976"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNDQyOTcz", "url": "https://github.com/apache/druid/pull/9622#pullrequestreview-390442973", "createdAt": "2020-04-09T01:55:55Z", "commit": {"oid": "b6f9b96915ffe1fc7a7211083f75ac18534ed976"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2804, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}