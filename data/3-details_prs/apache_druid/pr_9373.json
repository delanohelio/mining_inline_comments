{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2Mjc3Njkw", "number": 9373, "title": "Fix join filter push down post-join virtual column handling", "bodyText": "This PR fixes an issue in JoinFilterAnalyzer where post-join virtual columns were incorrectly identified as belonging to the base table column set, leading to filters on such virtual columns being pushed down incorrectly.\nThe PR fixes the issue by passing in the set of base table columns (including any pre-join virtual columns) to JoinFilterAnalyzer.splitFilter instead of checking prefixes.\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-02-17T19:01:03Z", "url": "https://github.com/apache/druid/pull/9373", "merged": true, "mergeCommit": {"oid": "cab08f941d28266a65a39bd62e7e9487067573b1"}, "closed": true, "closedAt": "2020-02-19T23:51:06Z", "author": {"login": "jon-wei"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFSC61gH2gAyMzc2Mjc3NjkwOjljNWJkYWM5Njk2ZGJjZGQ5M2Y2Y2NmNGQwNjk2Y2JlY2M3NWQyNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF_cYDgFqTM2MTUyMjYzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c5bdac9696dbcdd93f6ccf4d0696cbecc75d24f", "author": {"user": {"login": "jon-wei", "name": "Jonathan Wei"}}, "url": "https://github.com/apache/druid/commit/9c5bdac9696dbcdd93f6ccf4d0696cbecc75d24f", "committedDate": "2020-02-17T18:57:11Z", "message": "Fix join filter push down post-join virtual column handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f35d40c2358f1d7039048e08dbaf815c24c5a7c", "author": {"user": {"login": "jon-wei", "name": "Jonathan Wei"}}, "url": "https://github.com/apache/druid/commit/2f35d40c2358f1d7039048e08dbaf815c24c5a7c", "committedDate": "2020-02-18T21:00:06Z", "message": "Remove unused adapter param, update javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a", "author": {"user": {"login": "jon-wei", "name": "Jonathan Wei"}}, "url": "https://github.com/apache/druid/commit/c6263ded2278ca509ee9bd7dc4647239fd837d8a", "committedDate": "2020-02-19T00:47:08Z", "message": "Fix TC"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjk2NjY4", "url": "https://github.com/apache/druid/pull/9373#pullrequestreview-361296668", "createdAt": "2020-02-19T17:38:36Z", "commit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzozODozNlrOFrw5jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzo1NDowMVrOFrxb_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzNDI1NQ==", "bodyText": "missing unit tests for this in HashJoinSegmentStorageAdapterTest", "url": "https://github.com/apache/druid/pull/9373#discussion_r381434255", "createdAt": "2020-02-19T17:38:36Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapter.java", "diffHunk": "@@ -234,13 +235,17 @@ public Metadata getMetadata()\n       // Virtual columns cannot depend on each other, so we don't need to check transitive dependencies.\n       if (baseColumns.containsAll(virtualColumn.requiredColumns())) {\n         preJoinVirtualColumns.add(virtualColumn);\n+        // Since pre-join virtual columns can be computed using only base columns, we include them in the\n+        // base column set.\n+        baseColumns.add(virtualColumn.getOutputName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzNzkxOA==", "bodyText": "This is very similar to the code above in makeCursors(...) Perhaps move this into a utility function so they stay in sync. Or do you want this function to provide different functionality?", "url": "https://github.com/apache/druid/pull/9373#discussion_r381437918", "createdAt": "2020-02-19T17:44:56Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapter.java", "diffHunk": "@@ -297,6 +302,22 @@ public boolean isEnableFilterPushDown()\n     return enableFilterPushDown;\n   }\n \n+  @VisibleForTesting\n+  public Set<String> getAdapterBaseColumnNamesWithVirtualColumns(VirtualColumns virtualColumns)\n+  {\n+    final Set<String> baseColumns = new HashSet<>();\n+    Iterables.addAll(baseColumns, baseAdapter.getAvailableDimensions());\n+    Iterables.addAll(baseColumns, baseAdapter.getAvailableMetrics());\n+\n+    for (VirtualColumn virtualColumn : virtualColumns.getVirtualColumns()) {\n+      if (baseColumns.containsAll(virtualColumn.requiredColumns())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzOTE5Mw==", "bodyText": "nit: public functions marked VisibleForTesting are hard to maintain, because people can accidentally call this function from another package and there's nothing that warns them they're doing something wrong.\nI also noticed this function is only called in a test, can we refactor this so that we don't need a public VisibleForTesting function", "url": "https://github.com/apache/druid/pull/9373#discussion_r381439193", "createdAt": "2020-02-19T17:47:07Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapter.java", "diffHunk": "@@ -297,6 +302,22 @@ public boolean isEnableFilterPushDown()\n     return enableFilterPushDown;\n   }\n \n+  @VisibleForTesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzOTQxNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/druid/pull/9373#discussion_r381439414", "createdAt": "2020-02-19T17:47:29Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/join/filter/JoinFilterAnalyzer.java", "diffHunk": "@@ -72,8 +72,21 @@\n   private static final String PUSH_DOWN_VIRTUAL_COLUMN_NAME_BASE = \"JOIN-FILTER-PUSHDOWN-VIRTUAL-COLUMN-\";\n   private static final ColumnSelectorFactory ALL_NULL_COLUMN_SELECTOR_FACTORY = new AllNullColumnSelectorFactory();\n \n+  /**\n+   * Analyze a filter and return a JoinFilterSplit indicating what parts of the filter should be applied pre-join\n+   * and post-join.\n+   *\n+   * @param hashJoinSegmentStorageAdapter The storage adapter that is being queried\n+   * @param baseColumnNames               Set of names of columns that belong to the base table,\n+   *                                      including pre-join virtual columns\n+   * @param originalFilter                Original filter from the query\n+   * @param enableFilterPushDown          Whether to enable filter push down\n+   * @return A JoinFilterSplit indicating what parts of the filter should be applied pre-join\n+   *         and post-join.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ0MTg5Mg==", "bodyText": "what happens if one of the required columns is a virtual column?", "url": "https://github.com/apache/druid/pull/9373#discussion_r381441892", "createdAt": "2020-02-19T17:52:00Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/join/HashJoinSegmentStorageAdapter.java", "diffHunk": "@@ -234,13 +235,17 @@ public Metadata getMetadata()\n       // Virtual columns cannot depend on each other, so we don't need to check transitive dependencies.\n       if (baseColumns.containsAll(virtualColumn.requiredColumns())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ0MzA3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!requiredBindings.stream().allMatch(requiredBinding -> baseColumnNames.contains(requiredBinding))) {\n          \n          \n            \n                    if (!baseColumnNames.containsAll(requiredBindings)) {", "url": "https://github.com/apache/druid/pull/9373#discussion_r381443071", "createdAt": "2020-02-19T17:54:01Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/join/filter/JoinFilterAnalyzer.java", "diffHunk": "@@ -538,18 +562,18 @@ private static void getCorrelationForRHSColumn(\n         // We push down if the function only requires base table columns\n         Expr.BindingDetails bindingDetails = lhsExpr.analyzeInputs();\n         Set<String> requiredBindings = bindingDetails.getRequiredBindings();\n-        if (!requiredBindings.stream().allMatch(requiredBinding -> adapter.isBaseColumn(requiredBinding))) {\n+        if (!requiredBindings.stream().allMatch(requiredBinding -> baseColumnNames.contains(requiredBinding))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6263ded2278ca509ee9bd7dc4647239fd837d8a"}, "originalPosition": 228}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64a79ae99660a5b42f9d6aaa065aafcde2716c48", "author": {"user": {"login": "jon-wei", "name": "Jonathan Wei"}}, "url": "https://github.com/apache/druid/commit/64a79ae99660a5b42f9d6aaa065aafcde2716c48", "committedDate": "2020-02-19T20:18:01Z", "message": "Update processing/src/main/java/org/apache/druid/segment/join/filter/JoinFilterAnalyzer.java\n\nCo-Authored-By: Suneet Saldanha <44787917+suneet-s@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73891167d767d76095b7b5172b8b74508b56c7d1", "author": {"user": {"login": "jon-wei", "name": "Jonathan Wei"}}, "url": "https://github.com/apache/druid/commit/73891167d767d76095b7b5172b8b74508b56c7d1", "committedDate": "2020-02-19T21:21:32Z", "message": "Address PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3edd512067ca207f5c422d661c6cef6bfdcdee0", "author": {"user": {"login": "jon-wei", "name": "Jonathan Wei"}}, "url": "https://github.com/apache/druid/commit/b3edd512067ca207f5c422d661c6cef6bfdcdee0", "committedDate": "2020-02-19T21:21:59Z", "message": "Merge branch 'fix_join_virtcolumn' of github.com:jon-wei/druid into fix_join_virtcolumn"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDYwMjA4", "url": "https://github.com/apache/druid/pull/9373#pullrequestreview-361460208", "createdAt": "2020-02-19T21:44:50Z", "commit": {"oid": "b3edd512067ca207f5c422d661c6cef6bfdcdee0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDc4MjM5", "url": "https://github.com/apache/druid/pull/9373#pullrequestreview-361478239", "createdAt": "2020-02-19T22:14:42Z", "commit": {"oid": "b3edd512067ca207f5c422d661c6cef6bfdcdee0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTIyNjM0", "url": "https://github.com/apache/druid/pull/9373#pullrequestreview-361522634", "createdAt": "2020-02-19T23:50:43Z", "commit": {"oid": "b3edd512067ca207f5c422d661c6cef6bfdcdee0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2922, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}