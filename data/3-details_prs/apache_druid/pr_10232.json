{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjg3MTA2", "number": 10232, "title": "Fix Avro support in Web Console", "bodyText": "Fixes #10229\nDescription\nThis PR includes 2 sets of fixes to make working with Avro OCF files in the Web Console work seamlessly.\nThe first is fixing the format detection by first changing the detection logic to run against the \"raw\" input rows and also patching the Avro OCF check to only check for the ASCII Obj prefix.\nThe second corrects some more fundamental issues that wouldn't have been noticed without the web UI as manual ingestion specs that don't use the sampler API or rely on root field enumeration wouldn't have run into.\nFirst of which is that Enum and Fixed types were not properly supported in the AvroFlattenerMaker, they wouldn't be listed as root fields and were not properly converted into primitive types.\nAdditionally the AvroFlattenerMaker didn't override the ObjectFlatteners#finalizeConversionForMap method so raw Avro types leaked into the SamplerResponse. The raw Avro types aren't configured to be mapped correctly so were causing errors when serialising SamplerResponse whilst using the Web UI. This is what led to the discovery of Enum and Fixed not being supported correctly.\nA follow up to this PR will likely include tests for AvroOCFReader#sample in a similar vein to what exists for ParquetReader.\n\nThis PR has:\n\n been self-reviewed.\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n been tested in a test Druid cluster.\n\n\nKey changed/added classes in this PR\n\nAvroFlattenerMaker", "createdAt": "2020-08-03T16:51:37Z", "url": "https://github.com/apache/druid/pull/10232", "merged": true, "mergeCommit": {"oid": "7ce9ac4548a4ec0c60ec7cf6dcfcd45eac6fd54e"}, "closed": true, "closedAt": "2020-10-08T04:08:23Z", "author": {"login": "josephglanville"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-MutaAFqTQ2NTk2NzA5NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQZlH-AFqTUwNDQxNTA0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTY3MDk0", "url": "https://github.com/apache/druid/pull/10232#pullrequestreview-465967094", "createdAt": "2020-08-12T14:23:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDoyMzo0MVrOG_jruA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1NjoxOFrOG_lKIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5ODEwNA==", "bodyText": "It'd be really great if we could test the proper thing here, but I'm not sure how either.\n@vogievetsky Any ideas about how we could actually check all 4 bytes here? (See #10229; the \"1\" should actually be the unprintable character 0x01.)\nAlso, are there tests for this logic block in general? Where could we add one for this particular case?", "url": "https://github.com/apache/druid/pull/10232#discussion_r469298104", "createdAt": "2020-08-12T14:23:41Z", "author": {"login": "gianm"}, "path": "web-console/src/utils/ingestion-spec.tsx", "diffHunk": "@@ -2663,7 +2663,7 @@ function guessInputFormat(sampleData: string[]): InputFormat {\n       return inputFormatFromType('orc');\n     }\n     // Avro OCF 4 byte magic header: https://avro.apache.org/docs/current/spec.html#Object+Container+Files\n-    if (sampleDatum.startsWith('Obj1')) {\n+    if (sampleDatum.startsWith('Obj')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyMjI3Mw==", "bodyText": "What data type is \"someFixed\"? This code is expecting it to be translated as a byte[]. I think most downstream users of these parsed datums will be interpreting them using Rows.objectToStrings, which is going to translate a byte[] into a base64 encoded string. Is that sensible behavior?\nWould you be able to add some documentation to this page: https://druid.apache.org/docs/latest/ingestion/data-formats.html#avro-ocf about how the various Avro types that we support will be handled?", "url": "https://github.com/apache/druid/pull/10232#discussion_r469322273", "createdAt": "2020-08-12T14:56:18Z", "author": {"login": "gianm"}, "path": "extensions-core/avro-extensions/src/test/java/org/apache/druid/data/input/avro/AvroFlattenerMakerTest.java", "diffHunk": "@@ -78,7 +78,8 @@ public void getRootField()\n         flattener.getRootField(record, \"someNull\")\n     );\n     Assert.assertEquals(\n-        record.getSomeFixed(),\n+        // Casted to an array by transformValue\n+        record.getSomeFixed().bytes(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "736624ea14d41f4f96a9f9cf12f5bccc3fbef76c", "author": {"user": {"login": "josephglanville", "name": "Joseph Glanville"}}, "url": "https://github.com/apache/druid/commit/736624ea14d41f4f96a9f9cf12f5bccc3fbef76c", "committedDate": "2020-10-08T00:30:13Z", "message": "Fix Avro OCF detection prefix and run formation detection on raw input"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "deede067f41f4a25f35da21634f29795132f9871", "author": {"user": {"login": "josephglanville", "name": "Joseph Glanville"}}, "url": "https://github.com/apache/druid/commit/deede067f41f4a25f35da21634f29795132f9871", "committedDate": "2020-10-08T00:30:14Z", "message": "Support Avro Fixed and Enum types correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0268af2a59a68fe1328f288c2ecafb413b6b3045", "author": {"user": {"login": "josephglanville", "name": "Joseph Glanville"}}, "url": "https://github.com/apache/druid/commit/0268af2a59a68fe1328f288c2ecafb413b6b3045", "committedDate": "2020-10-08T00:30:14Z", "message": "Check Avro version byte in format detection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aff3f9649ee5d4bff8980cc3a73b1b0043b8e2d5", "author": {"user": {"login": "josephglanville", "name": "Joseph Glanville"}}, "url": "https://github.com/apache/druid/commit/aff3f9649ee5d4bff8980cc3a73b1b0043b8e2d5", "committedDate": "2020-10-08T00:30:14Z", "message": "Add test for AvroOCFReader.sample\n\nEnsures that the Sampler doesn't receive raw input that it can't\nserialize into JSON."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "449df156ef084b431fe187d9ed154fba8d46d0ee", "author": {"user": {"login": "josephglanville", "name": "Joseph Glanville"}}, "url": "https://github.com/apache/druid/commit/449df156ef084b431fe187d9ed154fba8d46d0ee", "committedDate": "2020-10-08T00:30:14Z", "message": "Document Avro type handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "author": {"user": {"login": "josephglanville", "name": "Joseph Glanville"}}, "url": "https://github.com/apache/druid/commit/6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "committedDate": "2020-10-08T01:00:16Z", "message": "Add TS unit tests for guessInputFormat"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "author": {"user": {"login": "josephglanville", "name": "Joseph Glanville"}}, "url": "https://github.com/apache/druid/commit/6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419", "committedDate": "2020-10-08T01:00:16Z", "message": "Add TS unit tests for guessInputFormat"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NDEzNTkx", "url": "https://github.com/apache/druid/pull/10232#pullrequestreview-504413591", "createdAt": "2020-10-08T04:03:00Z", "commit": {"oid": "6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NDE1MDQ5", "url": "https://github.com/apache/druid/pull/10232#pullrequestreview-504415049", "createdAt": "2020-10-08T04:08:12Z", "commit": {"oid": "6ca13bab2e1dbcbf7c78eb7e040caf9657bc5419"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1903, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}