{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NDIzMTg2", "number": 10714, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNTo1MzoxNVrOFMZkrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNTo1MzoxNVrOFMZkrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTQ2MjIwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/segment/realtime/appenderator/SinkQuerySegmentWalker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwNTo1MzoxNVrOIQGkEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwOTowNDowNFrOISlr6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1NTY2Nw==", "bodyText": "I think there's an off by one here: storageAdapter.getMaxTime() is the highest timestamp in the segment, but the end of actualDataInterval is exclusive, and so it doesn't include that highest timestamp. I think doing segmentMaxTime.plus(1) will fix it. There's a similar issue in ServerManager.", "url": "https://github.com/apache/druid/pull/10714#discussion_r553755667", "createdAt": "2021-01-08T05:53:15Z", "author": {"login": "gianm"}, "path": "server/src/main/java/org/apache/druid/segment/realtime/appenderator/SinkQuerySegmentWalker.java", "diffHunk": "@@ -230,10 +232,15 @@ public SinkQuerySegmentWalker(\n                       // 1) Only use caching if data is immutable\n                       // 2) Hydrants are not the same between replicas, make sure cache is local\n                       if (hydrantDefinitelySwapped && cache.isLocal()) {\n+                        StorageAdapter storageAdapter = segmentAndCloseable.lhs.asStorageAdapter();\n+                        long segmentMinTime = storageAdapter.getMinTime().getMillis();\n+                        long segmentMaxTime = storageAdapter.getMaxTime().getMillis();\n+                        Interval actualDataInterval = Intervals.utc(segmentMinTime, segmentMaxTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27f50085539debe32bfdce0141aa6487ab736ba2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjM2MjczMQ==", "bodyText": "yes, you are right, will fix it", "url": "https://github.com/apache/druid/pull/10714#discussion_r556362731", "createdAt": "2021-01-13T09:04:04Z", "author": {"login": "kaijianding"}, "path": "server/src/main/java/org/apache/druid/segment/realtime/appenderator/SinkQuerySegmentWalker.java", "diffHunk": "@@ -230,10 +232,15 @@ public SinkQuerySegmentWalker(\n                       // 1) Only use caching if data is immutable\n                       // 2) Hydrants are not the same between replicas, make sure cache is local\n                       if (hydrantDefinitelySwapped && cache.isLocal()) {\n+                        StorageAdapter storageAdapter = segmentAndCloseable.lhs.asStorageAdapter();\n+                        long segmentMinTime = storageAdapter.getMinTime().getMillis();\n+                        long segmentMaxTime = storageAdapter.getMaxTime().getMillis();\n+                        Interval actualDataInterval = Intervals.utc(segmentMinTime, segmentMaxTime);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzc1NTY2Nw=="}, "originalCommit": {"oid": "27f50085539debe32bfdce0141aa6487ab736ba2"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2949, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}