{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0ODYyOTY2", "number": 10660, "title": "fix DruidSchema incorrectly listing tables with no segments", "bodyText": "Description\nThis PR fixes an issue where tables with all of their segments dropped could still incorrectly show up in the INFORMATION_SCHEMA tables when queries with SQL. The underlying issue was caused by a race condition between DruidSchema.tables being populated upon rebuilding the tables, segment removal handlers removing segments from tables when no other segments were left (but not dataSourcesNeedingRebuild), and DruidSchema.dataSourcesNeedingRebuild not considering if the table had been removed from tables due to all the segments being dropped in the time between being added to the refresh list and actually doing the refresh.\nThe added an additional step to the ITBroadcastJoinQueryTest integration test that would fail prior to the changes in DruidSchema, and chose this test in particular to cover the most surface area since there are segments on both the historical and the broker.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nDruidSchema", "createdAt": "2020-12-09T03:08:59Z", "url": "https://github.com/apache/druid/pull/10660", "merged": true, "mergeCommit": {"oid": "64f97e7003ebc922e404ff49a31969993669747c"}, "closed": true, "closedAt": "2020-12-11T22:14:01Z", "author": {"login": "clintropolis"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkVxi_AH2gAyNTM0ODYyOTY2OjY1YjFhNTc5YTY5YWZjZmQyYzcxYjcwYzQzMGExMzY1YWQzYzRiNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk8VlFgFqTU0OTcwNTAwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "65b1a579a69afcfd2c71b70c430a1365ad3c4b43", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/65b1a579a69afcfd2c71b70c430a1365ad3c4b43", "committedDate": "2020-12-09T03:00:38Z", "message": "fix race condition with DruidSchema tables and dataSourcesNeedingRebuild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "557e40ab79d23ce0e1316ee2dfe8625070f8c0f5", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/557e40ab79d23ce0e1316ee2dfe8625070f8c0f5", "committedDate": "2020-12-09T18:54:42Z", "message": "rework to see if it passes analysis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTM4MDMw", "url": "https://github.com/apache/druid/pull/10660#pullrequestreview-548538030", "createdAt": "2020-12-09T19:31:37Z", "commit": {"oid": "557e40ab79d23ce0e1316ee2dfe8625070f8c0f5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTozMTozN1rOICly8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTozMTozN1rOICly8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU4NzMxNA==", "bodyText": "This looks like it's undoing a mistake in removeSegment \u2014\u00a0the datasource should never have been added to dataSourcesNeedingRebuild in the first place. IMO it'd be better to make the change there. Doing it here works, though, so I'm OK with it if you don't want to move the logic around.", "url": "https://github.com/apache/druid/pull/10660#discussion_r539587314", "createdAt": "2020-12-09T19:31:37Z", "author": {"login": "gianm"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/DruidSchema.java", "diffHunk": "@@ -270,8 +270,15 @@ public void start() throws InterruptedException\n                   // Add missing segments back to the refresh list.\n                   segmentsNeedingRefresh.addAll(Sets.difference(segmentsToRefresh, refreshed));\n \n+                  // remove any tables which have been completely dropped before refresh", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "557e40ab79d23ce0e1316ee2dfe8625070f8c0f5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a04f1c94aa774b29b5e31ce94899f06b3c7057a", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/1a04f1c94aa774b29b5e31ce94899f06b3c7057a", "committedDate": "2020-12-09T22:54:12Z", "message": "more better"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjkxMDMx", "url": "https://github.com/apache/druid/pull/10660#pullrequestreview-548691031", "createdAt": "2020-12-09T23:11:33Z", "commit": {"oid": "1a04f1c94aa774b29b5e31ce94899f06b3c7057a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzU2MDU4", "url": "https://github.com/apache/druid/pull/10660#pullrequestreview-548756058", "createdAt": "2020-12-10T01:47:37Z", "commit": {"oid": "1a04f1c94aa774b29b5e31ce94899f06b3c7057a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cc63e1f3afe5762fe64643f2dfc867aa0a9c32c", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/6cc63e1f3afe5762fe64643f2dfc867aa0a9c32c", "committedDate": "2020-12-10T09:01:15Z", "message": "maybe this"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTAzNzEy", "url": "https://github.com/apache/druid/pull/10660#pullrequestreview-549503712", "createdAt": "2020-12-10T18:51:33Z", "commit": {"oid": "6cc63e1f3afe5762fe64643f2dfc867aa0a9c32c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1MTozM1rOIDYT0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1MTozM1rOIDYT0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxNDkzMA==", "bodyText": "How could knownSegments be null or empty here? If removeServerSegment is being called, doesn't that suggest we should have previously had an addSegment call, and therefore the segment should be known?", "url": "https://github.com/apache/druid/pull/10660#discussion_r540414930", "createdAt": "2020-12-10T18:51:33Z", "author": {"login": "gianm"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/DruidSchema.java", "diffHunk": "@@ -448,25 +449,27 @@ void removeServerSegment(final DruidServerMetadata server, final DataSegment seg\n   {\n     synchronized (lock) {\n       log.debug(\"Segment[%s] is gone from server[%s]\", segment.getId(), server.getName());\n-      if (server.getType().equals(ServerType.BROKER)) {\n-        // a segment on a broker means a broadcast datasource, skip metadata because we'll also see this segment on the\n-        // historical, however mark the datasource for refresh because it might no longer be broadcast or something\n-        dataSourcesNeedingRebuild.add(segment.getDataSource());\n-      } else {\n-        final Map<SegmentId, AvailableSegmentMetadata> knownSegments = segmentMetadataInfo.get(segment.getDataSource());\n-        final AvailableSegmentMetadata segmentMetadata = knownSegments.get(segment.getId());\n-        final Set<DruidServerMetadata> segmentServers = segmentMetadata.getReplicas();\n-        final ImmutableSet<DruidServerMetadata> servers = FluentIterable\n-            .from(segmentServers)\n-            .filter(Predicates.not(Predicates.equalTo(server)))\n-            .toSet();\n-\n-        final AvailableSegmentMetadata metadataWithNumReplicas = AvailableSegmentMetadata\n-            .from(segmentMetadata)\n-            .withReplicas(servers)\n-            .withRealtime(recomputeIsRealtime(servers))\n-            .build();\n-        knownSegments.put(segment.getId(), metadataWithNumReplicas);\n+      final Map<SegmentId, AvailableSegmentMetadata> knownSegments = segmentMetadataInfo.get(segment.getDataSource());\n+      if (knownSegments != null && !knownSegments.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc63e1f3afe5762fe64643f2dfc867aa0a9c32c"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32ecbf710e2e0f3c5ab42b301ce110cfe340b43c", "author": {"user": {"login": "clintropolis", "name": "Clint Wylie"}}, "url": "https://github.com/apache/druid/commit/32ecbf710e2e0f3c5ab42b301ce110cfe340b43c", "committedDate": "2020-12-10T21:40:56Z", "message": "re-arrange and comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzA1MDA4", "url": "https://github.com/apache/druid/pull/10660#pullrequestreview-549705008", "createdAt": "2020-12-10T23:56:23Z", "commit": {"oid": "32ecbf710e2e0f3c5ab42b301ce110cfe340b43c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3158, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}