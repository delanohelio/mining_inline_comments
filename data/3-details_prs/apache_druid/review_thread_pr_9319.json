{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNzM2OTY2", "number": 9319, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzoxNjowMVrODdlRxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzoxNjowMVrODdlRxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzQ2MDU0OnYy", "diffSide": "RIGHT", "path": "docs/development/modules.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzoxNjowMVrOFmRJTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjo0MDoxMFrOFn4PuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3MTExNg==", "bodyText": "Can you add a section in here describing how to register the custom transformation similar to what's documented for adding support for an Input Source (https://github.com/apache/druid/blob/118e89c1e2ae9ea0e1c923c355bff6f1ccacf756/docs/development/modules.md#adding-support-for-a-new-input-source) or a Password Provider (https://github.com/apache/druid/blob/118e89c1e2ae9ea0e1c923c355bff6f1ccacf756/docs/development/modules.md#adding-a-new-password-provider-implementation)", "url": "https://github.com/apache/druid/pull/9319#discussion_r375671116", "createdAt": "2020-02-06T07:16:01Z", "author": {"login": "suneet-s"}, "path": "docs/development/modules.md", "diffHunk": "@@ -46,6 +46,7 @@ Druid's extensions leverage Guice in order to add things at runtime.  Basically,\n 1. Add new Jersey resources by calling `Jerseys.addResource(binder, clazz)`.\n 1. Add new Jetty filters by extending `org.apache.druid.server.initialization.jetty.ServletFilterHolder`.\n 1. Add new secret providers by extending `org.apache.druid.metadata.PasswordProvider`.\n+1. Add new ingest transform by implementing the `org.apache.druid.segment.transform.Transform` interface from the `druid-processing` package.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "118e89c1e2ae9ea0e1c923c355bff6f1ccacf756"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM2MDMxMw==", "bodyText": "It makes sense to me to add a new item in the list of 15 items under \"Writing your own extensions\" for completeness sake. I'd be happy to write a dedicated section of these docs, although I think this page seems destined to be split into many pages: one describing the approach for each kind of extension.\n\nHi @mitchlloyd, I assume you are interested in writing docs what @suneet-s mentioned based on your comment above. Do you want to add them in this PR? I think that could be done in a follow-up PR if you want.", "url": "https://github.com/apache/druid/pull/9319#discussion_r377360313", "createdAt": "2020-02-10T22:40:10Z", "author": {"login": "jihoonson"}, "path": "docs/development/modules.md", "diffHunk": "@@ -46,6 +46,7 @@ Druid's extensions leverage Guice in order to add things at runtime.  Basically,\n 1. Add new Jersey resources by calling `Jerseys.addResource(binder, clazz)`.\n 1. Add new Jetty filters by extending `org.apache.druid.server.initialization.jetty.ServletFilterHolder`.\n 1. Add new secret providers by extending `org.apache.druid.metadata.PasswordProvider`.\n+1. Add new ingest transform by implementing the `org.apache.druid.segment.transform.Transform` interface from the `druid-processing` package.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3MTExNg=="}, "originalCommit": {"oid": "118e89c1e2ae9ea0e1c923c355bff6f1ccacf756"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2742, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}