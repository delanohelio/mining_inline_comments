{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODMzNDU1", "number": 9553, "title": "fix Hadoop ingestion fails due to error 'JavaScript is disabled' on certain config", "bodyText": "Fixes Hadoop ingestion fails due to error \"JavaScript is disabled\", if determine partition map reduce job is run and \"mapreduce.reduce.java.opts\" + \"mapreduce.map.java.opts\" is not set with druid.javascript.enabled=true\nDescription\nThe root cause of the failure is depending on if the determine_partitions map reduce job needs to be run or not. If the determine_partitions map reduce job needs to be run, then it will fail with the \"JavaScript is disabled\" error if \"mapreduce.reduce.java.opts\" + \"mapreduce.map.java.opts\" is not set with druid.javascript.enabled=true. This is due to peon not sending the druid.javascript.enabled value (that is set in the _common/common.runtime.properties) to hadoop when running the determine_partitions map reduce job\nThe determine_partitions is run for many configuration settings. For example, if \"maxRowsPerSegment\" is null but numShard is also null, then maxRowsPerSegment is internally set to default value of 5000000 and the determine_partitions job is run.\nThe fix is simply to include the druid.javascript.enabled prop when running the determine_partitions map reduce job (similar to how we do when we send the index-generator map reduce job. (Note that the druid.javascript.enabled is inject correctly for index-generator job).\nCurrent workaround is to pass the druid.javascript.enabled=true in \"mapreduce.map.java.opts\" and \"mapreduce.reduce.java.opts\" in addition to setting druid.javascript.enabled=true in _common/common.runtime.properties\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-03-21T08:49:27Z", "url": "https://github.com/apache/druid/pull/9553", "merged": true, "mergeCommit": {"oid": "e97695d9da40303c96da9e81cf019f071be36a6f"}, "closed": true, "closedAt": "2020-03-24T06:09:22Z", "author": {"login": "maytasm"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPw_n6gH2gAyMzkxODMzNDU1OmFkNThiMDdiOTg1ZDIxZjI2ZjZmMGI1Y2RiYjAwMDVkOTA5ZDMzYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQkjLygFqTM3OTgwNzIxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad58b07b985d21f26f6f0b5cdbb0005d909d33a6", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/ad58b07b985d21f26f6f0b5cdbb0005d909d33a6", "committedDate": "2020-03-21T08:39:53Z", "message": "fix Hadoop ingestion fails due to error 'JavaScript is disabled', if determine partition hadoop job is run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d00d3ca478b71ddf7beca0b0becdc2b021b4c88", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/7d00d3ca478b71ddf7beca0b0becdc2b021b4c88", "committedDate": "2020-03-21T08:40:00Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa2eba25c5c5bb8c03e8bff1d4db77fcd6c4a4e2", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/aa2eba25c5c5bb8c03e8bff1d4db77fcd6c4a4e2", "committedDate": "2020-03-21T08:48:41Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzE5NDA1", "url": "https://github.com/apache/druid/pull/9553#pullrequestreview-379719405", "createdAt": "2020-03-23T18:43:39Z", "commit": {"oid": "aa2eba25c5c5bb8c03e8bff1d4db77fcd6c4a4e2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0Mzo0MFrOF6TQqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0Mzo0MFrOF6TQqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3NzI5MA==", "bodyText": "injectDruidProperties has an almost same block with this. How about adding a new method HadoopDruidIndexerConfig.getAllowedProperties() which returns a map of a property name to a property? And this new method can be used both in injectDruidProperties() and this method.", "url": "https://github.com/apache/druid/pull/9553#discussion_r396677290", "createdAt": "2020-03-23T18:43:40Z", "author": {"login": "jihoonson"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java", "diffHunk": "@@ -343,11 +338,18 @@ public static void injectDruidProperties(Configuration configuration, List<Strin\n     }\n   }\n \n-  public static Configuration injectSystemProperties(Configuration conf)\n+  public static Configuration injectSystemProperties(Configuration conf, List<String> listOfAllowedPrefix)\n   {\n     for (String propName : HadoopDruidIndexerConfig.PROPERTIES.stringPropertyNames()) {\n       if (propName.startsWith(\"hadoop.\")) {\n         conf.set(propName.substring(\"hadoop.\".length()), HadoopDruidIndexerConfig.PROPERTIES.getProperty(propName));\n+      } else {\n+        for (String prefix : listOfAllowedPrefix) {\n+          if (propName.equals(prefix) || propName.startsWith(prefix + \".\")) {\n+            conf.set(propName, HadoopDruidIndexerConfig.PROPERTIES.getProperty(propName));\n+            break;\n+          }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2eba25c5c5bb8c03e8bff1d4db77fcd6c4a4e2"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/e5a4faff040ccb2136c3614ee908771f7994d82c", "committedDate": "2020-03-23T19:25:40Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzY2MDMx", "url": "https://github.com/apache/druid/pull/9553#pullrequestreview-379766031", "createdAt": "2020-03-23T19:42:19Z", "commit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0MjoxOVrOF6VVLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0MjoxOVrOF6VVLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMTIxNA==", "bodyText": "listOfAllowedPrefix seems to always be the allowedHadoopPrefix of this class. Can it be a non-static method?", "url": "https://github.com/apache/druid/pull/9553#discussion_r396711214", "createdAt": "2020-03-23T19:42:19Z", "author": {"login": "jihoonson"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/HadoopDruidIndexerConfig.java", "diffHunk": "@@ -138,6 +138,20 @@\n     ROWS_THROWN_AWAY_COUNTER\n   }\n \n+  public static Map<String, String> getAllowedProperties(List<String> listOfAllowedPrefix)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f38001a37851a00a802d4a633514be70bebe7b8", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/6f38001a37851a00a802d4a633514be70bebe7b8", "committedDate": "2020-03-23T20:40:19Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODA3MjEx", "url": "https://github.com/apache/druid/pull/9553#pullrequestreview-379807211", "createdAt": "2020-03-23T20:43:53Z", "commit": {"oid": "6f38001a37851a00a802d4a633514be70bebe7b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2712, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}