{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODMzNDU1", "number": 9553, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0Mzo0MFrODqglrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0MjoxOVrODqh2IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTAwNzE4OnYy", "diffSide": "RIGHT", "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0Mzo0MFrOF6TQqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToyNDoyM1rOF6Uq3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3NzI5MA==", "bodyText": "injectDruidProperties has an almost same block with this. How about adding a new method HadoopDruidIndexerConfig.getAllowedProperties() which returns a map of a property name to a property? And this new method can be used both in injectDruidProperties() and this method.", "url": "https://github.com/apache/druid/pull/9553#discussion_r396677290", "createdAt": "2020-03-23T18:43:40Z", "author": {"login": "jihoonson"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java", "diffHunk": "@@ -343,11 +338,18 @@ public static void injectDruidProperties(Configuration configuration, List<Strin\n     }\n   }\n \n-  public static Configuration injectSystemProperties(Configuration conf)\n+  public static Configuration injectSystemProperties(Configuration conf, List<String> listOfAllowedPrefix)\n   {\n     for (String propName : HadoopDruidIndexerConfig.PROPERTIES.stringPropertyNames()) {\n       if (propName.startsWith(\"hadoop.\")) {\n         conf.set(propName.substring(\"hadoop.\".length()), HadoopDruidIndexerConfig.PROPERTIES.getProperty(propName));\n+      } else {\n+        for (String prefix : listOfAllowedPrefix) {\n+          if (propName.equals(prefix) || propName.startsWith(prefix + \".\")) {\n+            conf.set(propName, HadoopDruidIndexerConfig.PROPERTIES.getProperty(propName));\n+            break;\n+          }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2eba25c5c5bb8c03e8bff1d4db77fcd6c4a4e2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcwMDM4MQ==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/9553#discussion_r396700381", "createdAt": "2020-03-23T19:24:23Z", "author": {"login": "maytasm"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/JobHelper.java", "diffHunk": "@@ -343,11 +338,18 @@ public static void injectDruidProperties(Configuration configuration, List<Strin\n     }\n   }\n \n-  public static Configuration injectSystemProperties(Configuration conf)\n+  public static Configuration injectSystemProperties(Configuration conf, List<String> listOfAllowedPrefix)\n   {\n     for (String propName : HadoopDruidIndexerConfig.PROPERTIES.stringPropertyNames()) {\n       if (propName.startsWith(\"hadoop.\")) {\n         conf.set(propName.substring(\"hadoop.\".length()), HadoopDruidIndexerConfig.PROPERTIES.getProperty(propName));\n+      } else {\n+        for (String prefix : listOfAllowedPrefix) {\n+          if (propName.equals(prefix) || propName.startsWith(prefix + \".\")) {\n+            conf.set(propName, HadoopDruidIndexerConfig.PROPERTIES.getProperty(propName));\n+            break;\n+          }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3NzI5MA=="}, "originalCommit": {"oid": "aa2eba25c5c5bb8c03e8bff1d4db77fcd6c4a4e2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTIxMzEyOnYy", "diffSide": "RIGHT", "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/HadoopDruidIndexerConfig.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTo0MjoxOVrOF6VVLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDozOTo0OVrOF6XPvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMTIxNA==", "bodyText": "listOfAllowedPrefix seems to always be the allowedHadoopPrefix of this class. Can it be a non-static method?", "url": "https://github.com/apache/druid/pull/9553#discussion_r396711214", "createdAt": "2020-03-23T19:42:19Z", "author": {"login": "jihoonson"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/HadoopDruidIndexerConfig.java", "diffHunk": "@@ -138,6 +138,20 @@\n     ROWS_THROWN_AWAY_COUNTER\n   }\n \n+  public static Map<String, String> getAllowedProperties(List<String> listOfAllowedPrefix)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMDE5NA==", "bodyText": "JobHelper.injectSystemProperties and JobHelper.injectDruidProperties methods are static. If we change those to non-static then yes, getAllowedProperties can be non-static since listOfAllowedPrefix are always allowedHadoopPrefix. But maybe leaving it like this is more flexible as the caller might pass something other than allowedHadoopPrefix for listOfAllowedPrefix", "url": "https://github.com/apache/druid/pull/9553#discussion_r396730194", "createdAt": "2020-03-23T20:16:05Z", "author": {"login": "maytasm"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/HadoopDruidIndexerConfig.java", "diffHunk": "@@ -138,6 +138,20 @@\n     ROWS_THROWN_AWAY_COUNTER\n   }\n \n+  public static Map<String, String> getAllowedProperties(List<String> listOfAllowedPrefix)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMTIxNA=="}, "originalCommit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMTA0Mw==", "bodyText": "Leaving as is unless you have strong opinion on changing all those to non-static and having JobHelper instances. @jihoonson", "url": "https://github.com/apache/druid/pull/9553#discussion_r396731043", "createdAt": "2020-03-23T20:17:51Z", "author": {"login": "maytasm"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/HadoopDruidIndexerConfig.java", "diffHunk": "@@ -138,6 +138,20 @@\n     ROWS_THROWN_AWAY_COUNTER\n   }\n \n+  public static Map<String, String> getAllowedProperties(List<String> listOfAllowedPrefix)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMTIxNA=="}, "originalCommit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMjQ5Mg==", "bodyText": "I guess you can make this method non-static while keeping those methods as static if they accept HadoopDruidIndexerConfig instead of listOfAllowedPrefix?", "url": "https://github.com/apache/druid/pull/9553#discussion_r396732492", "createdAt": "2020-03-23T20:20:47Z", "author": {"login": "jihoonson"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/HadoopDruidIndexerConfig.java", "diffHunk": "@@ -138,6 +138,20 @@\n     ROWS_THROWN_AWAY_COUNTER\n   }\n \n+  public static Map<String, String> getAllowedProperties(List<String> listOfAllowedPrefix)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMTIxNA=="}, "originalCommit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc0MjU5MA==", "bodyText": "I like that. Done", "url": "https://github.com/apache/druid/pull/9553#discussion_r396742590", "createdAt": "2020-03-23T20:39:49Z", "author": {"login": "maytasm"}, "path": "indexing-hadoop/src/main/java/org/apache/druid/indexer/HadoopDruidIndexerConfig.java", "diffHunk": "@@ -138,6 +138,20 @@\n     ROWS_THROWN_AWAY_COUNTER\n   }\n \n+  public static Map<String, String> getAllowedProperties(List<String> listOfAllowedPrefix)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjcxMTIxNA=="}, "originalCommit": {"oid": "e5a4faff040ccb2136c3614ee908771f7994d82c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2667, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}