{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNjEyOTQ3", "number": 10413, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowMToxOVrOEmQ2iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1NToyN1rOEmtuFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTU3NDQ4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/druid/timeline/DataSegment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowMToxOVrOHWMPTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNToyNToyNVrOHWW2UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzMTI0NQ==", "bodyText": "super nit - to link to where the default is.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * compaction task (true by default).\n          \n          \n            \n               * compaction task (true by default). {@link org.apache.druid.indexing.common.task.Tasks#DEFAULT_STORE_COMPACTION_STATE}.", "url": "https://github.com/apache/druid/pull/10413#discussion_r493031245", "createdAt": "2020-09-22T21:01:19Z", "author": {"login": "suneet-s"}, "path": "core/src/main/java/org/apache/druid/timeline/DataSegment.java", "diffHunk": "@@ -100,7 +100,7 @@\n   /**\n    * Stores some configurations of the compaction task which created this segment.\n    * This field is filled in the metadata store only when \"storeCompactionState\" is set true in the context of the\n-   * compaction task which is false by default.\n+   * compaction task (true by default).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33959d2fd5183ebf08c45e1b61a953d4301dc382"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwNTA3Mg==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10413#discussion_r493205072", "createdAt": "2020-09-23T05:25:25Z", "author": {"login": "maytasm"}, "path": "core/src/main/java/org/apache/druid/timeline/DataSegment.java", "diffHunk": "@@ -100,7 +100,7 @@\n   /**\n    * Stores some configurations of the compaction task which created this segment.\n    * This field is filled in the metadata store only when \"storeCompactionState\" is set true in the context of the\n-   * compaction task which is false by default.\n+   * compaction task (true by default).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzMTI0NQ=="}, "originalCommit": {"oid": "33959d2fd5183ebf08c45e1b61a953d4301dc382"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTU4NDI4OnYy", "diffSide": "RIGHT", "path": "docs/querying/sql.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowNDozMlrOHWMVYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNTozMzozNVrOHWW_9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzMjgwMw==", "bodyText": "The PR description talks about being able to identify performance issues where looking at last_compaction_state can help. Should we add some example sql statements below to explain how to identify the 3 issues outlined in the PR description?", "url": "https://github.com/apache/druid/pull/10413#discussion_r493032803", "createdAt": "2020-09-22T21:04:32Z", "author": {"login": "suneet-s"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1086,6 +1086,7 @@ Segments table provides details on all Druid segments, whether they are publishe\n |shardSpec|STRING|The toString of specific `ShardSpec`|\n |dimensions|STRING|The dimensions of the segment|\n |metrics|STRING|The metrics of the segment|\n+|last_compaction_state|STRING|The configurations of the compaction task which created this segment. May be null if segment was not created by compaction task.|\n \n For example to retrieve all segments for datasource \"wikipedia\", use the query:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33959d2fd5183ebf08c45e1b61a953d4301dc382"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwNzU0Mg==", "bodyText": "Done. It's very basic example but any one with proficient SQL can probably think of better things to query.", "url": "https://github.com/apache/druid/pull/10413#discussion_r493207542", "createdAt": "2020-09-23T05:33:35Z", "author": {"login": "maytasm"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1086,6 +1086,7 @@ Segments table provides details on all Druid segments, whether they are publishe\n |shardSpec|STRING|The toString of specific `ShardSpec`|\n |dimensions|STRING|The dimensions of the segment|\n |metrics|STRING|The metrics of the segment|\n+|last_compaction_state|STRING|The configurations of the compaction task which created this segment. May be null if segment was not created by compaction task.|\n \n For example to retrieve all segments for datasource \"wikipedia\", use the query:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzMjgwMw=="}, "originalCommit": {"oid": "33959d2fd5183ebf08c45e1b61a953d4301dc382"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTYxMTE3OnYy", "diffSide": "RIGHT", "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMToxMzoyMlrOHWMmOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNTo1ODoxNVrOHWXfSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzNzExNQ==", "bodyText": "CompactionState includes the PartitionsSpec and indexSpec.\nWhat should a caller of the API do with these?\nThe compaction state appears to be an unbounded json object. Do we foresee any issues around serializing the entire json blob every time we need to call the sys table?", "url": "https://github.com/apache/druid/pull/10413#discussion_r493037115", "createdAt": "2020-09-22T21:13:22Z", "author": {"login": "suneet-s"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -311,7 +312,8 @@ public TableType getJdbcTableType()\n                 val.isOvershadowed() ? IS_OVERSHADOWED_TRUE : IS_OVERSHADOWED_FALSE,\n                 segment.getShardSpec(),\n                 segment.getDimensions(),\n-                segment.getMetrics()\n+                segment.getMetrics(),\n+                segment.getLastCompactionState()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33959d2fd5183ebf08c45e1b61a953d4301dc382"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIxNTU2MA==", "bodyText": "Both PartitionsSpec and indexSpec can be helpful in determining the cause of query performance issue. We will also want to know what segments auto compaction will compact as both of those Spec determine that. 'indexSpec' can also impact query performance (see shape shifting PR).\nCompactionState is a small json and is already stored in memory as part of the DataSegment. We are also returning the shardSpec so this should not be a problem.", "url": "https://github.com/apache/druid/pull/10413#discussion_r493215560", "createdAt": "2020-09-23T05:58:15Z", "author": {"login": "maytasm"}, "path": "sql/src/main/java/org/apache/druid/sql/calcite/schema/SystemSchema.java", "diffHunk": "@@ -311,7 +312,8 @@ public TableType getJdbcTableType()\n                 val.isOvershadowed() ? IS_OVERSHADOWED_TRUE : IS_OVERSHADOWED_FALSE,\n                 segment.getShardSpec(),\n                 segment.getDimensions(),\n-                segment.getMetrics()\n+                segment.getMetrics(),\n+                segment.getLastCompactionState()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzNzExNQ=="}, "originalCommit": {"oid": "33959d2fd5183ebf08c45e1b61a953d4301dc382"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTkyOTY0OnYy", "diffSide": "RIGHT", "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/CompactionTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMzoxODo0MlrOHWPkmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNjo0ODo0MFrOHWYutg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA4NTg1MA==", "bodyText": "I think you should use putIfAbsent. That will allow the user to provide a STORE_COMPACTION_STATE_KEY that is different from the default value of true if needed.\nAlso nit: use a constant for the default value", "url": "https://github.com/apache/druid/pull/10413#discussion_r493085850", "createdAt": "2020-09-22T23:18:42Z", "author": {"login": "suneet-s"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/CompactionTask.java", "diffHunk": "@@ -422,6 +422,7 @@ ParallelIndexSupervisorTask newTask(String taskId, ParallelIndexIngestionSpec in\n   {\n     final Map<String, Object> newContext = new HashMap<>(getContext());\n     newContext.put(CTX_KEY_APPENDERATOR_TRACKING_TASK_ID, getId());\n+    newContext.put(CompactSegments.STORE_COMPACTION_STATE_KEY, getContextValue(Tasks.STORE_COMPACTION_STATE_KEY, true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c9727e66efd9bcff08893aa4fc021e348dc95bc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIzNTg5NA==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10413#discussion_r493235894", "createdAt": "2020-09-23T06:48:40Z", "author": {"login": "maytasm"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/CompactionTask.java", "diffHunk": "@@ -422,6 +422,7 @@ ParallelIndexSupervisorTask newTask(String taskId, ParallelIndexIngestionSpec in\n   {\n     final Map<String, Object> newContext = new HashMap<>(getContext());\n     newContext.put(CTX_KEY_APPENDERATOR_TRACKING_TASK_ID, getId());\n+    newContext.put(CompactSegments.STORE_COMPACTION_STATE_KEY, getContextValue(Tasks.STORE_COMPACTION_STATE_KEY, true));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA4NTg1MA=="}, "originalCommit": {"oid": "0c9727e66efd9bcff08893aa4fc021e348dc95bc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDI5MTM2OnYy", "diffSide": "RIGHT", "path": "docs/querying/sql.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1MjowM1rOHW58Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMTozNjo1MlrOHXB2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3OTk3NQ==", "bodyText": "Suggested re-write to talk about the problem an admin would be looking to solve more explicitly.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you want to retrieve segment that was compacted (ANY compaction):\n          \n          \n            \n            \n          \n          \n            \n            ```sql\n          \n          \n            \n            SELECT * FROM sys.segments WHERE last_compaction_state is not null\n          \n          \n            \n            ```\n          \n          \n            \n            If you want to know whether segments in the wikipedia table are not compacted, and therefore may be contributing to query slowness, you can run a query like this to tell you how many segments have not been compacted per interval.\n          \n          \n            \n            \n          \n          \n            \n            ```sql\n          \n          \n            \n            SELECT start, end, count(*) FROM sys.segments WHERE datasource = 'wikipedia' and last_compaction_state is not null group by 1, 2\n          \n      \n    \n    \n  \n\nIf you find that queries that hit these intervals are slow - consider enabling compaction to produce more optimal segments.", "url": "https://github.com/apache/druid/pull/10413#discussion_r493779975", "createdAt": "2020-09-23T17:52:03Z", "author": {"login": "suneet-s"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1108,6 +1108,18 @@ GROUP BY 1\n ORDER BY 2 DESC\n ```\n \n+If you want to retrieve segment that was compacted (ANY compaction):\n+\n+```sql\n+SELECT * FROM sys.segments WHERE last_compaction_state is not null\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ea1d41074d7b37958b7111a4789dc12ac2fcf02"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwOTU4Mg==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10413#discussion_r493909582", "createdAt": "2020-09-23T21:36:52Z", "author": {"login": "maytasm"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1108,6 +1108,18 @@ GROUP BY 1\n ORDER BY 2 DESC\n ```\n \n+If you want to retrieve segment that was compacted (ANY compaction):\n+\n+```sql\n+SELECT * FROM sys.segments WHERE last_compaction_state is not null\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3OTk3NQ=="}, "originalCommit": {"oid": "7ea1d41074d7b37958b7111a4789dc12ac2fcf02"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDMwNDIxOnYy", "diffSide": "RIGHT", "path": "docs/querying/sql.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1NToyN1rOHW6EBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMTozNzo0NVrOHXB3vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjAyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            or if you want to retrieve segment that was compacted only by a particular compaction spec (such as that of the auto compaction):\n          \n          \n            \n            Sometimes, you may have updated your compaction spec to a more optimal spec. In these cases you can find which segments are using the latest compaction spec using a query like the one below:\n          \n      \n    \n    \n  \n\nCan you also add instructions on how to produce the last_compaction_state blob from the web console. If I'm looking at the compaction config for a datasource - can I copy something to paste in the where clause here?", "url": "https://github.com/apache/druid/pull/10413#discussion_r493782020", "createdAt": "2020-09-23T17:55:27Z", "author": {"login": "suneet-s"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1108,6 +1108,18 @@ GROUP BY 1\n ORDER BY 2 DESC\n ```\n \n+If you want to retrieve segment that was compacted (ANY compaction):\n+\n+```sql\n+SELECT * FROM sys.segments WHERE last_compaction_state is not null\n+```\n+\n+or if you want to retrieve segment that was compacted only by a particular compaction spec (such as that of the auto compaction):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ea1d41074d7b37958b7111a4789dc12ac2fcf02"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwOTk1MA==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/10413#discussion_r493909950", "createdAt": "2020-09-23T21:37:45Z", "author": {"login": "maytasm"}, "path": "docs/querying/sql.md", "diffHunk": "@@ -1108,6 +1108,18 @@ GROUP BY 1\n ORDER BY 2 DESC\n ```\n \n+If you want to retrieve segment that was compacted (ANY compaction):\n+\n+```sql\n+SELECT * FROM sys.segments WHERE last_compaction_state is not null\n+```\n+\n+or if you want to retrieve segment that was compacted only by a particular compaction spec (such as that of the auto compaction):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjAyMA=="}, "originalCommit": {"oid": "7ea1d41074d7b37958b7111a4789dc12ac2fcf02"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3223, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}