{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzI3Mzk4", "number": 10171, "title": "Add integration tests for query retry on missing segments", "bodyText": "Description\nA follow-up of #10082. This PR adds new integration tests for RetryQueryRunner. To mimic the case where historicals can report missing segments, this integration tests use 2 historicals, one normal historical and a historical modified for these tests. This modified historical announces all segments assigned, but it can report missing segments for some of them. To run them separately from other tests, these tests were added as a new test group, query-retry. The modified historical is spawned only for this test group.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-07-11T06:20:44Z", "url": "https://github.com/apache/druid/pull/10171", "merged": true, "mergeCommit": {"oid": "6fdce36e41b109f74077c0a68fc2d2ec5d771e29"}, "closed": true, "closedAt": "2020-07-23T05:30:36Z", "author": {"login": "jihoonson"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczyCezgH2gAyNDQ3NzI3Mzk4OmVlMDA0YTZjMjE5NjNhY2IwYWQyNTQ0NDcyZDU2ZmJiNTFlMmZlMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3gw9EgFqTQ1MzY1NTgxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ee004a6c21963acb0ad2544472d56fbb51e2fe1f", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/ee004a6c21963acb0ad2544472d56fbb51e2fe1f", "committedDate": "2020-07-11T06:14:11Z", "message": "Add integration tests for query retry on missing segments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77712b6b6bac4ca457b8e9e107bacf4061a3c4d7", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/77712b6b6bac4ca457b8e9e107bacf4061a3c4d7", "committedDate": "2020-07-11T19:30:08Z", "message": "add missing dependencies; fix travis conf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3ODk3NzA0", "url": "https://github.com/apache/druid/pull/10171#pullrequestreview-447897704", "createdAt": "2020-07-14T08:29:11Z", "commit": {"oid": "77712b6b6bac4ca457b8e9e107bacf4061a3c4d7"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODoyOToxMlrOGxJqBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTowNzowMFrOGxLABg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MTYyMA==", "bodyText": "doesn't need to be changed in this PR, but is this useful to include in the base compose file? I guess all the funny routers are here too, so not a big deal, but we might want to consider moving these definitions into the compose files that actually use them", "url": "https://github.com/apache/druid/pull/10171#discussion_r454191620", "createdAt": "2020-07-14T08:29:12Z", "author": {"login": "clintropolis"}, "path": "integration-tests/docker/docker-compose.base.yml", "diffHunk": "@@ -142,12 +142,30 @@ services:\n       - ./environment-configs/common\n       - ./environment-configs/historical\n \n+  druid-historical-for-query-retry-test:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77712b6b6bac4ca457b8e9e107bacf4061a3c4d7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5NTAyNA==", "bodyText": "I don't think this is necessary in this PR, but I think we should consider moving this cluster stop script to using docker compose to tear down the thing that it previously created", "url": "https://github.com/apache/druid/pull/10171#discussion_r454195024", "createdAt": "2020-07-14T08:35:05Z", "author": {"login": "clintropolis"}, "path": "integration-tests/stop_cluster.sh", "diffHunk": "@@ -20,7 +20,7 @@ if [ -n \"$DRUID_INTEGRATION_TEST_SKIP_RUN_DOCKER\" ] && [ \"$DRUID_INTEGRATION_TES\n     exit 0\n   fi\n \n-for node in druid-historical druid-coordinator druid-overlord druid-router druid-router-permissive-tls druid-router-no-client-auth-tls druid-router-custom-check-tls druid-broker druid-middlemanager druid-zookeeper-kafka druid-metadata-storage druid-it-hadoop;\n+for node in druid-historical druid-historical-for-query-retry-test druid-coordinator druid-overlord druid-router druid-router-permissive-tls druid-router-no-client-auth-tls druid-router-custom-check-tls druid-broker druid-middlemanager druid-zookeeper-kafka druid-metadata-storage druid-it-hadoop;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77712b6b6bac4ca457b8e9e107bacf4061a3c4d7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5NTg2NA==", "bodyText": "what is this change for?", "url": "https://github.com/apache/druid/pull/10171#discussion_r454195864", "createdAt": "2020-07-14T08:36:39Z", "author": {"login": "clintropolis"}, "path": "processing/src/main/java/org/apache/druid/query/timeseries/TimeseriesQueryQueryToolChest.java", "diffHunk": "@@ -138,7 +139,9 @@ public TimeseriesQueryQueryToolChest(TimeseriesQueryMetricsFactory queryMetricsF\n \n       final Sequence<Result<TimeseriesResultValue>> finalSequence;\n \n-      if (query.getGranularity().equals(Granularities.ALL) && !query.isSkipEmptyBuckets()) {\n+      if (query.getGranularity().equals(Granularities.ALL) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77712b6b6bac4ca457b8e9e107bacf4061a3c4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIwODk5OA==", "bodyText": "Is a custom main method easier than using theCliCommandCreator extension point? I thought you just need something like this:\npublic class QueryRetryTestCommandCreator implements CliCommandCreator\n{\n  @Override\n  public void addCommands(Cli.CliBuilder builder)\n  {\n    builder.withGroup(\"server\").withCommands(CliHistoricalForQueryRetryTest.class);\n  }\n}\nand a META-INF/services entry for it, but I can't remember, maybe there is something more to it", "url": "https://github.com/apache/druid/pull/10171#discussion_r454208998", "createdAt": "2020-07-14T08:59:00Z", "author": {"login": "clintropolis"}, "path": "integration-tests/src/main/java/org/apache/druid/cli/MainForQueryRetryTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.cli;\n+\n+import com.google.inject.Injector;\n+import io.airlift.airline.Cli;\n+import io.airlift.airline.Help;\n+import io.airlift.airline.ParseException;\n+import io.netty.util.SuppressForbidden;\n+import org.apache.druid.guice.ExtensionsConfig;\n+import org.apache.druid.guice.GuiceInjectors;\n+import org.apache.druid.initialization.Initialization;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+\n+/**\n+ * Main class for query retry testing.\n+ *\n+ * @see CliHistoricalForQueryRetryTest\n+ */\n+public class MainForQueryRetryTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77712b6b6bac4ca457b8e9e107bacf4061a3c4d7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIxMzYzOA==", "bodyText": "heh, this list is getting kind of long \ud83d\ude05", "url": "https://github.com/apache/druid/pull/10171#discussion_r454213638", "createdAt": "2020-07-14T09:07:00Z", "author": {"login": "clintropolis"}, "path": ".travis.yml", "diffHunk": "@@ -397,7 +405,7 @@ jobs:\n       name: \"(Compile=openjdk8, Run=openjdk8) other integration test\"\n       jdk: openjdk8\n       services: *integration_test_services\n-      env: TESTNG_GROUPS='-DexcludedGroups=batch-index,input-format,perfect-rollup-parallel-batch-index,kafka-index,query,realtime-index,security,s3-deep-storage,gcs-deep-storage,azure-deep-storage,hdfs-deep-storage,s3-ingestion,kinesis-index,kinesis-data-format,kafka-transactional-index,kafka-index-slow,kafka-transactional-index-slow,kafka-data-format,hadoop-s3-to-s3-deep-storage,hadoop-s3-to-hdfs-deep-storage,hadoop-azure-to-azure-deep-storage,hadoop-azure-to-hdfs-deep-storage,hadoop-gcs-to-gcs-deep-storage,hadoop-gcs-to-hdfs-deep-storage,aliyun-oss-deep-storage' JVM_RUNTIME='-Djvm.runtime=11'\n+      env: TESTNG_GROUPS='-DexcludedGroups=batch-index,input-format,perfect-rollup-parallel-batch-index,kafka-index,query,query-retry,realtime-index,security,s3-deep-storage,gcs-deep-storage,azure-deep-storage,hdfs-deep-storage,s3-ingestion,kinesis-index,kinesis-data-format,kafka-transactional-index,kafka-index-slow,kafka-transactional-index-slow,kafka-data-format,hadoop-s3-to-s3-deep-storage,hadoop-s3-to-hdfs-deep-storage,hadoop-azure-to-azure-deep-storage,hadoop-azure-to-hdfs-deep-storage,hadoop-gcs-to-gcs-deep-storage,hadoop-gcs-to-hdfs-deep-storage,aliyun-oss-deep-storage' JVM_RUNTIME='-Djvm.runtime=11'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77712b6b6bac4ca457b8e9e107bacf4061a3c4d7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00269102e00e0330ab496910713195ab31f07801", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/00269102e00e0330ab496910713195ab31f07801", "committedDate": "2020-07-15T01:18:46Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf0055b492309eb129dbade7efebd5b3fd38ba1e", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/cf0055b492309eb129dbade7efebd5b3fd38ba1e", "committedDate": "2020-07-17T03:26:50Z", "message": "Integration tests extension"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04695125277ebcb885b5e95efd0b702c8bd65b47", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/04695125277ebcb885b5e95efd0b702c8bd65b47", "committedDate": "2020-07-17T04:27:49Z", "message": "remove unused dependency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODk1MDkz", "url": "https://github.com/apache/druid/pull/10171#pullrequestreview-451895093", "createdAt": "2020-07-20T19:26:46Z", "commit": {"oid": "04695125277ebcb885b5e95efd0b702c8bd65b47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyNjo0NlrOG0cKnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyNjo0NlrOG0cKnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MDYwNw==", "bodyText": "I guess this technically isn't needed anymore, but maybe is still useful? Should we check if it isn't set and set this as a default value somewhere centralized?", "url": "https://github.com/apache/druid/pull/10171#discussion_r457640607", "createdAt": "2020-07-20T19:26:46Z", "author": {"login": "clintropolis"}, "path": "integration-tests/docker/environment-configs/middlemanager", "diffHunk": "@@ -19,6 +19,7 @@\n \n DRUID_SERVICE=middleManager\n DRUID_LOG_PATH=/shared/logs/middlemanager.log\n+DRUID_MAIN=org.apache.druid.cli.Main", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04695125277ebcb885b5e95efd0b702c8bd65b47"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d329359b2dbc05a6e4ea2dd3df104d5ba11079d5", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/d329359b2dbc05a6e4ea2dd3df104d5ba11079d5", "committedDate": "2020-07-20T20:48:22Z", "message": "Merge branch 'master' into it-test-query-retry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d22f034c2cc768dd4af882600da7869895d4831c", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/d22f034c2cc768dd4af882600da7869895d4831c", "committedDate": "2020-07-20T20:52:15Z", "message": "remove druid_main"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTUyODUz", "url": "https://github.com/apache/druid/pull/10171#pullrequestreview-451952853", "createdAt": "2020-07-20T20:55:50Z", "commit": {"oid": "d22f034c2cc768dd4af882600da7869895d4831c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef06f3b18a4dd8bfacc7f132d69853045598c12d", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/ef06f3b18a4dd8bfacc7f132d69853045598c12d", "committedDate": "2020-07-21T17:51:13Z", "message": "Merge branch 'master' into it-test-query-retry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODM0MTIw", "url": "https://github.com/apache/druid/pull/10171#pullrequestreview-452834120", "createdAt": "2020-07-21T21:14:28Z", "commit": {"oid": "ef06f3b18a4dd8bfacc7f132d69853045598c12d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToxNDoyOFrOG1KBXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToxNDoyOFrOG1KBXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5MTkwMA==", "bodyText": "address=5007 is already used by the default historical.", "url": "https://github.com/apache/druid/pull/10171#discussion_r458391900", "createdAt": "2020-07-21T21:14:28Z", "author": {"login": "maytasm"}, "path": "integration-tests/docker/environment-configs/historical-for-query-retry-test", "diffHunk": "@@ -0,0 +1,33 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+DRUID_SERVICE=historical-for-query-retry-test\n+DRUID_LOG_PATH=/shared/logs/historical-for-query-retry-test.log\n+\n+# JAVA OPTS\n+SERVICE_DRUID_JAVA_OPTS=-server -Xmx512m -Xms512m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:+UseG1GC -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5007", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef06f3b18a4dd8bfacc7f132d69853045598c12d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODM2ODUw", "url": "https://github.com/apache/druid/pull/10171#pullrequestreview-452836850", "createdAt": "2020-07-21T21:18:53Z", "commit": {"oid": "ef06f3b18a4dd8bfacc7f132d69853045598c12d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToxODo1M1rOG1KJ_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToxODo1M1rOG1KJ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5NDEwOQ==", "bodyText": "If the only difference between this one and the base yml is the new druid-historical-for-query-retry-test, you can just have the new druid-historical-for-query-retry-test in a yml and run two yml when you want to start druid (docker-compose -f ${DOCKERDIR}/docker-compose.yml -f ${DOCKERDIR}/docker-compose.query-retry-test.yml  up -d", "url": "https://github.com/apache/druid/pull/10171#discussion_r458394109", "createdAt": "2020-07-21T21:18:53Z", "author": {"login": "maytasm"}, "path": "integration-tests/docker/docker-compose.query-retry-test.yml", "diffHunk": "@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+version: \"2.2\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef06f3b18a4dd8bfacc7f132d69853045598c12d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODQ2NTU5", "url": "https://github.com/apache/druid/pull/10171#pullrequestreview-452846559", "createdAt": "2020-07-21T21:34:55Z", "commit": {"oid": "ef06f3b18a4dd8bfacc7f132d69853045598c12d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMTozNDo1NVrOG1KpJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMTozNDo1NVrOG1KpJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQwMjA4NA==", "bodyText": "Don't have to be in this PR but maybe we should make this a flag passed in my mvn (like -Dstart.hadoop.docker=true). So something like -Ddruid.preload.test.data=true\nSo that this list doesn't get long in the future.", "url": "https://github.com/apache/druid/pull/10171#discussion_r458402084", "createdAt": "2020-07-21T21:34:55Z", "author": {"login": "maytasm"}, "path": "integration-tests/docker/druid.sh", "diffHunk": "@@ -82,14 +83,18 @@ setupData()\n   # The \"query\" and \"security\" test groups require data to be setup before running the tests.\n   # In particular, they requires segments to be download from a pre-existing s3 bucket.\n   # This is done by using the loadSpec put into metadatastore and s3 credientials set below.\n-  if [ \"$DRUID_INTEGRATION_TEST_GROUP\" = \"query\" ] || [ \"$DRUID_INTEGRATION_TEST_GROUP\" = \"security\" ]; then\n+  if [ \"$DRUID_INTEGRATION_TEST_GROUP\" = \"query\" ] || [ \"$DRUID_INTEGRATION_TEST_GROUP\" = \"query-retry\" ] || [ \"$DRUID_INTEGRATION_TEST_GROUP\" = \"security\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef06f3b18a4dd8bfacc7f132d69853045598c12d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbd587e96bb00c994a036c82f6fc31d790096736", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/dbd587e96bb00c994a036c82f6fc31d790096736", "committedDate": "2020-07-22T18:42:14Z", "message": "fix java agent port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a08a3da71f18f379130db29a70732bd5c00f061e", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/a08a3da71f18f379130db29a70732bd5c00f061e", "committedDate": "2020-07-22T18:42:39Z", "message": "Merge branch 'it-test-query-retry' of github.com:jihoonson/druid into it-test-query-retry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNjU1ODE5", "url": "https://github.com/apache/druid/pull/10171#pullrequestreview-453655819", "createdAt": "2020-07-22T20:22:21Z", "commit": {"oid": "a08a3da71f18f379130db29a70732bd5c00f061e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1838, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}