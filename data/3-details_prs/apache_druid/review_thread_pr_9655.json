{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjUyODAz", "number": 9655, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDo0NDo1OVrODwnMyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDo0NDo1OVrODwnMyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzAwNDg5OnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/BufferArrayGrouper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDo0NDo1OVrOGDt2-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMTowNjo0NlrOGDuKXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU1MDI2NQ==", "bodyText": "I think the comment here should have > Integer.MAX_VALUE instead", "url": "https://github.com/apache/druid/pull/9655#discussion_r406550265", "createdAt": "2020-04-10T00:44:59Z", "author": {"login": "jon-wei"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/BufferArrayGrouper.java", "diffHunk": "@@ -69,12 +69,20 @@\n   @Nullable\n   private int[] vAggregationRows = null;\n \n-  static long requiredBufferCapacity(\n-      int cardinality,\n-      AggregatorFactory[] aggregatorFactories\n-  )\n+  /**\n+   * Computes required buffer capacity for a grouping key of the given cardinaltiy and aggregatorFactories.\n+   * This method assumes that the given cardinality doesn't count nulls.\n+   *\n+   * Returns -1 if it cardinality + 1 (for null) = Integer.MAX_VALUE. Returns computed required buffer capacity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca973dd93dd0dbdc0785d8d3a4300886a44cd1ca"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU1NTIyOQ==", "bodyText": "Oops, thanks!", "url": "https://github.com/apache/druid/pull/9655#discussion_r406555229", "createdAt": "2020-04-10T01:06:46Z", "author": {"login": "jihoonson"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/BufferArrayGrouper.java", "diffHunk": "@@ -69,12 +69,20 @@\n   @Nullable\n   private int[] vAggregationRows = null;\n \n-  static long requiredBufferCapacity(\n-      int cardinality,\n-      AggregatorFactory[] aggregatorFactories\n-  )\n+  /**\n+   * Computes required buffer capacity for a grouping key of the given cardinaltiy and aggregatorFactories.\n+   * This method assumes that the given cardinality doesn't count nulls.\n+   *\n+   * Returns -1 if it cardinality + 1 (for null) = Integer.MAX_VALUE. Returns computed required buffer capacity", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU1MDI2NQ=="}, "originalCommit": {"oid": "ca973dd93dd0dbdc0785d8d3a4300886a44cd1ca"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2527, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}