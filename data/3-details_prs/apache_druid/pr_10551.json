{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NjA3ODY0", "number": 10551, "title": "Remove hard limitation that druid(after 0.15.0) only can consume Kafka version 0.11.x or better", "bodyText": "Fixes #8279\n\n\nDescription\nIn our PRD Environment, we deployed two versions of Kafka, which are 0.10.2.1 and 2.4.1. And open source druid(from 0.15.0 to 0.20.0) only can support to consume messages from Kafka 0.11.x or better. And when consume Kafka 0.10.2.1, it throws UnsupportedVersionException :\n2020-11-03T07:40:03,539 WARN [KafkaSupervisor-xxxxx] org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor - Exception in supervisor run loop for dataSource [xxxxx]\norg.apache.druid.indexing.seekablestream.common.StreamException: org.apache.kafka.common.errors.UnsupportedVersionException: The broker does not support LIST_OFFSETS with version in range [2,5]. The supported range is [0,1].\n\tat org.apache.druid.indexing.kafka.KafkaRecordSupplier.wrapExceptions(KafkaRecordSupplier.java:261) ~[?:?]\n\tat org.apache.druid.indexing.kafka.KafkaRecordSupplier.getPosition(KafkaRecordSupplier.java:158) ~[?:?]\n\tat org.apache.druid.indexing.kafka.KafkaRecordSupplier.getLatestSequenceNumber(KafkaRecordSupplier.java:138) ~[?:?]\n\tat org.apache.druid.indexing.kafka.KafkaRecordSupplier.getLatestSequenceNumber(KafkaRecordSupplier.java:53) ~[?:?]\n\u2026\n\nCaused by: org.apache.kafka.common.errors.UnsupportedVersionException: The broker does not support LIST_OFFSETS with version in range [2,5]. The supported range is [0,1].\nAnd as the Druid docs says\nThe Kafka indexing service supports transactional topics which were introduced in Kafka 0.11.x. These changes make the Kafka consumer that Druid uses incompatible with older brokers. Ensure that your Kafka brokers are version 0.11.x or better before using this functionality. Refer\u00a0Kafka upgrade guide\u00a0if you are using older version of Kafka brokers.\n\n\nThe root cause of this exception (SDK 2.6.0 + Kafka 0.10.2.1) is Hard-coded \u2018props.put(\"isolation.level\", \"read_committed\");\u2019 in the \u2018KafkaConsumerConfigs\u2019 which is unnecessary.\nThis PR adds a new config named consumeTransactionally  in KafkaIndexTaskIOConfig. Default is true, druid can consume Kafka topics consumeTransactionally same as current Druid behavior. And users can set this config false. Set consumeTransactionally false here can disable druid to consume Kafka in a transactional way. And druid could consume lower version of Kafka now, such as 0.10.2.1, like\n{\n  \"type\": \"kafka\",\n  \"dataSchema\": {\n    \"dataSource\": \"metrics-kafka\",\n    \"timestampSpec\": {\n      \"column\": \"timestamp\",\n      \"format\": \"auto\"\n    },\n    \"dimensionsSpec\": {\n      \"dimensions\": [],\n      \"dimensionExclusions\": [\n        \"timestamp\",\n        \"value\"\n      ]\n    },\n    \"metricsSpec\": [\n      {\n        \"name\": \"count\",\n        \"type\": \"count\"\n      },\n      {\n        \"name\": \"value_sum\",\n        \"fieldName\": \"value\",\n        \"type\": \"doubleSum\"\n      },\n      {\n        \"name\": \"value_min\",\n        \"fieldName\": \"value\",\n        \"type\": \"doubleMin\"\n      },\n      {\n        \"name\": \"value_max\",\n        \"fieldName\": \"value\",\n        \"type\": \"doubleMax\"\n      }\n    ],\n    \"granularitySpec\": {\n      \"type\": \"uniform\",\n      \"segmentGranularity\": \"HOUR\",\n      \"queryGranularity\": \"NONE\"\n    }\n  },\n  \"ioConfig\": {\n    \"topic\": \"metrics\",\n    \"inputFormat\": {\n      \"type\": \"json\"\n    },\n    \"consumerProperties\": {\n      \"bootstrap.servers\": \"localhost:9092\"\n    },\n    \"consumeTransactionally\": false,\n    \"taskCount\": 1,\n    \"replicas\": 1,\n    \"taskDuration\": \"PT1H\"\n  },\n  \"tuningConfig\": {\n    \"type\": \"kafka\",\n    \"maxRowsPerSegment\": 5000000\n  }\n}\nEnable this feature, Druid can both consumes Kafka 2.4.1 and Kafka 0.10.2.1 through different configurations of supervisors.\nHere are logs of overlord service:\nIgnore consumeTransactionally or set it true\n2020-11-03T08:31:15,470 INFO [LeaderSelector[/druid/overlord/_OVERLORD]] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: \n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.offset.reset = none\n\tbootstrap.servers = [xxx, xxx, xxx]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-kafka-supervisor-hhphhhag-1\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = kafka-supervisor-hhphhhag\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_committed\n\tkey.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 10000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.mechanism = GSSAPI\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.2\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer\n\nSet consumeTransactionally false\n\tallow.auto.create.topics = true\n\tauto.commit.interval.ms = 5000\n\tauto.offset.reset = none\n\tbootstrap.servers = [xxx, xxx, xxx]\n\tcheck.crcs = true\n\tclient.dns.lookup = use_all_dns_ips\n\tclient.id = consumer-kafka-supervisor-bhfahfke-1\n\tclient.rack = \n\tconnections.max.idle.ms = 540000\n\tdefault.api.timeout.ms = 60000\n\tenable.auto.commit = false\n\texclude.internal.topics = true\n\tfetch.max.bytes = 52428800\n\tfetch.max.wait.ms = 500\n\tfetch.min.bytes = 1\n\tgroup.id = kafka-supervisor-bhfahfke\n\tgroup.instance.id = null\n\theartbeat.interval.ms = 3000\n\tinterceptor.classes = []\n\tinternal.leave.group.on.close = true\n\tinternal.throw.on.fetch.stable.offset.unsupported = false\n\tisolation.level = read_uncommitted\n\tkey.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer\n\tmax.partition.fetch.bytes = 1048576\n\tmax.poll.interval.ms = 300000\n\tmax.poll.records = 500\n\tmetadata.max.age.ms = 10000\n\tmetric.reporters = []\n\tmetrics.num.samples = 2\n\tmetrics.recording.level = INFO\n\tmetrics.sample.window.ms = 30000\n\tpartition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]\n\treceive.buffer.bytes = 65536\n\treconnect.backoff.max.ms = 1000\n\treconnect.backoff.ms = 50\n\trequest.timeout.ms = 30000\n\tretry.backoff.ms = 100\n\tsasl.client.callback.handler.class = null\n\tsasl.jaas.config = null\n\tsasl.kerberos.kinit.cmd = /usr/bin/kinit\n\tsasl.kerberos.min.time.before.relogin = 60000\n\tsasl.kerberos.service.name = null\n\tsasl.kerberos.ticket.renew.jitter = 0.05\n\tsasl.kerberos.ticket.renew.window.factor = 0.8\n\tsasl.login.callback.handler.class = null\n\tsasl.login.class = null\n\tsasl.login.refresh.buffer.seconds = 300\n\tsasl.login.refresh.min.period.seconds = 60\n\tsasl.login.refresh.window.factor = 0.8\n\tsasl.login.refresh.window.jitter = 0.05\n\tsasl.mechanism = GSSAPI\n\tsecurity.protocol = PLAINTEXT\n\tsecurity.providers = null\n\tsend.buffer.bytes = 131072\n\tsession.timeout.ms = 10000\n\tssl.cipher.suites = null\n\tssl.enabled.protocols = [TLSv1.2]\n\tssl.endpoint.identification.algorithm = https\n\tssl.engine.factory.class = null\n\tssl.key.password = null\n\tssl.keymanager.algorithm = SunX509\n\tssl.keystore.location = null\n\tssl.keystore.password = null\n\tssl.keystore.type = JKS\n\tssl.protocol = TLSv1.2\n\tssl.provider = null\n\tssl.secure.random.implementation = null\n\tssl.trustmanager.algorithm = PKIX\n\tssl.truststore.location = null\n\tssl.truststore.password = null\n\tssl.truststore.type = JKS\n\tvalue.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer\n\n\n\n\n\n\n\n\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.\n\n\n\nKey changed/added classes in this PR\n\nKafkaConsumerConfigs", "createdAt": "2020-11-03T09:40:32Z", "url": "https://github.com/apache/druid/pull/10551", "merged": true, "mergeCommit": {"oid": "229b5f359f3ae2c1dec641c7c62bef8458ef81ff"}, "closed": true, "closedAt": "2020-12-04T01:38:00Z", "author": {"login": "zhangyue19921010"}, "timelineItems": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY1N2jgH2gAyNTE0NjA3ODY0OjVlMWU2OTY0YTZhYmFjODFlZTZjYjA4ODg0MTViZmY2NTkzYWRkNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdijz7-AH2gAyNTE0NjA3ODY0OjMwNTU5NzgwNzRiY2U4ZmE5NjBkNTVkMzU2NWUyN2U5ZWJjOWI2NWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5e1e6964a6abac81ee6cb0888415bff6593add5d", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/5e1e6964a6abac81ee6cb0888415bff6593add5d", "committedDate": "2020-11-03T08:51:31Z", "message": "remove build in kafka consumer config :"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac6dd037a910461462ee9c1e9994176c4c7aab4c", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/ac6dd037a910461462ee9c1e9994176c4c7aab4c", "committedDate": "2020-11-03T09:03:30Z", "message": "modify druid docs of kafka indexing service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDIzMzc1", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-525023375", "createdAt": "2020-11-06T10:19:28Z", "commit": {"oid": "ac6dd037a910461462ee9c1e9994176c4c7aab4c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxOToyOFrOHuoLFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxOToyOFrOHuoLFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NDc0MQ==", "bodyText": "I think to remove isolation.level here and leaves the configuration to users changes the current behavior.\nCurrently users care nothing about this kafka configuration when using a higher version of kafka such as 0.11. By removing it, they need to set this property in supervisor spec,  or the default value, which is read_uncommitted, will be applied, which may be not what they expect.\nIf this is the root cause that limits the Druid to use Kafka lower than 0.11, I think maybe we can introduce another property, as the same way as pollTimeout property does, then we can unset isolation.level property according to the value of this new property. Only those who want to use Druid with older kafka  need to set this new property.", "url": "https://github.com/apache/druid/pull/10551#discussion_r518654741", "createdAt": "2020-11-06T10:19:28Z", "author": {"login": "FrankChen021"}, "path": "extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/KafkaConsumerConfigs.java", "diffHunk": "@@ -38,7 +38,6 @@\n     props.put(\"group.id\", StringUtils.format(\"kafka-supervisor-%s\", IdUtils.getRandomId()));\n     props.put(\"auto.offset.reset\", \"none\");\n     props.put(\"enable.auto.commit\", \"false\");\n-    props.put(\"isolation.level\", \"read_committed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac6dd037a910461462ee9c1e9994176c4c7aab4c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a2fddbce4d75930f6e36dd64baca7d8bca48365", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/1a2fddbce4d75930f6e36dd64baca7d8bca48365", "committedDate": "2020-11-09T02:36:43Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDQzNDUy", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-528043452", "createdAt": "2020-11-11T10:22:44Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDoyMjo0NFrOHxHFYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDoyMjo0NFrOHxHFYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1ODMzNg==", "bodyText": "Putting this property in KafkaIndexTaskIOConfig.consumerProperties might cause some confusion. consumerProperties is designed to store kafka official properties. It's better to put the new property in KafkaIndexTaskIOConfig directly and put the code related to this property in KafkaRecordSupplier.addConsumerPropertiesFromConfig", "url": "https://github.com/apache/druid/pull/10551#discussion_r521258336", "createdAt": "2020-11-11T10:22:44Z", "author": {"login": "FrankChen021"}, "path": "extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/KafkaConsumerConfigs.java", "diffHunk": "@@ -30,15 +30,23 @@\n  */\n public class KafkaConsumerConfigs\n {\n-\n-  public static Map<String, Object> getConsumerProperties()\n+  public static Map<String, Object> getConsumerProperties(Map<String, Object> customerConsumerProperties)\n   {\n+    final Object value = customerConsumerProperties.remove(\"consumeTransactionally\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b7b6f8a4acfbf95fd5e487ca95a052b09146dfc", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/2b7b6f8a4acfbf95fd5e487ca95a052b09146dfc", "committedDate": "2020-11-12T03:08:40Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "885985a3a7d8494725e3a69f2b995df392a8214d", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/885985a3a7d8494725e3a69f2b995df392a8214d", "committedDate": "2020-11-12T03:40:50Z", "message": "yuezhang"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "885985a3a7d8494725e3a69f2b995df392a8214d", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/885985a3a7d8494725e3a69f2b995df392a8214d", "committedDate": "2020-11-12T03:40:50Z", "message": "yuezhang"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b4d4d86ff3833058c2609b2f767e6facf1480e0", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/1b4d4d86ff3833058c2609b2f767e6facf1480e0", "committedDate": "2020-11-12T05:01:02Z", "message": "modify doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNDQ2NTU4", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-531446558", "createdAt": "2020-11-16T15:45:17Z", "commit": {"oid": "1b4d4d86ff3833058c2609b2f767e6facf1480e0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTEzODM1", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-532113835", "createdAt": "2020-11-17T08:16:49Z", "commit": {"oid": "1b4d4d86ff3833058c2609b2f767e6facf1480e0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoxNjo0OVrOH0pD-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoxNjo0OVrOH0pD-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2MDc2Mg==", "bodyText": "At the beginning of this doc, there's paragraph that describes the version of kafka that are supported. Since this PR\nprovides a way to support those kafka clusters lower than 0.11, we should also make some changes to the doc\n\nThe Kafka indexing service supports transactional topics which were introduced in Kafka 0.11.x. These changes make the\nKafka consumer that Druid uses incompatible with older brokers. Ensure that your Kafka brokers are version 0.11.x or\t> Kafka consumer that Druid uses incompatible with older brokers. Ensure that your Kafka brokers are version 0.11.x or\nbetter before using this functionality. Refer Kafka upgrade guide\t> better before using this functionality. Refer Kafka upgrade guide\nif you are using older version of Kafka brokers.\t> if you are using older version of Kafka brokers.", "url": "https://github.com/apache/druid/pull/10551#discussion_r524960762", "createdAt": "2020-11-17T08:16:49Z", "author": {"login": "FrankChen021"}, "path": "docs/development/extensions-core/kafka-ingestion.md", "diffHunk": "@@ -144,6 +144,7 @@ A sample supervisor spec is shown below:\n |`lateMessageRejectionStartDateTime`|ISO8601 DateTime|Configure tasks to reject messages with timestamps earlier than this date time; for example if this is set to `2016-01-01T11:00Z` and the supervisor creates a task at *2016-01-01T12:00Z*, messages with timestamps earlier than *2016-01-01T11:00Z* will be dropped. This may help prevent concurrency issues if your data stream has late messages and you have multiple pipelines that need to operate on the same segments (e.g. a realtime and a nightly batch ingestion pipeline).|no (default == none)|\n |`lateMessageRejectionPeriod`|ISO8601 Period|Configure tasks to reject messages with timestamps earlier than this period before the task was created; for example if this is set to `PT1H` and the supervisor creates a task at *2016-01-01T12:00Z*, messages with timestamps earlier than *2016-01-01T11:00Z* will be dropped. This may help prevent concurrency issues if your data stream has late messages and you have multiple pipelines that need to operate on the same segments (e.g. a realtime and a nightly batch ingestion pipeline). Please note that only one of `lateMessageRejectionPeriod` or `lateMessageRejectionStartDateTime` can be specified.|no (default == none)|\n |`earlyMessageRejectionPeriod`|ISO8601 Period|Configure tasks to reject messages with timestamps later than this period after the task reached its taskDuration; for example if this is set to `PT1H`, the taskDuration is set to `PT1H` and the supervisor creates a task at *2016-01-01T12:00Z*, messages with timestamps later than *2016-01-01T14:00Z* will be dropped. **Note:** Tasks sometimes run past their task duration, for example, in cases of supervisor failover. Setting earlyMessageRejectionPeriod too low may cause messages to be dropped unexpectedly whenever a task runs past its originally configured task duration.|no (default == none)|\n+|`consumeTransactionally`|Boolean|Set `consumeTransactionally` false here can disable druid to consume Kafka in a transactional way. And druid could consume lower version of Kafka now, such as 0.10.2.1 |no (default == true)|\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b4d4d86ff3833058c2609b2f767e6facf1480e0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b37c2bc09d657e9825b90bc73fc8c2a9c8c97d0", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/7b37c2bc09d657e9825b90bc73fc8c2a9c8c97d0", "committedDate": "2020-11-17T08:36:08Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99e9b028d52622418974e4275c58c56e65c92c2c", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/99e9b028d52622418974e4275c58c56e65c92c2c", "committedDate": "2020-11-17T09:16:45Z", "message": "modify docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "808056c8163e7a03aedf227b4eb45fbb600f5589", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/808056c8163e7a03aedf227b4eb45fbb600f5589", "committedDate": "2020-11-17T10:26:22Z", "message": "fix kafkaindexTaskTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ed2ef72b460e215d7ce710aac829e5e97e87a9c", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/8ed2ef72b460e215d7ce710aac829e5e97e87a9c", "committedDate": "2020-11-18T02:05:56Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDMxNjM2", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-534031636", "createdAt": "2020-11-19T02:23:15Z", "commit": {"oid": "8ed2ef72b460e215d7ce710aac829e5e97e87a9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMzoxNVrOH2KDCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMzoxNVrOH2KDCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0OTc2OA==", "bodyText": "please revert this unnecessary change", "url": "https://github.com/apache/druid/pull/10551#discussion_r526549768", "createdAt": "2020-11-19T02:23:15Z", "author": {"login": "FrankChen021"}, "path": "extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/KafkaRecordSupplier.java", "diffHunk": "@@ -37,6 +37,7 @@\n import org.apache.kafka.common.serialization.Deserializer;\n \n import javax.annotation.Nonnull;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed2ef72b460e215d7ce710aac829e5e97e87a9c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDMxOTE2", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-534031916", "createdAt": "2020-11-19T02:23:58Z", "commit": {"oid": "8ed2ef72b460e215d7ce710aac829e5e97e87a9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMzo1OFrOH2KD9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyMzo1OFrOH2KD9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU1MDAwNw==", "bodyText": "please revert this unnecessary change", "url": "https://github.com/apache/druid/pull/10551#discussion_r526550007", "createdAt": "2020-11-19T02:23:58Z", "author": {"login": "FrankChen021"}, "path": "extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java", "diffHunk": "@@ -2445,7 +2446,9 @@ public void testCheckpointForInactiveTaskGroup()\n     final TaskLocation location2 = new TaskLocation(\"testHost2\", 145, -1);\n     Collection workItems = new ArrayList<>();\n     workItems.add(new TestTaskRunnerWorkItem(id1, null, location1));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed2ef72b460e215d7ce710aac829e5e97e87a9c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDMxOTM5", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-534031939", "createdAt": "2020-11-19T02:24:01Z", "commit": {"oid": "8ed2ef72b460e215d7ce710aac829e5e97e87a9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyNDowMVrOH2KECg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMjoyNDowMVrOH2KECg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU1MDAyNg==", "bodyText": "please revert this unnecessary change", "url": "https://github.com/apache/druid/pull/10551#discussion_r526550026", "createdAt": "2020-11-19T02:24:01Z", "author": {"login": "FrankChen021"}, "path": "extensions-core/kafka-indexing-service/src/test/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorTest.java", "diffHunk": "@@ -2445,7 +2446,9 @@ public void testCheckpointForInactiveTaskGroup()\n     final TaskLocation location2 = new TaskLocation(\"testHost2\", 145, -1);\n     Collection workItems = new ArrayList<>();\n     workItems.add(new TestTaskRunnerWorkItem(id1, null, location1));\n+\n     workItems.add(new TestTaskRunnerWorkItem(id2, null, location2));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ed2ef72b460e215d7ce710aac829e5e97e87a9c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108d7b62e688a3ada0a37c73936ac4258f744d35", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/108d7b62e688a3ada0a37c73936ac4258f744d35", "committedDate": "2020-11-19T02:32:34Z", "message": "revert uncessary change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40ddf14bdd912e6b24837101424ca350ec98c9f3", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/40ddf14bdd912e6b24837101424ca350ec98c9f3", "committedDate": "2020-11-19T02:33:42Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzA1MzE2", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-535305316", "createdAt": "2020-11-20T10:27:32Z", "commit": {"oid": "40ddf14bdd912e6b24837101424ca350ec98c9f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "827a43ac31b0498137260b10c0b10fd29496c9ed", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/827a43ac31b0498137260b10c0b10fd29496c9ed", "committedDate": "2020-11-23T05:42:14Z", "message": "add more logs and modify docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a057e6b5e67d5492e01f87d8c8ba72bcb656eaa2", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/a057e6b5e67d5492e01f87d8c8ba72bcb656eaa2", "committedDate": "2020-11-23T05:42:18Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44a68ca3713388265a8d9e6ec79fdc7dabbf7b9a", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/44a68ca3713388265a8d9e6ec79fdc7dabbf7b9a", "committedDate": "2020-11-23T05:43:16Z", "message": "revert jdk version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711f692705fb06389bfd38c20bd878eb07aee893", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/711f692705fb06389bfd38c20bd878eb07aee893", "committedDate": "2020-11-23T06:31:48Z", "message": "modify docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4e31af7243a74205a9ab1c6b70d78dcb694e0df", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/f4e31af7243a74205a9ab1c6b70d78dcb694e0df", "committedDate": "2020-12-01T05:43:20Z", "message": "modify-kafka-version v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ec54caac43322a7c96112cd6782654e2e9d2c0", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/48ec54caac43322a7c96112cd6782654e2e9d2c0", "committedDate": "2020-12-01T05:59:03Z", "message": "v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f411718ca40901e8e9b5aa3a346be7002e92fd6", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/5f411718ca40901e8e9b5aa3a346be7002e92fd6", "committedDate": "2020-12-01T06:47:54Z", "message": "modify docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57761199f7dac7b35d20ea6b3a07f4fd831b597d", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/57761199f7dac7b35d20ea6b3a07f4fd831b597d", "committedDate": "2020-12-01T09:47:19Z", "message": "modify docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "061cac5f4f8172a0558da0b162fc2babacff2290", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/061cac5f4f8172a0558da0b162fc2babacff2290", "committedDate": "2020-12-01T09:50:56Z", "message": "modify docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8201b0b2ca8b74d2a209186708a9b55aa5cfcc57", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/8201b0b2ca8b74d2a209186708a9b55aa5cfcc57", "committedDate": "2020-12-01T13:08:20Z", "message": "modify docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b4d409de14cb83305e5d94e87751542256aa12", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/69b4d409de14cb83305e5d94e87751542256aa12", "committedDate": "2020-12-01T13:21:59Z", "message": "modify docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDIyMzQ4", "url": "https://github.com/apache/druid/pull/10551#pullrequestreview-542422348", "createdAt": "2020-12-02T01:07:53Z", "commit": {"oid": "8201b0b2ca8b74d2a209186708a9b55aa5cfcc57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMTowNzo1M1rOH9GPig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMTowNzo1M1rOH9GPig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyNzQ2Ng==", "bodyText": "it would likely be simpler to leave this alone, remove the line props.put(\"isolation.level\".. altogether\nand put something like  props.put(\"isolation.level\", customerConsumerProperties.getOrDefault(\"isolation.level\", \"read_committed\"));  right after https://github.com/apache/druid/blob/master/extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/supervisor/KafkaSupervisorIOConfig.java#L78", "url": "https://github.com/apache/druid/pull/10551#discussion_r533827466", "createdAt": "2020-12-02T01:07:53Z", "author": {"login": "himanshug"}, "path": "extensions-core/kafka-indexing-service/src/main/java/org/apache/druid/indexing/kafka/KafkaConsumerConfigs.java", "diffHunk": "@@ -31,14 +31,14 @@\n public class KafkaConsumerConfigs\n {\n \n-  public static Map<String, Object> getConsumerProperties()\n+  public static Map<String, Object> getConsumerProperties(Map<String, Object> customerConsumerProperties)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8201b0b2ca8b74d2a209186708a9b55aa5cfcc57"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc59d8bbe0175faa269a4bdc06a24f13f6dd220c", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/cc59d8bbe0175faa269a4bdc06a24f13f6dd220c", "committedDate": "2020-12-03T04:45:02Z", "message": "done"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "765ebbb566f747f34bb05cca5446a62a759e5aee", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/765ebbb566f747f34bb05cca5446a62a759e5aee", "committedDate": "2020-12-03T04:46:40Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8197b13bd2e66770297f0e6616073973cc9e9abc", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/8197b13bd2e66770297f0e6616073973cc9e9abc", "committedDate": "2020-12-03T04:48:25Z", "message": "remove useless import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a457d59c202e1a446ddbc53f198849d47cf59fb", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/2a457d59c202e1a446ddbc53f198849d47cf59fb", "committedDate": "2020-12-03T14:09:32Z", "message": "change code and add UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da8df86dade125fdd369800e6e4ce787fd558b5c", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/da8df86dade125fdd369800e6e4ce787fd558b5c", "committedDate": "2020-12-03T14:13:46Z", "message": "Merge branch 'master' into modify-kafka-Version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3055978074bce8fa960d55d3565e27e9ebc9b65e", "author": {"user": null}, "url": "https://github.com/apache/druid/commit/3055978074bce8fa960d55d3565e27e9ebc9b65e", "committedDate": "2020-12-03T14:14:04Z", "message": "Merge branch 'modify-kafka-Version' of https://github.com/zhangyue19921010/druid into modify-kafka-Version"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3434, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}