{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzA2NzIz", "number": 9594, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjowNTowNFrODuIr3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjoyNzo1NVrODuJD1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzAzMzg4OnYy", "diffSide": "RIGHT", "path": "examples/bin/dsql-main", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjowNTowNFrOF_-Jhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjowNTowNFrOF_-Jhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMjg1NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/druid/pull/9594#discussion_r402622855", "createdAt": "2020-04-02T22:05:04Z", "author": {"login": "jihoonson"}, "path": "examples/bin/dsql-main", "diffHunk": "@@ -400,7 +400,7 @@ def main():\n   parser_fmt.add_argument('--format', type=str, default='table', choices=('csv', 'tsv', 'json', 'table'), help='Result format')\n   parser_fmt.add_argument('--header', action='store_true', help='Include header row for formats \"csv\" and \"tsv\"')\n   parser_fmt.add_argument('--tsv-delimiter', type=str, default='\\t', help='Delimiter for format \"tsv\"')\n-  parser_oth.add_argument('--context-option', '-c', type=str, action='append', help='Set context option for this connection, see https://docs.imply.io/on-prem/query-data/sql for options')\n+  parser_oth.add_argument('--context-option', '-c', type=str, action='append', help='Set context option for this connection, see https://druid.apache.org/docs/latest/querying/sql.html#connection-context for options')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzA5NTI3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/druid/server/initialization/JettyTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjoyNzo1NVrOF_-uog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjoyNzo1NVrOF_-uog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYzMjM1NA==", "bodyText": "Maybe there is some better way for waiting here rather than sleeping.. Maybe we can do like\nwhile (jsm.getActiveConnections() == 0) {\n  Thread.sleep(100);\n}\nAssert.assertEquals(1, jsm.getActiveConnections());\ngo.get();", "url": "https://github.com/apache/druid/pull/9594#discussion_r402632354", "createdAt": "2020-04-02T22:27:55Z", "author": {"login": "jihoonson"}, "path": "server/src/test/java/org/apache/druid/server/initialization/JettyTest.java", "diffHunk": "@@ -311,4 +430,69 @@ public void testGzipRequestDecompression() throws Exception\n         new InputStreamResponseHandler()\n     ).get()), Charset.defaultCharset()));\n   }\n+\n+  @Test\n+  public void testNumConnectionsMetricHttp() throws Exception\n+  {\n+    String text = \"hello\";\n+    ByteArrayOutputStream out = new ByteArrayOutputStream();\n+    try (GZIPOutputStream gzipOutputStream = new GZIPOutputStream(out)) {\n+      gzipOutputStream.write(text.getBytes(Charset.defaultCharset()));\n+    }\n+    Request request = new Request(HttpMethod.POST, new URL(\"http://localhost:\" + port + \"/slow/hello\"));\n+    request.setHeader(\"Content-Encoding\", \"gzip\");\n+    request.setContent(MediaType.TEXT_PLAIN, out.toByteArray());\n+\n+    JettyServerModule jsm = inj.getInstance(JettyServerModule.class);\n+    Assert.assertEquals(0, jsm.getActiveConnections());\n+    ListenableFuture<InputStream> go = client.go(\n+        request,\n+        new InputStreamResponseHandler()\n+    );\n+    // sad\n+    Thread.sleep(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "111cc1f61fbc3f51d0de1cc730f409b4c91a2a70"}, "originalPosition": 231}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2697, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}