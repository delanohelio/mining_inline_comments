{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNTEyODU5", "number": 10686, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzo0OToxOFrOFHp6ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzo1MDoyNVrOFHp7QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTcxMTMwOnYy", "diffSide": "RIGHT", "path": "docs/development/extensions-core/kubernetes.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzo0OToxOFrOIJLc4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowNjowNVrOIL90_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTcxNQ==", "bodyText": "Just curious. Which kind of druid server needs these add labels to self-pod, List and Watch other Pods, create ConfigMap permissions? MiddleManager or all the druid servers.", "url": "https://github.com/apache/druid/pull/10686#discussion_r546495715", "createdAt": "2020-12-21T03:49:18Z", "author": {"login": "zhangyue19921010"}, "path": "docs/development/extensions-core/kubernetes.md", "diffHunk": "@@ -57,3 +55,34 @@ Additionally, this extension has following configuration.\n |`druid.discovery.k8s.renewDeadline`|`Duration`|Lease renewal period used by Leader.|PT17S|No|\n |`druid.discovery.k8s.retryPeriod`|`Duration`|Retry wait used by Leader Election algorithm on failed operations.|PT5S|No|\n \n+### Gotchas\n+\n+- Label/Annotation path in each pod spec MUST EXIST, which is easily satisfied if there is at least one label/annotation in the pod spec already. This limitation may be removed in future.\n+- Druid Pods need permissions to be able to add labels to self-pod, List and Watch other Pods, create ConfigMap for leader election. Assuming, \"default\" service account is used by Druid pods, you might need to add following or something similar Kubernetes Role and Role Binding.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32277c770f322963553585fefea86ae59583d7c0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxODIzNg==", "bodyText": "everyone needs pod list/update .\ncreate/update ConfigMap is needed only by coordinators/overlords which participate in leader election ... but read ConfigMap is needed by all so as to know who the leader is. That said, I haven't tested such granularity and would just give same permission to all pods.", "url": "https://github.com/apache/druid/pull/10686#discussion_r549418236", "createdAt": "2020-12-28T17:06:05Z", "author": {"login": "himanshug"}, "path": "docs/development/extensions-core/kubernetes.md", "diffHunk": "@@ -57,3 +55,34 @@ Additionally, this extension has following configuration.\n |`druid.discovery.k8s.renewDeadline`|`Duration`|Lease renewal period used by Leader.|PT17S|No|\n |`druid.discovery.k8s.retryPeriod`|`Duration`|Retry wait used by Leader Election algorithm on failed operations.|PT5S|No|\n \n+### Gotchas\n+\n+- Label/Annotation path in each pod spec MUST EXIST, which is easily satisfied if there is at least one label/annotation in the pod spec already. This limitation may be removed in future.\n+- Druid Pods need permissions to be able to add labels to self-pod, List and Watch other Pods, create ConfigMap for leader election. Assuming, \"default\" service account is used by Druid pods, you might need to add following or something similar Kubernetes Role and Role Binding.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTcxNQ=="}, "originalCommit": {"oid": "32277c770f322963553585fefea86ae59583d7c0"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTcxMTk1OnYy", "diffSide": "RIGHT", "path": "integration-tests/script/setup_druid_on_k8s.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzo0OTo0OVrOIJLdPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowNjoxMlrOIL91KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTgwNQ==", "bodyText": "nit: /usr/local/bin/kubectl could be replaced by $KUBECTL. The same as sudo /usr/local/bin/kubectl get svc", "url": "https://github.com/apache/druid/pull/10686#discussion_r546495805", "createdAt": "2020-12-21T03:49:49Z", "author": {"login": "zhangyue19921010"}, "path": "integration-tests/script/setup_druid_on_k8s.sh", "diffHunk": "@@ -0,0 +1,54 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -e\n+\n+export KUBECTL=\"sudo /usr/local/bin/kubectl\"\n+\n+# setup client keystore\n+cd integration-tests\n+./docker/tls/generate-client-certs-and-keystores.sh\n+rm -rf docker/client_tls\n+cp -r client_tls docker/client_tls\n+cd ..\n+\n+# Build Docker images for pods\n+mvn -B -ff -q dependency:go-offline \\\n+      install \\\n+      -Pdist,bundle-contrib-exts \\\n+      -Pskip-static-checks,skip-tests \\\n+      -Dmaven.javadoc.skip=true\n+\n+docker build -t druid/cluster:v1 -f distribution/docker/DockerfileBuildTarAdvanced .\n+\n+# This tmp dir is used for MiddleManager pod and Historical Pod to cache segments.\n+mkdir tmp\n+chmod 777 tmp\n+\n+$KUBECTL apply -f integration-tests/k8s/role-and-binding.yaml\n+sed -i \"s|REPLACE_VOLUMES|`pwd`|g\" integration-tests/k8s/tiny-cluster.yaml\n+$KUBECTL apply -f integration-tests/k8s/tiny-cluster.yaml\n+\n+# Wait 4 * 15 seconds to launch pods.\n+#count=0\n+#JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo /usr/local/bin/kubectl -n default get pods -lapp=travis-example -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do sleep 4;if [ $count -eq 15 ];then break 2 ;else let \"count++\";fi;echo $i;echo \"waiting for travis-example deployment to be available\"; sudo /usr/local/bin/kubectl get pods -n default; done\n+sleep 120\n+\n+## Debug And FastFail\n+\n+sudo /usr/local/bin/kubectl get pod", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32277c770f322963553585fefea86ae59583d7c0"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxODI4MA==", "bodyText": "changed", "url": "https://github.com/apache/druid/pull/10686#discussion_r549418280", "createdAt": "2020-12-28T17:06:12Z", "author": {"login": "himanshug"}, "path": "integration-tests/script/setup_druid_on_k8s.sh", "diffHunk": "@@ -0,0 +1,54 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -e\n+\n+export KUBECTL=\"sudo /usr/local/bin/kubectl\"\n+\n+# setup client keystore\n+cd integration-tests\n+./docker/tls/generate-client-certs-and-keystores.sh\n+rm -rf docker/client_tls\n+cp -r client_tls docker/client_tls\n+cd ..\n+\n+# Build Docker images for pods\n+mvn -B -ff -q dependency:go-offline \\\n+      install \\\n+      -Pdist,bundle-contrib-exts \\\n+      -Pskip-static-checks,skip-tests \\\n+      -Dmaven.javadoc.skip=true\n+\n+docker build -t druid/cluster:v1 -f distribution/docker/DockerfileBuildTarAdvanced .\n+\n+# This tmp dir is used for MiddleManager pod and Historical Pod to cache segments.\n+mkdir tmp\n+chmod 777 tmp\n+\n+$KUBECTL apply -f integration-tests/k8s/role-and-binding.yaml\n+sed -i \"s|REPLACE_VOLUMES|`pwd`|g\" integration-tests/k8s/tiny-cluster.yaml\n+$KUBECTL apply -f integration-tests/k8s/tiny-cluster.yaml\n+\n+# Wait 4 * 15 seconds to launch pods.\n+#count=0\n+#JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo /usr/local/bin/kubectl -n default get pods -lapp=travis-example -o jsonpath=\"$JSONPATH\" 2>&1 | grep -q \"Ready=True\"; do sleep 4;if [ $count -eq 15 ];then break 2 ;else let \"count++\";fi;echo $i;echo \"waiting for travis-example deployment to be available\"; sudo /usr/local/bin/kubectl get pods -n default; done\n+sleep 120\n+\n+## Debug And FastFail\n+\n+sudo /usr/local/bin/kubectl get pod", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTgwNQ=="}, "originalCommit": {"oid": "32277c770f322963553585fefea86ae59583d7c0"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTcxMjY1OnYy", "diffSide": "RIGHT", "path": "integration-tests/script/setup_k8s_cluster.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwMzo1MDoyNVrOIJLdow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowNjoxOVrOIL91Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTkwNw==", "bodyText": "nit: It seems that export KUBECTL=\"sudo /usr/local/bin/kubectl\" is never used in setup_k8s_cluster.sh . Maybe can be removed?", "url": "https://github.com/apache/druid/pull/10686#discussion_r546495907", "createdAt": "2020-12-21T03:50:25Z", "author": {"login": "zhangyue19921010"}, "path": "integration-tests/script/setup_k8s_cluster.sh", "diffHunk": "@@ -0,0 +1,35 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -e\n+\n+# Set Necessary ENV\n+export CHANGE_MINIKUBE_NONE_USER=true\n+export MINIKUBE_WANTUPDATENOTIFICATION=false\n+export MINIKUBE_WANTREPORTERRORPROMPT=false\n+export MINIKUBE_HOME=$HOME\n+export KUBECONFIG=$HOME/.kube/config\n+export KUBECTL=\"sudo /usr/local/bin/kubectl\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32277c770f322963553585fefea86ae59583d7c0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxODMzNQ==", "bodyText": "changed", "url": "https://github.com/apache/druid/pull/10686#discussion_r549418335", "createdAt": "2020-12-28T17:06:19Z", "author": {"login": "himanshug"}, "path": "integration-tests/script/setup_k8s_cluster.sh", "diffHunk": "@@ -0,0 +1,35 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -e\n+\n+# Set Necessary ENV\n+export CHANGE_MINIKUBE_NONE_USER=true\n+export MINIKUBE_WANTUPDATENOTIFICATION=false\n+export MINIKUBE_WANTREPORTERRORPROMPT=false\n+export MINIKUBE_HOME=$HOME\n+export KUBECONFIG=$HOME/.kube/config\n+export KUBECTL=\"sudo /usr/local/bin/kubectl\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ5NTkwNw=="}, "originalCommit": {"oid": "32277c770f322963553585fefea86ae59583d7c0"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2925, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}