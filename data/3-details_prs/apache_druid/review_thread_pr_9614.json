{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MzkwODI4", "number": 9614, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMToyNjoxMlrODumUCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzowMToxNFrODvVfmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTg4ODEwOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMToyNjoxMlrOGAqLLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjozNjo1MlrOGBgVEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NDE3NQ==", "bodyText": "The test class can extend NullHandlingTest instead.", "url": "https://github.com/apache/druid/pull/9614#discussion_r403344175", "createdAt": "2020-04-03T21:26:12Z", "author": {"login": "ccaominh"}, "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "diffHunk": "@@ -54,10 +56,20 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n \n public class DataSchemaTest\n {\n+\n+  private static final String VALID_DATASOURCE_CHARS_NAME = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\ \ud55c\uad6d \u4e2d\u56fd!\";\n+  private static final String VALID_DATASOURCE_CHARS_FOR_SERIALIZER = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\\\\\ \ud55c\uad6d \u4e2d\u56fd!\";\n+\n+  static {\n+    // testTransformSpec needs NullHandling initialized.\n+    NullHandling.initializeForTests();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8efeb715a31f556082faabe226a9b83a3d09df5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMTQ0Mg==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/9614#discussion_r404231442", "createdAt": "2020-04-06T16:36:52Z", "author": {"login": "suneet-s"}, "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "diffHunk": "@@ -54,10 +56,20 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n \n public class DataSchemaTest\n {\n+\n+  private static final String VALID_DATASOURCE_CHARS_NAME = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\ \ud55c\uad6d \u4e2d\u56fd!\";\n+  private static final String VALID_DATASOURCE_CHARS_FOR_SERIALIZER = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\\\\\ \ud55c\uad6d \u4e2d\u56fd!\";\n+\n+  static {\n+    // testTransformSpec needs NullHandling initialized.\n+    NullHandling.initializeForTests();\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NDE3NQ=="}, "originalCommit": {"oid": "f8efeb715a31f556082faabe226a9b83a3d09df5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTg5MTk4OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMToyNzo0NlrOGAqNkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNjozNzowN1rOGBgVnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NDc4Ng==", "bodyText": "Suggest adding a helper method that escapes VALID_DATASOURCE_CHARS_NAME. The helper method can be used here as well as in testSerializeWithInvalidDataSourceName()", "url": "https://github.com/apache/druid/pull/9614#discussion_r403344786", "createdAt": "2020-04-03T21:27:46Z", "author": {"login": "ccaominh"}, "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "diffHunk": "@@ -54,10 +56,20 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n \n public class DataSchemaTest\n {\n+\n+  private static final String VALID_DATASOURCE_CHARS_NAME = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\ \ud55c\uad6d \u4e2d\u56fd!\";\n+  private static final String VALID_DATASOURCE_CHARS_FOR_SERIALIZER = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\\\\\ \ud55c\uad6d \u4e2d\u56fd!\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8efeb715a31f556082faabe226a9b83a3d09df5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDIzMTU4MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/druid/pull/9614#discussion_r404231580", "createdAt": "2020-04-06T16:37:07Z", "author": {"login": "suneet-s"}, "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "diffHunk": "@@ -54,10 +56,20 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n \n public class DataSchemaTest\n {\n+\n+  private static final String VALID_DATASOURCE_CHARS_NAME = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\ \ud55c\uad6d \u4e2d\u56fd!\";\n+  private static final String VALID_DATASOURCE_CHARS_FOR_SERIALIZER = \"alpha123..*~!@#&%^&*()-+ \u0420\u043e\u0441\u0441\u0438\u044f\\\\\\\\ \ud55c\uad6d \u4e2d\u56fd!\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0NDc4Ng=="}, "originalCommit": {"oid": "f8efeb715a31f556082faabe226a9b83a3d09df5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTYxODE2OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzowMToxNFrOGBs_yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzowMToxNFrOGBs_yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQzODk4NA==", "bodyText": "nit: it's actually InitializedNullHandlingTest that you want, but the one you've extended also initializes null handling", "url": "https://github.com/apache/druid/pull/9614#discussion_r404438984", "createdAt": "2020-04-06T23:01:14Z", "author": {"login": "clintropolis"}, "path": "server/src/test/java/org/apache/druid/segment/indexing/DataSchemaTest.java", "diffHunk": "@@ -54,10 +57,14 @@\n import java.nio.charset.StandardCharsets;\n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.List;\n import java.util.Map;\n \n-public class DataSchemaTest\n+public class DataSchemaTest extends NullHandlingTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c918fb003a56d1b1c3bb48edee489bdf44a7c6b"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2712, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}