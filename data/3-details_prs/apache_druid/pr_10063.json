{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4ODQ2NDY2", "number": 10063, "title": "Fix HyperUniquesAggregatorFactory.estimateCardinality null handling to respect output type", "bodyText": "Make return type consistent for HyperUniquesAggregator and HyperUniquesVectorAggregator when no value found\nDescription\nThis bug was discovered by turning on vectorization. In HyperUniquesAggregator, when a column is empty, collector will be null and the get() method will returns null. In HyperUniquesVectorAggregator, when a column is empty, get() method will still returns a HyperLogLogCollector (from the call to HyperUniquesBufferAggregator.doGet(buf, position);). In HyperUniquesAggregatorFactory#estimateCardinality (called by HyperUniquesAggregatorFactory#finalizeComputation) we return integer 0 if input is null, while we return long/double value. otherwise. Hence, for the above mentioned case, the non-vectorize returns integer 0 while the vectorize returns long/double 0. The test failed since we are expecting integer 0.\nThis PR, make sure that for the case when the input to HyperUniquesAggregatorFactory#estimateCardinality is null, we still return 0 with the same value type as when it is not null.\nThis PR has:\n\n been self-reviewed.\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-06-23T22:04:37Z", "url": "https://github.com/apache/druid/pull/10063", "merged": true, "mergeCommit": {"oid": "f80c02da02351cbf5c430f293b6c20418321ef47"}, "closed": true, "closedAt": "2020-06-24T01:54:38Z", "author": {"login": "maytasm"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuMcMJgH2gAyNDM4ODQ2NDY2OmNjMWFmZjU4OTJmMWRiZDRhYTc1NzI3MjM3ZWI2OGM5MjE3YTllOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuO394AFqTQzNjI0NTg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cc1aff5892f1dbd4aa75727237eb68c9217a9e8a", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/cc1aff5892f1dbd4aa75727237eb68c9217a9e8a", "committedDate": "2020-06-23T21:36:15Z", "message": "fix return type from HyperUniquesAggregator/HyperUniquesVectorAggregator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MTkyOTk5", "url": "https://github.com/apache/druid/pull/10063#pullrequestreview-436192999", "createdAt": "2020-06-23T22:08:25Z", "commit": {"oid": "cc1aff5892f1dbd4aa75727237eb68c9217a9e8a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMjowODoyNVrOGn8U_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMjowODoyNVrOGn8U_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUzNjA2Mw==", "bodyText": "Just to see if anything else fail. Will make this change in a separate PR with relevant doc change", "url": "https://github.com/apache/druid/pull/10063#discussion_r444536063", "createdAt": "2020-06-23T22:08:25Z", "author": {"login": "maytasm"}, "path": "processing/src/main/java/org/apache/druid/query/QueryContexts.java", "diffHunk": "@@ -59,7 +59,7 @@\n   public static final boolean DEFAULT_USE_CACHE = true;\n   public static final boolean DEFAULT_POPULATE_RESULTLEVEL_CACHE = true;\n   public static final boolean DEFAULT_USE_RESULTLEVEL_CACHE = true;\n-  public static final Vectorize DEFAULT_VECTORIZE = Vectorize.FALSE;\n+  public static final Vectorize DEFAULT_VECTORIZE = Vectorize.TRUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc1aff5892f1dbd4aa75727237eb68c9217a9e8a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3f16f29e16ec08a18cdc4905ca2b80ccd14d1a8", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/f3f16f29e16ec08a18cdc4905ca2b80ccd14d1a8", "committedDate": "2020-06-23T23:20:00Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5792453f24ff427e006ee76d19e38aecebd3e19", "author": {"user": {"login": "maytasm", "name": "Maytas Monsereenusorn"}}, "url": "https://github.com/apache/druid/commit/e5792453f24ff427e006ee76d19e38aecebd3e19", "committedDate": "2020-06-23T23:21:36Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MjM0NDA5", "url": "https://github.com/apache/druid/pull/10063#pullrequestreview-436234409", "createdAt": "2020-06-23T23:50:53Z", "commit": {"oid": "e5792453f24ff427e006ee76d19e38aecebd3e19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MjQ1ODY1", "url": "https://github.com/apache/druid/pull/10063#pullrequestreview-436245865", "createdAt": "2020-06-24T00:26:24Z", "commit": {"oid": "e5792453f24ff427e006ee76d19e38aecebd3e19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2141, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}