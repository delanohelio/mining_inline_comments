{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODc4MzY5", "number": 9337, "title": "Fix timestamp extract fn to match postgreSQL", "bodyText": "Update the timestamp extract function so that it matches the PostgreSQL docs.\nExamples from the PostgreSQL docs were added as tests for DECADE, CENTURY\nand MILLENIUM extraction.\nThere were bugs in CENTURY and MILLENIUM that were spotted because of intelliJ\ninspections - 'Integer division in floating point context'\nThis PR has:\n\n been self-reviewed.\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths.", "createdAt": "2020-02-09T21:53:09Z", "url": "https://github.com/apache/druid/pull/9337", "merged": true, "mergeCommit": {"oid": "b1f38131af0e37d4b4b9f59e51a96e38b81ce45a"}, "closed": true, "closedAt": "2020-02-12T23:39:20Z", "author": {"login": "suneet-s"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCuBJagH2gAyMzcyODc4MzY5OjIyMTYyNjE2YjU4YzUzOWMwMTY3ZDExMDU1ODM1NTg1MjQyNjQzNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDvFNagFqTM1Nzg2NjUwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22162616b58c539c0167d110558355852426435d", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/22162616b58c539c0167d110558355852426435d", "committedDate": "2020-02-09T19:50:49Z", "message": "Fix timestamp extract fn to match postgres\n\nUpdate the timestamp extract function so that it matches the PostgreSQL docs.\nExamples from the PostgreSQL docs were added as tests for DECADE, CENTURY\nand MILLENIUM extraction.\n\nThere were bugs in CENTURY and MILLENIUM that were spotted because of intelliJ\ninspections - 'Integer division in floating point context'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/b3694222e8bcd160d7b8652227b8de43af9e982c", "committedDate": "2020-02-09T22:38:59Z", "message": "Update CalciteQueryTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NjQwMDkx", "url": "https://github.com/apache/druid/pull/9337#pullrequestreview-355640091", "createdAt": "2020-02-09T22:45:25Z", "commit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMjo0NToyNVrOFnXcgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMjo0NToyNVrOFnXcgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMjkxMg==", "bodyText": "I thought about making this an error in our inspection profile, but CachingCostBalancerStrategy does this, and I'm afraid to make a change in that class given the potential implications around the balancer strategy. I'm un-aware of a way to simulate what impact changing that division would have, so I decided to leave it as is.", "url": "https://github.com/apache/druid/pull/9337#discussion_r376822912", "createdAt": "2020-02-09T22:45:25Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/query/expression/TimestampExtractExprMacro.java", "diffHunk": "@@ -141,13 +141,13 @@ public ExprEval eval(final ObjectBinding bindings)\n             return ExprEval.of(dateTime.year().get());\n           case DECADE:\n             // The year field divided by 10, See https://www.postgresql.org/docs/10/functions-datetime.html\n-            return ExprEval.of(Math.floor(dateTime.year().get() / 10));\n+            return ExprEval.of(dateTime.year().get() / 10);\n           case CENTURY:\n-            return ExprEval.of(dateTime.centuryOfEra().get() + 1);\n+            return ExprEval.of(Math.ceil((double) dateTime.year().get() / 100));\n           case MILLENNIUM:\n             // Years in the 1900s are in the second millennium. The third millennium started January 1, 2001.\n             // See https://www.postgresql.org/docs/10/functions-datetime.html\n-            return ExprEval.of(Math.round(Math.ceil(dateTime.year().get() / 1000)));\n+            return ExprEval.of(Math.round(Math.ceil((double) dateTime.year().get() / 1000)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NjQwMTg1", "url": "https://github.com/apache/druid/pull/9337#pullrequestreview-355640185", "createdAt": "2020-02-09T22:46:29Z", "commit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMjo0NjozMFrOFnXc3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQyMjo0NjozMFrOFnXc3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMzAwNA==", "bodyText": "These values come from BaseCalciteQueryTest#TIMESERIES_CONTEXT_DEFAULT which is 2000-01-01T00:00:00Z", "url": "https://github.com/apache/druid/pull/9337#discussion_r376823004", "createdAt": "2020-02-09T22:46:30Z", "author": {"login": "suneet-s"}, "path": "sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java", "diffHunk": "@@ -7730,7 +7730,7 @@ public void testFilterOnTimeExtractWithVariousTimeUnits() throws Exception\n           + \"AND EXTRACT(ISODOW FROM __time) = 6\\n\"\n           + \"AND EXTRACT(ISOYEAR FROM __time) = 2000\\n\"\n           + \"AND EXTRACT(DECADE FROM __time) = 200\\n\"\n-          + \"AND EXTRACT(CENTURY FROM __time) = 21\\n\"\n+          + \"AND EXTRACT(CENTURY FROM __time) = 20\\n\"\n           + \"AND EXTRACT(MILLENNIUM FROM __time) = 2\\n\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTExMTEy", "url": "https://github.com/apache/druid/pull/9337#pullrequestreview-356911112", "createdAt": "2020-02-11T18:57:51Z", "commit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxODo1Nzo1MlrOFoVHkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxODo1Nzo1MlrOFoVHkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzMzM2MA==", "bodyText": "You don't need Math.round if the result is already Math.ceil since Math.ceil returns int", "url": "https://github.com/apache/druid/pull/9337#discussion_r377833360", "createdAt": "2020-02-11T18:57:52Z", "author": {"login": "maytasm"}, "path": "processing/src/main/java/org/apache/druid/query/expression/TimestampExtractExprMacro.java", "diffHunk": "@@ -141,13 +141,13 @@ public ExprEval eval(final ObjectBinding bindings)\n             return ExprEval.of(dateTime.year().get());\n           case DECADE:\n             // The year field divided by 10, See https://www.postgresql.org/docs/10/functions-datetime.html\n-            return ExprEval.of(Math.floor(dateTime.year().get() / 10));\n+            return ExprEval.of(dateTime.year().get() / 10);\n           case CENTURY:\n-            return ExprEval.of(dateTime.centuryOfEra().get() + 1);\n+            return ExprEval.of(Math.ceil((double) dateTime.year().get() / 100));\n           case MILLENNIUM:\n             // Years in the 1900s are in the second millennium. The third millennium started January 1, 2001.\n             // See https://www.postgresql.org/docs/10/functions-datetime.html\n-            return ExprEval.of(Math.round(Math.ceil(dateTime.year().get() / 1000)));\n+            return ExprEval.of(Math.round(Math.ceil((double) dateTime.year().get() / 1000)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTEzNzY4", "url": "https://github.com/apache/druid/pull/9337#pullrequestreview-356913768", "createdAt": "2020-02-11T19:01:37Z", "commit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTowMTozN1rOFoVPpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTowMTozN1rOFoVPpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzgzNTQzMQ==", "bodyText": "Not sure if you need to handle BC?\nCan you add tests?\ni.e.\n-- SELECT EXTRACT(CENTURY FROM DATE '0101-12-31 BC');\n-- SELECT EXTRACT(CENTURY FROM DATE '0100-12-31 BC');\n-- SELECT EXTRACT(MILLENNIUM FROM DATE '0001-12-31 BC');\n-- SELECT EXTRACT(DECADE FROM DATE '0002-12-31 BC');\n-- SELECT EXTRACT(DECADE FROM DATE '0011-01-01 BC');\n-- SELECT EXTRACT(DECADE FROM DATE '0012-12-31 BC');", "url": "https://github.com/apache/druid/pull/9337#discussion_r377835431", "createdAt": "2020-02-11T19:01:37Z", "author": {"login": "maytasm"}, "path": "processing/src/main/java/org/apache/druid/query/expression/TimestampExtractExprMacro.java", "diffHunk": "@@ -141,13 +141,13 @@ public ExprEval eval(final ObjectBinding bindings)\n             return ExprEval.of(dateTime.year().get());\n           case DECADE:\n             // The year field divided by 10, See https://www.postgresql.org/docs/10/functions-datetime.html\n-            return ExprEval.of(Math.floor(dateTime.year().get() / 10));\n+            return ExprEval.of(dateTime.year().get() / 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3694222e8bcd160d7b8652227b8de43af9e982c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df9c6c005e920ee34bb2154d3c36d7eeee054456", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/df9c6c005e920ee34bb2154d3c36d7eeee054456", "committedDate": "2020-02-11T19:26:35Z", "message": "Merge remote-tracking branch 'upstream/master' into timestamp_extract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c199771bec706496083c53531fbd28dbc54f4a7", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/9c199771bec706496083c53531fbd28dbc54f4a7", "committedDate": "2020-02-11T19:49:39Z", "message": "remove useless round"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "958cf9f40661c94373cf110a22010e37b452f75a", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/958cf9f40661c94373cf110a22010e37b452f75a", "committedDate": "2020-02-11T23:55:30Z", "message": "Merge remote-tracking branch 'upstream/master' into timestamp_extract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de128035f3a5c3319c08bf41f45f1b401eb65aba", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/de128035f3a5c3319c08bf41f45f1b401eb65aba", "committedDate": "2020-02-12T00:01:52Z", "message": "mark integer division as an error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce7186720616bda2ea9f08e2629aedbc85daee2", "author": {"user": {"login": "suneet-s", "name": "Suneet Saldanha"}}, "url": "https://github.com/apache/druid/commit/6ce7186720616bda2ea9f08e2629aedbc85daee2", "committedDate": "2020-02-12T16:26:17Z", "message": "Merge remote-tracking branch 'upstream/master' into timestamp_extract"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NzUxMjU0", "url": "https://github.com/apache/druid/pull/9337#pullrequestreview-357751254", "createdAt": "2020-02-12T20:06:21Z", "commit": {"oid": "6ce7186720616bda2ea9f08e2629aedbc85daee2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3ODY2NTA4", "url": "https://github.com/apache/druid/pull/9337#pullrequestreview-357866508", "createdAt": "2020-02-12T23:39:05Z", "commit": {"oid": "6ce7186720616bda2ea9f08e2629aedbc85daee2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2874, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}