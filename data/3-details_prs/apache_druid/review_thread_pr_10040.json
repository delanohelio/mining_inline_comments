{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTMyOTU5", "number": 10040, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozNToxNVrOEGfVVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozNToxNVrOEGfVVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjQwMjc5OnYy", "diffSide": "LEFT", "path": "sql/src/main/java/org/apache/druid/sql/avatica/DruidMeta.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozNToxNVrOGlUg6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDo1NTozNVrOGlXGKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NjYwMg==", "bodyText": "This looks like the right fix. Could you please make it to all of getSchemas, getTables, and getColumns? They have the same problem. It might be nice to create a private static helper function in this file to avoid all the boilerplate, too.", "url": "https://github.com/apache/druid/pull/10040#discussion_r441786602", "createdAt": "2020-06-17T19:35:15Z", "author": {"login": "gianm"}, "path": "sql/src/main/java/org/apache/druid/sql/avatica/DruidMeta.java", "diffHunk": "@@ -446,15 +446,16 @@ public MetaResultSet getColumns(\n     }\n \n     if (schemaPattern.s != null) {\n-      whereBuilder.add(\"COLUMNS.TABLE_SCHEMA LIKE \" + Calcites.escapeStringLiteral(schemaPattern.s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8b8dc39ccc2058dde0ea9dbdf7939a04c1e6933"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyODkwNg==", "bodyText": "Thanks for taking a look, @gianm . Pushed a commit to add the ESCAPE clause in the three methods along with tests.", "url": "https://github.com/apache/druid/pull/10040#discussion_r441828906", "createdAt": "2020-06-17T20:55:35Z", "author": {"login": "samarthjain"}, "path": "sql/src/main/java/org/apache/druid/sql/avatica/DruidMeta.java", "diffHunk": "@@ -446,15 +446,16 @@ public MetaResultSet getColumns(\n     }\n \n     if (schemaPattern.s != null) {\n-      whereBuilder.add(\"COLUMNS.TABLE_SCHEMA LIKE \" + Calcites.escapeStringLiteral(schemaPattern.s));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NjYwMg=="}, "originalCommit": {"oid": "b8b8dc39ccc2058dde0ea9dbdf7939a04c1e6933"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2335, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}