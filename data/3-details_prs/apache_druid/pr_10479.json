{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDI3Nzcz", "number": 10479, "title": "Fix compaction task slot computation in auto compaction", "bodyText": "Description\nThe auto compaction doesn't currently consider whether or not compaction tasks run in a parallel mode. This leads to an inaccurate task slot computation, so that the auto compaction use more or less task slots than configured.\n\nThis PR has:\n\n been self-reviewed.\n\n using the concurrency checklist (Remove this item if the PR doesn't have any relation to concurrency.)\n\n\n added documentation for new or modified features or behaviors.\n added Javadocs for most classes and all non-trivial methods. Linked related entities via Javadoc links.\n added or updated version, license, or notice information in licenses.yaml\n added comments explaining the \"why\" and the intent of the code wherever would not be obvious for an unfamiliar reader.\n added unit tests or modified existing tests to cover new code paths, ensuring the threshold for code coverage is met.\n added integration tests.\n been tested in a test Druid cluster.", "createdAt": "2020-10-05T18:10:16Z", "url": "https://github.com/apache/druid/pull/10479", "merged": true, "mergeCommit": {"oid": "e9e7d82714e48de48bcf3c159a8e2d04ab7dc35e"}, "closed": true, "closedAt": "2020-10-07T04:56:04Z", "author": {"login": "jihoonson"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPnxD1gH2gAyNDk4MDI3NzczOjYwYWM3ZTcxYjg4ODY3ZDgxZTRlNzYwMmZhZWI0YmYxZDg5NWJmMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdProAhgFqTUwMjQ2NzU3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/60ac7e71b88867d81e4e7602faeb4bf1d895bf19", "committedDate": "2020-10-05T18:05:59Z", "message": "Fix compaction task slot computation in auto compaction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzQ2MzQ3", "url": "https://github.com/apache/druid/pull/10479#pullrequestreview-502346347", "createdAt": "2020-10-05T19:15:01Z", "commit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToxNTowMVrOHcqUhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToxNTowMVrOHcqUhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxNTU1OQ==", "bodyText": "I might be missing something....but in a non parallel mode, wouldn't this still count as 2 instead of 1?", "url": "https://github.com/apache/druid/pull/10479#discussion_r499815559", "createdAt": "2020-10-05T19:15:01Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/duty/CompactSegments.java", "diffHunk": "@@ -277,7 +300,8 @@ private CoordinatorStats doRun(\n         );\n         LOG.infoSegments(segmentsToCompact, \"Compacting segments\");\n         // Count the compaction task itself + its sub tasks\n-        numSubmittedTasks += findNumMaxConcurrentSubTasks(config.getTuningConfig()) + 1;\n+        numSubmittedTasks++;\n+        numCompactionTasksAndSubtasks += findMaxNumTaskSlotsUsedByOneCompactionTask(config.getTuningConfig()) + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzQ3OTkx", "url": "https://github.com/apache/druid/pull/10479#pullrequestreview-502347991", "createdAt": "2020-10-05T19:17:32Z", "commit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToxNzozMlrOHcqZlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToxNzozMlrOHcqZlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxNjg1Mg==", "bodyText": "Why do we need both numSubmittedTasks and numCompactionTasksAndSubtasks?\nIf we are using numSubmittedTasks as the stats, then the stat will be different. Previously, it includes subtasks and now it doesn't. Maybe this should be documented? Otherwise you might see your stat for this changed drastically.", "url": "https://github.com/apache/druid/pull/10479#discussion_r499816852", "createdAt": "2020-10-05T19:17:32Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/duty/CompactSegments.java", "diffHunk": "@@ -277,7 +300,8 @@ private CoordinatorStats doRun(\n         );\n         LOG.infoSegments(segmentsToCompact, \"Compacting segments\");\n         // Count the compaction task itself + its sub tasks\n-        numSubmittedTasks += findNumMaxConcurrentSubTasks(config.getTuningConfig()) + 1;\n+        numSubmittedTasks++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzUwMTAw", "url": "https://github.com/apache/druid/pull/10479#pullrequestreview-502350100", "createdAt": "2020-10-05T19:20:51Z", "commit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToyMDo1MVrOHcqfoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToyMDo1MVrOHcqfoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxODQwMA==", "bodyText": "Is this duplicated from indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java?", "url": "https://github.com/apache/druid/pull/10479#discussion_r499818400", "createdAt": "2020-10-05T19:20:51Z", "author": {"login": "maytasm"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/duty/CompactSegments.java", "diffHunk": "@@ -180,24 +183,43 @@ public DruidCoordinatorRuntimeParams run(DruidCoordinatorRuntimeParams params)\n   }\n \n   /**\n-   * Each compaction task can run a parallel indexing task. When we count the number of current running\n-   * compaction tasks, we should count the sub tasks of the parallel indexing task as well. However, we currently\n-   * don't have a good way to get the number of current running sub tasks except poking each supervisor task,\n-   * which is complex to handle all kinds of failures. Here, we simply return {@code maxNumConcurrentSubTasks} instead\n-   * to estimate the number of sub tasks conservatively. This should be ok since it won't affect to the performance of\n-   * other ingestion types.\n+   * Returns the maximum number of task slots used by one compaction task at any time when the task is issued with\n+   * the given tuningConfig.\n    */\n-  private int findNumMaxConcurrentSubTasks(@Nullable ClientCompactionTaskQueryTuningConfig tuningConfig)\n+  @VisibleForTesting\n+  static int findMaxNumTaskSlotsUsedByOneCompactionTask(@Nullable ClientCompactionTaskQueryTuningConfig tuningConfig)\n   {\n-    if (tuningConfig != null && tuningConfig.getMaxNumConcurrentSubTasks() != null) {\n-      // The actual number of subtasks might be smaller than the configured max.\n-      // However, we use the max to simplify the estimation here.\n-      return tuningConfig.getMaxNumConcurrentSubTasks();\n+    if (isParallelMode(tuningConfig)) {\n+      @Nullable Integer maxNumConcurrentSubTasks = tuningConfig.getMaxNumConcurrentSubTasks();\n+      // Max number of task slots used in parallel mode = maxNumConcurrentSubTasks + 1 (supervisor task)\n+      return (maxNumConcurrentSubTasks == null ? 1 : maxNumConcurrentSubTasks) + 1;\n     } else {\n-      return 0;\n+      return 1;\n     }\n   }\n \n+  /**\n+   * Returns true if the compaction task can run in the parallel mode with the given tuningConfig.\n+   * This method should be synchronized with ParallelIndexSupervisorTask.isParallelMode(InputSource, ParallelIndexTuningConfig).\n+   */\n+  @VisibleForTesting\n+  static boolean isParallelMode(@Nullable ClientCompactionTaskQueryTuningConfig tuningConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzUwMzQy", "url": "https://github.com/apache/druid/pull/10479#pullrequestreview-502350342", "createdAt": "2020-10-05T19:21:13Z", "commit": {"oid": "60ac7e71b88867d81e4e7602faeb4bf1d895bf19"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f17f70c888387a4d8242a1d364344e381189aa76", "author": {"user": {"login": "jihoonson", "name": "Jihoon Son"}}, "url": "https://github.com/apache/druid/commit/f17f70c888387a4d8242a1d364344e381189aa76", "committedDate": "2020-10-05T22:26:44Z", "message": "add tests for task counting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDY3NTcy", "url": "https://github.com/apache/druid/pull/10479#pullrequestreview-502467572", "createdAt": "2020-10-05T22:35:43Z", "commit": {"oid": "f17f70c888387a4d8242a1d364344e381189aa76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3336, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}