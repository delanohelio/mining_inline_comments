{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODI3Nzkz", "number": 9877, "title": "Number based columns representing time in custom format cannot be used as timestamp column in Druid.", "bodyText": "Prior to this fix, if an integer column in parquet is storing dateint in format yyyyMMdd, it cannot be used as\ntimestamp column in Druid as the timestamp parser interprets it as a number storing UTC time\ninstead of treating it as a number representing time in yyyyMMdd format. Data formats like TSV or\nCSV don't suffer from this problem as the timestamp is passed in an as string\nwhich the timestamp parser is able to parse correctly.\nThis PR has:\n\n[X ] been self-reviewed.\n added unit tests or modified existing tests to cover new code paths.\n been tested in a test Druid cluster.", "createdAt": "2020-05-15T21:28:46Z", "url": "https://github.com/apache/druid/pull/9877", "merged": true, "mergeCommit": {"oid": "82e5b0573efffd6f87ce4aead6a05b0c1d7381c7"}, "closed": true, "closedAt": "2020-05-18T18:17:29Z", "author": {"login": "samarthjain"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcho4CyAH2gAyNDE4ODI3NzkzOmMwOTM3YzRmMmE3YzNhMDg5ZTQ4NzZkMzM4MjQ1ZjVlNTE3NTc3Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABciiWNIAFqTQxMzc0ODcyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c0937c4f2a7c3a089e4876d338245f5e51757767", "author": {"user": {"login": "samarthjain", "name": "Samarth Jain"}}, "url": "https://github.com/apache/druid/commit/c0937c4f2a7c3a089e4876d338245f5e51757767", "committedDate": "2020-05-15T21:23:00Z", "message": "Number based columns representing time in custom format cannot be used as timestamp column in Druid.\n\nPrior to this fix, if an integer column in parquet is storing dateint in format yyyyMMdd, it cannot be used as\ntimestamp column in Druid as the timestamp parser interprets it as a number storing UTC time\ninstead of treating it as a number representing time in yyyyMMdd format. Data formats like TSV or\nCSV don't suffer from this problem as the timestamp is passed in an as string\nwhich the timestamp parser is able to parse correctly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDM0MDc1", "url": "https://github.com/apache/druid/pull/9877#pullrequestreview-413034075", "createdAt": "2020-05-16T01:19:41Z", "commit": {"oid": "c0937c4f2a7c3a089e4876d338245f5e51757767"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMToxOTo0MVrOGWXRTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMToxOTo0MVrOGWXRTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEwMzExNg==", "bodyText": "isNumericFormat(format) does not need to be computed for each object. You can compute this outside the function that is applied per object (on line 125)", "url": "https://github.com/apache/druid/pull/9877#discussion_r426103116", "createdAt": "2020-05-16T01:19:41Z", "author": {"login": "suneet-s"}, "path": "core/src/main/java/org/apache/druid/java/util/common/parsers/TimestampParser.java", "diffHunk": "@@ -126,14 +126,24 @@\n     return o -> {\n       Preconditions.checkNotNull(o, \"null timestamp\");\n \n-      if (o instanceof Number) {\n+      if (o instanceof Number && isNumericFormat(format)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0937c4f2a7c3a089e4876d338245f5e51757767"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8194abbe982a3898927e1cb8bc078621bd891337", "author": {"user": {"login": "samarthjain", "name": "Samarth Jain"}}, "url": "https://github.com/apache/druid/commit/8194abbe982a3898927e1cb8bc078621bd891337", "committedDate": "2020-05-18T08:03:53Z", "message": "Evaluate isNumeric only once"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNzQ4NzI3", "url": "https://github.com/apache/druid/pull/9877#pullrequestreview-413748727", "createdAt": "2020-05-18T16:20:32Z", "commit": {"oid": "8194abbe982a3898927e1cb8bc078621bd891337"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2341, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}