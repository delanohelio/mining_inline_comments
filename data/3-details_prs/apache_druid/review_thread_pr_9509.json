{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTQ5NjY1", "number": 9509, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoyMDoyNVrODoj5gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjozNToxOVrODokCuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODU3NzkyOnYy", "diffSide": "RIGHT", "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoyMDoyNVrOF3LxJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoyMDoyNVrOF3LxJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwODgwNA==", "bodyText": "The number of partitions can be on the order of hundreds, would it make sense to avoid streams here for performance (I remember various issues in the past around stream perf)", "url": "https://github.com/apache/druid/pull/9509#discussion_r393408804", "createdAt": "2020-03-17T02:20:25Z", "author": {"login": "jon-wei"}, "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java", "diffHunk": "@@ -637,6 +688,25 @@ public void close()\n     this.closed = true;\n   }\n \n+  @VisibleForTesting\n+  public Map<String, Long> getPartitionTimeLag()\n+  {\n+    return partitionResources.entrySet()\n+                             .stream()\n+                             .collect(\n+                                 Collectors.toMap(k -> k.getKey().getPartitionId(), k -> k.getValue().getPartitionTimeLag())\n+                             );\n+  }\n+\n+  public Map<String, Long> getPartitionTimeLag(Map<String, String> currentOffsets)\n+  {\n+    return partitionResources.entrySet()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d116d5fee9a16a6bf02744102b8251f0cefbc1a"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODU4NTIzOnYy", "diffSide": "RIGHT", "path": "indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoyNTowMVrOF3L1Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoyNTowMVrOF3L1Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwOTg5MQ==", "bodyText": "'lag'of -> 'lag' of", "url": "https://github.com/apache/druid/pull/9509#discussion_r393409891", "createdAt": "2020-03-17T02:25:01Z", "author": {"login": "jon-wei"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/seekablestream/supervisor/SeekableStreamSupervisor.java", "diffHunk": "@@ -3158,18 +3167,35 @@ protected abstract void updateLatestSequenceFromStream(\n       Set<StreamPartition<PartitionIdType>> partitions\n   );\n \n+  /**\n+   * Gets 'lag' of currently processed offset behind latest offset as a measure of difference between offsets.\n+   */\n+  @Nullable\n+  protected abstract Map<PartitionIdType, Long> getPartitionRecordLag();\n+\n+  /**\n+   * Gets 'lag'of currently processed offset behind latest offset as a measure of the difference in time inserted.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d116d5fee9a16a6bf02744102b8251f0cefbc1a"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODYwMTU1OnYy", "diffSide": "RIGHT", "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjozNToxOVrOF3L_Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjozNToxOVrOF3L_Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxMjM5OQ==", "bodyText": "behing -> behind", "url": "https://github.com/apache/druid/pull/9509#discussion_r393412399", "createdAt": "2020-03-17T02:35:19Z", "author": {"login": "jon-wei"}, "path": "extensions-core/kinesis-indexing-service/src/main/java/org/apache/druid/indexing/kinesis/KinesisRecordSupplier.java", "diffHunk": "@@ -148,6 +149,53 @@ void stopBackgroundFetch()\n       stopRequested = true;\n     }\n \n+    long getPartitionTimeLag()\n+    {\n+      return currentLagMillis;\n+    }\n+\n+    long getPartitionTimeLag(String offset)\n+    {\n+      // if not started (fetching records in background), fetch lag ourself with a throw-away iterator\n+      if (!started) {\n+        try {\n+          final String iteratorType;\n+          final String offsetToUse;\n+          if (offset == null || KinesisSupervisor.NOT_SET.equals(offset)) {\n+            // this should probably check if will start processing earliest or latest rather than assuming earliest\n+            // if latest we could skip this because latest will not be behing latest so lag is 0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d116d5fee9a16a6bf02744102b8251f0cefbc1a"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2627, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}