{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMjQ3NDAy", "number": 10013, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTowMzoyN1rOEEbJ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTowMzoyN1rOEEbJ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDc0NjgzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTowMzoyN1rOGiCgUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo0ODo0M1rOGoCy3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NTgxMA==", "bodyText": "For consistency, should this have the same shape as Pair where lhs and rhs are just public fields?  (or should it look like this class?)", "url": "https://github.com/apache/druid/pull/10013#discussion_r438345810", "createdAt": "2020-06-10T19:03:27Z", "author": {"login": "clintropolis"}, "path": "core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.java.util.common;\n+\n+import com.google.common.base.Preconditions;\n+\n+public class NonnullPair<L, R> extends Pair<L, R>\n+{\n+  public NonnullPair(L lhs, R rhs)\n+  {\n+    super(Preconditions.checkNotNull(lhs, \"lhs\"), Preconditions.checkNotNull(rhs, \"rhs\"));\n+  }\n+\n+  public L left()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adb29652433e438947bfb1d8dcd4cb14d8c0ebd3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjAxMw==", "bodyText": "I think it would be better to encapsulate them in Pair in terms of OOP (maybe aesthetically better too), but I don't really have a strong preference here since both fields in Pair are final. Pair is already in use everywhere so I changed NonnullPair to be consistent.", "url": "https://github.com/apache/druid/pull/10013#discussion_r444642013", "createdAt": "2020-06-24T04:48:43Z", "author": {"login": "jihoonson"}, "path": "core/src/main/java/org/apache/druid/java/util/common/NonnullPair.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.java.util.common;\n+\n+import com.google.common.base.Preconditions;\n+\n+public class NonnullPair<L, R> extends Pair<L, R>\n+{\n+  public NonnullPair(L lhs, R rhs)\n+  {\n+    super(Preconditions.checkNotNull(lhs, \"lhs\"), Preconditions.checkNotNull(rhs, \"rhs\"));\n+  }\n+\n+  public L left()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM0NTgxMA=="}, "originalCommit": {"oid": "adb29652433e438947bfb1d8dcd4cb14d8c0ebd3"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2312, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}