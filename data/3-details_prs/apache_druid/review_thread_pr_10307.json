{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxODE2MjM3", "number": 10307, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzoyMToxOFrOEbO7SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxODowOToyM1rOEbPJAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTkxNTYwOnYy", "diffSide": "RIGHT", "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzoyMToxOFrOHFGgrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDo0Mzo0OVrOHF1kNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMTU5OQ==", "bodyText": "should this rather stay inside AbstractBatchIndexTask so that concrete Task classes remain unaware of each other?", "url": "https://github.com/apache/druid/pull/10307#discussion_r475111599", "createdAt": "2020-08-22T17:21:18Z", "author": {"login": "abhishekagarwal87"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java", "diffHunk": "@@ -764,7 +765,28 @@ private PartitionBoundaries determineRangePartition(Collection<StringDistributio\n     return Pair.of(start, stop);\n   }\n \n-  private static void publishSegments(TaskToolbox toolbox, Map<String, PushedSegmentsReport> reportsMap)\n+  public static Function<Set<DataSegment>, Set<DataSegment>> compactionStateAnnotateFunction(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c491b1ae54f366df100451e8ba749abed3e6eb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4MjU0OQ==", "bodyText": "Good idea! Moved this method.", "url": "https://github.com/apache/druid/pull/10307#discussion_r475882549", "createdAt": "2020-08-24T20:43:49Z", "author": {"login": "jihoonson"}, "path": "indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java", "diffHunk": "@@ -764,7 +765,28 @@ private PartitionBoundaries determineRangePartition(Collection<StringDistributio\n     return Pair.of(start, stop);\n   }\n \n-  private static void publishSegments(TaskToolbox toolbox, Map<String, PushedSegmentsReport> reportsMap)\n+  public static Function<Set<DataSegment>, Set<DataSegment>> compactionStateAnnotateFunction(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMTU5OQ=="}, "originalCommit": {"oid": "d4c491b1ae54f366df100451e8ba749abed3e6eb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTkyNjI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/client/indexing/ClientCompactionTaskQueryTuningConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNzozNjowMlrOHFGl2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDo0Mzo1MlrOHF1kSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjkyMA==", "bodyText": "should this be marked JsonProperty?", "url": "https://github.com/apache/druid/pull/10307#discussion_r475112920", "createdAt": "2020-08-22T17:36:02Z", "author": {"login": "abhishekagarwal87"}, "path": "server/src/main/java/org/apache/druid/client/indexing/ClientCompactionTaskQueryTuningConfig.java", "diffHunk": "@@ -158,27 +222,90 @@ public IndexSpec getIndexSpec()\n     return indexSpec;\n   }\n \n+  @JsonProperty\n+  @Nullable\n+  public IndexSpec getIndexSpecForIntermediatePersists()\n+  {\n+    return indexSpecForIntermediatePersists;\n+  }\n+\n   @JsonProperty\n   @Nullable\n   public Integer getMaxPendingPersists()\n   {\n     return maxPendingPersists;\n   }\n \n+  @JsonProperty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c491b1ae54f366df100451e8ba749abed3e6eb"}, "originalPosition": 197}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4MjU3MA==", "bodyText": "Yes, this should be passed properly when this class is deserialized as ParallelIndexTuningConfig.", "url": "https://github.com/apache/druid/pull/10307#discussion_r475882570", "createdAt": "2020-08-24T20:43:52Z", "author": {"login": "jihoonson"}, "path": "server/src/main/java/org/apache/druid/client/indexing/ClientCompactionTaskQueryTuningConfig.java", "diffHunk": "@@ -158,27 +222,90 @@ public IndexSpec getIndexSpec()\n     return indexSpec;\n   }\n \n+  @JsonProperty\n+  @Nullable\n+  public IndexSpec getIndexSpecForIntermediatePersists()\n+  {\n+    return indexSpecForIntermediatePersists;\n+  }\n+\n   @JsonProperty\n   @Nullable\n   public Integer getMaxPendingPersists()\n   {\n     return maxPendingPersists;\n   }\n \n+  @JsonProperty", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjkyMA=="}, "originalCommit": {"oid": "d4c491b1ae54f366df100451e8ba749abed3e6eb"}, "originalPosition": 197}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTk1MDc0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIterator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxODowOToyM1rOHFGxYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDo0Mzo1NFrOHF1kYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTg3Mw==", "bodyText": "so if the partition spec is defined in compaction config and is dynamic partition spec, MaxRowsPerSegment is taken from partition spec. if its not dynamic partition and single dimension for example, then MaxRowsPerSegment is taken from tuning config?\nand it the same for MaxTotalRows?", "url": "https://github.com/apache/druid/pull/10307#discussion_r475115873", "createdAt": "2020-08-22T18:09:23Z", "author": {"login": "abhishekagarwal87"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIterator.java", "diffHunk": "@@ -247,17 +248,30 @@ public boolean hasNext()\n     }\n   }\n \n-  private boolean needsCompaction(DataSourceCompactionConfig config, SegmentsToCompact candidates)\n+  @VisibleForTesting\n+  static PartitionsSpec findPartitinosSpecFromConfig(ClientCompactionTaskQueryTuningConfig tuningConfig)\n+  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c491b1ae54f366df100451e8ba749abed3e6eb"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNzIwMQ==", "bodyText": "Misread the code. if the maxTotalRows is null in partition spec, should it be read from tuningConfig instead of using the Long.Max?", "url": "https://github.com/apache/druid/pull/10307#discussion_r475117201", "createdAt": "2020-08-22T18:24:31Z", "author": {"login": "abhishekagarwal87"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIterator.java", "diffHunk": "@@ -247,17 +248,30 @@ public boolean hasNext()\n     }\n   }\n \n-  private boolean needsCompaction(DataSourceCompactionConfig config, SegmentsToCompact candidates)\n+  @VisibleForTesting\n+  static PartitionsSpec findPartitinosSpecFromConfig(ClientCompactionTaskQueryTuningConfig tuningConfig)\n+  {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTg3Mw=="}, "originalCommit": {"oid": "d4c491b1ae54f366df100451e8ba749abed3e6eb"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg4MjU5NQ==", "bodyText": "The auto compaction supported only dynamic partitioning before this PR. The deprecated maxRowsPerSegment and maxTotalRows in DataSourceCompactionConfig are for dynamic partitioning. Users are recommended to use partitionsSpec instead of them.\n\nMisread the code. if the maxTotalRows is null in partition spec, should it be read from tuningConfig instead of using the Long.Max?\n\nMy intention is using partitionsSpec if it's specified and ignoring deprecated ones. I will add docs for this behaviour as well as the newly supported tuning configurations.", "url": "https://github.com/apache/druid/pull/10307#discussion_r475882595", "createdAt": "2020-08-24T20:43:54Z", "author": {"login": "jihoonson"}, "path": "server/src/main/java/org/apache/druid/server/coordinator/duty/NewestSegmentFirstIterator.java", "diffHunk": "@@ -247,17 +248,30 @@ public boolean hasNext()\n     }\n   }\n \n-  private boolean needsCompaction(DataSourceCompactionConfig config, SegmentsToCompact candidates)\n+  @VisibleForTesting\n+  static PartitionsSpec findPartitinosSpecFromConfig(ClientCompactionTaskQueryTuningConfig tuningConfig)\n+  {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTg3Mw=="}, "originalCommit": {"oid": "d4c491b1ae54f366df100451e8ba749abed3e6eb"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3097, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}