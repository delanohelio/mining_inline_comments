{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMTk5NTYw", "number": 9138, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMTowNjoxMVrODWae9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMTowNjoxMVrODWae9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODI5MTc1OnYy", "diffSide": "RIGHT", "path": "extensions-core/orc-extensions/src/test/java/org/apache/druid/data/input/orc/OrcStructConverterTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMTowNjoxMVrOFbKTtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMTowNjoxMVrOFbKTtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAyNDc1OQ==", "bodyText": "nice \ud83d\udc4d", "url": "https://github.com/apache/druid/pull/9138#discussion_r364024759", "createdAt": "2020-01-08T01:06:11Z", "author": {"login": "clintropolis"}, "path": "extensions-core/orc-extensions/src/test/java/org/apache/druid/data/input/orc/OrcStructConverterTest.java", "diffHunk": "@@ -0,0 +1,467 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.druid.data.input.orc;\n+\n+import org.apache.druid.java.util.common.DateTimes;\n+import org.apache.druid.java.util.common.StringUtils;\n+import org.apache.hadoop.hive.serde2.io.DateWritable;\n+import org.apache.hadoop.hive.serde2.io.HiveDecimalWritable;\n+import org.apache.hadoop.io.BooleanWritable;\n+import org.apache.hadoop.io.ByteWritable;\n+import org.apache.hadoop.io.BytesWritable;\n+import org.apache.hadoop.io.DoubleWritable;\n+import org.apache.hadoop.io.FloatWritable;\n+import org.apache.hadoop.io.IntWritable;\n+import org.apache.hadoop.io.LongWritable;\n+import org.apache.hadoop.io.ShortWritable;\n+import org.apache.hadoop.io.Text;\n+import org.apache.hadoop.io.WritableComparable;\n+import org.apache.orc.TypeDescription;\n+import org.apache.orc.mapred.OrcList;\n+import org.apache.orc.mapred.OrcMap;\n+import org.apache.orc.mapred.OrcStruct;\n+import org.apache.orc.mapred.OrcTimestamp;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import javax.annotation.Nullable;\n+import java.sql.Date;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+\n+public class OrcStructConverterTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab9d38484e9403026f028a08e20121584ac0732a"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2104, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}