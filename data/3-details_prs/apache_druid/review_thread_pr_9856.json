{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzQ3Mjkz", "number": 9856, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowNToxNVrOD8PJIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowNToxNVrOD8PJIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDg5MjQ5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/druid/segment/loading/SegmentLoaderConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTowNToxNVrOGVDfTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDozMDoxOFrOGW50IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczMDQ0NA==", "bodyText": "Oops, I think this should be Math.max so the value isn't always 0 or 1?", "url": "https://github.com/apache/druid/pull/9856#discussion_r424730444", "createdAt": "2020-05-13T21:05:15Z", "author": {"login": "clintropolis"}, "path": "server/src/main/java/org/apache/druid/segment/loading/SegmentLoaderConfig.java", "diffHunk": "@@ -50,7 +50,7 @@\n   private int announceIntervalMillis = 0; // do not background announce\n \n   @JsonProperty(\"numLoadingThreads\")\n-  private int numLoadingThreads = JvmUtils.getRuntimeInfo().getAvailableProcessors();\n+  private int numLoadingThreads = Math.min(1, JvmUtils.getRuntimeInfo().getAvailableProcessors() / 6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3446441574337ddd964fe10673a97d05b143193a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2OTA4OQ==", "bodyText": "whoops , thanks for catching this!", "url": "https://github.com/apache/druid/pull/9856#discussion_r426669089", "createdAt": "2020-05-18T14:30:18Z", "author": {"login": "dylwylie"}, "path": "server/src/main/java/org/apache/druid/segment/loading/SegmentLoaderConfig.java", "diffHunk": "@@ -50,7 +50,7 @@\n   private int announceIntervalMillis = 0; // do not background announce\n \n   @JsonProperty(\"numLoadingThreads\")\n-  private int numLoadingThreads = JvmUtils.getRuntimeInfo().getAvailableProcessors();\n+  private int numLoadingThreads = Math.min(1, JvmUtils.getRuntimeInfo().getAvailableProcessors() / 6);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczMDQ0NA=="}, "originalCommit": {"oid": "3446441574337ddd964fe10673a97d05b143193a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2427, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}