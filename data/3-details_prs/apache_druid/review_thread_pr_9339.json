{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODg3NzI1", "number": 9339, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNjozMDo1MVrODg9A0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzo1MToyOVrODwgXRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODgwNjU2OnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/query/groupby/having/GreaterThanHavingSpec.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwNjozMDo1MVrOFrccGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzoxNzowNFrOFrwJLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5OTAzNA==", "bodyText": "There's an extra { that got added here.", "url": "https://github.com/apache/druid/pull/9339#discussion_r381099034", "createdAt": "2020-02-19T06:30:51Z", "author": {"login": "ccaominh"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/having/GreaterThanHavingSpec.java", "diffHunk": "@@ -121,12 +121,10 @@ public int hashCode()\n   @Override\n   public String toString()\n   {\n-    final StringBuilder sb = new StringBuilder();\n-    sb.append(\"GreaterThanHavingSpec\");\n-    sb.append(\"{aggregationName='\").append(aggregationName).append('\\'');\n-    sb.append(\", value=\").append(value);\n-    sb.append('}');\n-    return sb.toString();\n+    return \"GreaterThanHavingSpec{\" +\n+           \"{aggregationName='\" + aggregationName + '\\'' +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d3df0f86ca8fca5aa95357504ebfd8c291d686f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyMTg2OA==", "bodyText": "Done", "url": "https://github.com/apache/druid/pull/9339#discussion_r381421868", "createdAt": "2020-02-19T17:17:04Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/query/groupby/having/GreaterThanHavingSpec.java", "diffHunk": "@@ -121,12 +121,10 @@ public int hashCode()\n   @Override\n   public String toString()\n   {\n-    final StringBuilder sb = new StringBuilder();\n-    sb.append(\"GreaterThanHavingSpec\");\n-    sb.append(\"{aggregationName='\").append(aggregationName).append('\\'');\n-    sb.append(\", value=\").append(value);\n-    sb.append('}');\n-    return sb.toString();\n+    return \"GreaterThanHavingSpec{\" +\n+           \"{aggregationName='\" + aggregationName + '\\'' +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA5OTAzNA=="}, "originalCommit": {"oid": "5d3df0f86ca8fca5aa95357504ebfd8c291d686f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTg3MzY2OnYy", "diffSide": "RIGHT", "path": "processing/src/main/java/org/apache/druid/segment/writeout/OnHeapMemorySegmentWriteOutMediumFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzo0ODoyMFrOGDjDpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjozMzoxM1rOGDyUug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3MzI4NQ==", "bodyText": "Revert?", "url": "https://github.com/apache/druid/pull/9339#discussion_r406373285", "createdAt": "2020-04-09T17:48:20Z", "author": {"login": "ccaominh"}, "path": "processing/src/main/java/org/apache/druid/segment/writeout/OnHeapMemorySegmentWriteOutMediumFactory.java", "diffHunk": "@@ -23,6 +23,7 @@\n \n import java.io.File;\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4a690f644e21c6931463eda2c462e5a50b8b0e6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYyMzQxOA==", "bodyText": "removed", "url": "https://github.com/apache/druid/pull/9339#discussion_r406623418", "createdAt": "2020-04-10T06:33:13Z", "author": {"login": "suneet-s"}, "path": "processing/src/main/java/org/apache/druid/segment/writeout/OnHeapMemorySegmentWriteOutMediumFactory.java", "diffHunk": "@@ -23,6 +23,7 @@\n \n import java.io.File;\n \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3MzI4NQ=="}, "originalCommit": {"oid": "e4a690f644e21c6931463eda2c462e5a50b8b0e6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTg4NDg1OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/apache/druid/cli/CliHadoopIndexer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNzo1MToyOVrOGDjKqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNjozODoyNlrOGDyZ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3NTA4MQ==", "bodyText": "The new ArrrayList<>() seems unnecessary?", "url": "https://github.com/apache/druid/pull/9339#discussion_r406375081", "createdAt": "2020-04-09T17:51:29Z", "author": {"login": "ccaominh"}, "path": "services/src/main/java/org/apache/druid/cli/CliHadoopIndexer.java", "diffHunk": "@@ -84,8 +84,8 @@ public void run()\n         extensionURLs.addAll(Arrays.asList(((URLClassLoader) extensionLoader).getURLs()));\n       }\n \n-      final List<URL> nonHadoopURLs = new ArrayList<>();\n-      nonHadoopURLs.addAll(Arrays.asList(((URLClassLoader) CliHadoopIndexer.class.getClassLoader()).getURLs()));\n+      final List<URL> nonHadoopURLs = new ArrayList<>(Arrays.asList(((URLClassLoader) CliHadoopIndexer.class.getClassLoader())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4a690f644e21c6931463eda2c462e5a50b8b0e6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYyNDc2NQ==", "bodyText": "removed", "url": "https://github.com/apache/druid/pull/9339#discussion_r406624765", "createdAt": "2020-04-10T06:38:26Z", "author": {"login": "suneet-s"}, "path": "services/src/main/java/org/apache/druid/cli/CliHadoopIndexer.java", "diffHunk": "@@ -84,8 +84,8 @@ public void run()\n         extensionURLs.addAll(Arrays.asList(((URLClassLoader) extensionLoader).getURLs()));\n       }\n \n-      final List<URL> nonHadoopURLs = new ArrayList<>();\n-      nonHadoopURLs.addAll(Arrays.asList(((URLClassLoader) CliHadoopIndexer.class.getClassLoader()).getURLs()));\n+      final List<URL> nonHadoopURLs = new ArrayList<>(Arrays.asList(((URLClassLoader) CliHadoopIndexer.class.getClassLoader())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3NTA4MQ=="}, "originalCommit": {"oid": "e4a690f644e21c6931463eda2c462e5a50b8b0e6"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2749, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}