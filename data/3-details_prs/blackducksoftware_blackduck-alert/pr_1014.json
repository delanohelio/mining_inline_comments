{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTU1NzA1", "number": 1014, "title": "Refactor validation functions into a ValidationResult object", "bodyText": "Previously we used a Collection of strings to handle error messages produced by the validators. In this refactor I instead created a ValidationResult object to instead be used with several other convenience methods.", "createdAt": "2020-06-11T15:21:24Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014", "merged": true, "mergeCommit": {"oid": "a3ae04242f8db30533fa230327079b530f5fbecf"}, "closed": true, "closedAt": "2020-06-12T13:56:38Z", "author": {"login": "ChomickiM"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp_CM2AH2gAyNDMzMTU1NzA1OjQzMzE3NjExYWQ1ZGY1ZTRlMGZkNjYzNWZiYmVhNjZiMzBkNmU4NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqjPvHAFqTQyOTc1OTgyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "43317611ad5df5e4e0fd6635fbbea66b30d6e854", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/43317611ad5df5e4e0fd6635fbbea66b30d6e854", "committedDate": "2020-06-10T19:43:24Z", "message": "refactor: Create ValidationResult object to replace handle error messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48c8d5d7ba1732ff1724b97226df1154d9db7f2d", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/48c8d5d7ba1732ff1724b97226df1154d9db7f2d", "committedDate": "2020-06-11T13:50:57Z", "message": "style: Removing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a91d675f73724fbed21608f65188a36cb7f4597", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9a91d675f73724fbed21608f65188a36cb7f4597", "committedDate": "2020-06-11T13:51:25Z", "message": "Merge remote-tracking branch 'origin/master' into mc_validation_result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cb9a2d2a503dd9a597182d54869d1c9247dc406b", "committedDate": "2020-06-11T15:16:50Z", "message": "test: Adding test coverage for ValidationResult"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDIyODY0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429022864", "createdAt": "2020-06-11T15:23:38Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyMzozOFrOGiiUSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyMzozOFrOGiiUSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2NzAxOA==", "bodyText": "The comment should be removed", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438867018", "createdAt": "2020-06-11T15:23:38Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/ConfigField.java", "diffHunk": "@@ -194,22 +195,21 @@ public ConfigField applyValidationFunctions(ConfigValidationFunction... validati\n         return this;\n     }\n \n-    public Collection<String> validate(FieldValueModel fieldToValidate, FieldModel fieldModel) {\n+    public ValidationResult validate(FieldValueModel fieldToValidate, FieldModel fieldModel) {\n         return validate(fieldToValidate, fieldModel, getValidationFunctions());\n     }\n \n-    private Collection<String> validate(FieldValueModel fieldToValidate, FieldModel fieldModel, List<ConfigValidationFunction> validationFunctions) {\n-        Collection<String> errors = new LinkedList<>();\n-        validateRequiredField(fieldToValidate, errors);\n-        validateLength(fieldToValidate, errors);\n-        if (errors.isEmpty()) {\n+    private ValidationResult validate(FieldValueModel fieldToValidate, FieldModel fieldModel, List<ConfigValidationFunction> validationFunctions) {\n+        ValidationResult errors = ValidationResult.of(validateRequiredField(fieldToValidate), validateLength(fieldToValidate));\n+\n+        if (!errors.hasErrors()) {\n             for (ConfigValidationFunction validation : validationFunctions) {\n                 if (null != validation) {\n-                    errors.addAll(validation.apply(fieldToValidate, fieldModel));\n+                    //errors.addAll(validation.apply(fieldToValidate, fieldModel));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDI3NTY0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429027564", "createdAt": "2020-06-11T15:26:25Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyNjoyNVrOGiibsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyNjoyNVrOGiibsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2ODkxMg==", "bodyText": "It might be nice to update the variable name to validationResult.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438868912", "createdAt": "2020-06-11T15:26:25Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java", "diffHunk": "@@ -151,13 +150,13 @@ public void unRegisterTarget(String targetKey) throws AlertException {\n             if (validationFunction.isPresent()) {\n                 writeFile(tempFilename, fileResource);\n                 File fileToValidate = filePersistenceUtil.createUploadsFile(tempFilename);\n-                Collection<String> errors = validationFunction.get().apply(fileToValidate);\n+                ValidationResult errors = validationFunction.get().apply(fileToValidate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDMwNjUx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429030651", "createdAt": "2020-06-11T15:29:40Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyOTo0MFrOGiioAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToyOTo0MFrOGiioAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MjA2NA==", "bodyText": "A stream would work nicely here. You can use Stream.of (or something similar) on the array validationResults and then use the map method to convert the list to errors.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438872064", "createdAt": "2020-06-11T15:29:40Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {\n+        return new ValidationResult(errors);\n+    }\n+\n+    public static ValidationResult of(String... errors) {\n+        return new ValidationResult(Arrays.asList(errors));\n+    }\n+\n+    public static ValidationResult of(ValidationResult... validationResults) {\n+        Collection<String> newValidationResult = new ArrayList(validationResults.length);\n+        for (ValidationResult result : validationResults) {\n+            newValidationResult.addAll(result.getErrors());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDMxMjY3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429031267", "createdAt": "2020-06-11T15:30:18Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozMDoxOFrOGiiqhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozMDoxOFrOGiiqhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MjcwOQ==", "bodyText": "As a team convention, we tend to put public static methods above the constructor(s).", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438872709", "createdAt": "2020-06-11T15:30:18Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {\n+        return new ValidationResult(errors);\n+    }\n+\n+    public static ValidationResult of(String... errors) {\n+        return new ValidationResult(Arrays.asList(errors));\n+    }\n+\n+    public static ValidationResult of(ValidationResult... validationResults) {\n+        Collection<String> newValidationResult = new ArrayList(validationResults.length);\n+        for (ValidationResult result : validationResults) {\n+            newValidationResult.addAll(result.getErrors());\n+        }\n+        return new ValidationResult(newValidationResult);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDMyOTY3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429032967", "createdAt": "2020-06-11T15:32:07Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDM3MTI1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429037125", "createdAt": "2020-06-11T15:36:57Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDgxMzM2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429081336", "createdAt": "2020-06-11T16:23:53Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoyMzo1M1rOGilK9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoyMzo1M1rOGilK9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkxMzc4MQ==", "bodyText": "Can we change the name of the is method to success()?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438913781", "createdAt": "2020-06-11T16:23:53Z", "author": {"login": "jamesrichard91"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDgxNjEx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429081611", "createdAt": "2020-06-11T16:24:13Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoyNDoxM1rOGilLwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoyNDoxM1rOGilLwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkxMzk4NA==", "bodyText": "Can we change the name of the is method to errors(Collection<String> errors)?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438913984", "createdAt": "2020-06-11T16:24:13Z", "author": {"login": "jamesrichard91"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDgxODU1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429081855", "createdAt": "2020-06-11T16:24:30Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoyNDozMVrOGilMcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoyNDozMVrOGilMcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkxNDE2Mw==", "bodyText": "Can we change the name of the is method to error(String... errors)?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#discussion_r438914163", "createdAt": "2020-06-11T16:24:31Z", "author": {"login": "jamesrichard91"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/validators/ValidationResult.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.descriptor.config.field.validators;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ValidationResult {\n+\n+    private Collection<String> errors;\n+\n+    private ValidationResult() {\n+        this.errors = List.of();\n+    }\n+\n+    private ValidationResult(Collection<String> errors) {\n+        this.errors = errors;\n+    }\n+\n+    public Collection<String> getErrors() {\n+        return errors;\n+    }\n+\n+    public boolean hasErrors() {\n+        return !errors.isEmpty();\n+    }\n+\n+    public String combineErrorMessages() {\n+        return StringUtils.join(errors, \", \");\n+    }\n+\n+    public static ValidationResult of() {\n+        return new ValidationResult();\n+    }\n+\n+    public static ValidationResult of(Collection<String> errors) {\n+        return new ValidationResult(errors);\n+    }\n+\n+    public static ValidationResult of(String... errors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTczODY1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429173865", "createdAt": "2020-06-11T18:19:22Z", "commit": {"oid": "cb9a2d2a503dd9a597182d54869d1c9247dc406b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ea30dd23ce323b081532e3194db24400ba1e516", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1ea30dd23ce323b081532e3194db24400ba1e516", "committedDate": "2020-06-11T19:38:37Z", "message": "refactor: Refactoring static methods in ValidationResult"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dac5a39aeb75c8d5e5dc86f7f9161dd04e1b24f", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9dac5a39aeb75c8d5e5dc86f7f9161dd04e1b24f", "committedDate": "2020-06-11T19:47:41Z", "message": "refactor: Updating variable name for ValidationResult"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NzU5ODI0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1014#pullrequestreview-429759824", "createdAt": "2020-06-12T13:54:47Z", "commit": {"oid": "9dac5a39aeb75c8d5e5dc86f7f9161dd04e1b24f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3544, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}