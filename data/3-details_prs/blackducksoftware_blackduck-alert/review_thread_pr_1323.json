{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0MzgzMzI5", "number": 1323, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoyNTozOVrOFIl9DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoyNTozOVrOFIl9DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTU0NzY1OnYy", "diffSide": "RIGHT", "path": "channel/src/main/java/com/synopsys/integration/alert/channel/jira/common/JiraCustomFieldResolver.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoyNTozOVrOIKmQjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNToxMjo0M1rOIKnmxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MzUwMw==", "bodyText": "I don't think it's worth doing right now since this works and we will potentially be rewriting a good chunk of issue-tracking functionality in the coming versions.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1323#discussion_r547983503", "createdAt": "2020-12-23T14:25:39Z", "author": {"login": "gkillough"}, "path": "channel/src/main/java/com/synopsys/integration/alert/channel/jira/common/JiraCustomFieldResolver.java", "diffHunk": "@@ -93,9 +95,16 @@ protected Object convertValueToRequestObject(CustomFieldDefinitionModel fieldDef\n                 jsonArray.add(innerFieldValue);\n                 return jsonArray;\n             case CUSTOM_FIELD_TYPE_OPTION_VALUE:\n-                JsonObject jsonObject = new JsonObject();\n-                jsonObject.addProperty(\"value\", innerFieldValue);\n-                return jsonObject;\n+                return createJsonObject(\"value\", innerFieldValue);\n+            case CUSTOM_FIELD_TYPE_PRIORITY_VALUE:\n+                return createJsonObject(\"name\", innerFieldValue);\n+            case CUSTOM_FIELD_TYPE_USER_VALUE:\n+                // \"name\" is used for Jira Server (ignored on Jira Cloud)\n+                JsonObject createUserObject = createJsonObject(\"name\", innerFieldValue);\n+                // \"accountId\" is used for Jira Cloud (ignored on Jira Server)\n+                createUserObject.addProperty(\"accountId\", innerFieldValue);\n+                // TODO consider separating this functionality depending on which Jira channel is being used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9229eae3e994e618a96d5315e40690bf35316485"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAwNDkxNQ==", "bodyText": "Does adding both here work for Jira Cloud and Jira Server? Or does it error because we provided additional fields?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1323#discussion_r548004915", "createdAt": "2020-12-23T15:11:13Z", "author": {"login": "jamesrichard91"}, "path": "channel/src/main/java/com/synopsys/integration/alert/channel/jira/common/JiraCustomFieldResolver.java", "diffHunk": "@@ -93,9 +95,16 @@ protected Object convertValueToRequestObject(CustomFieldDefinitionModel fieldDef\n                 jsonArray.add(innerFieldValue);\n                 return jsonArray;\n             case CUSTOM_FIELD_TYPE_OPTION_VALUE:\n-                JsonObject jsonObject = new JsonObject();\n-                jsonObject.addProperty(\"value\", innerFieldValue);\n-                return jsonObject;\n+                return createJsonObject(\"value\", innerFieldValue);\n+            case CUSTOM_FIELD_TYPE_PRIORITY_VALUE:\n+                return createJsonObject(\"name\", innerFieldValue);\n+            case CUSTOM_FIELD_TYPE_USER_VALUE:\n+                // \"name\" is used for Jira Server (ignored on Jira Cloud)\n+                JsonObject createUserObject = createJsonObject(\"name\", innerFieldValue);\n+                // \"accountId\" is used for Jira Cloud (ignored on Jira Server)\n+                createUserObject.addProperty(\"accountId\", innerFieldValue);\n+                // TODO consider separating this functionality depending on which Jira channel is being used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MzUwMw=="}, "originalCommit": {"oid": "9229eae3e994e618a96d5315e40690bf35316485"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAwNTU3NA==", "bodyText": "I tested both with this change and it simply ignores the unknown field.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1323#discussion_r548005574", "createdAt": "2020-12-23T15:12:43Z", "author": {"login": "gkillough"}, "path": "channel/src/main/java/com/synopsys/integration/alert/channel/jira/common/JiraCustomFieldResolver.java", "diffHunk": "@@ -93,9 +95,16 @@ protected Object convertValueToRequestObject(CustomFieldDefinitionModel fieldDef\n                 jsonArray.add(innerFieldValue);\n                 return jsonArray;\n             case CUSTOM_FIELD_TYPE_OPTION_VALUE:\n-                JsonObject jsonObject = new JsonObject();\n-                jsonObject.addProperty(\"value\", innerFieldValue);\n-                return jsonObject;\n+                return createJsonObject(\"value\", innerFieldValue);\n+            case CUSTOM_FIELD_TYPE_PRIORITY_VALUE:\n+                return createJsonObject(\"name\", innerFieldValue);\n+            case CUSTOM_FIELD_TYPE_USER_VALUE:\n+                // \"name\" is used for Jira Server (ignored on Jira Cloud)\n+                JsonObject createUserObject = createJsonObject(\"name\", innerFieldValue);\n+                // \"accountId\" is used for Jira Cloud (ignored on Jira Server)\n+                createUserObject.addProperty(\"accountId\", innerFieldValue);\n+                // TODO consider separating this functionality depending on which Jira channel is being used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MzUwMw=="}, "originalCommit": {"oid": "9229eae3e994e618a96d5315e40690bf35316485"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2272, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}