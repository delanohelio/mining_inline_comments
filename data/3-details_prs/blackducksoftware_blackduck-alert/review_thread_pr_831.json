{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NzEyMjMx", "number": 831, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzoyMTozMVrODbN5ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzoyMTozMVrODbN5ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODY1ODg2OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/synopsys/integration/alert/web/certificates/CertificateActionsTestIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzoyMTozMVrOFikstw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMzo1NzoxN1rOFil2ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5NzE3NQ==", "bodyText": "I used to be in favor of checking the substrings in messages, but now I worry that it causes us to need to update the tests too often, which, in turn, causes the tests to be less valuable. I would be more comfortable having the fail at line 41 and nothing in the catch block (maybe an assertNotNull).", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/831#discussion_r371797175", "createdAt": "2020-01-28T13:21:31Z", "author": {"login": "gkillough"}, "path": "src/test/java/com/synopsys/integration/alert/web/certificates/CertificateActionsTestIT.java", "diffHunk": "@@ -29,6 +31,19 @@ public void createCertificateTest() throws Exception {\n         assertEquals(certificateContent, savedCertificate.getCertificateContent());\n     }\n \n+    @Test\n+    public void createCertificateIdTest() throws Exception {\n+        String certificateContent = readCertificateContents();\n+        try {\n+            CertificateModel certificate = new CertificateModel(\"alias\", certificateContent);\n+            certificate.setId(\"badId\");\n+            certificateActions.createCertificate(certificate);\n+            fail();\n+        } catch (AlertDatabaseConstraintException ex) {\n+            assertTrue(ex.getMessage().contains(\"id cannot be present\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655ef1c7834230491cf3ad0cb16be5fedfd9cca7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgxNjA3NA==", "bodyText": "I have changed to an assertNotNull for the message.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/831#discussion_r371816074", "createdAt": "2020-01-28T13:57:17Z", "author": {"login": "psantos1113"}, "path": "src/test/java/com/synopsys/integration/alert/web/certificates/CertificateActionsTestIT.java", "diffHunk": "@@ -29,6 +31,19 @@ public void createCertificateTest() throws Exception {\n         assertEquals(certificateContent, savedCertificate.getCertificateContent());\n     }\n \n+    @Test\n+    public void createCertificateIdTest() throws Exception {\n+        String certificateContent = readCertificateContents();\n+        try {\n+            CertificateModel certificate = new CertificateModel(\"alias\", certificateContent);\n+            certificate.setId(\"badId\");\n+            certificateActions.createCertificate(certificate);\n+            fail();\n+        } catch (AlertDatabaseConstraintException ex) {\n+            assertTrue(ex.getMessage().contains(\"id cannot be present\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc5NzE3NQ=="}, "originalCommit": {"oid": "655ef1c7834230491cf3ad0cb16be5fedfd9cca7"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2066, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}