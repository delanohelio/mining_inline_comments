{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzMwMDgy", "number": 1132, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMDo1N1rOEbuKtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMzoxMlrOEbuNgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTAzNDE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMDo1N1rOHF0O_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowNzoyN1rOHF0bmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MDczMg==", "bodyText": "Typo in \"AzureWorkItemReponst\".\nWhat does \"when called via the rest API\" mean? In the response from a POST request? I believe it is there for a GET request.\nWe need this link for the callback to Black Duck, so we should add a GET here if necessary.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475860732", "createdAt": "2020-08-24T20:00:57Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "diffHunk": "@@ -160,10 +186,15 @@ protected String getIssueKey(WorkItemResponseModel issueModel) {\n     protected IssueTrackerIssueResponseModel createResponseModel(AlertIssueOrigin alertIssueOrigin, String issueTitle, IssueOperation issueOperation, WorkItemResponseModel issueResponse) {\n         Integer workItemId = issueResponse.getId();\n         Map<String, ReferenceLinkModel> issueLinks = issueResponse.getLinks();\n-        ReferenceLinkModel htmlLink = issueLinks.get(\"html\");\n-        String uiLink = Optional.ofNullable(htmlLink)\n-                            .map(ReferenceLinkModel::getHref)\n-                            .orElseGet(this::getIssueTrackerUrl);\n+        // the AzureWorkItemReponst does not contain any links when called via the rest API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2Mzk2Mw==", "bodyText": "the retrieveExistingIssues call in AzureBoardsIssueHandler makes an API call that returns a WorkItemResponse that contains null for the links.  When the createWorkItemRequest method is called in AzureBoardsIssueHandler the links aren't null.  That's the issue I was seeing.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475863963", "createdAt": "2020-08-24T20:07:27Z", "author": {"login": "psantos1113"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "diffHunk": "@@ -160,10 +186,15 @@ protected String getIssueKey(WorkItemResponseModel issueModel) {\n     protected IssueTrackerIssueResponseModel createResponseModel(AlertIssueOrigin alertIssueOrigin, String issueTitle, IssueOperation issueOperation, WorkItemResponseModel issueResponse) {\n         Integer workItemId = issueResponse.getId();\n         Map<String, ReferenceLinkModel> issueLinks = issueResponse.getLinks();\n-        ReferenceLinkModel htmlLink = issueLinks.get(\"html\");\n-        String uiLink = Optional.ofNullable(htmlLink)\n-                            .map(ReferenceLinkModel::getHref)\n-                            .orElseGet(this::getIssueTrackerUrl);\n+        // the AzureWorkItemReponst does not contain any links when called via the rest API.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MDczMg=="}, "originalCommit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTA0MTI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMzoxMlrOHF0TWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMzoxMlrOHF0TWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MTg1MA==", "bodyText": "Can we call the error method just once here?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475861850", "createdAt": "2020-08-24T20:03:12Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "diffHunk": "@@ -135,13 +137,37 @@ public AzureBoardsIssueHandler(IssueContentLengthValidator issueContentLengthVal\n                                        .stream()\n                                        .map(WorkItemReferenceModel::getId)\n                                        .collect(Collectors.toSet());\n-        AzureArrayResponseModel<WorkItemResponseModel> workItemArrayResponse = azureWorkItemService.getWorkItems(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), workItemIds);\n-        return workItemArrayResponse.getValue();\n+        if (!workItemIds.isEmpty()) {\n+            AzureArrayResponseModel<WorkItemResponseModel> workItemArrayResponse = azureWorkItemService.getWorkItems(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), workItemIds);\n+            return workItemArrayResponse.getValue();\n+        }\n+        return List.of();\n     }\n \n     @Override\n     protected boolean transitionIssue(WorkItemResponseModel issueModel, IssueConfig issueConfig, IssueOperation operation) throws IntegrationException {\n-        // FIXME implement\n+        List<WorkItemElementOperationModel> requestElementOps = new ArrayList<>();\n+        Optional<String> transition;\n+        if (IssueOperation.RESOLVE.equals(operation)) {\n+            transition = issueConfig.getResolveTransition();\n+        } else {\n+            transition = issueConfig.getOpenTransition();\n+        }\n+        if (transition.isPresent()) {\n+            String transitionName = transition.get();\n+            try {\n+                WorkItemElementOperationModel descriptionField = createUpdateFieldModel(WorkItemResponseFields.System_State, transitionName);\n+                requestElementOps.add(descriptionField);\n+                WorkItemRequest request = new WorkItemRequest(requestElementOps);\n+                WorkItemResponseModel workItemResponse = azureWorkItemService.updateWorkItem(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), issueModel.getId(), request);\n+                JsonElement stateElement = workItemResponse.getFields().get(WorkItemResponseFields.System_State.getFieldName());\n+                return transitionName.equals(stateElement.getAsString());\n+            } catch (HttpServiceException ex) {\n+                logger.error(\"Error transitioning work item {} to {}\", issueModel.getId(), transitionName);\n+                logger.error(\"Cause: \", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1701, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}