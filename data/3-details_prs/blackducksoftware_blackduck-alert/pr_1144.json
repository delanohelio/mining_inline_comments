{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NTM4NTcx", "number": 1144, "title": "Fix UploadEndpointController and Manager", "bodyText": "", "createdAt": "2020-08-28T17:20:06Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144", "merged": true, "mergeCommit": {"oid": "8a2463261d882c824174626c115ad25795fcda75"}, "closed": true, "closedAt": "2020-08-28T19:00:00Z", "author": {"login": "gkillough"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDYUexAH2gAyNDc1NTM4NTcxOmZjOTMzMjMxMGI1ZjY0ODAwMmM1MGJlNmFkMTlmNTM2NTNlZjJjZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDZv7TgH2gAyNDc1NTM4NTcxOjZjNTk0YTdjOWY5OTAyMTg0Y2FkNDI3ODEzNDM3NTg5YzZmN2NmNWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/fc9332310b5f648002c50be6ad19f53653ef2cd2", "committedDate": "2020-08-28T17:19:06Z", "message": "Fix(Upload API): Return Java models rather than ResponseEntities in UploadEndpointController"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTA4OTQy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#pullrequestreview-477908942", "createdAt": "2020-08-28T17:32:37Z", "commit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTQyMDQz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#pullrequestreview-477942043", "createdAt": "2020-08-28T18:28:12Z", "commit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyODoxM1rOHJQenQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyODoxM1rOHJQenQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2OTIxMw==", "bodyText": "Can we use the entire if statement in the throwNotImplementedException method? We perform this exact check multiple times. We'd just change the name of the throw method to throwNotImplementedExceptionIfTargetDoesntExist or something not as long", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#discussion_r479469213", "createdAt": "2020-08-28T18:28:13Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java", "diffHunk": "@@ -90,83 +88,74 @@ public void unRegisterTarget(String targetKey) throws AlertException {\n         uploadTargets.remove(targetKey);\n     }\n \n-    public ResponseEntity<String> performUpload(String targetKey, Resource fileResource) {\n+    public void performUpload(String targetKey, Resource fileResource) {\n         if (!containsTarget(targetKey)) {\n-            return new ResponseEntity(NO_UPLOAD_FUNCTIONALITY_REGISTERED, HttpStatus.NOT_IMPLEMENTED);\n+            throwNotImplementedException();\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTQzMTY5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#pullrequestreview-477943169", "createdAt": "2020-08-28T18:30:06Z", "commit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozMDowN1rOHJQh-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozMDowN1rOHJQh-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3MDA3NQ==", "bodyText": "I think these if statements can also be made into a throw method that is passed a function for which check to perform.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#discussion_r479470075", "createdAt": "2020-08-28T18:30:07Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/UploadEndpointManager.java", "diffHunk": "@@ -90,83 +88,74 @@ public void unRegisterTarget(String targetKey) throws AlertException {\n         uploadTargets.remove(targetKey);\n     }\n \n-    public ResponseEntity<String> performUpload(String targetKey, Resource fileResource) {\n+    public void performUpload(String targetKey, Resource fileResource) {\n         if (!containsTarget(targetKey)) {\n-            return new ResponseEntity(NO_UPLOAD_FUNCTIONALITY_REGISTERED, HttpStatus.NOT_IMPLEMENTED);\n+            throwNotImplementedException();\n         }\n \n         UploadTarget target = uploadTargets.get(targetKey);\n         if (!authorizationManager.hasUploadWritePermission(target.getContext().name(), target.getDescriptorKey().getUniversalKey())) {\n-            return responseFactory.createForbiddenResponse();\n+            throw ResponseFactory.createForbiddenException();\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTQ0Nzky", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#pullrequestreview-477944792", "createdAt": "2020-08-28T18:32:50Z", "commit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozMjo1MFrOHJQmyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODozMjo1MFrOHJQmyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3MTMwNw==", "bodyText": "This class also has a number of duplicate if statements that can be put into the private method.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#discussion_r479471307", "createdAt": "2020-08-28T18:32:50Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/upload/UploadEndpointController.java", "diffHunk": "@@ -24,54 +24,61 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.http.ResponseEntity;\n+import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.DeleteMapping;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.PostMapping;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n import org.springframework.web.bind.annotation.RestController;\n import org.springframework.web.multipart.MultipartFile;\n \n import com.synopsys.integration.alert.common.action.UploadEndpointManager;\n import com.synopsys.integration.alert.common.rest.ResponseFactory;\n+import com.synopsys.integration.alert.common.rest.model.ExistenceModel;\n \n @RestController\n @RequestMapping(UploadEndpointManager.UPLOAD_ENDPOINT_URL)\n public class UploadEndpointController {\n-\n     public static final String TARGET_KEY_MISSING = \"Must be given the key associated with the custom functionality.\";\n+\n     private final UploadEndpointManager uploadEndpointManager;\n-    private final ResponseFactory responseFactory;\n \n     @Autowired\n-    public UploadEndpointController(UploadEndpointManager uploadEndpointManager, ResponseFactory responseFactory) {\n+    public UploadEndpointController(UploadEndpointManager uploadEndpointManager) {\n         this.uploadEndpointManager = uploadEndpointManager;\n-        this.responseFactory = responseFactory;\n     }\n \n     @GetMapping(\"/{key}/exists\")\n-    public ResponseEntity<String> checkUploadedFileExists(@PathVariable String key) {\n+    public ExistenceModel checkUploadedFileExists(@PathVariable String key) {\n         if (StringUtils.isBlank(key)) {\n-            return responseFactory.createBadRequestResponse(\"\", TARGET_KEY_MISSING);\n+            throwTargetKeyMissingException();\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTUwMzY4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1144#pullrequestreview-477950368", "createdAt": "2020-08-28T18:42:49Z", "commit": {"oid": "fc9332310b5f648002c50be6ad19f53653ef2cd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c594a7c9f9902184cad427813437589c6f7cf5d", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/6c594a7c9f9902184cad427813437589c6f7cf5d", "committedDate": "2020-08-28T18:58:59Z", "message": "Fix(Upload API): Abstract if-statements around response status exceptions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3437, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}