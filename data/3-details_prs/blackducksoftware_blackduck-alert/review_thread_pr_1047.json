{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODY4MzY1", "number": 1047, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo1ODo1NVrOELxSAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoxOTo1N1rOEMDSbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzc3MjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsGlobalUIConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo1ODo1NVrOGtftBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzozNjo0NlrOGtg6dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1ODUzNA==", "bodyText": "There isn't a custom endpoint registered in this PR to handle the oauth connection?  Is that intended for a different PR.  Right now this field will not do anything on the server side.  You could at the least register the custom endpoint for this field and log a message to ensure that the server recieves the request when this button is pushed.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1047#discussion_r450358534", "createdAt": "2020-07-06T16:58:55Z", "author": {"login": "psantos1113"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsGlobalUIConfig.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.descriptor;\n+\n+import java.util.List;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.descriptor.config.field.ConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.PasswordConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.TextInputConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.URLInputConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.endpoint.EndpointButtonField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.validators.EncryptionValidator;\n+import com.synopsys.integration.alert.common.descriptor.config.ui.UIConfig;\n+\n+@Component\n+public class AzureBoardsGlobalUIConfig extends UIConfig {\n+    public static final String LABEL_AZURE_BOARDS_URL = \"Url\";\n+    public static final String LABEL_ORGANIZATION_NAME = \"Organization Name\";\n+    public static final String LABEL_CONSUMER_KEY = \"Consumer Key\";\n+    public static final String LABEL_PRIVATE_KEY = \"Private Key\";\n+    public static final String LABEL_OAUTH = \"Initialize OAuth\";\n+    public static final String LABEL_ACCESS_TOKEN = \"Access Token\";\n+\n+    public static final String DESCRIPTION_AZURE_BOARDS_URL = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_ORGANIZATION_NAME = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_CONSUMER_KEY = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_PRIVATE_KEY = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_OAUTH = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_ACCESS_TOKEN = \"FILL OUT THIS DESCRIPTION\";\n+\n+    public static final String BUTTON_LABEL_OAUTH = \"FILL OUT THIS BUTTON LABEL\";\n+\n+    private final EncryptionValidator encryptionValidator;\n+\n+    @Autowired\n+    public AzureBoardsGlobalUIConfig(EncryptionValidator encryptionValidator) {\n+        super(AzureBoardsDescriptor.AZURE_BOARDS_LABEL, AzureBoardsDescriptor.AZURE_BOARDS_DESCRIPTION, AzureBoardsDescriptor.AZURE_BOARDS_URL);\n+        this.encryptionValidator = encryptionValidator;\n+    }\n+\n+    @Override\n+    public List<ConfigField> createFields() {\n+        ConfigField azureBoardsUrlField = new URLInputConfigField(AzureBoardsDescriptor.KEY_AZURE_BOARDS_URL, LABEL_AZURE_BOARDS_URL, DESCRIPTION_AZURE_BOARDS_URL).applyRequired(true);\n+        ConfigField organizationName = new TextInputConfigField(AzureBoardsDescriptor.KEY_ORGANIZATION_NAME, LABEL_ORGANIZATION_NAME, DESCRIPTION_ORGANIZATION_NAME).applyRequired(true);\n+        ConfigField consumerKey = new PasswordConfigField(AzureBoardsDescriptor.KEY_CONSUMER_KEY, LABEL_CONSUMER_KEY, DESCRIPTION_CONSUMER_KEY, encryptionValidator).applyRequired(true);\n+        ConfigField privateKey = new PasswordConfigField(AzureBoardsDescriptor.KEY_PRIVATE_KEY, LABEL_PRIVATE_KEY, DESCRIPTION_PRIVATE_KEY, encryptionValidator).applyRequired(true);\n+        ConfigField configureOAuth = new EndpointButtonField(AzureBoardsDescriptor.KEY_OAUTH, LABEL_OAUTH, DESCRIPTION_OAUTH, BUTTON_LABEL_OAUTH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0de7ebebee907040db59aa4feff2ee7cd76d59a"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3ODM1Nw==", "bodyText": "I agree with Paulo, can you setup a custom endpoint so when the button is pushed it logs a message for now, that way we can easily add the implementation later.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1047#discussion_r450378357", "createdAt": "2020-07-06T17:36:46Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsGlobalUIConfig.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.descriptor;\n+\n+import java.util.List;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.descriptor.config.field.ConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.PasswordConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.TextInputConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.URLInputConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.endpoint.EndpointButtonField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.validators.EncryptionValidator;\n+import com.synopsys.integration.alert.common.descriptor.config.ui.UIConfig;\n+\n+@Component\n+public class AzureBoardsGlobalUIConfig extends UIConfig {\n+    public static final String LABEL_AZURE_BOARDS_URL = \"Url\";\n+    public static final String LABEL_ORGANIZATION_NAME = \"Organization Name\";\n+    public static final String LABEL_CONSUMER_KEY = \"Consumer Key\";\n+    public static final String LABEL_PRIVATE_KEY = \"Private Key\";\n+    public static final String LABEL_OAUTH = \"Initialize OAuth\";\n+    public static final String LABEL_ACCESS_TOKEN = \"Access Token\";\n+\n+    public static final String DESCRIPTION_AZURE_BOARDS_URL = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_ORGANIZATION_NAME = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_CONSUMER_KEY = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_PRIVATE_KEY = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_OAUTH = \"FILL OUT THIS DESCRIPTION\";\n+    public static final String DESCRIPTION_ACCESS_TOKEN = \"FILL OUT THIS DESCRIPTION\";\n+\n+    public static final String BUTTON_LABEL_OAUTH = \"FILL OUT THIS BUTTON LABEL\";\n+\n+    private final EncryptionValidator encryptionValidator;\n+\n+    @Autowired\n+    public AzureBoardsGlobalUIConfig(EncryptionValidator encryptionValidator) {\n+        super(AzureBoardsDescriptor.AZURE_BOARDS_LABEL, AzureBoardsDescriptor.AZURE_BOARDS_DESCRIPTION, AzureBoardsDescriptor.AZURE_BOARDS_URL);\n+        this.encryptionValidator = encryptionValidator;\n+    }\n+\n+    @Override\n+    public List<ConfigField> createFields() {\n+        ConfigField azureBoardsUrlField = new URLInputConfigField(AzureBoardsDescriptor.KEY_AZURE_BOARDS_URL, LABEL_AZURE_BOARDS_URL, DESCRIPTION_AZURE_BOARDS_URL).applyRequired(true);\n+        ConfigField organizationName = new TextInputConfigField(AzureBoardsDescriptor.KEY_ORGANIZATION_NAME, LABEL_ORGANIZATION_NAME, DESCRIPTION_ORGANIZATION_NAME).applyRequired(true);\n+        ConfigField consumerKey = new PasswordConfigField(AzureBoardsDescriptor.KEY_CONSUMER_KEY, LABEL_CONSUMER_KEY, DESCRIPTION_CONSUMER_KEY, encryptionValidator).applyRequired(true);\n+        ConfigField privateKey = new PasswordConfigField(AzureBoardsDescriptor.KEY_PRIVATE_KEY, LABEL_PRIVATE_KEY, DESCRIPTION_PRIVATE_KEY, encryptionValidator).applyRequired(true);\n+        ConfigField configureOAuth = new EndpointButtonField(AzureBoardsDescriptor.KEY_OAUTH, LABEL_OAUTH, DESCRIPTION_OAUTH, BUTTON_LABEL_OAUTH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1ODUzNA=="}, "originalCommit": {"oid": "b0de7ebebee907040db59aa4feff2ee7cd76d59a"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzc5NzM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsDescriptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowNjoyNlrOGtf8_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzozNjowMFrOGtg43g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MjYyMA==", "bodyText": "We might want to use some variables for prefixes. This method of writing the entire KEY name is prone to error.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1047#discussion_r450362620", "createdAt": "2020-07-06T17:06:26Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsDescriptor.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.descriptor;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.channel.azure.boards.AzureBoardsChannelKey;\n+import com.synopsys.integration.alert.common.descriptor.ChannelDescriptor;\n+\n+@Component\n+public class AzureBoardsDescriptor extends ChannelDescriptor {\n+    public static final String KEY_AZURE_PROJECT = \"channel.azure.boards.project\";\n+    public static final String KEY_AZURE_BOARD = \"channel.azure.boards.board\";\n+    public static final String KEY_WORK_ITEM_TYPE = \"channel.azure.boards.work.item.type\";\n+    public static final String KEY_WORK_ITEM_COMPLETED_STATE = \"channel.azure.boards.work.item.completed.state\";\n+    public static final String KEY_WORK_ITEM_REOPEN_STATE = \"channel.azure.boards.work.item.reopen.state\";\n+\n+    public static final String KEY_AZURE_BOARDS_URL = \"azure.boards.url\";\n+    public static final String KEY_ORGANIZATION_NAME = \"azure.boards.organization.name\";\n+    public static final String KEY_CONSUMER_KEY = \"azure.boards.consumer.key\";\n+    public static final String KEY_PRIVATE_KEY = \"azure.boards.private.key\";\n+    public static final String KEY_OAUTH = \"azure.boards.oauth\";\n+    public static final String KEY_ACCESS_TOKEN = \"azure.boards.access.token\";\n+\n+    public static final String AZURE_BOARDS_LABEL = \"Azure Boards\";\n+    public static final String AZURE_BOARDS_URL = \"azure_boards\";\n+    public static final String AZURE_BOARDS_DESCRIPTION = \"Configure the Azure Boards instance that Alert will send issue updates to.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0de7ebebee907040db59aa4feff2ee7cd76d59a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3Nzk1MA==", "bodyText": "Please create static strings to use as the prefixes for the keys. That way each key only needs to add its unique part", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1047#discussion_r450377950", "createdAt": "2020-07-06T17:36:00Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsDescriptor.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.descriptor;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.channel.azure.boards.AzureBoardsChannelKey;\n+import com.synopsys.integration.alert.common.descriptor.ChannelDescriptor;\n+\n+@Component\n+public class AzureBoardsDescriptor extends ChannelDescriptor {\n+    public static final String KEY_AZURE_PROJECT = \"channel.azure.boards.project\";\n+    public static final String KEY_AZURE_BOARD = \"channel.azure.boards.board\";\n+    public static final String KEY_WORK_ITEM_TYPE = \"channel.azure.boards.work.item.type\";\n+    public static final String KEY_WORK_ITEM_COMPLETED_STATE = \"channel.azure.boards.work.item.completed.state\";\n+    public static final String KEY_WORK_ITEM_REOPEN_STATE = \"channel.azure.boards.work.item.reopen.state\";\n+\n+    public static final String KEY_AZURE_BOARDS_URL = \"azure.boards.url\";\n+    public static final String KEY_ORGANIZATION_NAME = \"azure.boards.organization.name\";\n+    public static final String KEY_CONSUMER_KEY = \"azure.boards.consumer.key\";\n+    public static final String KEY_PRIVATE_KEY = \"azure.boards.private.key\";\n+    public static final String KEY_OAUTH = \"azure.boards.oauth\";\n+    public static final String KEY_ACCESS_TOKEN = \"azure.boards.access.token\";\n+\n+    public static final String AZURE_BOARDS_LABEL = \"Azure Boards\";\n+    public static final String AZURE_BOARDS_URL = \"azure_boards\";\n+    public static final String AZURE_BOARDS_DESCRIPTION = \"Configure the Azure Boards instance that Alert will send issue updates to.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2MjYyMA=="}, "originalCommit": {"oid": "b0de7ebebee907040db59aa4feff2ee7cd76d59a"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzgwNTkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsGlobalUIConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowODo1OVrOGtgCKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowODo1OVrOGtgCKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2Mzk0NQ==", "bodyText": "At least a FIXME should be added here just so we are aware this isn't finished yet.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1047#discussion_r450363945", "createdAt": "2020-07-06T17:08:59Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsGlobalUIConfig.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.descriptor;\n+\n+import java.util.List;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.descriptor.config.field.ConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.PasswordConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.TextInputConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.URLInputConfigField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.endpoint.EndpointButtonField;\n+import com.synopsys.integration.alert.common.descriptor.config.field.validators.EncryptionValidator;\n+import com.synopsys.integration.alert.common.descriptor.config.ui.UIConfig;\n+\n+@Component\n+public class AzureBoardsGlobalUIConfig extends UIConfig {\n+    public static final String LABEL_AZURE_BOARDS_URL = \"Url\";\n+    public static final String LABEL_ORGANIZATION_NAME = \"Organization Name\";\n+    public static final String LABEL_CONSUMER_KEY = \"Consumer Key\";\n+    public static final String LABEL_PRIVATE_KEY = \"Private Key\";\n+    public static final String LABEL_OAUTH = \"Initialize OAuth\";\n+    public static final String LABEL_ACCESS_TOKEN = \"Access Token\";\n+\n+    public static final String DESCRIPTION_AZURE_BOARDS_URL = \"FILL OUT THIS DESCRIPTION\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0de7ebebee907040db59aa4feff2ee7cd76d59a"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDcxNjIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsDescriptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoxODowMFrOGt75lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoxODowMFrOGt75lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyMDUwMQ==", "bodyText": "Do we have a constant we can use for the \".channel\" prefix?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1047#discussion_r450820501", "createdAt": "2020-07-07T12:18:00Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsDescriptor.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.descriptor;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.channel.azure.boards.AzureBoardsChannelKey;\n+import com.synopsys.integration.alert.common.descriptor.ChannelDescriptor;\n+\n+@Component\n+public class AzureBoardsDescriptor extends ChannelDescriptor {\n+    public static final String AZURE_BOARDS_PREFIX = \"azure.boards\";\n+\n+    public static final String KEY_AZURE_PROJECT = \"channel.\" + AZURE_BOARDS_PREFIX + \".project\";\n+    public static final String KEY_AZURE_BOARD = \"channel.\" + AZURE_BOARDS_PREFIX + \".board\";\n+    public static final String KEY_WORK_ITEM_TYPE = \"channel.\" + AZURE_BOARDS_PREFIX + \".work.item.type\";\n+    public static final String KEY_WORK_ITEM_COMPLETED_STATE = \"channel.\" + AZURE_BOARDS_PREFIX + \".work.item.completed.state\";\n+    public static final String KEY_WORK_ITEM_REOPEN_STATE = \"channel.\" + AZURE_BOARDS_PREFIX + \".work.item.reopen.state\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce5ef888d2c46d98ada758f25ea2a2a9d8bf15c3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDcyMjM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsDescriptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoxOTo1N1rOGt79Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoxOTo1N1rOGt79Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyMTQ1OQ==", "bodyText": "We may only end up needing the access token because it is OAuth 2.0. Do you mind adding a TODO above line 43 to revisit these fields?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1047#discussion_r450821459", "createdAt": "2020-07-07T12:19:57Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsDescriptor.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.descriptor;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.channel.azure.boards.AzureBoardsChannelKey;\n+import com.synopsys.integration.alert.common.descriptor.ChannelDescriptor;\n+\n+@Component\n+public class AzureBoardsDescriptor extends ChannelDescriptor {\n+    public static final String AZURE_BOARDS_PREFIX = \"azure.boards\";\n+\n+    public static final String KEY_AZURE_PROJECT = \"channel.\" + AZURE_BOARDS_PREFIX + \".project\";\n+    public static final String KEY_AZURE_BOARD = \"channel.\" + AZURE_BOARDS_PREFIX + \".board\";\n+    public static final String KEY_WORK_ITEM_TYPE = \"channel.\" + AZURE_BOARDS_PREFIX + \".work.item.type\";\n+    public static final String KEY_WORK_ITEM_COMPLETED_STATE = \"channel.\" + AZURE_BOARDS_PREFIX + \".work.item.completed.state\";\n+    public static final String KEY_WORK_ITEM_REOPEN_STATE = \"channel.\" + AZURE_BOARDS_PREFIX + \".work.item.reopen.state\";\n+\n+    public static final String KEY_AZURE_BOARDS_URL = AZURE_BOARDS_PREFIX + \".url\";\n+    public static final String KEY_ORGANIZATION_NAME = AZURE_BOARDS_PREFIX + \".organization.name\";\n+    public static final String KEY_CONSUMER_KEY = AZURE_BOARDS_PREFIX + \".consumer.key\";\n+    public static final String KEY_PRIVATE_KEY = AZURE_BOARDS_PREFIX + \".private.key\";\n+    public static final String KEY_OAUTH = AZURE_BOARDS_PREFIX + \".oauth\";\n+    public static final String KEY_ACCESS_TOKEN = AZURE_BOARDS_PREFIX + \".access.token\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce5ef888d2c46d98ada758f25ea2a2a9d8bf15c3"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1866, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}