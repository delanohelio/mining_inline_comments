{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4OTIxNjE0", "number": 1158, "title": "Ps function controllers", "bodyText": "Rename CustomEndpoint to CustomFunctionAction.\nCreate controllers for each custom function api.\nCreate an abstract Controller for the custom functions.\nRemove the different types of CustomEndpoint classes just use CustomEndpoint\nRefactor the existing classes to the new structure.\n\nUse this to give me an initial set of ideas that I've written down to be applied to the other actions and controllers in a different pull request in the future.", "createdAt": "2020-09-03T20:26:01Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158", "merged": true, "mergeCommit": {"oid": "63924b49086b623fa93b2395a4d31da918e82222"}, "closed": true, "closedAt": "2020-09-04T17:03:48Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFBMSbgH2gAyNDc4OTIxNjE0Ojk2ZDA1NTE5YzkyZjMxYjYxM2NmZGMzMGMyY2RmYzVmMzFhODNhYTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFndDIgH2gAyNDc4OTIxNjE0OmZiOGUxNTA4OTg1ZWE1NmQyODJhMWQyYzFhZDM3ZmQwNDliZmNiYjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "96d05519c92f31b613cfdc30c2cdfc5f31a83aa3", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/96d05519c92f31b613cfdc30c2cdfc5f31a83aa3", "committedDate": "2020-09-02T19:30:11Z", "message": "Refactor: Move the custom endpoints in the action package."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "978367c24ce6fc030077e702c0d40fa6f894a723", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/978367c24ce6fc030077e702c0d40fa6f894a723", "committedDate": "2020-09-03T15:41:34Z", "message": "refactor: Create controllers for each custom endpoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b54107fc5a99b54e529beb507e82a2cf9e480126", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b54107fc5a99b54e529beb507e82a2cf9e480126", "committedDate": "2020-09-03T17:11:33Z", "message": "refactor: Remove the CustomEndpointManager class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261daefafa7df23b217acedf4312dbebb5a81882", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/261daefafa7df23b217acedf4312dbebb5a81882", "committedDate": "2020-09-03T17:12:54Z", "message": "refactor: Remove CustomEndpointManager from common project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f29bd3a7c76318f834fe29657db615b08e5f7054", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f29bd3a7c76318f834fe29657db615b08e5f7054", "committedDate": "2020-09-03T20:00:18Z", "message": "refactor: Only have the CustomEndpoint class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "054516d8f0ac7961b50d6faee9b11b9d26816f85", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/054516d8f0ac7961b50d6faee9b11b9d26816f85", "committedDate": "2020-09-03T20:08:53Z", "message": "refactor: Rename ActionResult to ActionResponse."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2baa7161c8a41872d577115c34493308286385af", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2baa7161c8a41872d577115c34493308286385af", "committedDate": "2020-09-03T20:19:49Z", "message": "Rename CustomEndpoint to CustomFunctionAction and move to action package."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTkzMTg3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#pullrequestreview-482593187", "createdAt": "2020-09-04T12:01:47Z", "commit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowMTo0N1rOHNK4_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowMTo0N1rOHNK4_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3MTk2NA==", "bodyText": "In ResponseStatusException, the message parameter in @Nullable. We should use .orElse(null) here so that the default message for the HttpStatus will be used by the exception.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#discussion_r483571964", "createdAt": "2020-09-04T12:01:47Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/rest/ResponseFactory.java", "diffHunk": "@@ -75,6 +75,18 @@ public static ResponseStatusException createNotImplementedException(@Nullable St\n         return new ResponseStatusException(HttpStatus.NOT_IMPLEMENTED, customMessage);\n     }\n \n+    public static <T> ResponseStatusException createStatusException(ActionResponse<T> actionResponse) {\n+        String customMessage = actionResponse.getMessage().orElse(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTk0MzUy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#pullrequestreview-482594352", "createdAt": "2020-09-04T12:03:44Z", "commit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowMzo0NFrOHNK8Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowMzo0NFrOHNK8Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3Mjc1OA==", "bodyText": "For the sake of consistency, it might be nice to wrap the List<LabelValueSelectOption> in an object.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#discussion_r483572758", "createdAt": "2020-09-04T12:03:44Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/ui/ProviderSelectCustomFunctionAction.java", "diffHunk": "@@ -27,35 +27,39 @@\n import java.util.stream.Collectors;\n \n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n \n-import com.synopsys.integration.alert.common.action.CustomEndpointManager;\n+import com.synopsys.integration.alert.common.action.ActionResponse;\n+import com.synopsys.integration.alert.common.action.CustomFunctionAction;\n import com.synopsys.integration.alert.common.descriptor.DescriptorMap;\n import com.synopsys.integration.alert.common.descriptor.config.field.LabelValueSelectOption;\n-import com.synopsys.integration.alert.common.descriptor.config.field.endpoint.SelectCustomEndpoint;\n import com.synopsys.integration.alert.common.enumeration.ConfigContextEnum;\n import com.synopsys.integration.alert.common.enumeration.DescriptorType;\n-import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.common.rest.HttpServletContentWrapper;\n import com.synopsys.integration.alert.common.rest.model.FieldModel;\n+import com.synopsys.integration.alert.common.security.authorization.AuthorizationManager;\n+import com.synopsys.integration.exception.IntegrationException;\n \n @Component\n-public class ProviderSelectCustomEndpoint extends SelectCustomEndpoint {\n+public class ProviderSelectCustomFunctionAction extends CustomFunctionAction<List<LabelValueSelectOption>> {\n     private DescriptorMap descriptorMap;\n \n     @Autowired\n-    public ProviderSelectCustomEndpoint(CustomEndpointManager customEndpointManager, DescriptorMap descriptorMap) throws AlertException {\n-        super(ChannelDistributionUIConfig.KEY_PROVIDER_NAME, customEndpointManager);\n+    public ProviderSelectCustomFunctionAction(AuthorizationManager authorizationManager, DescriptorMap descriptorMap) {\n+        super(authorizationManager);\n         this.descriptorMap = descriptorMap;\n     }\n \n     @Override\n-    protected List<LabelValueSelectOption> createData(FieldModel fieldModel) throws AlertException {\n-        return descriptorMap.getDescriptorByType(DescriptorType.PROVIDER).stream()\n-                   .map(descriptor -> descriptor.createMetaData(ConfigContextEnum.DISTRIBUTION))\n-                   .flatMap(Optional::stream)\n-                   .map(descriptorMetadata -> new LabelValueSelectOption(descriptorMetadata.getLabel(), descriptorMetadata.getName()))\n-                   .sorted()\n-                   .collect(Collectors.toList());\n+    public ActionResponse<List<LabelValueSelectOption>> createActionResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) throws IntegrationException {\n+        List<LabelValueSelectOption> content = descriptorMap.getDescriptorByType(DescriptorType.PROVIDER).stream()\n+                                                   .map(descriptor -> descriptor.createMetaData(ConfigContextEnum.DISTRIBUTION))\n+                                                   .flatMap(Optional::stream)\n+                                                   .map(descriptorMetadata -> new LabelValueSelectOption(descriptorMetadata.getLabel(), descriptorMetadata.getName()))\n+                                                   .sorted()\n+                                                   .collect(Collectors.toList());\n+        return new ActionResponse<>(HttpStatus.OK, content);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTk0OTky", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#pullrequestreview-482594992", "createdAt": "2020-09-04T12:04:50Z", "commit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowNDo1MFrOHNK93A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowNDo1MFrOHNK93A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3MzIxMg==", "bodyText": "It might be nice to wrap the List<ProviderProject>.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#discussion_r483573212", "createdAt": "2020-09-04T12:04:50Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/ui/ProviderDistributionCustomFunctionAction.java", "diffHunk": "@@ -30,34 +30,38 @@\n import org.springframework.stereotype.Component;\n import org.springframework.web.server.ResponseStatusException;\n \n-import com.synopsys.integration.alert.common.action.CustomEndpointManager;\n+import com.synopsys.integration.alert.common.action.ActionResponse;\n+import com.synopsys.integration.alert.common.action.CustomFunctionAction;\n import com.synopsys.integration.alert.common.descriptor.ProviderDescriptor;\n-import com.synopsys.integration.alert.common.descriptor.config.field.endpoint.table.TableSelectCustomEndpoint;\n-import com.synopsys.integration.alert.common.exception.AlertException;\n import com.synopsys.integration.alert.common.persistence.accessor.ProviderDataAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.ProviderProject;\n+import com.synopsys.integration.alert.common.rest.HttpServletContentWrapper;\n import com.synopsys.integration.alert.common.rest.model.FieldModel;\n+import com.synopsys.integration.alert.common.security.authorization.AuthorizationManager;\n+import com.synopsys.integration.exception.IntegrationException;\n \n @Component\n-public class ProviderDistributionCustomEndpoint extends TableSelectCustomEndpoint {\n+public class ProviderDistributionCustomFunctionAction extends CustomFunctionAction<List<ProviderProject>> {\n     private static final String MISSING_PROVIDER_ERROR = \"Provider name is required to retrieve projects.\";\n \n     private final ProviderDataAccessor providerDataAccessor;\n \n     @Autowired\n-    public ProviderDistributionCustomEndpoint(CustomEndpointManager customEndpointManager, ProviderDataAccessor providerDataAccessor) throws AlertException {\n-        super(ProviderDistributionUIConfig.KEY_CONFIGURED_PROJECT, customEndpointManager);\n+    public ProviderDistributionCustomFunctionAction(AuthorizationManager authorizationManager, ProviderDataAccessor providerDataAccessor) {\n+        super(authorizationManager);\n         this.providerDataAccessor = providerDataAccessor;\n     }\n \n     @Override\n-    protected List<?> createData(FieldModel fieldModel) throws ResponseStatusException {\n+    public ActionResponse<List<ProviderProject>> createActionResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) throws IntegrationException {\n         String providerName = fieldModel.getFieldValue(ChannelDistributionUIConfig.KEY_PROVIDER_NAME).orElse(\"\");\n         if (StringUtils.isBlank(providerName)) {\n             throw new ResponseStatusException(HttpStatus.BAD_REQUEST, MISSING_PROVIDER_ERROR);\n         }\n \n         String providerConfigName = fieldModel.getFieldValue(ProviderDescriptor.KEY_PROVIDER_CONFIG_NAME).orElse(\"\");\n-        return providerDataAccessor.getProjectsByProviderConfigName(providerConfigName);\n+        List<ProviderProject> content = providerDataAccessor.getProjectsByProviderConfigName(providerConfigName);\n+        return new ActionResponse<>(HttpStatus.OK, content);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTk2NDgw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#pullrequestreview-482596480", "createdAt": "2020-09-04T12:07:27Z", "commit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowNzoyN1rOHNLCbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjowNzoyN1rOHNLCbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3NDM4Mg==", "bodyText": "I'm working backwards here, but we might want to rethink content being a List. It adds one more step to the controller for enforcing the pattern of an API always returning a JSON Object.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#discussion_r483574382", "createdAt": "2020-09-04T12:07:27Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/ui/ProviderConfigSelectCustomFunctionAction.java", "diffHunk": "@@ -27,47 +27,51 @@\n import java.util.stream.Collectors;\n \n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Component;\n \n-import com.synopsys.integration.alert.common.action.CustomEndpointManager;\n+import com.synopsys.integration.alert.common.action.ActionResponse;\n+import com.synopsys.integration.alert.common.action.CustomFunctionAction;\n import com.synopsys.integration.alert.common.descriptor.DescriptorKey;\n import com.synopsys.integration.alert.common.descriptor.DescriptorMap;\n import com.synopsys.integration.alert.common.descriptor.ProviderDescriptor;\n import com.synopsys.integration.alert.common.descriptor.config.field.LabelValueSelectOption;\n-import com.synopsys.integration.alert.common.descriptor.config.field.endpoint.SelectCustomEndpoint;\n import com.synopsys.integration.alert.common.enumeration.ConfigContextEnum;\n-import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.common.exception.AlertDatabaseConstraintException;\n import com.synopsys.integration.alert.common.persistence.accessor.ConfigurationAccessor;\n import com.synopsys.integration.alert.common.persistence.accessor.FieldAccessor;\n import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n+import com.synopsys.integration.alert.common.rest.HttpServletContentWrapper;\n import com.synopsys.integration.alert.common.rest.model.FieldModel;\n+import com.synopsys.integration.alert.common.security.authorization.AuthorizationManager;\n \n @Component\n-public class ProviderConfigSelectCustomEndpoint extends SelectCustomEndpoint {\n+public class ProviderConfigSelectCustomFunctionAction extends CustomFunctionAction<List<LabelValueSelectOption>> {\n     private final ConfigurationAccessor configurationAccessor;\n     private final DescriptorMap descriptorMap;\n \n     @Autowired\n-    public ProviderConfigSelectCustomEndpoint(CustomEndpointManager customEndpointManager, ConfigurationAccessor configurationAccessor, DescriptorMap descriptorMap) throws AlertException {\n-        super(ProviderDescriptor.KEY_PROVIDER_CONFIG_NAME, customEndpointManager);\n+    public ProviderConfigSelectCustomFunctionAction(AuthorizationManager authorizationManager, ConfigurationAccessor configurationAccessor, DescriptorMap descriptorMap) {\n+        super(authorizationManager);\n         this.configurationAccessor = configurationAccessor;\n         this.descriptorMap = descriptorMap;\n     }\n \n     @Override\n-    protected List<LabelValueSelectOption> createData(FieldModel fieldModel) throws AlertException {\n+    public ActionResponse<List<LabelValueSelectOption>> createActionResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) throws AlertDatabaseConstraintException {\n         String providerName = fieldModel.getDescriptorName();\n         Optional<DescriptorKey> descriptorKey = descriptorMap.getDescriptorKey(providerName);\n+        List<LabelValueSelectOption> content = List.of();\n         if (descriptorKey.isPresent()) {\n             List<ConfigurationModel> configurationModels = configurationAccessor.getConfigurationsByDescriptorKeyAndContext(descriptorKey.get(), ConfigContextEnum.GLOBAL);\n-            return configurationModels.stream()\n-                       .map(ConfigurationModel::getCopyOfKeyToFieldMap)\n-                       .map(FieldAccessor::new)\n-                       .map(accessor -> accessor.getString(ProviderDescriptor.KEY_PROVIDER_CONFIG_NAME))\n-                       .flatMap(Optional::stream)\n-                       .map(LabelValueSelectOption::new)\n-                       .collect(Collectors.toList());\n+            content = configurationModels.stream()\n+                          .map(ConfigurationModel::getCopyOfKeyToFieldMap)\n+                          .map(FieldAccessor::new)\n+                          .map(accessor -> accessor.getString(ProviderDescriptor.KEY_PROVIDER_CONFIG_NAME))\n+                          .flatMap(Optional::stream)\n+                          .map(LabelValueSelectOption::new)\n+                          .collect(Collectors.toList());\n         }\n-        return List.of();\n+        return new ActionResponse<>(HttpStatus.OK, content);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjAwODky", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#pullrequestreview-482600892", "createdAt": "2020-09-04T12:14:27Z", "commit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjoxNDoyN1rOHNLPNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjoxNDoyN1rOHNLPNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3NzY1Mg==", "bodyText": "Does this inherit the @RequestMapping from the sub-class?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#discussion_r483577652", "createdAt": "2020-09-04T12:14:27Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/functions/AbstractFunctionController.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.web.api.functions;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+\n+import com.synopsys.integration.alert.common.action.ActionResponse;\n+import com.synopsys.integration.alert.common.action.CustomFunctionAction;\n+import com.synopsys.integration.alert.common.rest.HttpServletContentWrapper;\n+import com.synopsys.integration.alert.common.rest.ResponseFactory;\n+import com.synopsys.integration.alert.common.rest.model.FieldModel;\n+import com.synopsys.integration.alert.web.common.BaseController;\n+\n+public abstract class AbstractFunctionController<T> extends BaseController {\n+    public static final String API_FUNCTION_URL = CustomFunctionAction.API_FUNCTION_URL;\n+    private final CustomFunctionAction<T> functionAction;\n+\n+    public AbstractFunctionController(CustomFunctionAction<T> functionAction) {\n+        this.functionAction = functionAction;\n+    }\n+\n+    @PostMapping", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2baa7161c8a41872d577115c34493308286385af"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f1b9ce03ecd0175de22e3f938b74a0beba79a0c", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4f1b9ce03ecd0175de22e3f938b74a0beba79a0c", "committedDate": "2020-09-04T13:09:06Z", "message": "refactor: Have the ResponseFactory set message default to null."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91b98531b66318957abacfbb6646803ebcfed3c3", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/91b98531b66318957abacfbb6646803ebcfed3c3", "committedDate": "2020-09-04T13:10:17Z", "message": "refactor: Create response objects for the select options."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e64cbae0712409eefabb4bac7893b2ef82fd75eb", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e64cbae0712409eefabb4bac7893b2ef82fd75eb", "committedDate": "2020-09-04T13:45:57Z", "message": "refactor: Change the custom functions using lists to return objects."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "712aceb7cfc0c7e3fea272fad4ca07e0e054b7cb", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/712aceb7cfc0c7e3fea272fad4ca07e0e054b7cb", "committedDate": "2020-09-04T13:47:14Z", "message": "Merge remote-tracking branch 'origin/feat_action_response' into ps_function_controllers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29bd761870c4240dd20b74d11aadad167ee63c86", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/29bd761870c4240dd20b74d11aadad167ee63c86", "committedDate": "2020-09-04T14:01:44Z", "message": "chore: Add copyright headers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e7b1f3a1d329cee5ca26abf056b836aee59b898", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3e7b1f3a1d329cee5ca26abf056b836aee59b898", "committedDate": "2020-09-04T14:07:14Z", "message": "Merge remote-tracking branch 'origin/ps_function_controllers' into ps_function_select_options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c7492c2a2a94eb274ba378392306ac03002b8f8", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8c7492c2a2a94eb274ba378392306ac03002b8f8", "committedDate": "2020-09-04T14:22:07Z", "message": "chore: Add copyright headers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNzI1MTY1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1158#pullrequestreview-482725165", "createdAt": "2020-09-04T15:00:01Z", "commit": {"oid": "29bd761870c4240dd20b74d11aadad167ee63c86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c451757e588fd17ec4daa1d84675533391495779", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/c451757e588fd17ec4daa1d84675533391495779", "committedDate": "2020-09-04T15:27:48Z", "message": "refactor: Fix the email address selection and enforce an options field is JSON."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb8e1508985ea56d282a1d2c1ad37fd049bfcbb9", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/fb8e1508985ea56d282a1d2c1ad37fd049bfcbb9", "committedDate": "2020-09-04T16:04:53Z", "message": "Merge pull request #1160 from blackducksoftware/ps_function_select_options\n\nUpdate the select options to use an object instead of List<type>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3454, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}