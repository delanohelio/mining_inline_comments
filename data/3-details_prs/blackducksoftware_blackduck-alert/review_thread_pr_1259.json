{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNzc0MjU5", "number": 1259, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxODo1MDo0MVrOE4ynxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoyODo1MVrOE40gAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTg1MDk1OnYy", "diffSide": "RIGHT", "path": "web/src/main/java/com/synopsys/integration/alert/web/api/provider/project/ProviderProjectCustomFunctionAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxODo1MDo0MVrOHy7DSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxODo1NDoyNVrOHy7K8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE1ODM0NQ==", "bodyText": "We don't have to change this in this version of Alert but I think this is a good argument for getting rid of the dynamic endpoints and just create controllers/endpoints as we need. Having to extract the parameters this way is not appealing.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1259#discussion_r523158345", "createdAt": "2020-11-13T18:50:41Z", "author": {"login": "jamesrichard91"}, "path": "web/src/main/java/com/synopsys/integration/alert/web/api/provider/project/ProviderProjectCustomFunctionAction.java", "diffHunk": "@@ -60,23 +67,48 @@ public ProviderProjectCustomFunctionAction(AuthorizationManager authorizationMan\n \n     @Override\n     public ActionResponse<ProviderProjectOptions> createActionResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) {\n+        HttpServletRequest httpRequest = servletContentWrapper.getHttpRequest();\n+        Map<String, String[]> parameterMap = httpRequest.getParameterMap();\n+\n+        int pageNumber = extractPagingParam(parameterMap, \"pageNumber\", 0);\n+        int pageSize = extractPagingParam(parameterMap, \"pageSize\", 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c837883952ac7fcc760bf58e86851bc63a0e560"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MDMwNg==", "bodyText": "Agreed. I think it will be part of a larger effort to rewrite the Jobs UI to have tightly coupled channel endpoints.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1259#discussion_r523160306", "createdAt": "2020-11-13T18:54:25Z", "author": {"login": "gkillough"}, "path": "web/src/main/java/com/synopsys/integration/alert/web/api/provider/project/ProviderProjectCustomFunctionAction.java", "diffHunk": "@@ -60,23 +67,48 @@ public ProviderProjectCustomFunctionAction(AuthorizationManager authorizationMan\n \n     @Override\n     public ActionResponse<ProviderProjectOptions> createActionResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) {\n+        HttpServletRequest httpRequest = servletContentWrapper.getHttpRequest();\n+        Map<String, String[]> parameterMap = httpRequest.getParameterMap();\n+\n+        int pageNumber = extractPagingParam(parameterMap, \"pageNumber\", 0);\n+        int pageSize = extractPagingParam(parameterMap, \"pageSize\", 10);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE1ODM0NQ=="}, "originalCommit": {"oid": "7c837883952ac7fcc760bf58e86851bc63a0e560"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDE1ODc0OnYy", "diffSide": "RIGHT", "path": "ui/src/main/js/field/input/TableSelectInput.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoyODo1MVrOHy99iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMDoyODo1MVrOHy99iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIwNjAyNA==", "bodyText": "We cannot support \"missing\" data with paging because the data could be in a different page that has yet to be retrieved.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1259#discussion_r523206024", "createdAt": "2020-11-13T20:28:51Z", "author": {"login": "gkillough"}, "path": "ui/src/main/js/field/input/TableSelectInput.js", "diffHunk": "@@ -72,51 +75,30 @@ class TableSelectInput extends Component {\n         this.state = {\n             progress: false,\n             showTable: false,\n+            currentPage: 1,\n+            currentPageSize: 10,\n+            totalPageCount: 0,\n+            currentSearchTerm: '',\n             data: [],\n             selectedData: [],\n             displayedData: [],\n             showClearConfirm: false\n         };\n     }\n \n-    // FIXME componentWillMount is deprecated, use the constructor or componentDidMount to initialize this\n-    componentWillMount() {\n-        const { value } = this.props;\n-        if (value && value.length > 0) {\n-            this.retrieveTableData().then(() => {\n-                this.updateSelectedValues();\n-            });\n-        }\n-    }\n-\n-    componentDidUpdate(prevProps) {\n-        const { value } = this.props;\n-        const prevSize = prevProps.value && prevProps.value.length === 0;\n-        const currentSize = value && value.length > 0;\n-        const emptySelected = this.state.selectedData.length === 0;\n-        if (prevSize && currentSize && emptySelected) {\n-            if (this.state.data.length == 0) {\n-                this.retrieveTableData().then(() => {\n-                    this.updateSelectedValues();\n-                });\n-            } else {\n-                this.updateSelectedValues();\n-            }\n-        }\n+    componentDidMount() {\n+        this.updateSelectedValues();\n     }\n \n     updateSelectedValues() {\n         const { value } = this.props;\n-        const { selectedData, data } = this.state;\n+        const { selectedData } = this.state;\n         selectedData.push(...value);\n-        const keyColumnHeader = this.props.columns.find((column) => column.isKey).header;\n         const convertedValues = selectedData.map((selected) => {\n-            const columnContainsValue = data.map((dataValue) => dataValue[keyColumnHeader])\n-                .includes(selected);\n             return {\n                 label: selected,\n                 value: selected,\n-                missing: !columnContainsValue\n+                missing: false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c837883952ac7fcc760bf58e86851bc63a0e560"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2200, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}