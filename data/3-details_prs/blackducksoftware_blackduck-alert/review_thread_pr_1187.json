{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNDYzMDIy", "number": 1187, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNTowNFrOEnFvSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNTowNFrOEnFvSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDIzOTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/web/api/home/HomeController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNTowNFrOHXfa2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNTowNTowNFrOHXfa2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5NDA3NA==", "bodyText": "Small thing, but a multiline comment would probably be better here.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1187#discussion_r494394074", "createdAt": "2020-09-24T15:05:04Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/home/HomeController.java", "diffHunk": "@@ -28,58 +28,39 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.MediaType;\n-import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.GrantedAuthority;\n-import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.security.web.csrf.CsrfToken;\n-import org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.ResponseBody;\n import org.springframework.web.bind.annotation.ResponseStatus;\n \n import com.synopsys.integration.alert.common.rest.ResponseFactory;\n-import com.synopsys.integration.alert.web.security.authentication.saml.SAMLContext;\n \n @Controller\n public class HomeController {\n-    private static final String ROLE_ANONYMOUS = \"ROLE_ANONYMOUS\";\n-    private final HttpSessionCsrfTokenRepository csrfTokenRespository;\n-    private final SAMLContext samlContext;\n+    private final HomeActions actions;\n \n     @Autowired\n-    public HomeController(HttpSessionCsrfTokenRepository csrfTokenRepository, SAMLContext samlContext) {\n-        this.csrfTokenRespository = csrfTokenRepository;\n-        this.samlContext = samlContext;\n+    public HomeController(HomeActions actions) {\n+        this.actions = actions;\n     }\n \n     @GetMapping(value = { \"/\", \"/error\", \"/channels/**\", \"/providers/**\", \"/general/**\" }, produces = MediaType.TEXT_HTML_VALUE)\n     public String index() {\n+        // This is using Thymeleaf templating therefore we cannot return just a string from an ActionResponse otherwise the templating will not be\n+        // setup correctly and Alert will return a 404 on the main page because index.html will not be served up by this method.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b24ebb0cc019aca47e8a6484b685fefd5e8b5081"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1785, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}