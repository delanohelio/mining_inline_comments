{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxODkzMDQ4", "number": 1264, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTo0NjoxMlrOE5pfeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTo0NjoxMlrOE5pfeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODg0MDg4OnYy", "diffSide": "RIGHT", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/persistence/util/ConfigurationFieldModelConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTo0NjoxMlrOH0OtUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTo0NjoxMlrOH0OtUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUyODk3OQ==", "bodyText": "I think we might just be able to return from here.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1264#discussion_r524528979", "createdAt": "2020-11-16T19:46:12Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/persistence/util/ConfigurationFieldModelConverter.java", "diffHunk": "@@ -161,11 +167,17 @@ private void populateAndSecureFields(ConfigurationFieldModel fieldModel, Map<Str\n         fields.put(key, fieldValueModel);\n     }\n \n-    private String getDescriptorName(ConfigurationModel configurationModel) throws AlertDatabaseConstraintException {\n-        return descriptorAccessor.getRegisteredDescriptorById(configurationModel.getDescriptorId())\n-                   .map(RegisteredDescriptorModel::getName)\n-                   // FIXME this is the wrong type of exception to throw here\n-                   .orElseThrow(() -> new AlertDatabaseConstraintException(\"Expected to find registered descriptor but none was found.\"));\n+    private String getDescriptorName(ConfigurationModel configurationModel) {\n+        String descriptorName;\n+        try {\n+            descriptorName = descriptorAccessor.getRegisteredDescriptorById(configurationModel.getDescriptorId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce5e3c4097ba9186ff2b1917b36a78192e4398ce"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2205, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}