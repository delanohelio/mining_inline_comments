{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTk3MzUw", "number": 799, "title": "Ps settings fix", "bodyText": "Migrate the old ALERT_COMPONENT_SETTINGS_ environment variables for authentication to the new authentication component configuration in the database.", "createdAt": "2020-01-09T22:50:26Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799", "merged": true, "mergeCommit": {"oid": "bc69f060dc62e6276c8f610172c3e03e858c38a4"}, "closed": true, "closedAt": "2020-01-10T20:18:37Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4tFiiAH2gAyMzYxMTk3MzUwOjcwNGJmNGQ1NmQ3ZGRjNDA5MjNiMzdlNGY4ZGJlYzQ1Yjk3MTM2OTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5ENz1gH2gAyMzYxMTk3MzUwOjQwYmQ0YTZiZmJjMzg3NDQ0ZTM3NTI4NjE1NWMzOTlkZmUyOWU4MzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "704bf4d56d7ddc40923b37e4f8dbec45b9713698", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/704bf4d56d7ddc40923b37e4f8dbec45b9713698", "committedDate": "2020-01-09T17:06:28Z", "message": "Feature(startup): Add a component to migrate authentication settings."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e003de23365500bff4f49301afc825605fff1a2d", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e003de23365500bff4f49301afc825605fff1a2d", "committedDate": "2020-01-09T21:22:40Z", "message": "Fix(startup): Migrate old authentication environment variables."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22a6ad7b7baeb6110fad2bca5f3c1f70273e9ca8", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/22a6ad7b7baeb6110fad2bca5f3c1f70273e9ca8", "committedDate": "2020-01-09T22:07:48Z", "message": "Fix(startup): Add unit test for environment utility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd527f90aede584dc4dcc9139afb91b63234d24", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5cd527f90aede584dc4dcc9139afb91b63234d24", "committedDate": "2020-01-09T22:46:51Z", "message": "Fix(startup): Add the check for the environment variable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMjEyODM1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799#pullrequestreview-341212835", "createdAt": "2020-01-10T14:54:17Z", "commit": {"oid": "5cd527f90aede584dc4dcc9139afb91b63234d24"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMjU5NTQ5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799#pullrequestreview-341259549", "createdAt": "2020-01-10T16:02:03Z", "commit": {"oid": "5cd527f90aede584dc4dcc9139afb91b63234d24"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjowMjowM1rOFcYg2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjowNzozOVrOFcYrXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMwNjA3NA==", "bodyText": "This can be replaced with a method reference. Also, I generally prefer the orElse on it's own line.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799#discussion_r365306074", "createdAt": "2020-01-10T16:02:03Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/AuthenticationSettingsMigration.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.workflow.startup.component;\n+\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.descriptor.DescriptorKey;\n+import com.synopsys.integration.alert.common.descriptor.accessor.SettingsUtility;\n+import com.synopsys.integration.alert.common.enumeration.ConfigContextEnum;\n+import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.common.persistence.accessor.ConfigurationAccessor;\n+import com.synopsys.integration.alert.common.persistence.accessor.DescriptorAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationFieldModel;\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n+import com.synopsys.integration.alert.common.persistence.model.DefinedFieldModel;\n+import com.synopsys.integration.alert.common.persistence.util.ConfigurationFieldModelConverter;\n+import com.synopsys.integration.alert.common.rest.model.FieldModel;\n+import com.synopsys.integration.alert.common.rest.model.FieldValueModel;\n+import com.synopsys.integration.alert.component.authentication.descriptor.AuthenticationDescriptorKey;\n+import com.synopsys.integration.alert.component.settings.descriptor.SettingsDescriptor;\n+import com.synopsys.integration.alert.web.config.FieldModelProcessor;\n+\n+@Component\n+@Order(2)\n+// TODO Remove this class in 6.0.0\n+// TODO Revisit the order of the startup components\n+public class AuthenticationSettingsMigration extends StartupComponent {\n+    private Logger logger = LoggerFactory.getLogger(AuthenticationSettingsMigration.class);\n+    private EnvironmentVariableUtility environmentUtility;\n+    private DescriptorAccessor descriptorAccessor;\n+    private ConfigurationAccessor fieldConfigurationAccessor;\n+    private ConfigurationFieldModelConverter modelConverter;\n+    private FieldModelProcessor fieldModelProcessor;\n+    private AuthenticationDescriptorKey authenticationDescriptorKey;\n+    private SettingsUtility settingsUtility;\n+\n+    @Autowired\n+    public AuthenticationSettingsMigration(EnvironmentVariableUtility environmentUtility, DescriptorAccessor descriptorAccessor, ConfigurationAccessor fieldConfigurationAccessor,\n+        ConfigurationFieldModelConverter modelConverter, FieldModelProcessor fieldModelProcessor, AuthenticationDescriptorKey authenticationDescriptorKey, SettingsUtility settingsUtility) {\n+        this.environmentUtility = environmentUtility;\n+        this.descriptorAccessor = descriptorAccessor;\n+        this.fieldConfigurationAccessor = fieldConfigurationAccessor;\n+        this.modelConverter = modelConverter;\n+        this.fieldModelProcessor = fieldModelProcessor;\n+        this.authenticationDescriptorKey = authenticationDescriptorKey;\n+        this.settingsUtility = settingsUtility;\n+    }\n+\n+    @Override\n+    protected void initialize() {\n+        logger.info(\"Settings authentication variable migration start...\");\n+        try {\n+            List<DefinedFieldModel> fieldsForDescriptor = descriptorAccessor.getFieldsForDescriptor(authenticationDescriptorKey, ConfigContextEnum.GLOBAL).stream()\n+                                                              .sorted(Comparator.comparing(DefinedFieldModel::getKey))\n+                                                              .collect(Collectors.toList());\n+            List<ConfigurationModel> foundConfigurationModels = fieldConfigurationAccessor.getConfigurationByDescriptorKeyAndContext(authenticationDescriptorKey, ConfigContextEnum.GLOBAL);\n+\n+            Map<String, ConfigurationFieldModel> existingConfiguredFields = new HashMap<>();\n+            foundConfigurationModels.forEach(config -> existingConfiguredFields.putAll(config.getCopyOfKeyToFieldMap()));\n+\n+            Set<ConfigurationFieldModel> configurationModels = createFieldModelsFromDefinedFields(fieldsForDescriptor, existingConfiguredFields);\n+            boolean overwriteConfig = settingsUtility.getConfiguration()\n+                                          .flatMap(configurationModel -> configurationModel.getField(SettingsDescriptor.KEY_STARTUP_ENVIRONMENT_VARIABLE_OVERRIDE))\n+                                          .flatMap(ConfigurationFieldModel::getFieldValue)\n+                                          .map(value -> Boolean.valueOf(value)).orElse(Boolean.FALSE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cd527f90aede584dc4dcc9139afb91b63234d24"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMwODc2NQ==", "bodyText": "Perhaps we should make our standard steps increments of 10? That way we can fit temporary/new steps in between existing without re-ordering everything every time", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/799#discussion_r365308765", "createdAt": "2020-01-10T16:07:39Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/ConfigurationLogger.java", "diffHunk": "@@ -35,27 +35,27 @@\n import com.synopsys.integration.alert.common.rest.ProxyManager;\n \n @Component\n-@Order(4)\n+@Order(5)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cd527f90aede584dc4dcc9139afb91b63234d24"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c85eb7b308ae596f0c0147338e75e6ea78842e0", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2c85eb7b308ae596f0c0147338e75e6ea78842e0", "committedDate": "2020-01-10T18:35:53Z", "message": "Refactor(startup): Implement PR feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666f594e5b11446998d5486617004b691d2bc0f5", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/666f594e5b11446998d5486617004b691d2bc0f5", "committedDate": "2020-01-10T18:38:50Z", "message": "Merge remote-tracking branch 'origin/5.2.0' into ps_settings_fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40bd4a6bfbc387444e375286155c399dfe29e830", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/40bd4a6bfbc387444e375286155c399dfe29e830", "committedDate": "2020-01-10T20:03:19Z", "message": "Refactor(startup): Use a method reference for the boolean conversion."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2882, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}