{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDk3MDI1", "number": 857, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoyMDozM1rODf4wXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoyMDozM1rODf4wXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzYyMzMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoyMDozM1rOFp2T_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMzoyMDozM1rOFp2T_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQyNTc4OQ==", "bodyText": "Rather than this being a component, we could demand it as part of a Provider's contract by having a validate() method on the Provider itself. Then it could choose where/ how to implement it.\nThe Provider could pass its properties and a configurationModel to a different class if necessary. That way, it is guaranteed that a new Provider would have a validator.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/857#discussion_r379425789", "createdAt": "2020-02-14T13:20:33Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckValidator.java", "diffHunk": "@@ -37,27 +37,32 @@\n import com.synopsys.integration.alert.common.enumeration.SystemMessageType;\n import com.synopsys.integration.alert.common.exception.AlertRuntimeException;\n import com.synopsys.integration.alert.common.persistence.accessor.SystemMessageUtility;\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n import com.synopsys.integration.alert.common.provider.ProviderValidator;\n import com.synopsys.integration.blackduck.configuration.BlackDuckServerConfig;\n import com.synopsys.integration.exception.IntegrationException;\n import com.synopsys.integration.log.IntLogger;\n import com.synopsys.integration.log.Slf4jIntLogger;\n \n @Component", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da702c84ae45377a2aa374f7f2e170a090e071a1"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2105, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}