{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTk0NDI0", "number": 1217, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDowODozNVrOEspeKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoyMDowMlrOEspwdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjUyMjY0OnYy", "diffSide": "RIGHT", "path": "web/src/main/js/store/actions/audit.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDowODozNVrOHgAT8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDowODozNVrOHgAT8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyMTU4Ng==", "bodyText": "Since headers is now an object, let's add functions to the object that does this for us. Such as\n\nheaders.addXCrsfToken(csrfToken)", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1217#discussion_r503321586", "createdAt": "2020-10-12T14:08:35Z", "author": {"login": "bamandel"}, "path": "web/src/main/js/store/actions/audit.js", "diffHunk": "@@ -87,11 +87,11 @@ export function getAuditData(pageNumber, pageSize, searchTerm, sortField, sortOr\n         const errorHandlers = [];\n         errorHandlers.push(HTTPErrorUtils.createUnauthorizedHandler(unauthorized));\n         errorHandlers.push(HTTPErrorUtils.createForbiddenHandler(() => auditDataFetchError(HTTPErrorUtils.MESSAGES.FORBIDDEN_READ)));\n+        const headers = new Headers();\n+        headers.append('X-CSRF-TOKEN', csrfToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ff57093ea5a43bf88ef64be2ec211ddf98010e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjU2MzYyOnYy", "diffSide": "RIGHT", "path": "web/src/main/js/util/RequestUtilities.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoxODo0MFrOHgAstg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoxODo0MFrOHgAstg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyNzkyNg==", "bodyText": "We should add functions for each of these 3 headers as they are the most commonly used.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1217#discussion_r503327926", "createdAt": "2020-10-12T14:18:40Z", "author": {"login": "bamandel"}, "path": "web/src/main/js/util/RequestUtilities.js", "diffHunk": "@@ -1,47 +1,47 @@\n export function createReadRequest(url, csrfToken) {\n+    const headers = new Headers();\n+    headers.append('Accept', 'application/json');\n+    headers.append('X-CSRF-TOKEN', csrfToken);\n     return fetch(url, {\n         credentials: 'same-origin',\n         method: 'GET',\n-        headers: {\n-            accept: 'application/json',\n-            'X-CSRF-TOKEN': csrfToken\n-        }\n+        headers\n     });\n }\n \n export function createUpdateRequest(url, csrfToken, body) {\n+    const headers = new Headers();\n+    headers.append('Accept', 'application/json');\n+    headers.append('Content-Type', 'application/json');\n+    headers.append('X-CSRF-TOKEN', csrfToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ff57093ea5a43bf88ef64be2ec211ddf98010e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjU2OTQ5OnYy", "diffSide": "RIGHT", "path": "web/src/main/js/util/configurationRequestBuilder.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoyMDowMlrOHgAwMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoyMDozMlrOHgAxWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyODgxNw==", "bodyText": "You could also create constant header objects in the header class that will return this grouping of headers so you don't have to repeat it every time.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1217#discussion_r503328817", "createdAt": "2020-10-12T14:20:02Z", "author": {"login": "bamandel"}, "path": "web/src/main/js/util/configurationRequestBuilder.js", "diffHunk": "@@ -37,52 +37,52 @@ export function createReadRequest(apiUrl, csrfToken, configurationId = null) {\n     if (configurationId) {\n         url = url.concat(`/${configurationId}`);\n     }\n+    const headers = new Headers();\n+    headers.append('X-CSRF-TOKEN', csrfToken);\n     return fetch(url, {\n         credentials: 'same-origin',\n-        headers: {\n-            'X-CSRF-TOKEN': csrfToken\n-        }\n+        headers\n     });\n }\n \n export function createNewConfigurationRequest(apiUrl, csrfToken, fieldModel) {\n+    const headers = new Headers();\n+    headers.append('Accept', 'application/json');\n+    headers.append('Content-Type', 'application/json');\n+    headers.append('X-CSRF-TOKEN', csrfToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ff57093ea5a43bf88ef64be2ec211ddf98010e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyOTExMg==", "bodyText": "The function would need to take in a csrfToken though.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1217#discussion_r503329112", "createdAt": "2020-10-12T14:20:32Z", "author": {"login": "bamandel"}, "path": "web/src/main/js/util/configurationRequestBuilder.js", "diffHunk": "@@ -37,52 +37,52 @@ export function createReadRequest(apiUrl, csrfToken, configurationId = null) {\n     if (configurationId) {\n         url = url.concat(`/${configurationId}`);\n     }\n+    const headers = new Headers();\n+    headers.append('X-CSRF-TOKEN', csrfToken);\n     return fetch(url, {\n         credentials: 'same-origin',\n-        headers: {\n-            'X-CSRF-TOKEN': csrfToken\n-        }\n+        headers\n     });\n }\n \n export function createNewConfigurationRequest(apiUrl, csrfToken, fieldModel) {\n+    const headers = new Headers();\n+    headers.append('Accept', 'application/json');\n+    headers.append('Content-Type', 'application/json');\n+    headers.append('X-CSRF-TOKEN', csrfToken);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyODgxNw=="}, "originalCommit": {"oid": "a7ff57093ea5a43bf88ef64be2ec211ddf98010e"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2294, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}