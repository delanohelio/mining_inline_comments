{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NjU5NDc4", "number": 1210, "title": "Add additional logging to Role and UserActions", "bodyText": "I've added some additional logs to the action classes as well as the AbstractResourceActions. Currently for the abstract actions I only added logs to the permission checks. It should be possible to add some more logs in places we do validation checks if there are errors. Those should bubble up and become errors in the response with its own message already. Let me know if you guys think we should also log that in the docker logs as well and I can make that additional change.", "createdAt": "2020-10-06T15:52:59Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210", "merged": true, "mergeCommit": {"oid": "669934037c594eb810afb2ec4e42eb2d62971ed1"}, "closed": true, "closedAt": "2020-10-08T14:14:27Z", "author": {"login": "ChomickiM"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP6ZZaAH2gAyNDk4NjU5NDc4OmNkMjdiZTE4YmM3NjZiNzI1YzY2YjhlMTgzNzMzYjA2Yzg4MDJiMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQTm-8AH2gAyNDk4NjU5NDc4OmI0ZGUxOGVhY2E2YmQxMzQ2NjNmY2FkMWFmMDcxMjUxNDdkMGQ0MmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd27be18bc766b725c66b8e183733b06c8802b16", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cd27be18bc766b725c66b8e183733b06c8802b16", "committedDate": "2020-10-06T15:48:20Z", "message": "refactor: Add additional logging to Role and UserActions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/60c1011afd401daefe2380907dff5d95026f4e74", "committedDate": "2020-10-06T15:52:32Z", "message": "style: Clean up unused comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ1ODUw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503145850", "createdAt": "2020-10-06T16:24:02Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNDowMlrOHdP9pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNDowMlrOHdP9pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMjI5Mw==", "bodyText": "\"All\" should be \"all\"", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500432293", "createdAt": "2020-10-06T16:24:02Z", "author": {"login": "jamesrichard91"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/AbstractResourceActions.java", "diffHunk": "@@ -77,6 +82,7 @@ public AbstractResourceActions(DescriptorKey descriptorKey, ConfigContextEnum co\n     @Override\n     public final ActionResponse<M> getAll() {\n         if (!authorizationManager.hasReadPermission(context.name(), descriptorKey.getUniversalKey())) {\n+            logger.error(\"Get All action is forbidden. This user is not authorized to perform this action.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ2MDMw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503146030", "createdAt": "2020-10-06T16:24:14Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNDoxNFrOHdP-MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNDoxNFrOHdP-MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMjQzMg==", "bodyText": "\"One\" should be \"one\"", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500432432", "createdAt": "2020-10-06T16:24:14Z", "author": {"login": "jamesrichard91"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/AbstractResourceActions.java", "diffHunk": "@@ -85,6 +91,7 @@ public AbstractResourceActions(DescriptorKey descriptorKey, ConfigContextEnum co\n     @Override\n     public final ActionResponse<T> getOne(Long id) {\n         if (!authorizationManager.hasReadPermission(context.name(), descriptorKey.getUniversalKey())) {\n+            logger.error(\"Get One action is forbidden. This user is not authorized to perform this action.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ2NzEy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503146712", "createdAt": "2020-10-06T16:25:03Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNTowM1rOHdQAOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNTowM1rOHdQAOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMjk1NQ==", "bodyText": "The role name should be included.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500432955", "createdAt": "2020-10-06T16:25:03Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -89,12 +96,16 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n                                                    .findFirst();\n         if (existingRole.isPresent()) {\n             try {\n+                logger.info(String.format(\"Deleting Role: %s\", existingRole.get().getName()));\n                 authorizationManager.deleteRole(id);\n             } catch (AlertException ex) {\n+                logger.error(\"Error occurred while deleting the role.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ2OTQ2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503146946", "createdAt": "2020-10-06T16:25:18Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNToxOFrOHdQA2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNToxOFrOHdQA2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzExNQ==", "bodyText": "The role name should be included.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500433115", "createdAt": "2020-10-06T16:25:18Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -89,12 +96,16 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n                                                    .findFirst();\n         if (existingRole.isPresent()) {\n             try {\n+                logger.info(String.format(\"Deleting Role: %s\", existingRole.get().getName()));\n                 authorizationManager.deleteRole(id);\n             } catch (AlertException ex) {\n+                logger.error(\"Error occurred while deleting the role.\");\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, String.format(\"Error deleting role: %s\", ex.getMessage()));\n             }\n+            logger.info(\"Role deleted successfully.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ3MTMw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503147130", "createdAt": "2020-10-06T16:25:31Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNTozMVrOHdQBYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNTozMVrOHdQBYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzI0OA==", "bodyText": "The role name should be included.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500433248", "createdAt": "2020-10-06T16:25:31Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -128,16 +139,20 @@ protected ValidationActionResponse testWithoutChecks(RolePermissionModel resourc\n                                                        .stream()\n                                                        .findFirst();\n             if (existingRole.isPresent()) {\n+                logger.info(String.format(\"Updating role: %s\", existingRole.get().getName()));\n                 if (!existingRole.get().getName().equals(roleName)) {\n                     authorizationManager.updateRoleName(id, roleName);\n                 }\n                 Set<PermissionModel> permissions = resource.getPermissions();\n                 PermissionMatrixModel permissionMatrixModel = PermissionModelUtil.convertToPermissionMatrixModel(permissions);\n                 authorizationManager.updatePermissionsForRole(roleName, permissionMatrixModel);\n+                logger.info(\"Role updated successfully.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ3NDEz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503147413", "createdAt": "2020-10-06T16:25:51Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNTo1MVrOHdQCOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNTo1MVrOHdQCOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzQ2NQ==", "bodyText": "The user name should be included.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500433465", "createdAt": "2020-10-06T16:25:51Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -140,8 +145,10 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 authorizationManager.updateUserRoles(userId, roleNames);\n             }\n             userModel = userAccessor.getUser(userId).orElse(userModel);\n+            logger.info(\"User created successfully.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ3NjE1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503147615", "createdAt": "2020-10-06T16:26:03Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjowNFrOHdQCzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjowNFrOHdQCzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzYxMw==", "bodyText": "The user name should be included, if available.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500433613", "createdAt": "2020-10-06T16:26:04Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -140,8 +145,10 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 authorizationManager.updateUserRoles(userId, roleNames);\n             }\n             userModel = userAccessor.getUser(userId).orElse(userModel);\n+            logger.info(\"User created successfully.\");\n             return new ActionResponse<>(HttpStatus.CREATED, convertToCustomUserRoleModel(userModel));\n         } catch (AlertException ex) {\n+            logger.error(\"Error occurred while creating user.\", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ3ODMx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503147831", "createdAt": "2020-10-06T16:26:19Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjoxOVrOHdQDag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjoxOVrOHdQDag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzc3MA==", "bodyText": "The user name should be included.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500433770", "createdAt": "2020-10-06T16:26:19Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -170,11 +178,14 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 UserConfig user = userAccessor.getUser(id)\n                                       .map(this::convertToCustomUserRoleModel)\n                                       .orElse(resource);\n+                logger.info(\"User updated successfully.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ3OTY4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503147968", "createdAt": "2020-10-06T16:26:29Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjoyOVrOHdQDuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjoyOVrOHdQDuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzg1MQ==", "bodyText": "The user name should be included.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500433851", "createdAt": "2020-10-06T16:26:29Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -170,11 +178,14 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 UserConfig user = userAccessor.getUser(id)\n                                       .map(this::convertToCustomUserRoleModel)\n                                       .orElse(resource);\n+                logger.info(\"User updated successfully.\");\n                 return new ActionResponse<>(HttpStatus.NO_CONTENT);\n             } catch (AlertException ex) {\n+                logger.error(\"An error occurred while updating the user.\", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQ4MTA3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503148107", "createdAt": "2020-10-06T16:26:40Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjo0MFrOHdQEIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyNjo0MFrOHdQEIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMzk1NQ==", "bodyText": "The user name should be included.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500433955", "createdAt": "2020-10-06T16:26:40Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -183,12 +194,16 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n         Optional<UserModel> user = userAccessor.getUser(id);\n         if (user.isPresent()) {\n             try {\n+                logger.info(String.format(\"Deleting User: %s\", user.get().getName()));\n                 userAccessor.deleteUser(id);\n             } catch (AlertException ex) {\n+                logger.error(\"Error occurred while deleting user.\", ex);\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n             }\n+            logger.info(\"User deleted successfully.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTUyNjQ1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503152645", "createdAt": "2020-10-06T16:32:04Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjozMjowNFrOHdQSBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjozMjowNFrOHdQSBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNzUwOA==", "bodyText": "If we want to log something every time a permission check is failed, then perhaps we should add this logging to the authorization manager instead of the Actions.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r500437508", "createdAt": "2020-10-06T16:32:04Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/AbstractResourceActions.java", "diffHunk": "@@ -65,6 +69,7 @@ public AbstractResourceActions(DescriptorKey descriptorKey, ConfigContextEnum co\n     @Override\n     public final ActionResponse<T> create(T resource) {\n         if (!authorizationManager.hasCreatePermission(context.name(), descriptorKey.getUniversalKey())) {\n+            logger.error(\"Create action is forbidden. This user is not authorized to perform this action.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTU5MDk1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503159095", "createdAt": "2020-10-06T16:39:48Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTg2Mjk3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503186297", "createdAt": "2020-10-06T17:12:27Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTk4MTk3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-503198197", "createdAt": "2020-10-06T17:27:01Z", "commit": {"oid": "60c1011afd401daefe2380907dff5d95026f4e74"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed844bc509b29c8bdbc272f85df6b4a3bbc078e3", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ed844bc509b29c8bdbc272f85df6b4a3bbc078e3", "committedDate": "2020-10-06T19:32:42Z", "message": "refactor: Update log messages based on PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "245fd3c6bb0072b360a444f3d05589b6d3666e04", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/245fd3c6bb0072b360a444f3d05589b6d3666e04", "committedDate": "2020-10-07T16:01:52Z", "message": "refactor: Implement static string messages for logs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MTYxOTQy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504161942", "createdAt": "2020-10-07T18:34:44Z", "commit": {"oid": "245fd3c6bb0072b360a444f3d05589b6d3666e04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95e025ace37518a9fb0b6f8b6a25084f7bd849c", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f95e025ace37518a9fb0b6f8b6a25084f7bd849c", "committedDate": "2020-10-07T19:49:58Z", "message": "refactor: Update AuthorizationManager to log the user and failed permission"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e2ffae52fed487a173d3a96568dacb110fe585b9", "committedDate": "2020-10-07T19:51:05Z", "message": "Merge branch 'master' into mc_actions_audit_logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIwMTA5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504220109", "createdAt": "2020-10-07T19:57:54Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1Nzo1NFrOHeDTUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1Nzo1NFrOHeDTUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MzQyNg==", "bodyText": "Could we call this ActionMessageCreator?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501273426", "createdAt": "2020-10-07T19:57:54Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/ActionMessages.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package com.synopsys.integration.alert.common.action.api;\n+\n+public class ActionMessages {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIwNTEz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504220513", "createdAt": "2020-10-07T19:58:27Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1ODoyN1rOHeDUiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1ODoyN1rOHeDUiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MzczNw==", "bodyText": "This should be logged at WARN.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501273737", "createdAt": "2020-10-07T19:58:27Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -88,13 +97,18 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n                                                    .stream()\n                                                    .findFirst();\n         if (existingRole.isPresent()) {\n+            String roleName = existingRole.get().getName();\n             try {\n+                logger.info(actionMessages.deleteStartMessage(\"role\", roleName));\n                 authorizationManager.deleteRole(id);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.deleteErrorMessage(\"role\", existingRole.get().getName()));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, String.format(\"Error deleting role: %s\", ex.getMessage()));\n             }\n+            logger.info(actionMessages.deleteSuccessMessage(\"Role\", roleName));\n             return new ActionResponse<>(HttpStatus.NO_CONTENT);\n         }\n+        logger.error(actionMessages.deleteNotFoundMessage(\"Role\", id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIwNzY1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504220765", "createdAt": "2020-10-07T19:58:51Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1ODo1MVrOHeDVUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1ODo1MVrOHeDVUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MzkzOQ==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501273939", "createdAt": "2020-10-07T19:58:51Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/AbstractResourceActions.java", "diffHunk": "@@ -65,6 +71,7 @@ public AbstractResourceActions(DescriptorKey descriptorKey, ConfigContextEnum co\n     @Override\n     public final ActionResponse<T> create(T resource) {\n         if (!authorizationManager.hasCreatePermission(context.name(), descriptorKey.getUniversalKey())) {\n+            logger.error(String.format(FORBIDDEN_ACTION_FORMAT, \"Create\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIwOTk4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504220998", "createdAt": "2020-10-07T19:59:11Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1OToxMVrOHeDWBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1OToxMVrOHeDWBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NDExOQ==", "bodyText": "This should be logged at DEBUG. As should all of the other new logs in this class.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501274119", "createdAt": "2020-10-07T19:59:11Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/AbstractResourceActions.java", "diffHunk": "@@ -77,6 +84,7 @@ public AbstractResourceActions(DescriptorKey descriptorKey, ConfigContextEnum co\n     @Override\n     public final ActionResponse<M> getAll() {\n         if (!authorizationManager.hasReadPermission(context.name(), descriptorKey.getUniversalKey())) {\n+            logger.error(String.format(FORBIDDEN_ACTION_FORMAT, \"Get all\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIxMjQ5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504221249", "createdAt": "2020-10-07T19:59:31Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1OTozMVrOHeDWvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTo1OTozMVrOHeDWvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NDMwMQ==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501274301", "createdAt": "2020-10-07T19:59:31Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/security/authorization/AuthorizationManager.java", "diffHunk": "@@ -180,8 +186,12 @@ private boolean currentUserAnyPermission(AccessOperation operation, Collection<P\n     private boolean currentUserHasPermission(AccessOperation operation, String context, String descriptorName) {\n         PermissionKey permissionKey = new PermissionKey(context, descriptorName);\n         Collection<String> roleNames = getCurrentUserRoleNames();\n-        return roleNames.stream()\n-                   .anyMatch(name -> permissionCache.containsKey(name) && permissionCache.get(name).hasPermission(permissionKey, operation));\n+        boolean hasPermission = roleNames.stream()\n+                                    .anyMatch(name -> permissionCache.containsKey(name) && permissionCache.get(name).hasPermission(permissionKey, operation));\n+        if (!hasPermission) {\n+            logger.info(String.format(\"User %s does not have permission: %s\", getCurrentUserName().get(), operation));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIxOTQz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504221943", "createdAt": "2020-10-07T20:00:33Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDozM1rOHeDY5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDozM1rOHeDY5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NDg1NA==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501274854", "createdAt": "2020-10-07T20:00:33Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -75,9 +81,12 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n             String roleName = resource.getRoleName();\n             Set<PermissionModel> permissions = resource.getPermissions();\n             PermissionMatrixModel permissionMatrixModel = PermissionModelUtil.convertToPermissionMatrixModel(permissions);\n+            logger.info(actionMessages.createStartMessage(\"role\", roleName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIyMDM3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504222037", "createdAt": "2020-10-07T20:00:41Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDo0MVrOHeDZNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDo0MVrOHeDZNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NDkzNQ==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501274935", "createdAt": "2020-10-07T20:00:41Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -75,9 +81,12 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n             String roleName = resource.getRoleName();\n             Set<PermissionModel> permissions = resource.getPermissions();\n             PermissionMatrixModel permissionMatrixModel = PermissionModelUtil.convertToPermissionMatrixModel(permissions);\n+            logger.info(actionMessages.createStartMessage(\"role\", roleName));\n             UserRoleModel userRoleModel = authorizationManager.createRoleWithPermissions(roleName, permissionMatrixModel);\n+            logger.info(actionMessages.createSuccessMessage(\"Role\", roleName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIyMTY0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504222164", "createdAt": "2020-10-07T20:00:50Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDo1MFrOHeDZjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDo1MFrOHeDZjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NTAyMg==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501275022", "createdAt": "2020-10-07T20:00:50Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -88,13 +97,18 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n                                                    .stream()\n                                                    .findFirst();\n         if (existingRole.isPresent()) {\n+            String roleName = existingRole.get().getName();\n             try {\n+                logger.info(actionMessages.deleteStartMessage(\"role\", roleName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIyMjM3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504222237", "createdAt": "2020-10-07T20:00:57Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDo1OFrOHeDZxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMDo1OFrOHeDZxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NTA3OA==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501275078", "createdAt": "2020-10-07T20:00:58Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -88,13 +97,18 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n                                                    .stream()\n                                                    .findFirst();\n         if (existingRole.isPresent()) {\n+            String roleName = existingRole.get().getName();\n             try {\n+                logger.info(actionMessages.deleteStartMessage(\"role\", roleName));\n                 authorizationManager.deleteRole(id);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.deleteErrorMessage(\"role\", existingRole.get().getName()));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, String.format(\"Error deleting role: %s\", ex.getMessage()));\n             }\n+            logger.info(actionMessages.deleteSuccessMessage(\"Role\", roleName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIyMzU4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504222358", "createdAt": "2020-10-07T20:01:07Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMTowN1rOHeDaMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMTowN1rOHeDaMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NTE4NA==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501275184", "createdAt": "2020-10-07T20:01:07Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -128,16 +143,20 @@ protected ValidationActionResponse testWithoutChecks(RolePermissionModel resourc\n                                                        .stream()\n                                                        .findFirst();\n             if (existingRole.isPresent()) {\n+                logger.info(actionMessages.updateStartMessage(\"role\", existingRole.get().getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIyNTAy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504222502", "createdAt": "2020-10-07T20:01:20Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMToyMFrOHeDamw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMToyMFrOHeDamw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NTI5MQ==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501275291", "createdAt": "2020-10-07T20:01:20Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -128,16 +143,20 @@ protected ValidationActionResponse testWithoutChecks(RolePermissionModel resourc\n                                                        .stream()\n                                                        .findFirst();\n             if (existingRole.isPresent()) {\n+                logger.info(actionMessages.updateStartMessage(\"role\", existingRole.get().getName()));\n                 if (!existingRole.get().getName().equals(roleName)) {\n                     authorizationManager.updateRoleName(id, roleName);\n                 }\n                 Set<PermissionModel> permissions = resource.getPermissions();\n                 PermissionMatrixModel permissionMatrixModel = PermissionModelUtil.convertToPermissionMatrixModel(permissions);\n                 authorizationManager.updatePermissionsForRole(roleName, permissionMatrixModel);\n+                logger.info(actionMessages.updateSuccessMessage(\"Role\", roleName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIyNTkx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504222591", "createdAt": "2020-10-07T20:01:28Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMToyOFrOHeDa1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMToyOFrOHeDa1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NTM1MQ==", "bodyText": "This should be logged at WARN.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501275351", "createdAt": "2020-10-07T20:01:28Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -128,16 +143,20 @@ protected ValidationActionResponse testWithoutChecks(RolePermissionModel resourc\n                                                        .stream()\n                                                        .findFirst();\n             if (existingRole.isPresent()) {\n+                logger.info(actionMessages.updateStartMessage(\"role\", existingRole.get().getName()));\n                 if (!existingRole.get().getName().equals(roleName)) {\n                     authorizationManager.updateRoleName(id, roleName);\n                 }\n                 Set<PermissionModel> permissions = resource.getPermissions();\n                 PermissionMatrixModel permissionMatrixModel = PermissionModelUtil.convertToPermissionMatrixModel(permissions);\n                 authorizationManager.updatePermissionsForRole(roleName, permissionMatrixModel);\n+                logger.info(actionMessages.updateSuccessMessage(\"Role\", roleName));\n                 return new ActionResponse<>(HttpStatus.NO_CONTENT);\n             }\n+            logger.error(actionMessages.updateNotFoundMessage(\"Role\", id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIzNjAw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504223600", "createdAt": "2020-10-07T20:02:53Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMjo1M1rOHeDdjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMjo1M1rOHeDdjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjA0NQ==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276045", "createdAt": "2020-10-07T20:02:53Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -130,6 +136,7 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n             String password = resource.getPassword();\n             String emailAddress = resource.getEmailAddress();\n \n+            logger.info(actionMessages.createStartMessage(\"user\", userName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIzNjYz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504223663", "createdAt": "2020-10-07T20:02:58Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMjo1OFrOHeDdww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMjo1OFrOHeDdww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjA5OQ==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276099", "createdAt": "2020-10-07T20:02:58Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -140,8 +147,10 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 authorizationManager.updateUserRoles(userId, roleNames);\n             }\n             userModel = userAccessor.getUser(userId).orElse(userModel);\n+            logger.info(actionMessages.createSuccessMessage(\"User\", userName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIzNzQ1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504223745", "createdAt": "2020-10-07T20:03:04Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzowNFrOHeDd-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzowNFrOHeDd-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjE1Mw==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276153", "createdAt": "2020-10-07T20:03:04Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -158,6 +167,7 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n \n             UserModel newUserModel = UserModel.existingUser(existingUser.getId(), userName, password, emailAddress, existingUser.getAuthenticationType(), existingUser.getRoles(), existingUser.isEnabled());\n             try {\n+                logger.info(actionMessages.updateStartMessage(\"user\", userName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjIzODM4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504223838", "createdAt": "2020-10-07T20:03:11Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzoxMVrOHeDeMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzoxMVrOHeDeMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjIwOA==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276208", "createdAt": "2020-10-07T20:03:11Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -170,25 +180,33 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 UserConfig user = userAccessor.getUser(id)\n                                       .map(this::convertToCustomUserRoleModel)\n                                       .orElse(resource);\n+                logger.info(actionMessages.updateSuccessMessage(\"User\", userName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjI0MDYz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504224063", "createdAt": "2020-10-07T20:03:29Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzoyOVrOHeDe1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzoyOVrOHeDe1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjM3NA==", "bodyText": "This should be logged at WARN.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276374", "createdAt": "2020-10-07T20:03:29Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -170,25 +180,33 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 UserConfig user = userAccessor.getUser(id)\n                                       .map(this::convertToCustomUserRoleModel)\n                                       .orElse(resource);\n+                logger.info(actionMessages.updateSuccessMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.NO_CONTENT);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.updateErrorMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n             }\n         }\n+        logger.error(actionMessages.updateNotFoundMessage(\"User\", id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjI0MjIy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504224222", "createdAt": "2020-10-07T20:03:43Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzo0M1rOHeDfSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzo0M1rOHeDfSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjQ5MA==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276490", "createdAt": "2020-10-07T20:03:43Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -170,25 +180,33 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 UserConfig user = userAccessor.getUser(id)\n                                       .map(this::convertToCustomUserRoleModel)\n                                       .orElse(resource);\n+                logger.info(actionMessages.updateSuccessMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.NO_CONTENT);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.updateErrorMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n             }\n         }\n+        logger.error(actionMessages.updateNotFoundMessage(\"User\", id));\n         return new ActionResponse<>(HttpStatus.NOT_FOUND);\n     }\n \n     @Override\n     protected ActionResponse<UserConfig> deleteWithoutChecks(Long id) {\n         Optional<UserModel> user = userAccessor.getUser(id);\n         if (user.isPresent()) {\n+            String userName = user.get().getName();\n             try {\n+                logger.info(actionMessages.deleteStartMessage(\"user\", userName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjI0MzIy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504224322", "createdAt": "2020-10-07T20:03:51Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzo1MVrOHeDfgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzo1MVrOHeDfgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjU0Ng==", "bodyText": "This should be logged at DEBUG.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276546", "createdAt": "2020-10-07T20:03:51Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -170,25 +180,33 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 UserConfig user = userAccessor.getUser(id)\n                                       .map(this::convertToCustomUserRoleModel)\n                                       .orElse(resource);\n+                logger.info(actionMessages.updateSuccessMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.NO_CONTENT);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.updateErrorMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n             }\n         }\n+        logger.error(actionMessages.updateNotFoundMessage(\"User\", id));\n         return new ActionResponse<>(HttpStatus.NOT_FOUND);\n     }\n \n     @Override\n     protected ActionResponse<UserConfig> deleteWithoutChecks(Long id) {\n         Optional<UserModel> user = userAccessor.getUser(id);\n         if (user.isPresent()) {\n+            String userName = user.get().getName();\n             try {\n+                logger.info(actionMessages.deleteStartMessage(\"user\", userName));\n                 userAccessor.deleteUser(id);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.deleteErrorMessage(\"user\", userName));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n             }\n+            logger.info(actionMessages.deleteSuccessMessage(\"User\", userName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjI0Mzk1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#pullrequestreview-504224395", "createdAt": "2020-10-07T20:03:58Z", "commit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzo1OFrOHeDfwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMDowMzo1OFrOHeDfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3NjYwOA==", "bodyText": "This should be logged at WARN.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1210#discussion_r501276608", "createdAt": "2020-10-07T20:03:58Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/user/UserActions.java", "diffHunk": "@@ -170,25 +180,33 @@ protected ValidationActionResponse validateWithoutChecks(UserConfig resource) {\n                 UserConfig user = userAccessor.getUser(id)\n                                       .map(this::convertToCustomUserRoleModel)\n                                       .orElse(resource);\n+                logger.info(actionMessages.updateSuccessMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.NO_CONTENT);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.updateErrorMessage(\"User\", userName));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n             }\n         }\n+        logger.error(actionMessages.updateNotFoundMessage(\"User\", id));\n         return new ActionResponse<>(HttpStatus.NOT_FOUND);\n     }\n \n     @Override\n     protected ActionResponse<UserConfig> deleteWithoutChecks(Long id) {\n         Optional<UserModel> user = userAccessor.getUser(id);\n         if (user.isPresent()) {\n+            String userName = user.get().getName();\n             try {\n+                logger.info(actionMessages.deleteStartMessage(\"user\", userName));\n                 userAccessor.deleteUser(id);\n             } catch (AlertException ex) {\n+                logger.error(actionMessages.deleteErrorMessage(\"user\", userName));\n                 return new ActionResponse<>(HttpStatus.INTERNAL_SERVER_ERROR, ex.getMessage());\n             }\n+            logger.info(actionMessages.deleteSuccessMessage(\"User\", userName));\n             return new ActionResponse<>(HttpStatus.NO_CONTENT);\n         }\n+        logger.error(actionMessages.deleteNotFoundMessage(\"User\", id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ffae52fed487a173d3a96568dacb110fe585b9"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "079eabcc1ddc60d0c23dc9e1163455eeb6fa3633", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/079eabcc1ddc60d0c23dc9e1163455eeb6fa3633", "committedDate": "2020-10-07T20:17:22Z", "message": "refactor: Rename ActionMessageCreator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4de18eaca6bd134663fcad1af07125147d0d42d", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b4de18eaca6bd134663fcad1af07125147d0d42d", "committedDate": "2020-10-07T21:10:48Z", "message": "refactor: update logging level for actions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2982, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}