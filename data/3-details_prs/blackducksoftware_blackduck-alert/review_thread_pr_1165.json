{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NTgyNjE4", "number": 1165, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxODo1OFrOEjKTkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxODo1OFrOEjKTkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzA0NDY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNDoxODo1OFrOHRXKJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToyMDoyM1rOHRaLow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NzI3MQ==", "bodyText": "More of a thought, but would this go through the stream twice? Would it be more efficient to put both checks in either the filter call or the anyMatch call?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1165#discussion_r487967271", "createdAt": "2020-09-14T14:18:58Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -86,9 +94,25 @@ public UserRoleModel createRole(RolePermissionModel rolePermissionModel) throws\n         return userRoleModel;\n     }\n \n-    public UserRoleModel updateRole(Long roleId, RolePermissionModel rolePermissionModel) throws AlertDatabaseConstraintException, AlertConfigurationException {\n+    public UserRoleModel updateRole(Long roleId, RolePermissionModel rolePermissionModel) throws AlertDatabaseConstraintException, AlertConfigurationException, AlertFieldException {\n         String roleName = rolePermissionModel.getRoleName();\n-        authorizationUtility.updateRoleName(roleId, roleName);\n+        Optional<AlertFieldStatus> roleNameMissingError = validateRoleNameFieldRequired(roleName);\n+        if (roleNameMissingError.isPresent()) {\n+            throw AlertFieldException.singleFieldError(roleNameMissingError.get());\n+        }\n+\n+        UserRoleModel existingRole = getExistingRoleOrThrow404(roleId);\n+        boolean targetRoleNameIsUsedByDifferentRole = authorizationUtility.getRoles()\n+                                                          .stream()\n+                                                          .filter(role -> !role.getId().equals(existingRole.getId()))\n+                                                          .anyMatch(role -> role.getName().equalsIgnoreCase(roleName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa211bc9a4cdcb2776bfa080cfbdc936578b392"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxNjgwMw==", "bodyText": "It makes no difference as each element will go through the entire stream a maximum of once. .findAny is just like .filter except it forces the stream to start evaluating (like collect).\nhttps://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1165#discussion_r488016803", "createdAt": "2020-09-14T15:20:23Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -86,9 +94,25 @@ public UserRoleModel createRole(RolePermissionModel rolePermissionModel) throws\n         return userRoleModel;\n     }\n \n-    public UserRoleModel updateRole(Long roleId, RolePermissionModel rolePermissionModel) throws AlertDatabaseConstraintException, AlertConfigurationException {\n+    public UserRoleModel updateRole(Long roleId, RolePermissionModel rolePermissionModel) throws AlertDatabaseConstraintException, AlertConfigurationException, AlertFieldException {\n         String roleName = rolePermissionModel.getRoleName();\n-        authorizationUtility.updateRoleName(roleId, roleName);\n+        Optional<AlertFieldStatus> roleNameMissingError = validateRoleNameFieldRequired(roleName);\n+        if (roleNameMissingError.isPresent()) {\n+            throw AlertFieldException.singleFieldError(roleNameMissingError.get());\n+        }\n+\n+        UserRoleModel existingRole = getExistingRoleOrThrow404(roleId);\n+        boolean targetRoleNameIsUsedByDifferentRole = authorizationUtility.getRoles()\n+                                                          .stream()\n+                                                          .filter(role -> !role.getId().equals(existingRole.getId()))\n+                                                          .anyMatch(role -> role.getName().equalsIgnoreCase(roleName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NzI3MQ=="}, "originalCommit": {"oid": "9aa211bc9a4cdcb2776bfa080cfbdc936578b392"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1742, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}