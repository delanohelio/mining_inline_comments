{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5OTkwNzA3", "number": 792, "title": "Ps auth type", "bodyText": "Add the authentication type as a string to the user table.  DATABASE, LDAP, or SAML are the current values.  Display the authentication type in the UI.", "createdAt": "2020-01-07T13:31:53Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792", "merged": true, "mergeCommit": {"oid": "7c509d64f07c44d2b188467b8fe5f2c8f3b843fb"}, "closed": true, "closedAt": "2020-01-09T22:47:21Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3zNj2AH2gAyMzU5OTkwNzA3OmEyMDBlMDVlMDYxZThkMjk3M2M2NzExYzFmMWQ3YmIxNWU3OWY2MjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4vNdwAFqTM0MDc2NTMxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a200e05e061e8d2973c6711c1f1d7bb15e79f622", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a200e05e061e8d2973c6711c1f1d7bb15e79f622", "committedDate": "2020-01-06T21:40:44Z", "message": "Feature(users): add the authentication type to the user entity."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30177bc434f55efcaf57210b89baa8ce23f94b05", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/30177bc434f55efcaf57210b89baa8ce23f94b05", "committedDate": "2020-01-07T13:14:06Z", "message": "Merge remote-tracking branch 'origin/master' into ps_auth_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38b8b5293c49c6597dcdebe447b2c6a7337d16a8", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/38b8b5293c49c6597dcdebe447b2c6a7337d16a8", "committedDate": "2020-01-07T13:30:33Z", "message": "Fix(users): Add external member back and set it in the constructor."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDI1MTk3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#pullrequestreview-339425197", "createdAt": "2020-01-07T18:35:33Z", "commit": {"oid": "38b8b5293c49c6597dcdebe447b2c6a7337d16a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODozNTozM1rOFbCEBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxODozNTozM1rOFbCEBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg4OTY2OQ==", "bodyText": "We may want to change this to if (!AuthenticationType.DATABASE.name().equals(existingUser.getAuthenticationType())) {. This way if we change DATABASE we only have to change it in one place.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r363889669", "createdAt": "2020-01-07T18:35:33Z", "author": {"login": "jamesrichard91"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultUserAccessor.java", "diffHunk": "@@ -121,7 +113,7 @@ public UserModel updateUser(UserModel user, boolean passwordEncoded) throws Aler\n         Long existingUserId = existingUser.getId();\n         UserEntity savedEntity = existingUser;\n         // if it isn't an external user then update username, password, and email.\n-        if (existingUser.isExternal()) {\n+        if (!existingUser.getAuthenticationType().equals(\"DATABASE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b8b5293c49c6597dcdebe447b2c6a7337d16a8"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDI2Mzc2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#pullrequestreview-339426376", "createdAt": "2020-01-07T18:37:41Z", "commit": {"oid": "38b8b5293c49c6597dcdebe447b2c6a7337d16a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NDMwOTg3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#pullrequestreview-339430987", "createdAt": "2020-01-07T18:45:49Z", "commit": {"oid": "38b8b5293c49c6597dcdebe447b2c6a7337d16a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d632ba1a64bf066211f5d293b7c416b47113727", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0d632ba1a64bf066211f5d293b7c416b47113727", "committedDate": "2020-01-07T20:09:04Z", "message": "Refactor(users): Store Authentication type in the database."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56c651b208e0da0877c8a4cdc34d95b83045f0ba", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/56c651b208e0da0877c8a4cdc34d95b83045f0ba", "committedDate": "2020-01-07T20:47:03Z", "message": "Refactor(database): Add foreign key for the authentication type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fe31d01d9d09f25f1759566e99fd3d619b04c68", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5fe31d01d9d09f25f1759566e99fd3d619b04c68", "committedDate": "2020-01-08T20:08:07Z", "message": "Merge remote-tracking branch 'origin/master' into ps_auth_type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c014a24c8e977506709dd43156fa0200d5775f9", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0c014a24c8e977506709dd43156fa0200d5775f9", "committedDate": "2020-01-08T20:23:13Z", "message": "Fix(user): Address SonarCloud issues in the branch."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTMxNTM2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#pullrequestreview-340131536", "createdAt": "2020-01-08T20:41:15Z", "commit": {"oid": "0c014a24c8e977506709dd43156fa0200d5775f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDo0MToxNVrOFbjP0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMDo0MToxNVrOFbjP0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQzMzM2MA==", "bodyText": "Why not make this an enum and then let the accessor worry about converting to/from Long?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r364433360", "createdAt": "2020-01-08T20:41:15Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/persistence/model/AuthenticationType.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.persistence.model;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+\n+public class AuthenticationType extends AlertSerializableModel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c014a24c8e977506709dd43156fa0200d5775f9"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5fe28bd233b4ff60e547ee66716c5a7dadffe69", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d5fe28bd233b4ff60e547ee66716c5a7dadffe69", "committedDate": "2020-01-09T14:09:15Z", "message": "Refactor(users): Use an Enum for the authentication type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b1918cee79030287bc19d737b3c8a9c4a145dc2", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8b1918cee79030287bc19d737b3c8a9c4a145dc2", "committedDate": "2020-01-09T14:38:07Z", "message": "Refactor(users): Add the database id to the enum."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNjU2MjA1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#pullrequestreview-340656205", "createdAt": "2020-01-09T16:38:22Z", "commit": {"oid": "8b1918cee79030287bc19d737b3c8a9c4a145dc2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNjozODoyMlrOFb8NDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNjozODoyMlrOFb8NDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg0MjI1NQ==", "bodyText": "Should we allow this to throw unchecked exceptions if the id is invalid?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#discussion_r364842255", "createdAt": "2020-01-09T16:38:22Z", "author": {"login": "gkillough"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultAuthenticationTypeAccessor.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * alert-database\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.database.api;\n+\n+import java.util.Optional;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import com.synopsys.integration.alert.common.enumeration.AuthenticationType;\n+import com.synopsys.integration.alert.common.persistence.accessor.AuthenticationTypeAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.AuthenticationTypeDetails;\n+import com.synopsys.integration.alert.database.user.AuthenticationTypeEntity;\n+import com.synopsys.integration.alert.database.user.AuthenticationTypeRepository;\n+\n+@Component\n+@Transactional\n+public class DefaultAuthenticationTypeAccessor implements AuthenticationTypeAccessor {\n+    private final AuthenticationTypeRepository authenticationTypeRepository;\n+\n+    @Autowired\n+    public DefaultAuthenticationTypeAccessor(AuthenticationTypeRepository authenticationTypeRepository) {\n+        this.authenticationTypeRepository = authenticationTypeRepository;\n+    }\n+\n+    @Override\n+    public Optional<AuthenticationTypeDetails> getAuthenticationTypeDetails(AuthenticationType authenticationType) {\n+        Optional<AuthenticationTypeEntity> authenticationTypeEntity = authenticationTypeRepository.findById(authenticationType.getId());\n+        return authenticationTypeEntity.map(entity -> new AuthenticationTypeDetails(entity.getId(), entity.getName()));\n+    }\n+\n+    @Override\n+    public AuthenticationType getAuthenticationType(Long id) {\n+        return AuthenticationType.getById(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b1918cee79030287bc19d737b3c8a9c4a145dc2"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a053786110bdbfa9efb57540f76e26e94549e940", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a053786110bdbfa9efb57540f76e26e94549e940", "committedDate": "2020-01-09T17:55:05Z", "message": "Refactor(users): Update the enum to use Optional in a get method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNzY1MzE1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/792#pullrequestreview-340765315", "createdAt": "2020-01-09T19:34:56Z", "commit": {"oid": "a053786110bdbfa9efb57540f76e26e94549e940"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2873, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}