{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxOTQzNjkz", "number": 1184, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMToyN1rOEmt3jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMjoyNFrOEmt5Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDMyODQ2OnYy", "diffSide": "RIGHT", "path": "src/main/js/dynamic/GlobalConfiguration.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMToyN1rOHW6TEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODo0NjowOFrOHW7_Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NTg3NA==", "bodyText": "The changes here are all linting. I originally thought I had to modify something here, but did not end up needing to. I decided to leave the linting as an incremental improvement.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1184#discussion_r493785874", "createdAt": "2020-09-23T18:01:27Z", "author": {"login": "gkillough"}, "path": "src/main/js/dynamic/GlobalConfiguration.js", "diffHunk": "@@ -6,7 +6,11 @@ import FieldsPanel from 'field/FieldsPanel';\n import ConfigurationLabel from 'component/common/ConfigurationLabel';\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c874a4335a8d60a2c3cf1915ada519ed04de3f"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4Nzc2Mw==", "bodyText": "Just saw this message, the linter made some questionable function names that we will probably want to change.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1184#discussion_r493787763", "createdAt": "2020-09-23T18:04:43Z", "author": {"login": "bamandel"}, "path": "src/main/js/dynamic/GlobalConfiguration.js", "diffHunk": "@@ -6,7 +6,11 @@ import FieldsPanel from 'field/FieldsPanel';\n import ConfigurationLabel from 'component/common/ConfigurationLabel';\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NTg3NA=="}, "originalCommit": {"oid": "54c874a4335a8d60a2c3cf1915ada519ed04de3f"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgxMzU4Mg==", "bodyText": "we just have to make sure that that function names mapDispatchToProps section aren't the same as the function names used in the dispatch functions in the same section.  That is the linting error called shadowing if my memory is correct.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1184#discussion_r493813582", "createdAt": "2020-09-23T18:46:08Z", "author": {"login": "psantos1113"}, "path": "src/main/js/dynamic/GlobalConfiguration.js", "diffHunk": "@@ -6,7 +6,11 @@ import FieldsPanel from 'field/FieldsPanel';\n import ConfigurationLabel from 'component/common/ConfigurationLabel';\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NTg3NA=="}, "originalCommit": {"oid": "54c874a4335a8d60a2c3cf1915ada519ed04de3f"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDMzMDM2OnYy", "diffSide": "RIGHT", "path": "src/main/js/dynamic/GlobalConfiguration.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMTo1N1rOHW6UPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMTo1N1rOHW6UPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NjE3NQ==", "bodyText": "I'm not a fan of this name. Why is it getConfig1? If it's a duplicate item there should be a better name.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1184#discussion_r493786175", "createdAt": "2020-09-23T18:01:57Z", "author": {"login": "bamandel"}, "path": "src/main/js/dynamic/GlobalConfiguration.js", "diffHunk": "@@ -24,37 +28,40 @@ class GlobalConfiguration extends React.Component {\n         this.handleDelete = this.handleDelete.bind(this);\n         this.createEmptyModel = this.createEmptyModel.bind(this);\n \n-        const { fields, name } = this.props.descriptor;\n+        const { descriptor } = this.props;\n+        const { fields, name } = descriptor;\n         const fieldKeys = FieldMapping.retrieveKeys(fields);\n         const fieldModel = FieldModelUtilities.createEmptyFieldModel(fieldKeys, DescriptorUtilities.CONTEXT_TYPE.GLOBAL, name);\n         this.state = {\n             currentConfig: fieldModel,\n-            currentDescriptor: this.props.descriptor,\n+            currentDescriptor: descriptor,\n             currentFields: fields,\n             showTest: false\n         };\n     }\n \n     componentDidMount() {\n-        const fieldModel = this.state.currentConfig;\n-        this.props.getConfig(fieldModel.descriptorName);\n+        const { currentConfig } = this.state;\n+        const { getConfig: getConfig1 } = this.props;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c874a4335a8d60a2c3cf1915ada519ed04de3f"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDMzMjI3OnYy", "diffSide": "RIGHT", "path": "src/main/js/dynamic/GlobalConfiguration.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMjoyNFrOHW6VZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMjoyNFrOHW6VZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NjQ3MQ==", "bodyText": "This has updateConfig1, there should be a better name for this.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1184#discussion_r493786471", "createdAt": "2020-09-23T18:02:24Z", "author": {"login": "bamandel"}, "path": "src/main/js/dynamic/GlobalConfiguration.js", "diffHunk": "@@ -24,37 +28,40 @@ class GlobalConfiguration extends React.Component {\n         this.handleDelete = this.handleDelete.bind(this);\n         this.createEmptyModel = this.createEmptyModel.bind(this);\n \n-        const { fields, name } = this.props.descriptor;\n+        const { descriptor } = this.props;\n+        const { fields, name } = descriptor;\n         const fieldKeys = FieldMapping.retrieveKeys(fields);\n         const fieldModel = FieldModelUtilities.createEmptyFieldModel(fieldKeys, DescriptorUtilities.CONTEXT_TYPE.GLOBAL, name);\n         this.state = {\n             currentConfig: fieldModel,\n-            currentDescriptor: this.props.descriptor,\n+            currentDescriptor: descriptor,\n             currentFields: fields,\n             showTest: false\n         };\n     }\n \n     componentDidMount() {\n-        const fieldModel = this.state.currentConfig;\n-        this.props.getConfig(fieldModel.descriptorName);\n+        const { currentConfig } = this.state;\n+        const { getConfig: getConfig1 } = this.props;\n+        getConfig1(currentConfig.descriptorName);\n     }\n \n     componentDidUpdate(prevProps, prevState, snapshot) {\n         const { currentFields, currentDescriptor } = this.state;\n-        if (this.props.currentConfig !== prevProps.currentConfig && this.props.updateStatus === 'DELETED') {\n+        const { updateStatus, updateConfig: updateConfig1, currentConfig } = this.props;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c874a4335a8d60a2c3cf1915ada519ed04de3f"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1778, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}