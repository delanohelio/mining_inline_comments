{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0ODQzMDg5", "number": 1140, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzoyNjoxMFrOEdUXzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODo0MjoxM1rOEdV91g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTc3OTMyOnYy", "diffSide": "RIGHT", "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzoyNjoxMFrOHIaL-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzo0MjoxM1rOHIaweA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTcwNQ==", "bodyText": "Instead of modifying the provided String shouldn't we create a new one in this method?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478579705", "createdAt": "2020-08-27T17:26:10Z", "author": {"login": "jamesrichard91"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/**\n+ * azure-boards-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.azure.boards.common.http;\n+\n+import static com.synopsys.integration.azure.boards.common.http.AzureHttpService.AZURE_API_VERSION_QUERY_PARAM_NAME;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class AzureApiVersionAppender {\n+    public String appendApiVersion(String spec, String apiVersion) {\n+        char queryParamSeparator = '?';\n+        if (StringUtils.contains(spec, queryParamSeparator)) {\n+            queryParamSeparator = '&';\n+        }\n+        spec += queryParamSeparator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e292c08d4d78574eddfce9672e72e8185747b100"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4OTA0OA==", "bodyText": "Given that string are immutable, that IS what occurs anyway. But I can make it more explict.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478589048", "createdAt": "2020-08-27T17:42:13Z", "author": {"login": "ekerwin"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureApiVersionAppender.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/**\n+ * azure-boards-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.azure.boards.common.http;\n+\n+import static com.synopsys.integration.azure.boards.common.http.AzureHttpService.AZURE_API_VERSION_QUERY_PARAM_NAME;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class AzureApiVersionAppender {\n+    public String appendApiVersion(String spec, String apiVersion) {\n+        char queryParamSeparator = '?';\n+        if (StringUtils.contains(spec, queryParamSeparator)) {\n+            queryParamSeparator = '&';\n+        }\n+        spec += queryParamSeparator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3OTcwNQ=="}, "originalCommit": {"oid": "e292c08d4d78574eddfce9672e72e8185747b100"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTkyOTc3OnYy", "diffSide": "RIGHT", "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODowOToxMlrOHIbrVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo1NDozOFrOHIg6RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDExOA==", "bodyText": "Probably the latter. Each service that needs to append a version should have an AzureApiVersionAppender. The version constants should probably end up in AzureApiVersionAppender as well.\nThe original code here was a misunderstanding of the Azure API (thinking that all endpoints we would use would use the same API version).", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478604118", "createdAt": "2020-08-27T18:09:12Z", "author": {"login": "gkillough"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java", "diffHunk": "@@ -154,22 +161,19 @@ public GenericUrl constructRequestUrl(String spec) {\n             requestUrlBuilder.append(\"/\");\n         }\n \n-        requestUrlBuilder.append(spec);\n-\n         if (!StringUtils.contains(spec, AZURE_API_VERSION_QUERY_PARAM_NAME)) {\n-            char queryParamSeparator = '?';\n-            if (StringUtils.contains(spec, queryParamSeparator)) {\n-                queryParamSeparator = '&';\n-            }\n-            requestUrlBuilder.append(queryParamSeparator);\n-            requestUrlBuilder.append(AZURE_API_VERSION_QUERY_PARAM_NAME);\n-            requestUrlBuilder.append('=');\n-            requestUrlBuilder.append(AZURE_API_VERSION);\n+            spec = azureApiVersionAppender.appendApiVersion(spec, AZURE_API_VERSION);\n         }\n+        requestUrlBuilder.append(spec);\n \n         return new GenericUrl(requestUrlBuilder.toString());\n     }\n \n+    public String appendApiVersion(String spec, String apiVersion) {\n+        //TODO ejk - is this appropriate or should the classes that need this demand an appender?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4OTg2MQ==", "bodyText": "I injected the appender and added some utility methods for appending specific versions.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478689861", "createdAt": "2020-08-27T20:54:38Z", "author": {"login": "ekerwin"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureHttpService.java", "diffHunk": "@@ -154,22 +161,19 @@ public GenericUrl constructRequestUrl(String spec) {\n             requestUrlBuilder.append(\"/\");\n         }\n \n-        requestUrlBuilder.append(spec);\n-\n         if (!StringUtils.contains(spec, AZURE_API_VERSION_QUERY_PARAM_NAME)) {\n-            char queryParamSeparator = '?';\n-            if (StringUtils.contains(spec, queryParamSeparator)) {\n-                queryParamSeparator = '&';\n-            }\n-            requestUrlBuilder.append(queryParamSeparator);\n-            requestUrlBuilder.append(AZURE_API_VERSION_QUERY_PARAM_NAME);\n-            requestUrlBuilder.append('=');\n-            requestUrlBuilder.append(AZURE_API_VERSION);\n+            spec = azureApiVersionAppender.appendApiVersion(spec, AZURE_API_VERSION);\n         }\n+        requestUrlBuilder.append(spec);\n \n         return new GenericUrl(requestUrlBuilder.toString());\n     }\n \n+    public String appendApiVersion(String spec, String apiVersion) {\n+        //TODO ejk - is this appropriate or should the classes that need this demand an appender?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDExOA=="}, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTkzNDYzOnYy", "diffSide": "LEFT", "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureCustomFieldManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODoxMDoyOVrOHIbuRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDoyNTozNlrOHIgCHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDg2OQ==", "bodyText": "Is this not thrown? why are we removing it?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478604869", "createdAt": "2020-08-27T18:10:29Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureCustomFieldManager.java", "diffHunk": "@@ -128,8 +128,6 @@ public void installCustomFields(String projectName, String workItemTypeName) thr\n     private Optional<ProjectWorkItemFieldModel> getAlertCustomProjectField(String projectName, String fieldReferenceName) {\n         try {\n             return Optional.of(projectService.getField(organizationName, fieldReferenceName));\n-        } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3NTQ4Nw==", "bodyText": "It isn't thrown anymore.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478675487", "createdAt": "2020-08-27T20:25:36Z", "author": {"login": "ekerwin"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureCustomFieldManager.java", "diffHunk": "@@ -128,8 +128,6 @@ public void installCustomFields(String projectName, String workItemTypeName) thr\n     private Optional<ProjectWorkItemFieldModel> getAlertCustomProjectField(String projectName, String fieldReferenceName) {\n         try {\n             return Optional.of(projectService.getField(organizationName, fieldReferenceName));\n-        } catch (IOException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwNDg2OQ=="}, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjA0MDU0OnYy", "diffSide": "RIGHT", "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODo0MjoxM1rOHIcwsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDoyODoyMVrOHJIuWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ==", "bodyText": "Looks like this was supposed to be based on: API_SPEC_ORGANIZATION_WORKITEMS_INDIVIDUAL", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478621875", "createdAt": "2020-08-27T18:42:13Z", "author": {"login": "gkillough"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java", "diffHunk": "@@ -124,10 +91,8 @@ public WorkItemResponseModel updateWorkItem(String organizationName, String proj\n     }\n \n     public WorkItemDeletedResponseModel deleteWorkItem(String organizationName, Integer workItemId) throws HttpServiceException {\n-        String requestSpec = API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL\n-                                 .defineReplacement(PATH_ORGANIZATION_REPLACEMENT, organizationName)\n-                                 .defineReplacement(PATH_WORK_ITEM_ID_REPLACEMENT, workItemId.toString())\n-                                 .populateSpec();\n+        //TODO verify this is a bug", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzODgwNg==", "bodyText": "I used API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL because the spec template looked to be the same for getting the WorkItemDeleted. I realized it matched the ...WORKITEMS_INDIVIDUAL so I reused it in this spot", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478638806", "createdAt": "2020-08-27T19:14:20Z", "author": {"login": "ChomickiM"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java", "diffHunk": "@@ -124,10 +91,8 @@ public WorkItemResponseModel updateWorkItem(String organizationName, String proj\n     }\n \n     public WorkItemDeletedResponseModel deleteWorkItem(String organizationName, Integer workItemId) throws HttpServiceException {\n-        String requestSpec = API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL\n-                                 .defineReplacement(PATH_ORGANIZATION_REPLACEMENT, organizationName)\n-                                 .defineReplacement(PATH_WORK_ITEM_ID_REPLACEMENT, workItemId.toString())\n-                                 .populateSpec();\n+        //TODO verify this is a bug", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY0MDUyMA==", "bodyText": "Right, but that would not have worked right?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r478640520", "createdAt": "2020-08-27T19:17:25Z", "author": {"login": "gkillough"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java", "diffHunk": "@@ -124,10 +91,8 @@ public WorkItemResponseModel updateWorkItem(String organizationName, String proj\n     }\n \n     public WorkItemDeletedResponseModel deleteWorkItem(String organizationName, Integer workItemId) throws HttpServiceException {\n-        String requestSpec = API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL\n-                                 .defineReplacement(PATH_ORGANIZATION_REPLACEMENT, organizationName)\n-                                 .defineReplacement(PATH_WORK_ITEM_ID_REPLACEMENT, workItemId.toString())\n-                                 .populateSpec();\n+        //TODO verify this is a bug", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyODE0NQ==", "bodyText": "@ekerwin This is a bug. Project name is optional in the request, but cannot be null.\nThe String formatting should look like this:\nString.format(\"/%s/_apis/wit/workitems/%s\", organizationName, workItemId.toString());", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r479328145", "createdAt": "2020-08-28T14:09:51Z", "author": {"login": "gkillough"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java", "diffHunk": "@@ -124,10 +91,8 @@ public WorkItemResponseModel updateWorkItem(String organizationName, String proj\n     }\n \n     public WorkItemDeletedResponseModel deleteWorkItem(String organizationName, Integer workItemId) throws HttpServiceException {\n-        String requestSpec = API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL\n-                                 .defineReplacement(PATH_ORGANIZATION_REPLACEMENT, organizationName)\n-                                 .defineReplacement(PATH_WORK_ITEM_ID_REPLACEMENT, workItemId.toString())\n-                                 .populateSpec();\n+        //TODO verify this is a bug", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MjE2OQ==", "bodyText": "Thanks @gkillough !", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1140#discussion_r479342169", "createdAt": "2020-08-28T14:28:21Z", "author": {"login": "ekerwin"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/service/workitem/AzureWorkItemService.java", "diffHunk": "@@ -124,10 +91,8 @@ public WorkItemResponseModel updateWorkItem(String organizationName, String proj\n     }\n \n     public WorkItemDeletedResponseModel deleteWorkItem(String organizationName, Integer workItemId) throws HttpServiceException {\n-        String requestSpec = API_SPEC_ORGANIZATION_PROJECT_WORKITEMS_INDIVIDUAL\n-                                 .defineReplacement(PATH_ORGANIZATION_REPLACEMENT, organizationName)\n-                                 .defineReplacement(PATH_WORK_ITEM_ID_REPLACEMENT, workItemId.toString())\n-                                 .populateSpec();\n+        //TODO verify this is a bug", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyMTg3NQ=="}, "originalCommit": {"oid": "2c45c2f0810f1c3dc0bdc0da2785fa144ec09168"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1706, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}