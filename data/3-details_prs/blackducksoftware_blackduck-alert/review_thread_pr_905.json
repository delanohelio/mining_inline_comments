{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjU4Nzkw", "number": 905, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjo0ODowMVrODmYKVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjo0ODowMVrODmYKVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTY4MzQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/web/config/JobConfigActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjo0ODowMVrOFzwsuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjo0ODowMVrOFzwsuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxOTU3Ng==", "bodyText": "Either abstract this into its own method, or do the check before this stream. This is a little to cluttered IMO.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/905#discussion_r389819576", "createdAt": "2020-03-09T16:48:01Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/config/JobConfigActions.java", "diffHunk": "@@ -172,20 +174,28 @@ public JobFieldModel updateJob(UUID id, JobFieldModel jobFieldModel) throws Aler\n         return savedJobFieldModel;\n     }\n \n-    private void validateJobNameUnique(JobFieldModel jobFieldModel) throws AlertFieldException {\n+    private void validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) throws AlertFieldException {\n         for (FieldModel fieldModel : jobFieldModel.getFieldModels()) {\n-            validateJobNameUnique(fieldModel);\n+            validateJobNameUnique(currentJobId, fieldModel);\n         }\n     }\n \n-    private void validateJobNameUnique(FieldModel fieldModel) throws AlertFieldException {\n+    private void validateJobNameUnique(@Nullable UUID currentJobId, FieldModel fieldModel) throws AlertFieldException {\n         Optional<FieldValueModel> jobNameFieldOptional = fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME);\n         String error = \"\";\n         if (jobNameFieldOptional.isPresent()) {\n             String jobName = jobNameFieldOptional.get().getValue().orElse(null);\n             if (StringUtils.isNotBlank(jobName)) {\n                 List<ConfigurationJobModel> jobs = configurationAccessor.getAllJobs();\n+\n                 boolean foundDuplicateName = jobs.stream()\n+                                                 .filter(job -> {\n+                                                     if (null != currentJobId) {\n+                                                         return !job.getJobId().equals(currentJobId);\n+                                                     } else {\n+                                                         return true;\n+                                                     }\n+                                                 })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d72deadfa217aa400d56167e229106dfc2ab290"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1924, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}