{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjY5ODIw", "number": 1296, "title": "Adding support for Upgrade Guidance for vulnerable components", "bodyText": "", "createdAt": "2020-12-10T21:29:38Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296", "merged": true, "mergeCommit": {"oid": "77634d1c0b5f1f4980d9716c95cabab29d615a39"}, "closed": true, "closedAt": "2020-12-11T16:32:25Z", "author": {"login": "jamesrichard91"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk6OoXgH2gAyNTM2MjY5ODIwOjJlNmNkMDhhMWEyNDM1Y2MyZWE4Yjc4ZDI5M2JhZDdjZGQ3ZDE3MWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlJlAcAFqTU1MDE5MjgyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d", "committedDate": "2020-12-10T21:28:59Z", "message": "Feat: Adding support for Upgrade Guidance for vulnerable components"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjI5NzUx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#pullrequestreview-549629751", "createdAt": "2020-12-10T21:47:41Z", "commit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0Nzo0MVrOIDexVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0Nzo0MVrOIDexVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyMDc5MQ==", "bodyText": "There's a lot of duplication going on in this class. Since you're working with two different types that don't share a parent, then we will probably want to create a wrapper class around ComponentVersionUpgradeGuidanceLongTermView and ComponentVersionUpgradeGuidanceLongTermView. The class would contain all the relevant shared fields with a constructor for each type where you map the share fields appropriately. Then we can have a lot of this common code in a single place.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540520791", "createdAt": "2020-12-10T21:47:41Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "diffHunk": "@@ -158,6 +151,24 @@ public static LinkableItem createVulnerabilityAttributeItem(String severityValue\n         return Optional.empty();\n     }\n \n+    private static Optional<LinkableItem> createShortTermGuidance(Supplier<ComponentVersionUpgradeGuidanceShortTermView> getShortTermOption, String remediationLabel) {\n+        ComponentVersionUpgradeGuidanceShortTermView shortTermGuidance = getShortTermOption.get();\n+        if (null != shortTermGuidance) {\n+            String versionText = createShortTermGuidanceVersionText(shortTermGuidance);\n+            return Optional.of(new LinkableItem(remediationLabel, versionText, shortTermGuidance.getVersion()));\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private static Optional<LinkableItem> createLongTermGuidance(Supplier<ComponentVersionUpgradeGuidanceLongTermView> getLongTermOption, String remediationLabel) {\n+        ComponentVersionUpgradeGuidanceLongTermView longTermGuidance = getLongTermOption.get();\n+        if (null != longTermGuidance) {\n+            String versionText = createLongTermGuidanceVersionText(longTermGuidance);\n+            return Optional.of(new LinkableItem(remediationLabel, versionText, longTermGuidance.getVersion()));\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjMxMjA4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#pullrequestreview-549631208", "createdAt": "2020-12-10T21:49:51Z", "commit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0OTo1MVrOIDe2Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0OTo1MVrOIDe2Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyMjAyNg==", "bodyText": "These methods can also be handled by the wrapper class mentioned previously", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540522026", "createdAt": "2020-12-10T21:49:51Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "diffHunk": "@@ -169,6 +180,60 @@ private static String createRemediationVersionText(RemediatingVersionView remedi\n         return stringBuilder.toString();\n     }\n \n+    private static String createShortTermGuidanceVersionText(ComponentVersionUpgradeGuidanceShortTermView shortTermGuidance) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        stringBuilder.append(shortTermGuidance.getVersionName());\n+        if (shortTermGuidance.getVulnerabilityRisk() != null) {\n+            ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView vulnerabilityRisk = shortTermGuidance.getVulnerabilityRisk();\n+            if (isBigDecimalGreaterThanZero(vulnerabilityRisk.getCritical()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getHigh()) ||\n+                    isBigDecimalGreaterThanZero(vulnerabilityRisk.getMedium()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getLow())) {\n+                stringBuilder.append(\" (Vulnerabilities: \");\n+                boolean previousVulnerabilites = false;\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getCritical(), \" Critical: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getHigh(), \" High: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getMedium(), \" Medium: \", previousVulnerabilites);\n+                addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getLow(), \" Low: \", previousVulnerabilites);\n+                stringBuilder.append(\")\");\n+            }\n+        }\n+        return stringBuilder.toString();\n+    }\n+\n+    private static String createLongTermGuidanceVersionText(ComponentVersionUpgradeGuidanceLongTermView longTermGuidance) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        stringBuilder.append(longTermGuidance.getVersionName());\n+        if (longTermGuidance.getVulnerabilityRisk() != null) {\n+            ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView vulnerabilityRisk = longTermGuidance.getVulnerabilityRisk();\n+            if (isBigDecimalGreaterThanZero(vulnerabilityRisk.getCritical()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getHigh()) ||\n+                    isBigDecimalGreaterThanZero(vulnerabilityRisk.getMedium()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getLow())) {\n+                stringBuilder.append(\" (Vulnerabilities: \");\n+                boolean previousVulnerabilites = false;\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getCritical(), \" Critical: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getHigh(), \" High: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getMedium(), \" Medium: \", previousVulnerabilites);\n+                addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getLow(), \" Low: \", previousVulnerabilites);\n+                stringBuilder.append(\")\");\n+            }\n+        }\n+        return stringBuilder.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d"}, "originalPosition": 152}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b030edc0358896afccf1747628a3a2862892af80", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b030edc0358896afccf1747628a3a2862892af80", "committedDate": "2020-12-10T23:00:38Z", "message": "Refactor(VulnerabilityUtil): Adding wrapper classes to simplify the upgrade guidance processing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5032081d3577621602059b105dd76669cc505395", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5032081d3577621602059b105dd76669cc505395", "committedDate": "2020-12-10T23:03:04Z", "message": "Fix: removing code that was used for testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "344badb800e4ba1718c3d14601296cb32e077fe5", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/344badb800e4ba1718c3d14601296cb32e077fe5", "committedDate": "2020-12-10T23:04:44Z", "message": "Refactor: updating the hasVulnerability check."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/99f088358b891f3b5c3770ea3c4c408f8be5582d", "committedDate": "2020-12-11T13:24:51Z", "message": "Fix(Test): Adding unit test for the upgrade guidance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDk3MzAy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#pullrequestreview-550097302", "createdAt": "2020-12-11T13:29:57Z", "commit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzoyOTo1N1rOID4zMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzoyOTo1N1rOID4zMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0NzI0OQ==", "bodyText": "Is the number of vulnerabilities not discrete? I assume using BigDecimal is not a mistake, but it seems so odd.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540947249", "createdAt": "2020-12-11T13:29:57Z", "author": {"login": "gkillough"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.synopsys.integration.alert.provider.blackduck.collector.builder.model;\n+\n+import java.math.BigDecimal;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView;\n+\n+public class UpgradeGuidanceRiskView extends AlertSerializableModel {\n+    private BigDecimal critical;\n+    private BigDecimal high;\n+    private BigDecimal medium;\n+    private BigDecimal low;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDk5Mjk5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#pullrequestreview-550099299", "createdAt": "2020-12-11T13:32:39Z", "commit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzozMjozOVrOID45jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzozMjozOVrOID45jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0ODg3Nw==", "bodyText": "Why not pass the true label (e.g. \"Critical\") and append the spaces and colon inside of addVulnerabilityCount?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540948877", "createdAt": "2020-12-11T13:32:39Z", "author": {"login": "gkillough"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "diffHunk": "@@ -169,6 +171,37 @@ private static String createRemediationVersionText(RemediatingVersionView remedi\n         return stringBuilder.toString();\n     }\n \n+    private static String createUpgradeGuidanceVersionText(UpgradeGuidanceView upgradeGuidanceView) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        stringBuilder.append(upgradeGuidanceView.getVersionName());\n+        UpgradeGuidanceRiskView vulnerabilityRisk = upgradeGuidanceView.getVulnerabilityRisk();\n+        if (vulnerabilityRisk.hasVulnerabilities()) {\n+            stringBuilder.append(\" (Vulnerabilities:\");\n+            boolean previousVulnerabilites = false;\n+            previousVulnerabilites = addVulnerabilityCount(stringBuilder, \" Critical: \", previousVulnerabilites, vulnerabilityRisk::hasCriticalVulnerabilities, vulnerabilityRisk::getCritical);\n+            previousVulnerabilites = addVulnerabilityCount(stringBuilder, \" High: \", previousVulnerabilites, vulnerabilityRisk::hasHighVulnerabilities, vulnerabilityRisk::getHigh);\n+            previousVulnerabilites = addVulnerabilityCount(stringBuilder, \" Medium: \", previousVulnerabilites, vulnerabilityRisk::hasMediumVulnerabilities, vulnerabilityRisk::getMedium);\n+            addVulnerabilityCount(stringBuilder, \" Low: \", previousVulnerabilites, vulnerabilityRisk::hasLowVulnerabilities, vulnerabilityRisk::getLow);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTA2MTI3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#pullrequestreview-550106127", "createdAt": "2020-12-11T13:41:38Z", "commit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057c5dd8947a5b7de9a3a11c2fdbb06161932203", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/057c5dd8947a5b7de9a3a11c2fdbb06161932203", "committedDate": "2020-12-11T14:08:52Z", "message": "Refactor: Cleaning up the upgrade guidance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58aed7339d45d2031ceaa02fea947d21c2e88b0", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f58aed7339d45d2031ceaa02fea947d21c2e88b0", "committedDate": "2020-12-11T14:21:57Z", "message": "Refactor: Updating the upgrade guidance wrapper so the constructor reflects the fields accurately. Adding more tests for VulnerabilityUtil"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTkwMjY4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#pullrequestreview-550190268", "createdAt": "2020-12-11T15:19:08Z", "commit": {"oid": "f58aed7339d45d2031ceaa02fea947d21c2e88b0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxOTowOVrOID9UNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxOTowOVrOID9UNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTIzNg==", "bodyText": "You could add a constructor with no params that sets everything to null", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r541021236", "createdAt": "2020-12-11T15:19:09Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.synopsys.integration.alert.provider.blackduck.collector.builder.model;\n+\n+import java.math.BigDecimal;\n+import java.util.Optional;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView;\n+\n+public class UpgradeGuidanceRiskView extends AlertSerializableModel {\n+    private Integer critical;\n+    private Integer high;\n+    private Integer medium;\n+    private Integer low;\n+\n+    public static UpgradeGuidanceRiskView fromShortTermVulnerabilityRiskView(ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView shortTermVulnerabilityRiskView) {\n+        if (null == shortTermVulnerabilityRiskView) {\n+            return new UpgradeGuidanceRiskView(null, null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58aed7339d45d2031ceaa02fea947d21c2e88b0"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53f77054ec0503d2a0ba891e35ebeaf24d9098f4", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/53f77054ec0503d2a0ba891e35ebeaf24d9098f4", "committedDate": "2020-12-11T15:21:28Z", "message": "Adding an empty constructor to the UpgradeGuidanceRiskView, that sets all the fields to null."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTkyODI0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#pullrequestreview-550192824", "createdAt": "2020-12-11T15:22:00Z", "commit": {"oid": "f58aed7339d45d2031ceaa02fea947d21c2e88b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2956, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}