{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTAxNDY5", "number": 816, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyOTozMVrODZQ-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODowOToyMlrODZSkTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE5MjM0OnYy", "diffSide": "RIGHT", "path": "src/main/js/dynamic/loaded/users/RoleTable.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyOTozMVrOFfjwaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyOTozMVrOFfjwaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNjAwOA==", "bodyText": "What's the FIXME in regards to?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368636008", "createdAt": "2020-01-20T16:29:31Z", "author": {"login": "bamandel"}, "path": "src/main/js/dynamic/loaded/users/RoleTable.js", "diffHunk": "@@ -107,40 +98,39 @@ class RoleTable extends Component {\n         this.props.clearFieldErrors();\n     }\n \n-    updatePermissions(permission) {\n-        const { role } = this.state;\n-        const { permissions } = role;\n-        const matchingPermissionIndex = permissions.findIndex(listPermission => listPermission.id === permission.id);\n-        if (matchingPermissionIndex > -1) {\n-            permissions[matchingPermissionIndex] = permission;\n-            role.permissions = permissions;\n-            this.setState({\n-                role: role\n-            });\n-        }\n-    }\n-\n     savePermissions(permission) {\n         const { role, incrementalId } = this.state;\n         const { permissions } = role;\n+        console.log('Saving the permission : ' + permission);\n+        // FIXME", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2df96549bc5e1128d4b0ac40ec6e972cf30245"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE5MzQwOnYy", "diffSide": "RIGHT", "path": "src/main/js/dynamic/loaded/users/RoleTable.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyOTo1MlrOFfjxAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyOTo1MlrOFfjxAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNjE2MA==", "bodyText": "Not sure if you are intending to keep the logs here or not.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368636160", "createdAt": "2020-01-20T16:29:52Z", "author": {"login": "bamandel"}, "path": "src/main/js/dynamic/loaded/users/RoleTable.js", "diffHunk": "@@ -107,40 +98,39 @@ class RoleTable extends Component {\n         this.props.clearFieldErrors();\n     }\n \n-    updatePermissions(permission) {\n-        const { role } = this.state;\n-        const { permissions } = role;\n-        const matchingPermissionIndex = permissions.findIndex(listPermission => listPermission.id === permission.id);\n-        if (matchingPermissionIndex > -1) {\n-            permissions[matchingPermissionIndex] = permission;\n-            role.permissions = permissions;\n-            this.setState({\n-                role: role\n-            });\n-        }\n-    }\n-\n     savePermissions(permission) {\n         const { role, incrementalId } = this.state;\n         const { permissions } = role;\n+        console.log('Saving the permission : ' + permission);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2df96549bc5e1128d4b0ac40ec6e972cf30245"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODIyMjg5OnYy", "diffSide": "RIGHT", "path": "src/main/js/field/EndpointButtonField.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjozOTowNVrOFfkCig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjozOTowNVrOFfkCig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0MDY1MA==", "bodyText": "Did we want to do a new line here?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368640650", "createdAt": "2020-01-20T16:39:05Z", "author": {"login": "bamandel"}, "path": "src/main/js/field/EndpointButtonField.js", "diffHunk": "@@ -59,19 +59,20 @@ class EndpointButtonField extends Component {\n                 onChange({ target });\n                 this.setState({\n                     success: true\n-                })\n+                });\n             } else {\n-                response.json().then((data) => {\n-                    const target = {\n-                        name: [fieldKey],\n-                        checked: false,\n-                        type: 'checkbox'\n-                    };\n-                    onChange({ target });\n-                    this.setState({\n-                        fieldError: data.message\n+                response.json()\n+                    .then((data) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2df96549bc5e1128d4b0ac40ec6e972cf30245"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODIzMTExOnYy", "diffSide": "RIGHT", "path": "src/main/js/field/PopUp.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0MTozOFrOFfkHfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzowMjowNVrOFfksUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0MTkxNg==", "bodyText": "Can't you use the modified PopUp component here?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368641916", "createdAt": "2020-01-20T16:41:38Z", "author": {"login": "bamandel"}, "path": "src/main/js/field/PopUp.js", "diffHunk": "@@ -1,69 +1,52 @@\n import React, { Component } from 'react';\n import PropTypes from 'prop-types';\n import { Modal } from 'react-bootstrap';\n-import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n-import * as FieldModelUtilities from 'util/fieldModelUtilities';\n-import FieldsPanel from './FieldsPanel';\n+import ConfigButtons from 'component/common/ConfigButtons';\n \n class PopUp extends Component {\n     constructor(props) {\n         super(props);\n \n         this.internalCancel = this.internalCancel.bind(this);\n-        this.internalOk = this.internalOk.bind(this);\n-\n-        this.state = {\n-            modalConfig: {},\n-            fieldErrors: {}\n-        };\n     }\n \n     internalCancel() {\n         this.props.onCancel();\n-        this.setState({\n-            modalConfig: {}\n-        });\n-    }\n-\n-    internalOk(modalConfig) {\n-        this.props.onOk(modalConfig);\n-        this.internalCancel();\n     }\n \n     render() {\n         const {\n-            fields, show, title, cancelLabel, okLabel\n+            children, show, title, cancelLabel, okLabel, handleSubmit, performingAction\n         } = this.props;\n-        const { modalConfig, fieldErrors } = this.state;\n-\n         return (\n             <div>\n-                <Modal show={show} onHide={this.internalCancel}>\n+                <Modal size=\"lg\" show={show} onHide={this.internalCancel}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d2df96549bc5e1128d4b0ac40ec6e972cf30245"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY1MTM0Ng==", "bodyText": "This is defining the modified PopUp component", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368651346", "createdAt": "2020-01-20T17:02:05Z", "author": {"login": "jamesrichard91"}, "path": "src/main/js/field/PopUp.js", "diffHunk": "@@ -1,69 +1,52 @@\n import React, { Component } from 'react';\n import PropTypes from 'prop-types';\n import { Modal } from 'react-bootstrap';\n-import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n-import * as FieldModelUtilities from 'util/fieldModelUtilities';\n-import FieldsPanel from './FieldsPanel';\n+import ConfigButtons from 'component/common/ConfigButtons';\n \n class PopUp extends Component {\n     constructor(props) {\n         super(props);\n \n         this.internalCancel = this.internalCancel.bind(this);\n-        this.internalOk = this.internalOk.bind(this);\n-\n-        this.state = {\n-            modalConfig: {},\n-            fieldErrors: {}\n-        };\n     }\n \n     internalCancel() {\n         this.props.onCancel();\n-        this.setState({\n-            modalConfig: {}\n-        });\n-    }\n-\n-    internalOk(modalConfig) {\n-        this.props.onOk(modalConfig);\n-        this.internalCancel();\n     }\n \n     render() {\n         const {\n-            fields, show, title, cancelLabel, okLabel\n+            children, show, title, cancelLabel, okLabel, handleSubmit, performingAction\n         } = this.props;\n-        const { modalConfig, fieldErrors } = this.state;\n-\n         return (\n             <div>\n-                <Modal show={show} onHide={this.internalCancel}>\n+                <Modal size=\"lg\" show={show} onHide={this.internalCancel}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0MTkxNg=="}, "originalCommit": {"oid": "8d2df96549bc5e1128d4b0ac40ec6e972cf30245"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODIzOTgxOnYy", "diffSide": "RIGHT", "path": "src/main/js/field/TableDisplay.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0NDozOFrOFfkMzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0NDozOFrOFfkMzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0MzI3OA==", "bodyText": "Would a ternary operator be allowed here or is it not allowed due to async functions?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368643278", "createdAt": "2020-01-20T16:44:38Z", "author": {"login": "bamandel"}, "path": "src/main/js/field/TableDisplay.js", "diffHunk": "@@ -126,66 +126,53 @@ class TableDisplay extends Component {\n     }\n \n     handleClose() {\n-        this.props.onConfigClose();\n-        this.refs.table.cleanSelected();\n         this.setState({\n             currentRowSelected: null\n         });\n+        this.props.onConfigClose();\n+        this.refs.table.cleanSelected();\n+        this.updateData();\n     }\n \n     handleSubmit(event) {\n         event.preventDefault();\n         event.stopPropagation();\n-        const { modificationState } = this.state;\n-        if (MODIFICATION_STATE.CREATE === modificationState || MODIFICATION_STATE.COPY === modificationState) {\n-            this.props.onConfigSave();\n-        } else if (MODIFICATION_STATE.EDIT === modificationState) {\n-            this.props.onConfigUpdate();\n+        const result = this.props.onConfigSave();\n+        let validationState;\n+        if (result) {\n+            validationState = VALIDATION_STATE.SUCCESS;\n+        } else {\n+            validationState = VALIDATION_STATE.FAILED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODI0Njk4OnYy", "diffSide": "RIGHT", "path": "src/main/js/field/TableDisplay.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0Njo1NlrOFfkRDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0Njo1NlrOFfkRDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0NDM2Nw==", "bodyText": "The formatting here is a little strange to me. Edit on its own line would be a little clearer", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368644367", "createdAt": "2020-01-20T16:46:56Z", "author": {"login": "bamandel"}, "path": "src/main/js/field/TableDisplay.js", "diffHunk": "@@ -297,33 +272,58 @@ class TableDisplay extends Component {\n         this.props.clearModalFieldState();\n         this.props.editState(currentRowSelected);\n         this.setState({\n-            currentRowSelected,\n-            modificationState: MODIFICATION_STATE.EDIT\n+            currentRowSelected\n         });\n     }\n \n     editButtonClick(cell, row) {\n-        return <IconTableCellFormatter handleButtonClicked={this.editButtonClicked} currentRowSelected={row} buttonIconName=\"pencil-alt\" buttonText=\"Edit\" />;\n+        return (<IconTableCellFormatter\n+            handleButtonClicked={this.editButtonClicked}\n+            currentRowSelected={row}\n+            buttonIconName=\"pencil-alt\"\n+            buttonText=\"Edit\"\n+        />);\n     }\n \n     copyButtonClicked(currentRowSelected) {\n+        currentRowSelected.id = null;\n         this.props.editState(currentRowSelected);\n         this.setState({\n-            currentRowSelected,\n-            modificationState: MODIFICATION_STATE.COPY\n+            currentRowSelected\n         });\n     }\n \n     copyButtonClick(cell, row) {\n-        return <IconTableCellFormatter handleButtonClicked={this.copyButtonClicked} currentRowSelected={row} buttonIconName=\"copy\" buttonText=\"Copy\" />;\n+        return (<IconTableCellFormatter\n+            handleButtonClicked={this.copyButtonClicked}\n+            currentRowSelected={row}\n+            buttonIconName=\"copy\"\n+            buttonText=\"Copy\"\n+        />);\n     }\n \n     render() {\n         const tableColumns = this.createTableColumns();\n-        tableColumns.push(<TableHeaderColumn dataField=\"\" width=\"48\" columnClassName=\"tableCell\" dataFormat={this.editButtonClick} thStyle={{ \"text-align\": \"center\" }}>Edit</TableHeaderColumn>);\n-        tableColumns.push(<TableHeaderColumn dataField=\"\" width=\"48\" columnClassName=\"tableCell\" dataFormat={this.copyButtonClick} thStyle={{ \"text-align\": \"center\" }}>Copy</TableHeaderColumn>);\n-\n-        const { selectRowBox, sortName, sortOrder, autoRefresh, tableMessage, newButton, deleteButton, data, tableSearchable } = this.props;\n+        tableColumns.push(<TableHeaderColumn\n+            dataField=\"\"\n+            width=\"48\"\n+            columnClassName=\"tableCell\"\n+            dataFormat={this.editButtonClick}\n+            thStyle={{ textAlign: 'center' }}\n+        >Edit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 370}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODI0OTU0OnYy", "diffSide": "RIGHT", "path": "src/main/js/field/TableDisplay.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0Nzo0NVrOFfkSkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0Nzo0NVrOFfkSkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0NDc1NA==", "bodyText": "Same as above. Looks strange having this on its own line.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368644754", "createdAt": "2020-01-20T16:47:45Z", "author": {"login": "bamandel"}, "path": "src/main/js/field/TableDisplay.js", "diffHunk": "@@ -297,33 +272,58 @@ class TableDisplay extends Component {\n         this.props.clearModalFieldState();\n         this.props.editState(currentRowSelected);\n         this.setState({\n-            currentRowSelected,\n-            modificationState: MODIFICATION_STATE.EDIT\n+            currentRowSelected\n         });\n     }\n \n     editButtonClick(cell, row) {\n-        return <IconTableCellFormatter handleButtonClicked={this.editButtonClicked} currentRowSelected={row} buttonIconName=\"pencil-alt\" buttonText=\"Edit\" />;\n+        return (<IconTableCellFormatter\n+            handleButtonClicked={this.editButtonClicked}\n+            currentRowSelected={row}\n+            buttonIconName=\"pencil-alt\"\n+            buttonText=\"Edit\"\n+        />);\n     }\n \n     copyButtonClicked(currentRowSelected) {\n+        currentRowSelected.id = null;\n         this.props.editState(currentRowSelected);\n         this.setState({\n-            currentRowSelected,\n-            modificationState: MODIFICATION_STATE.COPY\n+            currentRowSelected\n         });\n     }\n \n     copyButtonClick(cell, row) {\n-        return <IconTableCellFormatter handleButtonClicked={this.copyButtonClicked} currentRowSelected={row} buttonIconName=\"copy\" buttonText=\"Copy\" />;\n+        return (<IconTableCellFormatter\n+            handleButtonClicked={this.copyButtonClicked}\n+            currentRowSelected={row}\n+            buttonIconName=\"copy\"\n+            buttonText=\"Copy\"\n+        />);\n     }\n \n     render() {\n         const tableColumns = this.createTableColumns();\n-        tableColumns.push(<TableHeaderColumn dataField=\"\" width=\"48\" columnClassName=\"tableCell\" dataFormat={this.editButtonClick} thStyle={{ \"text-align\": \"center\" }}>Edit</TableHeaderColumn>);\n-        tableColumns.push(<TableHeaderColumn dataField=\"\" width=\"48\" columnClassName=\"tableCell\" dataFormat={this.copyButtonClick} thStyle={{ \"text-align\": \"center\" }}>Copy</TableHeaderColumn>);\n-\n-        const { selectRowBox, sortName, sortOrder, autoRefresh, tableMessage, newButton, deleteButton, data, tableSearchable } = this.props;\n+        tableColumns.push(<TableHeaderColumn\n+            dataField=\"\"\n+            width=\"48\"\n+            columnClassName=\"tableCell\"\n+            dataFormat={this.editButtonClick}\n+            thStyle={{ textAlign: 'center' }}\n+        >Edit\n+        </TableHeaderColumn>);\n+        tableColumns.push(<TableHeaderColumn\n+            dataField=\"\"\n+            width=\"48\"\n+            columnClassName=\"tableCell\"\n+            dataFormat={this.copyButtonClick}\n+            thStyle={{ textAlign: 'center' }}\n+        >Copy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 378}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODI1MDI2OnYy", "diffSide": "RIGHT", "path": "src/main/js/field/TableDisplay.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0ODowMVrOFfkTCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo0ODowMVrOFfkTCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0NDg3NQ==", "bodyText": "Should this be removed?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368644875", "createdAt": "2020-01-20T16:48:01Z", "author": {"login": "bamandel"}, "path": "src/main/js/field/TableDisplay.js", "diffHunk": "@@ -391,7 +400,8 @@ class TableDisplay extends Component {\n \n         const refresh = this.props.tableRefresh && (\n             <div className=\"pull-right\">\n-                <AutoRefresh startAutoReload={this.props.refreshData} autoRefresh={autoRefresh} />\n+                {/* <AutoRefresh startAutoReload={this.props.refreshData} autoRefresh={autoRefresh} /> */}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 410}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODI1NjU3OnYy", "diffSide": "RIGHT", "path": "src/main/js/store/actions/roles.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo1MDowNlrOFfkWvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo1MDowNlrOFfkWvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0NTgyMQ==", "bodyText": "I think having the lines not starting with . makes more sense. My IDE was doing this to me automatically with the save actions. Perhaps you are having the same issue?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368645821", "createdAt": "2020-01-20T16:50:06Z", "author": {"login": "bamandel"}, "path": "src/main/js/store/actions/roles.js", "diffHunk": "@@ -89,75 +89,56 @@ export function fetchRoles() {\n                 'X-CSRF-TOKEN': csrfToken,\n                 'Content-Type': 'application/json'\n             }\n-        }).then((response) => {\n-            if (response.ok) {\n-                response.json().then((jsonArray) => {\n-                    dispatch(fetchedAllRoles(jsonArray));\n-                });\n-            } else {\n-                switch (response.status) {\n-                    case 401:\n-                    case 403:\n-                        dispatch(verifyLoginByStatus(response.status));\n-                        break;\n-                    default:\n-                        response.json().then((json) => {\n-                            let message = '';\n-                            if (json && json.message) {\n-                                // This is here to ensure the message is a string. We have gotten UI errors because it is somehow an object sometimes\n-                                message = json.message.toString();\n-                            }\n-                            dispatch(fetchingAllRolesError(message));\n+        })\n+            .then((response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODI1OTc4OnYy", "diffSide": "RIGHT", "path": "src/main/js/store/actions/users.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo1MToxMFrOFfkYpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo1MToxMFrOFfkYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0NjMwOQ==", "bodyText": "more lines starting with a period", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368646309", "createdAt": "2020-01-20T16:51:10Z", "author": {"login": "bamandel"}, "path": "src/main/js/store/actions/users.js", "diffHunk": "@@ -90,75 +90,56 @@ export function fetchUsers() {\n                 'X-CSRF-TOKEN': csrfToken,\n                 'Content-Type': 'application/json'\n             }\n-        }).then((response) => {\n-            if (response.ok) {\n-                response.json().then((jsonArray) => {\n-                    dispatch(fetchedAllUsers(jsonArray));\n-                });\n-            } else {\n-                switch (response.status) {\n-                    case 401:\n-                    case 403:\n-                        dispatch(verifyLoginByStatus(response.status));\n-                        break;\n-                    default:\n-                        response.json().then((json) => {\n-                            let message = '';\n-                            if (json && json.message) {\n-                                // This is here to ensure the message is a string. We have gotten UI errors because it is somehow an object sometimes\n-                                message = json.message.toString();\n-                            }\n-                            dispatch(fetchingAllUsersError(message));\n+        })\n+            .then((response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODI2NDg2OnYy", "diffSide": "RIGHT", "path": "src/main/js/store/reducers/users.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo1Mjo0MlrOFfkbZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzowNzoxMlrOFfk1Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0NzAxNA==", "bodyText": "Do we actually want this set to false here?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368647014", "createdAt": "2020-01-20T16:52:42Z", "author": {"login": "bamandel"}, "path": "src/main/js/store/reducers/users.js", "diffHunk": "@@ -59,7 +59,7 @@ const users = (state = initialState, action) => {\n             });\n         case USER_MANAGEMENT_USER_FETCHING_ALL:\n             return Object.assign({}, state, {\n-                inProgress: true,\n+                inProgress: false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY1MzU3NA==", "bodyText": "Yes, we want to separate the inProgress and fetching booleans. I have separated our use of the two flags. InProgress now refers to a change being made to a User or Role (create, edit, delete) and fetching refers to retrieving them.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368653574", "createdAt": "2020-01-20T17:07:12Z", "author": {"login": "jamesrichard91"}, "path": "src/main/js/store/reducers/users.js", "diffHunk": "@@ -59,7 +59,7 @@ const users = (state = initialState, action) => {\n             });\n         case USER_MANAGEMENT_USER_FETCHING_ALL:\n             return Object.assign({}, state, {\n-                inProgress: true,\n+                inProgress: false,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0NzAxNA=="}, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODI3MzE5OnYy", "diffSide": "RIGHT", "path": "src/main/js/dynamic/loaded/users/UserTable.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo1NToyMlrOFfkgQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzowODo1MlrOFfk30g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0ODI1Nw==", "bodyText": "I think we want to negate the matching by default, otherwise, the user could save a blank password, no?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368648257", "createdAt": "2020-01-20T16:55:22Z", "author": {"login": "gkillough"}, "path": "src/main/js/dynamic/loaded/users/UserTable.js", "diffHunk": "@@ -83,12 +83,29 @@ class UserTable extends Component {\n \n     onSave() {\n         const { user } = this.state;\n-        this.props.createUser(user);\n+        if (this.checkIfPasswordsMatch(user)) {\n+            this.props.saveUser(user);\n+            return true;\n+        }\n+        return false;\n     }\n \n-    onUpdate() {\n-        const { user } = this.state;\n-        this.props.updateUser(user);\n+    checkIfPasswordsMatch(user) {\n+        const passwordKey = 'password';\n+        const confirmPasswordKey = 'confirmPassword';\n+        const confirmPasswordError = 'confirmPasswordError';\n+\n+        let passwordError = '';\n+        let matching = true;\n+        if ((user[passwordKey] || user[confirmPasswordKey]) && (user[passwordKey] !== user[confirmPasswordKey])) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY1NDI5MA==", "bodyText": "The only time we want to validate the passwords is if they have provided a value for either password field. If neither password field has been provided, we want to skip this because they may be updating some other User field.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368654290", "createdAt": "2020-01-20T17:08:52Z", "author": {"login": "jamesrichard91"}, "path": "src/main/js/dynamic/loaded/users/UserTable.js", "diffHunk": "@@ -83,12 +83,29 @@ class UserTable extends Component {\n \n     onSave() {\n         const { user } = this.state;\n-        this.props.createUser(user);\n+        if (this.checkIfPasswordsMatch(user)) {\n+            this.props.saveUser(user);\n+            return true;\n+        }\n+        return false;\n     }\n \n-    onUpdate() {\n-        const { user } = this.state;\n-        this.props.updateUser(user);\n+    checkIfPasswordsMatch(user) {\n+        const passwordKey = 'password';\n+        const confirmPasswordKey = 'confirmPassword';\n+        const confirmPasswordError = 'confirmPasswordError';\n+\n+        let passwordError = '';\n+        let matching = true;\n+        if ((user[passwordKey] || user[confirmPasswordKey]) && (user[passwordKey] !== user[confirmPasswordKey])) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0ODI1Nw=="}, "originalCommit": {"oid": "33c5c087f5f2b49e7cd21fade5b024a74e9d1619"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODMwMjIzOnYy", "diffSide": "RIGHT", "path": "src/main/js/component/common/ConfigButtons.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzowNDo0MlrOFfkxFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzowNDo0MlrOFfkxFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY1MjU2Nw==", "bodyText": "Should this be wrapped in parenthesis as well?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368652567", "createdAt": "2020-01-20T17:04:42Z", "author": {"login": "psantos1113"}, "path": "src/main/js/component/common/ConfigButtons.js", "diffHunk": "@@ -22,19 +24,17 @@ class ConfigButtons extends Component {\n \n     createSaveButton() {\n         const { includeSave, submitLabel } = this.props;\n-\n         if (includeSave) {\n-            return <SubmitButton id=\"submitButton\">{submitLabel}</SubmitButton>\n+            return (<SubmitButton id=\"submitButton\">{submitLabel}</SubmitButton>);\n         }\n         return null;\n-\n     }\n \n     createCancelButton() {\n         const { includeCancel, onCancelClick, cancelLabel } = this.props;\n \n         if (includeCancel) {\n-            return <CancelButton id=\"cancelButton\" onClick={onCancelClick}>{cancelLabel}</CancelButton>\n+            return <CancelButton id=\"cancelButton\" onClick={onCancelClick}>{cancelLabel}</CancelButton>;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dc19abbe4966c062019fdcf31b63e9e2640888e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODQ1MTk3OnYy", "diffSide": "RIGHT", "path": "src/main/js/field/input/SubmitButton.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODowOToyMlrOFfmJNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxODoxODo0MlrOFfmTpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3NTEyNQ==", "bodyText": "Everywhere this component is used is wrapped in a form element correct? Otherwise the submit won't work.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368675125", "createdAt": "2020-01-20T18:09:22Z", "author": {"login": "psantos1113"}, "path": "src/main/js/field/input/SubmitButton.js", "diffHunk": "@@ -1,20 +1,18 @@\n import React from 'react';\n import PropTypes from 'prop-types';\n \n-const SubmitButton = ({ onClick, children, id }) => (\n-    <button id={id} className=\"btn btn-md btn-primary\" type=\"submit\" onClick={onClick}>{children}</button>\n+const SubmitButton = ({ children, id }) => (\n+    <button id={id} className=\"btn btn-md btn-primary\" type=\"submit\">{children}</button>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aafa1b02c5b7319b2d5bfef06b6f87d69e80b1f4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3Nzc5OQ==", "bodyText": "yes, this is always part of a form. I added the onClick to master when working on this PR and that breaks a lot of things.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/816#discussion_r368677799", "createdAt": "2020-01-20T18:18:42Z", "author": {"login": "jamesrichard91"}, "path": "src/main/js/field/input/SubmitButton.js", "diffHunk": "@@ -1,20 +1,18 @@\n import React from 'react';\n import PropTypes from 'prop-types';\n \n-const SubmitButton = ({ onClick, children, id }) => (\n-    <button id={id} className=\"btn btn-md btn-primary\" type=\"submit\" onClick={onClick}>{children}</button>\n+const SubmitButton = ({ children, id }) => (\n+    <button id={id} className=\"btn btn-md btn-primary\" type=\"submit\">{children}</button>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3NTEyNQ=="}, "originalCommit": {"oid": "aafa1b02c5b7319b2d5bfef06b6f87d69e80b1f4"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2047, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}