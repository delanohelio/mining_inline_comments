{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMTYwMTcw", "number": 1009, "title": "Create and separate a mutable and immutable version of the ConfigurationModel class", "bodyText": "After discussing with Gavin, we decided rather to use a builder to instead separate the model into having a mutable and immutable version, where the mutable is a subclass of main ConfigurationModel by removing the put method.\nLet me know if there are any questions related to the refactor or tests.", "createdAt": "2020-06-08T13:58:30Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009", "merged": true, "mergeCommit": {"oid": "b167bd8e1694761e793f19b8ace1df5e538a3527"}, "closed": true, "closedAt": "2020-06-09T14:44:36Z", "author": {"login": "ChomickiM"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoDuS0AH2gAyNDMxMTYwMTcwOjAwNDE4OWM4MjU0OGQ4YmFhNGE2YzA4Njc5NjU0ZjRiOTg1ZTYzNjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcplyhhgFqTQyNzE5OTY4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "004189c82548d8baa4a6c08679654f4b985e6362", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/004189c82548d8baa4a6c08679654f4b985e6362", "committedDate": "2020-06-04T20:03:20Z", "message": "test: Created mutable ConfigurationModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b47810c7a8dce5ae37d1f8df921ee3e3d081754e", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b47810c7a8dce5ae37d1f8df921ee3e3d081754e", "committedDate": "2020-06-08T13:31:44Z", "message": "test: Increasing test coverage for ConfigurationModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67e5deade1afd4738fefe402ece4975de0a3a698", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/67e5deade1afd4738fefe402ece4975de0a3a698", "committedDate": "2020-06-08T13:32:56Z", "message": "Merge remote-tracking branch 'origin/master' into mc_ConfigurationModel_builder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca", "committedDate": "2020-06-08T13:45:02Z", "message": "style: License header update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mjg4MzYy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-426288362", "createdAt": "2020-06-08T14:17:12Z", "commit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mjk2OTQw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-426296940", "createdAt": "2020-06-08T14:25:49Z", "commit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDoyNTo1MFrOGghHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDoyNTo1MFrOGghHyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc1MDI4Mw==", "bodyText": "We also need the configuredFields from this set on the new instance. You could do this through the constructor or you could do something like this:\npublic ConfigurationModelMutable createMutableCopy() {\n    ConfigurationModelMutable mutableCopy = new ConfigurationModelMutable(descriptorId, configurationId, createdAt, lastUpdated, context);\n    mutableCopy.getConfiguredFields().putAll(configuredFields);\n    return mutableCopy;\n}\nor (not 100% sure this will work)\npublic ConfigurationModelMutable createMutableCopy() {\n    ConfigurationModelMutable mutableCopy = new ConfigurationModelMutable(descriptorId, configurationId, createdAt, lastUpdated, context);\n    mutableCopy.configuredFields = configuredFields;\n    return mutableCopy;\n}\nEdit: I forgot you cannot actually do it through the constructor because the super-class owns configuredFields.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#discussion_r436750283", "createdAt": "2020-06-08T14:25:50Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/persistence/model/ConfigurationModel.java", "diffHunk": "@@ -88,20 +91,7 @@ public ConfigContextEnum getDescriptorContext() {\n         return new HashMap<>(configuredFields);\n     }\n \n-    public void put(ConfigurationFieldModel configFieldModel) {\n-        Objects.requireNonNull(configFieldModel);\n-        String fieldKey = configFieldModel.getFieldKey();\n-        Objects.requireNonNull(fieldKey);\n-        if (configuredFields.containsKey(fieldKey)) {\n-            ConfigurationFieldModel oldConfigField = configuredFields.get(fieldKey);\n-            List<String> values = combine(oldConfigField, configFieldModel);\n-            oldConfigField.setFieldValues(values);\n-        } else {\n-            configuredFields.put(fieldKey, configFieldModel);\n-        }\n-    }\n-\n-    private List<String> combine(ConfigurationFieldModel first, ConfigurationFieldModel second) {\n-        return Stream.concat(first.getFieldValues().stream(), second.getFieldValues().stream()).collect(Collectors.toList());\n+    public ConfigurationModelMutable createMutableCopy() {\n+        return new ConfigurationModelMutable(descriptorId, configurationId, createdAt, lastUpdated, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzAwMDMy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-426300032", "createdAt": "2020-06-08T14:29:08Z", "commit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDoyOTowOFrOGghRkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNDoyOTowOFrOGghRkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc1Mjc4NQ==", "bodyText": "Let's add a configuredField or two to configurationModel to make sure that the fields are copied.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#discussion_r436752785", "createdAt": "2020-06-08T14:29:08Z", "author": {"login": "gkillough"}, "path": "alert-common/src/test/java/com/synopsys/integration/alert/common/persistence/model/ConfigurationModelTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package com.synopsys.integration.alert.common.persistence.model;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.synopsys.integration.alert.common.enumeration.ConfigContextEnum;\n+import com.synopsys.integration.alert.common.persistence.model.mutable.ConfigurationModelMutable;\n+\n+public class ConfigurationModelTest {\n+    private final Long descriptorId = 1L;\n+    private final Long configurationId = 2L;\n+    private final String createdAt = \"createdAt-test\";\n+    private final String lastUpdated = \"lastUpdated-test\";\n+    private final ConfigContextEnum configContextEnum = ConfigContextEnum.GLOBAL;\n+    private final String fieldKey = \"fieldKey\";\n+\n+    @Test\n+    public void getDescriptorIdTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertEquals(descriptorId, configurationModel.getDescriptorId());\n+    }\n+\n+    @Test\n+    public void getConfigurationIdTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertEquals(configurationId, configurationModel.getConfigurationId());\n+    }\n+\n+    @Test\n+    public void getCreatedAtTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertEquals(createdAt, configurationModel.getCreatedAt());\n+    }\n+\n+    @Test\n+    public void getLastUpdatedTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertEquals(lastUpdated, configurationModel.getLastUpdated());\n+    }\n+\n+    @Test\n+    public void getDescriptorContextTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertEquals(configContextEnum, configurationModel.getDescriptorContext());\n+    }\n+\n+    @Test\n+    public void getFieldTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertFalse(configurationModel.getField(fieldKey).isPresent());\n+    }\n+\n+    @Test\n+    public void getCopyOfFieldListTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertTrue(configurationModel.getCopyOfFieldList().isEmpty());\n+    }\n+\n+    @Test\n+    public void getCopyOfKeyToFieldMapTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();\n+        assertTrue(configurationModel.getCopyOfKeyToFieldMap().isEmpty());\n+    }\n+\n+    @Test\n+    public void createMutableCopyTest() {\n+        ConfigurationModel configurationModel = createConfigurationModel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzA1MzI1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-426305325", "createdAt": "2020-06-08T14:34:52Z", "commit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2MzY0ODc0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-426364874", "createdAt": "2020-06-08T15:36:21Z", "commit": {"oid": "aa1e9b43d31f915c4b4ea133e52c9af8f9ac35ca"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66b7bec82c8a0d17c2d545d1ae8d21b21c7f712d", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/66b7bec82c8a0d17c2d545d1ae8d21b21c7f712d", "committedDate": "2020-06-08T18:00:46Z", "message": "refactor: Creating new ConfigurationModel constructor with configuredFields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDkxNDAw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-426491400", "createdAt": "2020-06-08T18:09:49Z", "commit": {"oid": "66b7bec82c8a0d17c2d545d1ae8d21b21c7f712d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTQxNDEy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-426541412", "createdAt": "2020-06-08T19:07:54Z", "commit": {"oid": "66b7bec82c8a0d17c2d545d1ae8d21b21c7f712d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTk5Njg2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1009#pullrequestreview-427199686", "createdAt": "2020-06-09T14:18:39Z", "commit": {"oid": "66b7bec82c8a0d17c2d545d1ae8d21b21c7f712d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3541, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}