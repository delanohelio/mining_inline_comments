{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MjQ5MTU2", "number": 1238, "title": "Fix all field error messages not displaying on distribution test configuration error", "bodyText": "In 6.3.0 we split up the validation step and had a case where if the name was missing it wouldn't get the field status messages for the other fields. This changes the name validation to also return a fieldstatus and correctly display all of the errors in the UI.", "createdAt": "2020-11-02T18:42:38Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238", "merged": true, "mergeCommit": {"oid": "daa60c4f8341eb6c0323e42c07d7e2ae190b84bc"}, "closed": true, "closedAt": "2020-11-05T20:23:30Z", "author": {"login": "ChomickiM"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYo3XvAH2gAyNTE0MjQ5MTU2OmY4ZGE2YjQ2MTlkNjAxZjllNTMwNzQzYzExNTYxMjljNWFhMzQ2ODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZkdUggFqTUyNDQwNjAxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f8da6b4619d601f9e530743c1156129c5aa34680", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f8da6b4619d601f9e530743c1156129c5aa34680", "committedDate": "2020-11-02T18:28:06Z", "message": "fix: Update validateJobNameUnique to return a field status"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTI2NTUz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#pullrequestreview-521926553", "createdAt": "2020-11-02T19:21:05Z", "commit": {"oid": "f8da6b4619d601f9e530743c1156129c5aa34680"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyMTowNVrOHsSbfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxOToyMTowNVrOHsSbfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMTM0Mw==", "bodyText": "There should only be 1 name per job, so why are we returning a list for this method?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r516201343", "createdAt": "2020-11-02T19:21:05Z", "author": {"login": "jamesrichard91"}, "path": "web/src/main/java/com/synopsys/integration/alert/web/api/job/JobConfigActions.java", "diffHunk": "@@ -230,18 +231,18 @@ public JobConfigActions(AuthorizationManager authorizationManager, DescriptorAcc\n         }\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n-        ValidationResponseModel responseModel = ValidationResponseModel.success(\"Valid name\");\n+    private List<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n+        List<AlertFieldStatus> fieldStatuses = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8da6b4619d601f9e530743c1156129c5aa34680"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a23c43c45b3bd6be50e2b97717c782ee8ef985d", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2a23c43c45b3bd6be50e2b97717c782ee8ef985d", "committedDate": "2020-11-02T19:47:26Z", "message": "refactor: Change validateJobNameUnique to return an optional rather than a list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTU3MzEw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#pullrequestreview-521957310", "createdAt": "2020-11-02T20:08:45Z", "commit": {"oid": "2a23c43c45b3bd6be50e2b97717c782ee8ef985d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDowODo0NVrOHsT7jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMDowODo0NVrOHsT7jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNTkzMg==", "bodyText": "Could you use a stream here to remove the for loop?  You would have to change the method signature of validateJobNameUnique to take a FieldValueModel.\nOptional<AlertFieldStatus> fieldStatus = jobFieldModel.getFieldModels().stream()\n     .filter(fieldModel ->                                            \n                     fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME).isPresent())\n     .map(fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME))\n     .map(fieldValueModel -> validateJobNameUnique(currentJobId, fieldValueModel)\n     .orElse(Optional.empty());", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r516225932", "createdAt": "2020-11-02T20:08:45Z", "author": {"login": "psantos1113"}, "path": "web/src/main/java/com/synopsys/integration/alert/web/api/job/JobConfigActions.java", "diffHunk": "@@ -230,18 +231,17 @@ public JobConfigActions(AuthorizationManager authorizationManager, DescriptorAcc\n         }\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n-        ValidationResponseModel responseModel = ValidationResponseModel.success(\"Valid name\");\n+    private Optional<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n         for (FieldModel fieldModel : jobFieldModel.getFieldModels()) {\n-            responseModel = validateJobNameUnique(currentJobId, fieldModel);\n-            if (responseModel.hasErrors()) {\n-                return responseModel;\n+            Optional<AlertFieldStatus> fieldStatus = validateJobNameUnique(currentJobId, fieldModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a23c43c45b3bd6be50e2b97717c782ee8ef985d"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37b8756ded3ca1006730a2d8855e7d1adb224dff", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/37b8756ded3ca1006730a2d8855e7d1adb224dff", "committedDate": "2020-11-02T21:18:37Z", "message": "refactor: Update validateJobNameUnique to use a stream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMDkyNzM1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#pullrequestreview-522092735", "createdAt": "2020-11-02T23:02:21Z", "commit": {"oid": "37b8756ded3ca1006730a2d8855e7d1adb224dff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjE3MTY3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#pullrequestreview-523617167", "createdAt": "2020-11-04T18:13:21Z", "commit": {"oid": "37b8756ded3ca1006730a2d8855e7d1adb224dff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxMzoyMlrOHtkDfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxMzoyMlrOHtkDfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzODY4Ng==", "bodyText": "This is for 6.3.0 right? This method should not be used in 6.4.0+", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#discussion_r517538686", "createdAt": "2020-11-04T18:13:22Z", "author": {"login": "gkillough"}, "path": "web/src/main/java/com/synopsys/integration/alert/web/api/job/JobConfigActions.java", "diffHunk": "@@ -230,43 +231,38 @@ public JobConfigActions(AuthorizationManager authorizationManager, DescriptorAcc\n         }\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n-        ValidationResponseModel responseModel = ValidationResponseModel.success(\"Valid name\");\n-        for (FieldModel fieldModel : jobFieldModel.getFieldModels()) {\n-            responseModel = validateJobNameUnique(currentJobId, fieldModel);\n-            if (responseModel.hasErrors()) {\n-                return responseModel;\n-            }\n-        }\n-        return responseModel;\n+    private Optional<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, JobFieldModel jobFieldModel) {\n+        Optional<AlertFieldStatus> fieldStatus = jobFieldModel.getFieldModels().stream()\n+                                                     .filter(fieldModel -> fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME).isPresent())\n+                                                     .findFirst()\n+                                                     .flatMap(fieldModel -> fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME))\n+                                                     .flatMap(fieldValueModel -> validateJobNameUnique(currentJobId, fieldValueModel));\n+        return fieldStatus;\n     }\n \n-    private ValidationResponseModel validateJobNameUnique(@Nullable UUID currentJobId, FieldModel fieldModel) {\n-        Optional<FieldValueModel> jobNameFieldOptional = fieldModel.getFieldValueModel(ChannelDistributionUIConfig.KEY_NAME);\n+    private Optional<AlertFieldStatus> validateJobNameUnique(@Nullable UUID currentJobId, FieldValueModel fieldValueModel) {\n         String error = \"\";\n-        if (jobNameFieldOptional.isPresent()) {\n-            String jobName = jobNameFieldOptional.get().getValue().orElse(null);\n-            if (StringUtils.isNotBlank(jobName)) {\n-                List<ConfigurationJobModel> jobs = configurationAccessor.getAllJobs();\n-\n-                boolean foundDuplicateName = jobs.stream()\n-                                                 .filter(job -> filterOutMatchingJobs(currentJobId, job))\n-                                                 .flatMap(job -> job.getCopyOfConfigurations().stream())\n-                                                 .map(configurationModel -> configurationModel.getField(ChannelDistributionUIConfig.KEY_NAME).orElse(null))\n-                                                 .filter(configurationFieldModel -> (null != configurationFieldModel) && configurationFieldModel.getFieldValue().isPresent())\n-                                                 .anyMatch(configurationFieldModel -> jobName.equals(configurationFieldModel.getFieldValue().get()));\n-                if (foundDuplicateName) {\n-                    error = \"A distribution configuration with this name already exists.\";\n-                }\n-            } else {\n-                error = \"Name cannot be blank.\";\n+        String jobName = fieldValueModel.getValue().orElse(null);\n+        if (StringUtils.isNotBlank(jobName)) {\n+            List<ConfigurationJobModel> jobs = configurationAccessor.getAllJobs();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37b8756ded3ca1006730a2d8855e7d1adb224dff"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjIxMjM2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#pullrequestreview-523621236", "createdAt": "2020-11-04T18:19:08Z", "commit": {"oid": "37b8756ded3ca1006730a2d8855e7d1adb224dff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NDA2MDE4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1238#pullrequestreview-524406018", "createdAt": "2020-11-05T15:53:57Z", "commit": {"oid": "37b8756ded3ca1006730a2d8855e7d1adb224dff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3046, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}