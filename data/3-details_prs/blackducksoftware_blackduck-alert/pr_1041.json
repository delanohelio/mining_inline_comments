{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjM4ODYz", "number": 1041, "title": "Create Initial Azure Boards Library", "bodyText": "", "createdAt": "2020-06-30T19:09:47Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041", "merged": true, "mergeCommit": {"oid": "035d3db31e1ba30460ad8acf519166e787a23a57"}, "closed": true, "closedAt": "2020-07-01T12:34:31Z", "author": {"login": "gkillough"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwXBBngH2gAyNDQyMjM4ODYzOjA2MTIwOTJjMzA4NjU0MjMyNDBlN2I1MDcwMmVmMDRiYTZjNzY3ZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwpeh1AH2gAyNDQyMjM4ODYzOmFkNDhlMzIyZWJlNzkwYzcyYzY1Yzk1Y2NlZDgxMTNjMGFiMWZjNmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0612092c30865423240e7b50702ef04ba6c767e9", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0612092c30865423240e7b50702ef04ba6c767e9", "committedDate": "2020-06-30T15:03:23Z", "message": "Feat: Create azure-boards-common and create OAuth 2.0 example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63852faf932ea757f1c52e31605898c16163acf3", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/63852faf932ea757f1c52e31605898c16163acf3", "committedDate": "2020-06-30T15:34:41Z", "message": "Feat(Azure Library): Return String rather than OAuth specific object to limit client's ability to manipulate a request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7fd5a0ef8a466a8761c1be2075a264cebf5f0f1", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e7fd5a0ef8a466a8761c1be2075a264cebf5f0f1", "committedDate": "2020-06-30T16:18:39Z", "message": "Feat(Azure Library): Create basic HTTP service for azure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366", "committedDate": "2020-06-30T17:59:58Z", "message": "Feat(Azure Library): Add project service and various utilities it needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzExNTk3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440311597", "createdAt": "2020-06-30T19:13:27Z", "commit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToxMzoyOFrOGrK4Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToxMzoyOFrOGrK4Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyMDE0Mw==", "bodyText": "Shouldn't we extend IntegrationException to make error handling easier?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#discussion_r447920143", "createdAt": "2020-06-30T19:13:28Z", "author": {"login": "jamesrichard91"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/HttpServiceException.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.synopsys.integration.azure.boards.common.http;\n+\n+import org.apache.http.HttpStatus;\n+\n+public class HttpServiceException extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzExOTg0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440311984", "createdAt": "2020-06-30T19:14:03Z", "commit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzEzNzcw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440313770", "createdAt": "2020-06-30T19:16:54Z", "commit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToxNjo1NFrOGrK-sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToxNjo1NFrOGrK-sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyMTg0Mg==", "bodyText": "The API for this class will definitely change, but for now, I'm going to leave this as a POC.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#discussion_r447921842", "createdAt": "2020-06-30T19:16:54Z", "author": {"login": "gkillough"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureBoardsOAuthService.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package com.synopsys.integration.azure.boards.common.http;\n+\n+import java.io.IOException;\n+import java.net.Proxy;\n+import java.util.Optional;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import com.google.api.client.auth.oauth2.AuthorizationCodeFlow;\n+import com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest;\n+import com.google.api.client.auth.oauth2.BearerToken;\n+import com.google.api.client.auth.oauth2.Credential;\n+import com.google.api.client.auth.oauth2.StoredCredential;\n+import com.google.api.client.auth.oauth2.TokenResponse;\n+import com.google.api.client.http.GenericUrl;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.client.util.Base64;\n+import com.google.api.client.util.store.DataStoreFactory;\n+import com.synopsys.integration.exception.IntegrationException;\n+\n+public class AzureBoardsOAuthService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzI3ODU4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440327858", "createdAt": "2020-06-30T19:38:30Z", "commit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzI4OTc0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440328974", "createdAt": "2020-06-30T19:40:13Z", "commit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0MDoxM1rOGrLuoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTo0MDoxM1rOGrLuoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkzNDExMw==", "bodyText": "This is probably unnecessary.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#discussion_r447934113", "createdAt": "2020-06-30T19:40:13Z", "author": {"login": "gkillough"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/model/AzureSpecTemplate.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.synopsys.integration.azure.boards.common.model;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class AzureSpecTemplate {\n+    private final String specTemplate;\n+    private final Map<String, String> replacementMappings;\n+\n+    public AzureSpecTemplate(String specTemplate) {\n+        this.specTemplate = specTemplate;\n+        this.replacementMappings = new HashMap<>();\n+    }\n+\n+    private AzureSpecTemplate(String specTemplate, Map<String, String> replacementMappings) {\n+        this.specTemplate = specTemplate;\n+        this.replacementMappings = replacementMappings;\n+    }\n+\n+    public AzureSpecTemplate defineReplacement(String specTemplateKey, String replacementString) {\n+        HashMap<String, String> populatedReplacementMappings = new HashMap<>(replacementMappings);\n+        populatedReplacementMappings.put(specTemplateKey, replacementString);\n+        return new AzureSpecTemplate(specTemplate, populatedReplacementMappings);\n+    }\n+\n+    public String populateSpec() {\n+        String populatedSpec = specTemplate;\n+        for (Map.Entry<String, String> replacementEntry : replacementMappings.entrySet()) {\n+            populatedSpec = StringUtils.replaceOnce(populatedSpec, replacementEntry.getKey(), replacementEntry.getValue());\n+        }\n+\n+        if (!replacementMappings.isEmpty()) {\n+            replacementMappings.clear();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e9cb55c93cfe8f83a7308ed8bebb585f0a6366"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3203be506b937c757187bf2e0c9f70966785158", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e3203be506b937c757187bf2e0c9f70966785158", "committedDate": "2020-06-30T19:44:24Z", "message": "Fix(Azure Boards): Extend integration exception and improve spec templating"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzUxNTI5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440751529", "createdAt": "2020-07-01T10:38:03Z", "commit": {"oid": "e3203be506b937c757187bf2e0c9f70966785158"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDozODowM1rOGrggAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDozODowM1rOGrggAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3NDQzNQ==", "bodyText": "Wouldn't this need to be public in the future?  I don't see this method used but the public methods require an AuthorizationCodeFlow which this private method produces.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#discussion_r448274435", "createdAt": "2020-07-01T10:38:03Z", "author": {"login": "psantos1113"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/http/AzureBoardsOAuthService.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package com.synopsys.integration.azure.boards.common.http;\n+\n+import java.io.IOException;\n+import java.net.Proxy;\n+import java.util.Optional;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import com.google.api.client.auth.oauth2.AuthorizationCodeFlow;\n+import com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest;\n+import com.google.api.client.auth.oauth2.BearerToken;\n+import com.google.api.client.auth.oauth2.Credential;\n+import com.google.api.client.auth.oauth2.StoredCredential;\n+import com.google.api.client.auth.oauth2.TokenResponse;\n+import com.google.api.client.http.GenericUrl;\n+import com.google.api.client.http.javanet.NetHttpTransport;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.client.util.Base64;\n+import com.google.api.client.util.store.DataStoreFactory;\n+import com.synopsys.integration.exception.IntegrationException;\n+\n+public class AzureBoardsOAuthService {\n+    private final String authorizationServerUrl;\n+    private final Proxy proxy;\n+    private final DataStoreFactory dataStoreFactory;\n+\n+    public AzureBoardsOAuthService(String authorizationServerUrl, Proxy proxy, DataStoreFactory dataStoreFactory) {\n+        this.authorizationServerUrl = sanitizeUrl(authorizationServerUrl);\n+        this.proxy = proxy;\n+        this.dataStoreFactory = dataStoreFactory;\n+    }\n+\n+    public Optional<Credential> getExistingOAuthCredential(AuthorizationCodeFlow authorizationCodeFlow, String userId) throws IntegrationException {\n+        try {\n+            Credential storedCredential = authorizationCodeFlow.loadCredential(userId);\n+            return Optional.ofNullable(storedCredential);\n+        } catch (IOException e) {\n+            throw new IntegrationException(e);\n+        }\n+    }\n+\n+    public String getAuthorizationUrl(AuthorizationCodeFlow authorizationCodeFlow, String redirectUri) {\n+        return authorizationCodeFlow.newAuthorizationUrl()\n+                   .setClientId(authorizationCodeFlow.getClientId())\n+                   .setRedirectUri(redirectUri)\n+                   .build();\n+    }\n+\n+    public Credential authorizeAndStoreCredential(AuthorizationCodeFlow authorizationCodeFlow, String userId, String authorizationCode) throws IntegrationException {\n+        try {\n+            AuthorizationCodeTokenRequest authorizationCodeTokenRequest = authorizationCodeFlow.newTokenRequest(authorizationCode);\n+            TokenResponse tokenResponse = authorizationCodeTokenRequest.execute();\n+            return authorizationCodeFlow.createAndStoreCredential(tokenResponse, userId);\n+        } catch (IOException e) {\n+            throw new IntegrationException(e);\n+        }\n+    }\n+\n+    private AuthorizationCodeFlow initializeFlow(String clientId) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3203be506b937c757187bf2e0c9f70966785158"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzU3OTMy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440757932", "createdAt": "2020-07-01T10:48:01Z", "commit": {"oid": "e3203be506b937c757187bf2e0c9f70966785158"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0ODowMVrOGrgzBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0ODowMVrOGrgzBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3OTMwMA==", "bodyText": "This seems like it would be well suited in our int-rest library. A utility to handle this kind of replacement for urls.  Might be something to look into in the future.  I like the concept here.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#discussion_r448279300", "createdAt": "2020-07-01T10:48:01Z", "author": {"login": "psantos1113"}, "path": "azure-boards-common/src/main/java/com/synopsys/integration/azure/boards/common/model/AzureSpecTemplate.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.synopsys.integration.azure.boards.common.model;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class AzureSpecTemplate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3203be506b937c757187bf2e0c9f70966785158"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzU5MTg0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1041#pullrequestreview-440759184", "createdAt": "2020-07-01T10:49:51Z", "commit": {"oid": "e3203be506b937c757187bf2e0c9f70966785158"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad48e322ebe790c72c65c95cced8113c0ab1fc6c", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ad48e322ebe790c72c65c95cced8113c0ab1fc6c", "committedDate": "2020-07-01T12:33:54Z", "message": "Merge branch 'master' into feat_azure_boards_library"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3582, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}