{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjY5ODIw", "number": 1296, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0Nzo0MVrOFDss2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxOTowOVrOFECHgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDIyNDI1OnYy", "diffSide": "RIGHT", "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0Nzo0MVrOIDexVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzowMToyNVrOIDhWSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyMDc5MQ==", "bodyText": "There's a lot of duplication going on in this class. Since you're working with two different types that don't share a parent, then we will probably want to create a wrapper class around ComponentVersionUpgradeGuidanceLongTermView and ComponentVersionUpgradeGuidanceLongTermView. The class would contain all the relevant shared fields with a constructor for each type where you map the share fields appropriately. Then we can have a lot of this common code in a single place.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540520791", "createdAt": "2020-12-10T21:47:41Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "diffHunk": "@@ -158,6 +151,24 @@ public static LinkableItem createVulnerabilityAttributeItem(String severityValue\n         return Optional.empty();\n     }\n \n+    private static Optional<LinkableItem> createShortTermGuidance(Supplier<ComponentVersionUpgradeGuidanceShortTermView> getShortTermOption, String remediationLabel) {\n+        ComponentVersionUpgradeGuidanceShortTermView shortTermGuidance = getShortTermOption.get();\n+        if (null != shortTermGuidance) {\n+            String versionText = createShortTermGuidanceVersionText(shortTermGuidance);\n+            return Optional.of(new LinkableItem(remediationLabel, versionText, shortTermGuidance.getVersion()));\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private static Optional<LinkableItem> createLongTermGuidance(Supplier<ComponentVersionUpgradeGuidanceLongTermView> getLongTermOption, String remediationLabel) {\n+        ComponentVersionUpgradeGuidanceLongTermView longTermGuidance = getLongTermOption.get();\n+        if (null != longTermGuidance) {\n+            String versionText = createLongTermGuidanceVersionText(longTermGuidance);\n+            return Optional.of(new LinkableItem(remediationLabel, versionText, longTermGuidance.getVersion()));\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU2MzAxOQ==", "bodyText": "What do you think of the  updated method with the new models?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540563019", "createdAt": "2020-12-10T23:01:25Z", "author": {"login": "jamesrichard91"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "diffHunk": "@@ -158,6 +151,24 @@ public static LinkableItem createVulnerabilityAttributeItem(String severityValue\n         return Optional.empty();\n     }\n \n+    private static Optional<LinkableItem> createShortTermGuidance(Supplier<ComponentVersionUpgradeGuidanceShortTermView> getShortTermOption, String remediationLabel) {\n+        ComponentVersionUpgradeGuidanceShortTermView shortTermGuidance = getShortTermOption.get();\n+        if (null != shortTermGuidance) {\n+            String versionText = createShortTermGuidanceVersionText(shortTermGuidance);\n+            return Optional.of(new LinkableItem(remediationLabel, versionText, shortTermGuidance.getVersion()));\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private static Optional<LinkableItem> createLongTermGuidance(Supplier<ComponentVersionUpgradeGuidanceLongTermView> getLongTermOption, String remediationLabel) {\n+        ComponentVersionUpgradeGuidanceLongTermView longTermGuidance = getLongTermOption.get();\n+        if (null != longTermGuidance) {\n+            String versionText = createLongTermGuidanceVersionText(longTermGuidance);\n+            return Optional.of(new LinkableItem(remediationLabel, versionText, longTermGuidance.getVersion()));\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyMDc5MQ=="}, "originalCommit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDIzMjQ5OnYy", "diffSide": "RIGHT", "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0OTo1MVrOIDe2Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTo0OTo1MVrOIDe2Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyMjAyNg==", "bodyText": "These methods can also be handled by the wrapper class mentioned previously", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540522026", "createdAt": "2020-12-10T21:49:51Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "diffHunk": "@@ -169,6 +180,60 @@ private static String createRemediationVersionText(RemediatingVersionView remedi\n         return stringBuilder.toString();\n     }\n \n+    private static String createShortTermGuidanceVersionText(ComponentVersionUpgradeGuidanceShortTermView shortTermGuidance) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        stringBuilder.append(shortTermGuidance.getVersionName());\n+        if (shortTermGuidance.getVulnerabilityRisk() != null) {\n+            ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView vulnerabilityRisk = shortTermGuidance.getVulnerabilityRisk();\n+            if (isBigDecimalGreaterThanZero(vulnerabilityRisk.getCritical()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getHigh()) ||\n+                    isBigDecimalGreaterThanZero(vulnerabilityRisk.getMedium()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getLow())) {\n+                stringBuilder.append(\" (Vulnerabilities: \");\n+                boolean previousVulnerabilites = false;\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getCritical(), \" Critical: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getHigh(), \" High: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getMedium(), \" Medium: \", previousVulnerabilites);\n+                addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getLow(), \" Low: \", previousVulnerabilites);\n+                stringBuilder.append(\")\");\n+            }\n+        }\n+        return stringBuilder.toString();\n+    }\n+\n+    private static String createLongTermGuidanceVersionText(ComponentVersionUpgradeGuidanceLongTermView longTermGuidance) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        stringBuilder.append(longTermGuidance.getVersionName());\n+        if (longTermGuidance.getVulnerabilityRisk() != null) {\n+            ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView vulnerabilityRisk = longTermGuidance.getVulnerabilityRisk();\n+            if (isBigDecimalGreaterThanZero(vulnerabilityRisk.getCritical()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getHigh()) ||\n+                    isBigDecimalGreaterThanZero(vulnerabilityRisk.getMedium()) || isBigDecimalGreaterThanZero(vulnerabilityRisk.getLow())) {\n+                stringBuilder.append(\" (Vulnerabilities: \");\n+                boolean previousVulnerabilites = false;\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getCritical(), \" Critical: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getHigh(), \" High: \", previousVulnerabilites);\n+                previousVulnerabilites = addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getMedium(), \" Medium: \", previousVulnerabilites);\n+                addVulnerabilityCount(stringBuilder, vulnerabilityRisk.getLow(), \" Low: \", previousVulnerabilites);\n+                stringBuilder.append(\")\");\n+            }\n+        }\n+        return stringBuilder.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e6cd08a1a2435cc2ea8b78d293bad7cdd7d171d"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzIzNzM5OnYy", "diffSide": "RIGHT", "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzoyOTo1N1rOID4zMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzo0MToxOVrOID5OZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0NzI0OQ==", "bodyText": "Is the number of vulnerabilities not discrete? I assume using BigDecimal is not a mistake, but it seems so odd.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540947249", "createdAt": "2020-12-11T13:29:57Z", "author": {"login": "gkillough"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.synopsys.integration.alert.provider.blackduck.collector.builder.model;\n+\n+import java.math.BigDecimal;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView;\n+\n+public class UpgradeGuidanceRiskView extends AlertSerializableModel {\n+    private BigDecimal critical;\n+    private BigDecimal high;\n+    private BigDecimal medium;\n+    private BigDecimal low;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0OTU5MA==", "bodyText": "I use BigDecimal here because that is what we get in the response from Black Duck. I can probably change this to be integer", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540949590", "createdAt": "2020-12-11T13:33:49Z", "author": {"login": "jamesrichard91"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.synopsys.integration.alert.provider.blackduck.collector.builder.model;\n+\n+import java.math.BigDecimal;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView;\n+\n+public class UpgradeGuidanceRiskView extends AlertSerializableModel {\n+    private BigDecimal critical;\n+    private BigDecimal high;\n+    private BigDecimal medium;\n+    private BigDecimal low;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0NzI0OQ=="}, "originalCommit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk1NDIxNQ==", "bodyText": "No need to change it. It's just odd that BlackDuck's response is not discrete.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540954215", "createdAt": "2020-12-11T13:41:19Z", "author": {"login": "gkillough"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package com.synopsys.integration.alert.provider.blackduck.collector.builder.model;\n+\n+import java.math.BigDecimal;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView;\n+\n+public class UpgradeGuidanceRiskView extends AlertSerializableModel {\n+    private BigDecimal critical;\n+    private BigDecimal high;\n+    private BigDecimal medium;\n+    private BigDecimal low;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0NzI0OQ=="}, "originalCommit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzI0ODQ4OnYy", "diffSide": "RIGHT", "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzozMjozOVrOID45jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMzozMjozOVrOID45jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0ODg3Nw==", "bodyText": "Why not pass the true label (e.g. \"Critical\") and append the spaces and colon inside of addVulnerabilityCount?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r540948877", "createdAt": "2020-12-11T13:32:39Z", "author": {"login": "gkillough"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/util/VulnerabilityUtil.java", "diffHunk": "@@ -169,6 +171,37 @@ private static String createRemediationVersionText(RemediatingVersionView remedi\n         return stringBuilder.toString();\n     }\n \n+    private static String createUpgradeGuidanceVersionText(UpgradeGuidanceView upgradeGuidanceView) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        stringBuilder.append(upgradeGuidanceView.getVersionName());\n+        UpgradeGuidanceRiskView vulnerabilityRisk = upgradeGuidanceView.getVulnerabilityRisk();\n+        if (vulnerabilityRisk.hasVulnerabilities()) {\n+            stringBuilder.append(\" (Vulnerabilities:\");\n+            boolean previousVulnerabilites = false;\n+            previousVulnerabilites = addVulnerabilityCount(stringBuilder, \" Critical: \", previousVulnerabilites, vulnerabilityRisk::hasCriticalVulnerabilities, vulnerabilityRisk::getCritical);\n+            previousVulnerabilites = addVulnerabilityCount(stringBuilder, \" High: \", previousVulnerabilites, vulnerabilityRisk::hasHighVulnerabilities, vulnerabilityRisk::getHigh);\n+            previousVulnerabilites = addVulnerabilityCount(stringBuilder, \" Medium: \", previousVulnerabilites, vulnerabilityRisk::hasMediumVulnerabilities, vulnerabilityRisk::getMedium);\n+            addVulnerabilityCount(stringBuilder, \" Low: \", previousVulnerabilites, vulnerabilityRisk::hasLowVulnerabilities, vulnerabilityRisk::getLow);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f088358b891f3b5c3770ea3c4c408f8be5582d"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NzczMzEzOnYy", "diffSide": "RIGHT", "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxOTowOVrOID9UNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToxOTowOVrOID9UNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyMTIzNg==", "bodyText": "You could add a constructor with no params that sets everything to null", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1296#discussion_r541021236", "createdAt": "2020-12-11T15:19:09Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/model/UpgradeGuidanceRiskView.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.synopsys.integration.alert.provider.blackduck.collector.builder.model;\n+\n+import java.math.BigDecimal;\n+import java.util.Optional;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceLongTermVulnerabilityRiskView;\n+import com.synopsys.integration.blackduck.api.generated.component.ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView;\n+\n+public class UpgradeGuidanceRiskView extends AlertSerializableModel {\n+    private Integer critical;\n+    private Integer high;\n+    private Integer medium;\n+    private Integer low;\n+\n+    public static UpgradeGuidanceRiskView fromShortTermVulnerabilityRiskView(ComponentVersionUpgradeGuidanceShortTermVulnerabilityRiskView shortTermVulnerabilityRiskView) {\n+        if (null == shortTermVulnerabilityRiskView) {\n+            return new UpgradeGuidanceRiskView(null, null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58aed7339d45d2031ceaa02fea947d21c2e88b0"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2259, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}