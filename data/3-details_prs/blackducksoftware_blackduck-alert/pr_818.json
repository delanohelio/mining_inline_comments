{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTkzMjcw", "number": 818, "title": "Certificate Storage", "bodyText": "", "createdAt": "2020-01-20T20:33:18Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/818", "merged": true, "mergeCommit": {"oid": "167cefa97f29cc4e34e8b0cdadd1e85bd3a820c1"}, "closed": true, "closedAt": "2020-01-21T13:27:47Z", "author": {"login": "gkillough"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8SoD5AH2gAyMzY0OTkzMjcwOjE2N2NlZmE5N2YyOWNjNGUzNGU4YjBjZGFkZDFlODViZDNhODIwYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8fp3LAFqTM0NTgxNjIzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "167cefa97f29cc4e34e8b0cdadd1e85bd3a820c1", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/167cefa97f29cc4e34e8b0cdadd1e85bd3a820c1", "committedDate": "2020-01-20T20:32:26Z", "message": "Feat(Java): Implement custom certificate storage api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NTI2ODcx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/818#pullrequestreview-345526871", "createdAt": "2020-01-20T20:49:12Z", "commit": {"oid": "167cefa97f29cc4e34e8b0cdadd1e85bd3a820c1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDo0OToxM1rOFfo9Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDo0OToxM1rOFfo9Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcyMTI0Mg==", "bodyText": "I'm not sure that we want to store the certificateContent in our DB. What would the use be? It should just be stored in the Java truststore", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/818#discussion_r368721242", "createdAt": "2020-01-20T20:49:13Z", "author": {"login": "jamesrichard91"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultCustomCertificateAccessor.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * alert-database\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.database.api;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.exception.AlertDatabaseConstraintException;\n+import com.synopsys.integration.alert.common.persistence.accessor.CustomCertificateAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.CustomCertificateModel;\n+import com.synopsys.integration.alert.database.certificates.CustomCertificateEntity;\n+import com.synopsys.integration.alert.database.certificates.CustomCertificateRepository;\n+\n+@Component\n+public class DefaultCustomCertificateAccessor implements CustomCertificateAccessor {\n+    private CustomCertificateRepository customCertificateRepository;\n+\n+    @Autowired\n+    public DefaultCustomCertificateAccessor(CustomCertificateRepository customCertificateRepository) {\n+        this.customCertificateRepository = customCertificateRepository;\n+    }\n+\n+    @Override\n+    public CustomCertificateModel storeCertificate(CustomCertificateModel certificateModel) throws AlertDatabaseConstraintException {\n+        if (null == certificateModel) {\n+            throw new AlertDatabaseConstraintException(\"The certificate model cannot be null\");\n+        }\n+\n+        String alias = certificateModel.getAlias();\n+        if (StringUtils.isBlank(alias)) {\n+            throw new AlertDatabaseConstraintException(\"The field 'alias' cannot be blank\");\n+        }\n+\n+        String certificateContent = certificateModel.getCertificateContent();\n+        if (StringUtils.isBlank(certificateContent)) {\n+            throw new AlertDatabaseConstraintException(\"The field 'certificateContent' cannot be blank\");\n+        }\n+\n+        CustomCertificateEntity entityToSave = new CustomCertificateEntity(alias, certificateContent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "167cefa97f29cc4e34e8b0cdadd1e85bd3a820c1"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODE2MjM4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/818#pullrequestreview-345816238", "createdAt": "2020-01-21T11:43:10Z", "commit": {"oid": "167cefa97f29cc4e34e8b0cdadd1e85bd3a820c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2761, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}