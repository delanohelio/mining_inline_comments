{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTYzNDg1", "number": 1170, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozMjozMFrOEkLXhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozNDoyNFrOEkLchQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzcwNDM3OnYy", "diffSide": "RIGHT", "path": "src/main/js/store/actions/globalConfiguration.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozMjozMFrOHS9fvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODo0OToxOFrOHS-nOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0Mzk2Ng==", "bodyText": "Do we prefer a multiline method signature?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#discussion_r489643966", "createdAt": "2020-09-16T18:32:30Z", "author": {"login": "bamandel"}, "path": "src/main/js/store/actions/globalConfiguration.js", "diffHunk": "@@ -153,18 +157,39 @@ function clearFieldErrors() {\n     };\n }\n \n-function handleFailureResponse(dispatch, responseData, statusCode) {\n+function validatingConfig() {\n+    return {\n+        type: CONFIG_VALIDATING\n+    };\n+}\n+\n+function validatedConfig() {\n+    return {\n+        type: CONFIG_VALIDATED\n+    };\n+}\n+\n+function configValidationError({ message, errors }) {\n+    return {\n+        type: CONFIG_VALIDATE_ERROR,\n+        message,\n+        errors\n+    };\n+}\n+\n+function createErrorHandler(type, defaultHandler) {\n     const errorHandlers = [];\n-    const configErrorHandler = () => configError(responseData.message, responseData.errors);\n     errorHandlers.push(HTTPErrorUtils.createUnauthorizedHandler(unauthorized));\n-    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(() => configError(responseData.message, null)));\n-    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(configErrorHandler));\n-    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(configErrorHandler));\n-    const handler = HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n-    dispatch(handler(statusCode));\n+    errorHandlers.push(HTTPErrorUtils.createForbiddenHandler(() => configError({ type, message: HTTPErrorUtils.MESSAGES.FORBIDDEN_ACTION })));\n+    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(defaultHandler));\n+\n+    return HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n }\n \n-export function refreshConfig(id) {\n+export function\n+refreshConfig(id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY1NzUxNw==", "bodyText": "Why is export function and refreshConfig(id) { on different lines?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#discussion_r489657517", "createdAt": "2020-09-16T18:44:40Z", "author": {"login": "jamesrichard91"}, "path": "src/main/js/store/actions/globalConfiguration.js", "diffHunk": "@@ -153,18 +157,39 @@ function clearFieldErrors() {\n     };\n }\n \n-function handleFailureResponse(dispatch, responseData, statusCode) {\n+function validatingConfig() {\n+    return {\n+        type: CONFIG_VALIDATING\n+    };\n+}\n+\n+function validatedConfig() {\n+    return {\n+        type: CONFIG_VALIDATED\n+    };\n+}\n+\n+function configValidationError({ message, errors }) {\n+    return {\n+        type: CONFIG_VALIDATE_ERROR,\n+        message,\n+        errors\n+    };\n+}\n+\n+function createErrorHandler(type, defaultHandler) {\n     const errorHandlers = [];\n-    const configErrorHandler = () => configError(responseData.message, responseData.errors);\n     errorHandlers.push(HTTPErrorUtils.createUnauthorizedHandler(unauthorized));\n-    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(() => configError(responseData.message, null)));\n-    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(configErrorHandler));\n-    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(configErrorHandler));\n-    const handler = HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n-    dispatch(handler(statusCode));\n+    errorHandlers.push(HTTPErrorUtils.createForbiddenHandler(() => configError({ type, message: HTTPErrorUtils.MESSAGES.FORBIDDEN_ACTION })));\n+    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(defaultHandler));\n+\n+    return HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n }\n \n-export function refreshConfig(id) {\n+export function\n+refreshConfig(id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0Mzk2Ng=="}, "originalCommit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY2MjI2NA==", "bodyText": "This was a mistake, I can update it", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#discussion_r489662264", "createdAt": "2020-09-16T18:49:18Z", "author": {"login": "ChomickiM"}, "path": "src/main/js/store/actions/globalConfiguration.js", "diffHunk": "@@ -153,18 +157,39 @@ function clearFieldErrors() {\n     };\n }\n \n-function handleFailureResponse(dispatch, responseData, statusCode) {\n+function validatingConfig() {\n+    return {\n+        type: CONFIG_VALIDATING\n+    };\n+}\n+\n+function validatedConfig() {\n+    return {\n+        type: CONFIG_VALIDATED\n+    };\n+}\n+\n+function configValidationError({ message, errors }) {\n+    return {\n+        type: CONFIG_VALIDATE_ERROR,\n+        message,\n+        errors\n+    };\n+}\n+\n+function createErrorHandler(type, defaultHandler) {\n     const errorHandlers = [];\n-    const configErrorHandler = () => configError(responseData.message, responseData.errors);\n     errorHandlers.push(HTTPErrorUtils.createUnauthorizedHandler(unauthorized));\n-    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(() => configError(responseData.message, null)));\n-    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(configErrorHandler));\n-    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(configErrorHandler));\n-    const handler = HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n-    dispatch(handler(statusCode));\n+    errorHandlers.push(HTTPErrorUtils.createForbiddenHandler(() => configError({ type, message: HTTPErrorUtils.MESSAGES.FORBIDDEN_ACTION })));\n+    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(defaultHandler));\n+\n+    return HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n }\n \n-export function refreshConfig(id) {\n+export function\n+refreshConfig(id) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0Mzk2Ng=="}, "originalCommit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzcxNzE3OnYy", "diffSide": "RIGHT", "path": "src/main/js/store/actions/globalConfiguration.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozNDoyNVrOHS9odA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozOTowOVrOHS9-wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0NjE5Ng==", "bodyText": "You could remove the else (for the response.status check) and only need to call refresh once:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        dispatch(refreshConfig(newId));\n          \n          \n            \n                                    });\n          \n          \n            \n                            } else {\n          \n          \n            \n                                dispatch(refreshConfig(id));\n          \n          \n            \n                            }\n          \n          \n            \n                                    });\n          \n          \n            \n                            }\n          \n          \n            \n                            dispatch(refreshConfig(id));", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#discussion_r489646196", "createdAt": "2020-09-16T18:34:25Z", "author": {"login": "gkillough"}, "path": "src/main/js/store/actions/globalConfiguration.js", "diffHunk": "@@ -258,17 +304,29 @@ export function updateConfig(config) {\n             request = ConfigRequestBuilder.createNewConfigurationRequest(ConfigRequestBuilder.CONFIG_API_URL, csrfToken, config);\n         }\n         request.then((response) => {\n-            response.json()\n-                .then((responseData) => {\n-                    if (response.ok) {\n-                        const newId = responseData.id;\n-                        const updatedConfig = FieldModelUtilities.updateFieldModelSingleValue(config, 'id', newId);\n-                        dispatch(configUpdated(updatedConfig));\n-                        dispatch(refreshConfig(newId));\n-                    } else {\n-                        handleFailureResponse(dispatch, responseData, response.status);\n-                    }\n-                });\n+            if (response.ok) {\n+                if (response.status === 201) {\n+                    response.json()\n+                        .then((responseData) => {\n+                            const newId = responseData.id;\n+                            const updatedConfig = FieldModelUtilities.updateFieldModelSingleValue(config, 'id', newId);\n+                            dispatch(configUpdated(updatedConfig));\n+                            dispatch(refreshConfig(newId));\n+                        });\n+                } else {\n+                    dispatch(refreshConfig(id));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY1MTkwNg==", "bodyText": "Ah, but you'll have to create an id variable outside of the if-statement and set it for a 201.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#discussion_r489651906", "createdAt": "2020-09-16T18:39:09Z", "author": {"login": "gkillough"}, "path": "src/main/js/store/actions/globalConfiguration.js", "diffHunk": "@@ -258,17 +304,29 @@ export function updateConfig(config) {\n             request = ConfigRequestBuilder.createNewConfigurationRequest(ConfigRequestBuilder.CONFIG_API_URL, csrfToken, config);\n         }\n         request.then((response) => {\n-            response.json()\n-                .then((responseData) => {\n-                    if (response.ok) {\n-                        const newId = responseData.id;\n-                        const updatedConfig = FieldModelUtilities.updateFieldModelSingleValue(config, 'id', newId);\n-                        dispatch(configUpdated(updatedConfig));\n-                        dispatch(refreshConfig(newId));\n-                    } else {\n-                        handleFailureResponse(dispatch, responseData, response.status);\n-                    }\n-                });\n+            if (response.ok) {\n+                if (response.status === 201) {\n+                    response.json()\n+                        .then((responseData) => {\n+                            const newId = responseData.id;\n+                            const updatedConfig = FieldModelUtilities.updateFieldModelSingleValue(config, 'id', newId);\n+                            dispatch(configUpdated(updatedConfig));\n+                            dispatch(refreshConfig(newId));\n+                        });\n+                } else {\n+                    dispatch(refreshConfig(id));\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0NjE5Ng=="}, "originalCommit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "originalPosition": 143}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1751, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}