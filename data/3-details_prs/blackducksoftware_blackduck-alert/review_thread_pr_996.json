{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzQyMjIw", "number": 996, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0MjozOVrOEA26UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0MjozOVrOEA26UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzM1MTIxOnYy", "diffSide": "RIGHT", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/accessor/DefaultDescriptorGlobalConfigUtility.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0MjozOVrOGcZWWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjozNjo1NFrOGca34g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyODYzMg==", "bodyText": "I'm surprised we don't have a utility for this. We should probably add a TODO here and an issue for 6.1.0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/996#discussion_r432428632", "createdAt": "2020-05-29T11:42:39Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/accessor/DefaultDescriptorGlobalConfigUtility.java", "diffHunk": "@@ -96,9 +98,33 @@ public FieldModel save(FieldModel fieldModel) throws AlertException {\n \n     public FieldModel update(Long id, FieldModel fieldModel) throws AlertException {\n         FieldModel beforeUpdateAction = apiAction.beforeUpdateAction(fieldModel);\n-        Collection<ConfigurationFieldModel> values = configurationFieldModelConverter.convertToConfigurationFieldModelMap(beforeUpdateAction).values();\n-        ConfigurationModel configurationModel = configurationAccessor.updateConfiguration(id, values);\n+        Map<String, ConfigurationFieldModel> valueMap = configurationFieldModelConverter.convertToConfigurationFieldModelMap(beforeUpdateAction);\n+        Optional<ConfigurationModel> existingConfig = configurationAccessor.getConfigurationById(id);\n+        ConfigurationModel configurationModel;\n+        if (existingConfig.isPresent()) {\n+            Map<String, ConfigurationFieldModel> updatedValues = updateSensitiveFields(valueMap, existingConfig.get());\n+            configurationModel = configurationAccessor.updateConfiguration(id, updatedValues.values());\n+        } else {\n+            configurationModel = configurationAccessor.createConfiguration(key, context, valueMap.values());\n+        }\n         FieldModel convertedFieldModel = configurationFieldModelConverter.convertToFieldModel(configurationModel);\n         return apiAction.afterUpdateAction(convertedFieldModel);\n     }\n+\n+    private Map<String, ConfigurationFieldModel> updateSensitiveFields(Map<String, ConfigurationFieldModel> values, ConfigurationModel existingConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c91cf55491292b48c549c83cab71bf1b4c1449"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MzYwMg==", "bodyText": "FieldModelProcessor will handle these changes.  The problem is that FieldModelProcessor is in the alert-main project and this utility is in the alert-common sub project.  Using FieldModelProcessor would create a dependency we don't want.  If we can move FieldModelProcessor into alert-common then that would resolve this issue.  I will add a TODO comment.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/996#discussion_r432453602", "createdAt": "2020-05-29T12:36:54Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/accessor/DefaultDescriptorGlobalConfigUtility.java", "diffHunk": "@@ -96,9 +98,33 @@ public FieldModel save(FieldModel fieldModel) throws AlertException {\n \n     public FieldModel update(Long id, FieldModel fieldModel) throws AlertException {\n         FieldModel beforeUpdateAction = apiAction.beforeUpdateAction(fieldModel);\n-        Collection<ConfigurationFieldModel> values = configurationFieldModelConverter.convertToConfigurationFieldModelMap(beforeUpdateAction).values();\n-        ConfigurationModel configurationModel = configurationAccessor.updateConfiguration(id, values);\n+        Map<String, ConfigurationFieldModel> valueMap = configurationFieldModelConverter.convertToConfigurationFieldModelMap(beforeUpdateAction);\n+        Optional<ConfigurationModel> existingConfig = configurationAccessor.getConfigurationById(id);\n+        ConfigurationModel configurationModel;\n+        if (existingConfig.isPresent()) {\n+            Map<String, ConfigurationFieldModel> updatedValues = updateSensitiveFields(valueMap, existingConfig.get());\n+            configurationModel = configurationAccessor.updateConfiguration(id, updatedValues.values());\n+        } else {\n+            configurationModel = configurationAccessor.createConfiguration(key, context, valueMap.values());\n+        }\n         FieldModel convertedFieldModel = configurationFieldModelConverter.convertToFieldModel(configurationModel);\n         return apiAction.afterUpdateAction(convertedFieldModel);\n     }\n+\n+    private Map<String, ConfigurationFieldModel> updateSensitiveFields(Map<String, ConfigurationFieldModel> values, ConfigurationModel existingConfig) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyODYzMg=="}, "originalCommit": {"oid": "b5c91cf55491292b48c549c83cab71bf1b4c1449"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2035, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}