{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzMwMDgy", "number": 1132, "title": "Feat azure testing", "bodyText": "Fix issues with creating and transitioning issues in Azure.", "createdAt": "2020-08-24T19:49:53Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132", "merged": true, "mergeCommit": {"oid": "3a5523c9a242efeb4271b1ffd898edecd9a85f79"}, "closed": true, "closedAt": "2020-08-25T12:32:23Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCFWIdgH2gAyNDcyNzMwMDgyOjM5ODdmMWJjNGM3Y2JhMGJkM2JjYjIyYjRhZmU0OTY3NDlkNWNiZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCMNIKgH2gAyNDcyNzMwMDgyOmQ3NzY3MjJjMGI1OGY3Mzc5MTUzYTkyOGZmZGU2NjBmZjVlOGVhOGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3987f1bc4c7cba0bd3bcb22b4afe496749d5cbd5", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3987f1bc4c7cba0bd3bcb22b4afe496749d5cbd5", "committedDate": "2020-08-24T16:38:47Z", "message": "fix: Check if the fields are defined first before creation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da1497bc38c4301529f246def6d6407432054b5b", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/da1497bc38c4301529f246def6d6407432054b5b", "committedDate": "2020-08-24T17:13:15Z", "message": "fix: Fix the code to handle empty existing issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "372de072d092a542a3c7ea5f71d54f90b650c5cc", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/372de072d092a542a3c7ea5f71d54f90b650c5cc", "committedDate": "2020-08-24T17:40:28Z", "message": "refactor: Add logger error message when catching IntegrationException to return the stack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf7a64343b85ceabe57141c0cceeecb3fdf8f254", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cf7a64343b85ceabe57141c0cceeecb3fdf8f254", "committedDate": "2020-08-24T17:42:40Z", "message": "Merge branch 'feat_azure_testing' into mc_azure_distribution_error_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66ade237cfa009af0409792affb5279fbf3b550e", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/66ade237cfa009af0409792affb5279fbf3b550e", "committedDate": "2020-08-24T18:44:29Z", "message": "Merge pull request #1130 from blackducksoftware/mc_azure_distribution_error_log\n\nMc azure distribution error log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dc7a0c79aac1055da480952d3ff2d4ba5fafeaa", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1dc7a0c79aac1055da480952d3ff2d4ba5fafeaa", "committedDate": "2020-08-24T19:35:30Z", "message": "feat: Implement issue transition in Azure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd8a934b496a789f3215089e6e30c6ece17ffb53", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/cd8a934b496a789f3215089e6e30c6ece17ffb53", "committedDate": "2020-08-24T19:35:47Z", "message": "Merge branch 'feat_azure_testing' of https://github.com/blackducksoftware/blackduck-alert into feat_azure_testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8c08199f0aae9e6f27d1aa97181ab0aa9cee8523", "committedDate": "2020-08-24T19:48:55Z", "message": "refactor: Rename a method used."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODE0NzM0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#pullrequestreview-473814734", "createdAt": "2020-08-24T20:00:57Z", "commit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMDo1N1rOHF0O_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMDo1N1rOHF0O_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MDczMg==", "bodyText": "Typo in \"AzureWorkItemReponst\".\nWhat does \"when called via the rest API\" mean? In the response from a POST request? I believe it is there for a GET request.\nWe need this link for the callback to Black Duck, so we should add a GET here if necessary.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475860732", "createdAt": "2020-08-24T20:00:57Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "diffHunk": "@@ -160,10 +186,15 @@ protected String getIssueKey(WorkItemResponseModel issueModel) {\n     protected IssueTrackerIssueResponseModel createResponseModel(AlertIssueOrigin alertIssueOrigin, String issueTitle, IssueOperation issueOperation, WorkItemResponseModel issueResponse) {\n         Integer workItemId = issueResponse.getId();\n         Map<String, ReferenceLinkModel> issueLinks = issueResponse.getLinks();\n-        ReferenceLinkModel htmlLink = issueLinks.get(\"html\");\n-        String uiLink = Optional.ofNullable(htmlLink)\n-                            .map(ReferenceLinkModel::getHref)\n-                            .orElseGet(this::getIssueTrackerUrl);\n+        // the AzureWorkItemReponst does not contain any links when called via the rest API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODE2MTI1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#pullrequestreview-473816125", "createdAt": "2020-08-24T20:03:06Z", "commit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODE2MTcz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#pullrequestreview-473816173", "createdAt": "2020-08-24T20:03:11Z", "commit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMzoxMlrOHF0TWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDowMzoxMlrOHF0TWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg2MTg1MA==", "bodyText": "Can we call the error method just once here?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#discussion_r475861850", "createdAt": "2020-08-24T20:03:12Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/service/AzureBoardsIssueHandler.java", "diffHunk": "@@ -135,13 +137,37 @@ public AzureBoardsIssueHandler(IssueContentLengthValidator issueContentLengthVal\n                                        .stream()\n                                        .map(WorkItemReferenceModel::getId)\n                                        .collect(Collectors.toSet());\n-        AzureArrayResponseModel<WorkItemResponseModel> workItemArrayResponse = azureWorkItemService.getWorkItems(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), workItemIds);\n-        return workItemArrayResponse.getValue();\n+        if (!workItemIds.isEmpty()) {\n+            AzureArrayResponseModel<WorkItemResponseModel> workItemArrayResponse = azureWorkItemService.getWorkItems(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), workItemIds);\n+            return workItemArrayResponse.getValue();\n+        }\n+        return List.of();\n     }\n \n     @Override\n     protected boolean transitionIssue(WorkItemResponseModel issueModel, IssueConfig issueConfig, IssueOperation operation) throws IntegrationException {\n-        // FIXME implement\n+        List<WorkItemElementOperationModel> requestElementOps = new ArrayList<>();\n+        Optional<String> transition;\n+        if (IssueOperation.RESOLVE.equals(operation)) {\n+            transition = issueConfig.getResolveTransition();\n+        } else {\n+            transition = issueConfig.getOpenTransition();\n+        }\n+        if (transition.isPresent()) {\n+            String transitionName = transition.get();\n+            try {\n+                WorkItemElementOperationModel descriptionField = createUpdateFieldModel(WorkItemResponseFields.System_State, transitionName);\n+                requestElementOps.add(descriptionField);\n+                WorkItemRequest request = new WorkItemRequest(requestElementOps);\n+                WorkItemResponseModel workItemResponse = azureWorkItemService.updateWorkItem(azureBoardsProperties.getOrganizationName(), issueConfig.getProjectName(), issueModel.getId(), request);\n+                JsonElement stateElement = workItemResponse.getFields().get(WorkItemResponseFields.System_State.getFieldName());\n+                return transitionName.equals(stateElement.getAsString());\n+            } catch (HttpServiceException ex) {\n+                logger.error(\"Error transitioning work item {} to {}\", issueModel.getId(), transitionName);\n+                logger.error(\"Cause: \", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODE3MzMw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#pullrequestreview-473817330", "createdAt": "2020-08-24T20:04:55Z", "commit": {"oid": "8c08199f0aae9e6f27d1aa97181ab0aa9cee8523"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d7fe2e851f678ca507abfee6d3a609a29291460", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8d7fe2e851f678ca507abfee6d3a609a29291460", "committedDate": "2020-08-24T20:10:03Z", "message": "refactor: Remove a logger statement."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba957d3c46d17ae6ef52b62bb2d5e45591fab153", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ba957d3c46d17ae6ef52b62bb2d5e45591fab153", "committedDate": "2020-08-24T20:11:00Z", "message": "refactor: Update the logger message."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODI0MjM2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1132#pullrequestreview-473824236", "createdAt": "2020-08-24T20:15:58Z", "commit": {"oid": "ba957d3c46d17ae6ef52b62bb2d5e45591fab153"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e885a13e8b9f1224766fd9ad20551098bd225ed", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1e885a13e8b9f1224766fd9ad20551098bd225ed", "committedDate": "2020-08-25T00:23:51Z", "message": "fix: Create the correct object to add a comment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d776722c0b58f7379153a928ffde660ff5e8ea8e", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d776722c0b58f7379153a928ffde660ff5e8ea8e", "committedDate": "2020-08-25T00:38:17Z", "message": "refactor: log the exception first before adding to audit."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}