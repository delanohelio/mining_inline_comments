{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NjQyMTk3", "number": 1200, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo0NTowNVrOEpHeXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODoxMzo1OVrOEpJfsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTQ5NTM1OnYy", "diffSide": "RIGHT", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/security/authorization/AuthorizationManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo0NTowNVrOHambog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo0NTowNVrOHambog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1NDY5MA==", "bodyText": "Now that the roles are being updated using methods in this class and the cache is being updated in those methods, is it alright to check the cache for the role name? Or should we still using the RoleAccessor to check the database?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1200#discussion_r497654690", "createdAt": "2020-09-30T16:45:05Z", "author": {"login": "jamesrichard91"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/security/authorization/AuthorizationManager.java", "diffHunk": "@@ -139,6 +139,23 @@ public final boolean hasAllPermissions(String context, String descriptorName, Ac\n                    .anyMatch(name -> permissionCache.containsKey(name) && permissionCache.get(name).hasPermissions(permissionKey, operations));\n     }\n \n+    public Set<UserRoleModel> getRoles() {\n+        return roleAccessor.getRoles();\n+    }\n+\n+    public Set<UserRoleModel> getRoles(Collection<Long> roleIds) {\n+        return roleAccessor.getRoles(roleIds);\n+    }\n+\n+    public boolean doesRoleNameExist(String name) {\n+        return permissionCache.containsKey(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ee4f6e637267a698eb1954d8c21ac9d19e474c1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTgyNjQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODoxMzo1OVrOHapsdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozMjoxM1rOHaqUFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcwODE1MA==", "bodyText": "I'm not sure delegating Role retrieval to the AuthorizationManager is the right move. Yes, AuthorizationManager has a RoleAccessor, and yes, the RoleActions would otherwise need both, but I do not believe this is correctly separating concerns. RoleAccessor is the thing that should be depended on to read/write roles to and from the database and AuthorizationManager is the utility that cross-references roles with users.\nI'm not entirely sure why AuthorizationManager was even being used in this class before.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1200#discussion_r497708150", "createdAt": "2020-09-30T18:13:59Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -56,19 +55,17 @@\n @Component\n public class RoleActions {\n     private static final String FIELD_KEY_ROLE_NAME = \"roleName\";\n-    private final RoleAccessor roleAccessor;\n     private final AuthorizationManager authorizationManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d141aebdfbdd7cd1a25894cf234d7facbbf2605b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNTI3Ng==", "bodyText": "The AuthorizationManager is being used to make sure the cache is kept up to date.\nI was not sure about adding the get's to AuthorizationManager. I would be fine with rejecting this PR, if the team thinks it would be better to keep the role retrieval in RoleAccessor.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1200#discussion_r497715276", "createdAt": "2020-09-30T18:26:57Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -56,19 +55,17 @@\n @Component\n public class RoleActions {\n     private static final String FIELD_KEY_ROLE_NAME = \"roleName\";\n-    private final RoleAccessor roleAccessor;\n     private final AuthorizationManager authorizationManager;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcwODE1MA=="}, "originalCommit": {"oid": "d141aebdfbdd7cd1a25894cf234d7facbbf2605b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxODI5NA==", "bodyText": "That's my preference, but I'm also second guessing the permissions cache. I can't remember the motivation for it. It seems to me that, if anything, there should be an object representing just the cache that gets used only when needed; then Authorization Manager could be a non-component utility.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1200#discussion_r497718294", "createdAt": "2020-09-30T18:32:13Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/role/RoleActions.java", "diffHunk": "@@ -56,19 +55,17 @@\n @Component\n public class RoleActions {\n     private static final String FIELD_KEY_ROLE_NAME = \"roleName\";\n-    private final RoleAccessor roleAccessor;\n     private final AuthorizationManager authorizationManager;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcwODE1MA=="}, "originalCommit": {"oid": "d141aebdfbdd7cd1a25894cf234d7facbbf2605b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}