{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTU0MjQ0", "number": 846, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTowNzo1NVrODeHwdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTowNzo1NVrODeHwdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTEwOTY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/component/settings/actions/SettingsGlobalApiAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOTowNzo1NVrOFnHPxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOToxNToyMVrOFnHcSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU1NzUwOA==", "bodyText": "Do we need to call addSAMLMetadata(fieldModel); in both the afterSaveAction and in the afterUpdateAction?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/846#discussion_r376557508", "createdAt": "2020-02-07T19:07:55Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/component/settings/actions/SettingsGlobalApiAction.java", "diffHunk": "@@ -75,96 +76,111 @@ public FieldModel afterGetAction(final FieldModel fieldModel) {\n     }\n \n     @Override\n-    public FieldModel beforeSaveAction(final FieldModel fieldModel) {\n+    public FieldModel beforeSaveAction(FieldModel fieldModel) {\n         return handleNewAndUpdatedConfig(fieldModel);\n     }\n \n     @Override\n-    public FieldModel beforeUpdateAction(final FieldModel fieldModel) {\n+    public FieldModel beforeUpdateAction(FieldModel fieldModel) {\n         return handleNewAndUpdatedConfig(fieldModel);\n     }\n \n-    private FieldModel createFieldModelCopy(final FieldModel fieldModel) {\n-        final HashMap<String, FieldValueModel> fields = new HashMap<>();\n+    private FieldModel createFieldModelCopy(FieldModel fieldModel) {\n+        HashMap<String, FieldValueModel> fields = new HashMap<>();\n         fields.putAll(fieldModel.getKeyToValues());\n \n-        final FieldModel modelToSave = new FieldModel(fieldModel.getDescriptorName(), fieldModel.getContext(), fields);\n+        FieldModel modelToSave = new FieldModel(fieldModel.getDescriptorName(), fieldModel.getContext(), fields);\n         modelToSave.setId(fieldModel.getId());\n         return modelToSave;\n     }\n \n-    private FieldModel handleNewAndUpdatedConfig(final FieldModel fieldModel) {\n+    @Override\n+    public FieldModel afterSaveAction(FieldModel fieldModel) throws AlertException {\n+        addSAMLMetadata(fieldModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a172b93ed0d77fa7549f51b4257736b15593897b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU2MDcxMw==", "bodyText": "yes the save is for a POST and update is for the PUT rest call.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/846#discussion_r376560713", "createdAt": "2020-02-07T19:15:21Z", "author": {"login": "psantos1113"}, "path": "src/main/java/com/synopsys/integration/alert/component/settings/actions/SettingsGlobalApiAction.java", "diffHunk": "@@ -75,96 +76,111 @@ public FieldModel afterGetAction(final FieldModel fieldModel) {\n     }\n \n     @Override\n-    public FieldModel beforeSaveAction(final FieldModel fieldModel) {\n+    public FieldModel beforeSaveAction(FieldModel fieldModel) {\n         return handleNewAndUpdatedConfig(fieldModel);\n     }\n \n     @Override\n-    public FieldModel beforeUpdateAction(final FieldModel fieldModel) {\n+    public FieldModel beforeUpdateAction(FieldModel fieldModel) {\n         return handleNewAndUpdatedConfig(fieldModel);\n     }\n \n-    private FieldModel createFieldModelCopy(final FieldModel fieldModel) {\n-        final HashMap<String, FieldValueModel> fields = new HashMap<>();\n+    private FieldModel createFieldModelCopy(FieldModel fieldModel) {\n+        HashMap<String, FieldValueModel> fields = new HashMap<>();\n         fields.putAll(fieldModel.getKeyToValues());\n \n-        final FieldModel modelToSave = new FieldModel(fieldModel.getDescriptorName(), fieldModel.getContext(), fields);\n+        FieldModel modelToSave = new FieldModel(fieldModel.getDescriptorName(), fieldModel.getContext(), fields);\n         modelToSave.setId(fieldModel.getId());\n         return modelToSave;\n     }\n \n-    private FieldModel handleNewAndUpdatedConfig(final FieldModel fieldModel) {\n+    @Override\n+    public FieldModel afterSaveAction(FieldModel fieldModel) throws AlertException {\n+        addSAMLMetadata(fieldModel);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU1NzUwOA=="}, "originalCommit": {"oid": "a172b93ed0d77fa7549f51b4257736b15593897b"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2085, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}