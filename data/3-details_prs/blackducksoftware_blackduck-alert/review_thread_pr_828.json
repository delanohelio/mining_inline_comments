{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTk5MjQw", "number": 828, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoyNToyMVrODamiPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoyNToyMVrODamiPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjIwOTI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/web/certificates/CertificatesController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoyNToyMVrOFhpfUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMDoyNTo1MVrOFhpgCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNzA4OA==", "bodyText": "Why is this checking delete permissions?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/828#discussion_r370827088", "createdAt": "2020-01-24T20:25:21Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/certificates/CertificatesController.java", "diffHunk": "@@ -49,24 +54,34 @@\n     public static final String API_BASE_URL = BaseController.BASE_PATH + \"/certificates\";\n     private static final Logger logger = LoggerFactory.getLogger(CertificatesController.class);\n \n+    private DescriptorKey descriptorKey;\n+    private AuthorizationManager authorizationManager;\n     private final ResponseFactory responseFactory;\n     private final ContentConverter contentConverter;\n     private final CertificateActions actions;\n \n     @Autowired\n-    public CertificatesController(ResponseFactory responseFactory, ContentConverter contentConverter, CertificateActions actions) {\n+    public CertificatesController(CertificatesDescriptorKey descriptorKey, AuthorizationManager authorizationManager, ResponseFactory responseFactory, ContentConverter contentConverter, CertificateActions actions) {\n+        this.descriptorKey = descriptorKey;\n+        this.authorizationManager = authorizationManager;\n         this.responseFactory = responseFactory;\n         this.contentConverter = contentConverter;\n         this.actions = actions;\n     }\n \n     @GetMapping\n     public ResponseEntity<String> readCertificates() {\n+        if (!hasPermission(authorizationManager::hasDeletePermission)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f6ac125c0650ebb96dde18962dcd18b0ca22b6c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNzI3NA==", "bodyText": "fixed this", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/828#discussion_r370827274", "createdAt": "2020-01-24T20:25:51Z", "author": {"login": "psantos1113"}, "path": "src/main/java/com/synopsys/integration/alert/web/certificates/CertificatesController.java", "diffHunk": "@@ -49,24 +54,34 @@\n     public static final String API_BASE_URL = BaseController.BASE_PATH + \"/certificates\";\n     private static final Logger logger = LoggerFactory.getLogger(CertificatesController.class);\n \n+    private DescriptorKey descriptorKey;\n+    private AuthorizationManager authorizationManager;\n     private final ResponseFactory responseFactory;\n     private final ContentConverter contentConverter;\n     private final CertificateActions actions;\n \n     @Autowired\n-    public CertificatesController(ResponseFactory responseFactory, ContentConverter contentConverter, CertificateActions actions) {\n+    public CertificatesController(CertificatesDescriptorKey descriptorKey, AuthorizationManager authorizationManager, ResponseFactory responseFactory, ContentConverter contentConverter, CertificateActions actions) {\n+        this.descriptorKey = descriptorKey;\n+        this.authorizationManager = authorizationManager;\n         this.responseFactory = responseFactory;\n         this.contentConverter = contentConverter;\n         this.actions = actions;\n     }\n \n     @GetMapping\n     public ResponseEntity<String> readCertificates() {\n+        if (!hasPermission(authorizationManager::hasDeletePermission)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgyNzA4OA=="}, "originalCommit": {"oid": "0f6ac125c0650ebb96dde18962dcd18b0ca22b6c"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2060, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}