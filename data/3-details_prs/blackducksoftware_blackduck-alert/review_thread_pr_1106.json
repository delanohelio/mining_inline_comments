{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjIzMzI4", "number": 1106, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNToyNjo0OFrOEWQgYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNToyNjo0OFrOEWQgYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzc0NTYzOnYy", "diffSide": "RIGHT", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/CustomEndpointManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNToyNjo0OFrOG9eLig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNToyOTo1NVrOG9eSkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzExMDc5NA==", "bodyText": "This part is duplicated between methods. Can we call the method below here?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1106#discussion_r467110794", "createdAt": "2020-08-07T15:26:48Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/CustomEndpointManager.java", "diffHunk": "@@ -24,37 +24,45 @@\n \n import java.util.HashMap;\n import java.util.Map;\n+import java.util.function.BiFunction;\n import java.util.function.Function;\n \n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n import org.springframework.stereotype.Component;\n \n import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.common.rest.HttpServletContentWrapper;\n import com.synopsys.integration.alert.common.rest.model.FieldModel;\n \n @Component\n public class CustomEndpointManager {\n     public static final String CUSTOM_ENDPOINT_URL = \"/api/function\";\n-    private Map<String, Function<FieldModel, ResponseEntity<String>>> endpointFunctions = new HashMap<>();\n+    private final Map<String, BiFunction<FieldModel, HttpServletContentWrapper, ResponseEntity<String>>> endpointFunctions = new HashMap<>();\n \n     public boolean containsFunction(String functionKey) {\n         return endpointFunctions.containsKey(functionKey);\n     }\n \n     public void registerFunction(String functionKey, Function<FieldModel, ResponseEntity<String>> endpointFunction) throws AlertException {\n+        if (containsFunction(functionKey)) {\n+            throw new AlertException(\"A custom endpoint is already registered for \" + functionKey);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e58d78bcaaff10cb6c3cb3a203aa4168eeb66b63"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzExMjU5Mw==", "bodyText": "Ugh, meant to do this on line 51.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1106#discussion_r467112593", "createdAt": "2020-08-07T15:29:55Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/CustomEndpointManager.java", "diffHunk": "@@ -24,37 +24,45 @@\n \n import java.util.HashMap;\n import java.util.Map;\n+import java.util.function.BiFunction;\n import java.util.function.Function;\n \n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n import org.springframework.stereotype.Component;\n \n import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.common.rest.HttpServletContentWrapper;\n import com.synopsys.integration.alert.common.rest.model.FieldModel;\n \n @Component\n public class CustomEndpointManager {\n     public static final String CUSTOM_ENDPOINT_URL = \"/api/function\";\n-    private Map<String, Function<FieldModel, ResponseEntity<String>>> endpointFunctions = new HashMap<>();\n+    private final Map<String, BiFunction<FieldModel, HttpServletContentWrapper, ResponseEntity<String>>> endpointFunctions = new HashMap<>();\n \n     public boolean containsFunction(String functionKey) {\n         return endpointFunctions.containsKey(functionKey);\n     }\n \n     public void registerFunction(String functionKey, Function<FieldModel, ResponseEntity<String>> endpointFunction) throws AlertException {\n+        if (containsFunction(functionKey)) {\n+            throw new AlertException(\"A custom endpoint is already registered for \" + functionKey);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzExMDc5NA=="}, "originalCommit": {"oid": "e58d78bcaaff10cb6c3cb3a203aa4168eeb66b63"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1666, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}