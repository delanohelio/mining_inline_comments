{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTIxMzEx", "number": 985, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo0NDozOVrOD-9Gqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo1MDo0NlrOD-9POg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzM5NDM0OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo0NDozOVrOGZXm9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo0OToxMVrOGZXxRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1NDM5MA==", "bodyText": "I believe this needs to be https://<EXTERNAL_NODE_IP>:<EXTERNAL_PORT>/alert. Users can get that information by doing a kubectl get nodes -o wide or by setting up an ingress.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/985#discussion_r429254390", "createdAt": "2020-05-22T13:44:39Z", "author": {"login": "mphammer"}, "path": "deployment/helm/synopsys-alert/README.md", "diffHunk": "@@ -29,36 +43,63 @@ $ helm install . --name <name> --namespace <namespace>\n \n ## Installing the Chart -- Helm 3\n \n-#### Create the Namespace and TLS Secrets\n+### Create the Namespace and TLS Secrets\n ```console\n $ kubectl create ns <namespace>\n ```\n-#### Configure your Black Duck Instance\n+### Configure your Alert Instance\n Modify the values.yaml file or pass in values to `helm install` with --set.  \n+Please see the [Configuration](#configuration) section for more details.\n \n-#### Install the Black Duck Chart\n-```\n+### Install the Alert Chart\n+```console\n $ helm install <name> . --namespace <namespace>\n ```\n \n-## Quick Start with Helm 3\n+### Quick Start with Helm 3\n #### Step 1\n Navigate to the alert-helm chart repository in your terminal\n-```\n+```console\n $ cd <path>/alert-helm\n ```\n \n #### Step 2\n-```\n+```console\n $ kubectl create ns myalert\n ```\n \n #### Step 3\n Deploy Alert\n-```\n+```console\n $ helm install myalert . --namespace myalert\n ```\n \n+## Finding Alert External Port\n+ Once Alert has been deployed if the `exposeui` parameter is true, then Alert will be available via an exposed port.\n+ To determine the port to access the Alert UI execute the following command:\n+ ```console \n+ $ kubectl -n <NAMESPACE> get services\n+ ```\n+ From the output find the Alert exposed service. This service will be your Alert installation name with the `-exposed` suffix in the name. \n+ If the installation name is 'myalert' then there will be a service `myalert-exposed` in the list of services.\n+ \n+ It will display a port with the following format:\n+  \n+  `<INTERNAL_PORT>:<EXTERNAL_PORT>/TCP`\n+  \n+  For example:\n+  \n+  `8443:31594/TCP`\n+  \n+  The internal port is 8443 and the external port is 31594. When accessing the Alert UI the external port will be used in the URL.\n+  Once the external port is identified the URL to access the UI will be in the following format:\n+  \n+  `https://my.kubernetes.host:<EXTERNAL_PORT>/alert`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcef9d45aea9c3d724a61244993c3a9ddcdb3f0"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1NzAzMQ==", "bodyText": "I will update this.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/985#discussion_r429257031", "createdAt": "2020-05-22T13:49:11Z", "author": {"login": "psantos1113"}, "path": "deployment/helm/synopsys-alert/README.md", "diffHunk": "@@ -29,36 +43,63 @@ $ helm install . --name <name> --namespace <namespace>\n \n ## Installing the Chart -- Helm 3\n \n-#### Create the Namespace and TLS Secrets\n+### Create the Namespace and TLS Secrets\n ```console\n $ kubectl create ns <namespace>\n ```\n-#### Configure your Black Duck Instance\n+### Configure your Alert Instance\n Modify the values.yaml file or pass in values to `helm install` with --set.  \n+Please see the [Configuration](#configuration) section for more details.\n \n-#### Install the Black Duck Chart\n-```\n+### Install the Alert Chart\n+```console\n $ helm install <name> . --namespace <namespace>\n ```\n \n-## Quick Start with Helm 3\n+### Quick Start with Helm 3\n #### Step 1\n Navigate to the alert-helm chart repository in your terminal\n-```\n+```console\n $ cd <path>/alert-helm\n ```\n \n #### Step 2\n-```\n+```console\n $ kubectl create ns myalert\n ```\n \n #### Step 3\n Deploy Alert\n-```\n+```console\n $ helm install myalert . --namespace myalert\n ```\n \n+## Finding Alert External Port\n+ Once Alert has been deployed if the `exposeui` parameter is true, then Alert will be available via an exposed port.\n+ To determine the port to access the Alert UI execute the following command:\n+ ```console \n+ $ kubectl -n <NAMESPACE> get services\n+ ```\n+ From the output find the Alert exposed service. This service will be your Alert installation name with the `-exposed` suffix in the name. \n+ If the installation name is 'myalert' then there will be a service `myalert-exposed` in the list of services.\n+ \n+ It will display a port with the following format:\n+  \n+  `<INTERNAL_PORT>:<EXTERNAL_PORT>/TCP`\n+  \n+  For example:\n+  \n+  `8443:31594/TCP`\n+  \n+  The internal port is 8443 and the external port is 31594. When accessing the Alert UI the external port will be used in the URL.\n+  Once the external port is identified the URL to access the UI will be in the following format:\n+  \n+  `https://my.kubernetes.host:<EXTERNAL_PORT>/alert`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1NDM5MA=="}, "originalCommit": {"oid": "0bcef9d45aea9c3d724a61244993c3a9ddcdb3f0"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzQxNjI2OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo1MDo0NlrOGZX05A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzo1MDo0NlrOGZX05A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1Nzk1Ng==", "bodyText": "It only needs to be created first if they don't have a dynamic provisioner - which will see the pvc and create a persistent volume for it", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/985#discussion_r429257956", "createdAt": "2020-05-22T13:50:46Z", "author": {"login": "mphammer"}, "path": "deployment/helm/synopsys-alert/README.md", "diffHunk": "@@ -130,3 +190,237 @@ Alternatively, a YAML file that specifies the values for the above parameters ca\n ```console\n $ helm install . --name <name> --namespace <namespace> --set enableStandalone=true\n ```\n+\n+### Persistent Storage\n+The section will describe the changes needed to configure persistent storage.  \n+**Please note:** By default the 'values.yaml' file has persistent storage disabled in order for Alert to work out of the box.\n+\n+#### Enable Persistent Storage\n+- In the 'values.yaml' file change \n+  ```yaml\n+  enablePersistentStorage: true \n+  ```\n+#### With Storage Claims\n+This section defines configuration using Persistent Volume Claims.  Claims can be optionally used rather than just a Persistent volume.\n+You must have a claim created for the 'alert' service regardless of an on-premise or external database.\n+For the on-premise database deployment a second Persistent Volume Claim must be created to store the database data.\n+\n+##### Alert Volume Claim Configuration\n+- A persistent volume must be created first", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcef9d45aea9c3d724a61244993c3a9ddcdb3f0"}, "originalPosition": 213}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2024, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}