{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MjU3MzY1", "number": 1226, "title": "removing read...WithoutChecks", "bodyText": "There was a duplicated call to findExisting - this removes that duplication and eliminates the need for both readWithout and readAllWithout.", "createdAt": "2020-10-15T17:16:38Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226", "merged": true, "mergeCommit": {"oid": "e0e46453c45617852ddf1152295d18c1090d3ff4"}, "closed": true, "closedAt": "2020-10-27T19:44:13Z", "author": {"login": "ekerwin"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS0O5-gH2gAyNTA0MjU3MzY1OmYxZDEwNmY0NmIxMjE1ZDgzODc0ZmRiMjU5M2U1YTQ2ZGJkYWRiNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWuUx9AH2gAyNTA0MjU3MzY1OmQ0YWEzOTg5ZDNmMWVhNTcwYWRiOTA0MGExMGI2MzBlMmQ0MDEwYzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f1d106f46b1215d83874fdb2593e5a46dbdadb63", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f1d106f46b1215d83874fdb2593e5a46dbdadb63", "committedDate": "2020-10-15T16:19:13Z", "message": "refactor: Remove readWithoutChecks (IALERT-1982)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f98bc7493073bff97f42789059836ef677907a64", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f98bc7493073bff97f42789059836ef677907a64", "committedDate": "2020-10-15T16:19:21Z", "message": "Merge branch 'master' of https://github.com/blackducksoftware/blackduck-alert into ek-without-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ae69590f2de70f3b9dc8cb1c2787181663fe4d49", "committedDate": "2020-10-15T17:12:45Z", "message": "fix: update tests to manage loss of without checks (IALERT-1982)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjM2MTM2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#pullrequestreview-509636136", "createdAt": "2020-10-15T18:01:59Z", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Njc3MjM0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#pullrequestreview-509677234", "createdAt": "2020-10-15T18:54:26Z", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo1NDoyNlrOHiVt4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo1NDoyNlrOHiVt4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2OTQ0Mw==", "bodyText": "FWIW, this controller will not have a \"read all\" type action when I'm done with implementing paging, so these changes will be instantly reverted. I'm thinking that CompositeResourceActions should not include readAll, because more and more things will soon incorporate paging.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#discussion_r505769443", "createdAt": "2020-10-15T18:54:26Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/AbstractJobResourceActions.java", "diffHunk": "@@ -41,13 +41,14 @@\n import com.synopsys.integration.alert.common.exception.AlertDatabaseConstraintException;\n import com.synopsys.integration.alert.common.persistence.accessor.DescriptorAccessor;\n import com.synopsys.integration.alert.common.persistence.model.RegisteredDescriptorModel;\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n import com.synopsys.integration.alert.common.rest.model.FieldModel;\n import com.synopsys.integration.alert.common.rest.model.JobFieldModel;\n import com.synopsys.integration.alert.common.rest.model.MultiJobFieldModel;\n import com.synopsys.integration.alert.common.rest.model.ValidationResponseModel;\n import com.synopsys.integration.alert.common.security.authorization.AuthorizationManager;\n \n-public abstract class AbstractJobResourceActions implements JobResourceActions, ReadAllAction<MultiJobFieldModel>, ValidateAction<JobFieldModel>, TestAction<JobFieldModel> {\n+public abstract class AbstractJobResourceActions implements CompositeResourceActions<JobFieldModel, UUID> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Njc4ODQw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#pullrequestreview-509678840", "createdAt": "2020-10-15T18:56:42Z", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo1Njo0M1rOHiVy9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo1Njo0M1rOHiVy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3MDc0Mg==", "bodyText": "I'm shocked to see a final here.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#discussion_r505770742", "createdAt": "2020-10-15T18:56:43Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/rest/model/MultiFieldModel.java", "diffHunk": "@@ -24,14 +24,13 @@\n \n import java.util.List;\n \n-public class MultiFieldModel extends AlertSerializableModel {\n-    private List<FieldModel> fieldModels;\n-\n-    public MultiFieldModel(List<FieldModel> fieldModels) {\n-        this.fieldModels = fieldModels;\n+public class MultiFieldModel extends MultiResponseModel<FieldModel> {\n+    public MultiFieldModel(final List<FieldModel> models) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjgzMTQ4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#pullrequestreview-509683148", "createdAt": "2020-10-15T19:02:41Z", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowMjo0MVrOHiV_uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowMjo0MVrOHiV_uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NDAxMQ==", "bodyText": "I think it would be more clear if the method name included the result. e.g. convertDatabaseModelToRestModel or something along those lines.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#discussion_r505774011", "createdAt": "2020-10-15T19:02:41Z", "author": {"login": "gkillough"}, "path": "component/src/main/java/com/synopsys/integration/alert/component/users/web/role/RoleActions.java", "diffHunk": "@@ -113,21 +112,21 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n     }\n \n     @Override\n-    protected ActionResponse<MultiRolePermissionModel> readAllWithoutChecks() {\n-        List<RolePermissionModel> roles = roleAccessor.getRoles().stream()\n-                                              .map(this::convertUserRoleModel)\n-                                              .collect(Collectors.toList());\n-        return new ActionResponse<>(HttpStatus.OK, new MultiRolePermissionModel(roles));\n+    protected List<UserRoleModel> getDatabaseModels() {\n+        return new ArrayList<>(roleAccessor.getRoles());\n     }\n \n     @Override\n-    protected ActionResponse<RolePermissionModel> readWithoutChecks(Long id) {\n-        Optional<RolePermissionModel> role = findExisting(id);\n-        if (role.isPresent()) {\n-            return new ActionResponse<>(HttpStatus.OK, role.get());\n-        }\n-        //This is covered by the findExistingCheck in AbstractResourceActions. TODO for 6.4.0\n-        return new ActionResponse<>(HttpStatus.NOT_FOUND, String.format(\"Role with id:%d not found.\", id));\n+    protected MultiRolePermissionModel createMultiResponseModel(final List<RolePermissionModel> roles) {\n+        return new MultiRolePermissionModel(roles);\n+    }\n+\n+    @Override\n+    protected RolePermissionModel convertDatabaseModel(UserRoleModel userRoleModel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Njg3Njc0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#pullrequestreview-509687674", "createdAt": "2020-10-15T19:09:12Z", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowOToxMlrOHiWNHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOTowOToxMlrOHiWNHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3NzQzOA==", "bodyText": "Again, I feel like this method name only chooses to tell one half of the story. Why not convertToRestModel? It's also true, but incomplete.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#discussion_r505777438", "createdAt": "2020-10-15T19:09:12Z", "author": {"login": "gkillough"}, "path": "component/src/main/java/com/synopsys/integration/alert/component/certificates/web/CertificateActions.java", "diffHunk": "@@ -69,25 +69,23 @@ public CertificateActions(CertificatesDescriptorKey descriptorKey, Authorization\n     @Override\n     protected Optional<CertificateModel> findExisting(Long id) {\n         return certificateAccessor.getCertificate(id)\n-                   .map(this::convertFromDatabaseModel);\n+                   .map(this::convertDatabaseModel);\n     }\n \n     @Override\n-    public ActionResponse<MultiCertificateModel> readAllWithoutChecks() {\n-        List<CertificateModel> certificates = certificateAccessor.getCertificates().stream()\n-                                                  .map(this::convertFromDatabaseModel)\n-                                                  .collect(Collectors.toList());\n-        return new ActionResponse<>(HttpStatus.OK, new MultiCertificateModel(certificates));\n+    protected List<CustomCertificateModel> getDatabaseModels() {\n+        return certificateAccessor.getCertificates();\n     }\n \n     @Override\n-    protected ActionResponse<CertificateModel> readWithoutChecks(Long id) {\n-        Optional<CertificateModel> model = findExisting(id);\n-        if (model.isPresent()) {\n-            return new ActionResponse<>(HttpStatus.OK, model.get());\n-        }\n+    protected MultiCertificateModel createMultiResponseModel(final List<CertificateModel> certificates) {\n+        return new MultiCertificateModel(certificates);\n+    }\n \n-        return new ActionResponse<>(HttpStatus.NOT_FOUND, String.format(\"Certificate with id:%d not found.\", id));\n+    @Override\n+    protected CertificateModel convertDatabaseModel(CustomCertificateModel databaseCertificateModel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjkwNjAw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#pullrequestreview-509690600", "createdAt": "2020-10-15T19:13:25Z", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToxMzoyNVrOHiWV_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToxMzoyNVrOHiWV_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3OTcwOA==", "bodyText": "Can we use the word \"retrieve\" or \"read\" rather than \"get\"? The \"get\" method-prefix in Java is a ubiquitous convention for accessing fields of a class, so it's nice to make a distinction.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#discussion_r505779708", "createdAt": "2020-10-15T19:13:25Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/AbstractResourceActions.java", "diffHunk": "@@ -49,16 +54,17 @@ public AbstractResourceActions(DescriptorKey descriptorKey, ConfigContextEnum co\n         this.context = context;\n         // to do change the authorization manager to use the context enum and the descriptor key\n         this.authorizationManager = authorizationManager;\n-\n     }\n \n     protected abstract ActionResponse<T> createWithoutChecks(T resource);\n \n     protected abstract ActionResponse<T> deleteWithoutChecks(Long id);\n \n-    protected abstract ActionResponse<M> readAllWithoutChecks();\n+    protected abstract List<D> getDatabaseModels();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjkyNDI4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1226#pullrequestreview-509692428", "createdAt": "2020-10-15T19:16:07Z", "commit": {"oid": "ae69590f2de70f3b9dc8cb1c2787181663fe4d49"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dec6020bac1d3770ff834b4f51e74c130d2750a", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4dec6020bac1d3770ff834b4f51e74c130d2750a", "committedDate": "2020-10-19T13:25:21Z", "message": "cleaning up builds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7402405b380080dda96687e70dcc17234436db26", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/7402405b380080dda96687e70dcc17234436db26", "committedDate": "2020-10-22T18:07:42Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a779d9308a39f20a793763dc7897a41d6a056616", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a779d9308a39f20a793763dc7897a41d6a056616", "committedDate": "2020-10-22T18:34:47Z", "message": "trying to resolve"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "302309a0749724b525a4f9dbb22532c36600d847", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/302309a0749724b525a4f9dbb22532c36600d847", "committedDate": "2020-10-23T14:23:09Z", "message": "refactor: remove outdated interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edf29ff08f9a0e19b5e146a63b185fec40f1ff40", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/edf29ff08f9a0e19b5e146a63b185fec40f1ff40", "committedDate": "2020-10-23T17:05:40Z", "message": "refactor: removing last pieces of the interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d61697b5a95a8c6cfc9345726bdb6fd4c7307bb", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5d61697b5a95a8c6cfc9345726bdb6fd4c7307bb", "committedDate": "2020-10-26T17:41:48Z", "message": "Merge branch 'master' of https://github.com/blackducksoftware/blackduck-alert into ek-without-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77fe7a4260364ca00330847adb746be107674af7", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/77fe7a4260364ca00330847adb746be107674af7", "committedDate": "2020-10-27T19:23:12Z", "message": "Merge branch 'master' of https://github.com/blackducksoftware/blackduck-alert into ek-without-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4aa3989d3f1ea570adb9040a10b630e2d4010c4", "author": {"user": null}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d4aa3989d3f1ea570adb9040a10b630e2d4010c4", "committedDate": "2020-10-27T19:41:54Z", "message": "refactor: use 'retrieve' as a prefix instead of the over-used 'get'"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3017, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}