{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTcxMTU4", "number": 1181, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDozMjowMVrOEmQPfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDoyNzoxOFrOEmoPyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTQ3NDUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/jira/cloud/descriptor/JiraCloudGlobalUIConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDozMjowMVrOHWLRnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDozMjowMVrOHWLRnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAxNTQ1Mw==", "bodyText": "\"of the user Jira Cloud user\" should be simplified to \"of the Jira Cloud user\"", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493015453", "createdAt": "2020-09-22T20:32:01Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/cloud/descriptor/JiraCloudGlobalUIConfig.java", "diffHunk": "@@ -38,13 +39,16 @@\n @Component\n public class JiraCloudGlobalUIConfig extends UIConfig {\n     public static final String LABEL_URL = \"Url\";\n-    public static final String LABEL_ADMIN_EMAIL_ADDRESS = \"Admin Email Address\";\n-    public static final String LABEL_ADMIN_API_TOKEN = \"Admin API Token\";\n+    public static final String LABEL_EMAIL_ADDRESS = \"Email Address\";\n+    public static final String LABEL_API_TOKEN = \"API Token\";\n+    public static final String LABEL_DISABLE_PLUGIN_CHECK = \"Disable Plugin Check\";\n     public static final String LABEL_CONFIGURE_PLUGIN = \"Configure Jira Cloud plugin\";\n \n     public static final String DESCRIPTION_URL = \"The URL of the Jira Cloud server.\";\n-    public static final String DESCRIPTION_ADMIN_USER_NAME = \"The email address of the admin used to log into the Jira Cloud server that has generated the API token.\";\n-    public static final String DESCRIPTION_ADMIN_API_TOKEN = \"The admin API token used to send API requests to the Jira Cloud server.\";\n+    public static final String DESCRIPTION_USER_NAME = \"The email address of the user Jira Cloud user. Note: Unless 'Disable Plugin Check' is checked, this user must be a Jira admin.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11222c178326d1c9c3a9bb15e1d20725481b6fe4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTM1NjQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/jira/cloud/JiraCloudRequestDelegator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDoxNjo1MlrOHWwxbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDoyNjoxNVrOHWxOow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyOTgwNA==", "bodyText": "Should this be passed PluginManagerService, username, and accessToken?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493629804", "createdAt": "2020-09-23T14:16:52Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/cloud/JiraCloudRequestDelegator.java", "diffHunk": "@@ -98,4 +92,17 @@ public IssueTrackerResponse sendRequests(List<IssueTrackerRequest> requests) thr\n         return jiraIssueHandler.createOrUpdateIssues(validIssueConfig, requests);\n     }\n \n+    private void checkIfAlertPluginIsInstalled(JiraCloudServiceFactory jiraCloudServiceFactory, JiraCloudProperties jiraProperties) throws IssueTrackerException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8767fcad04e24be202c027fa71625eccf543fb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzNzI4Mw==", "bodyText": "It's not a public method, so I think it's better to minimize the clutter. Especially since this operation won't always happen.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493637283", "createdAt": "2020-09-23T14:26:15Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/cloud/JiraCloudRequestDelegator.java", "diffHunk": "@@ -98,4 +92,17 @@ public IssueTrackerResponse sendRequests(List<IssueTrackerRequest> requests) thr\n         return jiraIssueHandler.createOrUpdateIssues(validIssueConfig, requests);\n     }\n \n+    private void checkIfAlertPluginIsInstalled(JiraCloudServiceFactory jiraCloudServiceFactory, JiraCloudProperties jiraProperties) throws IssueTrackerException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYyOTgwNA=="}, "originalCommit": {"oid": "6b8767fcad04e24be202c027fa71625eccf543fb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTQwNzQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/channel/jira/server/web/JiraServerCustomFunctionAction.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDoyNzoxOFrOHWxSBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDo1OTo0M1rOHWy4wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzODE1MA==", "bodyText": "This method is done almost exactly the same as the other of checkIsAppInstalledAndRetryIfNecessary. Can you change the method to take a BiFunction so that all you need here is to pass in username and password then a method reference to jiraAppService::isAppInstalled", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493638150", "createdAt": "2020-09-23T14:27:18Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/server/web/JiraServerCustomFunctionAction.java", "diffHunk": "@@ -85,7 +84,7 @@ public JiraServerCustomFunctionAction(AuthorizationManager authorizationManager,\n                 }\n                 createBadRequestIntegrationException(e);\n             }\n-            boolean jiraPluginInstalled = isJiraPluginInstalled(jiraAppService, password, username, JiraConstants.JIRA_APP_KEY);\n+            boolean jiraPluginInstalled = JiraPluginCheckUtil.checkIsAppInstalledAndRetryIfNecessary(() -> jiraAppService.isAppInstalled(username, password, JiraConstants.JIRA_APP_KEY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8767fcad04e24be202c027fa71625eccf543fb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0OTk5Mw==", "bodyText": "I would still need to create a lambda in order to pass the app key as the third param. I don't know if it's worth it at that point.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493649993", "createdAt": "2020-09-23T14:42:02Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/server/web/JiraServerCustomFunctionAction.java", "diffHunk": "@@ -85,7 +84,7 @@ public JiraServerCustomFunctionAction(AuthorizationManager authorizationManager,\n                 }\n                 createBadRequestIntegrationException(e);\n             }\n-            boolean jiraPluginInstalled = isJiraPluginInstalled(jiraAppService, password, username, JiraConstants.JIRA_APP_KEY);\n+            boolean jiraPluginInstalled = JiraPluginCheckUtil.checkIsAppInstalledAndRetryIfNecessary(() -> jiraAppService.isAppInstalled(username, password, JiraConstants.JIRA_APP_KEY));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzODE1MA=="}, "originalCommit": {"oid": "6b8767fcad04e24be202c027fa71625eccf543fb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1NDUyNA==", "bodyText": "Actually, both server and cloud use the same PluginManagerService. Could you just pass that, username, and password to the static method and run the call yourself?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493654524", "createdAt": "2020-09-23T14:47:45Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/server/web/JiraServerCustomFunctionAction.java", "diffHunk": "@@ -85,7 +84,7 @@ public JiraServerCustomFunctionAction(AuthorizationManager authorizationManager,\n                 }\n                 createBadRequestIntegrationException(e);\n             }\n-            boolean jiraPluginInstalled = isJiraPluginInstalled(jiraAppService, password, username, JiraConstants.JIRA_APP_KEY);\n+            boolean jiraPluginInstalled = JiraPluginCheckUtil.checkIsAppInstalledAndRetryIfNecessary(() -> jiraAppService.isAppInstalled(username, password, JiraConstants.JIRA_APP_KEY));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzODE1MA=="}, "originalCommit": {"oid": "6b8767fcad04e24be202c027fa71625eccf543fb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2MjQ1NQ==", "bodyText": "I could. What are you trying to solve here? You don't like the lambda?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493662455", "createdAt": "2020-09-23T14:57:17Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/server/web/JiraServerCustomFunctionAction.java", "diffHunk": "@@ -85,7 +84,7 @@ public JiraServerCustomFunctionAction(AuthorizationManager authorizationManager,\n                 }\n                 createBadRequestIntegrationException(e);\n             }\n-            boolean jiraPluginInstalled = isJiraPluginInstalled(jiraAppService, password, username, JiraConstants.JIRA_APP_KEY);\n+            boolean jiraPluginInstalled = JiraPluginCheckUtil.checkIsAppInstalledAndRetryIfNecessary(() -> jiraAppService.isAppInstalled(username, password, JiraConstants.JIRA_APP_KEY));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzODE1MA=="}, "originalCommit": {"oid": "6b8767fcad04e24be202c027fa71625eccf543fb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2NDQ0OA==", "bodyText": "The lambda just feels a little unnecessary here. I think we could make it clearer with just normal method parameters. Lambdas to me generally mean different functionality, but we're always doing the same check.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1181#discussion_r493664448", "createdAt": "2020-09-23T14:59:43Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/server/web/JiraServerCustomFunctionAction.java", "diffHunk": "@@ -85,7 +84,7 @@ public JiraServerCustomFunctionAction(AuthorizationManager authorizationManager,\n                 }\n                 createBadRequestIntegrationException(e);\n             }\n-            boolean jiraPluginInstalled = isJiraPluginInstalled(jiraAppService, password, username, JiraConstants.JIRA_APP_KEY);\n+            boolean jiraPluginInstalled = JiraPluginCheckUtil.checkIsAppInstalledAndRetryIfNecessary(() -> jiraAppService.isAppInstalled(username, password, JiraConstants.JIRA_APP_KEY));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYzODE1MA=="}, "originalCommit": {"oid": "6b8767fcad04e24be202c027fa71625eccf543fb"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1774, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}