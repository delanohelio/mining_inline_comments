{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxODgzMDgy", "number": 1182, "title": " authentication controller", "bodyText": "Refactor the actions and controllers to use ActionResponse.", "createdAt": "2020-09-23T15:58:55Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182", "merged": true, "mergeCommit": {"oid": "e7bc806b6d05086f7a2f0e27d982e5e175e0ebf5"}, "closed": true, "closedAt": "2020-09-23T20:49:32Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLdnK5AH2gAyNDkxODgzMDgyOmIzMDQ2ZTI0MGZhYjlkY2ExNWRhM2EwNmVmMGVmMjg3ZTBlNzI2ZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLywHwgH2gAyNDkxODgzMDgyOjZlOWIxZDkyNWE3YzE3ZDM2ODgzMDE3MmVlODc1MmNlNmE0NjJhYjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3046e240fab9dca15da3a06ef0ef287e0e726fa", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b3046e240fab9dca15da3a06ef0ef287e0e726fa", "committedDate": "2020-09-22T20:00:26Z", "message": "refactor: Rename LoginActions to AuthenticationActions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d857a0d08906d7dc15019ea4bd30f1cb24a81bb3", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d857a0d08906d7dc15019ea4bd30f1cb24a81bb3", "committedDate": "2020-09-23T15:56:43Z", "message": "Refactor: Use ActionResponse objects in the actions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3d65619cdb2c93faa96088b1b1362d57a3ee2f64", "committedDate": "2020-09-23T15:57:16Z", "message": "test: Implement tests for new Action and Controller classes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODE1MDE4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#pullrequestreview-494815018", "createdAt": "2020-09-23T15:59:39Z", "commit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTo1OTozOVrOHW1oGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTo1OTozOVrOHW1oGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcwOTMzOA==", "bodyText": "This was renamed from LoginActions to AuthenticationActions to be consistent with AuthenticationController.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#discussion_r493709338", "createdAt": "2020-09-23T15:59:39Z", "author": {"login": "psantos1113"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/authentication/AuthenticationActions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.web.api.authentication;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.http.HttpSession;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.authentication.BadCredentialsException;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.AuthenticationException;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.security.web.csrf.CsrfToken;\n+import org.springframework.security.web.csrf.CsrfTokenRepository;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.action.ActionResponse;\n+import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.web.security.authentication.AlertAuthenticationProvider;\n+\n+@Component\n+public class AuthenticationActions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODE2OTc4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#pullrequestreview-494816978", "createdAt": "2020-09-23T16:01:47Z", "commit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjowMTo0OFrOHW1uCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjowMTo0OFrOHW1uCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcxMDg1Nw==", "bodyText": "This class is the rename of LoginActionsTestIT.  Tests that were in AuthenticationControllerTestIT have been moved here where appropriate.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#discussion_r493710857", "createdAt": "2020-09-23T16:01:48Z", "author": {"login": "psantos1113"}, "path": "src/test/java/com/synopsys/integration/alert/web/api/authentication/AuthenticationActionsTestIT.java", "diffHunk": "@@ -0,0 +1,249 @@\n+/*\n+ * Copyright (C) 2017 Black Duck Software Inc.\n+ * http://www.blackducksoftware.com/\n+ * All rights reserved.\n+ *\n+ * This software is the confidential and proprietary information of\n+ * Black Duck Software (\"Confidential Information\"). You shall not\n+ * disclose such Confidential Information and shall use it only in\n+ * accordance with the terms of the license agreement you entered into\n+ * with Black Duck Software.\n+ */\n+package com.synopsys.integration.alert.web.api.authentication;\n+\n+import static junit.framework.TestCase.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.mock.web.MockHttpServletRequest;\n+import org.springframework.mock.web.MockHttpServletResponse;\n+import org.springframework.mock.web.MockHttpSession;\n+import org.springframework.security.authentication.BadCredentialsException;\n+import org.springframework.security.authentication.dao.DaoAuthenticationProvider;\n+import org.springframework.security.core.Authentication;\n+import org.springframework.security.ldap.authentication.LdapAuthenticationProvider;\n+import org.springframework.security.web.csrf.CsrfTokenRepository;\n+\n+import com.synopsys.integration.alert.common.action.ActionResponse;\n+import com.synopsys.integration.alert.common.descriptor.accessor.AuthorizationUtility;\n+import com.synopsys.integration.alert.common.enumeration.AuthenticationType;\n+import com.synopsys.integration.alert.common.exception.AlertConfigurationException;\n+import com.synopsys.integration.alert.common.exception.AlertDatabaseConstraintException;\n+import com.synopsys.integration.alert.common.exception.AlertException;\n+import com.synopsys.integration.alert.common.exception.AlertForbiddenOperationException;\n+import com.synopsys.integration.alert.common.persistence.model.UserModel;\n+import com.synopsys.integration.alert.database.api.DefaultUserAccessor;\n+import com.synopsys.integration.alert.mock.model.MockLoginRestModel;\n+import com.synopsys.integration.alert.util.AlertIntegrationTest;\n+import com.synopsys.integration.alert.util.TestProperties;\n+import com.synopsys.integration.alert.util.TestPropertyKey;\n+import com.synopsys.integration.alert.util.TestTags;\n+import com.synopsys.integration.alert.web.security.authentication.AlertAuthenticationProvider;\n+import com.synopsys.integration.alert.web.security.authentication.database.AlertDatabaseAuthenticationPerformer;\n+import com.synopsys.integration.alert.web.security.authentication.event.AuthenticationEventManager;\n+import com.synopsys.integration.alert.web.security.authentication.ldap.LdapAuthenticationPerformer;\n+import com.synopsys.integration.alert.web.security.authentication.ldap.LdapManager;\n+\n+@Tag(TestTags.CUSTOM_BLACKDUCK_CONNECTION)\n+public class AuthenticationActionsTestIT extends AlertIntegrationTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODE4MDYw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#pullrequestreview-494818060", "createdAt": "2020-09-23T16:03:00Z", "commit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjowMzowMFrOHW1xVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjowMzowMFrOHW1xVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzcxMTcwMA==", "bodyText": "Kept the tests that deal with sessions here since controllers manage valid and invalid HttpSession objects.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#discussion_r493711700", "createdAt": "2020-09-23T16:03:00Z", "author": {"login": "psantos1113"}, "path": "src/test/java/com/synopsys/integration/alert/web/api/authentication/AuthenticationControllerTestIT.java", "diffHunk": "@@ -87,110 +84,49 @@ public void testLogin() throws Exception {\n         mockMvc.perform(request).andExpect(MockMvcResultMatchers.status().isNoContent());\n     }\n \n-    @Test\n-    public void userLogoutWithValidSessionTest() {\n-        AuthenticationController loginHandler = new AuthenticationController(null, null, csrfTokenRepository);\n-        MockHttpServletRequest request = new MockHttpServletRequest();\n-        MockHttpServletResponse response = new MockHttpServletResponse();\n-        MockHttpSession session = (MockHttpSession) request.getSession(true);\n-        session.setMaxInactiveInterval(30);\n-        loginHandler.logout(request, response);\n-        assertTrue(session.isInvalid(), \"Expected the session to be invalid\");\n-        assertTrue(response.containsHeader(\"Location\"), \"Expected the response to contain a Location header\");\n-    }\n-\n-    @Test\n-    public void userLogoutWithInvalidSessionTest() {\n-        AuthenticationController loginHandler = new AuthenticationController(null, null, csrfTokenRepository);\n-        HttpServletRequest request = new MockHttpServletRequest();\n-        MockHttpServletResponse response = new MockHttpServletResponse();\n-        loginHandler.logout(request, response);\n-    }\n-\n     @Test\n     public void userLoginWithValidSessionTest() {\n-        LoginActions loginActions = Mockito.mock(LoginActions.class);\n-        AuthenticationController loginHandler = new AuthenticationController(loginActions, null, csrfTokenRepository);\n+        AuthenticationActions authenticationActions = Mockito.mock(AuthenticationActions.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODE4Njg2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#pullrequestreview-494818686", "createdAt": "2020-09-23T16:03:46Z", "commit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODIzNzEw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#pullrequestreview-494823710", "createdAt": "2020-09-23T16:09:24Z", "commit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODY3OTUx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1182#pullrequestreview-494867951", "createdAt": "2020-09-23T17:02:34Z", "commit": {"oid": "3d65619cdb2c93faa96088b1b1362d57a3ee2f64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e9b1d925a7c17d368830172ee8752ce6a462ab0", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/6e9b1d925a7c17d368830172ee8752ce6a462ab0", "committedDate": "2020-09-23T20:38:13Z", "message": "Merge remote-tracking branch 'origin/master' into ps_authentication_controller"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3506, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}