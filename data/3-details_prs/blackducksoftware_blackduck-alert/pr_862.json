{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MzAwODk1", "number": 862, "title": "Fix after save and task names", "bodyText": "", "createdAt": "2020-02-19T17:46:54Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862", "merged": true, "mergeCommit": {"oid": "b431cba028af78cd762225dd925b9ff95fe53911"}, "closed": true, "closedAt": "2020-02-20T14:36:05Z", "author": {"login": "gkillough"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF6HrXgH2gAyMzc3MzAwODk1OmY5NjI0MWU3Mzc2MDJkNmMxMzRjMzgyY2I1NDJjN2RjYjVmYTk0ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGL9wJAH2gAyMzc3MzAwODk1OjBhNDg5NGZiNmZmNzMzNTQ4OTExOTczMzVlMzM0MzU5ZDQzODlmMmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f96241e737602d6c134c382cb542c7dcb5fa94e8", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f96241e737602d6c134c382cb542c7dcb5fa94e8", "committedDate": "2020-02-19T17:38:35Z", "message": "Fix(Java): Use a field model in after save and compute task names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f23c58bfad3f8887d093a4eb2fb5fcde2e24dbf3", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f23c58bfad3f8887d093a4eb2fb5fcde2e24dbf3", "committedDate": "2020-02-19T17:39:56Z", "message": "Merge branch 'feat_provider_lifecycle_management' into gk_fix_after_save_and_task_names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/511690ec1e19d3435b0d82b1813680879f228c67", "committedDate": "2020-02-19T19:41:18Z", "message": "Fix(Test): Update test compile errors and add FIXMEs to BlackDuckAccumulator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDI5MjY1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862#pullrequestreview-361429265", "createdAt": "2020-02-19T20:54:56Z", "commit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMDo1NDo1NlrOFr3QcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMDo1NDo1NlrOFr3QcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUzODQxNw==", "bodyText": "Actual change.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862#discussion_r381538417", "createdAt": "2020-02-19T20:54:56Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/config/FieldModelProcessor.java", "diffHunk": "@@ -50,122 +50,122 @@\n     private final DescriptorProcessor descriptorProcessor;\n \n     @Autowired\n-    public FieldModelProcessor(final ConfigurationFieldModelConverter fieldModelConverter, final FieldValidationAction fieldValidationAction, final DescriptorProcessor descriptorProcessor) {\n+    public FieldModelProcessor(ConfigurationFieldModelConverter fieldModelConverter, FieldValidationAction fieldValidationAction, DescriptorProcessor descriptorProcessor) {\n         this.fieldModelConverter = fieldModelConverter;\n         this.fieldValidationAction = fieldValidationAction;\n         this.descriptorProcessor = descriptorProcessor;\n     }\n \n-    public FieldModel performAfterReadAction(final FieldModel fieldModel) throws AlertException {\n-        final Optional<ApiAction> optionalApiAction = descriptorProcessor.retrieveApiAction(fieldModel);\n+    public FieldModel performAfterReadAction(FieldModel fieldModel) throws AlertException {\n+        Optional<ApiAction> optionalApiAction = descriptorProcessor.retrieveApiAction(fieldModel);\n         if (optionalApiAction.isPresent()) {\n-            final ApiAction apiAction = optionalApiAction.get();\n+            ApiAction apiAction = optionalApiAction.get();\n             return apiAction.afterGetAction(fieldModel);\n         }\n         return fieldModel;\n     }\n \n-    public FieldModel performBeforeDeleteAction(final FieldModel fieldModel) throws AlertException {\n-        final Optional<ApiAction> optionalApiAction = descriptorProcessor.retrieveApiAction(fieldModel);\n+    public FieldModel performBeforeDeleteAction(FieldModel fieldModel) throws AlertException {\n+        Optional<ApiAction> optionalApiAction = descriptorProcessor.retrieveApiAction(fieldModel);\n         if (optionalApiAction.isPresent()) {\n-            final ApiAction apiAction = optionalApiAction.get();\n+            ApiAction apiAction = optionalApiAction.get();\n             return apiAction.beforeDeleteAction(fieldModel);\n         }\n         return fieldModel;\n     }\n \n-    public void performAfterDeleteAction(final String descriptorName, final String context) throws AlertException {\n-        final Optional<ApiAction> optionalApiAction = descriptorProcessor.retrieveApiAction(descriptorName, context);\n+    public void performAfterDeleteAction(FieldModel fieldModel) throws AlertException {\n+        Optional<ApiAction> optionalApiAction = descriptorProcessor.retrieveApiAction(fieldModel.getDescriptorName(), fieldModel.getContext());\n         if (optionalApiAction.isPresent()) {\n-            final ApiAction apiAction = optionalApiAction.get();\n-            apiAction.afterDeleteAction(descriptorName, context);\n+            ApiAction apiAction = optionalApiAction.get();\n+            apiAction.afterDeleteAction(fieldModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDU0OTA1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862#pullrequestreview-361454905", "createdAt": "2020-02-19T21:36:03Z", "commit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTIyNzQw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862#pullrequestreview-361922740", "createdAt": "2020-02-20T14:01:56Z", "commit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDowMTo1N1rOFsUadQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDowMTo1N1rOFsUadQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxNjExNw==", "bodyText": "Is this used by any other class should this be private", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862#discussion_r382016117", "createdAt": "2020-02-20T14:01:57Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/workflow/task/ScheduledTask.java", "diffHunk": "@@ -46,36 +46,41 @@\n     private final Logger logger = LoggerFactory.getLogger(getClass());\n \n     private final TaskScheduler taskScheduler;\n-    private final String taskName;\n     private ScheduledFuture<?> future;\n \n-    public ScheduledTask(final TaskScheduler taskScheduler, final String taskName) {\n+    public static String computeTaskName(Class<? extends ScheduledTask> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTI3MjA2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862#pullrequestreview-361927206", "createdAt": "2020-02-20T14:07:41Z", "commit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDowNzo0MlrOFsUoWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDowNzo0MlrOFsUoWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxOTY3Mg==", "bodyText": "Couldn't we keep getTaskName() and in the constructor of Scheduled task do the following:\ntaskName = computeTaskName();", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/862#discussion_r382019672", "createdAt": "2020-02-20T14:07:42Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/workflow/task/ScheduledTask.java", "diffHunk": "@@ -46,36 +46,41 @@\n     private final Logger logger = LoggerFactory.getLogger(getClass());\n \n     private final TaskScheduler taskScheduler;\n-    private final String taskName;\n     private ScheduledFuture<?> future;\n \n-    public ScheduledTask(final TaskScheduler taskScheduler, final String taskName) {\n+    public static String computeTaskName(Class<? extends ScheduledTask> clazz) {\n+        String packageName = clazz.getPackageName();\n+        String simpleClassName = clazz.getSimpleName();\n+\n+        return String.format(\"Task::Class[%s.%s]\", packageName, simpleClassName);\n+    }\n+\n+    public ScheduledTask(TaskScheduler taskScheduler) {\n         this.taskScheduler = taskScheduler;\n-        this.taskName = taskName;\n     }\n \n-    public String getTaskName() {\n-        return taskName;\n+    public String computeTaskName() {\n+        return ScheduledTask.computeTaskName(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "511690ec1e19d3435b0d82b1813680879f228c67"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a4894fb6ff73354891197335e334359d4389f2f", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0a4894fb6ff73354891197335e334359d4389f2f", "committedDate": "2020-02-20T14:26:02Z", "message": "Fix(Java): Compute ScheduledTask's taskName in its constructor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2823, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}