{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTI4MTA1", "number": 1237, "title": "Jr improvements", "bodyText": "Making changes based on the 6.2.0 customer patch I have been working on.\nChanging/adding logging to make debugging easier.\nUpdating the scheduled tasks so each task can define its cron schedule.\nUpdating the notification processing so we can re-use the stateful provider across multiple jobs using the same provider.\nUpdating the BlackDuckProperties to clean up the unnecessary Optional return types.\nChanging the BlackDuckDataSyncTask to run once a day.", "createdAt": "2020-11-02T15:16:15Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237", "merged": true, "mergeCommit": {"oid": "1225ffc6353bc074fad814abae5f8d811a2fb881"}, "closed": true, "closedAt": "2020-11-02T21:59:12Z", "author": {"login": "jamesrichard91"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXZV_CAH2gAyNTE0MTI4MTA1OmU2M2E4MDQzNWM4NDFjNGQzOWI2NGRhMzg1NGQzMjdhZjYyYmRhOWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYr17DAH2gAyNTE0MTI4MTA1OmNlNGJlODhmODA1NjVmMDRiYzg5OTliNjBkZmQwOWQ5NTk0YzNjMTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e63a80435c841c4d39b64da3854d327af62bda9a", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e63a80435c841c4d39b64da3854d327af62bda9a", "committedDate": "2020-10-29T21:49:08Z", "message": "Making improvements to the logging, the scheduled task, and the notification processing based on the patch for a customer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88d8cf514c87fffdb606f53085f69e03600be61b", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/88d8cf514c87fffdb606f53085f69e03600be61b", "committedDate": "2020-10-29T21:51:59Z", "message": "Merge branch 'master' into jr_improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "435834a6ae04ae400547fd70064e6c06d9d25b14", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/435834a6ae04ae400547fd70064e6c06d9d25b14", "committedDate": "2020-10-29T22:19:10Z", "message": "Cleaning up our use of Optional in the BlackDuckProperties, updating logging for easier debugging, updating the notification processing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b02a01ca026008c2d25ec736ec47129c2134c00f", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b02a01ca026008c2d25ec736ec47129c2134c00f", "committedDate": "2020-10-29T22:45:10Z", "message": "Fixing test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40bc3562649cd4f66551d93d0886f176f101d17a", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/40bc3562649cd4f66551d93d0886f176f101d17a", "committedDate": "2020-10-30T14:47:12Z", "message": "Fixing query and test mocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e4a049d4cdfe326d1d4ea698d5382d3868ec616", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3e4a049d4cdfe326d1d4ea698d5382d3868ec616", "committedDate": "2020-10-30T16:51:23Z", "message": "Updating job query, updating the audit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc76b751f7c7f1b4189efb1e7fd236d7a55f91d9", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/bc76b751f7c7f1b4189efb1e7fd236d7a55f91d9", "committedDate": "2020-10-30T18:35:18Z", "message": "Merge branch 'master' into jr_improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c779b9c73944def5b6b9bb5d0ce8ee0f532f75c5", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/c779b9c73944def5b6b9bb5d0ce8ee0f532f75c5", "committedDate": "2020-10-30T19:18:09Z", "message": "Adding methods to the StaticJobAccessor to support the new notification processing. Updating the related JobAccessor method to use objects instead of Strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057", "committedDate": "2020-11-02T15:10:06Z", "message": "Adding query to find matching jobs using the new database structure."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzM2OTE3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521736917", "createdAt": "2020-11-02T15:32:13Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTozMjoxM1rOHsJapg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTozMjoxM1rOHsJapg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA1MzY3MA==", "bodyText": "this method is pretty much a duplicate of 79. I think you can create a private method that takes in a bifunction that performs the getMatchingEnabledJobs functionality.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516053670", "createdAt": "2020-11-02T15:32:13Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/workflow/processor/notification/NotificationProcessor.java", "diffHunk": "@@ -71,18 +76,42 @@ public NotificationProcessor(ConfigurationAccessor configurationAccessor, JobAcc\n \n     public List<DistributionEvent> processNotifications(FrequencyType frequency, List<AlertNotificationModel> notifications) {\n         logger.info(\"Notifications to Process: {}\", notifications.size());\n-        List<ConfigurationJobModel> jobsForFrequency = jobAccessor.getJobsByFrequency(frequency);\n-        return processNotificationsForJobs(jobsForFrequency, notifications);\n+        SetMap<NotificationFilterModel, AlertNotificationModel> notificationFilterMap = extractNotificationInformation(notifications);\n+\n+        List<DistributionEvent> events = new ArrayList<>();\n+        for (Map.Entry<NotificationFilterModel, Set<AlertNotificationModel>> entry : notificationFilterMap.entrySet()) {\n+            NotificationFilterModel notificationFilterModel = entry.getKey();\n+            List<ConfigurationJobModel> matchingJobs = jobAccessor.getMatchingEnabledJobs(frequency, notificationFilterModel.getProviderConfigId(), notificationFilterModel.getNotificationType());\n+\n+            List<AlertNotificationModel> matchingNotifications = new ArrayList<>(entry.getValue());\n+            if (!matchingNotifications.isEmpty() && !matchingJobs.isEmpty()) {\n+                events.addAll(processNotificationsThatMatchFilter(notificationFilterModel, matchingJobs, matchingNotifications));\n+            }\n+        }\n+        return events;\n     }\n \n     public List<DistributionEvent> processNotifications(List<AlertNotificationModel> notifications) {\n+        // used in AuditEntryActions\n         // when a job is deleted use this method to send the same notification to the current set of jobs. i.e. audit\n         // FIXME consider paging\n-        List<ConfigurationJobModel> allJobs = jobAccessor.getAllJobs();\n-        return processNotificationsForJobs(allJobs, notifications);\n+        SetMap<NotificationFilterModel, AlertNotificationModel> notificationFilterMap = extractNotificationInformation(notifications);\n+\n+        List<DistributionEvent> events = new ArrayList<>();\n+        for (Map.Entry<NotificationFilterModel, Set<AlertNotificationModel>> entry : notificationFilterMap.entrySet()) {\n+            NotificationFilterModel notificationFilterModel = entry.getKey();\n+            List<ConfigurationJobModel> matchingJobs = jobAccessor.getMatchingEnabledJobs(notificationFilterModel.getProviderConfigId(), notificationFilterModel.getNotificationType());\n+\n+            List<AlertNotificationModel> matchingNotifications = new ArrayList<>(entry.getValue());\n+            if (!matchingNotifications.isEmpty() && !matchingJobs.isEmpty()) {\n+                events.addAll(processNotificationsThatMatchFilter(notificationFilterModel, matchingJobs, matchingNotifications));\n+            }\n+        }\n+        return events;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzQ3NTc1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521747575", "createdAt": "2020-11-02T15:43:15Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTo0MzoxNVrOHsJ61Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTo0MzoxNVrOHsJ61Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2MTkwOQ==", "bodyText": "Would we prefer streams over loops? We could convert this to a stream, map, then collect.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516061909", "createdAt": "2020-11-02T15:43:15Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/workflow/processor/notification/NotificationProcessor.java", "diffHunk": "@@ -152,13 +225,32 @@ public NotificationProcessor(ConfigurationAccessor configurationAccessor, JobAcc\n         return List.of();\n     }\n \n-    private Optional<ConfigurationModel> retrieveProviderConfig(ConfigurationJobModel job) {\n+    private Optional<ConfigurationModel> retrieveProviderConfig(Long providerConfigID) {\n         try {\n-            return configurationAccessor.getConfigurationById(job.getProviderConfigIdAsLong());\n+            return configurationAccessor.getConfigurationById(providerConfigID);\n         } catch (AlertDatabaseConstraintException e) {\n-            logger.error(\"Could not retrieve the provider config for job: {}\", job.getName(), e);\n+            logger.error(\"Could not retrieve the provider config for ID: {}\", providerConfigID);\n+            logger.debug(e.getMessage(), e);\n             return Optional.empty();\n         }\n     }\n \n+    private SetMap<NotificationFilterModel, AlertNotificationModel> extractNotificationInformation(List<AlertNotificationModel> notifications) {\n+        SetMap<NotificationFilterModel, AlertNotificationModel> notificationFilterMap = SetMap.createDefault();\n+        for (AlertNotificationModel alertNotificationModel : notifications) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 167}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzUxNDQ4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521751448", "createdAt": "2020-11-02T15:47:18Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTo0NzoxOVrOHsKGbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTo0NzoxOVrOHsKGbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2NDg3OQ==", "bodyText": "I believe these can also use a common private method that is passed a bifunction. You would pass the findMatchingEnabledJobIds function in.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516064879", "createdAt": "2020-11-02T15:47:19Z", "author": {"login": "bamandel"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultJobAccessor.java", "diffHunk": "@@ -70,6 +71,28 @@ public DefaultJobAccessor(ConfigGroupRepository configGroupRepository, DefaultCo\n         return convertToJobModels(jobEntities);\n     }\n \n+    @Override\n+    public List<ConfigurationJobModel> getMatchingEnabledJobs(FrequencyType frequency, Long providerConfigId, NotificationType notificationType) {\n+        //TODO change this to return a page of results\n+        List<UUID> matchingJobIds = configGroupRepository.findMatchingEnabledJobIds(frequency.name(), String.valueOf(providerConfigId), notificationType.name());\n+        if (matchingJobIds.isEmpty()) {\n+            return List.of();\n+        }\n+        List<ConfigGroupEntity> jobEntities = configGroupRepository.findByJobIds(matchingJobIds);\n+        return convertToJobModels(jobEntities);\n+    }\n+\n+    @Override\n+    public List<ConfigurationJobModel> getMatchingEnabledJobs(Long providerConfigId, NotificationType notificationType) {\n+        //TODO change this to return a page of results\n+        List<UUID> matchingJobIds = configGroupRepository.findMatchingEnabledJobIds(String.valueOf(providerConfigId), notificationType.name());\n+        if (matchingJobIds.isEmpty()) {\n+            return List.of();\n+        }\n+        List<ConfigGroupEntity> jobEntities = configGroupRepository.findByJobIds(matchingJobIds);\n+        return convertToJobModels(jobEntities);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzUyNzM3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521752737", "createdAt": "2020-11-02T15:48:35Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTo0ODozNVrOHsKKBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNTo0ODozNVrOHsKKBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2NTc5OA==", "bodyText": "This should be able to use a shared private method", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516065798", "createdAt": "2020-11-02T15:48:35Z", "author": {"login": "bamandel"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/StaticJobAccessor.java", "diffHunk": "@@ -168,6 +169,24 @@ public StaticJobAccessor(\n                    .collect(Collectors.toList());\n     }\n \n+    @Override\n+    public List<ConfigurationJobModel> getMatchingEnabledJobs(FrequencyType frequency, Long providerConfigId, NotificationType notificationType) {\n+        // TODO change this to return a page of jobs\n+        return distributionJobRepository.findMatchingEnabledJob(frequency.name(), providerConfigId, notificationType.name())\n+                   .stream()\n+                   .map(this::convertToConfigurationJobModel)\n+                   .collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public List<ConfigurationJobModel> getMatchingEnabledJobs(Long providerConfigId, NotificationType notificationType) {\n+        // TODO change this to return a page of jobs\n+        return distributionJobRepository.findMatchingEnabledJob(providerConfigId, notificationType.name())\n+                   .stream()\n+                   .map(this::convertToConfigurationJobModel)\n+                   .collect(Collectors.toList());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzc5MTMy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521779132", "createdAt": "2020-11-02T16:16:04Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxNjowNFrOHsLXbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxNjowNFrOHsLXbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NTYxMw==", "bodyText": "Can this be changed to optional mapping? It would remove this if statement and you could orElse(null) at the end.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516085613", "createdAt": "2020-11-02T16:16:04Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/action/BlackDuckDistributionTestAction.java", "diffHunk": "@@ -72,12 +74,15 @@ public MessageResult testConfig(String configId, FieldModel fieldModel, FieldUti\n                 .flatMap(projectNamePattern -> validatePatternMatchesProject(providerConfigId, projectNamePattern))\n                 .ifPresent(fieldStatuses::add);\n \n-            Optional<BlackDuckProperties> optionalBlackDuckProperties = configurationAccessor.getConfigurationById(providerConfigId)\n-                                                                            .map(blackDuckProvider::createStatefulProvider)\n-                                                                            .map(statefulProvider -> (BlackDuckProperties) statefulProvider.getProperties());\n-            if (optionalBlackDuckProperties.isPresent()) {\n-                BlackDuckProperties blackDuckProperties = optionalBlackDuckProperties.get();\n+            BlackDuckProperties blackDuckProperties = null;\n+            Optional<ConfigurationModel> providerConfigurationOptional = configurationAccessor.getConfigurationById(providerConfigId);\n+            if (providerConfigurationOptional.isPresent()) {\n+                ConfigurationModel providerConfiguration = providerConfigurationOptional.get();\n+                StatefulProvider statefulProvider = blackDuckProvider.createStatefulProvider(providerConfiguration);\n+                blackDuckProperties = (BlackDuckProperties) statefulProvider.getProperties();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzc5NDU2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521779456", "createdAt": "2020-11-02T16:16:27Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxNjoyN1rOHsLYYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoxNjoyN1rOHsLYYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4NTg1Ng==", "bodyText": "I realize this is just for the patch, so this may not be an issue, but would it be a problem for customers in other timezones?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516085856", "createdAt": "2020-11-02T16:16:27Z", "author": {"login": "ChomickiM"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/workflow/task/ScheduledTask.java", "diffHunk": "@@ -42,7 +42,9 @@\n public abstract class ScheduledTask implements Runnable {\n     public static final String FORMAT_PATTERN = \"MM/dd/yyy hh:mm a\";\n     public static final String STOP_SCHEDULE_EXPRESSION = \"\";\n+    //Spring Cron documentation  https://riptutorial.com/spring/example/21209/cron-expression\n     public static final String EVERY_MINUTE_CRON_EXPRESSION = \"0 0/1 * 1/1 * *\";\n+    public static final String ONCE_DAILY_CRON_EXPRESSION = \"0 0 0 * * *\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzg5MjU1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521789255", "createdAt": "2020-11-02T16:26:49Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyNjo0OVrOHsL1DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyNjo0OVrOHsL1DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5MzE5Nw==", "bodyText": "Do you think this could be too verbose for info? We already mention processing events. I would prefer debug", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516093197", "createdAt": "2020-11-02T16:26:49Z", "author": {"login": "bamandel"}, "path": "workflow/src/main/java/com/synopsys/integration/alert/workflow/message/NotificationReceiver.java", "diffHunk": "@@ -64,9 +64,11 @@ public void handleEvent(NotificationEvent event) {\n                 logger.warn(\"Can not process a notification event without notification Id's.\");\n                 return;\n             }\n+            logger.debug(\"Event {}\", event);\n             logger.info(\"Processing event for {} notifications.\", event.getNotificationIds().size());\n             List<AlertNotificationModel> notifications = notificationAccessor.findByIds(event.getNotificationIds());\n             List<DistributionEvent> distributionEvents = notificationProcessor.processNotifications(FrequencyType.REAL_TIME, notifications);\n+            logger.info(\"Sending {} events for notifications.\", distributionEvents.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzkwMTM2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521790136", "createdAt": "2020-11-02T16:27:47Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyNzo0N1rOHsL3lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyNzo0N1rOHsL3lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5Mzg0NA==", "bodyText": "Should one of these be debug as well? We don't want to spam too much", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#discussion_r516093844", "createdAt": "2020-11-02T16:27:47Z", "author": {"login": "bamandel"}, "path": "workflow/src/main/java/com/synopsys/integration/alert/workflow/scheduled/frequency/ProcessingTask.java", "diffHunk": "@@ -72,7 +72,9 @@ public DateRange getDateRange() {\n     public void runTask() {\n         DateRange dateRange = getDateRange();\n         List<AlertNotificationModel> notificationList = read(dateRange);\n+        logger.info(\"Processing {} notifications.\", notificationList.size());\n         List<DistributionEvent> distributionEvents = notificationProcessor.processNotifications(getDigestType(), notificationList);\n+        logger.info(\"Sending {} events for notifications.\", distributionEvents.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzkwMjcy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521790272", "createdAt": "2020-11-02T16:27:55Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODg2Mjc0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521886274", "createdAt": "2020-11-02T18:20:45Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODkwMjE1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521890215", "createdAt": "2020-11-02T18:26:31Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTUyNDI4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1237#pullrequestreview-521952428", "createdAt": "2020-11-02T20:01:01Z", "commit": {"oid": "f5d3f6cc1dfed1e5bbc9f76956cb3b7172fff057"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5fc47dd00c9a968abe3330103412d83a4d73681", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e5fc47dd00c9a968abe3330103412d83a4d73681", "committedDate": "2020-11-02T20:57:20Z", "message": "Merge branch 'master' into jr_improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6865c2d34ff9a539f836b610c62043109095c612", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/6865c2d34ff9a539f836b610c62043109095c612", "committedDate": "2020-11-02T21:32:44Z", "message": "Merge branch 'master' into jr_improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee55cdffba2b6ff462deee476c3c5df7e96365ff", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ee55cdffba2b6ff462deee476c3c5df7e96365ff", "committedDate": "2020-11-02T21:47:58Z", "message": "Cleaning up duplicate code using Suppliers and Functions. Cleaned up some unused fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce4be88f80565f04bc8999b60dfd09d9594c3c10", "author": {"user": {"login": "jamesrichard91", "name": "James Richard"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/ce4be88f80565f04bc8999b60dfd09d9594c3c10", "committedDate": "2020-11-02T21:56:14Z", "message": "Fixing Audit test data"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3043, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}