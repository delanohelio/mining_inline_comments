{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTY5NzA0", "number": 1067, "title": "Remove Unnecessary Abstraction and Add Callback", "bodyText": "", "createdAt": "2020-07-15T15:46:22Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067", "merged": true, "mergeCommit": {"oid": "ab6285931b395890f611b9b8081003c459b1d236"}, "closed": true, "closedAt": "2020-07-15T22:25:47Z", "author": {"login": "gkillough"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc07qC2AH2gAyNDQ5NTY5NzA0OmYyMjAzOWQ4ZDE0NWJjNjAzMjFmMDI0ODc0M2M3OWM4NDA4YTQ5MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1SU9PgH2gAyNDQ5NTY5NzA0OjAwNjBiZTI2ODYyOTkwZmU0MTYxOTBkYmM5MmI4YjkxOGJmMmIyMzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f22039d8d145bc60321f0248743c79c8408a4921", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f22039d8d145bc60321f0248743c79c8408a4921", "committedDate": "2020-07-14T20:00:28Z", "message": "Fix(Issue Tracker): Remove unnecessary generics from issue tracker abstraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f89952c941980f91359c698e0c60172668aa34a3", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f89952c941980f91359c698e0c60172668aa34a3", "committedDate": "2020-07-15T12:27:16Z", "message": "Refactor(Jira Cloud): Rename ambiguous jira components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31f64109b07118760e897af29ae80984af01f131", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/31f64109b07118760e897af29ae80984af01f131", "committedDate": "2020-07-15T13:14:48Z", "message": "Fix(Issue Tracker): Add Alert-specific coupling to issue tracker models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c58b6896975fe081f4fff51eb32462bc27900fd8", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/c58b6896975fe081f4fff51eb32462bc27900fd8", "committedDate": "2020-07-15T14:05:13Z", "message": "Feat(Issue Tracker): Enrich issue requests and responses to enable provider callbacks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/bb30a25afeaf825d377135a11cd55e23361895c2", "committedDate": "2020-07-15T15:43:43Z", "message": "Test(Issue Tracker): Fix issue tracker unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTI2MTg2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#pullrequestreview-449126186", "createdAt": "2020-07-15T16:38:35Z", "commit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTMxMTEz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#pullrequestreview-449131113", "createdAt": "2020-07-15T16:44:58Z", "commit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0NDo1OVrOGyGdZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0NDo1OVrOGyGdZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NzgxMw==", "bodyText": "Can we just map here instead of 2 if statements?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#discussion_r455187813", "createdAt": "2020-07-15T16:44:59Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/channel/IssueTrackerChannel.java", "diffHunk": "@@ -82,8 +89,32 @@ public final void sendProviderCallbackEvents(List<ProviderCallbackEvent> callbac\n     }\n \n     private List<ProviderCallbackEvent> createCallbackEvents(IssueTrackerResponse issueTrackerResponse) {\n-        // FIXME release an update to issuetracker-common\n-        return List.of();\n+        List<ProviderCallbackEvent> callbackEvents = new ArrayList<>();\n+        for (IssueTrackerIssueResponseModel issueResponseModel : issueTrackerResponse.getUpdatedIssues()) {\n+            AlertIssueOrigin alertIssueOrigin = issueResponseModel.getAlertIssueOrigin();\n+\n+            Optional<ComponentItem> optionalComponentItem = alertIssueOrigin.getComponentItem();\n+            if (optionalComponentItem.isPresent()) {\n+                ComponentItem componentItem = optionalComponentItem.get();\n+                Optional<ComponentItemCallbackInfo> optionalCallbackInfo = componentItem.getCallbackInfo();\n+                if (optionalCallbackInfo.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTM1MDI0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#pullrequestreview-449135024", "createdAt": "2020-07-15T16:50:13Z", "commit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo1MDoxM1rOGyGpvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo1MDoxM1rOGyGpvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5MDk3NQ==", "bodyText": "Can we change this variable name?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#discussion_r455190975", "createdAt": "2020-07-15T16:50:13Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/channel/issuetracker/service/IssueHandler.java", "diffHunk": "@@ -53,39 +56,41 @@ public IssueHandler(IssueContentLengthValidator contentLengthValidator) {\n     }\n \n     public final IssueTrackerResponse createOrUpdateIssues(IssueConfig issueConfig, Collection<IssueTrackerRequest> requests) throws IntegrationException {\n-        Set<String> issueKeys = new HashSet<>();\n+        Set<IssueTrackerIssueResponseModel> issueResponseModels = new HashSet<>();\n         for (IssueTrackerRequest request : requests) {\n-            Set<String> issueKeysForMessage = createOrUpdateIssuesPerComponent(issueConfig, request);\n-            issueKeys.addAll(issueKeysForMessage);\n+            Set<IssueTrackerIssueResponseModel> issueKeysForMessage = createOrUpdateIssuesPerComponent(issueConfig, request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTQwNDQ1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#pullrequestreview-449140445", "createdAt": "2020-07-15T16:57:20Z", "commit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo1NzoyMFrOGyG7Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo1NzoyMFrOGyG7Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5NTQwMg==", "bodyText": "Would we be able to convert this to a private method that's used in these if checks?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#discussion_r455195402", "createdAt": "2020-07-15T16:57:20Z", "author": {"login": "bamandel"}, "path": "alert-jira/src/main/java/com/synopsys/integration/alert/jira/common/JiraMessageContentConverter.java", "diffHunk": "@@ -68,44 +70,46 @@ public JiraMessageContentConverter(JiraMessageParser jiraMessageParser) {\n         return issues;\n     }\n \n-    protected List<IssueTrackerRequest> updateIssueByTopLevelAction(IssueConfig issueConfig, String providerName, String providerUrl, LinkableItem topic, LinkableItem nullableSubTopic, ItemOperation action) {\n+    protected List<IssueTrackerRequest> updateIssueByTopLevelAction(IssueConfig issueConfig, ContentKey providerContentKey, String providerUrl, LinkableItem topic, LinkableItem nullableSubTopic, ItemOperation action) {\n         if (ItemOperation.DELETE == action) {\n-            logger.debug(\"Attempting to resolve issues in the project {} for Provider: {}, Provider Project: {}[{}].\", issueConfig.getProjectKey(), providerName, topic.getValue(), nullableSubTopic);\n+            logger.debug(\"Attempting to resolve issues in the project {} for Provider: {}, Provider Project: {}[{}].\", issueConfig.getProjectKey(), providerContentKey.getProviderName(), topic.getValue(), nullableSubTopic);\n             String trackingKey = createAdditionalTrackingKey(null);\n-            IssueSearchProperties issueSearchProperties = JiraIssuePropertiesUtil.create(providerName, providerUrl, topic, nullableSubTopic, null, trackingKey);\n-            IssueContentModel issueContentModel = jiraMessageParser.createIssueContentModel(providerName, IssueResolutionRequest.OPERATION, topic, nullableSubTopic, Set.of(), null);\n-            IssueTrackerRequest issueRequest = IssueResolutionRequest.of(issueSearchProperties, issueContentModel);\n+            IssueSearchProperties issueSearchProperties = JiraIssuePropertiesUtil.create(providerContentKey.getProviderName(), providerUrl, topic, nullableSubTopic, null, trackingKey);\n+            IssueContentModel issueContentModel = jiraMessageParser.createIssueContentModel(providerContentKey.getProviderName(), IssueResolutionRequest.OPERATION, topic, nullableSubTopic, Set.of(), null);\n+            AlertIssueOrigin alertIssueOrigin = new AlertIssueOrigin(providerContentKey, null);\n+            IssueTrackerRequest issueRequest = IssueResolutionRequest.of(issueSearchProperties, issueContentModel, alertIssueOrigin);\n             return List.of(issueRequest);\n         } else {\n             logger.debug(\"The top level action was not a DELETE action so it will be ignored\");\n         }\n         return List.of();\n     }\n \n-    protected List<IssueTrackerRequest> createOrUpdateIssuesByComponentGroup(String providerName, String providerUrl, LinkableItem topic, LinkableItem nullableSubTopic,\n-        SetMap<String, ComponentItem> groupedComponentItems)\n-        throws IntegrationException {\n+    protected List<IssueTrackerRequest> createOrUpdateIssuesByComponentGroup(ContentKey providerContentKey, String providerUrl, LinkableItem topic, LinkableItem nullableSubTopic,\n+        SetMap<String, ComponentItem> groupedComponentItems) throws IntegrationException {\n         List<IssueTrackerRequest> issues = new LinkedList<>();\n \n         for (Set<ComponentItem> componentItems : groupedComponentItems.values()) {\n             ComponentItem arbitraryItem = componentItems\n                                               .stream()\n                                               .findAny()\n-                                              .orElseThrow(() -> new AlertException(String.format(\"No actionable component items were found. Provider: %s, Topic: %s, SubTopic: %s\", providerName, topic, nullableSubTopic)));\n+                                              .orElseThrow(\n+                                                  () -> new AlertException(String.format(\"No actionable component items were found. Provider: %s, Topic: %s, SubTopic: %s\", providerContentKey.getProviderName(), topic, nullableSubTopic)));\n             ItemOperation operation = arbitraryItem.getOperation();\n             String trackingKey = createAdditionalTrackingKey(arbitraryItem);\n-            IssueSearchProperties issueSearchProperties = JiraIssuePropertiesUtil.create(providerName, providerUrl, topic, nullableSubTopic, arbitraryItem, trackingKey);\n+            IssueSearchProperties issueSearchProperties = JiraIssuePropertiesUtil.create(providerContentKey.getProviderName(), providerUrl, topic, nullableSubTopic, arbitraryItem, trackingKey);\n \n             IssueTrackerRequest issueRequest = null;\n+            AlertIssueOrigin alertIssueOrigin = new AlertIssueOrigin(providerContentKey, arbitraryItem);\n             if (ItemOperation.ADD == operation || ItemOperation.UPDATE == operation) {\n-                IssueContentModel issueContentModel = jiraMessageParser.createIssueContentModel(providerName, IssueCreationRequest.OPERATION, topic, nullableSubTopic, componentItems, arbitraryItem);\n-                issueRequest = IssueCreationRequest.of(issueSearchProperties, issueContentModel);\n+                IssueContentModel issueContentModel = jiraMessageParser.createIssueContentModel(providerContentKey.getProviderName(), IssueCreationRequest.OPERATION, topic, nullableSubTopic, componentItems, arbitraryItem);\n+                issueRequest = IssueCreationRequest.of(issueSearchProperties, issueContentModel, alertIssueOrigin);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTQzNTMy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#pullrequestreview-449143532", "createdAt": "2020-07-15T17:01:12Z", "commit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowMToxMlrOGyHEcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowMToxMlrOGyHEcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5NzgwOQ==", "bodyText": "We're actually doing basically the same code here as in my last comment. I think these conversions my be better in their own class.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#discussion_r455197809", "createdAt": "2020-07-15T17:01:12Z", "author": {"login": "bamandel"}, "path": "alert-jira/src/main/java/com/synopsys/integration/alert/jira/common/JiraTestIssueRequestCreator.java", "diffHunk": "@@ -93,16 +96,18 @@ public IssueTrackerRequest createRequest(IssueOperation operation, String messag\n     }\n \n     // TODO simplify the following 2 methods\n-    private IssueTrackerRequest createResolveIssueRequest(String providerName, LinkableItem topicItem, LinkableItem subTopicItem, Set<ComponentItem> componentItems, ComponentItem arbitraryItem,\n+    private IssueTrackerRequest createResolveIssueRequest(ContentKey providerContentKey, LinkableItem topicItem, LinkableItem subTopicItem, Set<ComponentItem> componentItems, ComponentItem arbitraryItem,\n         IssueSearchProperties issueSearchProperties) {\n-        IssueContentModel contentModel = jiraMessageParser.createIssueContentModel(providerName, IssueResolutionRequest.OPERATION, topicItem, subTopicItem, componentItems, arbitraryItem);\n-        return IssueResolutionRequest.of(issueSearchProperties, contentModel);\n+        IssueContentModel contentModel = jiraMessageParser.createIssueContentModel(providerContentKey.getProviderName(), IssueResolutionRequest.OPERATION, topicItem, subTopicItem, componentItems, arbitraryItem);\n+        AlertIssueOrigin alertIssueOrigin = new AlertIssueOrigin(providerContentKey, null);\n+        return IssueResolutionRequest.of(issueSearchProperties, contentModel, alertIssueOrigin);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MTUxOTAz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1067#pullrequestreview-449151903", "createdAt": "2020-07-15T17:08:35Z", "commit": {"oid": "bb30a25afeaf825d377135a11cd55e23361895c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e64f855c66062917619f67140f34f8ddd146238", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2e64f855c66062917619f67140f34f8ddd146238", "committedDate": "2020-07-15T20:09:42Z", "message": "Fix(Issue Tracker): Clean up issue tracker code and fix jira cloud field key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a6ffa4fdfdf8ef29228e6ba1ac71a2b39210865", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/2a6ffa4fdfdf8ef29228e6ba1ac71a2b39210865", "committedDate": "2020-07-15T22:08:16Z", "message": "Fix(Issue Tracker): Fix issue callback event sending and key serialization issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0060be26862990fe416190dbc92b8b918bf2b239", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0060be26862990fe416190dbc92b8b918bf2b239", "committedDate": "2020-07-15T22:25:15Z", "message": "Fix(Integration Tests): Update usage of ProviderKey"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2590, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}