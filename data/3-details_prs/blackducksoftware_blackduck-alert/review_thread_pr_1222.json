{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODQ2MzE3", "number": 1222, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjowOToxOVrOEtc7ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowMjowN1rOEtmYzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDk1MzMyOnYy", "diffSide": "RIGHT", "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/MultiResponseModel.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjowOToxOVrOHhPzyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowNjo0OFrOHhfAUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNDA3NA==", "bodyText": "You'll need to annotate this method with JsonIgnore so that the JSON object created doesn't add a models attribute to the resulting object.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1222#discussion_r504624074", "createdAt": "2020-10-14T12:09:19Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/MultiResponseModel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.synopsys.integration.alert.common.action.api;\n+\n+import java.util.List;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+\n+public class MultiResponseModel<T extends AlertSerializableModel> extends AlertSerializableModel {\n+    private final List<T> models;\n+\n+    MultiResponseModel() {\n+        // For serialization\n+        this(List.of());\n+    }\n+\n+    public MultiResponseModel(List<T> models) {\n+        this.models = models;\n+    }\n+\n+    public List<T> getModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5bd1fe9cf65d3cc034a30cea65e1a7d3908b8e1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgyOTQ4OA==", "bodyText": "Could I alternatively (or in addition) make the method protected?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1222#discussion_r504829488", "createdAt": "2020-10-14T16:53:41Z", "author": {"login": "ekerwin"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/MultiResponseModel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.synopsys.integration.alert.common.action.api;\n+\n+import java.util.List;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+\n+public class MultiResponseModel<T extends AlertSerializableModel> extends AlertSerializableModel {\n+    private final List<T> models;\n+\n+    MultiResponseModel() {\n+        // For serialization\n+        this(List.of());\n+    }\n+\n+    public MultiResponseModel(List<T> models) {\n+        this.models = models;\n+    }\n+\n+    public List<T> getModels() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNDA3NA=="}, "originalCommit": {"oid": "a5bd1fe9cf65d3cc034a30cea65e1a7d3908b8e1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NTQzMw==", "bodyText": "I honestly not sure what Jackson would do.  From what I understand it uses the getters and setters which are usually public but I don't know if protected getter would be serialized or hidden.  I assume it would be hidden.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1222#discussion_r504865433", "createdAt": "2020-10-14T17:53:49Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/MultiResponseModel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.synopsys.integration.alert.common.action.api;\n+\n+import java.util.List;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+\n+public class MultiResponseModel<T extends AlertSerializableModel> extends AlertSerializableModel {\n+    private final List<T> models;\n+\n+    MultiResponseModel() {\n+        // For serialization\n+        this(List.of());\n+    }\n+\n+    public MultiResponseModel(List<T> models) {\n+        this.models = models;\n+    }\n+\n+    public List<T> getModels() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNDA3NA=="}, "originalCommit": {"oid": "a5bd1fe9cf65d3cc034a30cea65e1a7d3908b8e1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg2NTYyMQ==", "bodyText": "https://github.com/FasterXML/jackson-docs", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1222#discussion_r504865621", "createdAt": "2020-10-14T17:54:10Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/MultiResponseModel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.synopsys.integration.alert.common.action.api;\n+\n+import java.util.List;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+\n+public class MultiResponseModel<T extends AlertSerializableModel> extends AlertSerializableModel {\n+    private final List<T> models;\n+\n+    MultiResponseModel() {\n+        // For serialization\n+        this(List.of());\n+    }\n+\n+    public MultiResponseModel(List<T> models) {\n+        this.models = models;\n+    }\n+\n+    public List<T> getModels() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNDA3NA=="}, "originalCommit": {"oid": "a5bd1fe9cf65d3cc034a30cea65e1a7d3908b8e1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3MzA0MA==", "bodyText": "Regardless of Jackson, I think getModels() should be protected to better express intent.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1222#discussion_r504873040", "createdAt": "2020-10-14T18:06:48Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/api/MultiResponseModel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.synopsys.integration.alert.common.action.api;\n+\n+import java.util.List;\n+\n+import com.synopsys.integration.alert.common.rest.model.AlertSerializableModel;\n+\n+public class MultiResponseModel<T extends AlertSerializableModel> extends AlertSerializableModel {\n+    private final List<T> models;\n+\n+    MultiResponseModel() {\n+        // For serialization\n+        this(List.of());\n+    }\n+\n+    public MultiResponseModel(List<T> models) {\n+        this.models = models;\n+    }\n+\n+    public List<T> getModels() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyNDA3NA=="}, "originalCommit": {"oid": "a5bd1fe9cf65d3cc034a30cea65e1a7d3908b8e1"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjUwMzE5OnYy", "diffSide": "RIGHT", "path": "component/src/main/java/com/synopsys/integration/alert/component/users/web/role/RoleActions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowMjowN1rOHhe19w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODowMjowN1rOHhe19w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3MDM5MQ==", "bodyText": "Do you not have SaveActions enabled? Two lines of whitespace here.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1222#discussion_r504870391", "createdAt": "2020-10-14T18:02:07Z", "author": {"login": "gkillough"}, "path": "component/src/main/java/com/synopsys/integration/alert/component/users/web/role/RoleActions.java", "diffHunk": "@@ -112,6 +112,7 @@ public RoleActions(UserManagementDescriptorKey userManagementDescriptorKey, Role\n         return new ActionResponse<>(HttpStatus.NOT_FOUND);\n     }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2677bb4a596f7ca3576d2906882d7067061bfe4"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2306, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}