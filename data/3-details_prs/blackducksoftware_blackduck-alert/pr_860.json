{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjYxMzMw", "number": 860, "title": "Add the provider config ID to ProviderMessageContent.", "bodyText": "", "createdAt": "2020-02-19T16:30:39Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860", "merged": true, "mergeCommit": {"oid": "29f0d59d56f1dc4c1b2921b5cc077bd0ce8653f7"}, "closed": true, "closedAt": "2020-02-20T15:26:07Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF48sigH2gAyMzc3MjYxMzMwOjcyNWY2NzBhNjc5N2VmNjUyMDJjMmVlMWIzODU4NWZlNGZiOTYwNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGMNEnAFqTM2MTk1NjUwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/725f670a6797ef65202c2ee1b38585fe4fb96060", "committedDate": "2020-02-19T16:16:41Z", "message": "feat(provider): Add the provider config ID to ProviderMessageContent."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjQyODI3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#pullrequestreview-361242827", "createdAt": "2020-02-19T16:32:15Z", "commit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozMjoxNVrOFruUaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjozNjoxOVrOFrufhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MTk3Ng==", "bodyText": "This is the actual change here the rest are to remove finals.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381391976", "createdAt": "2020-02-19T16:32:15Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/test/java/com/synopsys/integration/alert/common/event/EventManagerTest.java", "diffHunk": "@@ -20,36 +20,36 @@\n \n     @Test\n     public void testSendEvents() throws Exception {\n-        final JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n-        final ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n+        JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n+        ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n         Mockito.doNothing().when(jmsTemplate).convertAndSend(Mockito.anyString(), Mockito.any(Object.class));\n-        final EventManager eventManager = new EventManager(contentConverter, jmsTemplate);\n+        EventManager eventManager = new EventManager(contentConverter, jmsTemplate);\n \n-        final LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n-        final ProviderMessageContent content = new ProviderMessageContent.Builder()\n-                                                   .applyProvider(\"provider\")\n+        LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n+        ProviderMessageContent content = new ProviderMessageContent.Builder()\n+                                                   .applyProvider(\"provider\", 1L)\n                                                    .applyTopic(\"testTopic\", \"topic\")\n                                                    .applySubTopic(subTopic.getName(), subTopic.getValue())\n                                                    .build();\n-        final FieldAccessor fieldAccessor = new FieldAccessor(Map.of());\n-        final DistributionEvent event = new DistributionEvent(UUID.randomUUID().toString(), \"destination\", RestConstants.formatDate(new Date()), \"provider\", \"FORMAT\",\n+        FieldAccessor fieldAccessor = new FieldAccessor(Map.of());\n+        DistributionEvent event = new DistributionEvent(UUID.randomUUID().toString(), \"destination\", RestConstants.formatDate(new Date()), \"provider\", \"FORMAT\",\n             MessageContentGroup.singleton(content), fieldAccessor);\n         eventManager.sendEvents(List.of(event));\n     }\n \n     @Test\n     public void testNotAbstractChannelEvent() throws Exception {\n-        final JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n-        final ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n+        JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n+        ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n         Mockito.doNothing().when(jmsTemplate).convertAndSend(Mockito.anyString(), Mockito.any(Object.class));\n-        final EventManager eventManager = new EventManager(contentConverter, jmsTemplate);\n-        final LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n-        final ProviderMessageContent content = new ProviderMessageContent.Builder()\n-                                                   .applyProvider(\"provider\")\n+        EventManager eventManager = new EventManager(contentConverter, jmsTemplate);\n+        LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n+        ProviderMessageContent content = new ProviderMessageContent.Builder()\n+                                                   .applyProvider(\"provider\", 1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MjgxNg==", "bodyText": "actual change here.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381392816", "createdAt": "2020-02-19T16:33:30Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/test/java/com/synopsys/integration/alert/common/workflow/processor/ProcessorTest.java", "diffHunk": "@@ -26,9 +26,9 @@ public ComponentItem createComponentItem(String component, String componentValue\n         return componentBuilder.build();\n     }\n \n-    public ProviderMessageContent createProviderMessageContent(final String name, final String value, final ComponentItem... componentItems) throws AlertException {\n+    public ProviderMessageContent createProviderMessageContent(String name, String value, ComponentItem... componentItems) throws AlertException {\n         ProviderMessageContent.Builder builder = new ProviderMessageContent.Builder()\n-                                                     .applyProvider(\"Black Duck\")\n+                                                     .applyProvider(\"Black Duck\", 1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5MzQ1NQ==", "bodyText": "change to add a config ID.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381393455", "createdAt": "2020-02-19T16:34:20Z", "author": {"login": "psantos1113"}, "path": "alert-database/src/test/java/com/synopsys/integration/alert/database/api/AuditEntryAccessorTest.java", "diffHunk": "@@ -115,57 +115,57 @@ public void setAuditEntryFailureTest() {\n     }\n \n     public ProviderMessageContent createMessageContent() throws AlertException {\n-        final LinkableItem linkableItem1 = new LinkableItem(\"First Linkable Item\", \"Value 1\", \"https://google.com\");\n-        final LinkableItem linkableItem2 = new LinkableItem(\"Second Linkable Item\", \"Value 2\", \"https://google.com\");\n+        LinkableItem linkableItem1 = new LinkableItem(\"First Linkable Item\", \"Value 1\", \"https://google.com\");\n+        LinkableItem linkableItem2 = new LinkableItem(\"Second Linkable Item\", \"Value 2\", \"https://google.com\");\n \n         final String nameKey = \"Same Key\";\n-        final LinkableItem linkableItem3 = new LinkableItem(nameKey, \"Value\", \"https://google.com\");\n-        final LinkableItem linkableItem4 = new LinkableItem(nameKey, \"No Link Value\");\n-        final LinkableItem linkableItem5 = new LinkableItem(nameKey, \"Other Value\", \"https://google.com\");\n+        LinkableItem linkableItem3 = new LinkableItem(nameKey, \"Value\", \"https://google.com\");\n+        LinkableItem linkableItem4 = new LinkableItem(nameKey, \"No Link Value\");\n+        LinkableItem linkableItem5 = new LinkableItem(nameKey, \"Other Value\", \"https://google.com\");\n \n         final String category = \"category\";\n \n-        final ComponentItem componentItem_1 = new ComponentItem.Builder()\n-                                                  .applyCategory(category)\n-                                                  .applyOperation(ItemOperation.ADD)\n-                                                  .applyComponentData(\"component\", \"component_1\")\n-                                                  .applyCategoryItem(\"category item\", \"category_item_1\")\n-                                                  .applyNotificationId(1L)\n-                                                  .applyComponentAttribute(linkableItem1)\n-                                                  .applyComponentAttribute(linkableItem2)\n-                                                  .build();\n-        final ComponentItem componentItem_2 = new ComponentItem.Builder()\n-                                                  .applyCategory(category)\n-                                                  .applyOperation(ItemOperation.UPDATE)\n-                                                  .applyNotificationId(2L)\n-                                                  .applyComponentData(\"component\", \"component_2\")\n-                                                  .applyCategoryItem(\"category item\", \"category_item_2\")\n-                                                  .applyComponentAttribute(linkableItem2)\n-                                                  .build();\n-        final ComponentItem componentItem_3 = new ComponentItem.Builder()\n-                                                  .applyCategory(category)\n-                                                  .applyOperation(ItemOperation.DELETE)\n-                                                  .applyNotificationId(1L)\n-                                                  .applyComponentData(\"component\", \"component_1\")\n-                                                  .applyCategoryItem(\"category item\", \"category_item_1\")\n-                                                  .applyComponentAttribute(linkableItem3)\n-                                                  .applyComponentAttribute(linkableItem4)\n-                                                  .applyComponentAttribute(linkableItem5)\n-                                                  .build();\n-\n-        final LinkableItem subTopic = new LinkableItem(\"Sub Topic\", \"Sub Topic Value\", \"https://google.com\");\n+        ComponentItem componentItem_1 = new ComponentItem.Builder()\n+                                            .applyCategory(category)\n+                                            .applyOperation(ItemOperation.ADD)\n+                                            .applyComponentData(\"component\", \"component_1\")\n+                                            .applyCategoryItem(\"category item\", \"category_item_1\")\n+                                            .applyNotificationId(1L)\n+                                            .applyComponentAttribute(linkableItem1)\n+                                            .applyComponentAttribute(linkableItem2)\n+                                            .build();\n+        ComponentItem componentItem_2 = new ComponentItem.Builder()\n+                                            .applyCategory(category)\n+                                            .applyOperation(ItemOperation.UPDATE)\n+                                            .applyNotificationId(2L)\n+                                            .applyComponentData(\"component\", \"component_2\")\n+                                            .applyCategoryItem(\"category item\", \"category_item_2\")\n+                                            .applyComponentAttribute(linkableItem2)\n+                                            .build();\n+        ComponentItem componentItem_3 = new ComponentItem.Builder()\n+                                            .applyCategory(category)\n+                                            .applyOperation(ItemOperation.DELETE)\n+                                            .applyNotificationId(1L)\n+                                            .applyComponentData(\"component\", \"component_1\")\n+                                            .applyCategoryItem(\"category item\", \"category_item_1\")\n+                                            .applyComponentAttribute(linkableItem3)\n+                                            .applyComponentAttribute(linkableItem4)\n+                                            .applyComponentAttribute(linkableItem5)\n+                                            .build();\n+\n+        LinkableItem subTopic = new LinkableItem(\"Sub Topic\", \"Sub Topic Value\", \"https://google.com\");\n \n         return new ProviderMessageContent.Builder()\n-                   .applyProvider(\"provider\")\n+                   .applyProvider(\"provider\", 1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5NDQ0NQ==", "bodyText": "actual change", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381394445", "createdAt": "2020-02-19T16:35:45Z", "author": {"login": "psantos1113"}, "path": "src/test/java/com/synopsys/integration/alert/channel/util/event/ChannelEventManagerTest.java", "diffHunk": "@@ -25,38 +25,38 @@\n \n     @Test\n     public void testSendEvents() throws Exception {\n-        final AuditUtility auditUtility = Mockito.mock(AuditUtility.class);\n-        final JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n-        final ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n+        AuditUtility auditUtility = Mockito.mock(AuditUtility.class);\n+        JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n+        ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n         Mockito.doNothing().when(jmsTemplate).convertAndSend(Mockito.anyString(), Mockito.any(Object.class));\n-        final ChannelEventManager eventManager = new ChannelEventManager(contentConverter, jmsTemplate, auditUtility);\n+        ChannelEventManager eventManager = new ChannelEventManager(contentConverter, jmsTemplate, auditUtility);\n \n-        final LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n-        final ProviderMessageContent content = new ProviderMessageContent.Builder()\n-                                                   .applyProvider(\"testProvider\")\n+        LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n+        ProviderMessageContent content = new ProviderMessageContent.Builder()\n+                                                   .applyProvider(\"testProvider\", 1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5NDY0OA==", "bodyText": "actual change", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381394648", "createdAt": "2020-02-19T16:36:04Z", "author": {"login": "psantos1113"}, "path": "src/test/java/com/synopsys/integration/alert/channel/util/event/ChannelEventManagerTest.java", "diffHunk": "@@ -25,38 +25,38 @@\n \n     @Test\n     public void testSendEvents() throws Exception {\n-        final AuditUtility auditUtility = Mockito.mock(AuditUtility.class);\n-        final JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n-        final ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n+        AuditUtility auditUtility = Mockito.mock(AuditUtility.class);\n+        JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n+        ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n         Mockito.doNothing().when(jmsTemplate).convertAndSend(Mockito.anyString(), Mockito.any(Object.class));\n-        final ChannelEventManager eventManager = new ChannelEventManager(contentConverter, jmsTemplate, auditUtility);\n+        ChannelEventManager eventManager = new ChannelEventManager(contentConverter, jmsTemplate, auditUtility);\n \n-        final LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n-        final ProviderMessageContent content = new ProviderMessageContent.Builder()\n-                                                   .applyProvider(\"testProvider\")\n+        LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n+        ProviderMessageContent content = new ProviderMessageContent.Builder()\n+                                                   .applyProvider(\"testProvider\", 1L)\n                                                    .applyTopic(\"testTopic\", \"topic\")\n                                                    .applySubTopic(subTopic.getName(), subTopic.getValue())\n                                                    .build();\n-        final FieldAccessor fieldAccessor = new FieldAccessor(Map.of());\n-        final DistributionEvent event = new DistributionEvent(UUID.randomUUID().toString(), \"destination\", RestConstants.formatDate(new Date()), \"provider\", \"FORMAT\",\n+        FieldAccessor fieldAccessor = new FieldAccessor(Map.of());\n+        DistributionEvent event = new DistributionEvent(UUID.randomUUID().toString(), \"destination\", RestConstants.formatDate(new Date()), \"provider\", \"FORMAT\",\n             MessageContentGroup.singleton(content), fieldAccessor);\n         eventManager.sendEvents(List.of(event));\n     }\n \n     @Test\n     public void testNotAbstractChannelEvent() throws Exception {\n-        final AuditUtility auditUtility = Mockito.mock(AuditUtility.class);\n-        final JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n-        final ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n+        AuditUtility auditUtility = Mockito.mock(AuditUtility.class);\n+        JmsTemplate jmsTemplate = Mockito.mock(JmsTemplate.class);\n+        ContentConverter contentConverter = Mockito.mock(ContentConverter.class);\n         Mockito.doNothing().when(jmsTemplate).convertAndSend(Mockito.anyString(), Mockito.any(Object.class));\n-        final ChannelEventManager eventManager = new ChannelEventManager(contentConverter, jmsTemplate, auditUtility);\n-        final LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n-        final ProviderMessageContent content = new ProviderMessageContent.Builder()\n-                                                   .applyProvider(\"testProvider\")\n+        ChannelEventManager eventManager = new ChannelEventManager(contentConverter, jmsTemplate, auditUtility);\n+        LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic\", null);\n+        ProviderMessageContent content = new ProviderMessageContent.Builder()\n+                                                   .applyProvider(\"testProvider\", 1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM5NDgyMA==", "bodyText": "actual change", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381394820", "createdAt": "2020-02-19T16:36:19Z", "author": {"login": "psantos1113"}, "path": "src/test/java/com/synopsys/integration/alert/common/event/ContentEventTest.java", "diffHunk": "@@ -15,26 +15,26 @@\n \n     @Test\n     public void getCreatedAtDateTest() {\n-        final ContentEvent event = new ContentEvent(TOPIC, CREATED_AT, PROVIDER, null, null);\n+        ContentEvent event = new ContentEvent(TOPIC, CREATED_AT, PROVIDER, null, null);\n         assertEquals(CREATED_AT, event.getCreatedAt());\n     }\n \n     @Test\n     public void getProviderTest() {\n-        final ContentEvent event = new ContentEvent(TOPIC, CREATED_AT, PROVIDER, null, null);\n+        ContentEvent event = new ContentEvent(TOPIC, CREATED_AT, PROVIDER, null, null);\n         assertEquals(PROVIDER, event.getProvider());\n     }\n \n     @Test\n     public void getContentTest() throws Exception {\n-        final LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic \", null);\n-        final ProviderMessageContent content = new ProviderMessageContent.Builder()\n-                                                   .applyProvider(\"testProvider\")\n+        LinkableItem subTopic = new LinkableItem(\"subTopic\", \"sub topic \", null);\n+        ProviderMessageContent content = new ProviderMessageContent.Builder()\n+                                                   .applyProvider(\"testProvider\", 1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjU0MTEy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#pullrequestreview-361254112", "createdAt": "2020-02-19T16:44:53Z", "commit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjo0NDo1M1rOFru2hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjo0NDo1M1rOFru2hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQwMDcwOA==", "bodyText": "Since we are passing in the providerConfigId to all of these Builders, would it make more sense to pass in a ProviderMessageContent.Builder() instead with all of the common parts already filled in. Then use that as the base of all the individual ProviderMessageContent.Builder's we create?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381400708", "createdAt": "2020-02-19T16:44:53Z", "author": {"login": "jamesrichard91"}, "path": "src/main/java/com/synopsys/integration/alert/provider/blackduck/collector/builder/policy/PolicyViolationMessageBuilder.java", "diffHunk": "@@ -88,7 +88,7 @@ public String getNotificationType() {\n     }\n \n     @Override\n-    public List<ProviderMessageContent> buildMessageContents(Long notificationId, Date providerCreationDate, ConfigurationJobModel job, RuleViolationNotificationView notificationView,\n+    public List<ProviderMessageContent> buildMessageContents(Long notificationId, Long providerConfigId, Date providerCreationDate, ConfigurationJobModel job, RuleViolationNotificationView notificationView,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjk5Mzg0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#pullrequestreview-361299384", "createdAt": "2020-02-19T17:42:23Z", "commit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzo0MjoyM1rOFrxB8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzo0MjoyM1rOFrxB8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzNjQwMw==", "bodyText": "We should be able to get a real value for this at this point.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381436403", "createdAt": "2020-02-19T17:42:23Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/email/actions/EmailGlobalTestAction.java", "diffHunk": "@@ -76,7 +76,7 @@ public MessageResult testConfig(String configId, String destination, FieldAccess\n                                                      .applyNotificationId(1L);\n \n         ProviderMessageContent.Builder builder = new ProviderMessageContent.Builder()\n-                                                     .applyProvider(\"Test Provider\")\n+                                                     .applyProvider(\"Test Provider\", -1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjk5NjA1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#pullrequestreview-361299605", "createdAt": "2020-02-19T17:42:40Z", "commit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzo0Mjo0MFrOFrxCtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzo0Mjo0MFrOFrxCtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQzNjU5OA==", "bodyText": "We should be able to get a real value for this at this point.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#discussion_r381436598", "createdAt": "2020-02-19T17:42:40Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/jira/common/JiraTestIssueRequestCreator.java", "diffHunk": "@@ -96,7 +96,7 @@ public IssueTrackerRequest createRequest(IssueOperation operation, String messag\n \n     private ProviderMessageContent createTestNotificationContent(ItemOperation operation, String messageId, String customTopic, String customMessage) throws AlertException {\n         return new ProviderMessageContent.Builder()\n-                   .applyProvider(\"Alert\")\n+                   .applyProvider(\"Alert\", -1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "725f670a6797ef65202c2ee1b38585fe4fb96060"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f94569f859f3bdad55d32be4c65e6fab1256402", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/6f94569f859f3bdad55d32be4c65e6fab1256402", "committedDate": "2020-02-19T19:30:13Z", "message": "refactor: Encapsulate method arguments into a class for the builder to use."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dfdece03366a42319c788386a59024fb1175fcd", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/0dfdece03366a42319c788386a59024fb1175fcd", "committedDate": "2020-02-19T20:35:08Z", "message": "refactor: Add the provider config ID to the content key."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6516be6d22a5f54731432b9a73350aa05641c35", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f6516be6d22a5f54731432b9a73350aa05641c35", "committedDate": "2020-02-20T13:25:11Z", "message": "Merge remote-tracking branch 'origin/feat_provider_lifecycle_management' into ps_provider_message_content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90c83f3ff2cba9f4ff4576d288e26ae689e07e41", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/90c83f3ff2cba9f4ff4576d288e26ae689e07e41", "committedDate": "2020-02-20T14:16:57Z", "message": "fix(messages): Fix the message combiner to apply the correct provider parameters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a47255ce77164ca18084ac79d65aaf6b1acbea0", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/7a47255ce77164ca18084ac79d65aaf6b1acbea0", "committedDate": "2020-02-20T14:36:29Z", "message": "Merge remote-tracking branch 'origin/feat_provider_lifecycle_management' into ps_provider_message_content"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTU2NTA4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/860#pullrequestreview-361956508", "createdAt": "2020-02-20T14:42:46Z", "commit": {"oid": "90c83f3ff2cba9f4ff4576d288e26ae689e07e41"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2820, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}