{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTYzNDg1", "number": 1170, "title": "global config validation", "bodyText": "Updating the front end code for Global Configuration to use our new validation format", "createdAt": "2020-09-16T18:13:26Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170", "merged": true, "mergeCommit": {"oid": "b5d87f64b1a72ec0b5d18a609767eb03fe94ff69"}, "closed": true, "closedAt": "2020-09-16T18:54:13Z", "author": {"login": "ChomickiM"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJMv9eAH2gAyNDg4MTYzNDg1OjQ1ZTMzNmEzZGZlNGRhYTY4ZTAwMzMxMzVlZjYyZGRlMjY4OWIzODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJhBy_gH2gAyNDg4MTYzNDg1OjlmYWFmZmY1MWZjYzU2N2Q5YmIxNDQ1YzdhZjQzYjhiZmM1OTZmZDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45e336a3dfe4daa68e0033135ef62dde2689b385", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/45e336a3dfe4daa68e0033135ef62dde2689b385", "committedDate": "2020-09-15T19:13:48Z", "message": "refactor: Initial work for updating actions and reducers for globalConfiguration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f178dd5397b302e1b46e0a2f93dfa99aff5d8ebd", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f178dd5397b302e1b46e0a2f93dfa99aff5d8ebd", "committedDate": "2020-09-16T17:51:15Z", "message": "refactor: Update GlobalConfiguration to use new action responses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/891616a43d2127a8b4c8c5311b49a22cbff125cb", "committedDate": "2020-09-16T17:51:58Z", "message": "Merge branch 'feat_action_response' into mc_action_response_globalConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5OTEwMzM4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#pullrequestreview-489910338", "createdAt": "2020-09-16T18:23:29Z", "commit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5OTE4NDA0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#pullrequestreview-489918404", "createdAt": "2020-09-16T18:32:30Z", "commit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozMjozMFrOHS9fvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozMjozMFrOHS9fvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0Mzk2Ng==", "bodyText": "Do we prefer a multiline method signature?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#discussion_r489643966", "createdAt": "2020-09-16T18:32:30Z", "author": {"login": "bamandel"}, "path": "src/main/js/store/actions/globalConfiguration.js", "diffHunk": "@@ -153,18 +157,39 @@ function clearFieldErrors() {\n     };\n }\n \n-function handleFailureResponse(dispatch, responseData, statusCode) {\n+function validatingConfig() {\n+    return {\n+        type: CONFIG_VALIDATING\n+    };\n+}\n+\n+function validatedConfig() {\n+    return {\n+        type: CONFIG_VALIDATED\n+    };\n+}\n+\n+function configValidationError({ message, errors }) {\n+    return {\n+        type: CONFIG_VALIDATE_ERROR,\n+        message,\n+        errors\n+    };\n+}\n+\n+function createErrorHandler(type, defaultHandler) {\n     const errorHandlers = [];\n-    const configErrorHandler = () => configError(responseData.message, responseData.errors);\n     errorHandlers.push(HTTPErrorUtils.createUnauthorizedHandler(unauthorized));\n-    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(() => configError(responseData.message, null)));\n-    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(configErrorHandler));\n-    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(configErrorHandler));\n-    const handler = HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n-    dispatch(handler(statusCode));\n+    errorHandlers.push(HTTPErrorUtils.createForbiddenHandler(() => configError({ type, message: HTTPErrorUtils.MESSAGES.FORBIDDEN_ACTION })));\n+    errorHandlers.push(HTTPErrorUtils.createBadRequestHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createPreconditionFailedHandler(defaultHandler));\n+    errorHandlers.push(HTTPErrorUtils.createDefaultHandler(defaultHandler));\n+\n+    return HTTPErrorUtils.createHttpErrorHandler(errorHandlers);\n }\n \n-export function refreshConfig(id) {\n+export function\n+refreshConfig(id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5OTE4OTgw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#pullrequestreview-489918980", "createdAt": "2020-09-16T18:33:17Z", "commit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5OTE5Njg4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#pullrequestreview-489919688", "createdAt": "2020-09-16T18:34:24Z", "commit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozNDoyNVrOHS9odA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODozNDoyNVrOHS9odA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTY0NjE5Ng==", "bodyText": "You could remove the else (for the response.status check) and only need to call refresh once:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        dispatch(refreshConfig(newId));\n          \n          \n            \n                                    });\n          \n          \n            \n                            } else {\n          \n          \n            \n                                dispatch(refreshConfig(id));\n          \n          \n            \n                            }\n          \n          \n            \n                                    });\n          \n          \n            \n                            }\n          \n          \n            \n                            dispatch(refreshConfig(id));", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#discussion_r489646196", "createdAt": "2020-09-16T18:34:25Z", "author": {"login": "gkillough"}, "path": "src/main/js/store/actions/globalConfiguration.js", "diffHunk": "@@ -258,17 +304,29 @@ export function updateConfig(config) {\n             request = ConfigRequestBuilder.createNewConfigurationRequest(ConfigRequestBuilder.CONFIG_API_URL, csrfToken, config);\n         }\n         request.then((response) => {\n-            response.json()\n-                .then((responseData) => {\n-                    if (response.ok) {\n-                        const newId = responseData.id;\n-                        const updatedConfig = FieldModelUtilities.updateFieldModelSingleValue(config, 'id', newId);\n-                        dispatch(configUpdated(updatedConfig));\n-                        dispatch(refreshConfig(newId));\n-                    } else {\n-                        handleFailureResponse(dispatch, responseData, response.status);\n-                    }\n-                });\n+            if (response.ok) {\n+                if (response.status === 201) {\n+                    response.json()\n+                        .then((responseData) => {\n+                            const newId = responseData.id;\n+                            const updatedConfig = FieldModelUtilities.updateFieldModelSingleValue(config, 'id', newId);\n+                            dispatch(configUpdated(updatedConfig));\n+                            dispatch(refreshConfig(newId));\n+                        });\n+                } else {\n+                    dispatch(refreshConfig(id));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "originalPosition": 143}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5OTIwNTc2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1170#pullrequestreview-489920576", "createdAt": "2020-09-16T18:35:47Z", "commit": {"oid": "891616a43d2127a8b4c8c5311b49a22cbff125cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9faafff51fcc567d9bb1445c7af43b8bfc596fd9", "author": {"user": {"login": "ChomickiM", "name": "Martin"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9faafff51fcc567d9bb1445c7af43b8bfc596fd9", "committedDate": "2020-09-16T18:51:23Z", "message": "style: Fixing multiline method signature mistake"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3480, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}