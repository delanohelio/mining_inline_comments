{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMzk2NDk0", "number": 993, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxNDo1NFrOD_z8Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxNDo1NFrOD_z8Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjM3OTAzOnYy", "diffSide": "RIGHT", "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxOToxNDo1NFrOGasmIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDowNDo0OFrOGauZ3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA==", "bodyText": "Why does findByEmailAddressAndProviderConfigId(...) return a List? Shouldn't it be an optional?\nI think what we want is a findByEmailAddressInAndProviderConfigId(Collection<String> emailAddresses, Long providerConfigId). (Note the \"In\" in the method name; this will allow us to get all of the relevant relations in a single query).", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430646818", "createdAt": "2020-05-26T19:14:54Z", "author": {"login": "gkillough"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java", "diffHunk": "@@ -163,12 +164,21 @@ private void mapUsersToProjectByEmail(Long providerConfigId, String projectHref,\n         ProviderProjectEntity project = providerProjectRepository.findFirstByHref(projectHref)\n                                             .orElseThrow(() -> new AlertDatabaseConstraintException(\"A project with the following href did not exist: \" + projectHref));\n         Long projectId = project.getId();\n+        List<ProviderUserProjectRelation> userRelationsToRemove = providerUserProjectRelationRepository.findByProviderProjectId(projectId);\n+        List<ProviderUserProjectRelation> userRelationsToAdd = new LinkedList<>();\n         for (String emailAddress : emailAddresses) {\n-            providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId)\n-                .stream()\n-                .map(ProviderUserEntity::getId)\n-                .forEach(userId -> providerUserProjectRelationRepository.save(new ProviderUserProjectRelation(userId, projectId)));\n+            List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22c5cbf4641668f96332e683f381718ccd766134"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2MjEzMw==", "bodyText": "The same email address could be a user in multiple configs so it returns a list per the API.  I will add the in keyword and test it out.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430662133", "createdAt": "2020-05-26T19:39:52Z", "author": {"login": "psantos1113"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java", "diffHunk": "@@ -163,12 +164,21 @@ private void mapUsersToProjectByEmail(Long providerConfigId, String projectHref,\n         ProviderProjectEntity project = providerProjectRepository.findFirstByHref(projectHref)\n                                             .orElseThrow(() -> new AlertDatabaseConstraintException(\"A project with the following href did not exist: \" + projectHref));\n         Long projectId = project.getId();\n+        List<ProviderUserProjectRelation> userRelationsToRemove = providerUserProjectRelationRepository.findByProviderProjectId(projectId);\n+        List<ProviderUserProjectRelation> userRelationsToAdd = new LinkedList<>();\n         for (String emailAddress : emailAddresses) {\n-            providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId)\n-                .stream()\n-                .map(ProviderUserEntity::getId)\n-                .forEach(userId -> providerUserProjectRelationRepository.save(new ProviderUserProjectRelation(userId, projectId)));\n+            List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}, "originalCommit": {"oid": "22c5cbf4641668f96332e683f381718ccd766134"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NTUzMQ==", "bodyText": "Right, but we are filtering the config, so that should be a unique combination, no?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430665531", "createdAt": "2020-05-26T19:44:45Z", "author": {"login": "gkillough"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java", "diffHunk": "@@ -163,12 +164,21 @@ private void mapUsersToProjectByEmail(Long providerConfigId, String projectHref,\n         ProviderProjectEntity project = providerProjectRepository.findFirstByHref(projectHref)\n                                             .orElseThrow(() -> new AlertDatabaseConstraintException(\"A project with the following href did not exist: \" + projectHref));\n         Long projectId = project.getId();\n+        List<ProviderUserProjectRelation> userRelationsToRemove = providerUserProjectRelationRepository.findByProviderProjectId(projectId);\n+        List<ProviderUserProjectRelation> userRelationsToAdd = new LinkedList<>();\n         for (String emailAddress : emailAddresses) {\n-            providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId)\n-                .stream()\n-                .map(ProviderUserEntity::getId)\n-                .forEach(userId -> providerUserProjectRelationRepository.save(new ProviderUserProjectRelation(userId, projectId)));\n+            List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}, "originalCommit": {"oid": "22c5cbf4641668f96332e683f381718ccd766134"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY2NzIyMQ==", "bodyText": "You can also have multiple blackduck users with the same email address.  We do that for testing. The username is unique in Black Duck but not the email address when it is a local user.  That is why we need a list.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430667221", "createdAt": "2020-05-26T19:47:56Z", "author": {"login": "psantos1113"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java", "diffHunk": "@@ -163,12 +164,21 @@ private void mapUsersToProjectByEmail(Long providerConfigId, String projectHref,\n         ProviderProjectEntity project = providerProjectRepository.findFirstByHref(projectHref)\n                                             .orElseThrow(() -> new AlertDatabaseConstraintException(\"A project with the following href did not exist: \" + projectHref));\n         Long projectId = project.getId();\n+        List<ProviderUserProjectRelation> userRelationsToRemove = providerUserProjectRelationRepository.findByProviderProjectId(projectId);\n+        List<ProviderUserProjectRelation> userRelationsToAdd = new LinkedList<>();\n         for (String emailAddress : emailAddresses) {\n-            providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId)\n-                .stream()\n-                .map(ProviderUserEntity::getId)\n-                .forEach(userId -> providerUserProjectRelationRepository.save(new ProviderUserProjectRelation(userId, projectId)));\n+            List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}, "originalCommit": {"oid": "22c5cbf4641668f96332e683f381718ccd766134"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NjQ0NQ==", "bodyText": "Gotcha. Regardless, we should make this a single query.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/993#discussion_r430676445", "createdAt": "2020-05-26T20:04:48Z", "author": {"login": "gkillough"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultProviderDataAccessor.java", "diffHunk": "@@ -163,12 +164,21 @@ private void mapUsersToProjectByEmail(Long providerConfigId, String projectHref,\n         ProviderProjectEntity project = providerProjectRepository.findFirstByHref(projectHref)\n                                             .orElseThrow(() -> new AlertDatabaseConstraintException(\"A project with the following href did not exist: \" + projectHref));\n         Long projectId = project.getId();\n+        List<ProviderUserProjectRelation> userRelationsToRemove = providerUserProjectRelationRepository.findByProviderProjectId(projectId);\n+        List<ProviderUserProjectRelation> userRelationsToAdd = new LinkedList<>();\n         for (String emailAddress : emailAddresses) {\n-            providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId)\n-                .stream()\n-                .map(ProviderUserEntity::getId)\n-                .forEach(userId -> providerUserProjectRelationRepository.save(new ProviderUserProjectRelation(userId, projectId)));\n+            List<ProviderUserEntity> providerUserEntities = providerUserRepository.findByEmailAddressAndProviderConfigId(emailAddress, providerConfigId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA=="}, "originalCommit": {"oid": "22c5cbf4641668f96332e683f381718ccd766134"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2032, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}