{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxODM1Njgz", "number": 1284, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo1OTowMlrOFASzFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo1OTowMlrOFASzFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODUyMzExOnYy", "diffSide": "RIGHT", "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo1OTowMlrOH-geZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowMToxOVrOH-goYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwNTgzMA==", "bodyText": "Would it be beneficial to truncate to a few under 256 then add the new content? Not sure the most efficient way of storing data in our current DB.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1284#discussion_r535305830", "createdAt": "2020-12-03T14:59:02Z", "author": {"login": "bamandel"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java", "diffHunk": "@@ -314,4 +319,12 @@ private int computeTotalCount(BlackDuckPageResponse<?> blackDuckPageResponse, in\n         return blackDuckResponsesTransformer.getSomeMatchingResponses(pagedRequest, responseClass, searchFilter, pagedRequest.getLimit());\n     }\n \n+    private String truncateDescription(@Nullable String originalDescription) {\n+        String trimmedDescription = StringUtils.trimToEmpty(originalDescription);\n+        if (trimmedDescription.length() > PROJECT_DESCRIPTION_MAX_CHARS) {\n+            return StringUtils.truncate(trimmedDescription, PROJECT_DESCRIPTION_MAX_CHARS) + \". . .\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f321c6795d5ffaa32f56cf73d76ef736de3a7fa"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwODM4Nw==", "bodyText": "We're really just trying to minimize UI bloat here whereas before we were writing to the DB, so it needed to be more precise.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1284#discussion_r535308387", "createdAt": "2020-12-03T15:01:19Z", "author": {"login": "gkillough"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java", "diffHunk": "@@ -314,4 +319,12 @@ private int computeTotalCount(BlackDuckPageResponse<?> blackDuckPageResponse, in\n         return blackDuckResponsesTransformer.getSomeMatchingResponses(pagedRequest, responseClass, searchFilter, pagedRequest.getLimit());\n     }\n \n+    private String truncateDescription(@Nullable String originalDescription) {\n+        String trimmedDescription = StringUtils.trimToEmpty(originalDescription);\n+        if (trimmedDescription.length() > PROJECT_DESCRIPTION_MAX_CHARS) {\n+            return StringUtils.truncate(trimmedDescription, PROJECT_DESCRIPTION_MAX_CHARS) + \". . .\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwNTgzMA=="}, "originalCommit": {"oid": "0f321c6795d5ffaa32f56cf73d76ef736de3a7fa"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2231, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}