{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTE4NTk5", "number": 966, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDoxNDoxM1rOD3yOuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNToyMToyOVrOD4F0bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODIxMjQxOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDoxNDoxM1rOGOPRSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDoxNDoxM1rOGOPRSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4MzQzNQ==", "bodyText": "Perhaps a variable to store this value would be better since it's used in multiple locations and needs to be the same.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417583435", "createdAt": "2020-04-29T20:14:13Z", "author": {"login": "bamandel"}, "path": "build.gradle", "diffHunk": "@@ -216,8 +217,8 @@ task runServer(type: com.synopsys.integration.alert.build.RunServerTask, depends\n                                 '--spring.datasource.username=sa',\n                                 '--spring.datasource.password=blackduck',\n                                 '--spring.datasource.driver-class-name=org.testcontainers.jdbc.ContainerDatabaseDriver',\n-                                '--spring.datasource.url=jdbc:tc:postgresql:11.7:///alertdb?TC_INITSCRIPT=file:src/test/resources/testDatabase/init_test_db.sql&TC_TMPFS=/testtmpfs:rw',\n-                                '--spring.datasource.hikari.jdbc-url=jdbc:tc:postgresql:11.7:///alertdb?TC_INITSCRIPT=file:src/test/resources/testDatabase/init_test_db.sql&TC_TMPFS=/testtmpfs:rw',\n+                                '--spring.datasource.url=jdbc:tc:postgresql:12.2:///alertdb?TC_INITSCRIPT=file:src/test/resources/testDatabase/init_test_db.sql&TC_TMPFS=/testtmpfs:rw',\n+                                '--spring.datasource.hikari.jdbc-url=jdbc:tc:postgresql:12.2:///alertdb?TC_INITSCRIPT=file:src/test/resources/testDatabase/init_test_db.sql&TC_TMPFS=/testtmpfs:rw',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODIzMDc0OnYy", "diffSide": "RIGHT", "path": "docker-entrypoint.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDoxOTozOVrOGOPc3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozMjoxMVrOGOnIHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4NjM5OA==", "bodyText": "A brief comment about why this is relevant would help me here personally.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417586398", "createdAt": "2020-04-29T20:19:39Z", "author": {"login": "bamandel"}, "path": "docker-entrypoint.sh", "diffHunk": "@@ -329,12 +332,47 @@ liquibaseChangelockReset() {\n   echo \"End releasing liquibase changeloglock.\"\n }\n \n+validatePostgresConnection() {\n+  # https://stackoverflow.com/a/58784528/6921621", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1NjY1Mw==", "bodyText": "The alert container can start up before the database container.  If we can't connect to the database don't start alert because the alert container needs to read and write data to/from the database.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417956653", "createdAt": "2020-04-30T11:58:29Z", "author": {"login": "psantos1113"}, "path": "docker-entrypoint.sh", "diffHunk": "@@ -329,12 +332,47 @@ liquibaseChangelockReset() {\n   echo \"End releasing liquibase changeloglock.\"\n }\n \n+validatePostgresConnection() {\n+  # https://stackoverflow.com/a/58784528/6921621", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4NjM5OA=="}, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NDMwMQ==", "bodyText": "@psantos1113 I think he means a comment within the file.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417974301", "createdAt": "2020-04-30T12:32:11Z", "author": {"login": "gkillough"}, "path": "docker-entrypoint.sh", "diffHunk": "@@ -329,12 +332,47 @@ liquibaseChangelockReset() {\n   echo \"End releasing liquibase changeloglock.\"\n }\n \n+validatePostgresConnection() {\n+  # https://stackoverflow.com/a/58784528/6921621", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4NjM5OA=="}, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODIzMjEwOnYy", "diffSide": "RIGHT", "path": "docker-entrypoint.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDoxOTo1OFrOGOPdoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjowMDoxNlrOGOmGtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4NjU5Mg==", "bodyText": "Same as above since it's the same link", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417586592", "createdAt": "2020-04-29T20:19:58Z", "author": {"login": "bamandel"}, "path": "docker-entrypoint.sh", "diffHunk": "@@ -329,12 +332,47 @@ liquibaseChangelockReset() {\n   echo \"End releasing liquibase changeloglock.\"\n }\n \n+validatePostgresConnection() {\n+  # https://stackoverflow.com/a/58784528/6921621\n+    echo \"Checking for postgres connectivity: \"\n+    if psql \"${alertDatabaseConfig}\" -c '\\l';\n+    then\n+      echo \"Alert postgres database connection valid.\"\n+    else\n+      echo \"Alert postgres connection cannot be made.\"\n+      sleep 10\n+      exit 1\n+    fi\n+}\n+\n+createPostgresDatabase() {\n+  # https://stackoverflow.com/a/58784528/6921621", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk1NzU1Ng==", "bodyText": "If we have an external database we will check to see if the alert database tables have been created in that database.  If they haven't then create the initial table schema into postgres.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417957556", "createdAt": "2020-04-30T12:00:16Z", "author": {"login": "psantos1113"}, "path": "docker-entrypoint.sh", "diffHunk": "@@ -329,12 +332,47 @@ liquibaseChangelockReset() {\n   echo \"End releasing liquibase changeloglock.\"\n }\n \n+validatePostgresConnection() {\n+  # https://stackoverflow.com/a/58784528/6921621\n+    echo \"Checking for postgres connectivity: \"\n+    if psql \"${alertDatabaseConfig}\" -c '\\l';\n+    then\n+      echo \"Alert postgres database connection valid.\"\n+    else\n+      echo \"Alert postgres connection cannot be made.\"\n+      sleep 10\n+      exit 1\n+    fi\n+}\n+\n+createPostgresDatabase() {\n+  # https://stackoverflow.com/a/58784528/6921621", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4NjU5Mg=="}, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTI3Mzg0OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/values.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDozNzowNlrOGOZWCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoxMTowN1rOGOrIiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0ODQ4OA==", "bodyText": "Instead of alertdb, can we have it as postgres?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417748488", "createdAt": "2020-04-30T04:37:06Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# alertdb - configurations for the alertdb Pod\n+alertdb:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAwNTc4OQ==", "bodyText": "Is there a problem with having this as alertdb? Is the name change just a preference?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418005789", "createdAt": "2020-04-30T13:23:48Z", "author": {"login": "jamesrichard91"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# alertdb - configurations for the alertdb Pod\n+alertdb:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0ODQ4OA=="}, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzOTk0NQ==", "bodyText": "@jamesrichard91 just to match with the container names, so that customers won't get confused.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418039945", "createdAt": "2020-04-30T14:11:07Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# alertdb - configurations for the alertdb Pod\n+alertdb:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0ODQ4OA=="}, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTI4MTE3OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/templates/alertdb.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0MTozN1rOGOZaIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0MTozN1rOGOZaIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0OTUzNw==", "bodyText": "To all the names, can you please remove -alert? This is because already in synopsysctl we are taking care of adding -alert to the release name.\nAnd also the customer who uses Black Duck along with Alert, then need to mandatory add -alert to the release name in order to work. This is because you can't have 2 releases having same names for different apps in the same namespace.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417749537", "createdAt": "2020-04-30T04:41:37Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/templates/alertdb.yaml", "diffHunk": "@@ -0,0 +1,178 @@\n+{{- if not .Values.alertdb.isExternal }}\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: alert\n+    component: alertdb\n+  name: {{ .Release.Name }}-alert-postgres", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTI4MjQ0OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/templates/alertdb.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0MjoyMFrOGOZa1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0MjoyMFrOGOZa1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc0OTcxNw==", "bodyText": "To all the labels, can you please add name to the label?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417749717", "createdAt": "2020-04-30T04:42:20Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/templates/alertdb.yaml", "diffHunk": "@@ -0,0 +1,178 @@\n+{{- if not .Values.alertdb.isExternal }}\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: alert", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTI4NzQ0OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/templates/alertdb.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0NToyMFrOGOZdvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0NToyMFrOGOZdvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc1MDQ2MQ==", "bodyText": "can you please change the -D to point to /var/lib/postgresql/data", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417750461", "createdAt": "2020-04-30T04:45:20Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/templates/alertdb.yaml", "diffHunk": "@@ -0,0 +1,178 @@\n+{{- if not .Values.alertdb.isExternal }}\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  labels:\n+    app: alert\n+    component: alertdb\n+  name: {{ .Release.Name }}-alert-postgres\n+  namespace: {{ .Release.Namespace }}\n+spec:\n+  ports:\n+    - name: port-5432\n+      port: {{ .Values.alertdb.port }}\n+      protocol: TCP\n+      targetPort: {{ .Values.alertdb.port }}\n+  selector:\n+    app: alert\n+    component: alertdb\n+  type: ClusterIP\n+{{- if and .Values.enablePersistentStorage (not .Values.alertdb.persistentVolumeClaimName) }}\n+---\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  labels:\n+    app: alert\n+    component: alertdb\n+    name: {{ .Release.Name }}\n+  name: {{ .Release.Name }}-alert-postgres\n+  namespace: {{ .Release.Namespace }}\n+spec:\n+  {{- if .Values.alertdb.storageClass }}\n+  storageClassName: {{ .Values.alertdb.storageClass }}\n+  {{- else if .Values.storageClass }}\n+  storageClassName: {{ .Values.storageClass }}\n+  {{- end}}\n+  {{ if .Values.alert.volumeName -}}\n+  volumeName: {{ .Values.alertdb.volumeName }}\n+  {{ end -}}\n+  accessModes:\n+    - ReadWriteOnce\n+  resources:\n+    requests:\n+      storage: {{ .Values.alertdb.claimSize }}\n+{{- end }}\n+---\n+\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  labels:\n+    app: alert\n+    component: alertdb\n+  name: {{ .Release.Name }}-alert-postgres\n+  namespace: {{ .Release.Namespace }}\n+spec:\n+  {{- if eq .Values.status \"Running\" }}\n+  replicas: 1\n+  {{- else }}\n+  replicas: 0\n+  {{- end }}\n+  selector:\n+    matchLabels:\n+      app: alert\n+      component: alertdb\n+  strategy:\n+    type: Recreate\n+  template:\n+    metadata:\n+      labels:\n+        app: alert\n+        component: alertdb\n+      annotations:\n+        checksum/alertdb-config: {{ include (print $.Template.BasePath \"/alertdb-config.yaml\") . | sha256sum }}\n+      name: {{ .Release.Name }}-alert-postgres\n+    spec:\n+      containers:\n+      - env:\n+        - name: POSTGRESQL_MAX_CONNECTIONS\n+          value: \"300\"\n+        - name: POSTGRESQL_SHARED_BUFFERS\n+          value: 1024MB\n+        - name: POSTGRESQL_USER\n+          valueFrom:\n+            configMapKeyRef:\n+              key: ALERT_DB_USERNAME\n+              name: {{ .Release.Name }}-alert-db-config\n+        - name: POSTGRESQL_DATABASE\n+          valueFrom:\n+            configMapKeyRef:\n+              key: ALERT_DB_NAME\n+              name: {{ .Release.Name }}-alert-db-config\n+        - name: ALERT_DB_HOST\n+          valueFrom:\n+            configMapKeyRef:\n+              key: ALERT_DB_HOST\n+              name: {{ .Release.Name }}-alert-db-config\n+        - name: ALERT_DB_PORT\n+          valueFrom:\n+            configMapKeyRef:\n+              key: ALERT_DB_PORT\n+              name: {{ .Release.Name }}-alert-db-config\n+        - name: POSTGRESQL_PASSWORD\n+          valueFrom:\n+            secretKeyRef:\n+              key: ALERT_POSTGRES_USER_PASSWORD_FILE\n+              name: {{ .Release.Name }}-alert-db-creds\n+        {{- if .Values.alertdb.registry }}\n+        image: {{ .Values.alertdb.registry }}/postgresql-12-centos7:1\n+        {{- else }}\n+        image: {{ .Values.registry }}/postgresql-12-centos7:1\n+        {{- end}}\n+        imagePullPolicy: IfNotPresent\n+        lifecycle:\n+          preStop:\n+            exec:\n+              command:\n+                - sh\n+                - -c\n+                - LD_LIBRARY_PATH=/opt/rh/rh-postgresql12/root/usr/lib64 /opt/rh/rh-postgresql12/root/usr/bin/pg_ctl -D /var/lib/pgsql/data/userdata -l logfile stop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTI5MDIwOnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/values.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0Njo1MVrOGOZfRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0Njo1MVrOGOZfRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc1MDg1Mw==", "bodyText": "pls change it to persistentVolumeClaimName: . Remove {}.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417750853", "createdAt": "2020-04-30T04:46:51Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# alertdb - configurations for the alertdb Pod\n+alertdb:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-alert-postgres\n+  port: 5432\n+  # NOTE: do not change usernames when using postgres as a container; only configure if using external database\n+  userUserName: sa\n+  userPassword: blackduck\n+  databaseName: alertdb\n+  # pvc related parameters for postgres container\n+  persistentVolumeClaimName: {} # set if you want to create your own PVC (used for migration)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTI5NDA0OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/values.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwNDo0OToxM1rOGOZhcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowNDoyOFrOGOq1_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc1MTQwOQ==", "bodyText": "you won't be having 2 users in an app? one is an admin who can have access at DDL level and another user is having DML level access. The code need to use the DML level access. This is to avoid any SQL injection and also the permissions restricting to the user.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417751409", "createdAt": "2020-04-30T04:49:13Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# alertdb - configurations for the alertdb Pod\n+alertdb:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-alert-postgres\n+  port: 5432\n+  # NOTE: do not change usernames when using postgres as a container; only configure if using external database\n+  userUserName: sa", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAwODY4Ng==", "bodyText": "At the moment no.  We would need to test using the liquibase user and password properties for DDL access and the spring datasource properties for the DML access.  I will file a ticket for this.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418008686", "createdAt": "2020-04-30T13:28:02Z", "author": {"login": "psantos1113"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# alertdb - configurations for the alertdb Pod\n+alertdb:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-alert-postgres\n+  port: 5432\n+  # NOTE: do not change usernames when using postgres as a container; only configure if using external database\n+  userUserName: sa", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc1MTQwOQ=="}, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNTE5Ng==", "bodyText": "Sounds good @psantos1113", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418035196", "createdAt": "2020-04-30T14:04:28Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# alertdb - configurations for the alertdb Pod\n+alertdb:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-alert-postgres\n+  port: 5432\n+  # NOTE: do not change usernames when using postgres as a container; only configure if using external database\n+  userUserName: sa", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzc1MTQwOQ=="}, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDcxMjA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/LastSearchDataMigration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozNToxNFrOGOnOkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozNToxNFrOGOnOkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NTk1Mg==", "bodyText": "We can call this variable blackDuckProviderKey to make it more clear in the initialize() method that this is the only expected config in an upgrade.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417975952", "createdAt": "2020-04-30T12:35:14Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/LastSearchDataMigration.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.workflow.startup.component;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.enumeration.ConfigContextEnum;\n+import com.synopsys.integration.alert.common.exception.AlertDatabaseConstraintException;\n+import com.synopsys.integration.alert.common.persistence.accessor.ConfigurationAccessor;\n+import com.synopsys.integration.alert.common.persistence.accessor.ProviderTaskPropertiesAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n+import com.synopsys.integration.alert.common.persistence.util.FilePersistenceUtil;\n+import com.synopsys.integration.alert.provider.blackduck.BlackDuckProviderKey;\n+import com.synopsys.integration.alert.provider.blackduck.tasks.BlackDuckAccumulator;\n+\n+@Component\n+@Order(55)\n+public class LastSearchDataMigration extends StartupComponent {\n+    private static final Logger logger = LoggerFactory.getLogger(LastSearchDataMigration.class);\n+    private static final String LAST_SEARCH_FILE = \"blackduck-accumulator-task-last-search.txt\";\n+\n+    // Because pg_stat_file requires admin privileges to run, we have to migrate the last search file data in code.\n+    // We don't have admin privileges to postgres when alert starts.\n+\n+    private BlackDuckProviderKey providerKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDcxNTAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/LastSearchDataMigration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozNjowNVrOGOnQWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozNjowNVrOGOnQWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NjQwOQ==", "bodyText": "Let's also deprecate this class for removal in 8.0.0.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r417976409", "createdAt": "2020-04-30T12:36:05Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/workflow/startup/component/LastSearchDataMigration.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.workflow.startup.component;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.stereotype.Component;\n+\n+import com.synopsys.integration.alert.common.enumeration.ConfigContextEnum;\n+import com.synopsys.integration.alert.common.exception.AlertDatabaseConstraintException;\n+import com.synopsys.integration.alert.common.persistence.accessor.ConfigurationAccessor;\n+import com.synopsys.integration.alert.common.persistence.accessor.ProviderTaskPropertiesAccessor;\n+import com.synopsys.integration.alert.common.persistence.model.ConfigurationModel;\n+import com.synopsys.integration.alert.common.persistence.util.FilePersistenceUtil;\n+import com.synopsys.integration.alert.provider.blackduck.BlackDuckProviderKey;\n+import com.synopsys.integration.alert.provider.blackduck.tasks.BlackDuckAccumulator;\n+\n+@Component\n+@Order(55)\n+public class LastSearchDataMigration extends StartupComponent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb70c0e0b05757f5820424b61bc2133292758fee"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTA3MjA1OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/templates/alert.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowMzowMVrOGOqyEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowMzowMVrOGOqyEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNDE5NQ==", "bodyText": "Can you pls add a checksum for Alert DB creds secrets?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418034195", "createdAt": "2020-04-30T14:03:01Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/templates/alert.yaml", "diffHunk": "@@ -32,94 +32,101 @@ spec:\n       name: {{ .Release.Name }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f2862d4eb8db316fc1f6af039870cb340092aca"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTA5MjM2OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/values.yaml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowNzozN1rOGOq-8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNjozMjo0NFrOGOxNPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNzQ4OA==", "bodyText": "Whether it needs to be empty?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418037488", "createdAt": "2020-04-30T14:07:37Z", "author": {"login": "msenmurugan"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# postgres - configurations for the postgres Pod\n+postgres:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-postgres", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f2862d4eb8db316fc1f6af039870cb340092aca"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4ODgxNw==", "bodyText": "If you make it empty then you can use this to require users to set it if isExternal is true\n{{ required \"must provide --set postgres.host=\\\"\\\"\" .Values.postgres.host }}", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418088817", "createdAt": "2020-04-30T15:17:45Z", "author": {"login": "mphammer"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# postgres - configurations for the postgres Pod\n+postgres:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-postgres", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNzQ4OA=="}, "originalCommit": {"oid": "7f2862d4eb8db316fc1f6af039870cb340092aca"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEzMzk4MQ==", "bodyText": "I will add this", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418133981", "createdAt": "2020-04-30T16:24:08Z", "author": {"login": "psantos1113"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# postgres - configurations for the postgres Pod\n+postgres:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-postgres", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNzQ4OA=="}, "originalCommit": {"oid": "7f2862d4eb8db316fc1f6af039870cb340092aca"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEzOTQ1NQ==", "bodyText": "With the required there the postgres.isExternal must be false by default.  Which is to create a postgres container in the deployment.  That will be the default for alert.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418139455", "createdAt": "2020-04-30T16:32:44Z", "author": {"login": "psantos1113"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# postgres - configurations for the postgres Pod\n+postgres:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-postgres", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNzQ4OA=="}, "originalCommit": {"oid": "7f2862d4eb8db316fc1f6af039870cb340092aca"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTQyMTg5OnYy", "diffSide": "RIGHT", "path": "deployment/helm/synopsys-alert/values.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNToyMToyOVrOGOuRkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNjoyNDowMFrOGOw3eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5MTQxMQ==", "bodyText": "Is there a missing value here for the postgresql initialization script?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418091411", "createdAt": "2020-04-30T15:21:29Z", "author": {"login": "mphammer"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# postgres - configurations for the postgres Pod\n+postgres:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-postgres\n+  port: 5432\n+  # NOTE: do not change usernames when using postgres as a container; only configure if using external database\n+  userUserName: sa\n+  userPassword: blackduck\n+  databaseName: alertdb\n+  # pvc related parameters for postgres container\n+  persistentVolumeClaimName: \"\" # set if you want to create your own PVC (used for migration)\n+  claimSize: \"5Gi\" # PVC claim size\n+  storageClass: \"\" # PVC storage class name\n+  volumeName: \"\" # existing persistent volume name backing the PVC\n+  # path to postgresql initialization script", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20df917ea7d06e45edfba37b71580027b3a81a12"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODEzMzg4MQ==", "bodyText": "we don't have one.  I will remove the comment.  The alert container handles the initialization when it starts up.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/966#discussion_r418133881", "createdAt": "2020-04-30T16:24:00Z", "author": {"login": "psantos1113"}, "path": "deployment/helm/synopsys-alert/values.yaml", "diffHunk": "@@ -41,6 +41,29 @@ cfssl:\n   securityContext: {}\n   podSecurityContext: {}\n \n+# postgres - configurations for the postgres Pod\n+postgres:\n+  registry: \"docker.io/centos\" # override the docker registry at container level\n+  isExternal: true # false for running Postgres as a container and true for using External Postgres database\n+  host: \"localhost\" # required only for external postgres, for postgres as a container, it will point to <name>-postgres\n+  port: 5432\n+  # NOTE: do not change usernames when using postgres as a container; only configure if using external database\n+  userUserName: sa\n+  userPassword: blackduck\n+  databaseName: alertdb\n+  # pvc related parameters for postgres container\n+  persistentVolumeClaimName: \"\" # set if you want to create your own PVC (used for migration)\n+  claimSize: \"5Gi\" # PVC claim size\n+  storageClass: \"\" # PVC storage class name\n+  volumeName: \"\" # existing persistent volume name backing the PVC\n+  # path to postgresql initialization script", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5MTQxMQ=="}, "originalCommit": {"oid": "20df917ea7d06e45edfba37b71580027b3a81a12"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1992, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}