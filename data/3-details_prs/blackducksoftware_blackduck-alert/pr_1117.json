{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NjU5NjEz", "number": 1117, "title": "OAuth Implementation", "bodyText": "Changes to implement the OAuth handshake authenticate the application, store the tokens in the database, and execute API calls.\nOne API call is to use the authorization code to get the tokens and save them in the database.  The second projects API call is to load the tokens from the database and issue the request to make sure the tokens were persisted correctly.", "createdAt": "2020-08-18T18:15:35Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117", "merged": true, "mergeCommit": {"oid": "09f352fc36c3a23c959e66155a5e5fc43a3552dc"}, "closed": true, "closedAt": "2020-08-18T19:52:45Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-j11eAH2gAyNDY5NjU5NjEzOjg5YTM4NGQzNDVlYjVmMTg0Y2I5NjU4MDg0NzUzMWYwMzNmNzBjZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAMb2dgH2gAyNDY5NjU5NjEzOjI4N2UyODE0Yjk5YzYwZjc1M2UzMTc4ZTNiMjg4NTA3N2RiODZlODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89a384d345eb5f184cb96580847531f033f70cfc", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/89a384d345eb5f184cb96580847531f033f70cfc", "committedDate": "2020-08-13T17:54:52Z", "message": "feat: Add scopes to the AzureBoardsProperties to get tokens."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c32b36dac7d9740502d185bf58f3e4b52c219cb", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1c32b36dac7d9740502d185bf58f3e4b52c219cb", "committedDate": "2020-08-13T18:13:13Z", "message": "refactor: Create a full redirect URL."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afc055d5212ed98d2f37c15c3a98412ad5e669ba", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/afc055d5212ed98d2f37c15c3a98412ad5e669ba", "committedDate": "2020-08-13T18:16:40Z", "message": "Merge remote-tracking branch 'origin/6.2.0' into ps_oauth_impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87340d816b8d205d8a39d7e7d59ee6557bd30625", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/87340d816b8d205d8a39d7e7d59ee6557bd30625", "committedDate": "2020-08-13T18:49:14Z", "message": "refactor: Fix the scopes to work with the test app and redirect to the UI properly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44dd1a43b498596bb458f3ba5a67997d22560239", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/44dd1a43b498596bb458f3ba5a67997d22560239", "committedDate": "2020-08-13T19:57:38Z", "message": "feat: Request tokens with the authorization code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1de0f965c024d9e531182cceffcbfdce674c4e56", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1de0f965c024d9e531182cceffcbfdce674c4e56", "committedDate": "2020-08-14T17:06:11Z", "message": "feat: Initial implementation to get access token."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "461b53f4ff1283f8cc658136e22b65e1433c71e1", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/461b53f4ff1283f8cc658136e22b65e1433c71e1", "committedDate": "2020-08-14T18:38:19Z", "message": "feat: Add the client secret field to the database and UI."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14b023dd9911eb98e23828dc0dfd982b5e9b3a21", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/14b023dd9911eb98e23828dc0dfd982b5e9b3a21", "committedDate": "2020-08-14T20:04:50Z", "message": "feat: Implement Azure OAuth Code Flow to create correct token responses."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6a9f607575100f0cae2a22703534968ddcefbc6", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/b6a9f607575100f0cae2a22703534968ddcefbc6", "committedDate": "2020-08-14T20:08:25Z", "message": "refactor: Remove the azure specific content from the properties on the token request."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45ba73149cee26d39ed35a18496bd5192c14acda", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/45ba73149cee26d39ed35a18496bd5192c14acda", "committedDate": "2020-08-17T20:02:56Z", "message": "refactor: Clean up the test projects to work."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49e9beb9ba5b4570f995cf6bdeb16cd090db1cba", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/49e9beb9ba5b4570f995cf6bdeb16cd090db1cba", "committedDate": "2020-08-18T15:25:36Z", "message": "fix: Check the database if fields are sensitive during updates."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8353f69fb0ee51b9106cda3c141002dbdd439431", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8353f69fb0ee51b9106cda3c141002dbdd439431", "committedDate": "2020-08-18T15:33:44Z", "message": "Merge remote-tracking branch 'origin/6.2.0' into ps_oauth_impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3a28f1d7df933ae123e0ea94843c92f4d7c1b80", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/e3a28f1d7df933ae123e0ea94843c92f4d7c1b80", "committedDate": "2020-08-18T17:58:22Z", "message": "feat: Add the check if OAuth is authenticated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a1ed88b2b7feccc9f8756979e959d9f15011fd41", "committedDate": "2020-08-18T18:12:37Z", "message": "chore: Update the documentation for the authentication field."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzE0OTkz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469714993", "createdAt": "2020-08-18T18:24:10Z", "commit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyNDoxMFrOHCgvAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyNDoxMFrOHCgvAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5NTUyMA==", "bodyText": "We had a limit in the database of 512.  Increased to 2048 since tokens are larger.  Also made a DB change so the database doesn't care about the string length anymore.  There's no performance gain in Postgres for defining the limit like in other database implementations.  It's a matter of saving space on the disk.  It's still good to validate the size so someone can't insert a string that may cause issues because of it's length.  This is the new allowed size for fields.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#discussion_r472395520", "createdAt": "2020-08-18T18:24:10Z", "author": {"login": "psantos1113"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/ConfigField.java", "diffHunk": "@@ -60,7 +60,7 @@\n  */\n public abstract class ConfigField extends AlertSerializableModel {\n     public static final String REQUIRED_FIELD_MISSING = \"Required field missing\";\n-    public static final int MAX_FIELD_LENGTH = 511;\n+    public static final int MAX_FIELD_LENGTH = 2047;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzE1NDU4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469715458", "createdAt": "2020-08-18T18:24:51Z", "commit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyNDo1MVrOHCgwnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyNDo1MVrOHCgwnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5NTkzMw==", "bodyText": "Can this comment be resolved?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#discussion_r472395933", "createdAt": "2020-08-18T18:24:51Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/descriptor/AzureBoardsGlobalUIConfig.java", "diffHunk": "@@ -61,12 +64,13 @@ public AzureBoardsGlobalUIConfig(EncryptionValidator encryptionValidator) {\n         //        ConfigField azureBoardsUrlField = new URLInputConfigField(AzureBoardsDescriptor.KEY_AZURE_BOARDS_URL, LABEL_AZURE_BOARDS_URL, DESCRIPTION_AZURE_BOARDS_URL);\n         ConfigField organizationName = new TextInputConfigField(AzureBoardsDescriptor.KEY_ORGANIZATION_NAME, LABEL_ORGANIZATION_NAME, DESCRIPTION_ORGANIZATION_NAME).applyRequired(true);\n         ConfigField clientId = new TextInputConfigField(AzureBoardsDescriptor.KEY_CLIENT_ID, LABEL_CLIENT_ID, DESCRIPTION_CLIENT_ID).applyRequired(true);\n+        ConfigField clientSecret = new PasswordConfigField(AzureBoardsDescriptor.KEY_CLIENT_SECRET, LABEL_CLIENT_SECRET, DESCRIPTION_CLIENT_SECRET, encryptionValidator).applyRequired(true);\n         ConfigField configureOAuth = new OAuthEndpointButtonField(AzureBoardsDescriptor.KEY_OAUTH, LABEL_OAUTH, DESCRIPTION_OAUTH, BUTTON_LABEL_OAUTH)\n                                          .applyRequestedDataFieldKey(AzureBoardsDescriptor.KEY_ORGANIZATION_NAME)\n                                          .applyRequestedDataFieldKey(AzureBoardsDescriptor.KEY_CLIENT_ID);\n         // TODO requiredRelatedFields aren't validated when pushing endpoint button fields.\n         //.applyRequiredRelatedField(AzureBoardsDescriptor.KEY_CLIENT_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzE2NTY3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469716567", "createdAt": "2020-08-18T18:26:28Z", "commit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyNjoyOFrOHCg0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyNjoyOFrOHCg0SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5Njg3Mg==", "bodyText": "I think this probably belongs in the library.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#discussion_r472396872", "createdAt": "2020-08-18T18:26:28Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/oauth/AzureAuthorizationCodeFlow.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * blackduck-alert\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.channel.azure.boards.oauth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzE3Njc0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469717674", "createdAt": "2020-08-18T18:28:12Z", "commit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyODoxMlrOHCg3yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODoyODoxMlrOHCg3yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5Nzc2OA==", "bodyText": "We weren't checking if the database defined the field as sensitive we were trusting what was being passed into update.  In the OAuth case the credentials store would create the ConfigurationFieldModels with the create method and the sensitive field would not be set for fields that were sensitive in the database.  Here we look up what the database has defined in order to do the right thing.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#discussion_r472397768", "createdAt": "2020-08-18T18:28:12Z", "author": {"login": "psantos1113"}, "path": "alert-database/src/main/java/com/synopsys/integration/alert/database/api/DefaultConfigurationAccessor.java", "diffHunk": "@@ -331,9 +331,11 @@ public ConfigurationModel updateConfiguration(Long descriptorConfigId, Collectio\n         if (configuredFields != null && !configuredFields.isEmpty()) {\n             List<FieldValueEntity> fieldValuesToSave = new ArrayList<>(configuredFields.size());\n             for (ConfigurationFieldModel configFieldModel : configuredFields) {\n-                Long fieldId = getFieldIdOrThrowException(configFieldModel.getFieldKey());\n+                String fieldKey = configFieldModel.getFieldKey();\n+                Long fieldId = getFieldIdOrThrowException(fieldKey);\n+                boolean isSensitive = isFieldSensitive(fieldKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1ed88b2b7feccc9f8756979e959d9f15011fd41"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/507a93e02eed22b6f04024eba0c4046f7474a6fe", "committedDate": "2020-08-18T18:30:39Z", "message": "chore: Remove todo comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzI4MzU5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469728359", "createdAt": "2020-08-18T18:43:55Z", "commit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0Mzo1NVrOHChXYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0Mzo1NVrOHChXYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwNTg1OQ==", "bodyText": "Why not URI Encode the resulting string? That way we don't have the \"%20\" and other encoding in the mix.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#discussion_r472405859", "createdAt": "2020-08-18T18:43:55Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/web/AzureBoardsCustomEndpoint.java", "diffHunk": "@@ -106,28 +117,36 @@ private FieldAccessor createFieldAccessor(FieldModel fieldModel) {\n                     .ifPresent(fields::putAll);\n             }\n         } catch (AlertDatabaseConstraintException ex) {\n-            logger.error(\"Error creating field acessor for Azure authentication\", ex);\n+            logger.error(\"Error creating field accessor for Azure authentication\", ex);\n         }\n         return new FieldAccessor(fields);\n     }\n \n-    private String createAuthURL(String clientId, String alertServerUrl) {\n+    private boolean isAuthenticated(FieldAccessor fieldAccessor) {\n+        AzureBoardsProperties properties = AzureBoardsProperties.fromFieldAccessor(azureBoardsCredentialDataStoreFactory, azureRedirectUtil.createOAuthRedirectUri(), fieldAccessor);\n+        Proxy proxy = proxyManager.createProxy();\n+        return properties.hasOAuthCredentials(proxy);\n+    }\n+\n+    private String createAuthURL(String clientId) {\n         StringBuilder authUrlBuilder = new StringBuilder(300);\n         authUrlBuilder.append(AzureHttpServiceFactory.DEFAULT_AUTHORIZATION_URL);\n-        authUrlBuilder.append(createQueryString(clientId, alertServerUrl));\n+        authUrlBuilder.append(createQueryString(clientId));\n         return authUrlBuilder.toString();\n     }\n \n-    private String createQueryString(String clientId, String alertServerUrl) {\n-        String authorizationUrl = String.format(\"%s%s\", alertServerUrl, AzureOauthCallbackController.AZURE_OAUTH_CALLBACK_PATH);\n+    private String createQueryString(String clientId) {\n+        String authorizationUrl = azureRedirectUtil.createOAuthRedirectUri();\n         StringBuilder queryBuilder = new StringBuilder(250);\n         queryBuilder.append(\"&client_id=\");\n         queryBuilder.append(clientId);\n         //TODO have an object that stores the request keys and purges them after some amount of time.\n-        //TODO also store a redirect URL if possible\n         queryBuilder.append(\"&state=\");\n         queryBuilder.append(createRequestKey());\n-        queryBuilder.append(\"&scope=vso.work%20vso.code_write\");\n+        queryBuilder.append(\"&scope=\");\n+        queryBuilder.append(AzureOAuthScopes.PROJECTS_READ.getScope());\n+        queryBuilder.append(\"%20\");\n+        queryBuilder.append(AzureOAuthScopes.WORK_FULL.getScope());\n         queryBuilder.append(\"&redirect_uri=\");\n         queryBuilder.append(URLEncoder.encode(authorizationUrl, StandardCharsets.UTF_8));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzI5MjEy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469729212", "createdAt": "2020-08-18T18:45:05Z", "commit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0NTowNVrOHChaCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0NTowNVrOHChaCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwNjUzOA==", "bodyText": "The \"a\" in \"OAuth\" is not capitalized in the class name.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#discussion_r472406538", "createdAt": "2020-08-18T18:45:05Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/channel/azure/boards/web/AzureOauthCallbackController.java", "diffHunk": "@@ -62,46 +71,90 @@\n     private final AzureBoardsCredentialDataStoreFactory azureBoardsCredentialDataStoreFactory;\n     private final ProxyManager proxyManager;\n     private final ConfigurationAccessor configurationAccessor;\n-    private final ConfigurationFieldModelConverter configFieldModelConverter;\n+    private final AzureRedirectUtil azureRedirectUtil;\n \n     @Autowired\n     public AzureOauthCallbackController(ResponseFactory responseFactory, Gson gson, AzureBoardsChannelKey azureBoardsChannelKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzM0NTk4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469734598", "createdAt": "2020-08-18T18:52:52Z", "commit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzM5MTAw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469739100", "createdAt": "2020-08-18T18:59:26Z", "commit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzM5MTY0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1117#pullrequestreview-469739164", "createdAt": "2020-08-18T18:59:32Z", "commit": {"oid": "507a93e02eed22b6f04024eba0c4046f7474a6fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70e5c6d65dd232e2efece3c810682e37069df263", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/70e5c6d65dd232e2efece3c810682e37069df263", "committedDate": "2020-08-18T19:17:41Z", "message": "refactor: Implement PR feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "287e2814b99c60f753e3178e3b2885077db86e89", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/287e2814b99c60f753e3178e3b2885077db86e89", "committedDate": "2020-08-18T19:46:31Z", "message": "refactor: encode the scopes using the URL Encoder."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3403, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}