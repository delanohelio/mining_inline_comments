{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3OTMwOTQy", "number": 1153, "title": "Ps custom endpoint actions", "bodyText": "First pass at creating a result object for actions.  Use Custom Endpoints as a first implementation to change over to return the ActionResult to provide a small enough set of changes to create the initial API for ActionResult objects.\nFixed a few SonarCloud code smells while fixing code smell issues with the implementation of this class.", "createdAt": "2020-09-02T16:09:08Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153", "merged": true, "mergeCommit": {"oid": "8420491decbaceda34d315a975f6df1ae5e8eb71"}, "closed": true, "closedAt": "2020-09-02T18:37:01Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEtJIXAH2gAyNDc3OTMwOTQyOjgxNDYyNGJkZWEwZWY0NzYwNDA4MjcwMTg5ZDNhZGQ1ZDU1MmNlMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFAZ16gH2gAyNDc3OTMwOTQyOjViZGRkYjU0NWMwYjJlMGYxMjBmNWRiZDQ2OTkwYjJhZjlmMjE1ZDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "814624bdea0ef4760408270189d3add5d552ce2b", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/814624bdea0ef4760408270189d3add5d552ce2b", "committedDate": "2020-09-01T20:08:38Z", "message": "feat: Implement action result with custom endpoints."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3def3fc2b284b9dd7e24307533b8627338e606b2", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/3def3fc2b284b9dd7e24307533b8627338e606b2", "committedDate": "2020-09-02T13:55:14Z", "message": "refactor: Fix the endpoints to use ActionResult."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "507990affe2c28be1136ec9be54c5b4874fe11a8", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/507990affe2c28be1136ec9be54c5b4874fe11a8", "committedDate": "2020-09-02T15:04:27Z", "message": "refactor: Remove unused class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/99cd70c8b26341b4fbe7d3be5b702df264cc109b", "committedDate": "2020-09-02T15:32:38Z", "message": "refactor: Clean up some code smells."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDExNzQw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481011740", "createdAt": "2020-09-02T16:49:00Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo0OTowMFrOHL4I9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo0OTowMFrOHL4I9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIxNjE4MA==", "bodyText": "I think these methods could be shortened to a single return line", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#discussion_r482216180", "createdAt": "2020-09-02T16:49:00Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/ActionResult.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.action;\n+\n+import java.util.Optional;\n+\n+import javax.annotation.Nullable;\n+import javax.validation.constraints.NotNull;\n+\n+import org.springframework.http.HttpStatus;\n+\n+public class ActionResult<T> {\n+    private HttpStatus httpStatus;\n+    private String message;\n+    private T content;\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus) {\n+        this(httpStatus, null, null);\n+    }\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus, @Nullable String message) {\n+        this(httpStatus, message, null);\n+    }\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus, @Nullable T content) {\n+        this(httpStatus, null, content);\n+    }\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus, @Nullable String message, @Nullable T content) {\n+        this.httpStatus = httpStatus;\n+        this.content = content;\n+        this.message = message;\n+    }\n+\n+    public boolean isOk() {\n+        if (null == httpStatus) {\n+            return false;\n+        }\n+        return httpStatus.is2xxSuccessful();\n+    }\n+\n+    public boolean isError() {\n+        if (null == httpStatus) {\n+            return false;\n+        }\n+        return httpStatus.isError();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDE4ODQy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481018842", "createdAt": "2020-09-02T16:57:24Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo1NzoyNVrOHL4edw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo1NzoyNVrOHL4edw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIyMTY4Nw==", "bodyText": "Ok implies 200 IMO, I would prefer we call this isSuccessful instead.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#discussion_r482221687", "createdAt": "2020-09-02T16:57:25Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/ActionResult.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.action;\n+\n+import java.util.Optional;\n+\n+import javax.annotation.Nullable;\n+import javax.validation.constraints.NotNull;\n+\n+import org.springframework.http.HttpStatus;\n+\n+public class ActionResult<T> {\n+    private HttpStatus httpStatus;\n+    private String message;\n+    private T content;\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus) {\n+        this(httpStatus, null, null);\n+    }\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus, @Nullable String message) {\n+        this(httpStatus, message, null);\n+    }\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus, @Nullable T content) {\n+        this(httpStatus, null, content);\n+    }\n+\n+    public ActionResult(@NotNull HttpStatus httpStatus, @Nullable String message, @Nullable T content) {\n+        this.httpStatus = httpStatus;\n+        this.content = content;\n+        this.message = message;\n+    }\n+\n+    public boolean isOk() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDIwNDgx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481020481", "createdAt": "2020-09-02T16:59:25Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo1OToyNVrOHL4jcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjo1OToyNVrOHL4jcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIyMjk2Mw==", "bodyText": "Would it be better to give ActionResult a method that would convert itself into a ResponseEntity? At least these basic conversions? Or is that making ActionResult do too much?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#discussion_r482222963", "createdAt": "2020-09-02T16:59:25Z", "author": {"login": "bamandel"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/rest/ResponseFactory.java", "diffHunk": "@@ -167,4 +168,13 @@ public static ResponseStatusException createNotImplementedException(@Nullable St\n         return new ResponseEntity<>(header, HttpStatus.FOUND);\n     }\n \n+    public <T> ResponseEntity<T> createResponseFromAction(ActionResult<T> actionResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDI0MTM5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481024139", "createdAt": "2020-09-02T17:04:03Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzowNDowM1rOHL4u6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzowNDowM1rOHL4u6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIyNTg5Nw==", "bodyText": "If we add the conversion to ActionResult, this could all be handled in a methodin ActionResult.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#discussion_r482225897", "createdAt": "2020-09-02T17:04:03Z", "author": {"login": "bamandel"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/custom/CustomEndpointController.java", "diffHunk": "@@ -66,7 +70,18 @@ public CustomEndpointController(CustomEndpointManager customEndpointManager, Res\n         }\n \n         HttpServletContentWrapper servletContentWrapper = new HttpServletContentWrapper(httpRequest, httpResponse);\n-        return customEndpointManager.performFunction(key, restModel, servletContentWrapper);\n+        ActionResult<?> result = customEndpointManager.performFunction(key, restModel, servletContentWrapper);\n+        if (result.isOk()) {\n+            if (result.hasContent()) {\n+                String content = gson.toJson(result.getContent().get());\n+                return responseFactory.createOkContentResponse(content);\n+            } else {\n+                String message = result.getMessage().orElse(\"\");\n+                return responseFactory.createOkResponse(\"\", message);\n+            }\n+        } else {\n+            String message = result.getMessage().orElse(\"\");\n+            return responseFactory.createResponse(result.getHttpStatus(), null, message);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDI2NDQ4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481026448", "createdAt": "2020-09-02T17:05:39Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDI5NDc0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481029474", "createdAt": "2020-09-02T17:08:00Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzowODowMVrOHL47Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzowODowMVrOHL47Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIyOTAzNQ==", "bodyText": "Why isn't this the content of ActionResult? It seems like it would probably be better to update ValidationResponseModel and make this ActionResult<ValidationResponseModel> instead.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#discussion_r482229035", "createdAt": "2020-09-02T17:08:01Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/action/ValidationActionResult.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * alert-common\n+ *\n+ * Copyright (c) 2020 Synopsys, Inc.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package com.synopsys.integration.alert.common.action;\n+\n+import java.util.List;\n+\n+import org.springframework.http.HttpStatus;\n+\n+import com.synopsys.integration.alert.common.descriptor.config.field.errors.AlertFieldStatus;\n+\n+public class ValidationActionResult extends ActionResult<Void> {\n+    private List<AlertFieldStatus> fieldStatusList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDMzMjgy", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481033282", "createdAt": "2020-09-02T17:13:07Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoxMzowN1rOHL5QGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoxMzowN1rOHL5QGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjIzNDM5Mg==", "bodyText": "This code makes me think we still have a long way to go on this problem. Perhaps this is out of scope for this PR, but I think we should get rid of this class entirely and CustomEndpointManager. Instead, we should find a way to have an abstract controller that handles the explicit typing of responses. Then all of the custom endpoints that exist would not have the extra registration step, and could just extend that controller and implement a single abstract method while strongly typing the controller.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#discussion_r482234392", "createdAt": "2020-09-02T17:13:07Z", "author": {"login": "gkillough"}, "path": "src/main/java/com/synopsys/integration/alert/web/api/custom/CustomEndpointController.java", "diffHunk": "@@ -66,7 +70,18 @@ public CustomEndpointController(CustomEndpointManager customEndpointManager, Res\n         }\n \n         HttpServletContentWrapper servletContentWrapper = new HttpServletContentWrapper(httpRequest, httpResponse);\n-        return customEndpointManager.performFunction(key, restModel, servletContentWrapper);\n+        ActionResult<?> result = customEndpointManager.performFunction(key, restModel, servletContentWrapper);\n+        if (result.isOk()) {\n+            if (result.hasContent()) {\n+                String content = gson.toJson(result.getContent().get());\n+                return responseFactory.createOkContentResponse(content);\n+            } else {\n+                String message = result.getMessage().orElse(\"\");\n+                return responseFactory.createOkResponse(\"\", message);\n+            }\n+        } else {\n+            String message = result.getMessage().orElse(\"\");\n+            return responseFactory.createResponse(result.getHttpStatus(), null, message);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMDQwMDg3", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481040087", "createdAt": "2020-09-02T17:22:01Z", "commit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoyMjowMVrOHL5mtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNzoyMjowMVrOHL5mtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI0MDE4MQ==", "bodyText": "I think OAuthEndpointResponse also tracks a status code. We should either get rid of that, or pass it through to be converted to an HttpStatus.", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#discussion_r482240181", "createdAt": "2020-09-02T17:22:01Z", "author": {"login": "gkillough"}, "path": "alert-common/src/main/java/com/synopsys/integration/alert/common/descriptor/config/field/endpoint/oauth/OAuthCustomEndpoint.java", "diffHunk": "@@ -22,31 +22,25 @@\n  */\n package com.synopsys.integration.alert.common.descriptor.config.field.endpoint.oauth;\n \n-import org.springframework.http.ResponseEntity;\n+import org.springframework.http.HttpStatus;\n \n-import com.google.gson.Gson;\n+import com.synopsys.integration.alert.common.action.ActionResult;\n import com.synopsys.integration.alert.common.action.CustomEndpointManager;\n import com.synopsys.integration.alert.common.descriptor.config.field.endpoint.CustomEndpoint;\n import com.synopsys.integration.alert.common.exception.AlertException;\n import com.synopsys.integration.alert.common.rest.HttpServletContentWrapper;\n-import com.synopsys.integration.alert.common.rest.ResponseFactory;\n import com.synopsys.integration.alert.common.rest.model.FieldModel;\n \n-public abstract class OAuthCustomEndpoint extends CustomEndpoint<String> {\n-    public ResponseFactory responseFactory;\n-    public Gson gson;\n-\n-    public OAuthCustomEndpoint(String fieldKey, CustomEndpointManager customEndpointManager, ResponseFactory responseFactory, Gson gson) throws AlertException {\n+public abstract class OAuthCustomEndpoint extends CustomEndpoint<OAuthEndpointResponse> {\n+    public OAuthCustomEndpoint(String fieldKey, CustomEndpointManager customEndpointManager) throws AlertException {\n         super(fieldKey, customEndpointManager);\n-        this.responseFactory = responseFactory;\n-        this.gson = gson;\n     }\n \n     protected abstract OAuthEndpointResponse createOAuthResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper);\n \n     @Override\n-    public ResponseEntity<String> createResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) {\n+    public ActionResult<OAuthEndpointResponse> createResponse(FieldModel fieldModel, HttpServletContentWrapper servletContentWrapper) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cd70c8b26341b4fbe7d3be5b702df264cc109b"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42590c60b2986c7b2b27caae549671d2290b31e1", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/42590c60b2986c7b2b27caae549671d2290b31e1", "committedDate": "2020-09-02T17:52:00Z", "message": "refactor: Updates based on PR feedback."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f83b1216193684482d7533508e8a409329c4fe10", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/f83b1216193684482d7533508e8a409329c4fe10", "committedDate": "2020-09-02T17:55:59Z", "message": "Merge remote-tracking branch 'origin/feat_action_response' into ps_custom_endpoint_actions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTQwMTQ0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1153#pullrequestreview-481140144", "createdAt": "2020-09-02T18:13:31Z", "commit": {"oid": "f83b1216193684482d7533508e8a409329c4fe10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bdddb545c0b2e0f120f5dbd46990b2af9f215d3", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5bdddb545c0b2e0f120f5dbd46990b2af9f215d3", "committedDate": "2020-09-02T18:35:05Z", "message": "refactor: Implement OAuth endpoint changes."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3450, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}