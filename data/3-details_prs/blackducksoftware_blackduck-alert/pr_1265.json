{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxOTEwMzY4", "number": 1265, "title": "Additional Email Address Paging", "bodyText": "", "createdAt": "2020-11-16T19:55:03Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1265", "merged": true, "mergeCommit": {"oid": "5367490ea226aa8a0cdd465ee1d2b3db940db8cf"}, "closed": true, "closedAt": "2020-11-16T20:29:45Z", "author": {"login": "gkillough"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddFyqVAH2gAyNTIxOTEwMzY4OjVjNmZlZTE2OGIwYzlmOWQzNTdhMDU4OGNiY2JiYjI0M2M4MWI5N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddKur6gFqTUzMTY4MjI1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c6fee168b0c9f9d357a0588cbcbbb243c81b97c", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/5c6fee168b0c9f9d357a0588cbcbbb243c81b97c", "committedDate": "2020-11-16T14:25:54Z", "message": "Feat(Actions): Abstract custom function paged param extraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f6dcc91f01cdf6826de24f3aa02467108e65830", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/8f6dcc91f01cdf6826de24f3aa02467108e65830", "committedDate": "2020-11-16T15:01:07Z", "message": "Feat(Provider): Make Provider Projects custom function extend new paging custom function class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a85bb32a023d9d38fdc5412a45ea1024a9989aeb", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a85bb32a023d9d38fdc5412a45ea1024a9989aeb", "committedDate": "2020-11-16T19:54:21Z", "message": "Feat(Email): Make paged requests to BlackDuck to retrieve users"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjU4ODk0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1265#pullrequestreview-531658894", "createdAt": "2020-11-16T19:57:41Z", "commit": {"oid": "a85bb32a023d9d38fdc5412a45ea1024a9989aeb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTo1Nzo0MVrOH0PGtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTo1Nzo0MVrOH0PGtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUzNTQ3OQ==", "bodyText": "Can we not use UserView here because it doesn't declare the getEmail method?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1265#discussion_r524535479", "createdAt": "2020-11-16T19:57:41Z", "author": {"login": "jamesrichard91"}, "path": "provider/src/main/java/com/synopsys/integration/alert/provider/blackduck/BlackDuckProviderDataAccessor.java", "diffHunk": "@@ -195,26 +205,35 @@ public void updateProjectAndUserData(Long providerConfigId, Map<ProviderProject,\n     private AlertPagedModel<ProviderProject> retrieveProjectsForProvider(ConfigurationModel blackDuckConfigurationModel, int pageNumber, int pageSize, String searchTerm) throws IntegrationException {\n         BlackDuckServicesFactory blackDuckServicesFactory = createBlackDuckServicesFactory(blackDuckConfigurationModel);\n         BlackDuckService blackDuckService = blackDuckServicesFactory.getBlackDuckService();\n-        RequestFactory requestFactory = blackDuckServicesFactory.getRequestFactory();\n-\n-        BlackDuckJsonTransformer blackDuckJsonTransformer = new BlackDuckJsonTransformer(blackDuckServicesFactory.getGson(), blackDuckServicesFactory.getObjectMapper(), blackDuckServicesFactory.getLogger());\n-        BlackDuckResponsesTransformer blackDuckResponsesTransformer = new BlackDuckResponsesTransformer(blackDuckServicesFactory.getBlackDuckHttpClient(), blackDuckJsonTransformer);\n-\n-        int offset = pageNumber * pageSize;\n-        HttpUrl projectsRequestUrl = blackDuckServicesFactory.getBlackDuckHttpClient().getBaseUrl().appendRelativeUrl(ApiDiscovery.PROJECTS_LINK.getPath());\n-        BlackDuckRequestBuilder blackDuckRequestBuilder = requestFactory.createCommonGetRequestBuilder()\n-                                                              .url(projectsRequestUrl);\n \n         Predicate<ProjectView> searchFilter = alwaysTruePredicate -> true;\n         if (StringUtils.isNotBlank(searchTerm)) {\n             searchFilter = projectView -> StringUtils.containsIgnoreCase(projectView.getName(), searchTerm);\n         }\n \n-        PagedRequest pagedRequest = new PagedRequest(blackDuckRequestBuilder, offset, pageSize);\n-        BlackDuckPageResponse<ProjectView> projectViewBlackDuckPageResponse = blackDuckResponsesTransformer.getSomeMatchingResponses(pagedRequest, ProjectView.class, searchFilter, pagedRequest.getLimit());\n+        BlackDuckPageResponse<ProjectView> pageOfViews = retrieveBlackDuckPageResponse(blackDuckServicesFactory, ApiDiscovery.PROJECTS_LINK_RESPONSE, pageNumber, pageSize, searchFilter);\n+\n+        List<ProviderProject> foundProjects = convertBlackDuckProjects(pageOfViews.getItems(), blackDuckService);\n+        int totalPageCount = (pageOfViews.getTotalCount() + (pageSize - 1)) / pageSize;\n+        return new AlertPagedModel<>(totalPageCount, pageNumber, pageSize, foundProjects);\n+    }\n+\n+    private AlertPagedModel<ProviderUserModel> retrieveUsersForProvider(ConfigurationModel blackDuckConfigurationModel, int pageNumber, int pageSize, String searchTerm) throws IntegrationException {\n+        BlackDuckServicesFactory blackDuckServicesFactory = createBlackDuckServicesFactory(blackDuckConfigurationModel);\n \n-        List<ProviderProject> foundProjects = convertBlackDuckProjects(projectViewBlackDuckPageResponse.getItems(), blackDuckService);\n-        int totalPageCount = (projectViewBlackDuckPageResponse.getTotalCount() + (pageSize - 1)) / pageSize;\n+        Predicate<UserView> searchFilter = userView -> StringUtils.isNotBlank(userView.getEmail());\n+        if (StringUtils.isNotBlank(searchTerm)) {\n+            searchFilter = searchFilter.and(userView -> StringUtils.containsIgnoreCase(userView.getEmail(), searchTerm));\n+        }\n+\n+        BlackDuckPageResponse<UserView> pageOfViews = retrieveBlackDuckPageResponse(blackDuckServicesFactory, ApiDiscovery.USERS_LINK_RESPONSE, pageNumber, pageSize, searchFilter);\n+\n+        List<ProviderUserModel> foundProjects = pageOfViews.getItems()\n+                                                    .stream()\n+                                                    .map(UserViewV4::getEmail)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a85bb32a023d9d38fdc5412a45ea1024a9989aeb"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9991b16d39a8c9f8bc521d4695408f3ec8d12bbb", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/9991b16d39a8c9f8bc521d4695408f3ec8d12bbb", "committedDate": "2020-11-16T20:00:28Z", "message": "Fix(Email): Fix typo using wrong BlackDuck view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1040fa4698871bef648150de92c042858fe1037a", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/1040fa4698871bef648150de92c042858fe1037a", "committedDate": "2020-11-16T20:07:02Z", "message": "Chore: Remove left-over comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "438d29b76b43bae79a709f5f47af063b08a3e306", "author": {"user": {"login": "gkillough", "name": "Gavin Killough"}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/438d29b76b43bae79a709f5f47af063b08a3e306", "committedDate": "2020-11-16T20:09:07Z", "message": "Merge branch 'master' into gk_email_address_paging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNjgyMjU1", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/1265#pullrequestreview-531682255", "createdAt": "2020-11-16T20:11:05Z", "commit": {"oid": "1040fa4698871bef648150de92c042858fe1037a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2914, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}