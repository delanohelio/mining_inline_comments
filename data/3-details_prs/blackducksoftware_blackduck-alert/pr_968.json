{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMTg4ODUw", "number": 968, "title": "Ps externaldb doc", "bodyText": "Update the documentation to provide clear instructions when an external database is used in docker swarm.\n\n\nAdd certificate configuration back to the installation README.\n\n\nAdd to the helm chart documentation.", "createdAt": "2020-05-01T16:01:37Z", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968", "merged": true, "mergeCommit": {"oid": "7d0ff5c09e1d1cd832797c4897d5a936036bdf30"}, "closed": true, "closedAt": "2020-05-01T17:49:13Z", "author": {"login": "psantos1113"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccyeWfAH2gAyNDEyMTg4ODUwOjAyZWY2OWNkMjdiM2E2ZDgyNmQxZDc4YThmNzY1YmJjZjdjNmM5NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdE4BlAFqTQwNDI3OTQyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02ef69cd27b3a6d826d1d78a8f765bbcf7c6c950", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/02ef69cd27b3a6d826d1d78a8f765bbcf7c6c950", "committedDate": "2020-04-30T19:44:22Z", "message": "docs: Re-organize on premise versus external db docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4037c291e417b79b16063b06ef57db9b573f279c", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/4037c291e417b79b16063b06ef57db9b573f279c", "committedDate": "2020-04-30T20:21:34Z", "message": "build: Copy the .env files to the right place."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69618b42eaca9a328fc606b895706e3c06105548", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/69618b42eaca9a328fc606b895706e3c06105548", "committedDate": "2020-05-01T15:02:37Z", "message": "doc: Update documentation with certificate details."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5377c51005b028e55a73ffd58d66433d05b1390", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/c5377c51005b028e55a73ffd58d66433d05b1390", "committedDate": "2020-05-01T15:04:08Z", "message": "build: Update the database container version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d22e5ef17852f75d856617e1492df7d7a0c033d0", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/d22e5ef17852f75d856617e1492df7d7a0c033d0", "committedDate": "2020-05-01T15:18:10Z", "message": "build: Update the database container to next snapshot."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49", "committedDate": "2020-05-01T15:58:10Z", "message": "docs: Update the readme for helm with postgres properties."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjQ1NjYx", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404245661", "createdAt": "2020-05-01T16:08:25Z", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowODoyNVrOGPN9VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowODoyNVrOGPN9VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMDUxNw==", "bodyText": "Should there be an _ after <STACK_NAME>?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#discussion_r418610517", "createdAt": "2020-05-01T16:08:25Z", "author": {"login": "gkillough"}, "path": "deployment/docker-swarm/external-db/README.md", "diffHunk": "@@ -0,0 +1,771 @@\n+# Black Duck Alert On Docker Swarm\n+\n+This document describes how to install and upgrade Alert in Docker Swarm.\n+\n+## Table Of Contents\n+- [Requirements](#requirements)\n+- [Installing Alert](#installing-alert)\n+    - [Standalone Installation](#standalone-installation)\n+    - [Installation With Black Duck](#installation-with-black-duck)\n+- [Upgrading Alert](#upgrading-alert)\n+    - [Standalone Upgrade](#standalone-upgrade)\n+    - [Upgrade With Black Duck](#upgrade-with-black-duck)\n+- [Certificates](#certificates)\t\n+    - [Using Custom Certificates](#using-custom-certificates)\t\n+    - [Using Custom Certificate Truststore](#using-custom-certificate-truststore)\n+- [Environment Variables](#environment-variables) \n+    - [Editing the Overrides File](#editing-the-overrides-file)\n+    - [Alert Hostname Variable](#alert-hostname-variable)\n+    - [Alert Database Variables](#alert-database-variables)\n+    - [Alert Logging Level Variable](#alert-logging-level-variable)\n+    - [Email Channel Environment Variables](#email-channel-environment-variables)\n+    - [Environment Variable Classifications](#environment-variable-classifications)\n+- [Advanced Configuration](#advanced-configuration)\n+    - [Changing Server Port](#changing-server-port)\n+    - [Changing Memory Settings](#changing-memory-settings)\n+\n+## Requirements\n+\n+- A Docker host with at least 2GB of allocatable memory.\n+- Administrative access to the docker host machine. \n+- The `alert` and `alertdb` containers must share a volume, and the `PGDATA` variable defined in the `alertdb` container must be set to the volume path, with the path `/postgres/alertdb` appended.\n+- Before installing or upgrading Alert the desired persistent storage volumes must be created for Alert and needs to be either:\n+    - Node locked.     \n+    - Backed by an NFS volume or a similar mechanism.\n+\n+## Installing Alert\n+Deployment files for Docker Swarm are located in the *docker-swarm* directory of the zip file.\n+```\n+blackduck-alert-<VERSION>-deployment.zip file.\n+```\n+- Extract the contents of the ZIP file.\n+- For installing with Black Duck the files are located in the *hub* sub-directory.\n+- For installing Alert standalone the files are located in the *standalone* sub-directory.\n+\n+### Standalone Installation\n+This section will walk through the instructions to install Alert in a standalone fashion.\n+\n+#### Overview\n+\n+1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+3. Create ALERT_DB_USERNAME secret.\n+4. Create ALERT_DB_PASSWORD secret.\n+5. Manage certificates.\n+6. Modify environment variables.\n+7. Deploy the stack.\n+ \n+#### Details \n+This section will walk through each step of the installation procedure.\n+\n+##### 1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+  \n+- Create a docker secret containing the encryption password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the password text.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+    ```\n+    \n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+\n+- Create a docker secret containing the encryption salt for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT <FILE_CONTAINING_SALT>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_SALT> with the path to the file containing the salt text.\n+    \n+    Note: If you created the secret ALERT_ENCRYPTION_SALT in a version of Alert prior to 5.x, please use the same salt value for the ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+                - ALERT_ENCRYPTION_GLOBAL_SALT\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            ALERT_ENCRYPTION_GLOBAL_SALT:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 3. Create ALERT_DB_USERNAME secret.\n+\n+- Create a docker secret containing the database username for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_USERNAME <FILE_CONTAINING_USER_NAME>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_USER_NAME> with the path to the file containing the database username.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following secrets from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+              - ALERT_DB_USERNAME\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+          ALERT_DB_USERNAME:\n+            external: true\n+            name: \"<STACK_NAME>_ALERT_DB_USERNAME\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 4. Create ALERT_DB_PASSWORD secret.\n+\n+- Create a docker secret containing the database password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_PASSWORD <FILE_CONTAINING_PASSWORD>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "originalPosition": 150}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjQ1ODA5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404245809", "createdAt": "2020-05-01T16:08:45Z", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowODo0NVrOGPN91Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowODo0NVrOGPN91Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMDY0NQ==", "bodyText": "Should there be an _ after <STACK_NAME>?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#discussion_r418610645", "createdAt": "2020-05-01T16:08:45Z", "author": {"login": "gkillough"}, "path": "deployment/docker-swarm/external-db/README.md", "diffHunk": "@@ -0,0 +1,771 @@\n+# Black Duck Alert On Docker Swarm\n+\n+This document describes how to install and upgrade Alert in Docker Swarm.\n+\n+## Table Of Contents\n+- [Requirements](#requirements)\n+- [Installing Alert](#installing-alert)\n+    - [Standalone Installation](#standalone-installation)\n+    - [Installation With Black Duck](#installation-with-black-duck)\n+- [Upgrading Alert](#upgrading-alert)\n+    - [Standalone Upgrade](#standalone-upgrade)\n+    - [Upgrade With Black Duck](#upgrade-with-black-duck)\n+- [Certificates](#certificates)\t\n+    - [Using Custom Certificates](#using-custom-certificates)\t\n+    - [Using Custom Certificate Truststore](#using-custom-certificate-truststore)\n+- [Environment Variables](#environment-variables) \n+    - [Editing the Overrides File](#editing-the-overrides-file)\n+    - [Alert Hostname Variable](#alert-hostname-variable)\n+    - [Alert Database Variables](#alert-database-variables)\n+    - [Alert Logging Level Variable](#alert-logging-level-variable)\n+    - [Email Channel Environment Variables](#email-channel-environment-variables)\n+    - [Environment Variable Classifications](#environment-variable-classifications)\n+- [Advanced Configuration](#advanced-configuration)\n+    - [Changing Server Port](#changing-server-port)\n+    - [Changing Memory Settings](#changing-memory-settings)\n+\n+## Requirements\n+\n+- A Docker host with at least 2GB of allocatable memory.\n+- Administrative access to the docker host machine. \n+- The `alert` and `alertdb` containers must share a volume, and the `PGDATA` variable defined in the `alertdb` container must be set to the volume path, with the path `/postgres/alertdb` appended.\n+- Before installing or upgrading Alert the desired persistent storage volumes must be created for Alert and needs to be either:\n+    - Node locked.     \n+    - Backed by an NFS volume or a similar mechanism.\n+\n+## Installing Alert\n+Deployment files for Docker Swarm are located in the *docker-swarm* directory of the zip file.\n+```\n+blackduck-alert-<VERSION>-deployment.zip file.\n+```\n+- Extract the contents of the ZIP file.\n+- For installing with Black Duck the files are located in the *hub* sub-directory.\n+- For installing Alert standalone the files are located in the *standalone* sub-directory.\n+\n+### Standalone Installation\n+This section will walk through the instructions to install Alert in a standalone fashion.\n+\n+#### Overview\n+\n+1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+3. Create ALERT_DB_USERNAME secret.\n+4. Create ALERT_DB_PASSWORD secret.\n+5. Manage certificates.\n+6. Modify environment variables.\n+7. Deploy the stack.\n+ \n+#### Details \n+This section will walk through each step of the installation procedure.\n+\n+##### 1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+  \n+- Create a docker secret containing the encryption password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the password text.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+    ```\n+    \n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+\n+- Create a docker secret containing the encryption salt for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT <FILE_CONTAINING_SALT>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_SALT> with the path to the file containing the salt text.\n+    \n+    Note: If you created the secret ALERT_ENCRYPTION_SALT in a version of Alert prior to 5.x, please use the same salt value for the ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+                - ALERT_ENCRYPTION_GLOBAL_SALT\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            ALERT_ENCRYPTION_GLOBAL_SALT:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 3. Create ALERT_DB_USERNAME secret.\n+\n+- Create a docker secret containing the database username for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_USERNAME <FILE_CONTAINING_USER_NAME>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjQ2NDY0", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404246464", "createdAt": "2020-05-01T16:09:49Z", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowOTo1MFrOGPN_7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowOTo1MFrOGPN_7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMTE4Mg==", "bodyText": "Should there be an _ after <STACK_NAME>?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#discussion_r418611182", "createdAt": "2020-05-01T16:09:50Z", "author": {"login": "gkillough"}, "path": "deployment/docker-swarm/external-db/README.md", "diffHunk": "@@ -0,0 +1,771 @@\n+# Black Duck Alert On Docker Swarm\n+\n+This document describes how to install and upgrade Alert in Docker Swarm.\n+\n+## Table Of Contents\n+- [Requirements](#requirements)\n+- [Installing Alert](#installing-alert)\n+    - [Standalone Installation](#standalone-installation)\n+    - [Installation With Black Duck](#installation-with-black-duck)\n+- [Upgrading Alert](#upgrading-alert)\n+    - [Standalone Upgrade](#standalone-upgrade)\n+    - [Upgrade With Black Duck](#upgrade-with-black-duck)\n+- [Certificates](#certificates)\t\n+    - [Using Custom Certificates](#using-custom-certificates)\t\n+    - [Using Custom Certificate Truststore](#using-custom-certificate-truststore)\n+- [Environment Variables](#environment-variables) \n+    - [Editing the Overrides File](#editing-the-overrides-file)\n+    - [Alert Hostname Variable](#alert-hostname-variable)\n+    - [Alert Database Variables](#alert-database-variables)\n+    - [Alert Logging Level Variable](#alert-logging-level-variable)\n+    - [Email Channel Environment Variables](#email-channel-environment-variables)\n+    - [Environment Variable Classifications](#environment-variable-classifications)\n+- [Advanced Configuration](#advanced-configuration)\n+    - [Changing Server Port](#changing-server-port)\n+    - [Changing Memory Settings](#changing-memory-settings)\n+\n+## Requirements\n+\n+- A Docker host with at least 2GB of allocatable memory.\n+- Administrative access to the docker host machine. \n+- The `alert` and `alertdb` containers must share a volume, and the `PGDATA` variable defined in the `alertdb` container must be set to the volume path, with the path `/postgres/alertdb` appended.\n+- Before installing or upgrading Alert the desired persistent storage volumes must be created for Alert and needs to be either:\n+    - Node locked.     \n+    - Backed by an NFS volume or a similar mechanism.\n+\n+## Installing Alert\n+Deployment files for Docker Swarm are located in the *docker-swarm* directory of the zip file.\n+```\n+blackduck-alert-<VERSION>-deployment.zip file.\n+```\n+- Extract the contents of the ZIP file.\n+- For installing with Black Duck the files are located in the *hub* sub-directory.\n+- For installing Alert standalone the files are located in the *standalone* sub-directory.\n+\n+### Standalone Installation\n+This section will walk through the instructions to install Alert in a standalone fashion.\n+\n+#### Overview\n+\n+1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+3. Create ALERT_DB_USERNAME secret.\n+4. Create ALERT_DB_PASSWORD secret.\n+5. Manage certificates.\n+6. Modify environment variables.\n+7. Deploy the stack.\n+ \n+#### Details \n+This section will walk through each step of the installation procedure.\n+\n+##### 1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+  \n+- Create a docker secret containing the encryption password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the password text.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+    ```\n+    \n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+\n+- Create a docker secret containing the encryption salt for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT <FILE_CONTAINING_SALT>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_SALT> with the path to the file containing the salt text.\n+    \n+    Note: If you created the secret ALERT_ENCRYPTION_SALT in a version of Alert prior to 5.x, please use the same salt value for the ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+                - ALERT_ENCRYPTION_GLOBAL_SALT\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            ALERT_ENCRYPTION_GLOBAL_SALT:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 3. Create ALERT_DB_USERNAME secret.\n+\n+- Create a docker secret containing the database username for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_USERNAME <FILE_CONTAINING_USER_NAME>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_USER_NAME> with the path to the file containing the database username.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following secrets from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+              - ALERT_DB_USERNAME\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+          ALERT_DB_USERNAME:\n+            external: true\n+            name: \"<STACK_NAME>_ALERT_DB_USERNAME\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 4. Create ALERT_DB_PASSWORD secret.\n+\n+- Create a docker secret containing the database password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the database password.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following secrets from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+              - ALERT_DB_PASSWORD\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+          ALERT_DB_PASSWORD:\n+            external: true\n+            name: \"<STACK_NAME>_ALERT_DB_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 5. Manage certificates.\n+This is an optional step. Confirm if custom certificates or certificate store need to be used.\t\n+- Using custom certificate for Alert web server. See [Using Custom Certificates](#using-custom-certificates)\t\n+- Using custom trust store to trust certificates of external servers. See [Using Custom Certificate TrustStore](#using-custom-certificate-truststore)\n+\n+#### 6. Modify environment variables.\n+Please see [Environment Variables](#environment-variables)\n+- Set the required environment variable ALERT_HOSTNAME. See [Alert Hostname Variable](#alert-hostname-variable)\n+- Set the required environment variables for database connectivity. See [Alert Database Variables](#alert-database-variables)\n+- Set any other optional environment variables as needed.\n+\n+##### 7. Deploy the stack.\n+- Execute the command:\n+    ```bash\n+    docker stack deploy -c <PATH>/docker-swarm/external-db/standalone/docker-compose.yml -c <PATH>/docker-swarm/docker-compose.local-overrides.yml <STACK_NAME>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <PATH> with the directory path to the Alert installation files. \n+  \n+### Installation with Black Duck\n+This section will walk through the instructions to install Alert in a deployment with Black Duck.\n+\n+Overview:\n+1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+3. Create ALERT_DB_USERNAME secret.\n+4. Create ALERT_DB_PASSWORD secret.\n+5. Manage certificates.\n+6. Modify environment variables.\n+7. Install Black Duck. Follow the documented installation procedure for Black Duck.\n+8. Deploy the stack.\n+\n+#### Details \n+This section will walk through each step of the installation procedure.\n+\n+**Please Note:** \n+If you are upgrading Alert from a 4.x version to 5.x, please use the docker-compose.local-overrides.yml bundled with Alert.\n+Please remove any Alert configuration from the docker-compose.local-overrides.yml file bundled with Black Duck.\n+\n+\n+##### 1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+  \n+- Create a docker secret containing the encryption password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the password text.\n+\n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+\n+- Create a docker secret containing the encryption salt for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT <FILE_CONTAINING_SALT>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_SALT> with the path to the file containing the salt text.\n+    \n+    Note: If you created the secret ALERT_ENCRYPTION_SALT in a version of Alert prior to 5.x, please use the same salt value for the ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file to the alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+                - ALERT_ENCRYPTION_GLOBAL_SALT\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            ALERT_ENCRYPTION_GLOBAL_SALT:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 3. Create ALERT_DB_USERNAME secret.\n+\n+- Create a docker secret containing the database username for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_USERNAME <FILE_CONTAINING_USER_NAME>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "originalPosition": 274}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjQ2NzM5", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404246739", "createdAt": "2020-05-01T16:10:16Z", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjoxMDoxNlrOGPOAzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjoxMDoxNlrOGPOAzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMTQwNA==", "bodyText": "Should there be an _ after <STACK_NAME>?", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#discussion_r418611404", "createdAt": "2020-05-01T16:10:16Z", "author": {"login": "gkillough"}, "path": "deployment/docker-swarm/external-db/README.md", "diffHunk": "@@ -0,0 +1,771 @@\n+# Black Duck Alert On Docker Swarm\n+\n+This document describes how to install and upgrade Alert in Docker Swarm.\n+\n+## Table Of Contents\n+- [Requirements](#requirements)\n+- [Installing Alert](#installing-alert)\n+    - [Standalone Installation](#standalone-installation)\n+    - [Installation With Black Duck](#installation-with-black-duck)\n+- [Upgrading Alert](#upgrading-alert)\n+    - [Standalone Upgrade](#standalone-upgrade)\n+    - [Upgrade With Black Duck](#upgrade-with-black-duck)\n+- [Certificates](#certificates)\t\n+    - [Using Custom Certificates](#using-custom-certificates)\t\n+    - [Using Custom Certificate Truststore](#using-custom-certificate-truststore)\n+- [Environment Variables](#environment-variables) \n+    - [Editing the Overrides File](#editing-the-overrides-file)\n+    - [Alert Hostname Variable](#alert-hostname-variable)\n+    - [Alert Database Variables](#alert-database-variables)\n+    - [Alert Logging Level Variable](#alert-logging-level-variable)\n+    - [Email Channel Environment Variables](#email-channel-environment-variables)\n+    - [Environment Variable Classifications](#environment-variable-classifications)\n+- [Advanced Configuration](#advanced-configuration)\n+    - [Changing Server Port](#changing-server-port)\n+    - [Changing Memory Settings](#changing-memory-settings)\n+\n+## Requirements\n+\n+- A Docker host with at least 2GB of allocatable memory.\n+- Administrative access to the docker host machine. \n+- The `alert` and `alertdb` containers must share a volume, and the `PGDATA` variable defined in the `alertdb` container must be set to the volume path, with the path `/postgres/alertdb` appended.\n+- Before installing or upgrading Alert the desired persistent storage volumes must be created for Alert and needs to be either:\n+    - Node locked.     \n+    - Backed by an NFS volume or a similar mechanism.\n+\n+## Installing Alert\n+Deployment files for Docker Swarm are located in the *docker-swarm* directory of the zip file.\n+```\n+blackduck-alert-<VERSION>-deployment.zip file.\n+```\n+- Extract the contents of the ZIP file.\n+- For installing with Black Duck the files are located in the *hub* sub-directory.\n+- For installing Alert standalone the files are located in the *standalone* sub-directory.\n+\n+### Standalone Installation\n+This section will walk through the instructions to install Alert in a standalone fashion.\n+\n+#### Overview\n+\n+1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+3. Create ALERT_DB_USERNAME secret.\n+4. Create ALERT_DB_PASSWORD secret.\n+5. Manage certificates.\n+6. Modify environment variables.\n+7. Deploy the stack.\n+ \n+#### Details \n+This section will walk through each step of the installation procedure.\n+\n+##### 1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+  \n+- Create a docker secret containing the encryption password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the password text.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+    ```\n+    \n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+\n+- Create a docker secret containing the encryption salt for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT <FILE_CONTAINING_SALT>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_SALT> with the path to the file containing the salt text.\n+    \n+    Note: If you created the secret ALERT_ENCRYPTION_SALT in a version of Alert prior to 5.x, please use the same salt value for the ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+                - ALERT_ENCRYPTION_GLOBAL_SALT\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            ALERT_ENCRYPTION_GLOBAL_SALT:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 3. Create ALERT_DB_USERNAME secret.\n+\n+- Create a docker secret containing the database username for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_USERNAME <FILE_CONTAINING_USER_NAME>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_USER_NAME> with the path to the file containing the database username.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following secrets from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+              - ALERT_DB_USERNAME\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+          ALERT_DB_USERNAME:\n+            external: true\n+            name: \"<STACK_NAME>_ALERT_DB_USERNAME\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 4. Create ALERT_DB_PASSWORD secret.\n+\n+- Create a docker secret containing the database password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the database password.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following secrets from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+              - ALERT_DB_PASSWORD\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+          ALERT_DB_PASSWORD:\n+            external: true\n+            name: \"<STACK_NAME>_ALERT_DB_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 5. Manage certificates.\n+This is an optional step. Confirm if custom certificates or certificate store need to be used.\t\n+- Using custom certificate for Alert web server. See [Using Custom Certificates](#using-custom-certificates)\t\n+- Using custom trust store to trust certificates of external servers. See [Using Custom Certificate TrustStore](#using-custom-certificate-truststore)\n+\n+#### 6. Modify environment variables.\n+Please see [Environment Variables](#environment-variables)\n+- Set the required environment variable ALERT_HOSTNAME. See [Alert Hostname Variable](#alert-hostname-variable)\n+- Set the required environment variables for database connectivity. See [Alert Database Variables](#alert-database-variables)\n+- Set any other optional environment variables as needed.\n+\n+##### 7. Deploy the stack.\n+- Execute the command:\n+    ```bash\n+    docker stack deploy -c <PATH>/docker-swarm/external-db/standalone/docker-compose.yml -c <PATH>/docker-swarm/docker-compose.local-overrides.yml <STACK_NAME>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <PATH> with the directory path to the Alert installation files. \n+  \n+### Installation with Black Duck\n+This section will walk through the instructions to install Alert in a deployment with Black Duck.\n+\n+Overview:\n+1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+3. Create ALERT_DB_USERNAME secret.\n+4. Create ALERT_DB_PASSWORD secret.\n+5. Manage certificates.\n+6. Modify environment variables.\n+7. Install Black Duck. Follow the documented installation procedure for Black Duck.\n+8. Deploy the stack.\n+\n+#### Details \n+This section will walk through each step of the installation procedure.\n+\n+**Please Note:** \n+If you are upgrading Alert from a 4.x version to 5.x, please use the docker-compose.local-overrides.yml bundled with Alert.\n+Please remove any Alert configuration from the docker-compose.local-overrides.yml file bundled with Black Duck.\n+\n+\n+##### 1. Create ALERT_ENCRYPTION_PASSWORD secret.\n+  \n+- Create a docker secret containing the encryption password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_PASSWORD <FILE_CONTAINING_PASSWORD>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_PASSWORD> with the path to the file containing the password text.\n+\n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 2. Create ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+\n+- Create a docker secret containing the encryption salt for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT <FILE_CONTAINING_SALT>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_SALT> with the path to the file containing the salt text.\n+    \n+    Note: If you created the secret ALERT_ENCRYPTION_SALT in a version of Alert prior to 5.x, please use the same salt value for the ALERT_ENCRYPTION_GLOBAL_SALT secret.\n+    \n+- Make sure the alert service is uncommented from the docker-compose.local-overrides.yml file.\n+- Uncomment the following from the docker-compose.local-overrides.yml file to the alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+                - ALERT_ENCRYPTION_PASSWORD\n+                - ALERT_ENCRYPTION_GLOBAL_SALT\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+            ALERT_ENCRYPTION_PASSWORD:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_PASSWORD\"\n+            ALERT_ENCRYPTION_GLOBAL_SALT:\n+              external: true\n+              name: \"<STACK_NAME>_ALERT_ENCRYPTION_GLOBAL_SALT\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 3. Create ALERT_DB_USERNAME secret.\n+\n+- Create a docker secret containing the database username for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_USERNAME <FILE_CONTAINING_USER_NAME>\n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+    - Replace <FILE_CONTAINING_USER_NAME> with the path to the file containing the database username.\n+    \n+- Make sure the alertdb service is uncommented from the docker-compose.local-overrides.yml file.\n+- Comment the following environment variables from the docker-compose.local-overrides.yml file.\n+    From:\n+    ```yaml\n+        alertdb:\n+          environment:\n+            - POSTGRES_USER=sa\n+    ```\n+    To:\n+    ```yaml\n+        alertdb:\n+          environment:\n+           # - POSTGRES_USER=sa\n+    ```\n+- Uncomment the following environment variables from the docker-compose.local-overrides.yml file alertdb service section.\n+    ```yaml\n+        alertdb:\n+          environment:\n+            - POSTGRES_USER_FILE=/run/secrets/ALERT_DB_USERNAME\n+    ```\n+- Uncomment the following secrets from the docker-compose.local-overrides.yml file alertdb service section.\n+    ```yaml\n+        alertdb:\n+            secrets:\n+              - ALERT_DB_USERNAME\n+    ```\n+- Uncomment the following secrets from the docker-compose.local-overrides.yml file alert service section.\n+    ```yaml\n+        alert:\n+            secrets:\n+              - ALERT_DB_USERNAME\n+    ```\n+- Uncomment the following from the secrets section of the docker-compose.local-overrides.yml file.\n+    ```yaml\n+        secrets:\n+          ALERT_DB_USERNAME:\n+            external: true\n+            name: \"<STACK_NAME>_ALERT_DB_USERNAME\"\n+            \n+    ```\n+    - Replace <STACK_NAME> with the name of the stack to be used in the deployment.\n+\n+##### 4. Create ALERT_DB_PASSWORD secret.\n+\n+- Create a docker secret containing the database password for Alert.\n+    ```bash\n+    docker secret create <STACK_NAME>ALERT_DB_PASSWORD <FILE_CONTAINING_PASSWORD>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "originalPosition": 325}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjQ3ODcz", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404247873", "createdAt": "2020-05-01T16:12:20Z", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjcxMTg4", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404271188", "createdAt": "2020-05-01T16:55:25Z", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "951b20678cc888aaf4b0b8198b7977368e6026c4", "author": {"user": {"login": "psantos1113", "name": null}}, "url": "https://github.com/blackducksoftware/blackduck-alert/commit/951b20678cc888aaf4b0b8198b7977368e6026c4", "committedDate": "2020-05-01T16:59:39Z", "message": "docs: Add missing '_' character in secrets."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0Mjc4MjY2", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404278266", "createdAt": "2020-05-01T17:08:21Z", "commit": {"oid": "951b20678cc888aaf4b0b8198b7977368e6026c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0Mjc5NDIw", "url": "https://github.com/blackducksoftware/blackduck-alert/pull/968#pullrequestreview-404279420", "createdAt": "2020-05-01T17:10:42Z", "commit": {"oid": "a9c8946b5f9dcbf9ae4b9a6aa412bf84f7cffd49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2714, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}