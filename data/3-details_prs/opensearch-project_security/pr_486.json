{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODI0Nzcz", "number": 486, "title": "Preventing users from mapping to hidden/reserved opendistro_security_\u2026", "bodyText": "\u2026roles\nIssue #, if available:\nDescription of changes:\nCurrently an authorized user can create a new user and attach a reserved role using a PUT request to the /_opendistro/_security/api/user/(new_username_here) endpoint.\nEg:\nPUT _opendistro/_security/api/internalusers/kirkuser\n{\n  \"password\": \"kirkpass\",\n  \"backend_roles\": [\"captains\", \"starfleet\"],\n  \"opendistro_security_roles\": [\"restricted_role\"]\n}\n\nThis change will forbid users from associating user with restricted opendistro_security_roles\nTests:\nUpdated unit tests\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-06-02T20:55:04Z", "url": "https://github.com/opensearch-project/security/pull/486", "merged": true, "mergeCommit": {"oid": "979d1a4a71db9f50a19428c3cd31bcc6a26a209c"}, "closed": true, "closedAt": "2020-06-19T18:25:02Z", "author": {"login": "debjanibnrj"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnZn7XAH2gAyNDI2ODI0NzczOmQxYmRkOWUxOWUyYTkxMTVhOTkzNWM0ZDYzNmI4NmE3NmI3MzUxZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs3TAGgFqTQzNDI2ODE3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d1bdd9e19e2a9115a9935c4d636b86a76b7351d6", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/d1bdd9e19e2a9115a9935c4d636b86a76b7351d6", "committedDate": "2020-06-02T19:00:22Z", "message": "Preventing users from mapping to hidden/reserved opendistro_security_roles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "committedDate": "2020-06-03T07:34:07Z", "message": "Resolving test failures"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/6c46f4c02d58848b6da9c9be1bad7bdf9fffebb4", "committedDate": "2020-06-03T07:34:07Z", "message": "Resolving test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/7054096d099f0245a76e86b9e54e4c644b30b773", "committedDate": "2020-06-11T02:04:07Z", "message": "Removing hidden and reserved roles for existing users"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/7054096d099f0245a76e86b9e54e4c644b30b773", "committedDate": "2020-06-11T02:04:07Z", "message": "Removing hidden and reserved roles for existing users"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MDM3ODMy", "url": "https://github.com/opensearch-project/security/pull/486#pullrequestreview-429037832", "createdAt": "2020-06-11T15:37:47Z", "commit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNTozNzo0N1rOGijHNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjoxNTozM1rOGik1yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4MDA1Mg==", "bodyText": "nit: move load() inside if (opendistroSecurityRoles != null)", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438880052", "createdAt": "2020-06-11T15:37:47Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+\n+        // Don't allow user to add reserved or hidden role\n+        final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4MDU0OA==", "bodyText": "nit: avoid extra empty line", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438880548", "createdAt": "2020-06-11T15:38:17Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NDI4OA==", "bodyText": "read-only->reserved?", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438884288", "createdAt": "2020-06-11T15:42:40Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+\n+        // Don't allow user to add reserved or hidden role\n+        final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);\n+        final List<String> opendistroSecurityRoles = securityJsonNode.get(\"opendistro_security_roles\").asList();\n+        if (opendistroSecurityRoles != null) {\n+            for (final String role: opendistroSecurityRoles) {\n+\n+                if (isHidden(rolesConfiguration, role)) {\n+                    notFound(channel, \"Role '\"+role+\"' is not found.\");\n+                    return;\n+                }\n+\n+                if (isReserved(rolesConfiguration, role)) {\n+                    forbidden(channel, \"Role '\" + role + \"' is read-only.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NTAyNA==", "bodyText": "private final internalUsersConfiguration", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438885024", "createdAt": "2020-06-11T15:43:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -244,45 +245,54 @@ public void unregisterDCFListener(Object listener) {\n     \n     private static class InternalUsersModelV7 extends InternalUsersModel {\n         \n-        SecurityDynamicConfiguration<InternalUserV7> configuration;\n+        SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NTI4MA==", "bodyText": "private final rolesConfiguration", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438885280", "createdAt": "2020-06-11T15:44:02Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -244,45 +245,54 @@ public void unregisterDCFListener(Object listener) {\n     \n     private static class InternalUsersModelV7 extends InternalUsersModel {\n         \n-        SecurityDynamicConfiguration<InternalUserV7> configuration;\n+        SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration;\n+\n+        SecurityDynamicConfiguration<RoleV7> roleV7SecurityDynamicConfiguration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg5MjA1NQ==", "bodyText": "!roleV7SecurityDynamicConfiguration.getCEntry(role).isHidden() && !roleV7SecurityDynamicConfiguration.getCEntry(role).isReserved()\nnit: introduce private boolean isHiddenOrReserved(String role) helper method\nadd unit tests\nnit: indentation does not look right", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438892055", "createdAt": "2020-06-11T15:51:33Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -244,45 +245,54 @@ public void unregisterDCFListener(Object listener) {\n     \n     private static class InternalUsersModelV7 extends InternalUsersModel {\n         \n-        SecurityDynamicConfiguration<InternalUserV7> configuration;\n+        SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration;\n+\n+        SecurityDynamicConfiguration<RoleV7> roleV7SecurityDynamicConfiguration;\n         \n-        public InternalUsersModelV7(SecurityDynamicConfiguration<InternalUserV7> configuration) {\n+        public InternalUsersModelV7(SecurityDynamicConfiguration<InternalUserV7> internalUserV7SecurityDynamicConfiguration, SecurityDynamicConfiguration<RoleV7> roleV7SecurityDynamicConfiguration) {\n             super();\n-            this.configuration = configuration;\n+            this.internalUserV7SecurityDynamicConfiguration = internalUserV7SecurityDynamicConfiguration;\n+            this.roleV7SecurityDynamicConfiguration = roleV7SecurityDynamicConfiguration;\n         }\n \n         @Override\n         public boolean exists(String user) {\n-            return configuration.exists(user);\n+            return internalUserV7SecurityDynamicConfiguration.exists(user);\n         }\n \n         @Override\n         public List<String> getBackenRoles(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getBackend_roles();\n         }\n \n         @Override\n         public Map<String, String> getAttributes(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getAttributes();\n         }\n \n         @Override\n         public String getDescription(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getDescription();\n         }\n \n         @Override\n         public String getHash(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n             return tmp==null?null:tmp.getHash();\n         }\n         \n         public List<String> getOpenDistroSecurityRoles(String user) {\n-            InternalUserV7 tmp = configuration.getCEntry(user);\n-            return tmp==null?Collections.emptyList():tmp.getOpendistro_security_roles();\n+            InternalUserV7 tmp = internalUserV7SecurityDynamicConfiguration.getCEntry(user);\n+\n+            // Filtering out hidden and reserved roles for existing users\n+            return tmp==null? ImmutableList.of():\n+                                    tmp.getOpendistro_security_roles()\n+                                        .stream()\n+                                        .filter(role -> roleV7SecurityDynamicConfiguration.getCEntry(role).isHidden() || roleV7SecurityDynamicConfiguration.getCEntry(role).isReserved())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwODM2MQ==", "bodyText": "nit: move roles.getCEntries().size() to the next line.", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r438908361", "createdAt": "2020-06-11T16:15:33Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -189,13 +189,14 @@ public void onChange(Map<CType, SecurityDynamicConfiguration<?>> typeToConfig) {\n \n                 log.debug(\"Static tenants loaded ({})\", staticTenants.getCEntries().size());\n \n-                log.debug(\"Static configuration loaded (total roles: {}/total action groups: {}/total tenants: {})\", roles.getCEntries().size(), actionGroups.getCEntries().size(), tenants.getCEntries().size());\n+                log.debug(\"Static configuration loaded (total roles: {}/total action groups: {}/total tenants: {})\", roles.getCEntries().size(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjA5MDkx", "url": "https://github.com/opensearch-project/security/pull/486#pullrequestreview-429209091", "createdAt": "2020-06-11T19:11:27Z", "commit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOToxMToyOFrOGirF9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOToxMToyOFrOGirF9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAxMDgwNQ==", "bodyText": "if role is hidden and if we throw \"Role is not found\", user may try to create a role with same name.\nWhat will happen if someone try to create a role with same name as of hidden role?", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439010805", "createdAt": "2020-06-11T19:11:28Z", "author": {"login": "hardik-k-shah"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,41 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+\n+        // Don't allow user to add reserved or hidden role\n+        final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);\n+        final List<String> opendistroSecurityRoles = securityJsonNode.get(\"opendistro_security_roles\").asList();\n+        if (opendistroSecurityRoles != null) {\n+            for (final String role: opendistroSecurityRoles) {\n+\n+                if (isHidden(rolesConfiguration, role)) {\n+                    notFound(channel, \"Role '\"+role+\"' is not found.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054096d099f0245a76e86b9e54e4c644b30b773"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDAyNzMy", "url": "https://github.com/opensearch-project/security/pull/486#pullrequestreview-429402732", "createdAt": "2020-06-12T01:20:15Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMToyMDoxNVrOGi0EQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMToyMDoxNVrOGi0EQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1NzgyNQ==", "bodyText": "move if (rolesConfiguration.getCEntry(role) == null) to here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (isHidden(rolesConfiguration, role)) {\n          \n          \n            \n                            if (!rolesConfiguration.exists(role) || isHidden(rolesConfiguration, role)) {", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439157825", "createdAt": "2020-06-12T01:20:15Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -99,22 +99,44 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         // TODO it might be sensible to consolidate this with the overridden method in\n         // order to minimize duplicated logic\n \n-        final SecurityDynamicConfiguration<?> configuration = load(getConfigName(), false);\n+        final SecurityDynamicConfiguration<?> internalUsersConfiguration = load(getConfigName(), false);\n \n-        if (isHidden(configuration, username)) {\n+        if (isHidden(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is not available.\");\n             return;\n         }\n \n         // check if resource is writeable\n-        if (!isReservedAndAccessible(configuration, username)) {\n+        if (!isReservedAndAccessible(internalUsersConfiguration, username)) {\n             forbidden(channel, \"Resource '\" + username + \"' is read-only.\");\n             return;\n         }\n \n         final ObjectNode contentAsNode = (ObjectNode) content;\n         final SecurityJsonNode securityJsonNode = new SecurityJsonNode(contentAsNode);\n \n+        // Don't allow user to add hidden, reserved or non-existent role\n+        final List<String> opendistroSecurityRoles = securityJsonNode.get(\"opendistro_security_roles\").asList();\n+        if (opendistroSecurityRoles != null) {\n+            final SecurityDynamicConfiguration<?> rolesConfiguration = load(CType.ROLES, false);\n+            for (final String role: opendistroSecurityRoles) {\n+\n+                if (rolesConfiguration.getCEntry(role) == null) {\n+                    notFound(channel, \"Role '\"+role+\"' does not exist.\");\n+                }\n+\n+                if (isHidden(rolesConfiguration, role)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDAzNDk4", "url": "https://github.com/opensearch-project/security/pull/486#pullrequestreview-429403498", "createdAt": "2020-06-12T01:22:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMToyMjo1OFrOGi0G3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMToyMjo1OFrOGi0G3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1ODQ5Mg==", "bodyText": "add new line", "url": "https://github.com/opensearch-project/security/pull/486#discussion_r439158492", "createdAt": "2020-06-12T01:22:58Z", "author": {"login": "vrozov"}, "path": "src/test/resources/roles.yml", "diffHunk": "@@ -1031,3 +1031,54 @@ role_foo_all:\n         - indices:data/read/*\n         - indices:admin/*\n         - indices:monitor/*\n+\n+xyz_sr:\n+  reserved: false\n+  hidden: false\n+  description: \"Migrated from v6 (all types mapped)\"\n+  cluster_permissions:\n+    - \"OPENDISTRO_SECURITY_CLUSTER_COMPOSITE_OPS_RO\"\n+  index_permissions:\n+    - index_patterns:\n+        - \"twitter\"\n+        - \"analytics\"\n+      dls: null\n+      fls: null\n+      masked_fields: null\n+      allowed_actions:\n+        - \"*\"\n+  tenant_permissions: []\n+\n+xyz_sr_hidden:\n+  reserved: false\n+  hidden: true\n+  description: \"Migrated from v6 (all types mapped)\"\n+  cluster_permissions:\n+    - \"OPENDISTRO_SECURITY_CLUSTER_COMPOSITE_OPS_RO\"\n+  index_permissions:\n+    - index_patterns:\n+        - \"twitter\"\n+        - \"analytics\"\n+      dls: null\n+      fls: null\n+      masked_fields: null\n+      allowed_actions:\n+        - \"*\"\n+  tenant_permissions: []\n+\n+xyz_sr_reserved:\n+  reserved: true\n+  hidden: false\n+  description: \"Migrated from v6 (all types mapped)\"\n+  cluster_permissions:\n+    - \"OPENDISTRO_SECURITY_CLUSTER_COMPOSITE_OPS_RO\"\n+  index_permissions:\n+    - index_patterns:\n+        - \"twitter\"\n+        - \"analytics\"\n+      dls: null\n+      fls: null\n+      masked_fields: null\n+      allowed_actions:\n+        - \"*\"\n+  tenant_permissions: []", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9efa25662017b143c5cf6985d4c7a81ea14b3641", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/9efa25662017b143c5cf6985d4c7a81ea14b3641", "committedDate": "2020-06-12T18:04:46Z", "message": "Addressing review comments and handling case for non-existent role"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9efa25662017b143c5cf6985d4c7a81ea14b3641", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/9efa25662017b143c5cf6985d4c7a81ea14b3641", "committedDate": "2020-06-12T18:04:46Z", "message": "Addressing review comments and handling case for non-existent role"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODU4Mjk4", "url": "https://github.com/opensearch-project/security/pull/486#pullrequestreview-432858298", "createdAt": "2020-06-18T00:15:30Z", "commit": {"oid": "9efa25662017b143c5cf6985d4c7a81ea14b3641"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjY4MTc5", "url": "https://github.com/opensearch-project/security/pull/486#pullrequestreview-434268179", "createdAt": "2020-06-19T18:24:17Z", "commit": {"oid": "9efa25662017b143c5cf6985d4c7a81ea14b3641"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2942, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}