{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMjQzNDkx", "number": 818, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTowMjowMVrOE1zNTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTozMDoyNVrOE-2XPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQ4OTc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTowMjowMVrOHuR-Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzowODowOVrOHv40zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTAxNA==", "bodyText": "Can you reject in CredentialsValidator which is used by the account API for self-change password as well ?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518291014", "createdAt": "2020-11-05T19:02:01Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2NDMwOA==", "bodyText": "I tried that. But CredentialsValidator validates password using regex, and it responds status code 201: {\"status\":\"error\",\"reason\":\"Password does not match minimum criteria\"}. I believe what we want for empty password is status code 400: {\"status\":\"BAD_REQUEST\",\"message\":\"Please specify a non-empty 'password' when creating a new internal user.\"}.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518464308", "createdAt": "2020-11-06T01:09:01Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTAxNA=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3MzcwNw==", "bodyText": "It returns 201 with that error message? This should not happen. 400 must be returned. Can you verify again", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518473707", "createdAt": "2020-11-06T01:40:21Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTAxNA=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3NjE0Mw==", "bodyText": "Moved the validation to CreadentialValidator.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r519976143", "createdAt": "2020-11-09T17:08:09Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTAxNA=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQ5NTQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTowMzozMlrOHuSBqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDoyNDowMlrOHwG3dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTg4MA==", "bodyText": "Can you remove other checks for isEmpty() ?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518291880", "createdAt": "2020-11-05T19:03:32Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");\n+            return;\n+        }\n+\n+        // if password is set, it takes precedence over hash", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ2NTYxNQ==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518465615", "createdAt": "2020-11-06T01:13:14Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");\n+            return;\n+        }\n+\n+        // if password is set, it takes precedence over hash", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTg4MA=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3MzIwMQ==", "bodyText": "Can you simplify the checks? we only need to check for password is not null and replace hash so that it takes precedence", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518473201", "createdAt": "2020-11-06T01:38:41Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");\n+            return;\n+        }\n+\n+        // if password is set, it takes precedence over hash", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTg4MA=="}, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNjE5OA==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520206198", "createdAt": "2020-11-10T00:24:02Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");\n+            return;\n+        }\n+\n+        // if password is set, it takes precedence over hash", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTg4MA=="}, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA1ODgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0OTowM1rOHv8onw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzo0Mzo1MlrOH4Ym2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzODU1OQ==", "bodyText": "Fine with keeping current behavior but username validation does not depend on regex", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520038559", "createdAt": "2020-11-09T18:49:03Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (regex != null && !regex.isEmpty()) {\n+                        // Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4NTQ2NQ==", "bodyText": "I see.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r528885465", "createdAt": "2020-11-23T17:43:52Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (regex != null && !regex.isEmpty()) {\n+                        // Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzODU1OQ=="}, "originalCommit": null, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA2NTg5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1MDo0OFrOHv8s_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDoxODozMFrOHwGwPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzOTY3OA==", "bodyText": "Do include test for empty password but fix request instead of response for the tests as they are asserting updating other attributes", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520039678", "createdAt": "2020-11-09T18:50:48Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,7 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNDM0OQ==", "bodyText": "Fixed the response for expected behavior change and kept the original test case below.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520204349", "createdAt": "2020-11-10T00:18:30Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,7 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzOTY3OA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA2OTYxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1MTo0M1rOHv8vLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzo0MTozNVrOH4Yhkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDIzOQ==", "bodyText": "Why is this bad request ? it is updating read only user and password field is not present", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520040239", "createdAt": "2020-11-09T18:51:43Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -534,7 +535,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put read only users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/sarek\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1ODMzMA==", "bodyText": "Moving Line 56 - 57 down causes NotXContentException on Line 61. The method validate() still returns false for this use case, but the response throws bad request instead of forbidden. XContentHelper.convertToMap() somehow has dependencies on regex, which causes password indirectly dependent on regex, since password originates from XContentHelper.convertToMap().\nIt's fairly easy to verify this. If you comment out the line 56 - 57 and run this test, line 61 will throw out a NotXContentException", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520058330", "createdAt": "2020-11-09T19:14:59Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -534,7 +535,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put read only users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/sarek\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDIzOQ=="}, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4NDExNQ==", "bodyText": "Fixed the test.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r528884115", "createdAt": "2020-11-23T17:41:35Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -534,7 +535,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put read only users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/sarek\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDIzOQ=="}, "originalCommit": null, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA3NDI3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1Mjo1NlrOHv8x7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzo0MToxNlrOH4Yg4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDk0Mg==", "bodyText": "Why is this bad request ? it is updating reserved user and password field is not present", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520040942", "createdAt": "2020-11-09T18:52:56Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -554,7 +555,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put hidden users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/hide\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1ODcxMw==", "bodyText": "Ditto", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520058713", "createdAt": "2020-11-09T19:15:37Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -554,7 +555,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put hidden users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/hide\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDk0Mg=="}, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4MzkzNw==", "bodyText": "Fixed the test.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r528883937", "createdAt": "2020-11-23T17:41:16Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -554,7 +555,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put hidden users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/hide\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDk0Mg=="}, "originalCommit": null, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA5MjY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1NzoyNlrOHv88-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMDozMjo1MlrOHw0_SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0Mzc3MA==", "bodyText": "nit: Use isNullOrEmpty", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520043770", "createdAt": "2020-11-09T18:57:26Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE4NjQxNA==", "bodyText": "isNullOrEmpty is equivalent to password == null || password.isEmpty(), but I thought what we want to is password != null && password.isEmpty(). We want to cover only the empty password scenario in this PR.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520186414", "createdAt": "2020-11-09T23:28:13Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0Mzc3MA=="}, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxMjY4MQ==", "bodyText": "I was referring to regex null or empty but looks like that line of code got removed in this code revision", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520212681", "createdAt": "2020-11-10T00:43:58Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0Mzc3MA=="}, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2MTg2NA==", "bodyText": "nit: Use isNullOrEmpty\n\nDone", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520961864", "createdAt": "2020-11-11T00:32:52Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0Mzc3MA=="}, "originalCommit": null, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTIxMDU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo1NDo0NVrOHwHe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMDoxNDoyM1rOHwt9CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ==", "bodyText": "Is the empty password checked only if regex is configured ? I see lines L56-57 inserted back in.\n&& regex != null\n&& !regex.isEmpty()", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520216315", "createdAt": "2020-11-10T00:54:45Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxOTA1NA==", "bodyText": "Yes, XContentHelper.convertToMap() has dependencies on regex != null && !regex.isEmpty(). Without Line 56-57, it throws out NotXContentException and makes the validate() return a false, and a bad request gets responded eventually.\nBased on current behavior, the logic validates password only when regex != null && !regex.isEmpty(). Unless the opendistro_security.restapi.password_validation_regex is specified in ES settings, the password is not validated.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520219054", "createdAt": "2020-11-10T01:02:49Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIyOTI2MQ==", "bodyText": "Could you explain the dependency of XContentHelper.convertToMap() on regex and why it is throwing NotXContentException  ?\nWe would still allow users to use empty passwords unless users specify regex. Why do we want this behavior instead of rejecting empty passwords for all scenarios.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520229261", "createdAt": "2020-11-10T01:32:57Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzMzEyMA==", "bodyText": "There is an easy way to verify the dependencies. If you comment out the line 56 - 57 on master branch and run UserApiTest.testUserApiForNonSuperAdmin(), this test will get a bad response instead of a forbidden. If you check the log, you'll see the NotXContentException thrown out from the line of XContentHelper.convertToMap().\nGiven the dependencies, we might have to reject empty password in InternalUsersApiAction and all other ApiActions where empty password should be rejected if we want to reject it for all scenarios.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520233120", "createdAt": "2020-11-10T01:45:33Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3NTA2OQ==", "bodyText": "Are you saying the test/code needs to be fixed? If yes, please fix as needed.\nXContentHelper.convertToMap() is an elasticsearch function. I don't see how it can be dependent on the regex configuration of the security plugin", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520375069", "createdAt": "2020-11-10T08:29:01Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4MDI1NA==", "bodyText": "It's not dependent on the regex configuation. XContentHelper.convertToMap() cannot map XContent correctly when XContent content contains a null field.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520780254", "createdAt": "2020-11-10T18:31:40Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgyNTk2MA==", "bodyText": "Regex is not part of content hence it cannot interfere with XContentHelper.convertToMap()", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520825960", "createdAt": "2020-11-10T19:38:06Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzMjk3Mw==", "bodyText": "It is converting array PATCH array body with PUT request in the test testUserApiForNonSuperAdmin and is failing to convert array into map. Need to fix the tests", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520832973", "createdAt": "2020-11-10T19:50:02Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg0NjYwMA==", "bodyText": "Ok. That's the culprit. I fixed it and moved the validation to cover all scenarios.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520846600", "createdAt": "2020-11-10T20:14:23Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxODI3MDE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDo0OTozNFrOH4lJqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNTozMToxN1rOH4slAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MDk4Ng==", "bodyText": "Can password be null here?\nMaybe check for password is not null directly in the contentAsMap as these conditions are based on non-null password entry validation", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529090986", "createdAt": "2020-11-24T00:49:34Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (!Strings.isNullOrEmpty(regex)) {\n+                        // Password can be null for an existing user. Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n \n-                    if (username == null || username.isEmpty()) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Unable to validate username because no user is given\");\n+                        if (username == null || username.isEmpty()) {\n+                            if (log.isDebugEnabled()) {\n+                                log.debug(\"Unable to validate username because no user is given\");\n+                            }\n+                            return false;\n                         }\n-                        return false;\n-                    }\n \n-                    if (username.toLowerCase().equals(password.toLowerCase())) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Username must not match password\");\n+                        if (username.toLowerCase().equals(password.toLowerCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MjI3Mg==", "bodyText": "Also not dependent on regex but it is inside Strings.isNullOrEmpty(regex) block? I understand the current behavior validates password against username only if regex is defined. Just looking for improvements here. Any thoughts?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529092272", "createdAt": "2020-11-24T00:53:33Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (!Strings.isNullOrEmpty(regex)) {\n+                        // Password can be null for an existing user. Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n \n-                    if (username == null || username.isEmpty()) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Unable to validate username because no user is given\");\n+                        if (username == null || username.isEmpty()) {\n+                            if (log.isDebugEnabled()) {\n+                                log.debug(\"Unable to validate username because no user is given\");\n+                            }\n+                            return false;\n                         }\n-                        return false;\n-                    }\n \n-                    if (username.toLowerCase().equals(password.toLowerCase())) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Username must not match password\");\n+                        if (username.toLowerCase().equals(password.toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MDk4Ng=="}, "originalCommit": null, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5OTczMA==", "bodyText": "Yes, I thought about that too. In theory, password has nothing to do with regex. I feel like there're some potential points/use cases to validate password against username no matter regex is null/empty or not and refactoring could be needed here. It's worth to discuss with the team and to get more inputs.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529099730", "createdAt": "2020-11-24T01:16:23Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (!Strings.isNullOrEmpty(regex)) {\n+                        // Password can be null for an existing user. Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n \n-                    if (username == null || username.isEmpty()) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Unable to validate username because no user is given\");\n+                        if (username == null || username.isEmpty()) {\n+                            if (log.isDebugEnabled()) {\n+                                log.debug(\"Unable to validate username because no user is given\");\n+                            }\n+                            return false;\n                         }\n-                        return false;\n-                    }\n \n-                    if (username.toLowerCase().equals(password.toLowerCase())) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Username must not match password\");\n+                        if (username.toLowerCase().equals(password.toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MDk4Ng=="}, "originalCommit": null, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE0Nzg0Nw==", "bodyText": "Can we address in this PR itself as change is happening around it", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529147847", "createdAt": "2020-11-24T02:21:31Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (!Strings.isNullOrEmpty(regex)) {\n+                        // Password can be null for an existing user. Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n \n-                    if (username == null || username.isEmpty()) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Unable to validate username because no user is given\");\n+                        if (username == null || username.isEmpty()) {\n+                            if (log.isDebugEnabled()) {\n+                                log.debug(\"Unable to validate username because no user is given\");\n+                            }\n+                            return false;\n                         }\n-                        return false;\n-                    }\n \n-                    if (username.toLowerCase().equals(password.toLowerCase())) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Username must not match password\");\n+                        if (username.toLowerCase().equals(password.toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MDk4Ng=="}, "originalCommit": null, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIxMjY3NA==", "bodyText": "I'll create another PR to make this change given that this PR has been sitting there for more than 3 weeks and it has met the goal. Let's stick with the original scope of PRs.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529212674", "createdAt": "2020-11-24T05:31:17Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (!Strings.isNullOrEmpty(regex)) {\n+                        // Password can be null for an existing user. Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n \n-                    if (username == null || username.isEmpty()) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Unable to validate username because no user is given\");\n+                        if (username == null || username.isEmpty()) {\n+                            if (log.isDebugEnabled()) {\n+                                log.debug(\"Unable to validate username because no user is given\");\n+                            }\n+                            return false;\n                         }\n-                        return false;\n-                    }\n \n-                    if (username.toLowerCase().equals(password.toLowerCase())) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Username must not match password\");\n+                        if (username.toLowerCase().equals(password.toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MDk4Ng=="}, "originalCommit": null, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjUzOTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoxMTo0MVrOH5PPlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo0MzowNVrOH8KzvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA==", "bodyText": "Under what condition password will be null here? It is executed with contentAsMap.containsKey(\"password\") condition.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529780628", "createdAt": "2020-11-24T18:11:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MzEyMw==", "bodyText": "In theory, contentAsMap.containsKey() prevents null password. But before checking isEmpty(), it will be safer to ensure the object \"password\" is not null.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529783123", "createdAt": "2020-11-24T18:15:42Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkwNjg5Mg==", "bodyText": "I don't see why two checks are necessary. The check if (contentAsMap != null && contentAsMap.containsKey(\"password\")) looks redundant to me.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529906892", "createdAt": "2020-11-24T21:55:30Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzMTUxMg==", "bodyText": "If contentAsMap is null or password field doesn't exist, there's no need to validate password at all.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r530131512", "createdAt": "2020-11-25T06:19:52Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY2Mjc4MA==", "bodyText": "How contentAsMap can be null? Does not check password != null supersede contentAsMap.containsKey(\"password\")?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r530662780", "createdAt": "2020-11-25T21:58:07Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcyMDY0MA==", "bodyText": "I removed password != null.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r530720640", "createdAt": "2020-11-26T01:21:10Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM1MzM5OA==", "bodyText": "Will it be better to remove contentAsMap != null && contentAsMap.containsKey(\"password\")?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532353398", "createdAt": "2020-11-30T05:21:24Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM1NjE4NQ==", "bodyText": "If removing contentAsMap != null && contentAsMap.containsKey(\"password\"), we'd need to keep if (password != null && password.isEmpty()) { at Line 65 and add one more condition password != null at Line 89. Will this look better? If so, I'll update it.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532356185", "createdAt": "2020-11-30T05:32:15Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg0ODI1MQ==", "bodyText": "Replace contentAsMap != null && contentAsMap.containsKey(\"password\") with\nString password = contentAsMap.get(\"password\");\nif (password != null) {", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532848251", "createdAt": "2020-11-30T19:34:01Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg1MzY5Mg==", "bodyText": "Ok. That prevents null password and we're good to remove all null password checks after it. I've made the change.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532853692", "createdAt": "2020-11-30T19:43:05Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA=="}, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzM5MTg4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMDozNlrOH5XSjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjo0NjoxM1rOH5lL0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxMjQ2Mw==", "bodyText": "Is there a test that adds user with empty password and no hash?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529912463", "createdAt": "2020-11-24T22:00:36Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -410,6 +410,7 @@ public void testPasswordRules() throws Exception {\n         addUserWithPassword(\"ok2\", \"$aA123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok3\", \"$Aa123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok4\", \"$1aAAAAAAAAA\", HttpStatus.SC_CREATED);\n+        addUserWithPasswordAndHash(\"empty_password\", \"\", \"$%^123\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3NjgzNQ==", "bodyText": "Will be also good to test request to create user with \"password\": null", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529976835", "createdAt": "2020-11-24T23:01:34Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -410,6 +410,7 @@ public void testPasswordRules() throws Exception {\n         addUserWithPassword(\"ok2\", \"$aA123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok3\", \"$Aa123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok4\", \"$1aAAAAAAAAA\", HttpStatus.SC_CREATED);\n+        addUserWithPasswordAndHash(\"empty_password\", \"\", \"$%^123\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxMjQ2Mw=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE0MDExNA==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r530140114", "createdAt": "2020-11-25T06:46:13Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -410,6 +410,7 @@ public void testPasswordRules() throws Exception {\n         addUserWithPassword(\"ok2\", \"$aA123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok3\", \"$Aa123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok4\", \"$1aAAAAAAAAA\", HttpStatus.SC_CREATED);\n+        addUserWithPasswordAndHash(\"empty_password\", \"\", \"$%^123\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxMjQ2Mw=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzYxNTQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozNToyN1rOH5ZisQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwMToyMTozM1rOH6In5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0OTM2MQ==", "bodyText": "The request creates new user. Please change it to update existing user \"ok1\".", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529949361", "createdAt": "2020-11-24T22:35:27Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,10 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());\n+\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/non-empty_password\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"Admin_123\\\"}\", new Header[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzNDE3Ng==", "bodyText": "This intends to test user creation. Line 451-452 is to test updating existing user.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r530134176", "createdAt": "2020-11-25T06:28:38Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,10 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());\n+\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/non-empty_password\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"Admin_123\\\"}\", new Header[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0OTM2MQ=="}, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcxNDE1MQ==", "bodyText": "User creation is tested using addUserWithPassword(), how this test is different?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r530714151", "createdAt": "2020-11-26T00:56:25Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,10 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());\n+\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/non-empty_password\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"Admin_123\\\"}\", new Header[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0OTM2MQ=="}, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcyMDc0MQ==", "bodyText": "I change it to update the existing user \"ok1\".", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r530720741", "createdAt": "2020-11-26T01:21:33Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,10 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());\n+\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/non-empty_password\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"Admin_123\\\"}\", new Header[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0OTM2MQ=="}, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzM3ODU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTozMDoyNVrOH8OnnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTo1MDowMlrOH8POXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNjEyNQ==", "bodyText": "nit: use final same as original final String password = (String) contentAsMap.get(\"password\");", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532916125", "createdAt": "2020-11-30T21:30:25Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,44 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n-                if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n-                    final String password = (String) contentAsMap.get(\"password\");\n-\n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                String password = (String) contentAsMap.get(\"password\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNjM2MA==", "bodyText": "Can contentAsMap be null? I see the null check is removed", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532916360", "createdAt": "2020-11-30T21:30:56Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,44 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n-                if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n-                    final String password = (String) contentAsMap.get(\"password\");\n-\n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                String password = (String) contentAsMap.get(\"password\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNjEyNQ=="}, "originalCommit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyNDU0OQ==", "bodyText": "final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2(); prevents null contentAsMap.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532924549", "createdAt": "2020-11-30T21:47:14Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,44 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n-                if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n-                    final String password = (String) contentAsMap.get(\"password\");\n-\n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                String password = (String) contentAsMap.get(\"password\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNjEyNQ=="}, "originalCommit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkyNjA0Nw==", "bodyText": "Does prevents null mean it throws null pointer exception or returns empty map?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532926047", "createdAt": "2020-11-30T21:50:02Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,44 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n-                if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n-                    final String password = (String) contentAsMap.get(\"password\");\n-\n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                String password = (String) contentAsMap.get(\"password\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNjEyNQ=="}, "originalCommit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2233, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}