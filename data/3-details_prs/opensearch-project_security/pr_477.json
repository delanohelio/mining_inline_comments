{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzUzMzkz", "number": 477, "title": "Adding metadata_body to SAML config", "bodyText": "Issue #, if available:\nDescription of changes:\nAt this moment SAML accepts only \"metadata_url\" or \"matadata_file\".\nWe want to add also \"metadata_body\" to store the metadata file in the index. This will remove any dependencies on other websites/files for metadata retrieval.\n\"metadata_body\" will contain SAML XML metadata.\nTesting:\nAdded unit tests.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-05-28T21:46:09Z", "url": "https://github.com/opensearch-project/security/pull/477", "merged": true, "mergeCommit": {"oid": "5641064b6114bb2f4072d0b80aba6fd5536977f0"}, "closed": true, "closedAt": "2020-06-02T17:41:28Z", "author": {"login": "debjanibnrj"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl1xSYgH2gAyNDI0NzUzMzkzOjQ3Y2NkZWIwZjQzZWI2MTk4ZTJmMzBkNmVkZTAzZDU5OGFjNThlYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnNlHVAFqTQyMjM0MjM2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "committedDate": "2020-05-28T22:40:05Z", "message": "Adding metadata_body to SAML config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "committedDate": "2020-05-28T22:40:05Z", "message": "Adding metadata_body to SAML config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTgxNTc5", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-420581579", "createdAt": "2020-05-29T00:37:43Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMDozNzo0NFrOGcLNeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMDozNzo0NFrOGcLNeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5Njk4Ng==", "bodyText": "Does this ID needs to be different every time it is initialized?", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432196986", "createdAt": "2020-05-29T00:37:44Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTg1NzE2", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-420585716", "createdAt": "2020-05-29T00:51:27Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMDo1MToyN1rOGcLbMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMDo1NTowOFrOGcLewA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwMDQ5Nw==", "bodyText": "nit: indentation", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432200497", "createdAt": "2020-05-29T00:51:27Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -104,11 +107,11 @@ public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n                 throw new Exception(\"kibana_url is unconfigured\");\n             }\n \n-            if (idpMetadataUrl == null && idpMetadataFile == null) {\n-                throw new Exception(\"idp.metadata_url and idp.metadata_file are unconfigured\");\n+            if (idpMetadataUrl == null && idpMetadataFile == null && idpMetadataBody == null) {\n+                throw new Exception(\"idp.metadata_url, idp.metadata_file and idpMetadataBody are unconfigured\");\n             }\n \n-            this.metadataResolver = createMetadataResolver(settings, configPath);\n+             this.metadataResolver = createMetadataResolver(settings, configPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwMDk5NA==", "bodyText": "twice \"e\" while logging?", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432200994", "createdAt": "2020-05-29T00:53:25Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));\n+        setRequireValidMetadata(true);\n+        setFailFastInitialization(false);\n+        BasicParserPool basicParserPool = new BasicParserPool();\n+        basicParserPool.initialize();\n+        setParserPool(basicParserPool);\n+    }\n+\n+    private static Element getMetadataDOM(Settings settings) throws Exception {\n+        String xmlString = settings.get(\"idp.metadata_body\", null);\n+\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+\n+        //API to obtain DOM Document instance\n+        DocumentBuilder builder = null;\n+        try\n+        {\n+            builder = factory.newDocumentBuilder();\n+            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n+            return doc.getDocumentElement();\n+        } catch (Exception e)\n+        {\n+            log.error(\"Error while parsing SAML Metadata Body \"+ e, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwMTQwOA==", "bodyText": "not sure we are adding roles. Will have to confirm", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432201408", "createdAt": "2020-05-29T00:55:08Z", "author": {"login": "palashhedau"}, "path": "src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java", "diffHunk": "@@ -151,6 +152,63 @@ public void basicTest() throws Exception {\n         Assert.assertEquals(\"horst\", jwt.getClaim(\"sub\"));\n     }\n \n+    @Test\n+    public void testMetadataBody() throws Exception {\n+        mockSamlIdpServer.setSignResponses(true);\n+        mockSamlIdpServer.loadSigningKeys(\"saml/kirk-keystore.jks\", \"kirk\");\n+        mockSamlIdpServer.setAuthenticateUser(\"horst\");\n+        mockSamlIdpServer.setEndpointQueryString(null);\n+\n+        // Note: We need to replace endpoint with mockSamlIdpServer endpoint\n+        final String metadataBody = FileHelper.loadFile(\"saml/metadata.xml\")\n+                                        .replaceAll(\"http://localhost:33667/\", mockSamlIdpServer.getMetadataUri());\n+\n+        Settings settings = Settings.builder().put(\"idp.metadata_body\", metadataBody)\n+            .put(\"kibana_url\", \"http://wherever\")\n+            .put(\"idp.entity_id\", mockSamlIdpServer.getIdpEntityId())\n+            .put(\"exchange_key\", \"abc\").put(\"roles_key\", \"roles\").put(\"path.home\", \".\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjQ3MDE2", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421247016", "createdAt": "2020-05-29T19:53:01Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTo1MzowMlrOGcqLIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTo1MzowMlrOGcqLIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNDI4OA==", "bodyText": "avoid throwing Exception, it should be either checked or run-time (preferred) Exception.", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432704288", "createdAt": "2020-05-29T19:53:02Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -76,7 +78,7 @@\n     private HTTPJwtAuthenticator httpJwtAuthenticator;\n     private Settings jwtSettings;\n \n-    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n+    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjQ5Mzk2", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421249396", "createdAt": "2020-05-29T19:56:57Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTo1Njo1N1rOGcqSFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxOTo1Njo1N1rOGcqSFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjA3MA==", "bodyText": "Consider \"One of idp.metadata_url, idp.metadata_file or idp.metadata_body must be configured\".", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432706070", "createdAt": "2020-05-29T19:56:57Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -104,11 +107,11 @@ public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n                 throw new Exception(\"kibana_url is unconfigured\");\n             }\n \n-            if (idpMetadataUrl == null && idpMetadataFile == null) {\n-                throw new Exception(\"idp.metadata_url and idp.metadata_file are unconfigured\");\n+            if (idpMetadataUrl == null && idpMetadataFile == null && idpMetadataBody == null) {\n+                throw new Exception(\"idp.metadata_url, idp.metadata_file and idpMetadataBody are unconfigured\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjY3NTg5", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421267589", "createdAt": "2020-05-29T20:29:20Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyOToyMFrOGcrIYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyOToyMFrOGcrIYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxOTk2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (idpMetadataUrl != null) {\n          \n          \n            \n                    final String idpMetadataBody = settings.get(\"idp.metadata_body\");\n          \n          \n            \n                    if (idpMetadataUrl != null) {\n          \n          \n            \n                        metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432719968", "createdAt": "2020-05-29T20:29:20Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +278,16 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n         if (idpMetadataUrl != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjY4ODkx", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421268891", "createdAt": "2020-05-29T20:31:43Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMTo0M1rOGcrMMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozMTo0M1rOGcrMMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDk0Nw==", "bodyText": "Similar\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (idpMetadataFile != null) {\n          \n          \n            \n                    } else {\n          \n          \n            \n                        final String idpMetadataFile = settings.get(\"idp.metadata_file\");\n          \n          \n            \n                        if (idpMetadataFile != null) {\n          \n          \n            \n                            metadataResolver = new SamlFilesystemMetadataResolver(idpMetadataFile, settings, configPath);", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432720947", "createdAt": "2020-05-29T20:31:43Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +278,16 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n         if (idpMetadataUrl != null) {\n             metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n-        } else {\n+        } else if (idpMetadataFile != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjcwNDYw", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421270460", "createdAt": "2020-05-29T20:34:34Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozNDozNFrOGcrQvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDozNDozNFrOGcrQvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMjEwOA==", "bodyText": "Move check here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } else {\n          \n          \n            \n                       throw new RuntimeException(\"One of 'idp.metadata_url', 'idp.metadata_file' or 'idp.metadata_body' must be configured\");", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432722108", "createdAt": "2020-05-29T20:34:34Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +278,16 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n         if (idpMetadataUrl != null) {\n             metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n-        } else {\n+        } else if (idpMetadataFile != null) {\n             metadataResolver = new SamlFilesystemMetadataResolver(settings, configPath);\n+        } else {\n+            metadataResolver = new SamlDOMMetadataResolver(settings);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjc1MDk4", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421275098", "createdAt": "2020-05-29T20:43:13Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo0MzoxM1rOGcre3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo0MzoxM1rOGcre3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyNTcyNQ==", "bodyText": "remove unused imports", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432725725", "createdAt": "2020-05-29T20:43:13Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjc1ODky", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421275892", "createdAt": "2020-05-29T20:44:38Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo0NDozOFrOGcrhNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo0NDozOFrOGcrhNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyNjMyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n          \n          \n            \n                private static final Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432726324", "createdAt": "2020-05-29T20:44:38Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjgwODMw", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421280830", "createdAt": "2020-05-29T20:54:06Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1NDowNlrOGcrwCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1NDowNlrOGcrwCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMDEyMw==", "bodyText": "nit: no new line.", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432730123", "createdAt": "2020-05-29T20:54:06Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));\n+        setRequireValidMetadata(true);\n+        setFailFastInitialization(false);\n+        BasicParserPool basicParserPool = new BasicParserPool();\n+        basicParserPool.initialize();\n+        setParserPool(basicParserPool);\n+    }\n+\n+    private static Element getMetadataDOM(Settings settings) throws Exception {\n+        String xmlString = settings.get(\"idp.metadata_body\", null);\n+\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+\n+        //API to obtain DOM Document instance\n+        DocumentBuilder builder = null;\n+        try\n+        {\n+            builder = factory.newDocumentBuilder();\n+            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n+            return doc.getDocumentElement();\n+        } catch (Exception e)\n+        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjgxMTIz", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421281123", "createdAt": "2020-05-29T20:54:36Z", "commit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1NDozN1rOGcrw6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDo1NDozN1rOGcrw6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMDM0Ng==", "bodyText": "Use smart logging.", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432730346", "createdAt": "2020-05-29T20:54:37Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));\n+        setRequireValidMetadata(true);\n+        setFailFastInitialization(false);\n+        BasicParserPool basicParserPool = new BasicParserPool();\n+        basicParserPool.initialize();\n+        setParserPool(basicParserPool);\n+    }\n+\n+    private static Element getMetadataDOM(Settings settings) throws Exception {\n+        String xmlString = settings.get(\"idp.metadata_body\", null);\n+\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+\n+        //API to obtain DOM Document instance\n+        DocumentBuilder builder = null;\n+        try\n+        {\n+            builder = factory.newDocumentBuilder();\n+            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n+            return doc.getDocumentElement();\n+        } catch (Exception e)\n+        {\n+            log.error(\"Error while parsing SAML Metadata Body \"+ e, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "committedDate": "2020-05-28T22:40:05Z", "message": "Adding metadata_body to SAML config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDU2NTkw", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421456590", "createdAt": "2020-05-31T02:32:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMjozMjozNFrOGc2VsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMjozMjozNFrOGc2VsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwMzYwMA==", "bodyText": "Any initialization specific to SamlHTTPMetadataResolver will be better to keep inside SamlHTTPMetadataResolver constructor.", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432903600", "createdAt": "2020-05-31T02:32:34Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,26 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n+        final String idpMetadataUrl = settings.get(\"idp.metadata_url\");\n+        final String idpMetadataFile = settings.get(\"idp.metadata_file\");\n+        final String idpMetadataBody = settings.get(\"idp.metadata_body\");\n \n         if (idpMetadataUrl != null) {\n-            metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n+            metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);\n+            ((SamlHTTPMetadataResolver)metadataResolver).setMinRefreshDelay(settings.getAsLong(\"idp.min_refresh_delay\", 60L * 1000L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDU2Njk2", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421456696", "createdAt": "2020-05-31T02:35:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMjozNTozN1rOGc2WMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwMjozNTozN1rOGc2WMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwMzczMA==", "bodyText": "If you initialize idpMetadataUrl, idpMetadataFile and idpMetadataBody outside of if block, use else if. I used else in the suggestion to initialize idpMetadataFile.", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432903730", "createdAt": "2020-05-31T02:35:37Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,26 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n+        final String idpMetadataUrl = settings.get(\"idp.metadata_url\");\n+        final String idpMetadataFile = settings.get(\"idp.metadata_file\");\n+        final String idpMetadataBody = settings.get(\"idp.metadata_body\");\n \n         if (idpMetadataUrl != null) {\n-            metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n+            metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);\n+            ((SamlHTTPMetadataResolver)metadataResolver).setMinRefreshDelay(settings.getAsLong(\"idp.min_refresh_delay\", 60L * 1000L));\n+            ((SamlHTTPMetadataResolver)metadataResolver).setMaxRefreshDelay(settings.getAsLong(\"idp.max_refresh_delay\", 14400000L));\n+            ((SamlHTTPMetadataResolver)metadataResolver).setRefreshDelayFactor(settings.getAsFloat(\"idp.refresh_delay_factor\", 0.75f));\n         } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/5208805ab9960fd09a524284ef3c4c9c77257080", "committedDate": "2020-05-31T02:56:50Z", "message": "Addressing PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/5208805ab9960fd09a524284ef3c4c9c77257080", "committedDate": "2020-05-31T02:56:50Z", "message": "Addressing PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTEyMjgx", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-421512281", "createdAt": "2020-05-31T17:15:20Z", "commit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNzoxNToyMFrOGc6KpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxODoxMzozOFrOGc6cFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NjMwOQ==", "bodyText": "nit: RuntimeException does not need to be declared", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432966309", "createdAt": "2020-05-31T17:15:20Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -75,16 +74,15 @@\n     private AuthTokenProcessorHandler authTokenProcessorHandler;\n     private HTTPJwtAuthenticator httpJwtAuthenticator;\n     private Settings jwtSettings;\n+    private static int resolverIdCounter = 0;\n \n-    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n+    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) throws RuntimeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTU1NQ==", "bodyText": "Note that, for example AbstractHTTPJwtAuthenticator, does not raise exception in case it is misconfigured similar to how HTTPSamlAuthenticator behaved. It will be good to revisit the behavior and make it consistent as part of a follow up PR.", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432969555", "createdAt": "2020-05-31T17:57:19Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -127,6 +121,7 @@ public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n \n         } catch (Exception e) {\n             log.error(\"Error creating HTTPSamlAuthenticator: \" + e + \". SAML authentication will not work\", e);\n+            throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTY3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n          \n          \n            \n                private MetadataResolver createMetadataResolver(final Settings settings, final Path configPath)", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432969678", "createdAt": "2020-05-31T17:59:00Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,21 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTcxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final AbstractBatchMetadataResolver metadataResolver;\n          \n          \n            \n                    final AbstractMetadataResolver metadataResolver;", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432969714", "createdAt": "2020-05-31T17:59:34Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,21 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDA3NQ==", "bodyText": "Use DOMMetadataResolver:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        metadataResolver = new SamlDOMMetadataResolver(idpMetadataBody);\n          \n          \n            \n                        metadataResolver = new DOMMetadataResolver(getMetadataDOM(idpMetadataBody));", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432970075", "createdAt": "2020-05-31T18:04:39Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,21 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n+        final String idpMetadataUrl = settings.get(\"idp.metadata_url\");\n+        final String idpMetadataFile = settings.get(\"idp.metadata_file\");\n+        final String idpMetadataBody = settings.get(\"idp.metadata_body\");\n         if (idpMetadataUrl != null) {\n-            metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n+            metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);\n+        } else if (idpMetadataFile != null) {\n+            metadataResolver = new SamlFilesystemMetadataResolver(idpMetadataFile, settings, configPath);\n+        } else if (idpMetadataBody != null) {\n+            metadataResolver = new SamlDOMMetadataResolver(idpMetadataBody);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDI5Ng==", "bodyText": "Is it necessary to run this code with elevated privileges? Can it be limited to metadataResolver.initialize();?", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432970296", "createdAt": "2020-05-31T18:07:27Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -295,6 +296,12 @@ private AbstractReloadingMetadataResolver createMetadataResolver(final Settings\n             AccessController.doPrivileged(new PrivilegedExceptionAction<Void>() {\n                 @Override\n                 public Void run() throws ComponentInitializationException {\n+                    metadataResolver.setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++resolverIdCounter));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDU4Mw==", "bodyText": "Move this method to HTTPSamlAuthenticator, declare it to throw ParserConfigurationException, SAXException, IOException and delete SamlDOMMetadataResolver class.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static Element getMetadataDOM(final String xmlString) throws Exception {\n          \n          \n            \n                private static Element getMetadataDOM(final String xmlString) throws ParserConfigurationException, SAXException, IOException {\n          \n          \n            \n                    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n          \n          \n            \n                    factory.setNamespaceAware(true);\n          \n          \n            \n            \n          \n          \n            \n                    DocumentBuilder builder = factory.newDocumentBuilder();\n          \n          \n            \n                    try {\n          \n          \n            \n                        Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n          \n          \n            \n                        return doc.getDocumentElement();\n          \n          \n            \n                    } catch (SAXException e) {\n          \n          \n            \n                        log.error(\"Error while parsing SAML Metadata Body {}\", xmlString, e);\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }\n          \n          \n            \n                }", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432970583", "createdAt": "2020-05-31T18:10:58Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *  You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.dlic.auth.http.saml;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    private final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    public SamlDOMMetadataResolver(final String idpMetadataBody) throws Exception {\n+        super(getMetadataDOM(idpMetadataBody));\n+    }\n+\n+    private static Element getMetadataDOM(final String xmlString) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDc3Mg==", "bodyText": "nit: add new line.", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432970772", "createdAt": "2020-05-31T18:13:38Z", "author": {"login": "vrozov"}, "path": "src/test/resources/saml/metadata.xml", "diffHunk": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"http://test.entity\">\n+    <md:IDPSSODescriptor WantAuthnRequestsSigned=\"false\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n+        <md:KeyDescriptor use=\"signing\">\n+            <ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n+                <ds:X509Data>\n+                    <ds:X509Certificate>MIIEQDCCAyigAwIBAgIBCDANBgkqhkiG9w0BAQsFADCBlTETMBEGCgmSJomT8ixkARkWA2NvbTEX\n+                        MBUGCgmSJomT8ixkARkWB2V4YW1wbGUxGTAXBgNVBAoMEEV4YW1wbGUgQ29tIEluYy4xJDAiBgNV\n+                        BAsMG0V4YW1wbGUgQ29tIEluYy4gU2lnbmluZyBDQTEkMCIGA1UEAwwbRXhhbXBsZSBDb20gSW5j\n+                        LiBTaWduaW5nIENBMB4XDTE4MDUwNTE0MzcxNloXDTI4MDUwMjE0MzcxNlowTTELMAkGA1UEBhMC\n+                        REUxDTALBgNVBAcTBFRlc3QxDzANBgNVBAoTBmNsaWVudDEPMA0GA1UECxMGY2xpZW50MQ0wCwYD\n+                        VQQDEwRraXJrMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt7iBnBLbkmCKMEkc9meR\n+                        sLmtrYeKKbkPL/CNogjP5fhIH5vSWd2+vSzgENAXtaHkhLrDiqi6vnny+r0KaluCsuYGZkisMMcP\n+                        ku3sODGtHakuWts4YYLqHtZWvsR4F8ioHJ1E+gdG+ACjdf4MvWR+MkG5tswceqwfltpZti0xzUOT\n+                        CowFdtZ6NaCoWPMgmg85T3hjWGe7SSSIgJDAWpJAETCb4RIKrSS26dlESdgU6zj4QowEV+/gKdLK\n+                        O9pVo5mOKKuDNYLMzN6m1Q7abUQFeTAgIq6MX9YSJ40Qj7fWWq2OB/hJNTHN9LfTra9/ZMKPt5ec\n+                        yBCTRpr+KmXlMEg+BwIDAQABo4HhMIHeMA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMB0GA1Ud\n+                        JQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQUOXz2tftJLgWX+hwbtJmItC0nJ8cw\n+                        HwYDVR0jBBgwFoAUlHfikzELP7bny+WOakSkxOMEweAwYgYDVR0fBFswWTBXoFWgU4ZRaHR0cHM6\n+                        Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Zsb3JhZ3VubmNvbS91bml0dGVzdC1hc3NldHMv\n+                        bWFzdGVyL3Jldm9rZWQuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQAORNkM6q4j1ELFStU3CVI0AJIe\n+                        pZQ4JoBPLOUNK0tvnnzRuTEM57kaydg2PmbG1YUY6XS3S/IFyUZic95rPMxUUL8gGGCs1lJLq3i9\n+                        Kt7aN0oyrnL00N2h8EDgi1WFjTYF0l/L52zKrxIOc7fAo1M0HLOHiPUq21A6hCrSVsBOeXB8GBgp\n+                        KIqMLtx0wYDIwK3ItadGZ8B/rwH8rimMZHSSXvjd2RUQtaEHw5yj7zSE+0CogoMWuBjiSWl5WzQ0\n+                        RWHnYQVunzuCnMZVRTk04yO4L2ctPWqlRVUlXM7Ay/YZiBL/k1uu28QVRcP1XzH63XE4MAQMcShv\n+                        TbAZAoSWAJkV</ds:X509Certificate>\n+                </ds:X509Data>\n+            </ds:KeyInfo>\n+        </md:KeyDescriptor>\n+        <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://localhost:33667/saml/slo\" />\n+        <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n+        <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://localhost:33667/saml/sso\" />\n+    </md:IDPSSODescriptor>\n+</md:EntityDescriptor>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjE1NDU1", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-422215455", "createdAt": "2020-06-01T22:07:43Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjQ0NjI3", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-422244627", "createdAt": "2020-06-01T23:23:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoyMzoxOVrOGddKQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoyNTowM1rOGddMKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzOTY1MA==", "bodyText": "Do we need to create DocumentBuilderFactory everytime getMetadataDOM is called ?", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r433539650", "createdAt": "2020-06-01T23:23:19Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -400,6 +419,21 @@ private String getSamlRequestQueryStringSignature(String samlRequestQueryString)\n         }\n     }\n \n+    private static Element getMetadataDOM(final String xmlString) throws IOException, SAXException, ParserConfigurationException {\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0MDEzOA==", "bodyText": "What is the purpose of resolverIdCounter ? If the intent is creating a new id we can use uuid ?", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r433540138", "createdAt": "2020-06-01T23:25:03Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,16 +280,30 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private MetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractMetadataResolver metadataResolver;\n \n+        final String idpMetadataUrl = settings.get(\"idp.metadata_url\");\n+        final String idpMetadataFile = settings.get(\"idp.metadata_file\");\n+        final String idpMetadataBody = settings.get(\"idp.metadata_body\");\n         if (idpMetadataUrl != null) {\n-            metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n+            metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);\n+        } else if (idpMetadataFile != null) {\n+            metadataResolver = new SamlFilesystemMetadataResolver(idpMetadataFile, settings, configPath);\n+        } else if (idpMetadataBody != null) {\n+            metadataResolver = new DOMMetadataResolver(getMetadataDOM(idpMetadataBody));\n         } else {\n-            metadataResolver = new SamlFilesystemMetadataResolver(settings, configPath);\n+            throw new Exception(\"One of idp.metadata_url, idp.metadata_file or idp.metadata_body must be configured\");\n         }\n \n+        metadataResolver.setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++resolverIdCounter));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjcyOTMy", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-422272932", "createdAt": "2020-06-02T00:52:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMDo1MjowNlrOGdem0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMDo1MjowNlrOGdem0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU2MzM0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.error(\"Error while parsing SAML Metadata Body \", e);\n          \n          \n            \n                        log.error(\"Error while parsing SAML Metadata Body {}\", xmlString, e);", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r433563344", "createdAt": "2020-06-02T00:52:06Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -400,6 +419,21 @@ private String getSamlRequestQueryStringSignature(String samlRequestQueryString)\n         }\n     }\n \n+    private static Element getMetadataDOM(final String xmlString) throws IOException, SAXException, ParserConfigurationException {\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+\n+        DocumentBuilder builder = null;\n+        try {\n+            builder = factory.newDocumentBuilder();\n+            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n+            return doc.getDocumentElement();\n+        } catch (Exception e) {\n+            log.error(\"Error while parsing SAML Metadata Body \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 137}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21d0488499db45ae0a05efe6380f98ce20a7071c", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/21d0488499db45ae0a05efe6380f98ce20a7071c", "committedDate": "2020-06-02T01:36:08Z", "message": "Addressing review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "21d0488499db45ae0a05efe6380f98ce20a7071c", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/21d0488499db45ae0a05efe6380f98ce20a7071c", "committedDate": "2020-06-02T01:36:08Z", "message": "Addressing review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzA5OTQ5", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-422309949", "createdAt": "2020-06-02T02:58:16Z", "commit": {"oid": "21d0488499db45ae0a05efe6380f98ce20a7071c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzQyMzYx", "url": "https://github.com/opensearch-project/security/pull/477#pullrequestreview-422342361", "createdAt": "2020-06-02T04:58:26Z", "commit": {"oid": "21d0488499db45ae0a05efe6380f98ce20a7071c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2929, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}