{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNjk4Nzcx", "number": 635, "title": "Opendistro 0.9", "bodyText": "Backport changes\nAllowing SuperAdmin to delete hidden resources, so that tenantinfo api can have additional check for usertype with hidden resource\nTenantinfo api will check role of the user from security config, and if matched will allow to work with this api\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-08-05T23:39:54Z", "url": "https://github.com/opensearch-project/security/pull/635", "merged": true, "mergeCommit": {"oid": "caf7a77ee25f62635fbe365e110e1d5e1170f0f3"}, "closed": true, "closedAt": "2020-08-06T16:32:26Z", "author": {"login": "palashhedau"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8D8f4AH2gAyNDYzNjk4NzcxOjg5ZGEwNzVhZDU4MjNjMTg4YzQ0ZTdhYWFhZGMxOGFkNzAzYjI5Mzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8ToqegFqTQ2MjczNTgyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89da075ad5823c188c44e7aaaadc18ad703b2937", "author": {"user": {"login": "palashhedau", "name": "Palash Hedau"}}, "url": "https://github.com/opensearch-project/security/commit/89da075ad5823c188c44e7aaaadc18ad703b2937", "committedDate": "2020-08-05T23:37:20Z", "message": "Allowing SuperAdmin to delete hidden resources, so that tenantinfo api can have additional check for usertype with hidden resource\ncherry-pick from 301bce6979c6ad058a1dbe57758026646bd16fbb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "014f9715370dba55db694e6be6fd97d7d402b15b", "author": {"user": {"login": "palashhedau", "name": "Palash Hedau"}}, "url": "https://github.com/opensearch-project/security/commit/014f9715370dba55db694e6be6fd97d7d402b15b", "committedDate": "2020-08-06T00:07:43Z", "message": "Tenantinfo api will check role of the user from security config, and if matched will allow to work with this api\n\ncherry-pick from 5b3cea72737955b9d104221caedcd926ff42b2be"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fabbdd70247b554ffc6ebd7a406344a5a816cc76", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/fabbdd70247b554ffc6ebd7a406344a5a816cc76", "committedDate": "2020-08-06T05:30:42Z", "message": "Fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNjgxMjI4", "url": "https://github.com/opensearch-project/security/pull/635#pullrequestreview-462681228", "createdAt": "2020-08-06T16:29:46Z", "commit": {"oid": "fabbdd70247b554ffc6ebd7a406344a5a816cc76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzM1ODIz", "url": "https://github.com/opensearch-project/security/pull/635#pullrequestreview-462735823", "createdAt": "2020-08-06T17:34:51Z", "commit": {"oid": "fabbdd70247b554ffc6ebd7a406344a5a816cc76"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzozNDo1MVrOG89jAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzo0OTo1NFrOG8-D3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3NjEzMA==", "bodyText": "Something does not look correct here.\nMethod is \"isHiddenAndAccessible\" but it returns \"false\" when object is hidden and not super admin.\nThis is  too confusing.\nCan we name it instead  \"isAccessible\" or convert it to opposite \"isInaccessible\" or any other name that is less confusing.", "url": "https://github.com/opensearch-project/security/pull/635#discussion_r466576130", "createdAt": "2020-08-06T17:34:51Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java", "diffHunk": "@@ -581,4 +583,11 @@ protected boolean isReadOnlyAndAccessible(Settings settings, String name) {\n \t\treturn true;\n \t}\n \n+\tprotected boolean isHiddenAndAccessible(Settings settings, String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fabbdd70247b554ffc6ebd7a406344a5a816cc76"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU4NDU0MA==", "bodyText": "I just now realized that this check is done only by username. The role mapping can be  based on backend role as well. Is there any other way to make this check based on both criterias.", "url": "https://github.com/opensearch-project/security/pull/635#discussion_r466584540", "createdAt": "2020-08-06T17:49:54Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -127,7 +136,46 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        if (user == null) {\n+            return false;\n+        }\n+\n+        // check if the user is a kibanauser or super admin\n+        if (user.getName().equals(evaluator.kibanaServerUsername()) || adminDns.isAdmin(user)) {\n+            return true;\n+        }\n+\n+        // If user check failed by name and admin, check if the users belong to kibana opendistro role\n+        final Tuple<Long, Settings.Builder> rolesMapping = load(ConfigConstants.CONFIGNAME_ROLES_MAPPING, true);\n+        final Map<String, Object> rolesMappingConfiguration = Utils.convertJsonToxToStructuredMap(rolesMapping.v2().build());\n+\n+        // check if kibanaOpendistroRole is present in RolesMapping and if yes, check if user is a part of this role\n+        if (rolesMappingConfiguration != null) {\n+            String kibanaOpendistroRole = evaluator.kibanaOpendistroRole();\n+            if (Strings.isNullOrEmpty(kibanaOpendistroRole)) {\n+                return false;\n+            }\n+\n+            Map<String, Object> kibanaOpendistroRoleEntry = (Map<String, Object>) rolesMappingConfiguration.getOrDefault(kibanaOpendistroRole, null);\n+\n+            if (kibanaOpendistroRoleEntry != null) {\n+                ArrayList<String> kibanaOpendistroRoleUsers = (ArrayList<String>) kibanaOpendistroRoleEntry.get(\"users\");\n+                return kibanaOpendistroRoleUsers != null && kibanaOpendistroRoleUsers.contains(user.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fabbdd70247b554ffc6ebd7a406344a5a816cc76"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2852, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}