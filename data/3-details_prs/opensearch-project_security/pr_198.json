{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTcxNDAx", "number": 198, "title": "[Optimization] Implement faster version of implies type perm", "bodyText": "Code for checking permission match was very contrived and hidden a big performance problem we have spotted in our installation for log analytics.\nIn short getResolvedIndexPattern method is very costly as it goes to ElasticSearch Metadata store takes the tree map of all of indices/aliases and elaborately filters things out, then it proceeds to extract aliases and more.\nIn the original code this method is called for every matching index times every index pattern. In our system we have long series of rotated indices so it might be why we have triggered this problem.\nAnother optimization is to avoid creating temporary hash sets with complicated logic and translate the whole code to a combination of a few nested matchAll + matchAny algorithms.\nDoes it all matter ? Yes, in our case impliesTypePerm took about 16-17% of total CPU time, indexing of documents with Lucene (to compare) would use ~29% with the rest being GC and other thread pools. Now it's down to around 1.6%. Next obvious place to tackle is Wildcard matcher but with an order of magnitude lesser gain.\nP.S. I also removed some of commented code for dealing with types no sure if it's needed - just for reference to keep branches for older versions of ES in sync? If so I'll restore it.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-01-10T18:30:46Z", "url": "https://github.com/opensearch-project/security/pull/198", "merged": true, "mergeCommit": {"oid": "00da48ae557c00719cd5ed947d87e40344989c41"}, "closed": true, "closedAt": "2020-03-17T00:40:24Z", "author": {"login": "DmitryOlshansky"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGxn0SAH2gAyMzYxNTcxNDAxOjIzYWRjYmMwMWJlZTA3ZGEzZmM4YzE5ZWJiNThmN2I5NGRiYmYyOWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOXBXmAFqTM3NTY1NTExNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a", "committedDate": "2020-02-22T10:18:28Z", "message": "Implement faster version of implies type perm"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a", "committedDate": "2020-02-22T10:18:28Z", "message": "Implement faster version of implies type perm"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzQ4MTE2", "url": "https://github.com/opensearch-project/security/pull/198#pullrequestreview-366748116", "createdAt": "2020-02-28T23:50:47Z", "commit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzcxMDgw", "url": "https://github.com/opensearch-project/security/pull/198#pullrequestreview-366771080", "createdAt": "2020-02-29T02:41:05Z", "commit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMjo0MTowNVrOFwHM9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQwMjo0ODowNVrOFwHO3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5Mzk3Mw==", "bodyText": "can we rename it to resolvedRequestedIndices? (as these are indices requested from user.) It will help code more readable down into method where we added lot more complexity.", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r385993973", "createdAt": "2020-02-29T02:41:05Z", "author": {"login": "hardik-k-shah"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +936,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class ResolvedIndexPattern{\n+        public String[] pattern;\n+        public Set<String> perms;\n+        public ResolvedIndexPattern(String[] pattern, Set<String> perms) {\n+            this.pattern = pattern;\n+            this.perms = perms;\n         }\n+    }\n \n-        return matchingIndex.isEmpty();\n+    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n+                                           IndexNameExpressionResolver resolver, ClusterService cs) {\n+        Set<String> resolvedIndices = resolved.getAllIndices();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5NDA3Nw==", "bodyText": "Can we rename actions to requestedActions? (As these are actions requested by user and not coming from roles definition) It will help understanding code better.", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r385994077", "createdAt": "2020-02-29T02:42:35Z", "author": {"login": "hardik-k-shah"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +936,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class ResolvedIndexPattern{\n+        public String[] pattern;\n+        public Set<String> perms;\n+        public ResolvedIndexPattern(String[] pattern, Set<String> perms) {\n+            this.pattern = pattern;\n+            this.perms = perms;\n         }\n+    }\n \n-        return matchingIndex.isEmpty();\n+    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5NDE4Mw==", "bodyText": "Can we rename it ResolvedIndexPattern to indexPatternsAndPermissions ? (as it has patterns and permissions)", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r385994183", "createdAt": "2020-02-29T02:43:58Z", "author": {"login": "hardik-k-shah"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +936,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class ResolvedIndexPattern{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5NDQ2Mg==", "bodyText": "Can we rename resolvedIndexPatterns to indexPatternsAndPermsFromRole? (as these are resolved index patterns and permissions from role)", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r385994462", "createdAt": "2020-02-29T02:48:05Z", "author": {"login": "hardik-k-shah"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +936,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class ResolvedIndexPattern{\n+        public String[] pattern;\n+        public Set<String> perms;\n+        public ResolvedIndexPattern(String[] pattern, Set<String> perms) {\n+            this.pattern = pattern;\n+            this.perms = perms;\n         }\n+    }\n \n-        return matchingIndex.isEmpty();\n+    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n+                                           IndexNameExpressionResolver resolver, ClusterService cs) {\n+        Set<String> resolvedIndices = resolved.getAllIndices();\n+        List<ResolvedIndexPattern> resolvedIndexPatterns = ipatterns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23adcbc01bee07da3fc8c19ebb58f7b94dbbf29a"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "980ca990ff184b30655cf02aecc25901b4551257", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/980ca990ff184b30655cf02aecc25901b4551257", "committedDate": "2020-03-01T18:33:00Z", "message": "Address review comments - use more descriptive names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "980ca990ff184b30655cf02aecc25901b4551257", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/980ca990ff184b30655cf02aecc25901b4551257", "committedDate": "2020-03-01T18:33:00Z", "message": "Address review comments - use more descriptive names"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMjU4NDQz", "url": "https://github.com/opensearch-project/security/pull/198#pullrequestreview-372258443", "createdAt": "2020-03-10T19:29:30Z", "commit": {"oid": "980ca990ff184b30655cf02aecc25901b4551257"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxOToyOTozMFrOF0d4Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDowNDoxNFrOF0fABw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU1OTc4Nw==", "bodyText": "nit: declare class private", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r390559787", "createdAt": "2020-03-10T19:29:30Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +935,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class IndexPatternsAndPermissions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "980ca990ff184b30655cf02aecc25901b4551257"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU2MDkyMA==", "bodyText": "Declare both pattern and perms as private and final. Introduce public boolean matches(String index, String action).", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r390560920", "createdAt": "2020-03-10T19:31:44Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +935,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class IndexPatternsAndPermissions {\n+        public String[] pattern;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "980ca990ff184b30655cf02aecc25901b4551257"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU3NDM4Ng==", "bodyText": "consider using IndexPatternsAndPermissions[] instead of List<> and collect toArray().", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r390574386", "createdAt": "2020-03-10T19:57:26Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +935,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class IndexPatternsAndPermissions {\n+        public String[] pattern;\n+        public Set<String> perms;\n+        public IndexPatternsAndPermissions(String[] pattern, Set<String> perms) {\n+            this.pattern = pattern;\n+            this.perms = perms;\n         }\n+    }\n \n-        return matchingIndex.isEmpty();\n+    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] requestedActions,\n+                                           IndexNameExpressionResolver resolver, ClusterService cs) {\n+        Set<String> resolvedRequestedIndices = resolved.getAllIndices();\n+        List<IndexPatternsAndPermissions> indexPatternsAndPermissions = ipatterns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "980ca990ff184b30655cf02aecc25901b4551257"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU3ODE4Mw==", "bodyText": "rename rip to indexPatternsAndPermissions (or less preferable ipap).", "url": "https://github.com/opensearch-project/security/pull/198#discussion_r390578183", "createdAt": "2020-03-10T20:04:14Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/ConfigModelV7.java", "diffHunk": "@@ -936,38 +935,30 @@ private static String toQuotedCommaSeparatedString(final Set<String> roles) {\n         }));\n     }\n \n-    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] actions,\n-            IndexNameExpressionResolver resolver, ClusterService cs) {\n-        Set<String> matchingIndex = new HashSet<>(resolved.getAllIndices());\n-\n-        for (String in : resolved.getAllIndices()) {\n-            //find index patterns who are matching\n-            Set<String> matchingActions = new HashSet<>(Arrays.asList(actions));\n-            //Set<String> matchingTypes = new HashSet<>(resolved.getTypes(-));\n-            for (IndexPattern p : ipatterns) {\n-                if (WildcardMatcher.matchAny(p.getResolvedIndexPattern(user, resolver, cs), in)) {\n-                    //per resolved index per pattern\n-                    //for (String t : resolved.getTypes(-)) {\n-                        //for (TypePerm tp : p.typePerms) {\n-                            //if (WildcardMatcher.match(tp.typePattern, t)) {\n-                                //matchingTypes.remove(t);\n-                                for (String a : Arrays.asList(actions)) {\n-                                    if (WildcardMatcher.matchAny(p.perms, a)) {\n-                                        matchingActions.remove(a);\n-                                    }\n-                                }\n-                            //}\n-                        //}\n-                    //}\n-                }\n-            }\n-\n-            if (matchingActions.isEmpty() /*&& matchingTypes.isEmpty()*/) {\n-                matchingIndex.remove(in);\n-            }\n+    static final class IndexPatternsAndPermissions {\n+        public String[] pattern;\n+        public Set<String> perms;\n+        public IndexPatternsAndPermissions(String[] pattern, Set<String> perms) {\n+            this.pattern = pattern;\n+            this.perms = perms;\n         }\n+    }\n \n-        return matchingIndex.isEmpty();\n+    private static boolean impliesTypePerm(Set<IndexPattern> ipatterns, Resolved resolved, User user, String[] requestedActions,\n+                                           IndexNameExpressionResolver resolver, ClusterService cs) {\n+        Set<String> resolvedRequestedIndices = resolved.getAllIndices();\n+        List<IndexPatternsAndPermissions> indexPatternsAndPermissions = ipatterns\n+                .stream()\n+                .map(p -> new IndexPatternsAndPermissions(p.getResolvedIndexPattern(user, resolver, cs), p.perms))\n+                .collect(Collectors.toList());\n+        return resolvedRequestedIndices\n+                .stream()\n+                .allMatch(index ->\n+                        Arrays.stream(requestedActions).allMatch(action -> indexPatternsAndPermissions\n+                                .stream()\n+                                .anyMatch(rip -> WildcardMatcher.matchAny(rip.pattern, index) && WildcardMatcher.matchAny(rip.perms, action))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "980ca990ff184b30655cf02aecc25901b4551257"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f79c849504b7bf4fa780e29c200684bdeea7be1", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/7f79c849504b7bf4fa780e29c200684bdeea7be1", "committedDate": "2020-03-14T10:39:19Z", "message": "Another round of review comments, List -> Array"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODAzNDU1", "url": "https://github.com/opensearch-project/security/pull/198#pullrequestreview-374803455", "createdAt": "2020-03-15T14:22:12Z", "commit": {"oid": "7f79c849504b7bf4fa780e29c200684bdeea7be1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NjU0NzQ4", "url": "https://github.com/opensearch-project/security/pull/198#pullrequestreview-375654748", "createdAt": "2020-03-16T23:49:18Z", "commit": {"oid": "7f79c849504b7bf4fa780e29c200684bdeea7be1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NjU1MTE1", "url": "https://github.com/opensearch-project/security/pull/198#pullrequestreview-375655115", "createdAt": "2020-03-16T23:50:20Z", "commit": {"oid": "7f79c849504b7bf4fa780e29c200684bdeea7be1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2978, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}