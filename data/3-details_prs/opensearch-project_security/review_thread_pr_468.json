{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTMzMDQz", "number": 468, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTo1ODo0MVrOD-XwKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDowNjo0NlrOD-X6qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzI3NDY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/support/Base64Helper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTo1ODo0MVrOGYbtJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoxODoyOFrOGYcV8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3MjkzMg==", "bodyText": "Should this be a Set as well?", "url": "https://github.com/opensearch-project/security/pull/468#discussion_r428272932", "createdAt": "2020-05-20T19:58:41Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/support/Base64Helper.java", "diffHunk": "@@ -38,79 +44,123 @@\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.ObjectStreamClass;\n+import java.io.OutputStream;\n import java.io.Serializable;\n import java.net.InetAddress;\n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n-import java.util.ArrayList;\n+import java.security.PrivilegedAction;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n \n import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.common.Strings;\n \n-import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;\n import com.amazon.opendistroforelasticsearch.security.user.User;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n import com.google.common.io.BaseEncoding;\n \n public class Base64Helper {\n \n-    public static String serializeObject(final Serializable object) {\n+    private static final Set<Class<?>> SAFE_CLASSES = ImmutableSet.of(\n+        String.class,\n+        SocketAddress.class,\n+        InetSocketAddress.class,\n+        Pattern.class,\n+        User.class,\n+        SourceFieldsContext.class,\n+        LdapUser.class,\n+        SearchEntry.class,\n+        LdapEntry.class,\n+        AbstractLdapBean.class,\n+        LdapAttribute.class\n+    );\n+\n+    private static final List<Class<?>> SAFE_ASSIGNABLE_FROM_CLASSES = ImmutableList.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d25412bfe13e637ca82217405c66f5fa5b0595b"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4MzM3Nw==", "bodyText": "It can be List or Set as there is no lookup by key support required and elements needs to be unique. As it is statically populated and we can guarantee uniqueness, List or even Collection is sufficient.", "url": "https://github.com/opensearch-project/security/pull/468#discussion_r428283377", "createdAt": "2020-05-20T20:18:28Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/support/Base64Helper.java", "diffHunk": "@@ -38,79 +44,123 @@\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.ObjectStreamClass;\n+import java.io.OutputStream;\n import java.io.Serializable;\n import java.net.InetAddress;\n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n-import java.util.ArrayList;\n+import java.security.PrivilegedAction;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n \n import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.common.Strings;\n \n-import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;\n import com.amazon.opendistroforelasticsearch.security.user.User;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n import com.google.common.io.BaseEncoding;\n \n public class Base64Helper {\n \n-    public static String serializeObject(final Serializable object) {\n+    private static final Set<Class<?>> SAFE_CLASSES = ImmutableSet.of(\n+        String.class,\n+        SocketAddress.class,\n+        InetSocketAddress.class,\n+        Pattern.class,\n+        User.class,\n+        SourceFieldsContext.class,\n+        LdapUser.class,\n+        SearchEntry.class,\n+        LdapEntry.class,\n+        AbstractLdapBean.class,\n+        LdapAttribute.class\n+    );\n+\n+    private static final List<Class<?>> SAFE_ASSIGNABLE_FROM_CLASSES = ImmutableList.of(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3MjkzMg=="}, "originalCommit": {"oid": "5d25412bfe13e637ca82217405c66f5fa5b0595b"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzMwMTU1OnYy", "diffSide": "LEFT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/support/Base64Helper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDowNjo0NlrOGYb91w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMDoxMjoyMlrOGYcJlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3NzIwNw==", "bodyText": "Is IndexResolverReplacer.Resolved not needed or missed ?", "url": "https://github.com/opensearch-project/security/pull/468#discussion_r428277207", "createdAt": "2020-05-20T20:06:46Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/support/Base64Helper.java", "diffHunk": "@@ -38,79 +44,123 @@\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.ObjectStreamClass;\n+import java.io.OutputStream;\n import java.io.Serializable;\n import java.net.InetAddress;\n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n-import java.util.ArrayList;\n+import java.security.PrivilegedAction;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n \n import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.common.Strings;\n \n-import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d25412bfe13e637ca82217405c66f5fa5b0595b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI4MDIxNQ==", "bodyText": "It is not needed.", "url": "https://github.com/opensearch-project/security/pull/468#discussion_r428280215", "createdAt": "2020-05-20T20:12:22Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/support/Base64Helper.java", "diffHunk": "@@ -38,79 +44,123 @@\n import java.io.ObjectInputStream;\n import java.io.ObjectOutputStream;\n import java.io.ObjectStreamClass;\n+import java.io.OutputStream;\n import java.io.Serializable;\n import java.net.InetAddress;\n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n-import java.util.ArrayList;\n+import java.security.PrivilegedAction;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n \n import org.elasticsearch.ElasticsearchException;\n+import org.elasticsearch.common.Strings;\n \n-import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI3NzIwNw=="}, "originalCommit": {"oid": "5d25412bfe13e637ca82217405c66f5fa5b0595b"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2447, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}