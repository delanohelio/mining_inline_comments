{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjM5NTc4", "number": 304, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjowNjo1MFrODqHMSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDo1NDo0MVrODrZQAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDg0NjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjowNjo1MFrOF5r9Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwMToyNDo1NlrOF50mmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzMxNA==", "bodyText": "nit: use stream API:\n        return categories\n                .stream()\n                .filter(Objects::nonNull)\n                .map(String::toUpperCase)\n                .map(category -> {\n                    try {\n                        return AuditCategory.valueOf(category);\n                    } catch (IllegalArgumentException ex) {\n                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());\n                        return null;\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toCollection(() -> set));", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396033314", "createdAt": "2020-03-21T22:06:50Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NDg2MA==", "bodyText": "I ve considered using this but i felt it was not efficient to loop through the list twice again to filter and convert to set. I would prefer more traditional approach for doing this (removing stream api itself). What do you think?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396144860", "createdAt": "2020-03-22T21:48:06Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzMxNA=="}, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE3MDAzNg==", "bodyText": "There will be no additional iterations over the stream (the only one is when it is consumed in the collect()), so it would be as efficient as forEach().", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396170036", "createdAt": "2020-03-23T00:46:09Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzMxNA=="}, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE3NTAwMA==", "bodyText": "Yes. I thought of ignoring the second loop.\nI have updated to use stream api", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396175000", "createdAt": "2020-03-23T01:24:56Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzMxNA=="}, "originalCommit": null, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDg0Nzk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "isResolved": true, "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjoxMDoxOFrOF5r9-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTo1MTowOFrOF6hyhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ==", "bodyText": "I am not sure that it is sufficient to log an error message and continue. It is possible that a category has a typo that causes parsing exception and it may go unnoticed (lost in log files).", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396033531", "createdAt": "2020-03-21T22:10:18Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0NTE1NQ==", "bodyText": "I believe if we can recover from some error, then complain and recover. I hope error logs are not that casually ignored.\nIn this case, if incorrect category is provided, simply complain and recover from it.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396145155", "createdAt": "2020-03-22T21:51:04Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE3MDk5Nw==", "bodyText": "Imagine that the AuditCategory is constructed using a call to REST API from curl and somebody mistypes a category name. The return code of REST API would be 200 and the user who called REST API would assume that it succeeded and even not bother to look at the error log.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396170997", "createdAt": "2020-03-23T00:54:19Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE3MzA1Ng==", "bodyText": "That should directly return a bad request if you are trying to make a log message for an incorrect category type.\nWe can try to convert to Enum and then throw error in the validator of that rest api handler.  Not sure if we should handle it here.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396173056", "createdAt": "2020-03-23T01:10:49Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0MTYyNg==", "bodyText": "In the example, I refer to constructing EnumSet<AuditCategory> from a string passed as REST API parameter, not to constructing AuditMessage with an invalid AuditCategory.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396541626", "createdAt": "2020-03-23T15:33:24Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY1ODY4NQ==", "bodyText": "Alright. Do you want to throw exception here instead ? Or\nUse something like:\n        return categories\n                .stream()\n                .filter(Objects::nonNull)\n                .map(String::toUpperCase)\n                .map(AuditCategory::valueOf)\n                .collect(Collectors.toCollection(() -> set));\n\nAnd let java throw the IllegalArgumentException ?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396658685", "createdAt": "2020-03-23T18:16:16Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyNjQwMA==", "bodyText": "This way, it will throw exception and prevent the service from starting up if elasticsearch.yml is configured incorrectly and can also assert for exceptions in REST api validators and throw bad request appropriately.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396826400", "createdAt": "2020-03-23T23:49:15Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyODk1MA==", "bodyText": "It is OK to rely on valueOf() to throw an IllegalArgumentException or to convert it to a checked exception. I am slightly more inclined to IllegalArgumentException.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396828950", "createdAt": "2020-03-23T23:57:42Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzMDI2MQ==", "bodyText": "AuditCategory::valueOf will throw IllegalArgumentException if cannot be converted to enum. Am I missing something?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396830261", "createdAt": "2020-03-24T00:02:25Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNTQ0NA==", "bodyText": "@vrozov The current behavior is to actually post error and ignore invalid enum and have some tests to do so.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396835444", "createdAt": "2020-03-24T00:20:40Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg0NDAyMw==", "bodyText": "AuditCategory::valueOf will throw IllegalArgumentException if cannot be converted to enum. Am I missing something?\n\nNo. I was referring to the same.\n\nThe current behavior is to actually post error and ignore invalid enum and have some tests to do so\n\nIMO, there is a problem with an approach that tries to correct an invalid input. At a minimum, AuditCategory should allow a caller to get the list of categories that were not parsed or throw an exception.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396844023", "createdAt": "2020-03-24T00:51:48Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg0NTcyNQ==", "bodyText": "Can we have this when we need it?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396845725", "createdAt": "2020-03-24T00:57:34Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1NDEwNQ==", "bodyText": "What is your concern? Changing tests?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396854105", "createdAt": "2020-03-24T01:29:46Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1NzcwMA==", "bodyText": "I meant to say, lets do it when we have a use-case ready. For sure, this will come up in future and let's target it that time. Maybe we will have more requirements.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396857700", "createdAt": "2020-03-24T01:44:03Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3OTU1NA==", "bodyText": "Could you explain the rationale/use-case for including this now? I think we are not on the same page. Where and what do you want do with string values that cannot be parsed ?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396879554", "createdAt": "2020-03-24T03:12:28Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg4NjA5Mg==", "bodyText": "The current behavior is to ignore an invalid value and continue. The invalid value may come from a configuration file (the only way supported now) or from an API call with a request to update/change configuration (in the future). In both cases, likely a user (system admin) made a mistake and simply mistyped valid  audit category name that the user (system admin) wants to be in effect. How quickly the user (system admin) may realize that the system ignored or partially ignored the input is questionable.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396886092", "createdAt": "2020-03-24T03:40:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5MzUzMg==", "bodyText": "Note that the original code provided a better hint in the logging message of what setting has an unknown/invalid category. It may be good to keep it the same way should you decide to keep the existing behavior.  It is not necessary to log the InvalidArgumentException message.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396893532", "createdAt": "2020-03-24T04:14:45Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNTMzMg==", "bodyText": "I will revert to throwing exception and will update tests to check for exception.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396915332", "createdAt": "2020-03-24T05:51:08Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ=="}, "originalCommit": null, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDg1MjQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjoxOTowNVrOF5sAQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjoxOTowNVrOF5sAQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDExMw==", "bodyText": "Consider using Iterable or Collection instead of a List. There is no need to know size(), so Iterable (preferred) or Collection should be sufficient.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396034113", "createdAt": "2020-03-21T22:19:05Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTk5MTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDoyMzo1NFrOF6c98A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDoyMzo1NFrOF6c98A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNjMzNg==", "bodyText": "Consider making it private static in AuditCategory.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396836336", "createdAt": "2020-03-24T00:23:54Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,27 +128,17 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n+        final List<String> defaultDisabledCategories = Arrays.asList(AuditCategory.AUTHENTICATED.toString(), AuditCategory.GRANTED_PRIVILEGES.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDAwMDA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "isResolved": false, "comments": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDoyOToyNVrOF6dDvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTowODoxOFrOF7ftFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ==", "bodyText": "Consider moving to AuditCategory.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396837821", "createdAt": "2020-03-24T00:29:25Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg0MjM1Nw==", "bodyText": "This is generic reading of config values and feel it should not be part of AuditCategory. Will be moving this to AuditConfig class", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396842357", "createdAt": "2020-03-24T00:45:29Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1NjIyMw==", "bodyText": "AuditConfig or AuditCategory, it does not belong to AbstractAuditLog, IMO.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396856223", "createdAt": "2020-03-24T01:38:07Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg1ODU4MA==", "bodyText": "I plan to refactor these audit configurations into a separate AuditConfig class to represent all audit log configuration (basically abstracting it out of AbstractAuditLog).\nLet me create a milestone in Github for having better clarity of changes I want to make.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396858580", "createdAt": "2020-03-24T01:47:04Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NzQ2NA==", "bodyText": "As this is a new function, it will be better to put it to AuditCategory compared to AbstractAuditLog. If necessary, please add TODO comment.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396867464", "createdAt": "2020-03-24T02:23:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NjM1OQ==", "bodyText": "getConfigList is something that will be reused by other configs like ignoredAuditUsers, ignoredComplianceUsersForRead, ignoredComplianceUsersForWrite. And they all should go into an AuditConfig class.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396876359", "createdAt": "2020-03-24T02:58:47Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3Njg1Nw==", "bodyText": "This is going to be fixed with #306", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396876857", "createdAt": "2020-03-24T03:00:55Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5MjQ3MA==", "bodyText": "Can you introduce AuditConfig class in this PR with a single method and extend it in #306?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396892470", "createdAt": "2020-03-24T04:09:27Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwODMwMQ==", "bodyText": "Why add here and not in #306 ?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396908301", "createdAt": "2020-03-24T05:23:22Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNTUxNA==", "bodyText": "It is already used in this PR.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396915514", "createdAt": "2020-03-24T05:51:49Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNjIxOQ==", "bodyText": "Sorry I m confused. What is already used in this PR?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396916219", "createdAt": "2020-03-24T05:54:28Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0ODgzMQ==", "bodyText": "getConfigList() method", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397348831", "createdAt": "2020-03-24T17:50:17Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3MTQ4Nw==", "bodyText": "Are you saying to include all AuditConfig changes in this PR itself ?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397371487", "createdAt": "2020-03-24T18:26:08Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3Njg5Mw==", "bodyText": "#306 should now have only #323 and #312 changes if that what you are asking for", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397376893", "createdAt": "2020-03-24T18:34:56Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3ODU4MQ==", "bodyText": "No, only getConfigList(). Note that I have not looked at the other PR yet.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397378581", "createdAt": "2020-03-24T18:37:50Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM3OTYxMA==", "bodyText": "What is the value in adding just that in this PR? Am I missing something?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397379610", "createdAt": "2020-03-24T18:39:36Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1OTY0MQ==", "bodyText": "It will finalize this change and will not require more changes in the follow-up PRs.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397459641", "createdAt": "2020-03-24T21:03:56Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NzQ2MA==", "bodyText": "I don't think we should assume any change is finalized and will not undergo more changes in the future PRs.\nThis function is just pulled out of existing code in AbstractAuditLog class into a method.\nI don't think it's a good idea to add incomplete AuditConfig just for not reviewing this change again as the new diff will have changes.\nI would recommend reviewing #306 instead which is a more complete solution of what you are looking for AuditConfig + AuditCategory.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397467460", "createdAt": "2020-03-24T21:19:11Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNDgzMw==", "bodyText": "Once getConfigList() is moved to AuditConfig what other changes do you plan to apply to it?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397504833", "createdAt": "2020-03-24T22:40:24Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwODAyOQ==", "bodyText": "It may not have any new change but I m not seeing any value in adding incomplete AuditConfig class here.\nI feel I m missing your point. Are you saying getConfigList does not need to reviewed again?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397508029", "createdAt": "2020-03-24T22:48:34Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzMzU3Ng==", "bodyText": "It may not have any new change but I m not seeing any value in adding incomplete AuditConfig class here.\n\nAuditConfig is likely to evolve over time, so it will never be complete.\n\nI feel I m missing your point. Are you saying getConfigList does not need to reviewed again?\n\nIt may require a review in case the follow-up PRs need to introduce other changes to getConfigList() that are not necessary for this PR, but it will be easy to review. In addition, it will also simplify effort if somebody needs to look at git history for the function.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397533576", "createdAt": "2020-03-25T00:01:07Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDI4MA==", "bodyText": "Since you are reviewing #306  we can close this PR", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397544280", "createdAt": "2020-03-25T00:36:47Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NTc2OQ==", "bodyText": "Please don't close this PR. It is almost ready to go.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397545769", "createdAt": "2020-03-25T00:42:12Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU1ODkxNA==", "bodyText": "#306 should have the change you were looking with getConfigList()", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397558914", "createdAt": "2020-03-25T01:29:20Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTIwOA==", "bodyText": "I'd prefer not to squash commits in #306, so #306 won't address my concern.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397565208", "createdAt": "2020-03-25T01:53:02Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU2NTgxMQ==", "bodyText": "So confused. What is your concern ? and why not squash commits?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397565811", "createdAt": "2020-03-25T01:55:10Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3MDM1Nw==", "bodyText": "Doesn't #306 address your concern with getConfigList() ?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397570357", "createdAt": "2020-03-25T02:12:52Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3MzUzNw==", "bodyText": "I'd prefer to keep AuditCategory changes separate from other changes introduced in #306.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397573537", "createdAt": "2020-03-25T02:24:49Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3NDY1NQ==", "bodyText": "It is the same commit that is cherry-picked 0cb732f . So changes are as it is", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397574655", "createdAt": "2020-03-25T02:29:06Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5Mzg0MQ==", "bodyText": "Without squashing all commits together #306 does not address my concern regarding getConfigList() and I'd prefer not to squash commits to keep AuditCategory changes separate from other changes introduced in #306.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397593841", "createdAt": "2020-03-25T03:44:36Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5NzkyOQ==", "bodyText": "You concern of getConfigList() is resolved with #306 .\nWhy do you prefer to keep this change separate. How does it matter ?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397597929", "createdAt": "2020-03-25T04:03:09Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5OTM3MA==", "bodyText": "If you are worried about any git history and having an atomic merge step (auditconfig with getConfigList), then going forward with #306 is the right way.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397599370", "createdAt": "2020-03-25T04:09:52Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxMzI5MQ==", "bodyText": "With 2 separate commits, it will be much easier to understand what was changed and why and how changes are related for anyone who is not involved in the current PR in the future.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397613291", "createdAt": "2020-03-25T05:13:24Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYxNDczOQ==", "bodyText": "I think you also agree that getConfigList() does not belong to AbstractAuditLog and it should be part of AuditConfig class. Should this method previously exist as part of AbstractAuditLog it would be OK to move it in subsequent PR. As it is a newly introduced method, I would prefer to put it in the right place when it is introduced.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397614739", "createdAt": "2020-03-25T05:19:53Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNzk2MA==", "bodyText": "I agree getConfigList() belongs to AuditConfig class and thats exactly what #306 does.\nAt the same time, I dont believe this must exist in some incomplete class that may be introduced in a future PR.\nSquashing the commits of #306 would look like everything was included in a single PR/commit keeping git history clean.\nWell, since this PR is not merged yet, this is not the right place when it was introduced and the right place would be #306", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397627960", "createdAt": "2020-03-25T06:13:01Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkyOTc1MA==", "bodyText": "Squashing all commits in #306 would create a single commit with a large number of changes that logically can be split into two commits. This will not only mess up the git history but more importantly, it will create a huge commit that will be harder to understand.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397929750", "createdAt": "2020-03-25T15:08:18Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ=="}, "originalCommit": null, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDAwNDM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDozMTo1NFrOF6dGUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDozMTo1NFrOF6dGUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzODQ4MA==", "bodyText": "No need to create new ArrayList. Use original return from settings.getAsList(key, defaultList) and Collections.emptyList() instead of clearing a new one.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396838480", "createdAt": "2020-03-24T00:31:54Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,\n+                                              final String key,\n+                                              final List<String> defaultList) {\n+        List<String> list = new ArrayList<>(settings.getAsList(key, defaultList));\n+        if (list.size() == 1 && \"NONE\".equals(list.get(0))) {\n+            list.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDMzMTMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowODowNlrOF7HqJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDozOToxNVrOF7IOIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTc4Mg==", "bodyText": "My understanding is that not all AuditCategory applies to Rest or Transport categories. It may be good to log a warning if an admin tries to disable auditing for a category that does not apply. Note that this case is different from an invalid category.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397535782", "createdAt": "2020-03-25T00:08:06Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,27 +130,15 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n-\n-        if(disabledRestCategories.size() == 1 && \"NONE\".equals(disabledRestCategories.get(0))) {\n-            disabledRestCategories.clear();\n-        }\n-\n-        if (disabledRestCategories.size() > 0) {\n-            log.info(\"Configured categories on rest layer to ignore: {}\", disabledRestCategories);\n-        }\n+        disabledRestCategories = AuditCategory.parse(getConfigList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDk5Mg==", "bodyText": "Maybe raise another issue for this?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397544992", "createdAt": "2020-03-25T00:39:15Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,27 +130,15 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n-\n-        if(disabledRestCategories.size() == 1 && \"NONE\".equals(disabledRestCategories.get(0))) {\n-            disabledRestCategories.clear();\n-        }\n-\n-        if (disabledRestCategories.size() > 0) {\n-            log.info(\"Configured categories on rest layer to ignore: {}\", disabledRestCategories);\n-        }\n+        disabledRestCategories = AuditCategory.parse(getConfigList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTc4Mg=="}, "originalCommit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDM0Njg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxNToxNVrOF7HzHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDo1Mzo0N1rOF7IeIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzODA3OQ==", "bodyText": "I'd recommend start deprecating \"NONE\" as a setting and log a warning. It is easy to use \"none\" instead of \"NONE\" especially that category names are case-insensitive.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397538079", "createdAt": "2020-03-25T00:15:15Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,\n+                                              final String key,\n+                                              final List<String> defaultList) {\n+        List<String> list = settings.getAsList(key, defaultList);\n+        if (list.size() == 1 && \"NONE\".equals(list.get(0))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NTE3Mw==", "bodyText": "Then it should complain and throw exception. It is documented to use NONE https://opendistro.github.io/for-elasticsearch-docs/docs/security-audit-logs/#exclude-categories", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397545173", "createdAt": "2020-03-25T00:39:55Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,\n+                                              final String key,\n+                                              final List<String> defaultList) {\n+        List<String> list = settings.getAsList(key, defaultList);\n+        if (list.size() == 1 && \"NONE\".equals(list.get(0))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzODA3OQ=="}, "originalCommit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0OTA5MA==", "bodyText": "OK, I'll file an issue and see what others think.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397549090", "createdAt": "2020-03-25T00:53:47Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,\n+                                              final String key,\n+                                              final List<String> defaultList) {\n+        List<String> list = settings.getAsList(key, defaultList);\n+        if (list.size() == 1 && \"NONE\".equals(list.get(0))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzODA3OQ=="}, "originalCommit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODI3MjA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDo0OTo1NVrOF7twzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMjoxMzo1MVrOF7wXGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2MDA3OA==", "bodyText": "nit: as you are constructing an empty EnumSet directly here, add disabledRestCategoriesList.isEmpty() condition.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398160078", "createdAt": "2020-03-25T20:49:55Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,25 +130,27 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n+        final List<String> disabledRestCategoriesList = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, DEFAULT_DISABLED_CATEGORIES);\n \n-        if(disabledRestCategories.size() == 1 && \"NONE\".equals(disabledRestCategories.get(0))) {\n-            disabledRestCategories.clear();\n+        if (disabledRestCategoriesList.size() == 1 && \"NONE\".equalsIgnoreCase(disabledRestCategoriesList.get(0))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4NjI3OA==", "bodyText": "Do you mean disabledRestCategoriesList.isEmpty() || disabledRestCategoriesList.size() == 1 && \"NONE\".equalsIgnoreCase(disabledRestCategoriesList.get(0)) ?\nIs it not redundant? as it will go to else and build an empty set.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398186278", "createdAt": "2020-03-25T21:38:36Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,25 +130,27 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n+        final List<String> disabledRestCategoriesList = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, DEFAULT_DISABLED_CATEGORIES);\n \n-        if(disabledRestCategories.size() == 1 && \"NONE\".equals(disabledRestCategories.get(0))) {\n-            disabledRestCategories.clear();\n+        if (disabledRestCategoriesList.size() == 1 && \"NONE\".equalsIgnoreCase(disabledRestCategoriesList.get(0))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2MDA3OA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwMjY0OQ==", "bodyText": "It is not redundant, but, yes, the end result is the same. Question is if you short-circuit call to parse() when disabledRestCategoriesList is implicitly empty, why is it not short-circuited when it is explicitly empty?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398202649", "createdAt": "2020-03-25T22:13:51Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,25 +130,27 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n+        final List<String> disabledRestCategoriesList = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, DEFAULT_DISABLED_CATEGORIES);\n \n-        if(disabledRestCategories.size() == 1 && \"NONE\".equals(disabledRestCategories.get(0))) {\n-            disabledRestCategories.clear();\n+        if (disabledRestCategoriesList.size() == 1 && \"NONE\".equalsIgnoreCase(disabledRestCategoriesList.get(0))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2MDA3OA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODI5MDU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDo1NDo0MVrOF7t8Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzo0NDowNlrOF8S4yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA==", "bodyText": "Is it necessary to allow null? Should it check for an empty collection and throw NullPointerException?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398162950", "createdAt": "2020-03-25T20:54:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4NjkzMQ==", "bodyText": "I don't think so. As far as this parse is concerned, absence of values in input (whether null || empty) should mean no output categories.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398186931", "createdAt": "2020-03-25T21:39:55Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIwNzU1NQ==", "bodyText": "While you may handle null the same way as an empty collection, the parse() function itself follows \"prefer empty collection over null\" and converts null to an empty set.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398207555", "createdAt": "2020-03-25T22:25:10Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM0MDk1OQ==", "bodyText": "I didnt quite follow you.\nIf we have an input list of nulls, since we are filtering non-nulls in the stream we would return empty set.\nThis is what I meant by absence of values and we are return an empty set. [null, null...] = null => return empty set.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398340959", "createdAt": "2020-03-26T06:24:50Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MzkwNA==", "bodyText": "What if the collection categories itself is null? When I referred to \"check for an empty collection\" I meant instead of if (categories == null), check if (categories.isEmpty()).\nYou brought a good question, how null should be handled inside the collection. IMO, that is a programming mistake to pass null inside the categories collection.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398663904", "createdAt": "2020-03-26T15:28:28Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc0ODgyOA==", "bodyText": "Are you saying to short-circuit if (categories == null || categories.isEmpty())  ?\nI mean to say, absence of values whether categories is null or empty or list of only null strings should all mean the same thing -> empty category set.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398748828", "createdAt": "2020-03-26T17:17:27Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1NzE0Mg==", "bodyText": "@vrozov If you could tell exactly the change you are looking for, i could can do that and move on. I don't want to be blocked with such issues.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398757142", "createdAt": "2020-03-26T17:28:48Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc2ODMzMQ==", "bodyText": "My suggestion is not to allow null at all, whether the collection itself is null or it contains null. Change if (categores == null) to if (categories.isEmpty()) and remove the filter.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398768331", "createdAt": "2020-03-26T17:44:06Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA=="}, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2541, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}