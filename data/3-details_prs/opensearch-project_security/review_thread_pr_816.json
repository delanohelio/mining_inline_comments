{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMDE1Mjc2", "number": 816, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1ODozNVrOEzcJIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxNjo0M1rOEz9xmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzczOTIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1ODozNVrOHqqVqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNTo0NDo1NFrOHrB-qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTkxMw==", "bodyText": "Any tests?", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r514495913", "createdAt": "2020-10-29T18:58:35Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**\n+         * Method that gets invoked when \"password\" field is present in serialized JSON.\n+         * Serialized JSON is expected not to have \"password\" field or have an empty password.\n+         * Hence, password field should not be set in InternalUserV6 object in deserialization.\n+         */\n+        public void setPassword(String password){}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4MTYxNg==", "bodyText": "Test that deserialization is successful even with a JSON containing password field. I believe it is currently throwing an exception.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r514581616", "createdAt": "2020-10-29T21:34:34Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**\n+         * Method that gets invoked when \"password\" field is present in serialized JSON.\n+         * Serialized JSON is expected not to have \"password\" field or have an empty password.\n+         * Hence, password field should not be set in InternalUserV6 object in deserialization.\n+         */\n+        public void setPassword(String password){}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTkxMw=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDg4MzI0MQ==", "bodyText": "Added tests to test the entire migration process with internal users with empty passwords.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r514883241", "createdAt": "2020-10-30T05:44:54Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**\n+         * Method that gets invoked when \"password\" field is present in serialized JSON.\n+         * Serialized JSON is expected not to have \"password\" field or have an empty password.\n+         * Hence, password field should not be set in InternalUserV6 object in deserialization.\n+         */\n+        public void setPassword(String password){}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NTkxMw=="}, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODgwMTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTowMDo1OFrOHrcYog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMjoyMDo0M1rOHrkOPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA==", "bodyText": "nit: add empty line before and after.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515315874", "createdAt": "2020-10-30T19:00:58Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3Nzc4MQ==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515377781", "createdAt": "2020-10-30T20:52:42Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0Mzg2Nw==", "bodyText": "Sorry, by \"after\" I mean to add empty line after the method, so one method is separated from another.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515443867", "createdAt": "2020-10-31T02:15:27Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0NDI4NA==", "bodyText": "Delete '/** .. */comment (it uses doc style comment, and it should not be doc). It should be sufficient to have a single line comment insidesetPassword()` method body.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515444284", "createdAt": "2020-10-31T02:20:43Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNTg3NA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODk3OTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1Mjo1MlrOHreH_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1Mjo1MlrOHreH_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDM4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public void setPassword(String password){}\n          \n          \n            \n                    public void setPassword(String password){\n          \n          \n            \n                      // no-op setter. Due to a bug in 6.x, empty \"password\" may be saved to the internalusers doc. Ignore it.\n          \n          \n            \n                    }", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515344380", "createdAt": "2020-10-30T19:52:52Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v6/InternalUserV6.java", "diffHunk": "@@ -79,6 +79,12 @@ public String getHash() {\n         public void setHash(String hash) {\n             this.hash = hash;\n         }\n+        /**\n+         * Method that gets invoked when \"password\" field is present in serialized JSON.\n+         * Serialized JSON is expected not to have \"password\" field or have an empty password.\n+         * Hence, password field should not be set in InternalUserV6 object in deserialization.\n+         */\n+        public void setPassword(String password){}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODk4MjA5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NDowN1rOHreJ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDo1Mjo1MlrOHrgKvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDg5NA==", "bodyText": "Is it necessary to hardcode base64 encoded string? Can it be programmatically encoded for readability?", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515344894", "createdAt": "2020-10-30T19:54:07Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +136,29 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+        \n+        String body = \"{\\\"internalusers\\\":\\\"eyJsb2dzdGFzaCI6eyJoYXNoIjoiIiwicm9sZXMiOlsibG9nc3Rhc2giXX0sIlN0ZXBoZW5fMTIzIjp7Imhhc2giOiIiLCAicGFzc3dvcmQiOiIifSwic25hcHNob3RyZXN0b3JlIjp7Imhhc2giOiIiLCJyb2xlcyI6WyJzbmFwc2hvdHJlc3RvcmUiXX0sImFkbWluIjp7ImF0dHJpYnV0ZXMiOnsiYXR0cmlidXRlMSI6InZhbHVlMSIsImF0dHJpYnV0ZTMiOiJ2YWx1ZTMiLCJhdHRyaWJ1dGUyIjoidmFsdWUyIn0sInJlYWRvbmx5IjoidHJ1ZSIsImhhc2giOiIiLCJyb2xlcyI6WyJhZG1pbiJdfSwia2liYW5hc2VydmVyIjp7InJlYWRvbmx5IjoidHJ1ZSIsImhhc2giOiIifSwia2liYW5hcm8iOnsiaGFzaCI6IiIsInJvbGVzIjpbImtpYmFuYXVzZXIiLCJyZWFkYWxsIl19LCJyZWFkYWxsIjp7Imhhc2giOiIiLCJyb2xlcyI6WyJyZWFkYWxsIl19fQoK\\\"}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3Nzg1Mg==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515377852", "createdAt": "2020-10-30T20:52:52Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +136,29 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+        \n+        String body = \"{\\\"internalusers\\\":\\\"eyJsb2dzdGFzaCI6eyJoYXNoIjoiIiwicm9sZXMiOlsibG9nc3Rhc2giXX0sIlN0ZXBoZW5fMTIzIjp7Imhhc2giOiIiLCAicGFzc3dvcmQiOiIifSwic25hcHNob3RyZXN0b3JlIjp7Imhhc2giOiIiLCJyb2xlcyI6WyJzbmFwc2hvdHJlc3RvcmUiXX0sImFkbWluIjp7ImF0dHJpYnV0ZXMiOnsiYXR0cmlidXRlMSI6InZhbHVlMSIsImF0dHJpYnV0ZTMiOiJ2YWx1ZTMiLCJhdHRyaWJ1dGUyIjoidmFsdWUyIn0sInJlYWRvbmx5IjoidHJ1ZSIsImhhc2giOiIiLCJyb2xlcyI6WyJhZG1pbiJdfSwia2liYW5hc2VydmVyIjp7InJlYWRvbmx5IjoidHJ1ZSIsImhhc2giOiIifSwia2liYW5hcm8iOnsiaGFzaCI6IiIsInJvbGVzIjpbImtpYmFuYXVzZXIiLCJyZWFkYWxsIl19LCJyZWFkYWxsIjp7Imhhc2giOiIiLCJyb2xlcyI6WyJyZWFkYWxsIl19fQoK\\\"}\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDg5NA=="}, "originalCommit": null, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTI0OTUzOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMToxNjo0M1rOHrgtpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwMTozNTowM1rOHrj-sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA==", "bodyText": "nit: include only whats relevant for the test", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515386790", "createdAt": "2020-10-30T21:16:43Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +137,31 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+\n+        String internalUsersWithEmptyPassword = \"{\\\"logstash\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"logstash\\\"]},\\\"Stephen_123\\\":{\\\"hash\\\":\\\"\\\", \\\"password\\\":\\\"\\\"},\\\"snapshotrestore\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"snapshotrestore\\\"]},\\\"admin\\\":{\\\"attributes\\\":{\\\"attribute1\\\":\\\"value1\\\",\\\"attribute3\\\":\\\"value3\\\",\\\"attribute2\\\":\\\"value2\\\"},\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"admin\\\"]},\\\"kibanaserver\\\":{\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\"},\\\"kibanaro\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"kibanauser\\\",\\\"readall\\\"]},\\\"readall\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"readall\\\"]}}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM5MDg4Nw==", "bodyText": "I was thinking of that too. But I'd like to keep it consistent with what API does as much as possible. Therefore, I kept the default internalusers, and just created a new internal user via API and add an empty password manually. I didn't deleted anything else.", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515390887", "createdAt": "2020-10-30T21:28:41Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +137,31 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+\n+        String internalUsersWithEmptyPassword = \"{\\\"logstash\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"logstash\\\"]},\\\"Stephen_123\\\":{\\\"hash\\\":\\\"\\\", \\\"password\\\":\\\"\\\"},\\\"snapshotrestore\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"snapshotrestore\\\"]},\\\"admin\\\":{\\\"attributes\\\":{\\\"attribute1\\\":\\\"value1\\\",\\\"attribute3\\\":\\\"value3\\\",\\\"attribute2\\\":\\\"value2\\\"},\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"admin\\\"]},\\\"kibanaserver\\\":{\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\"},\\\"kibanaro\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"kibanauser\\\",\\\"readall\\\"]},\\\"readall\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"readall\\\"]}}\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQzMDA3Ng==", "bodyText": "FYI, default users are shipped only with default configuration. They are not necessary to be there for any consistency", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515430076", "createdAt": "2020-10-31T00:11:10Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +137,31 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+\n+        String internalUsersWithEmptyPassword = \"{\\\"logstash\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"logstash\\\"]},\\\"Stephen_123\\\":{\\\"hash\\\":\\\"\\\", \\\"password\\\":\\\"\\\"},\\\"snapshotrestore\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"snapshotrestore\\\"]},\\\"admin\\\":{\\\"attributes\\\":{\\\"attribute1\\\":\\\"value1\\\",\\\"attribute3\\\":\\\"value3\\\",\\\"attribute2\\\":\\\"value2\\\"},\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"admin\\\"]},\\\"kibanaserver\\\":{\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\"},\\\"kibanaro\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"kibanauser\\\",\\\"readall\\\"]},\\\"readall\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"readall\\\"]}}\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ0MDMwNg==", "bodyText": "Ok. Good to know that!", "url": "https://github.com/opensearch-project/security/pull/816#discussion_r515440306", "createdAt": "2020-10-31T01:35:03Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/MigrationTests.java", "diffHunk": "@@ -137,6 +137,31 @@ public void testSecurityValidateWithInvalidConfig() throws Exception {\n \n     }\n \n+    @Test\n+    public void testSecurityMigrateWithEmptyPassword() throws Exception{\n+        final Settings settings = Settings.builder().put(SSLConfigConstants.OPENDISTRO_SECURITY_SSL_HTTP_CLIENTAUTH_MODE, \"REQUIRE\")\n+                .put(\"opendistro_security.ssl.http.enabled\", true)\n+                .put(\"opendistro_security.ssl.http.keystore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/node-0-keystore.jks\"))\n+                .put(\"opendistro_security.ssl.http.truststore_filepath\", FileHelper.getAbsoluteFilePathFromClassPath(\"migration/truststore.jks\"))\n+                .put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_ACCEPT_INVALID_CONFIG, true)\n+                .build();\n+        setup(Settings.EMPTY, new DynamicSecurityConfig().setSecurityInternalUsers(\"internal_users2.yml\").setLegacy(), settings, true);\n+        final RestHelper rh = restHelper(); //ssl resthelper\n+\n+        rh.enableHTTPClientSSL = true;\n+        rh.trustHTTPServerCertificate = true;\n+        rh.sendAdminCertificate = true;\n+        rh.keystore = \"kirk-keystore.jks\";\n+\n+        String internalUsersWithEmptyPassword = \"{\\\"logstash\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"logstash\\\"]},\\\"Stephen_123\\\":{\\\"hash\\\":\\\"\\\", \\\"password\\\":\\\"\\\"},\\\"snapshotrestore\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"snapshotrestore\\\"]},\\\"admin\\\":{\\\"attributes\\\":{\\\"attribute1\\\":\\\"value1\\\",\\\"attribute3\\\":\\\"value3\\\",\\\"attribute2\\\":\\\"value2\\\"},\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"admin\\\"]},\\\"kibanaserver\\\":{\\\"readonly\\\":\\\"true\\\",\\\"hash\\\":\\\"\\\"},\\\"kibanaro\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"kibanauser\\\",\\\"readall\\\"]},\\\"readall\\\":{\\\"hash\\\":\\\"\\\",\\\"roles\\\":[\\\"readall\\\"]}}\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM4Njc5MA=="}, "originalCommit": null, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2223, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}