{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzg3Mzk3", "number": 866, "title": "Use reflection to get reduceOrder, termBytes and format due to java.lang.IllegalAccessError", "bodyText": "StringTermsGetter can not access fields of StringTerms and StringTerms.Bucket as it is loaded by a different class loader.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-12-02T06:35:45Z", "url": "https://github.com/opensearch-project/security/pull/866", "merged": true, "mergeCommit": {"oid": "30d2292e4a71e780ceac6b0ce88a015bbb30ee0c"}, "closed": true, "closedAt": "2020-12-03T00:10:02Z", "author": {"login": "vrozov"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiIm4PAH2gAyNTMwNzg3Mzk3OjA5ZDk1OTRhMmRiOTllNDY2N2ZjMTY3YWI3NWU2MTU1ZDUxOTJjNDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiXtxGAFqTU0MzM0MDM3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/opensearch-project/security/commit/09d9594a2db99e4667fc167ab75e6155d5192c49", "committedDate": "2020-12-02T06:32:22Z", "message": "Use reflection to get reduceOrder, termBytes and format due to java.lang.IllegalAccessError"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDkxNzEw", "url": "https://github.com/opensearch-project/security/pull/866#pullrequestreview-543091710", "createdAt": "2020-12-02T17:50:20Z", "commit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzo1MDoyMFrOH9nBew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzo1MDoyMFrOH9nBew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM2NDUzOQ==", "bodyText": "nit: single line {}?", "url": "https://github.com/opensearch-project/security/pull/866#discussion_r534364539", "createdAt": "2020-12-02T17:50:20Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/DlsFlsValveImpl.java", "diffHunk": "@@ -253,4 +260,58 @@ public void accept(StringTerms.Bucket bucket) {\n             this.bucket = bucket;\n         }\n     }\n+\n+    private static class StringTermsGetter {\n+        private static final Field REDUCE_ORDER = getField(InternalTerms.class, \"reduceOrder\");\n+        private static final Field TERM_BYTES = getField(StringTerms.Bucket.class, \"termBytes\");\n+        private static final Field FORMAT = getField(InternalTerms.Bucket.class, \"format\");\n+\n+        private StringTermsGetter() {\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDk0OTM2", "url": "https://github.com/opensearch-project/security/pull/866#pullrequestreview-543094936", "createdAt": "2020-12-02T17:54:16Z", "commit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzo1NDoxNlrOH9nLsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzo1NDoxNlrOH9nLsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM2NzE1Mg==", "bodyText": "Cant it be handled the same way as \"throw new RuntimeException(e)\" ?", "url": "https://github.com/opensearch-project/security/pull/866#discussion_r534367152", "createdAt": "2020-12-02T17:54:16Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/DlsFlsValveImpl.java", "diffHunk": "@@ -253,4 +260,58 @@ public void accept(StringTerms.Bucket bucket) {\n             this.bucket = bucket;\n         }\n     }\n+\n+    private static class StringTermsGetter {\n+        private static final Field REDUCE_ORDER = getField(InternalTerms.class, \"reduceOrder\");\n+        private static final Field TERM_BYTES = getField(StringTerms.Bucket.class, \"termBytes\");\n+        private static final Field FORMAT = getField(InternalTerms.Bucket.class, \"format\");\n+\n+        private StringTermsGetter() {\n+        }\n+\n+        private static <T> Field getFieldPrivileged(Class<T> cls, String name) {\n+            try {\n+                final Field field = cls.getDeclaredField(name);\n+                field.setAccessible(true);\n+                return field;\n+            } catch (NoSuchFieldException | SecurityException e) {\n+                log.error(\"Failed to get class {} declared field {}\", cls.getSimpleName(), name, e);\n+                if (e instanceof RuntimeException) {\n+                    throw (RuntimeException) e;\n+                } else {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        }\n+\n+        private static <T> Field getField(Class<T> cls, String name) {\n+            SpecialPermission.check();\n+            return AccessController.doPrivileged((PrivilegedAction<Field>) () -> getFieldPrivileged(cls, name));\n+        }\n+\n+        private static <T, C> T getFieldValue(Field field, C c) {\n+            try {\n+                return (T)field.get(c);\n+            } catch (IllegalArgumentException | IllegalAccessException e) {\n+                log.error(\"Exception while getting value {} of class {}\", field.getName(), c.getClass().getSimpleName(), e);\n+                if (e instanceof RuntimeException) {\n+                    throw (RuntimeException) e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzM1Njky", "url": "https://github.com/opensearch-project/security/pull/866#pullrequestreview-543335692", "createdAt": "2020-12-02T23:56:55Z", "commit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzM3NDY0", "url": "https://github.com/opensearch-project/security/pull/866#pullrequestreview-543337464", "createdAt": "2020-12-03T00:01:17Z", "commit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDowMToxN1rOH9zQow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDowMToxN1rOH9zQow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NTAyNw==", "bodyText": "Curious why we are using the InternalTerms.class instead of the previous StringTerms.class", "url": "https://github.com/opensearch-project/security/pull/866#discussion_r534565027", "createdAt": "2020-12-03T00:01:17Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/DlsFlsValveImpl.java", "diffHunk": "@@ -253,4 +260,58 @@ public void accept(StringTerms.Bucket bucket) {\n             this.bucket = bucket;\n         }\n     }\n+\n+    private static class StringTermsGetter {\n+        private static final Field REDUCE_ORDER = getField(InternalTerms.class, \"reduceOrder\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzQwMzc1", "url": "https://github.com/opensearch-project/security/pull/866#pullrequestreview-543340375", "createdAt": "2020-12-03T00:08:28Z", "commit": {"oid": "09d9594a2db99e4667fc167ab75e6155d5192c49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2676, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}