{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1ODgxNTA1", "number": 548, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNjo1NDoxM1rOEMkyGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNjo1NDoxM1rOEMkyGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjIxMDE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/DefaultObjectMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNjo1NDoxM1rOGuw9GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMjozOTo1MVrOGvPSBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4OTc1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String text = ((String)value).trim();\n          \n          \n            \n                        String text = ((String)value).trim().toLower();\n          \n          \n            \n                        if (\"true\".equals(text)) {", "url": "https://github.com/opensearch-project/security/pull/548#discussion_r451689752", "createdAt": "2020-07-08T16:54:13Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/DefaultObjectMapper.java", "diffHunk": "@@ -69,9 +71,25 @@ public static void inject(final InjectableValues.Std injectableValues) {\n         defaulOmittingObjectMapper.setInjectableValues(injectableValues);\n     }\n \n-    public static boolean getOrDefault(Map<String, Object> properties, String key, boolean defaultValue) {\n-        Boolean value = (Boolean)properties.get(key);\n-        return value != null ? value.booleanValue() : defaultValue;\n+    public static boolean getOrDefault(Map<String, Object> properties, String key, boolean defaultValue) throws JsonProcessingException {\n+        Object value = properties.get(key);\n+        if (value == null) {\n+            return defaultValue;\n+        } else if (value instanceof Boolean) {\n+            return (boolean)value;\n+        } else if (value instanceof String) {\n+            String text = ((String)value).trim();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1573e0d978e0c9b3ac71d6404a4e5a15d851b015"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4NjYyOA==", "bodyText": "The only lower case \"true\" and capitalized \"True\" are supported (\"TRUE\" and \"tRue\" are not valid) the same way how Jackson default deserializer works.", "url": "https://github.com/opensearch-project/security/pull/548#discussion_r452186628", "createdAt": "2020-07-09T12:39:51Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/DefaultObjectMapper.java", "diffHunk": "@@ -69,9 +71,25 @@ public static void inject(final InjectableValues.Std injectableValues) {\n         defaulOmittingObjectMapper.setInjectableValues(injectableValues);\n     }\n \n-    public static boolean getOrDefault(Map<String, Object> properties, String key, boolean defaultValue) {\n-        Boolean value = (Boolean)properties.get(key);\n-        return value != null ? value.booleanValue() : defaultValue;\n+    public static boolean getOrDefault(Map<String, Object> properties, String key, boolean defaultValue) throws JsonProcessingException {\n+        Object value = properties.get(key);\n+        if (value == null) {\n+            return defaultValue;\n+        } else if (value instanceof Boolean) {\n+            return (boolean)value;\n+        } else if (value instanceof String) {\n+            String text = ((String)value).trim();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4OTc1Mg=="}, "originalCommit": {"oid": "1573e0d978e0c9b3ac71d6404a4e5a15d851b015"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2354, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}