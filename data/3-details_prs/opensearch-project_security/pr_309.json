{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzMwMjA1", "number": 309, "title": "[Optimization] Memoize results of resolveIndexPatterns for Bulk requests", "bodyText": "Introduce per request resolve mask, this allows us to bypass the whole resolveIndexPatterns+builder.add combo\nif multiple writes in one request go to the same alias/index. This is the common case in bulk indexing.\nIssue #, if available:\nDescription of changes:\nSplit off from a bigger PR focused on solving perf problem with indexing to long chians of indices with a write alias to one of them.\nhttps://github.com/opendistro-for-elasticsearch/security/pull/258\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-03-23T11:34:51Z", "url": "https://github.com/opensearch-project/security/pull/309", "merged": true, "mergeCommit": {"oid": "151523fe2db8b044cd989a1374e3871e2d4841c9"}, "closed": true, "closedAt": "2020-03-27T20:35:24Z", "author": {"login": "DmitryOlshansky"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQdItlAH2gAyMzkyMzMwMjA1OjI4NzM1YTIzMjA4M2JlODkwZWZkMTg0ZTIzNzNjMGIzNWY5MDY2NGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR2MxSgFqTM4MzE1NzkwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "28735a232083be890efd184e2373c0b35f90664d", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/28735a232083be890efd184e2373c0b35f90664d", "committedDate": "2020-03-23T12:05:38Z", "message": "Speedup resolveIndexPatterns, using per-request resolve mask\n\nIntroduce per request resolve mask, this allows us to bypass the whole resolveIndexPatterns+builder.add combo\nif multiple writes in one request go to the same alias/index. This is the common case in bulk indexing."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "28735a232083be890efd184e2373c0b35f90664d", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/28735a232083be890efd184e2373c0b35f90664d", "committedDate": "2020-03-23T12:05:38Z", "message": "Speedup resolveIndexPatterns, using per-request resolve mask\n\nIntroduce per request resolve mask, this allows us to bypass the whole resolveIndexPatterns+builder.add combo\nif multiple writes in one request go to the same alias/index. This is the common case in bulk indexing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTU1MjQ0", "url": "https://github.com/opensearch-project/security/pull/309#pullrequestreview-379555244", "createdAt": "2020-03-23T15:42:33Z", "commit": {"oid": "28735a232083be890efd184e2373c0b35f90664d"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTUyMDU3", "url": "https://github.com/opensearch-project/security/pull/309#pullrequestreview-382552057", "createdAt": "2020-03-27T03:00:36Z", "commit": {"oid": "28735a232083be890efd184e2373c0b35f90664d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzowMDozN1rOF8hmLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMzowMDozN1rOF8hmLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTAwOTMyNA==", "bodyText": "The only comment that is related to new variable name. Not very intuitive.\nI was thinking initially to renamed it to \"isSearchOrFieldsCapabilitiesRequest\", but Vlad suggested a better one \"enableCrossClusterResolution\", since this variable is basically indicating if we need to do cross-cluster resolution based on type of the request.", "url": "https://github.com/opensearch-project/security/pull/309#discussion_r399009324", "createdAt": "2020-03-27T03:00:37Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/resolver/IndexResolverReplacer.java", "diffHunk": "@@ -161,7 +159,7 @@ private static final boolean isLocalAll(final String... requestedPatterns) {\n         return false;\n     }\n \n-    private Resolved resolveIndexPatterns(final IndicesOptions indicesOptions, final Object request, final String... requestedPatterns0) {\n+    private Resolved resolveIndexPatterns(final IndicesOptions indicesOptions, final boolean isSearchOrFieldsCapabilities, final String... requestedPatterns0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28735a232083be890efd184e2373c0b35f90664d"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTYwODM1", "url": "https://github.com/opensearch-project/security/pull/309#pullrequestreview-382960835", "createdAt": "2020-03-27T15:26:20Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyNjoyMFrOF82Lmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNToyNjoyMFrOF82Lmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM0NjU4Nw==", "bodyText": "Either inline or rename to enableCrossClusterResolution.", "url": "https://github.com/opensearch-project/security/pull/309#discussion_r399346587", "createdAt": "2020-03-27T15:26:20Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/resolver/IndexResolverReplacer.java", "diffHunk": "@@ -316,28 +313,59 @@ public boolean replace(final TransportRequest request, boolean retainMode, Strin\n         }, false);\n     }\n \n+    private static final class IndexResolveKey {\n+        private final IndicesOptions opts;\n+        private final boolean enableCrossClusterResolution;\n+        private final String[] original;\n+        public IndexResolveKey(IndicesOptions opts, boolean isSearchOrFieldCapabilities, String[] original) {\n+            this.opts = opts;\n+            this.enableCrossClusterResolution = isSearchOrFieldCapabilities;\n+            this.original = original;\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (this == o) return true;\n+            if (o == null || getClass() != o.getClass()) return false;\n+            IndexResolveKey that = (IndexResolveKey) o;\n+            return enableCrossClusterResolution == that.enableCrossClusterResolution &&\n+                    opts.equals(that.opts) &&\n+                    Arrays.equals(original, that.original);\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return Boolean.hashCode(enableCrossClusterResolution) + 31 * opts.hashCode() + 127*Arrays.hashCode(original);\n+        }\n+    }\n+\n     public Resolved resolveRequest(final Object request) {\n         if(log.isDebugEnabled()) {\n             log.debug(\"Resolve aliases, indices and types from {}\", request.getClass().getSimpleName());\n         }\n \n         final Resolved.Builder resolvedBuilder = new Resolved.Builder();\n         final AtomicBoolean isIndicesRequest = new AtomicBoolean();\n-        getOrReplaceAllIndices(request, new IndicesProvider() {\n-\n-            @Override\n-            public String[] provide(String[] original, Object localRequest, boolean supportsReplace) {\n-                final IndicesOptions indicesOptions = indicesOptionsFrom(localRequest);\n-                final Resolved iResolved = resolveIndexPatterns(indicesOptions, localRequest, original);\n+        // set of previously resolved index requests to avoid resolving\n+        // the same index more than once while processing bulk requests\n+        final Set<IndexResolveKey> alreadyResolved = new HashSet<>();\n+\n+        getOrReplaceAllIndices(request, (original, localRequest, supportsReplace) -> {\n+            final IndicesOptions indicesOptions = indicesOptionsFrom(localRequest);\n+            final boolean isSearchOrFieldCapabilities = localRequest instanceof FieldCapabilitiesRequest || localRequest instanceof SearchRequest;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 81}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTk2NTYw", "url": "https://github.com/opensearch-project/security/pull/309#pullrequestreview-382996560", "createdAt": "2020-03-27T16:06:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNjo0MFrOF835dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowNjo0MFrOF835dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3NDcxMQ==", "bodyText": "one more occurrence :)", "url": "https://github.com/opensearch-project/security/pull/309#discussion_r399374711", "createdAt": "2020-03-27T16:06:40Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/resolver/IndexResolverReplacer.java", "diffHunk": "@@ -316,28 +313,59 @@ public boolean replace(final TransportRequest request, boolean retainMode, Strin\n         }, false);\n     }\n \n+    private static final class IndexResolveKey {\n+        private final IndicesOptions opts;\n+        private final boolean enableCrossClusterResolution;\n+        private final String[] original;\n+        public IndexResolveKey(IndicesOptions opts, boolean isSearchOrFieldCapabilities, String[] original) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3141e3b4785168b07ffa8715c73d6836ccd26bc7", "author": {"user": {"login": "DmitryOlshansky", "name": "Dmitry Olshansky"}}, "url": "https://github.com/opensearch-project/security/commit/3141e3b4785168b07ffa8715c73d6836ccd26bc7", "committedDate": "2020-03-27T16:17:23Z", "message": "Rename parameter as per review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "3141e3b4785168b07ffa8715c73d6836ccd26bc7", "author": {"user": {"login": "DmitryOlshansky", "name": "Dmitry Olshansky"}}, "url": "https://github.com/opensearch-project/security/commit/3141e3b4785168b07ffa8715c73d6836ccd26bc7", "committedDate": "2020-03-27T16:17:23Z", "message": "Rename parameter as per review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMDE0MjQ5", "url": "https://github.com/opensearch-project/security/pull/309#pullrequestreview-383014249", "createdAt": "2020-03-27T16:27:33Z", "commit": {"oid": "3141e3b4785168b07ffa8715c73d6836ccd26bc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTU3OTA4", "url": "https://github.com/opensearch-project/security/pull/309#pullrequestreview-383157908", "createdAt": "2020-03-27T19:51:37Z", "commit": {"oid": "3141e3b4785168b07ffa8715c73d6836ccd26bc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3035, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}