{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyOTk3NDk3", "number": 626, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1MDowNlrOEVMd4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1MDowNlrOEVMd4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjU5ODA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjo1MDowNlrOG70IRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoxMTozM1rOG70juw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3MzI1Mw==", "bodyText": "This call will wrap all exceptions into PriviledgedActionException. Could you check if this method throws any exception and write code to propagate it correctly.\nExample: https://github.com/opendistro-for-elasticsearch/security/blob/d62ac5334609ea92b913caa5e73917efb8b29043/src/main/java/com/amazon/dlic/auth/ldap2/LDAPAuthenticationBackend2.java#L102", "url": "https://github.com/opensearch-project/security/pull/626#discussion_r465373253", "createdAt": "2020-08-04T22:50:06Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -95,8 +99,8 @@ Saml2Settings get() throws SamlConfigException {\n             // TODO allow overriding of IdP metadata?\n             settingsBuilder.fromValues(configProperties);\n             settingsBuilder.fromValues(new SamlSettingsMap(this.esSettings));\n-\n-            return settingsBuilder.build();\n+            SpecialPermission.check();\n+            return AccessController.doPrivileged((PrivilegedAction<Saml2Settings>) () -> settingsBuilder.build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0845857f2c0833ab966902122bc94ec21521949d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3OTUwMg==", "bodyText": "It only applies to checked exceptions, as com.onelogin.saml2.settings.SettingsBuilder.build() does not throw checked exceptions, the unwrapping similar to what is done in LDAPAuthenticationBackend2.java is not necessary.", "url": "https://github.com/opensearch-project/security/pull/626#discussion_r465379502", "createdAt": "2020-08-04T23:09:03Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -95,8 +99,8 @@ Saml2Settings get() throws SamlConfigException {\n             // TODO allow overriding of IdP metadata?\n             settingsBuilder.fromValues(configProperties);\n             settingsBuilder.fromValues(new SamlSettingsMap(this.esSettings));\n-\n-            return settingsBuilder.build();\n+            SpecialPermission.check();\n+            return AccessController.doPrivileged((PrivilegedAction<Saml2Settings>) () -> settingsBuilder.build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3MzI1Mw=="}, "originalCommit": {"oid": "0845857f2c0833ab966902122bc94ec21521949d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4MDI4Mw==", "bodyText": "Answer to my question: https://docs.oracle.com/javase/8/docs/technotes/guides/security/doprivileged.html#handling_exceptions", "url": "https://github.com/opensearch-project/security/pull/626#discussion_r465380283", "createdAt": "2020-08-04T23:11:33Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/dlic/auth/http/saml/Saml2SettingsProvider.java", "diffHunk": "@@ -95,8 +99,8 @@ Saml2Settings get() throws SamlConfigException {\n             // TODO allow overriding of IdP metadata?\n             settingsBuilder.fromValues(configProperties);\n             settingsBuilder.fromValues(new SamlSettingsMap(this.esSettings));\n-\n-            return settingsBuilder.build();\n+            SpecialPermission.check();\n+            return AccessController.doPrivileged((PrivilegedAction<Saml2Settings>) () -> settingsBuilder.build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3MzI1Mw=="}, "originalCommit": {"oid": "0845857f2c0833ab966902122bc94ec21521949d"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2384, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}