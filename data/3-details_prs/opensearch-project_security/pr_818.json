{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMjQzNDkx", "number": 818, "title": "Reject empty password in internal user creation", "bodyText": "Issue #, if available:\nDescription of changes:\nGiven that Kibana and ES don't allow login with empty password, it'd make sense to deny empty password in internal user creation.\nThis PR is to add the validation to deny empty password in internal user creation.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-30T19:37:20Z", "url": "https://github.com/opensearch-project/security/pull/818", "merged": true, "mergeCommit": {"oid": "7b74670ab212d4361b914e0ea2d6b3ba8cda36eb"}, "closed": true, "closedAt": "2020-11-30T23:40:47Z", "author": {"login": "cliu123"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZUKQpgBqjM5NTk0NDU1NjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhuEXKAFqTU0MTM4MDI5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTc0MDEz", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-524574013", "createdAt": "2020-11-05T19:02:01Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTowMjowMVrOHuR-Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTowMzozMlrOHuSBqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTAxNA==", "bodyText": "Can you reject in CredentialsValidator which is used by the account API for self-change password as well ?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518291014", "createdAt": "2020-11-05T19:02:01Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI5MTg4MA==", "bodyText": "Can you remove other checks for isEmpty() ?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r518291880", "createdAt": "2020-11-05T19:03:32Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -116,8 +116,14 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n             }\n         }\n \n-        // if password is set, it takes precedence over hash\n+        // Reject empty password\n         final String plainTextPassword = securityJsonNode.get(\"password\").asString();\n+        if (plainTextPassword != null && plainTextPassword.isEmpty()){\n+            badRequestResponse(channel, \"Please specify a non-empty 'password' when creating a new internal user.\");\n+            return;\n+        }\n+\n+        // if password is set, it takes precedence over hash", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NTUwNzM5", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-526550739", "createdAt": "2020-11-09T18:49:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0OTowM1rOHv8onw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1Mjo1NlrOHv8x7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzODU1OQ==", "bodyText": "Fine with keeping current behavior but username validation does not depend on regex", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520038559", "createdAt": "2020-11-09T18:49:03Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (regex != null && !regex.isEmpty()) {\n+                        // Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzOTY3OA==", "bodyText": "Do include test for empty password but fix request instead of response for the tests as they are asserting updating other attributes", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520039678", "createdAt": "2020-11-09T18:50:48Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,7 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDIzOQ==", "bodyText": "Why is this bad request ? it is updating read only user and password field is not present", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520040239", "createdAt": "2020-11-09T18:51:43Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -534,7 +535,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put read only users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/sarek\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDk0Mg==", "bodyText": "Why is this bad request ? it is updating reserved user and password field is not present", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520040942", "createdAt": "2020-11-09T18:52:56Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -554,7 +555,7 @@ public void testUserApiForNonSuperAdmin() throws Exception {\n \n         // Put hidden users\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/hide\", \"[{ \\\"op\\\": \\\"add\\\", \\\"path\\\": \\\"/sarek/description\\\", \\\"value\\\": \\\"foo\\\" }]\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NTU3Mjg2", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-526557286", "createdAt": "2020-11-09T18:57:25Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1NzoyNlrOHv88-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1NzoyNlrOHv88-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0Mzc3MA==", "bodyText": "nit: Use isNullOrEmpty", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520043770", "createdAt": "2020-11-09T18:57:26Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +53,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzcxMDc1", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-526771075", "createdAt": "2020-11-10T00:54:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo1NDo0NVrOHwHe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo1NDo0NVrOHwHe-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxNjMxNQ==", "bodyText": "Is the empty password checked only if regex is configured ? I see lines L56-57 inserted back in.\n&& regex != null\n&& !regex.isEmpty()", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r520216315", "createdAt": "2020-11-10T00:54:45Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -62,8 +62,14 @@ public boolean validate() {\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTU3MjY4", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-536957268", "createdAt": "2020-11-24T00:49:33Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDo0OTozNFrOH4lJqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMDo1MzozM1rOH4lOsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MDk4Ng==", "bodyText": "Can password be null here?\nMaybe check for password is not null directly in the contentAsMap as these conditions are based on non-null password entry validation", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529090986", "createdAt": "2020-11-24T00:49:34Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (!Strings.isNullOrEmpty(regex)) {\n+                        // Password can be null for an existing user. Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n \n-                    if (username == null || username.isEmpty()) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Unable to validate username because no user is given\");\n+                        if (username == null || username.isEmpty()) {\n+                            if (log.isDebugEnabled()) {\n+                                log.debug(\"Unable to validate username because no user is given\");\n+                            }\n+                            return false;\n                         }\n-                        return false;\n-                    }\n \n-                    if (username.toLowerCase().equals(password.toLowerCase())) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Username must not match password\");\n+                        if (username.toLowerCase().equals(password.toLowerCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MjI3Mg==", "bodyText": "Also not dependent on regex but it is inside Strings.isNullOrEmpty(regex) block? I understand the current behavior validates password against username only if regex is defined. Just looking for improvements here. Any thoughts?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529092272", "createdAt": "2020-11-24T00:53:33Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {\n                         this.errorType = ErrorType.INVALID_PASSWORD;\n                         return false;\n                     }\n \n-                    final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n+                    if (!Strings.isNullOrEmpty(regex)) {\n+                        // Password can be null for an existing user. Regex will validate password if present\n+                        if (password != null && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n+                            if(log.isDebugEnabled()) {\n+                                log.debug(\"Regex does not match password\");\n+                            }\n+                            this.errorType = ErrorType.INVALID_PASSWORD;\n+                            return false;\n+                        }\n+\n+                        final String username = Utils.coalesce(request.param(\"name\"), hasParams() ? (String) param[0] : null);\n \n-                    if (username == null || username.isEmpty()) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Unable to validate username because no user is given\");\n+                        if (username == null || username.isEmpty()) {\n+                            if (log.isDebugEnabled()) {\n+                                log.debug(\"Unable to validate username because no user is given\");\n+                            }\n+                            return false;\n                         }\n-                        return false;\n-                    }\n \n-                    if (username.toLowerCase().equals(password.toLowerCase())) {\n-                        if (log.isDebugEnabled()) {\n-                            log.debug(\"Username must not match password\");\n+                        if (username.toLowerCase().equals(password.toLowerCase())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA5MDk4Ng=="}, "originalCommit": null, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzgxNzQ2", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-537781746", "createdAt": "2020-11-24T18:11:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoxMTo0MVrOH5PPlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoxMTo0MVrOH5PPlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MDYyOA==", "bodyText": "Under what condition password will be null here? It is executed with contentAsMap.containsKey(\"password\") condition.", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529780628", "createdAt": "2020-11-24T18:11:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,45 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n                 if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n                     final String password = (String) contentAsMap.get(\"password\");\n \n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                    // Password is not allowed to be empty if present.\n+                    if (password != null && password.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDAxNzk5", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-538001799", "createdAt": "2020-11-24T22:00:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMDozNlrOH5XSjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMDozNlrOH5XSjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxMjQ2Mw==", "bodyText": "Is there a test that adds user with empty password and no hash?", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529912463", "createdAt": "2020-11-24T22:00:36Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -410,6 +410,7 @@ public void testPasswordRules() throws Exception {\n         addUserWithPassword(\"ok2\", \"$aA123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok3\", \"$Aa123456789\", HttpStatus.SC_CREATED);\n         addUserWithPassword(\"ok4\", \"$1aAAAAAAAAA\", HttpStatus.SC_CREATED);\n+        addUserWithPasswordAndHash(\"empty_password\", \"\", \"$%^123\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDIyODU5", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-538022859", "createdAt": "2020-11-24T22:35:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozNToyN1rOH5ZisQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjozNToyN1rOH5ZisQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk0OTM2MQ==", "bodyText": "The request creates new user. Please change it to update existing user \"ok1\".", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r529949361", "createdAt": "2020-11-24T22:35:27Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -448,7 +449,10 @@ public void testPasswordRules() throws Exception {\n         Assert.assertTrue(response.getBody().contains(\"xxx\"));\n \n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/ok1\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"\\\"}\", new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, response.getStatusCode());\n+\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/non-empty_password\", \"{\\\"backend_roles\\\":[\\\"my-backend-role\\\"],\\\"attributes\\\":{},\\\"password\\\":\\\"Admin_123\\\"}\", new Header[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/2ae06246984a48a0981e0f109b5d3e0486a6bbad", "committedDate": "2020-11-30T19:42:25Z", "message": "Reject empty password in internal user creation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/2ae06246984a48a0981e0f109b5d3e0486a6bbad", "committedDate": "2020-11-30T19:42:25Z", "message": "Reject empty password in internal user creation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjk0MDA1", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-541294005", "createdAt": "2020-11-30T21:05:51Z", "commit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzEwNTM0", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-541310534", "createdAt": "2020-11-30T21:30:25Z", "commit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTozMDoyNVrOH8OnnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMTozMDoyNVrOH8OnnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjkxNjEyNQ==", "bodyText": "nit: use final same as original final String password = (String) contentAsMap.get(\"password\");", "url": "https://github.com/opensearch-project/security/pull/818#discussion_r532916125", "createdAt": "2020-11-30T21:30:25Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/validation/CredentialsValidator.java", "diffHunk": "@@ -53,39 +54,44 @@ public boolean validate() {\n         final String regex = this.esSettings.get(ConfigConstants.OPENDISTRO_SECURITY_RESTAPI_PASSWORD_VALIDATION_REGEX, null);\n \n         if ((request.method() == RestRequest.Method.PUT || request.method() == RestRequest.Method.PATCH)\n-                && regex != null\n-                && !regex.isEmpty()\n                 && this.content != null\n                 && this.content.length() > 1) {\n             try {\n                 final Map<String, Object> contentAsMap = XContentHelper.convertToMap(this.content, false, XContentType.JSON).v2();\n-                if (contentAsMap != null && contentAsMap.containsKey(\"password\")) {\n-                    final String password = (String) contentAsMap.get(\"password\");\n-\n-                    // Password can be null/empty for an existing user. Regex will validate password if present\n-                    if (password != null && !password.isEmpty() && !regex.isEmpty() && !Pattern.compile(\"^\"+regex+\"$\").matcher(password).matches()) {\n-                        if(log.isDebugEnabled()) {\n-                            log.debug(\"Regex does not match password\");\n-                        }\n+                String password = (String) contentAsMap.get(\"password\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzgwMjk5", "url": "https://github.com/opensearch-project/security/pull/818#pullrequestreview-541380299", "createdAt": "2020-11-30T23:37:08Z", "commit": {"oid": "2ae06246984a48a0981e0f109b5d3e0486a6bbad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2655, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}