{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjM5NTc4", "number": 304, "title": "AuditLog: Refactor to use AuditCategory enum", "bodyText": "Changes:\n\nPull out AuditCategory from AuditMessage\nUse EnumSet for all categories instead of List of Strings\n\nNo new functionality added.\nFixes: https://github.com/opendistro-for-elasticsearch/security/issues/323", "createdAt": "2020-03-20T16:54:26Z", "url": "https://github.com/opensearch-project/security/pull/304", "merged": true, "mergeCommit": {"oid": "3cf622c466f1613c217f752cd65ac08fca6c34d1"}, "closed": true, "closedAt": "2020-03-26T19:32:26Z", "author": {"login": "sujithvm"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPnuQVAFqTM3ODgzMTk1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRhSd7AFqTM4MjM0NjQxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODMxOTU2", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-378831956", "createdAt": "2020-03-20T21:51:46Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTU1NDQ3", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-378955447", "createdAt": "2020-03-21T22:06:49Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjowNjo1MFrOF5r9Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjoxOTowNVrOF5sAQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzMxNA==", "bodyText": "nit: use stream API:\n        return categories\n                .stream()\n                .filter(Objects::nonNull)\n                .map(String::toUpperCase)\n                .map(category -> {\n                    try {\n                        return AuditCategory.valueOf(category);\n                    } catch (IllegalArgumentException ex) {\n                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());\n                        return null;\n                    }\n                })\n                .filter(Objects::nonNull)\n                .collect(Collectors.toCollection(() -> set));", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396033314", "createdAt": "2020-03-21T22:06:50Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzUzMQ==", "bodyText": "I am not sure that it is sufficient to log an error message and continue. It is possible that a category has a typo that causes parsing exception and it may go unnoticed (lost in log files).", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396033531", "createdAt": "2020-03-21T22:10:18Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)\n+            return set;\n+\n+        categories\n+                .stream()\n+                .filter(Objects::nonNull)\n+                .map(category -> category.toUpperCase())\n+                .forEach(category -> {\n+                    try {\n+                        set.add(AuditCategory.valueOf(category));\n+                    } catch (IllegalArgumentException ex) {\n+                        log.error(\"Invalid category type: {} Exception: {}\", category, ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDExMw==", "bodyText": "Consider using Iterable or Collection instead of a List. There is no need to know size(), so Iterable (preferred) or Collection should be sufficient.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396034113", "createdAt": "2020-03-21T22:19:05Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Objects;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    private static Logger log = LogManager.getLogger(AuditCategory.class);\n+\n+    public static EnumSet<AuditCategory> parse(final List<String> categories) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5OTIxNTg0", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-379921584", "createdAt": "2020-03-24T00:23:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDoyMzo1NFrOF6c98A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDozMTo1NFrOF6dGUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNjMzNg==", "bodyText": "Consider making it private static in AuditCategory.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396836336", "createdAt": "2020-03-24T00:23:54Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,27 +128,17 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n+        final List<String> defaultDisabledCategories = Arrays.asList(AuditCategory.AUTHENTICATED.toString(), AuditCategory.GRANTED_PRIVILEGES.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzNzgyMQ==", "bodyText": "Consider moving to AuditCategory.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396837821", "createdAt": "2020-03-24T00:29:25Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzODQ4MA==", "bodyText": "No need to create new ArrayList. Use original return from settings.getAsList(key, defaultList) and Collections.emptyList() instead of clearing a new one.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r396838480", "createdAt": "2020-03-24T00:31:54Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,\n+                                              final String key,\n+                                              final List<String> defaultList) {\n+        List<String> list = new ArrayList<>(settings.getAsList(key, defaultList));\n+        if (list.size() == 1 && \"NONE\".equals(list.get(0))) {\n+            list.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5", "committedDate": "2020-03-24T06:03:34Z", "message": "Refactor to use AuditCategory enum"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzgwNTYx", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-380780561", "createdAt": "2020-03-25T00:08:06Z", "commit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowODowNlrOF7HqJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDowODowNlrOF7HqJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzNTc4Mg==", "bodyText": "My understanding is that not all AuditCategory applies to Rest or Transport categories. It may be good to log a warning if an admin tries to disable auditing for a category that does not apply. Note that this case is different from an invalid category.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397535782", "createdAt": "2020-03-25T00:08:06Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,27 +130,15 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n-\n-        if(disabledRestCategories.size() == 1 && \"NONE\".equals(disabledRestCategories.get(0))) {\n-            disabledRestCategories.clear();\n-        }\n-\n-        if (disabledRestCategories.size() > 0) {\n-            log.info(\"Configured categories on rest layer to ignore: {}\", disabledRestCategories);\n-        }\n+        disabledRestCategories = AuditCategory.parse(getConfigList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzgyOTI5", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-380782929", "createdAt": "2020-03-25T00:15:15Z", "commit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxNToxNVrOF7HzHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDoxNToxNVrOF7HzHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUzODA3OQ==", "bodyText": "I'd recommend start deprecating \"NONE\" as a setting and log a warning. It is easy to use \"none\" instead of \"NONE\" especially that category names are case-insensitive.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r397538079", "createdAt": "2020-03-25T00:15:15Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -184,44 +173,34 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n             log.info(\"Configured Users to ignore for write compliance events: {}\", ignoredComplianceUsersForWrite);\n         }\n \n-\n-\n         ignoreAuditRequests = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_IGNORE_REQUESTS, Collections.emptyList());\n         if (ignoreAuditRequests.size() > 0) {\n             log.info(\"Configured Requests to ignore: {}\", ignoreAuditRequests);\n         }\n \n-        // check if some categories are invalid\n-        for (String event : disabledRestCategories) {\n-        \ttry {\n-        \t\tAuditMessage.Category.valueOf(event.toUpperCase());\n-        \t} catch(Exception iae) {\n-        \t\tlog.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-        \t}\n-\t\t}\n+        this.excludeSensitiveHeaders = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_EXCLUDE_SENSITIVE_HEADERS, true);\n+    }\n \n-        // check if some categories are invalid\n-        for (String event : disabledTransportCategories) {\n-            try {\n-                AuditMessage.Category.valueOf(event.toUpperCase());\n-            } catch(Exception iae) {\n-                log.error(\"Unkown category {}, please check opendistro_security.audit.config.disabled_categories settings\", event);\n-            }\n+    private static List<String> getConfigList(final Settings settings,\n+                                              final String key,\n+                                              final List<String> defaultList) {\n+        List<String> list = settings.getAsList(key, defaultList);\n+        if (list.size() == 1 && \"NONE\".equals(list.get(0))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjQ0MjQy", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-381244242", "createdAt": "2020-03-25T15:10:40Z", "commit": {"oid": "0cb732fcebd4df0c45bd8c3013df6d1efcd3faf5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/8aa4bb4882203834f18a997ebd555f743910cfb4", "committedDate": "2020-03-25T20:25:00Z", "message": "Address code reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTI1MzE4", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-381525318", "createdAt": "2020-03-25T20:49:55Z", "commit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDo0OTo1NVrOF7twzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDo1NDo0MVrOF7t8Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2MDA3OA==", "bodyText": "nit: as you are constructing an empty EnumSet directly here, add disabledRestCategoriesList.isEmpty() condition.", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398160078", "createdAt": "2020-03-25T20:49:55Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AbstractAuditLog.java", "diffHunk": "@@ -129,25 +130,27 @@ protected AbstractAuditLog(Settings settings, final ThreadPool threadPool, final\n         restAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_REST, true);\n         transportAuditingEnabled = settings.getAsBoolean(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_ENABLE_TRANSPORT, true);\n \n-        disabledRestCategories = new ArrayList<>(settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, defaultDisabledCategories).stream()\n-                .map(c->c.toUpperCase()).collect(Collectors.toList()));\n+        final List<String> disabledRestCategoriesList = settings.getAsList(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_CONFIG_DISABLED_REST_CATEGORIES, DEFAULT_DISABLED_CATEGORIES);\n \n-        if(disabledRestCategories.size() == 1 && \"NONE\".equals(disabledRestCategories.get(0))) {\n-            disabledRestCategories.clear();\n+        if (disabledRestCategoriesList.size() == 1 && \"NONE\".equalsIgnoreCase(disabledRestCategoriesList.get(0))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2Mjk1MA==", "bodyText": "Is it necessary to allow null? Should it check for an empty collection and throw NullPointerException?", "url": "https://github.com/opensearch-project/security/pull/304#discussion_r398162950", "createdAt": "2020-03-25T20:54:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/impl/AuditCategory.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.impl;\n+\n+import java.util.Collection;\n+import java.util.EnumSet;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+\n+public enum AuditCategory {\n+    BAD_HEADERS,\n+    FAILED_LOGIN,\n+    MISSING_PRIVILEGES,\n+    GRANTED_PRIVILEGES,\n+    OPENDISTRO_SECURITY_INDEX_ATTEMPT,\n+    SSL_EXCEPTION,\n+    AUTHENTICATED,\n+    COMPLIANCE_DOC_READ,\n+    COMPLIANCE_DOC_WRITE,\n+    COMPLIANCE_EXTERNAL_CONFIG,\n+    COMPLIANCE_INTERNAL_CONFIG_READ,\n+    COMPLIANCE_INTERNAL_CONFIG_WRITE;\n+\n+    public static EnumSet<AuditCategory> parse(final Collection<String> categories) {\n+        EnumSet<AuditCategory> set = EnumSet.noneOf(AuditCategory.class);\n+        if (categories == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa4bb4882203834f18a997ebd555f743910cfb4"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b86cf202e9e5fa5267c99c195bc9c7794530ab", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/b2b86cf202e9e5fa5267c99c195bc9c7794530ab", "committedDate": "2020-03-26T06:18:24Z", "message": "Address code reviews"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a13e867ed20873f83d5433d3ae172f4a3eecd2c2", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/a13e867ed20873f83d5433d3ae172f4a3eecd2c2", "committedDate": "2020-03-26T18:40:48Z", "message": "Address code reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzI0MzA3", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-382324307", "createdAt": "2020-03-26T18:59:36Z", "commit": {"oid": "a13e867ed20873f83d5433d3ae172f4a3eecd2c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzQ2NDEx", "url": "https://github.com/opensearch-project/security/pull/304#pullrequestreview-382346411", "createdAt": "2020-03-26T19:29:50Z", "commit": {"oid": "a13e867ed20873f83d5433d3ae172f4a3eecd2c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3025, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}