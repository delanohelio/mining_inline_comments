{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MzMwMTQ2", "number": 234, "title": "Fix to use inner channel when channel is not direct or transport type", "bodyText": "", "createdAt": "2020-02-17T22:06:16Z", "url": "https://github.com/opensearch-project/security/pull/234", "merged": true, "mergeCommit": {"oid": "b9c67da1011ef778efa4b5a6afd9e58cd7ad4676"}, "closed": true, "closedAt": "2020-02-19T00:16:53Z", "author": {"login": "sujithvm"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFUxazgFqTM1OTk4MzE5NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFrLQbgFqTM2MDc2NDQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTgzMTk1", "url": "https://github.com/opensearch-project/security/pull/234#pullrequestreview-359983195", "createdAt": "2020-02-17T22:06:57Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjowNjo1N1rOFqwk4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjowNzozN1rOFqwlYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4MDM4NQ==", "bodyText": "I am not sure if we should change channel to innerChannel here.", "url": "https://github.com/opensearch-project/security/pull/234#discussion_r380380385", "createdAt": "2020-02-17T22:06:57Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/transport/OpenDistroSecurityRequestHandler.java", "diffHunk": "@@ -126,16 +126,9 @@ protected void messageReceivedDecorate(final T request, final TransportRequestHa\n \n             String channelType = transportChannel.getChannelType();\n \n-            if(!channelType.equals(\"direct\") && !channelType.equals(\"transport\")) {\n-                Class wrappedChannelCls = transportChannel.getClass();\n-\n-                try {\n-                    Method getInnerChannel = wrappedChannelCls.getMethod(\"getInnerChannel\", null);\n-                    TransportChannel innerChannel = (TransportChannel)(getInnerChannel.invoke(transportChannel));\n-                    channelType = innerChannel.getChannelType();\n-                } catch (NoSuchMethodException ex) {\n-                    throw new RuntimeException(\"Unknown channel type \" + channelType + \" does not implement getInnerChannel method.\");\n-                }\n+            if (!channelType.equals(\"direct\") && !channelType.equals(\"transport\")) {\n+                TransportChannel innerChannel = getInnerChannel(transportChannel);\n+                channelType = innerChannel.getChannelType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM4MDUxNA==", "bodyText": "Also wondering if this check should come after the following if (!\"transport\".equals(channel.getChannelType())) check", "url": "https://github.com/opensearch-project/security/pull/234#discussion_r380380514", "createdAt": "2020-02-17T22:07:37Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/ssl/transport/OpenDistroSecuritySSLRequestHandler.java", "diffHunk": "@@ -81,6 +82,11 @@ public final void messageReceived(T request, TransportChannel channel, Task task\n             channel.sendResponse(exception);\n             throw exception;\n         }\n+\n+        String channelType = channel.getChannelType();\n+        if (!channelType.equals(\"direct\") && !channelType.equals(\"transport\")) {\n+            channel = getInnerChannel(channel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTk2NTA0", "url": "https://github.com/opensearch-project/security/pull/234#pullrequestreview-359996504", "createdAt": "2020-02-17T22:58:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjo1ODo0N1rOFqxQmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjo1ODo0N1rOFqxQmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM5MTU3Ng==", "bodyText": "Wasn't this originally - (!\"netty\".equals(channel.getChannelType()) && !\"direct\".equals(channel.getChannelType())) based on https://github.com/opendistro-for-elasticsearch/security-ssl/pull/2/files.\nWhy are we checking for !channelType.equals(\"transport\")?", "url": "https://github.com/opensearch-project/security/pull/234#discussion_r380391576", "createdAt": "2020-02-17T22:58:47Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/ssl/transport/OpenDistroSecuritySSLRequestHandler.java", "diffHunk": "@@ -81,6 +82,11 @@ public final void messageReceived(T request, TransportChannel channel, Task task\n             channel.sendResponse(exception);\n             throw exception;\n         }\n+\n+        String channelType = channel.getChannelType();\n+        if (!channelType.equals(\"direct\") && !channelType.equals(\"transport\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0eff9a4a657c1711cbf83e2301a20f8e97db54", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/bb0eff9a4a657c1711cbf83e2301a20f8e97db54", "committedDate": "2020-02-18T23:02:57Z", "message": "Fix to use inner channel when channel is not direct or transport type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzY0NDA1", "url": "https://github.com/opensearch-project/security/pull/234#pullrequestreview-360764405", "createdAt": "2020-02-19T00:13:55Z", "commit": {"oid": "bb0eff9a4a657c1711cbf83e2301a20f8e97db54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2989, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}