{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzM0MDU4", "number": 865, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjozNDoxOFrOE_tJrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMzowNDowNVrOFBDu-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjM1NTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/privileges/DlsFlsEvaluator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjozNDoxOFrOH9js1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODoyMDo0N1rOH9oOrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxMDEwMA==", "bodyText": "Is it necessary to add InvalidIndexNameException to throws?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534310100", "createdAt": "2020-12-02T16:34:18Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/privileges/DlsFlsEvaluator.java", "diffHunk": "@@ -67,7 +68,7 @@ public DlsFlsEvaluator(Settings settings, ThreadPool threadPool) {\n     }\n \n     public PrivilegesEvaluatorResponse evaluate(final ActionRequest request, final ClusterService clusterService, final IndexNameExpressionResolver resolver, final Resolved requestedResolved, final User user,\n-                                                final SecurityRoles securityRoles, final PrivilegesEvaluatorResponse presponse) {\n+                                                final SecurityRoles securityRoles, final PrivilegesEvaluatorResponse presponse) throws InvalidIndexNameException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM4NDMwMw==", "bodyText": "Removed the throws and caught the RuntimeException in OpenDistroSecurityFilter.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534384303", "createdAt": "2020-12-02T18:20:47Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/privileges/DlsFlsEvaluator.java", "diffHunk": "@@ -67,7 +68,7 @@ public DlsFlsEvaluator(Settings settings, ThreadPool threadPool) {\n     }\n \n     public PrivilegesEvaluatorResponse evaluate(final ActionRequest request, final ClusterService clusterService, final IndexNameExpressionResolver resolver, final Resolved requestedResolved, final User user,\n-                                                final SecurityRoles securityRoles, final PrivilegesEvaluatorResponse presponse) {\n+                                                final SecurityRoles securityRoles, final PrivilegesEvaluatorResponse presponse) throws InvalidIndexNameException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxMDEwMA=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjkxMjI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo0MjoyOVrOH9pEeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTowNjoxMFrOH9p-wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5ODA3Mg==", "bodyText": "nit: please keep original code style: } catch () { on a single line.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534398072", "createdAt": "2020-12-02T18:42:29Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,7 +356,11 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n-        } catch (Throwable e) {\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMjk5NA==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534412994", "createdAt": "2020-12-02T19:06:10Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,7 +356,11 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n-        } catch (Throwable e) {\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5ODA3Mg=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjkxNjE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo0MzozN1rOH9pHAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTowNjoyNlrOH9p_Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5ODcyMw==", "bodyText": "should it catch ElasticsearchException instead?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534398723", "createdAt": "2020-12-02T18:43:37Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,7 +356,11 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n-        } catch (Throwable e) {\n+        }\n+        catch (InvalidIndexNameException err) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMzEyNw==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534413127", "createdAt": "2020-12-02T19:06:26Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,7 +356,11 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n-        } catch (Throwable e) {\n+        }\n+        catch (InvalidIndexNameException err) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5ODcyMw=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjkxOTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODo0NDoyMlrOH9pItw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTowMTozN1rOH9p0Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5OTE1OQ==", "bodyText": "add debug logging of the exception.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534399159", "createdAt": "2020-12-02T18:44:22Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,7 +356,11 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n-        } catch (Throwable e) {\n+        }\n+        catch (InvalidIndexNameException err) {\n+            listener.onFailure(err);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMDI3NQ==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534410275", "createdAt": "2020-12-02T19:01:37Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,7 +356,11 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n-        } catch (Throwable e) {\n+        }\n+        catch (InvalidIndexNameException err) {\n+            listener.onFailure(err);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5OTE1OQ=="}, "originalCommit": null, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mjk4NzI4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTowMDozNlrOH9pxpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTo0ODowMlrOH_jMAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ==", "bodyText": "Can you add a test for the same index name in ticket _##pdt_data ?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534409639", "createdAt": "2020-12-02T19:00:36Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQxMjYxMg==", "bodyText": "I tried this, but the # is identified as a fragment and caused  java.lang.IllegalArgumentException: Illegal character in fragment at index.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534412612", "createdAt": "2020-12-02T19:05:32Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxMDgwNg==", "bodyText": "Was this not the original intention of the ticket? _pdt_data is missing index which is already correctly throwing index not found exception?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534510806", "createdAt": "2020-12-02T22:00:54Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyMzQ0OA==", "bodyText": "I agree that this is the particular index name mentioned in the ticket. But ## causes java.net.URISyntaxExceptionat at java.base/java.net.URI.create(URI.java:906). I hope this post helps explain the reason.\nI've changed the index name in the test and added a #.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534523448", "createdAt": "2020-12-02T22:26:22Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzQ3Mw==", "bodyText": "Please check ES behavior without security plugin being installed.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534547473", "createdAt": "2020-12-02T23:16:05Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ2NTM3Mg==", "bodyText": "Without security plugin being installed, ES behaves in the way that we expect after this fix. It responds invalid_index_name_exception to curl -XGET 'http://localhost:9200/_##pdt_data/_search'.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r535465372", "createdAt": "2020-12-03T18:10:26Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkzNDkzNw==", "bodyText": "Is it possible to add this in the tests?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r535934937", "createdAt": "2020-12-04T08:53:14Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3NzkyMg==", "bodyText": "@sujithvm Like I mentioned in the previous comments, using ## fails the unit test due to java.lang.IllegalArgumentException: Illegal character in fragment at index, which is not related to ES or security plugin.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536377922", "createdAt": "2020-12-04T21:03:00Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5ODg1MQ==", "bodyText": "Applied url encoding to the test. Thanks @sujithvm!", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536398851", "createdAt": "2020-12-04T21:48:02Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +473,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(\"_pdt_data/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwOTYzOQ=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzEzMTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTozODo0MVrOH9rJvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMDowMjo1OVrOH9sAhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMjE5MQ==", "bodyText": "Will this log exception? Please provide sample output.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534432191", "createdAt": "2020-12-02T19:38:41Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +356,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {\n+            log.debug(err);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ0NjIxNQ==", "bodyText": "Changed it to log exception. The output is: Unexpected exception [_] InvalidIndexNameException[Invalid index name [_], must not start with '_'.] Please let me know if any comments on the exception message.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534446215", "createdAt": "2020-12-02T20:02:59Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +356,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {\n+            log.debug(err);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzMjE5MQ=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mzg1MzEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzowNzozN1rOH9x8Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzo0MDo0NFrOH9yyaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0MzM5OA==", "bodyText": "Is this still necessary?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534543398", "createdAt": "2020-12-02T23:07:37Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -77,6 +77,7 @@\n import org.elasticsearch.common.util.concurrent.ThreadContext.StoredContext;\n import org.elasticsearch.index.reindex.DeleteByQueryRequest;\n import org.elasticsearch.index.reindex.UpdateByQueryRequest;\n+import org.elasticsearch.indices.InvalidIndexNameException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1NzI5MQ==", "bodyText": "Removed.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534557291", "createdAt": "2020-12-02T23:40:44Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -77,6 +77,7 @@\n import org.elasticsearch.common.util.concurrent.ThreadContext.StoredContext;\n import org.elasticsearch.index.reindex.DeleteByQueryRequest;\n import org.elasticsearch.index.reindex.UpdateByQueryRequest;\n+import org.elasticsearch.indices.InvalidIndexNameException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0MzM5OA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mzg3NzkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoxNToxOFrOH9yKoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNjozODoxM1rOH9912g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzEwNQ==", "bodyText": "This is an anti-pattern. There is no point to log exception message twice.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534547105", "createdAt": "2020-12-02T23:15:18Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +356,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {\n+            log.error(\"Unexpected exception \"+ err, err);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1NzE3Nw==", "bodyText": "I followed the existing code style of this line. Does this look better now?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534557177", "createdAt": "2020-12-02T23:40:22Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +356,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {\n+            log.error(\"Unexpected exception \"+ err, err);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzEwNQ=="}, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NTU3NQ==", "bodyText": "When logging an exception, it is always better to have stack trace logged as well. It is also necessary to avoid premature string concatenation and rely on place holder instead. I don't think that \"Unexpected\" is the right message here. It is expected for the wrong parameters provided (wrong index name). I also think that logging it at error level is not necessary and debug (or warning) should be sufficient.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534565575", "createdAt": "2020-12-03T00:02:45Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +356,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {\n+            log.error(\"Unexpected exception \"+ err, err);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzEwNQ=="}, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDczODM5NA==", "bodyText": "Changed the exception logs.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534738394", "createdAt": "2020-12-03T06:38:13Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +356,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {\n+            log.error(\"Unexpected exception \"+ err, err);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzEwNQ=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NDE3Nzg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMToxMjozNFrOH905fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNToyNlrOH-qebA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU5MTg3MQ==", "bodyText": "nit: err -> e", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r534591871", "createdAt": "2020-12-03T01:12:34Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ2OTY3Ng==", "bodyText": "Done", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r535469676", "createdAt": "2020-12-03T18:15:26Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException err) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU5MTg3MQ=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDc1NDQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNjo1MTo0NFrOH_ZWfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjoyMDowN1rOH_kU8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIzNzY5NQ==", "bodyText": "May task be null?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536237695", "createdAt": "2020-12-04T16:51:44Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            log.debug(\"Failed to apply filter. Task id: {} ({}). Action: {}\", task.getId(), task.getDescription(), action, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM3NzA5OQ==", "bodyText": "task is not going to be null here. Otherwise, other usages of task prior to this line in this method would simply complain null pointer exception.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536377099", "createdAt": "2020-12-04T21:01:11Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            log.debug(\"Failed to apply filter. Task id: {} ({}). Action: {}\", task.getId(), task.getDescription(), action, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIzNzY5NQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5MTYxNA==", "bodyText": "Where previously are we accessing a member of task? null check should be handled in the functions it is passed to", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536391614", "createdAt": "2020-12-04T21:31:59Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            log.debug(\"Failed to apply filter. Task id: {} ({}). Action: {}\", task.getId(), task.getDescription(), action, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIzNzY5NQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQwODYzMg==", "bodyText": "@sujithvm A lot of usages of task in this function, such as here", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536408632", "createdAt": "2020-12-04T22:00:07Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            log.debug(\"Failed to apply filter. Task id: {} ({}). Action: {}\", task.getId(), task.getDescription(), action, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIzNzY5NQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQxMzUzNw==", "bodyText": "We are not accessing a member of the object there. Elasticsearch proceed function will handle the null task. Here we are directly accessing a class member task.getId(), task.getDescription()", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536413537", "createdAt": "2020-12-04T22:11:13Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            log.debug(\"Failed to apply filter. Task id: {} ({}). Action: {}\", task.getId(), task.getDescription(), action, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIzNzY5NQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQxNzUyMg==", "bodyText": "@sujithvm Yes, this is indeed the only place where the members of task are accesses. I've added the null check.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536417522", "createdAt": "2020-12-04T22:20:07Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,9 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            log.debug(\"Failed to apply filter. Task id: {} ({}). Action: {}\", task.getId(), task.getDescription(), action, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIzNzY5NQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NjAzOTI2OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjo0NDoyNlrOH_k8sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMjo1MTo0M1rOH_lHrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyNzY5Ng==", "bodyText": "Is it possible to create separate test as it is not related to cross cluster search?", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536427696", "createdAt": "2020-12-04T22:44:26Z", "author": {"login": "sujithvm"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +474,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(URLEncoder.encode(\"_##pdt_data/_search\", \"UTF-8\"), encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, res.getStatusCode());\n+        Assert.assertTrue(res.getBody().contains(\"invalid_index_name_exception\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQzMDUwOA==", "bodyText": "Done", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536430508", "createdAt": "2020-12-04T22:51:43Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/IndexIntegrationTests.java", "diffHunk": "@@ -473,7 +474,13 @@ public void testCCSIndexResolve() throws Exception {\n \n         res = rh.executeGetRequest(\"/*:.abc-6,.abc-6/_search\", encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n         Assert.assertEquals(HttpStatus.SC_OK, res.getStatusCode());\n+\n         //TODO: Change for 25.0 to be forbidden (possible bug in ES regarding ccs wildcard)\n+\n+        // invalid_index_name_exception should be thrown and responded when invalid index name is mentioned in requests.\n+        res = rh.executeGetRequest(URLEncoder.encode(\"_##pdt_data/_search\", \"UTF-8\"), encodeBasicHeader(\"ccsresolv\", \"nagilum\"));\n+        Assert.assertEquals(HttpStatus.SC_BAD_REQUEST, res.getStatusCode());\n+        Assert.assertTrue(res.getBody().contains(\"invalid_index_name_exception\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQyNzY5Ng=="}, "originalCommit": null, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NjU0MDcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMzowNDowNVrOH_ozyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMzoyNzo0NlrOH_pCXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ5MDk1Mw==", "bodyText": "nit: please follow code style of the file. Even though we don't enforce code style across files in the project, it will be better to keep it the same at least within file/function. In this method } else { should be on the same line as }.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536490953", "createdAt": "2020-12-05T03:04:05Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,14 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            if (task != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ5NDY4NQ==", "bodyText": "Done.", "url": "https://github.com/opensearch-project/security/pull/865#discussion_r536494685", "createdAt": "2020-12-05T03:27:46Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -355,6 +355,14 @@ public void onFailure(Exception e) {\n                 listener.onFailure(new ElasticsearchSecurityException(err, RestStatus.FORBIDDEN));\n                 return;\n             }\n+        } catch (ElasticsearchException e) {\n+            if (task != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ5MDk1Mw=="}, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2248, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}