{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNjI4NzY2", "number": 256, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODozOToyMVrODkYMYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODozOToyMVrODkYMYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDcxNzEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODozOToyMVrOFwqqhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDowOTo0M1rOFwtlGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ==", "bodyText": "Can you verify if  resources are stored by username + \".\" + ConfigConstants.CONFIGKEY_READONLY  and this works as expected", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386574981", "createdAt": "2020-03-02T18:39:21Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -115,9 +115,7 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         }\n \n         // check if resource is writeable\n-        Boolean readOnly = configurationSettings.v2().getAsBoolean(username + \".\" + ConfigConstants.CONFIGKEY_READONLY,\n-                Boolean.FALSE);\n-        if (readOnly) {\n+        if (!isReadOnlyAndAccessible(configurationSettings.v2(), username)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd7d193ae43da25854d3713d044869e35fa8c12"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5ODIzMg==", "bodyText": "Yes, looks like this mechanism in place\nexample -  v2={\"admin.attributes.attribute1\":\"value1\",\"admin.attributes.attribute2\":\"value2\"", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386598232", "createdAt": "2020-03-02T19:21:45Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -115,9 +115,7 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         }\n \n         // check if resource is writeable\n-        Boolean readOnly = configurationSettings.v2().getAsBoolean(username + \".\" + ConfigConstants.CONFIGKEY_READONLY,\n-                Boolean.FALSE);\n-        if (readOnly) {\n+        if (!isReadOnlyAndAccessible(configurationSettings.v2(), username)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, "originalCommit": {"oid": "5dd7d193ae43da25854d3713d044869e35fa8c12"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5OTI5Mg==", "bodyText": "Its just the way of lookup in the settings, my code doesn't interfere with the logic change for the lookup", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386599292", "createdAt": "2020-03-02T19:23:25Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -115,9 +115,7 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         }\n \n         // check if resource is writeable\n-        Boolean readOnly = configurationSettings.v2().getAsBoolean(username + \".\" + ConfigConstants.CONFIGKEY_READONLY,\n-                Boolean.FALSE);\n-        if (readOnly) {\n+        if (!isReadOnlyAndAccessible(configurationSettings.v2(), username)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, "originalCommit": {"oid": "5dd7d193ae43da25854d3713d044869e35fa8c12"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwNTg0OQ==", "bodyText": "Correct me if i m wrong. It looks like in v6, read only internal user resource is suffixed with .ConfigConstants.CONFIGKEY_READONLY. Dont we need to check for this also in isReadOnlyAndAccessible function?", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386605849", "createdAt": "2020-03-02T19:35:42Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -115,9 +115,7 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         }\n \n         // check if resource is writeable\n-        Boolean readOnly = configurationSettings.v2().getAsBoolean(username + \".\" + ConfigConstants.CONFIGKEY_READONLY,\n-                Boolean.FALSE);\n-        if (readOnly) {\n+        if (!isReadOnlyAndAccessible(configurationSettings.v2(), username)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, "originalCommit": {"oid": "5dd7d193ae43da25854d3713d044869e35fa8c12"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxMDcxMQ==", "bodyText": "There is a function isReadOnly which has this check and isReadOnlyAndAccessible is calling this isReadOnly function.\nThe one thing I noticed is all other api were making use of this function but not internalusers[code duplication]. now internalusers is also making use of isReadOnly via isReadOnlyAndAccessible", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386610711", "createdAt": "2020-03-02T19:45:38Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -115,9 +115,7 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         }\n \n         // check if resource is writeable\n-        Boolean readOnly = configurationSettings.v2().getAsBoolean(username + \".\" + ConfigConstants.CONFIGKEY_READONLY,\n-                Boolean.FALSE);\n-        if (readOnly) {\n+        if (!isReadOnlyAndAccessible(configurationSettings.v2(), username)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, "originalCommit": {"oid": "5dd7d193ae43da25854d3713d044869e35fa8c12"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyMjc0Ng==", "bodyText": "Alright. I see isReadOnly has implemented the same", "url": "https://github.com/opensearch-project/security/pull/256#discussion_r386622746", "createdAt": "2020-03-02T20:09:43Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -115,9 +115,7 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n         }\n \n         // check if resource is writeable\n-        Boolean readOnly = configurationSettings.v2().getAsBoolean(username + \".\" + ConfigConstants.CONFIGKEY_READONLY,\n-                Boolean.FALSE);\n-        if (readOnly) {\n+        if (!isReadOnlyAndAccessible(configurationSettings.v2(), username)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NDk4MQ=="}, "originalCommit": {"oid": "5dd7d193ae43da25854d3713d044869e35fa8c12"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2529, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}