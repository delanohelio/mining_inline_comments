{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNjg5OTQz", "number": 766, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDozNDozM1rOEtNt-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMDo0NTowOFrOEuPB3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODQ2MTM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDozNDozM1rOHg4gHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo0ODoyNFrOHg6ssg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0MjIwNA==", "bodyText": "Consider using Pattern.splitAsStream(). Compile pattern in the HTTPProxyAuthenticator constructor.", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504242204", "createdAt": "2020-10-13T20:34:33Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +78,8 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = Stream.of(roles.split(rolesSeparator)).map(String::trim).toArray(String[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODE5NA==", "bodyText": "Filter out empty string after trim().", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504278194", "createdAt": "2020-10-13T21:48:24Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +78,8 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = Stream.of(roles.split(rolesSeparator)).map(String::trim).toArray(String[]::new);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI0MjIwNA=="}, "originalCommit": {"oid": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODY5NjExOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo0OTowNVrOHg6txA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo0OTowNVrOHg6txA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3ODQ2OA==", "bodyText": "avoid wildcard import", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504278468", "createdAt": "2020-10-13T21:49:05Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "diffHunk": "@@ -29,6 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n+import static org.hamcrest.MatcherAssert.*;\n+import static org.hamcrest.Matchers.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODcwNDE0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMTo1MTo1NlrOHg6ydA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowNjoyOVrOHhlDhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3OTY2OA==", "bodyText": "nit: prefer junit over hamcrest.", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504279668", "createdAt": "2020-10-13T21:51:56Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "diffHunk": "@@ -29,6 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n+import static org.hamcrest.MatcherAssert.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzMjI5Mg==", "bodyText": "In this case (list comparison), I think that hamcrest is better than junit.\nWhy should junit be prefered to hamcrest ?", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504432292", "createdAt": "2020-10-14T06:31:50Z", "author": {"login": "mmadoo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "diffHunk": "@@ -29,6 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n+import static org.hamcrest.MatcherAssert.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3OTY2OA=="}, "originalCommit": {"oid": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3MjE2Ng==", "bodyText": "For consistency. Looking at the code it is hard to guess that assertNull() is from different library than assertThat().", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504972166", "createdAt": "2020-10-14T21:06:29Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/http/proxy/HTTPExtendedProxyAuthenticatorTest.java", "diffHunk": "@@ -29,6 +29,8 @@\n  */\n package com.amazon.opendistroforelasticsearch.security.http.proxy;\n \n+import static org.hamcrest.MatcherAssert.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI3OTY2OA=="}, "originalCommit": {"oid": "2577f60cd17d3079cc3733d51e5f8ea6fb49807b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzEzOTMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowMToxMFrOHhk5aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowMToxMFrOHhk5aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2OTU3Ng==", "bodyText": "Compile pattern once in the constructor.", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504969576", "createdAt": "2020-10-14T21:01:10Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +78,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = Pattern.compile(rolesSeparator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzE0MDg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowMTo0MlrOHhk6Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTowMTo0MlrOHhk6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk2OTgxMQ==", "bodyText": "AFAIK, it can't be null, it can be empty.", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r504969811", "createdAt": "2020-10-14T21:01:42Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +78,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = Pattern.compile(rolesSeparator)\n+                        .splitAsStream(roles)\n+                        .map(String::trim)\n+                        .filter(role -> !Strings.isNullOrEmpty(role))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e79b6c2392bba25ae537dc70d4b1eb74ab45a5"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTEyNzAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMDozMToyMlrOHif-pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMDozMToyMlrOHif-pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkzNzU3Mg==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .filter(role -> !\"\".equals(role))\n          \n          \n            \n                                    .filter(Predicates.not(String::isEmpty))", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r505937572", "createdAt": "2020-10-16T00:31:22Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +79,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);\n+                backendRoles = rolesSeparator\n+                        .splitAsStream(roles)\n+                        .map(String::trim)\n+                        .filter(role -> !\"\".equals(role))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e35298f977a9bbc25c6b7eabbb4b931d3395f6"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTE2MTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMDo0NTowOFrOHigVGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMDo0NTowOFrOHigVGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk0MzMyMw==", "bodyText": "nit: inline roles.", "url": "https://github.com/opensearch-project/security/pull/766#discussion_r505943323", "createdAt": "2020-10-16T00:45:08Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/http/HTTPProxyAuthenticator.java", "diffHunk": "@@ -77,7 +79,12 @@ public AuthCredentials extractCredentials(final RestRequest request, ThreadConte\n             String[] backendRoles = null;\n \n             if (!Strings.isNullOrEmpty(rolesHeader) && !Strings.isNullOrEmpty((String) request.header(rolesHeader))) {\n-                backendRoles = ((String) request.header(rolesHeader)).split(rolesSeparator);\n+                String roles = (String) request.header(rolesHeader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20e35298f977a9bbc25c6b7eabbb4b931d3395f6"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2324, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}