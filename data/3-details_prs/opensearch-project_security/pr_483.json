{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjUyNjk3", "number": 483, "title": "Remove immutable indices from compliance config", "bodyText": "Removing immutable indices from compliance config as immutable indices changes the behavior of request handling and should not be impacted by enabling/disabling compliance config.\n\n\nThere is testImmutableIndex test which passes. Migrated ComplianceConfigTest to OpenDistroSecurityFilterTest", "createdAt": "2020-06-01T22:45:03Z", "url": "https://github.com/opensearch-project/security/pull/483", "merged": true, "mergeCommit": {"oid": "8fad0b62ad6c7d7a0ec91145e544d19f6091a056"}, "closed": true, "closedAt": "2020-06-02T17:21:43Z", "author": {"login": "sujithvm"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnJE0KAFqTQyMjI0OTQwNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnYEMjAFqTQyMjg4Nzg2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjQ5NDA1", "url": "https://github.com/opensearch-project/security/pull/483#pullrequestreview-422249405", "createdAt": "2020-06-01T23:37:34Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzozNzozNFrOGddZ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzo0MzoyN1rOGddgMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0MzY0OQ==", "bodyText": "nit: construct WildcardMatcher inside OpenDistroSecurityFilter to fully encapsulate implementation details (whether it is implemented as WildcardMatcher or differently is internal to OpenDistroSecurityFilter). Move logging of immutableIndices to the OpenDistroSecurityFilter as well.", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433543649", "createdAt": "2020-06-01T23:37:34Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilter.java", "diffHunk": "@@ -107,6 +108,7 @@ public OpenDistroSecurityFilter(final PrivilegesEvaluator evalp, final AdminDNs\n         this.cs = cs;\n         this.compatConfig = compatConfig;\n         this.indexResolverReplacer = indexResolverReplacer;\n+        this.immutableIndicesMatcher = immutableIndicesMatcher;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NTI2NQ==", "bodyText": "Can deleted test be moved to OpenDistroSecurityFilterTest (create if if necessary)?", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433545265", "createdAt": "2020-06-01T23:43:27Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/compliance/ComplianceConfigTest.java", "diffHunk": "@@ -35,7 +35,6 @@ public void testDefault() {\n         assertFalse(complianceConfig.shouldLogReadMetadataOnly());\n         assertFalse(complianceConfig.shouldLogWriteMetadataOnly());\n         assertFalse(complianceConfig.shouldLogDiffsForWrite());\n-        assertSame(WildcardMatcher.NONE, complianceConfig.getImmutableIndicesMatcher());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/45aea174b3eb3a645cb6f9663ae48e31c4c57c8f", "committedDate": "2020-06-02T01:20:03Z", "message": "Remove immutable indices from compliance config and inject directly to the request filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjg3Njky", "url": "https://github.com/opensearch-project/security/pull/483#pullrequestreview-422287692", "createdAt": "2020-06-02T01:41:10Z", "commit": {"oid": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo0MToxMVrOGdfXoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo0MToxMVrOGdfXoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NTg0MA==", "bodyText": "Please create a follow up PR/issue to remove final from IndexResolverReplacer and mock IndexResolverReplacer.", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433575840", "createdAt": "2020-06-02T01:41:11Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package com.amazon.opendistroforelasticsearch.security.filter;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n+import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n+import com.amazon.opendistroforelasticsearch.security.configuration.ClusterInfoHolder;\n+import com.amazon.opendistroforelasticsearch.security.configuration.CompatConfig;\n+import com.amazon.opendistroforelasticsearch.security.configuration.DlsFlsRequestValve;\n+import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n+import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.amazon.opendistroforelasticsearch.security.support.WildcardMatcher;\n+import com.google.common.collect.ImmutableSet;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.mock;\n+\n+@RunWith(Parameterized.class)\n+public class OpenDistroSecurityFilterTest {\n+\n+    private final Settings settings;\n+    private final WildcardMatcher expected;\n+\n+    public OpenDistroSecurityFilterTest(Settings settings, WildcardMatcher expected) {\n+        this.settings = settings;\n+        this.expected = expected;\n+    }\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+        return Arrays.asList(new Object[][]{\n+                {Settings.EMPTY, WildcardMatcher.NONE},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+        });\n+    }\n+\n+    @Test\n+    public void testImmutableIndicesWildcardMatcher() {\n+        // act\n+        final OpenDistroSecurityFilter filter = new OpenDistroSecurityFilter(\n+                settings,\n+                mock(PrivilegesEvaluator.class),\n+                mock(AdminDNs.class),\n+                mock(DlsFlsRequestValve.class),\n+                mock(AuditLog.class),\n+                mock(ThreadPool.class),\n+                mock(ClusterService.class),\n+                mock(CompatConfig.class),\n+                new IndexResolverReplacer(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjg4NzYy", "url": "https://github.com/opensearch-project/security/pull/483#pullrequestreview-422288762", "createdAt": "2020-06-02T01:44:39Z", "commit": {"oid": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo0NDozOVrOGdfa2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMTo0NDozOVrOGdfa2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU3NjY2Nw==", "bodyText": "nit: not sure that this and the other comment is necessary.", "url": "https://github.com/opensearch-project/security/pull/483#discussion_r433576667", "createdAt": "2020-06-02T01:44:39Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/filter/OpenDistroSecurityFilterTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package com.amazon.opendistroforelasticsearch.security.filter;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.AuditLog;\n+import com.amazon.opendistroforelasticsearch.security.configuration.AdminDNs;\n+import com.amazon.opendistroforelasticsearch.security.configuration.ClusterInfoHolder;\n+import com.amazon.opendistroforelasticsearch.security.configuration.CompatConfig;\n+import com.amazon.opendistroforelasticsearch.security.configuration.DlsFlsRequestValve;\n+import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n+import com.amazon.opendistroforelasticsearch.security.resolver.IndexResolverReplacer;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.amazon.opendistroforelasticsearch.security.support.WildcardMatcher;\n+import com.google.common.collect.ImmutableSet;\n+import org.elasticsearch.cluster.metadata.IndexNameExpressionResolver;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.threadpool.ThreadPool;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.mock;\n+\n+@RunWith(Parameterized.class)\n+public class OpenDistroSecurityFilterTest {\n+\n+    private final Settings settings;\n+    private final WildcardMatcher expected;\n+\n+    public OpenDistroSecurityFilterTest(Settings settings, WildcardMatcher expected) {\n+        this.settings = settings;\n+        this.expected = expected;\n+    }\n+\n+    @Parameterized.Parameters\n+    public static Collection<Object[]> data() {\n+        return Arrays.asList(new Object[][]{\n+                {Settings.EMPTY, WildcardMatcher.NONE},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+                {Settings.builder()\n+                        .putList(ConfigConstants.OPENDISTRO_SECURITY_COMPLIANCE_IMMUTABLE_INDICES, \"immutable1\", \"immutable2\", \"immutable2\")\n+                        .build(),\n+                        WildcardMatcher.from(ImmutableSet.of(\"immutable1\", \"immutable2\"))},\n+        });\n+    }\n+\n+    @Test\n+    public void testImmutableIndicesWildcardMatcher() {\n+        // act", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjg4Nzg5", "url": "https://github.com/opensearch-project/security/pull/483#pullrequestreview-422288789", "createdAt": "2020-06-02T01:44:44Z", "commit": {"oid": "45aea174b3eb3a645cb6f9663ae48e31c4c57c8f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "298016dee61971add1f190c0c032a13c65578714", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/298016dee61971add1f190c0c032a13c65578714", "committedDate": "2020-06-02T03:56:11Z", "message": "code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMzMwNjg2", "url": "https://github.com/opensearch-project/security/pull/483#pullrequestreview-422330686", "createdAt": "2020-06-02T04:17:06Z", "commit": {"oid": "298016dee61971add1f190c0c032a13c65578714"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyODg3ODY0", "url": "https://github.com/opensearch-project/security/pull/483#pullrequestreview-422887864", "createdAt": "2020-06-02T17:11:26Z", "commit": {"oid": "298016dee61971add1f190c0c032a13c65578714"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2937, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}