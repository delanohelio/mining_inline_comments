{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MDM0NzA4", "number": 556, "title": "Fix: Make sure Internal users API supports adding reserved opendistrosecurityroles (by superuser). Do not filter out reserved roles in the InternalUsersModelV7", "bodyText": "Issue #, if available:\nRelated to issue https://github.com/opendistro-for-elasticsearch/security/issues/555\nDescription of changes:\nPR https://github.com/opendistro-for-elasticsearch/security/pull/486 added extra validation in the internal users API for opendistro_security_roles. This validation was to ensure that users cannot add hidden roles to opendistro_security_roles. However, this PR incorrectly forbade users from adding reserved roles and incorrectly filtered out the reserved roles.\nThis PR will allow superadmin users to add reserved roles to opendistro_security_roles via the internal users API.\nThis is the same check done by the rolesmapping API while associating a user with a role - (See https://github.com/opendistro-for-elasticsearch/security/blob/6fde7a28e9c0945613b9b91ba84976a4616d1266/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java#L194-L202 (RolesMappingApiAction is a extension of AbstractApiAction)).\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-07-13T04:59:15Z", "url": "https://github.com/opensearch-project/security/pull/556", "merged": true, "mergeCommit": {"oid": "41fcc0230eab891cbade72853787364a90c130d7"}, "closed": true, "closedAt": "2020-07-20T17:12:31Z", "author": {"login": "debjanibnrj"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0t6_FAFqTQ0Nzc2MjY1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc20zaqgFqTQ1MTc5OTM4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzYyNjU4", "url": "https://github.com/opensearch-project/security/pull/556#pullrequestreview-447762658", "createdAt": "2020-07-14T03:40:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMzo0MDoxN1rOGxC12A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMzo1ODowN1rOGxDHzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3OTk2MA==", "bodyText": "Not sure if we need to change to \"read-only\", but I saw a similar message in a different class, so probably as long as it is consistent with all the code, should be good.", "url": "https://github.com/opensearch-project/security/pull/556#discussion_r454079960", "createdAt": "2020-07-14T03:40:17Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -126,8 +126,8 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n                     return;\n                 }\n \n-                if (isReserved(rolesConfiguration, role)) {\n-                    forbidden(channel, \"Role '\" + role + \"' is reserved.\");\n+                if (!isReservedAndAccessible(rolesConfiguration, role)) {\n+                    forbidden(channel, \"Role '\" + role + \"' is read-only.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA4MzIzMw==", "bodyText": "We can still keep this check with updated message.", "url": "https://github.com/opensearch-project/security/pull/556#discussion_r454083233", "createdAt": "2020-07-14T03:53:06Z", "author": {"login": "dinusX"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/UserApiTest.java", "diffHunk": "@@ -121,25 +121,26 @@ public void testUserApi() throws Exception {\n         Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n         Assert.assertTrue(response.getBody().contains(\"\\\"hidden\\\":true\"));\n \n-        // Associating with reserved or hidden role is not allowed\n+        // Associating with hidden role is not allowed\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/nagilum\", \"{ \\\"opendistro_security_roles\\\": [\\\"opendistro_security_hidden\\\"]}\",\n             new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n         settings = Settings.builder().loadFromSource(response.getBody(), XContentType.JSON).build();\n         Assert.assertEquals(settings.get(\"message\"), \"Role 'opendistro_security_hidden' is not found.\");\n \n+        // Associating with reserved role is allowed (for superamdin)\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/test\", \"{ \\\"opendistro_security_roles\\\": [\\\"opendistro_security_reserved\\\"], \" +\n+                \"\\\"hash\\\": \\\"123\\\"}\",\n+            new Header[0]);\n+        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        // Associating with non-existent role is not allowed\n         response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/nagilum\", \"{ \\\"opendistro_security_roles\\\": [\\\"non_existent\\\"]}\",\n             new Header[0]);\n         Assert.assertEquals(HttpStatus.SC_NOT_FOUND, response.getStatusCode());\n         settings = Settings.builder().loadFromSource(response.getBody(), XContentType.JSON).build();\n         Assert.assertEquals(settings.get(\"message\"), \"Role 'non_existent' is not found.\");\n \n-        response = rh.executePutRequest(\"/_opendistro/_security/api/internalusers/nagilum\", \"{ \\\"opendistro_security_roles\\\": [\\\"opendistro_security_reserved\\\"]}\",\n-            new Header[0]);\n-        Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n-        settings = Settings.builder().loadFromSource(response.getBody(), XContentType.JSON).build();\n-        Assert.assertEquals(settings.get(\"message\"), \"Role 'opendistro_security_reserved' is reserved.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA4NDU1OQ==", "bodyText": "There is one more class that still uses \"isReseved()\". Could you check if we need to update it too ? https://github.com/opendistro-for-elasticsearch/security/blob/e97d30d204c42c1a9518c85039144fcdadc0e590/src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AccountApiAction.java#L201\nIt would be great if we can rename this method. This name is very confusing and will cause issues in the future. We should use either \"isReservedAndNotAccessible\" (without negation sign) or \"isReservedAndForbidden\", or anything similar were both words have the same meaning (restricting access).", "url": "https://github.com/opensearch-project/security/pull/556#discussion_r454084559", "createdAt": "2020-07-14T03:58:07Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/InternalUsersApiAction.java", "diffHunk": "@@ -126,8 +126,8 @@ protected void handlePut(RestChannel channel, final RestRequest request, final C\n                     return;\n                 }\n \n-                if (isReserved(rolesConfiguration, role)) {\n-                    forbidden(channel, \"Role '\" + role + \"' is reserved.\");\n+                if (!isReservedAndAccessible(rolesConfiguration, role)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "committedDate": "2020-07-14T20:20:20Z", "message": "Fix: Make sure Internal users API supports adding reserved opendistrosecurityroles (by superuser). Do not filter out reserved roles in the InternalUsersModelV7"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "author": {"user": {"login": "debjanibnrj", "name": "Debjani Banerjee"}}, "url": "https://github.com/opensearch-project/security/commit/630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e", "committedDate": "2020-07-14T20:20:20Z", "message": "Fix: Make sure Internal users API supports adding reserved opendistrosecurityroles (by superuser). Do not filter out reserved roles in the InternalUsersModelV7"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NTUzNDc4", "url": "https://github.com/opensearch-project/security/pull/556#pullrequestreview-448553478", "createdAt": "2020-07-15T00:33:18Z", "commit": {"oid": "630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzk5Mzg3", "url": "https://github.com/opensearch-project/security/pull/556#pullrequestreview-451799387", "createdAt": "2020-07-20T17:09:13Z", "commit": {"oid": "630ceb536d30fd8c1f0c6d2be7daa5fead13fc1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2820, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}