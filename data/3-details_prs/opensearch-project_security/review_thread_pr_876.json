{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyODQyOTUx", "number": 876, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzoxODoxNFrOFUYuwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzo0MDo0NlrOFUZF-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2OTIxMDI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentials.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzoxODoxNFrOIcX2gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQyMTozNjowNFrOIc1dYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMTgyNw==", "bodyText": "Do we need to add && Objects.equals(password, other.password) here?", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r566621827", "createdAt": "2021-01-29T07:18:14Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentials.java", "diffHunk": "@@ -175,19 +176,16 @@ public int hashCode() {\n     public boolean equals(Object obj) {\n         if (this == obj)\n             return true;\n-        if (obj == null)\n-            return false;\n-        if (getClass() != obj.getClass())\n+        if (obj == null || getClass() != obj.getClass()) {\n             return false;\n+        }\n+\n         AuthCredentials other = (AuthCredentials) obj;\n-        if (internalPasswordHash == null || other.internalPasswordHash == null || !MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash))\n-            return false;\n-        if (username == null) {\n-            if (other.username != null)\n-                return false;\n-        } else if (!username.equals(other.username))\n-            return false;\n-        return true;\n+        return Objects.equals(username, other.username)\n+            && Objects.equals(nativeCredentials, other.nativeCredentials)\n+            && Objects.equals(backendRoles, other.backendRoles)\n+            && MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash)\n+            && Objects.equals(attributes, other.attributes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzAxNTQ5Nw==", "bodyText": "The password is always filled with nulls and then set to null in the constructor, and the internalPasswordHash is used instead. We can check it here though if you prefer.", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r567015497", "createdAt": "2021-01-29T18:33:32Z", "author": {"login": "nicot"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentials.java", "diffHunk": "@@ -175,19 +176,16 @@ public int hashCode() {\n     public boolean equals(Object obj) {\n         if (this == obj)\n             return true;\n-        if (obj == null)\n-            return false;\n-        if (getClass() != obj.getClass())\n+        if (obj == null || getClass() != obj.getClass()) {\n             return false;\n+        }\n+\n         AuthCredentials other = (AuthCredentials) obj;\n-        if (internalPasswordHash == null || other.internalPasswordHash == null || !MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash))\n-            return false;\n-        if (username == null) {\n-            if (other.username != null)\n-                return false;\n-        } else if (!username.equals(other.username))\n-            return false;\n-        return true;\n+        return Objects.equals(username, other.username)\n+            && Objects.equals(nativeCredentials, other.nativeCredentials)\n+            && Objects.equals(backendRoles, other.backendRoles)\n+            && MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash)\n+            && Objects.equals(attributes, other.attributes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMTgyNw=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzA3MTE5Nw==", "bodyText": "Is it possible to be non-null values in any scenarios? If so, I'd add a check for it.", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r567071197", "createdAt": "2021-01-29T20:17:27Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentials.java", "diffHunk": "@@ -175,19 +176,16 @@ public int hashCode() {\n     public boolean equals(Object obj) {\n         if (this == obj)\n             return true;\n-        if (obj == null)\n-            return false;\n-        if (getClass() != obj.getClass())\n+        if (obj == null || getClass() != obj.getClass()) {\n             return false;\n+        }\n+\n         AuthCredentials other = (AuthCredentials) obj;\n-        if (internalPasswordHash == null || other.internalPasswordHash == null || !MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash))\n-            return false;\n-        if (username == null) {\n-            if (other.username != null)\n-                return false;\n-        } else if (!username.equals(other.username))\n-            return false;\n-        return true;\n+        return Objects.equals(username, other.username)\n+            && Objects.equals(nativeCredentials, other.nativeCredentials)\n+            && Objects.equals(backendRoles, other.backendRoles)\n+            && MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash)\n+            && Objects.equals(attributes, other.attributes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMTgyNw=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzA4NTQ1OQ==", "bodyText": "It is not possible in any scenarios, but I can still add the check, is that what you'd prefer?", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r567085459", "createdAt": "2021-01-29T20:48:29Z", "author": {"login": "nicot"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentials.java", "diffHunk": "@@ -175,19 +176,16 @@ public int hashCode() {\n     public boolean equals(Object obj) {\n         if (this == obj)\n             return true;\n-        if (obj == null)\n-            return false;\n-        if (getClass() != obj.getClass())\n+        if (obj == null || getClass() != obj.getClass()) {\n             return false;\n+        }\n+\n         AuthCredentials other = (AuthCredentials) obj;\n-        if (internalPasswordHash == null || other.internalPasswordHash == null || !MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash))\n-            return false;\n-        if (username == null) {\n-            if (other.username != null)\n-                return false;\n-        } else if (!username.equals(other.username))\n-            return false;\n-        return true;\n+        return Objects.equals(username, other.username)\n+            && Objects.equals(nativeCredentials, other.nativeCredentials)\n+            && Objects.equals(backendRoles, other.backendRoles)\n+            && MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash)\n+            && Objects.equals(attributes, other.attributes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMTgyNw=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzEwNjkxNA==", "bodyText": "Yes, let's add the check. Thanks!", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r567106914", "createdAt": "2021-01-29T21:36:04Z", "author": {"login": "cliu123"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentials.java", "diffHunk": "@@ -175,19 +176,16 @@ public int hashCode() {\n     public boolean equals(Object obj) {\n         if (this == obj)\n             return true;\n-        if (obj == null)\n-            return false;\n-        if (getClass() != obj.getClass())\n+        if (obj == null || getClass() != obj.getClass()) {\n             return false;\n+        }\n+\n         AuthCredentials other = (AuthCredentials) obj;\n-        if (internalPasswordHash == null || other.internalPasswordHash == null || !MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash))\n-            return false;\n-        if (username == null) {\n-            if (other.username != null)\n-                return false;\n-        } else if (!username.equals(other.username))\n-            return false;\n-        return true;\n+        return Objects.equals(username, other.username)\n+            && Objects.equals(nativeCredentials, other.nativeCredentials)\n+            && Objects.equals(backendRoles, other.backendRoles)\n+            && MessageDigest.isEqual(internalPasswordHash, other.internalPasswordHash)\n+            && Objects.equals(attributes, other.attributes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMTgyNw=="}, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2OTIyMzcxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentialsTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzoyMzo0MVrOIcX-YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDo0MzoyNVrOIdzrlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMzg0MQ==", "bodyText": "Add 2 test cases?\n\nobject.internalPasswordHash == null && other.internalPasswordHash == null ==> equals() returns true\nobject.internalPasswordHash == null && other.internalPasswordHash == <non-null value> ==> equals() returns false.", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r566623841", "createdAt": "2021-01-29T07:23:41Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentialsTests.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.amazon.opendistroforelasticsearch.security.user;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class AuthCredentialsTests {\n+  @Test\n+  public void testEquality() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODA4NTYzMA==", "bodyText": "@nicot How are the 2 test cases been taken care of?", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r568085630", "createdAt": "2021-02-01T19:32:52Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentialsTests.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.amazon.opendistroforelasticsearch.security.user;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class AuthCredentialsTests {\n+  @Test\n+  public void testEquality() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMzg0MQ=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODEyNjM1OA==", "bodyText": "A user password will be null if we set the backendRoles.\n\nobject.internalPasswordHash == null && other.internalPasswordHash == null ==> equals() returns true\n\nThis is the test case on line 9 \u2014 the users have backendRoles, so the password is null for both.\n\nobject.internalPasswordHash == null && other.internalPasswordHash ==  ==> equals() returns false.\n\nThis is the test case on line 28 \u2014 one user has backendRoles and one has a password, and they are not equal.", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r568126358", "createdAt": "2021-02-01T20:43:25Z", "author": {"login": "nicot"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/user/AuthCredentialsTests.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.amazon.opendistroforelasticsearch.security.user;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class AuthCredentialsTests {\n+  @Test\n+  public void testEquality() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYyMzg0MQ=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2OTI2OTQ0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/cache/CachingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzo0MDozOVrOIcYYww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxODozMDo1N1rOIcvzhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYzMDU5NQ==", "bodyText": "Why is this change necessary? It doesn't look related to your change to me. Did I miss anything?", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r566630595", "createdAt": "2021-01-29T07:40:39Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/cache/CachingTest.java", "diffHunk": "@@ -58,7 +58,7 @@ public void testRestCaching() throws Exception {\n \n         Assert.assertEquals(3, DummyHTTPAuthenticator.getCount());\n         Assert.assertEquals(1, DummyAuthorizer.getCount());\n-        Assert.assertEquals(3, DummyAuthenticationBackend.getAuthCount());\n+        Assert.assertEquals(1, DummyAuthenticationBackend.getAuthCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzAxNDI3OA==", "bodyText": "My change fixes caching auth credentials, so the authentication backend is hit less. That's how I found this bug in the first place.", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r567014278", "createdAt": "2021-01-29T18:30:57Z", "author": {"login": "nicot"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/cache/CachingTest.java", "diffHunk": "@@ -58,7 +58,7 @@ public void testRestCaching() throws Exception {\n \n         Assert.assertEquals(3, DummyHTTPAuthenticator.getCount());\n         Assert.assertEquals(1, DummyAuthorizer.getCount());\n-        Assert.assertEquals(3, DummyAuthenticationBackend.getAuthCount());\n+        Assert.assertEquals(1, DummyAuthenticationBackend.getAuthCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYzMDU5NQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU2OTI2OTcxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/cache/CachingTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNzo0MDo0NlrOIcYY8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxODozMTozNlrOIcv0zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYzMDY0MA==", "bodyText": "Why is this change necessary? It doesn't look related to your change to me. Did I miss anything?", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r566630640", "createdAt": "2021-01-29T07:40:46Z", "author": {"login": "cliu123"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/cache/CachingTest.java", "diffHunk": "@@ -103,7 +103,7 @@ public void testRestCachingWithImpersonation() throws Exception {\n \n         Assert.assertEquals(4, DummyHTTPAuthenticator.getCount());\n         Assert.assertEquals(3, DummyAuthorizer.getCount());\n-        Assert.assertEquals(4, DummyAuthenticationBackend.getAuthCount());\n+        Assert.assertEquals(1, DummyAuthenticationBackend.getAuthCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzAxNDYwNQ==", "bodyText": "Same here, caching auth credentials was broken before because equality wasn't working on the key. Now that it is fixed the calls to the authentication backend are properly cached and the backend is hit less.", "url": "https://github.com/opensearch-project/security/pull/876#discussion_r567014605", "createdAt": "2021-01-29T18:31:36Z", "author": {"login": "nicot"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/cache/CachingTest.java", "diffHunk": "@@ -103,7 +103,7 @@ public void testRestCachingWithImpersonation() throws Exception {\n \n         Assert.assertEquals(4, DummyHTTPAuthenticator.getCount());\n         Assert.assertEquals(3, DummyAuthorizer.getCount());\n-        Assert.assertEquals(4, DummyAuthenticationBackend.getAuthCount());\n+        Assert.assertEquals(1, DummyAuthenticationBackend.getAuthCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYzMDY0MA=="}, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2255, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}