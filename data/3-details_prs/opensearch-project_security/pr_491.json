{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTIzMzk0", "number": 491, "title": "Create indexing operation listener for every index module call", "bodyText": "IndexModule is called per index.\n\n\nCurrent behavior, at the time it is called for index, checks for compliance write is enabled for the index. If not enabled at that time, then it creates an empty listener and will not check for compliance write updates and the index documents will be unaudited.\n\n\nChange is creating index listener for a given index and check with the latest compliance write value at that time.", "createdAt": "2020-06-04T00:40:41Z", "url": "https://github.com/opensearch-project/security/pull/491", "merged": true, "mergeCommit": {"oid": "fa4a137b03281635d50e486dafaacf3b01e2b4ab"}, "closed": true, "closedAt": "2020-06-18T06:46:08Z", "author": {"login": "sujithvm"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoIKYdAFqTQyNDkzNTQ0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsYeBmAFqTQzMjk3NTQzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTM1NDQw", "url": "https://github.com/opensearch-project/security/pull/491#pullrequestreview-424935440", "createdAt": "2020-06-05T01:13:38Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMToxMzozOFrOGfdRzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMToxMzozOFrOGfdRzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzODczNA==", "bodyText": "is it necessary to have indexName? How it is different from ShardId.getIndexName()?", "url": "https://github.com/opensearch-project/security/pull/491#discussion_r435638734", "createdAt": "2020-06-05T01:13:38Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/compliance/ComplianceIndexingOperationListenerImpl.java", "diffHunk": "@@ -34,11 +34,13 @@\n public final class ComplianceIndexingOperationListenerImpl extends ComplianceIndexingOperationListener {\n \n     private static final Logger log = LogManager.getLogger(ComplianceIndexingOperationListenerImpl.class);\n+    private final String indexName;\n     private final AuditLog auditlog;\n     private volatile IndexService is;\n \n-    public ComplianceIndexingOperationListenerImpl(final AuditLog auditlog) {\n+    public ComplianceIndexingOperationListenerImpl(final String indexName, final AuditLog auditlog) {\n         super();\n+        this.indexName = indexName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NjAxODY5", "url": "https://github.com/opensearch-project/security/pull/491#pullrequestreview-425601869", "createdAt": "2020-06-05T20:21:34Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDoyMTozNFrOGf8P6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDoyMTozNFrOGf8P6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0NjE1Mw==", "bodyText": "indexName is not used.", "url": "https://github.com/opensearch-project/security/pull/491#discussion_r436146153", "createdAt": "2020-06-05T20:21:34Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/compliance/ComplianceIndexingOperationListenerImpl.java", "diffHunk": "@@ -37,7 +37,7 @@\n     private final AuditLog auditlog;\n     private volatile IndexService is;\n \n-    public ComplianceIndexingOperationListenerImpl(final AuditLog auditlog) {\n+    public ComplianceIndexingOperationListenerImpl(final String indexName, final AuditLog auditlog) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NTE5MjQz", "url": "https://github.com/opensearch-project/security/pull/491#pullrequestreview-427519243", "createdAt": "2020-06-09T20:33:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDozMzo0NVrOGhbJyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDozMzo0NVrOGhbJyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwMTA2NQ==", "bodyText": "nit: introduce private static boolean isLoggingWriteDiffEnabled(final ComplianceConfig complianceConfig, final String indexName) to ComplianceIndexingOperationListenerImpl.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public boolean shouldLogDiffsForWriteInIndex(final String indexName) {\n          \n          \n            \n                private static boolean isLoggingWriteDiffEnabled(final ComplianceConfig complianceConfig, final String indexName) {\n          \n          \n            \n                    return complianceConfig != null && complianceConfig.shouldLogDiffsForWrite() && complianceConfig.writeHistoryEnabledForIndex(indexName);\n          \n          \n            \n                }", "url": "https://github.com/opensearch-project/security/pull/491#discussion_r437701065", "createdAt": "2020-06-09T20:33:45Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/compliance/ComplianceConfig.java", "diffHunk": "@@ -255,6 +255,10 @@ public boolean shouldLogDiffsForWrite() {\n         return !shouldLogWriteMetadataOnly() && logDiffsForWrite;\n     }\n \n+    public boolean shouldLogDiffsForWriteInIndex(final String indexName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "178afbf19b2e534af41c619c3e1f6e3bf66286f5", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/178afbf19b2e534af41c619c3e1f6e3bf66286f5", "committedDate": "2020-06-10T07:11:36Z", "message": "Create indexing operation listener for every index and check for dynamic compliance access"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzkxMjg5", "url": "https://github.com/opensearch-project/security/pull/491#pullrequestreview-427791289", "createdAt": "2020-06-10T07:42:44Z", "commit": {"oid": "178afbf19b2e534af41c619c3e1f6e3bf66286f5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODcyMTcz", "url": "https://github.com/opensearch-project/security/pull/491#pullrequestreview-431872173", "createdAt": "2020-06-16T20:37:01Z", "commit": {"oid": "178afbf19b2e534af41c619c3e1f6e3bf66286f5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozNzowMVrOGksP6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo0MDoyNVrOGksXPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNjg5MA==", "bodyText": "Should we move this to separate method, similar to \"isLoggingWriteDiffEnabled\" ?", "url": "https://github.com/opensearch-project/security/pull/491#discussion_r441126890", "createdAt": "2020-06-16T20:37:01Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/compliance/ComplianceIndexingOperationListenerImpl.java", "diffHunk": "@@ -67,7 +67,8 @@ public GetResult getGetResult() {\n \n     @Override\n     public void postDelete(final ShardId shardId, final Delete delete, final DeleteResult result) {\n-        if (auditlog.getComplianceConfig().isEnabled()) {\n+        final ComplianceConfig complianceConfig = auditlog.getComplianceConfig();\n+        if (complianceConfig != null && complianceConfig.writeHistoryEnabledForIndex(shardId.getIndexName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "178afbf19b2e534af41c619c3e1f6e3bf66286f5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyODc2Ng==", "bodyText": "Do we want to add this listener to indexModule when it's disabled ?", "url": "https://github.com/opensearch-project/security/pull/491#discussion_r441128766", "createdAt": "2020-06-16T20:40:25Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/OpenDistroSecurityPlugin.java", "diffHunk": "@@ -508,20 +508,11 @@ public void onIndexModule(IndexModule indexModule) {\n         //called for every index!\n \n         if (!disabled && !client && !sslOnly) {\n-            final ComplianceConfig complianceConfig = auditLog.getComplianceConfig();\n-            log.debug(\"Handle complianceConfig=\"+complianceConfig+\"/dlsFlsAvailable: \"+dlsFlsAvailable+\"/auditLog=\"+auditLog.getClass()+\" for onIndexModule() of index \"+indexModule.getIndex().getName());\n+            log.debug(\"Handle dlsFlsAvailable: \"+dlsFlsAvailable+\"/auditLog=\"+auditLog.getClass()+\" for onIndexModule() of index \"+indexModule.getIndex().getName());\n             if (dlsFlsAvailable) {\n \n-                final ComplianceIndexingOperationListener ciol;\n-\n-                assert complianceConfig!=null:\"compliance config must not be null here\";\n-                \n-                if(complianceConfig.writeHistoryEnabledForIndex(indexModule.getIndex().getName())) {\n-                    ciol = ReflectionHelper.instantiateComplianceListener(Objects.requireNonNull(auditLog));\n-                    indexModule.addIndexOperationListener(ciol);\n-                } else {\n-                    ciol = new ComplianceIndexingOperationListener();\n-                }\n+                final ComplianceIndexingOperationListener ciol = ReflectionHelper.instantiateComplianceListener(Objects.requireNonNull(auditLog));\n+                indexModule.addIndexOperationListener(ciol);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "178afbf19b2e534af41c619c3e1f6e3bf66286f5"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25a13f823bd611508b4a649e63fce899b81b497d", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/25a13f823bd611508b4a649e63fce899b81b497d", "committedDate": "2020-06-16T21:09:33Z", "message": "code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjgyNDAw", "url": "https://github.com/opensearch-project/security/pull/491#pullrequestreview-432682400", "createdAt": "2020-06-17T18:48:51Z", "commit": {"oid": "25a13f823bd611508b4a649e63fce899b81b497d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTc1NDMz", "url": "https://github.com/opensearch-project/security/pull/491#pullrequestreview-432975433", "createdAt": "2020-06-18T06:29:16Z", "commit": {"oid": "25a13f823bd611508b4a649e63fce899b81b497d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2945, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}