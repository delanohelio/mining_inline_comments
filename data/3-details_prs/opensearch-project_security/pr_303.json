{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjM4Mzg5", "number": 303, "title": "AuditLog: Refactor to use thread pool config", "bodyText": "Changes:\n\nCreating a AsyncStoragePoolConfig which is injected to AsyncStoragePool\n\nNo new functionality added.", "createdAt": "2020-03-20T16:51:52Z", "url": "https://github.com/opensearch-project/security/pull/303", "merged": true, "mergeCommit": {"oid": "a17bc7a8620f893cd33107a370b1a4cbc1954f55"}, "closed": true, "closedAt": "2020-03-23T22:28:24Z", "author": {"login": "sujithvm"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPnDBugFqTM3ODgxMTAyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQl_qvAFqTM3OTg2ODA1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODExMDI5", "url": "https://github.com/opensearch-project/security/pull/303#pullrequestreview-378811029", "createdAt": "2020-03-20T21:04:33Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODI0MDYw", "url": "https://github.com/opensearch-project/security/pull/303#pullrequestreview-378824060", "createdAt": "2020-03-20T21:32:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozMjoyNFrOF5jyNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMjozNzoyMFrOF5k_PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTQ0Nw==", "bodyText": "it is a simple math :), consider 100_000.", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395899447", "createdAt": "2020-03-20T21:32:24Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AsyncStoragePoolConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import org.elasticsearch.common.settings.Settings;\n+\n+public class AsyncStoragePoolConfig {\n+    private static final int DEFAULT_THREAD_POOL_SIZE = 10;\n+    private static final int DEFAULT_THREAD_POOL_MAX_QUEUE_LEN = 100 * 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMTk1OA==", "bodyText": "consider making constructor private.", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395901958", "createdAt": "2020-03-20T21:40:04Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AsyncStoragePoolConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import org.elasticsearch.common.settings.Settings;\n+\n+public class AsyncStoragePoolConfig {\n+    private static final int DEFAULT_THREAD_POOL_SIZE = 10;\n+    private static final int DEFAULT_THREAD_POOL_MAX_QUEUE_LEN = 100 * 1000;\n+\n+    private final int threadPoolSize;\n+    private final int threadPoolMaxQueueLen;\n+\n+    public AsyncStoragePoolConfig(int threadPoolSize, int threadPoolMaxQueueLen) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMzYxOQ==", "bodyText": "Is it a common practice to use a default value for an invalid setting? Can you point me how it is handled in other places? I would prefer at least a warning message or better an exception.", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395903619", "createdAt": "2020-03-20T21:45:10Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AsyncStoragePoolConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import org.elasticsearch.common.settings.Settings;\n+\n+public class AsyncStoragePoolConfig {\n+    private static final int DEFAULT_THREAD_POOL_SIZE = 10;\n+    private static final int DEFAULT_THREAD_POOL_MAX_QUEUE_LEN = 100 * 1000;\n+\n+    private final int threadPoolSize;\n+    private final int threadPoolMaxQueueLen;\n+\n+    public AsyncStoragePoolConfig(int threadPoolSize, int threadPoolMaxQueueLen) {\n+        if (threadPoolSize <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMzc5OQ==", "bodyText": "The same as threadPoolSize.", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395903799", "createdAt": "2020-03-20T21:45:39Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AsyncStoragePoolConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import org.elasticsearch.common.settings.Settings;\n+\n+public class AsyncStoragePoolConfig {\n+    private static final int DEFAULT_THREAD_POOL_SIZE = 10;\n+    private static final int DEFAULT_THREAD_POOL_MAX_QUEUE_LEN = 100 * 1000;\n+\n+    private final int threadPoolSize;\n+    private final int threadPoolMaxQueueLen;\n+\n+    public AsyncStoragePoolConfig(int threadPoolSize, int threadPoolMaxQueueLen) {\n+        if (threadPoolSize <= 0) {\n+            threadPoolSize = DEFAULT_THREAD_POOL_SIZE;\n+        }\n+\n+        if (threadPoolMaxQueueLen <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxMzc4Mw==", "bodyText": "Will this class be used outside of AsyncStoragePool? The current usage is limited to AsyncStoragePool, why not to make it static inside AsyncStoragePool?", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395913783", "createdAt": "2020-03-20T22:18:31Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AsyncStoragePoolConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import org.elasticsearch.common.settings.Settings;\n+\n+public class AsyncStoragePoolConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxNjM0NA==", "bodyText": "Not sure why this method is necessary, can't it be inlined in the constructor?", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395916344", "createdAt": "2020-03-20T22:27:16Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/routing/AsyncStoragePool.java", "diffHunk": "@@ -72,11 +59,18 @@ public void submit(AuditMessage message, AuditLogSink sink) {\n \t\t}\n \t}\n \n-\tprivate ThreadPoolExecutor createExecutor(final int threadPoolSize, final int maxQueueLen) {\n+\tprivate ThreadPoolExecutor createExecutor(final AsyncStoragePoolConfig config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxNzU5Mw==", "bodyText": "Should this test be moved to RoutingConfigurationTest?", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395917593", "createdAt": "2020-03-20T22:31:21Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/routing/ThreadPoolSettingsTest.java", "diffHunk": "@@ -15,21 +15,21 @@\n \n package com.amazon.opendistroforelasticsearch.security.auditlog.routing;\n \n+import com.amazon.opendistroforelasticsearch.security.auditlog.AbstractAuditlogiUnitTest;\n+import com.amazon.opendistroforelasticsearch.security.auditlog.config.AsyncStoragePoolConfig;\n+import com.amazon.opendistroforelasticsearch.security.test.helper.file.FileHelper;\n import org.elasticsearch.common.settings.Settings;\n import org.junit.Assert;\n import org.junit.Test;\n \n-import com.amazon.opendistroforelasticsearch.security.auditlog.AbstractAuditlogiUnitTest;\n-import com.amazon.opendistroforelasticsearch.security.auditlog.routing.AuditMessageRouter;\n-import com.amazon.opendistroforelasticsearch.security.test.helper.file.FileHelper;\n-\n public class ThreadPoolSettingsTest extends AbstractAuditlogiUnitTest {\n \n-\t@Test\n-\tpublic void testNoMultipleEndpointsConfiguration() throws Exception {\n-\t\tSettings settings = Settings.builder().loadFromPath(FileHelper.getAbsoluteFilePathFromClassPath(\"auditlog/endpoints/sink/configuration_no_multiple_endpoints.yml\")).build();\n-\t\tAuditMessageRouter router = createMessageRouterComplianceEnabled(settings);\n-\t\tAssert.assertEquals(5, router.storagePool.threadPoolSize);\n-\t\tAssert.assertEquals(200000, router.storagePool.threadPoolMaxQueueLen);\n-\t}\n+    @Test\n+    public void testNoMultipleEndpointsConfiguration() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxOTE2NQ==", "bodyText": "Is it necessary to change the signature of the AsyncStoragePool constructor? Can it continue to accept Settings and create AsyncStoragePoolConfig inside?", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r395919165", "createdAt": "2020-03-20T22:37:20Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/routing/AuditMessageRouter.java", "diffHunk": "@@ -51,7 +52,7 @@\n \n \tpublic AuditMessageRouter(final Settings settings, final Client clientProvider, ThreadPool threadPool, final Path configPath) {\n \t\tthis.sinkProvider = new SinkProvider(settings, clientProvider, threadPool, configPath);\n-\t\tthis.storagePool = new AsyncStoragePool(settings);\n+\t\tthis.storagePool = new AsyncStoragePool(AsyncStoragePoolConfig.getConfig(settings));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTI3MzE1", "url": "https://github.com/opensearch-project/security/pull/303#pullrequestreview-378927315", "createdAt": "2020-03-21T15:38:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxNTozODo0MFrOF5qEpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxNTozODo0MFrOF5qEpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAwMjQ3MA==", "bodyText": "The check is not necessary. If there are no settings, it will return a default value, otherwise, it should check validity.", "url": "https://github.com/opensearch-project/security/pull/303#discussion_r396002470", "createdAt": "2020-03-21T15:38:40Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/ThreadPoolConfig.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import org.elasticsearch.common.settings.Settings;\n+\n+public class ThreadPoolConfig {\n+    private static final int DEFAULT_THREAD_POOL_SIZE = 10;\n+    private static final int DEFAULT_THREAD_POOL_MAX_QUEUE_LEN = 100_000;\n+\n+    private final int threadPoolSize;\n+    private final int threadPoolMaxQueueLen;\n+\n+    public ThreadPoolConfig(int threadPoolSize, int threadPoolMaxQueueLen) {\n+        if (threadPoolSize <= 0) {\n+            throw new IllegalArgumentException(\"Incorrect thread pool size: \" + threadPoolSize + \" configured for audit logging.\");\n+        }\n+\n+        if (threadPoolMaxQueueLen <= 0) {\n+            throw new IllegalArgumentException(\"Incorrect thread pool queue length: \" + threadPoolMaxQueueLen + \" configured for audit logging.\");\n+        }\n+\n+        this.threadPoolSize = threadPoolSize;\n+        this.threadPoolMaxQueueLen = threadPoolMaxQueueLen;\n+    }\n+\n+    public int getThreadPoolSize() {\n+        return threadPoolSize;\n+    }\n+\n+    public int getThreadPoolMaxQueueLen() {\n+        return threadPoolMaxQueueLen;\n+    }\n+\n+    public static ThreadPoolConfig getConfig(Settings settings) {\n+        int threadPoolSize = settings.getAsInt(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_THREADPOOL_SIZE, DEFAULT_THREAD_POOL_SIZE);\n+        int threadPoolMaxQueueLen = settings.getAsInt(ConfigConstants.OPENDISTRO_SECURITY_AUDIT_THREADPOOL_MAX_QUEUE_LEN, DEFAULT_THREAD_POOL_MAX_QUEUE_LEN);\n+\n+        if (threadPoolSize <= 0) threadPoolSize = DEFAULT_THREAD_POOL_SIZE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDQ4ODIz", "url": "https://github.com/opensearch-project/security/pull/303#pullrequestreview-379048823", "createdAt": "2020-03-22T21:25:08Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2be667e130ccc8d95affc7618efc0b49b036025e", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/2be667e130ccc8d95affc7618efc0b49b036025e", "committedDate": "2020-03-22T21:33:46Z", "message": "Refactor thread pool config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDc5OTcx", "url": "https://github.com/opensearch-project/security/pull/303#pullrequestreview-379079971", "createdAt": "2020-03-23T00:40:50Z", "commit": {"oid": "2be667e130ccc8d95affc7618efc0b49b036025e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODY4MDU2", "url": "https://github.com/opensearch-project/security/pull/303#pullrequestreview-379868056", "createdAt": "2020-03-23T22:24:54Z", "commit": {"oid": "2be667e130ccc8d95affc7618efc0b49b036025e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3021, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}