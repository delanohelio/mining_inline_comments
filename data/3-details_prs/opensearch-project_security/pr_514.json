{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MzMyMTE0", "number": 514, "title": "Added kibana attribute to security config which will be used by tenan\u2026", "bodyText": "Description of changes:\n\nAdded attribute in kibana security config, required for external kibana.\nThe failed test depend on - https://github.com/opendistro-for-elasticsearch/security/pull/514\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-06-19T23:37:36Z", "url": "https://github.com/opensearch-project/security/pull/514", "merged": true, "mergeCommit": {"oid": "72ce765f0a767d609ad392c35bd8e72f3c03dd41"}, "closed": true, "closedAt": "2020-07-28T19:17:28Z", "author": {"login": "palashhedau"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcs9LVEAFqTQzNDM5MDU4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5bY0vgFqTQ1NjkzMDk5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzkwNTgz", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-434390583", "createdAt": "2020-06-20T01:01:46Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwMTowMTo0NlrOGmj6qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwMTowODoxNFrOGmj8xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4NzUzMA==", "bodyText": "nit: change variable name to cr or something relevant.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r443087530", "createdAt": "2020-06-20T01:01:46Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -71,14 +77,17 @@\n     private final ThreadContext threadContext;\n     private final ClusterService clusterService;\n     private final AdminDNs adminDns;\n+    private final ConfigurationRepository cl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4Nzk2Nw==", "bodyText": "Doesnt the privileges evaluator already check for role mappings for the user ?\nhttps://github.com/opendistro-for-elasticsearch/security/blob/master/securityconfig/roles_mapping.yml#L46", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r443087967", "createdAt": "2020-06-20T01:06:51Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,37 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isUnAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        // check if the user is a kibanauser or super admin\n+        boolean initialCheck =   user == null ||\n+                (!user.getName().equals(evaluator.kibanaServerUsername()))\n+                        && !adminDns.isAdmin(user);\n+        if(!initialCheck){\n+            return false;\n+        }\n+\n+        // check if the roles belong to kibana opendistro role\n+        final SecurityDynamicConfiguration<?> configuration = load(CType.ROLESMAPPING, true);\n+\n+        String kibanaOpendistroRole = evaluator.kibanaOpendistroRole();\n+\n+        if (configuration.exists(kibanaOpendistroRole)) {\n+            RoleMappings rolesMapping = (RoleMappings) configuration.getCEntries().get(kibanaOpendistroRole);\n+            if(rolesMapping.getUsers().contains(user.getName())){", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4ODA2OA==", "bodyText": "Also the rolemappings can be done via opendistro security roles inside an internal users so check that as well?", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r443088068", "createdAt": "2020-06-20T01:08:14Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,37 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isUnAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        // check if the user is a kibanauser or super admin\n+        boolean initialCheck =   user == null ||\n+                (!user.getName().equals(evaluator.kibanaServerUsername()))\n+                        && !adminDns.isAdmin(user);\n+        if(!initialCheck){\n+            return false;\n+        }\n+\n+        // check if the roles belong to kibana opendistro role\n+        final SecurityDynamicConfiguration<?> configuration = load(CType.ROLESMAPPING, true);\n+\n+        String kibanaOpendistroRole = evaluator.kibanaOpendistroRole();\n+\n+        if (configuration.exists(kibanaOpendistroRole)) {\n+            RoleMappings rolesMapping = (RoleMappings) configuration.getCEntries().get(kibanaOpendistroRole);\n+            if(rolesMapping.getUsers().contains(user.getName())){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4Nzk2Nw=="}, "originalCommit": null, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDQxNTA3", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-434441507", "createdAt": "2020-06-20T17:11:09Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNzoxMTowOVrOGmndhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMDoyMDo1NFrOGuT6kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NTYwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final ConfigurationRepository cl;\n          \n          \n            \n                private final ConfigurationRepository configurationRepository;", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r443145604", "createdAt": "2020-06-20T17:11:09Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -71,14 +77,17 @@\n     private final ThreadContext threadContext;\n     private final ClusterService clusterService;\n     private final AdminDNs adminDns;\n+    private final ConfigurationRepository cl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA4NzUzMA=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE0NTY1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        final ConfigurationRepository cl) {\n          \n          \n            \n                                        final ConfigurationRepository configurationRepository) {", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r443145653", "createdAt": "2020-06-20T17:12:04Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -71,14 +77,17 @@\n     private final ThreadContext threadContext;\n     private final ClusterService clusterService;\n     private final AdminDNs adminDns;\n+    private final ConfigurationRepository cl;\n \n     public TenantInfoAction(final Settings settings, final RestController controller, \n-    \t\tfinal PrivilegesEvaluator evaluator, final ThreadPool threadPool, final ClusterService clusterService, final AdminDNs adminDns) {\n+    \t\tfinal PrivilegesEvaluator evaluator, final ThreadPool threadPool, final ClusterService clusterService, final AdminDNs adminDns,\n+                            final ConfigurationRepository cl) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMzI4OA==", "bodyText": "Missing copyright header", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r451213288", "createdAt": "2020-07-08T00:18:30Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/RoleMappings.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.amazon.opendistroforelasticsearch.security.securityconf;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMzgyNQ==", "bodyText": "I don't think this class should be abstract.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r451213825", "createdAt": "2020-07-08T00:20:19Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/RoleMappings.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.amazon.opendistroforelasticsearch.security.securityconf;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+public abstract class RoleMappings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMzk3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected java.util.List<String> users= Collections.emptyList();\n          \n          \n            \n                protected List<String> users= Collections.emptyList();", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r451213970", "createdAt": "2020-07-08T00:20:54Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/RoleMappings.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package com.amazon.opendistroforelasticsearch.security.securityconf;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+public abstract class RoleMappings {\n+    protected List<String> hosts= Collections.emptyList();\n+    protected java.util.List<String> users= Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODQyNjg0", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-450842684", "createdAt": "2020-07-17T17:40:38Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo0MDozOFrOGzbnSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODoyMTozOFrOGzc3GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4Mjk4NQ==", "bodyText": "Change to isAuthorized()", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456582985", "createdAt": "2020-07-17T17:40:38Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,37 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isUnAuthorized() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4NDU1MA==", "bodyText": "nit: initialCheck is not a good name. The flag is used only once, inline it.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456584550", "createdAt": "2020-07-17T17:43:50Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,37 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isUnAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        // check if the user is a kibanauser or super admin\n+        boolean initialCheck =   user == null ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4NjMzOQ==", "bodyText": "avoid double get() (check rolesMapping for null instead).", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456586339", "createdAt": "2020-07-17T17:47:18Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,37 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isUnAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        // check if the user is a kibanauser or super admin\n+        boolean initialCheck =   user == null ||\n+                (!user.getName().equals(evaluator.kibanaServerUsername()))\n+                        && !adminDns.isAdmin(user);\n+        if(!initialCheck){\n+            return false;\n+        }\n+\n+        // check if the roles belong to kibana opendistro role\n+        final SecurityDynamicConfiguration<?> configuration = load(CType.ROLESMAPPING, true);\n+\n+        String kibanaOpendistroRole = evaluator.kibanaOpendistroRole();\n+\n+        if (configuration.exists(kibanaOpendistroRole)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU5NzQwMA==", "bodyText": "Can't setters be also part of RoleMappings?", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456597400", "createdAt": "2020-07-17T18:08:40Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v7/RoleMappingsV7.java", "diffHunk": "@@ -67,24 +66,12 @@ public void setBackend_roles(List<String> backend_roles) {\n \n \n \n-    public List<String> getHosts() {\n-        return hosts;\n-    }\n-\n-\n-\n     public void setHosts(List<String> hosts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU5NzU1Nw==", "bodyText": "Missing copyright.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456597557", "createdAt": "2020-07-17T18:09:03Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/TenantInfoActionTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.opendistroforelasticsearch.security.dlic.rest.api;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYwMzQxNg==", "bodyText": "nit: put return config.dynamic.kibana.opendistro_role; on a separate line.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456603416", "createdAt": "2020-07-17T18:21:38Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigModelV6.java", "diffHunk": "@@ -114,6 +114,8 @@ public String getKibanaServerUsername() {\n         return config.dynamic.kibana.server_username;\n     }\n     @Override\n+    public String getKibanaOpendistroRole() { return config.dynamic.kibana.opendistro_role;}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTcxNjEw", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-450971610", "createdAt": "2020-07-17T21:42:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMTo0MjoxMVrOGzh7oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMTo0OToyNFrOGziENA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4NjQ5Ng==", "bodyText": "not sure if this operation is expensive, but you can move it inside the \"if\" section where you check if \"kibanaOpendistroRole\" is present", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456686496", "createdAt": "2020-07-17T21:42:11Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,37 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isUnAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        // check if the user is a kibanauser or super admin\n+        boolean initialCheck =   user == null ||\n+                (!user.getName().equals(evaluator.kibanaServerUsername()))\n+                        && !adminDns.isAdmin(user);\n+        if(!initialCheck){\n+            return false;\n+        }\n+\n+        // check if the roles belong to kibana opendistro role\n+        final SecurityDynamicConfiguration<?> configuration = load(CType.ROLESMAPPING, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4NjcxMw==", "bodyText": "Agree. By reversing it, you an simplify the code inside the function.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456686713", "createdAt": "2020-07-17T21:42:52Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,37 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isUnAuthorized() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4Mjk4NQ=="}, "originalCommit": null, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4NzExOQ==", "bodyText": "should we make this class abstract?", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456687119", "createdAt": "2020-07-17T21:44:14Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/RoleMappings.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Portions Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.security.securityconf;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class RoleMappings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY4ODY5Mg==", "bodyText": "Do you need to check \"SC_OK\" in response status?", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r456688692", "createdAt": "2020-07-17T21:49:24Z", "author": {"login": "dinusX"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/TenantInfoActionTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.opendistroforelasticsearch.security.dlic.rest.api;\n+\n+import com.amazon.opendistroforelasticsearch.security.privileges.PrivilegesEvaluator;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.amazon.opendistroforelasticsearch.security.test.helper.file.FileHelper;\n+import com.amazon.opendistroforelasticsearch.security.test.helper.rest.RestHelper;\n+import org.apache.http.Header;\n+import org.apache.http.HttpStatus;\n+import org.elasticsearch.common.settings.Settings;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.mockito.invocation.InvocationOnMock;\n+import org.mockito.stubbing.Answer;\n+\n+public class TenantInfoActionTest extends AbstractRestApiUnitTest {\n+    private String payload = \"{\\\"hosts\\\":[],\\\"users\\\":[\\\"sarek\\\"],\" +\n+            \"\\\"backend_roles\\\":[\\\"starfleet*\\\",\\\"ambassador\\\"],\\\"and_backend_roles\\\":[],\\\"description\\\":\\\"Migrated \" +\n+            \"from v6\\\"}\";\n+\n+    @Test\n+    public void testTenantInfoAPI() throws Exception {\n+        Settings settings = Settings.builder().put(ConfigConstants.OPENDISTRO_SECURITY_UNSUPPORTED_RESTAPI_ALLOW_SECURITYCONFIG_MODIFICATION, true).build();\n+        setup(settings);\n+\n+        rh.keystore = \"restapi/kirk-keystore.jks\";\n+        rh.sendAdminCertificate = true;\n+        RestHelper.HttpResponse response = rh.executeGetRequest(\"_opendistro/_security/tenantinfo\");\n+        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        rh.sendAdminCertificate = false;\n+        response = rh.executeGetRequest(\"_opendistro/_security/tenantinfo\");\n+        Assert.assertEquals(HttpStatus.SC_UNAUTHORIZED, response.getStatusCode());\n+\n+        rh.sendHTTPClientCredentials = true;\n+        response = rh.executeGetRequest(\"_opendistro/_security/tenantinfo\");\n+        Assert.assertEquals(HttpStatus.SC_FORBIDDEN, response.getStatusCode());\n+\n+        rh.sendAdminCertificate = true;\n+\n+        //update security config\n+        response = rh.executePatchRequest(\"/_opendistro/_security/api/securityconfig\", \"[{\\\"op\\\": \\\"replace\\\",\\\"path\\\": \\\"/config/dynamic/kibana/opendistro_role\\\",\\\"value\\\": \\\"opendistro_security_role_internal\\\"}]\", new Header[0]);\n+        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        response = rh.executePutRequest(\"/_opendistro/_security/api/rolesmapping/opendistro_security_role_internal\", payload, new Header[0]);\n+        Assert.assertEquals(HttpStatus.SC_OK, response.getStatusCode());\n+\n+        response = rh.executeGetRequest(\"_opendistro/_security/api/rolesmapping/opendistro_security_role_internal\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNzY2NDQ5", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-452766449", "createdAt": "2020-07-21T19:31:18Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozMToxOFrOG1GvMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozMToxOFrOG1GvMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzODA5OQ==", "bodyText": "Please change to full 2020 copyright", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r458338099", "createdAt": "2020-07-21T19:31:18Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/RoleMappings.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Portions Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNzcxMTQ3", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-452771147", "createdAt": "2020-07-21T19:38:32Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozODozMlrOG1G9Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozODozMlrOG1G9Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0MTY1OQ==", "bodyText": "nit: private. There are public getters and setters.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r458341659", "createdAt": "2020-07-21T19:38:32Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/RoleMappings.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Portions Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.security.securityconf;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class RoleMappings {\n+\n+    protected List<String> hosts= Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTQzNDE2", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-456143416", "createdAt": "2020-07-27T21:19:38Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjM4MTY0", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-456238164", "createdAt": "2020-07-28T01:18:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMToxODoyNFrOG35Hew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMTozOTowNVrOG35dqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MDY2Nw==", "bodyText": "instead of checking multiple times \"user != null\", can you add just one line above:\nif user == null:\n  return false;", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r461260667", "createdAt": "2020-07-28T01:18:24Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,35 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        // check if the user is a kibanauser or super admin\n+        boolean validateUserByName = (user != null) && (user.getName().equals(evaluator.kibanaServerUsername()) || adminDns.isAdmin(user));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MDk1Nw==", "bodyText": "What happens if this is empty/null ? Should we add additional checks?", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r461260957", "createdAt": "2020-07-28T01:19:32Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/rest/TenantInfoAction.java", "diffHunk": "@@ -137,7 +144,35 @@ public void accept(RestChannel channel) throws Exception {\n             }\n         };\n     }\n-    \n+\n+    private boolean isAuthorized() {\n+        final User user = (User)threadContext.getTransient(ConfigConstants.OPENDISTRO_SECURITY_USER);\n+\n+        // check if the user is a kibanauser or super admin\n+        boolean validateUserByName = (user != null) && (user.getName().equals(evaluator.kibanaServerUsername()) || adminDns.isAdmin(user));\n+\n+        if (validateUserByName) {\n+            return true;\n+        }\n+\n+        // If user check failed by name and admin, check if the users belong to kibana opendistro role\n+        final SecurityDynamicConfiguration<?> rolesMappingConfiguration = load(CType.ROLESMAPPING, true);\n+\n+        // check if kibanaOpendistroRole is present in RolesMapping and if yes, check if user is a part of this role\n+        if (rolesMappingConfiguration != null && user != null) {\n+            String kibanaOpendistroRole = evaluator.kibanaOpendistroRole();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2NjM0NQ==", "bodyText": "Can we change to not have any default role (set to blank/null) ?\nIf we plan to add a default role, we should update default roles and roles_mapping configuration.\nIf users will want to use this feature, they'll have to manually update the domain configuration and create the required role and role_mapping\nSimilar for V6 config.", "url": "https://github.com/opensearch-project/security/pull/514#discussion_r461266345", "createdAt": "2020-07-28T01:39:05Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/impl/v7/ConfigV7.java", "diffHunk": "@@ -105,10 +105,12 @@ public String toString() {\n \n         public boolean multitenancy_enabled = true;\n         public String server_username = \"kibanaserver\";\n+        public String opendistro_role = \"kibana_server\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjYxNTIw", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-456261520", "createdAt": "2020-07-28T02:35:28Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjY0MjM4", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-456264238", "createdAt": "2020-07-28T02:44:01Z", "commit": null, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8c7bf611733c3c30d4f80096a13b947a3ff6a4f", "author": {"user": null}, "url": "https://github.com/opensearch-project/security/commit/c8c7bf611733c3c30d4f80096a13b947a3ff6a4f", "committedDate": "2020-07-28T04:08:37Z", "message": "Added kibana attribute to security config which will be used by tenantinfo api.\n\nAdded test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2ODM2MDkw", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-456836090", "createdAt": "2020-07-28T17:05:20Z", "commit": {"oid": "c8c7bf611733c3c30d4f80096a13b947a3ff6a4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2OTMwMjE0", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-456930214", "createdAt": "2020-07-28T19:13:04Z", "commit": {"oid": "c8c7bf611733c3c30d4f80096a13b947a3ff6a4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2OTMwOTk2", "url": "https://github.com/opensearch-project/security/pull/514#pullrequestreview-456930996", "createdAt": "2020-07-28T19:14:19Z", "commit": {"oid": "c8c7bf611733c3c30d4f80096a13b947a3ff6a4f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2966, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}