{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyOTE1MzUz", "number": 542, "title": "Use Jackson to serialize and de-serialize audit configuration", "bodyText": "Issue #, if available:\nDescription of changes:\n\nProvide serialization & deserialization for audit configuration using Jackson. This is a preparatory PR for storing configuration in the security index.\nInject settings present using Jackson which is used by compliance config\nAll the defaults are based off what is currently implemented by reading off elasticsearch settings.\nAdded tests\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-07-01T19:13:44Z", "url": "https://github.com/opensearch-project/security/pull/542", "merged": true, "mergeCommit": {"oid": "c6fd29a1460ec5ab348e365d04c6d8f5c8e7ade3"}, "closed": true, "closedAt": "2020-07-07T05:08:54Z", "author": {"login": "sujithvm"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwvJiQAH2gAyNDQyOTE1MzUzOjliMWVjMWRiMThlZTMxMmM5MmEzYzMzZTdkNzIwNjAzOWE1YTkyMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyeiB4gFqTQ0MzU2MTgyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b1ec1db18ee312c92a3c33e7d7206039a5a9232", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/9b1ec1db18ee312c92a3c33e7d7206039a5a9232", "committedDate": "2020-07-01T19:10:24Z", "message": "Use Jackson to serialize and de-serialize audit configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdf3acc2b919608fd493f5847110ff8ebbb7a26d", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/opensearch-project/security/commit/cdf3acc2b919608fd493f5847110ff8ebbb7a26d", "committedDate": "2020-07-05T21:03:51Z", "message": "Code review (#192)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5451b4eec9ed47e24245377b11c788c0d78f241d", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/opensearch-project/security/commit/5451b4eec9ed47e24245377b11c788c0d78f241d", "committedDate": "2020-07-06T23:15:45Z", "message": "Code review (#193)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/62b4cc36f30f529d4f8e59b8ad0c480a6979f829", "committedDate": "2020-07-06T23:29:03Z", "message": "Merge remote-tracking branch 'upstream/master' into jackson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTIwNzg1", "url": "https://github.com/opensearch-project/security/pull/542#pullrequestreview-443520785", "createdAt": "2020-07-07T02:29:45Z", "commit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjoyOTo0NVrOGttEqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjoyOTo0NVrOGttEqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NzU3Ng==", "bodyText": "nit: can align imports with same parents", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450577576", "createdAt": "2020-07-07T02:29:45Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/DefaultObjectMapper.java", "diffHunk": "@@ -34,7 +34,9 @@\n import java.security.AccessController;\n import java.security.PrivilegedActionException;\n import java.security.PrivilegedExceptionAction;\n+import java.util.Map;\n \n+import com.fasterxml.jackson.databind.InjectableValues;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTIyMTg0", "url": "https://github.com/opensearch-project/security/pull/542#pullrequestreview-443522184", "createdAt": "2020-07-07T02:34:35Z", "commit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjozNDozNVrOGttJUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjozNDozNVrOGttJUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3ODc3MA==", "bodyText": "can we directly cast as boolean?", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450578770", "createdAt": "2020-07-07T02:34:35Z", "author": {"login": "palashhedau"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/DefaultObjectMapper.java", "diffHunk": "@@ -61,6 +63,22 @@\n         YAML_MAPPER.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);\n     }\n \n+    public static void inject(final InjectableValues.Std injectableValues) {\n+        objectMapper.setInjectableValues(injectableValues);\n+        YAML_MAPPER.setInjectableValues(injectableValues);\n+        defaulOmittingObjectMapper.setInjectableValues(injectableValues);\n+    }\n+\n+    public static boolean getOrDefault(Map<String, Object> properties, String key, boolean defaultValue) {\n+        Boolean value = (Boolean)properties.get(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9fc24a085be99e85ef45ab8711c9c909a74c380", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/d9fc24a085be99e85ef45ab8711c9c909a74c380", "committedDate": "2020-07-07T02:40:19Z", "message": "code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTE2MTAx", "url": "https://github.com/opensearch-project/security/pull/542#pullrequestreview-443516101", "createdAt": "2020-07-07T02:14:19Z", "commit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjoxNDoxOVrOGts1YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMjo0MDozN1rOGttPEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3MzY2NQ==", "bodyText": "don't think you need @JsonProperty here since the variable name is compliance", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450573665", "createdAt": "2020-07-07T02:14:19Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -1,45 +1,130 @@\n package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n \n import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.compliance.ComplianceConfig;\n import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n import com.amazon.opendistroforelasticsearch.security.support.WildcardMatcher;\n \n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableSet;\n import org.apache.logging.log4j.Logger;\n import org.elasticsearch.common.settings.Settings;\n \n import java.util.Collections;\n import java.util.EnumSet;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n \n+import static com.amazon.opendistroforelasticsearch.security.DefaultObjectMapper.getOrDefault;\n+\n /**\n  * Class represents configuration for audit logging.\n+ * Expected class structure\n+ * {\n+ *   \"enabled\": true,\n+ *   \"audit\" : {\n+ *     \"enable_rest\" : true,\n+ *     \"disabled_rest_categories\" : [\n+ *       \"GRANTED_PRIVILEGES\",\n+ *       \"SSL_EXCEPTION\"\n+ *     ],\n+ *     \"enable_transport\" : true,\n+ *     \"disabled_transport_categories\" : [\n+ *       \"GRANTED_PRIVILEGES\",\n+ *       \"AUTHENTICATED\"\n+ *     ],\n+ *     \"resolve_bulk_requests\" : false,\n+ *     \"log_request_body\" : true,\n+ *     \"resolve_indices\" : true,\n+ *     \"exclude_sensitive_headers\" : true,\n+ *     \"ignore_users\" : [\n+ *       \"kibanaserver\"\n+ *     ],\n+ *     \"ignore_requests\" : [ ]\n+ *   },\n+ *   \"compliance\" : {\n+ *     \"enabled\": true,\n+ *     \"internal_config\" : true,\n+ *     \"external_config\" : true,\n+ *     \"read_metadata_only\" : true,\n+ *     \"read_watched_fields\" : { },\n+ *     \"read_ignore_users\" : [ ],\n+ *     \"write_metadata_only\" : true,\n+ *     \"write_log_diffs\" : false,\n+ *     \"write_watched_indices\" : [ ],\n+ *     \"write_ignore_users\" : [ ]\n+ *   }\n+ * }\n  */\n public class AuditConfig {\n \n     public static final List<String> DEFAULT_IGNORED_USERS = Collections.singletonList(\"kibanaserver\");\n \n-    private AuditConfig() { }\n+    private AuditConfig() {\n+        this(true, null, null);\n+    }\n+\n+    @JsonProperty(\"enabled\")\n+    private final boolean auditLogEnabled;\n+    @JsonProperty(\"audit\")\n+    private final Filter filter;\n+    @JsonProperty(\"compliance\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NTkxNg==", "bodyText": "Think @vrozov had recently modified code for this here - https://github.com/opendistro-for-elasticsearch/security/pull/543/files#diff-c7afdd983cdd9cca05fa869112ff95b9R76-R77", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450575916", "createdAt": "2020-07-07T02:23:01Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -55,12 +140,42 @@ private Filter(final boolean isRestApiAuditEnabled,\n             this.logRequestBody = logRequestBody;\n             this.resolveIndices = resolveIndices;\n             this.excludeSensitiveHeaders = excludeSensitiveHeaders;\n+            this.ignoredAuditUsers = ignoredAuditUsers;\n             this.ignoredAuditUsersMatcher = WildcardMatcher.from(ignoredAuditUsers);\n+            this.ignoredAuditRequests = ignoredAuditRequests;\n             this.ignoredAuditRequestsMatcher = WildcardMatcher.from(ignoredAuditRequests);\n             this.disabledRestCategories = disabledRestCategories;\n             this.disabledTransportCategories = disabledTransportCategories;\n         }\n \n+        @JsonCreator\n+        @VisibleForTesting\n+        static Filter from(Map<String, Object> properties) {\n+            final boolean isRestApiAuditEnabled = getOrDefault(properties,\"enable_rest\", true);\n+            final boolean isTransportAuditEnabled = getOrDefault(properties,\"enable_transport\", true);\n+            final boolean resolveBulkRequests = getOrDefault(properties, \"resolve_bulk_requests\", false);\n+            final boolean logRequestBody = getOrDefault(properties, \"log_request_body\", true);\n+            final boolean resolveIndices = getOrDefault(properties, \"resolve_indices\", true);\n+            final boolean excludeSensitiveHeaders = getOrDefault(properties, \"exclude_sensitive_headers\", true);\n+            final EnumSet<AuditCategory> disabledRestCategories = AuditCategory.parse(getOrDefault(properties,\"disabled_rest_categories\", ConfigConstants.OPENDISTRO_SECURITY_AUDIT_DISABLED_CATEGORIES_DEFAULT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "originalPosition": 154}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3Njg4OQ==", "bodyText": "Shouldn't this be @JsonProperty(value=\"external_config\")? Any reason why it is not mentioned here and added here - https://github.com/opendistro-for-elasticsearch/security/pull/542/files#diff-0e04f575b10578faf6c21e321ea023b3R293 ?\nSame for following lines - https://github.com/opendistro-for-elasticsearch/security/pull/542/files#diff-0e04f575b10578faf6c21e321ea023b3R80-R82?", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450576889", "createdAt": "2020-07-07T02:26:40Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/compliance/ComplianceConfig.java", "diffHunk": "@@ -53,25 +57,40 @@\n import com.google.common.cache.CacheBuilder;\n import com.google.common.cache.CacheLoader;\n import com.google.common.cache.LoadingCache;\n+import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.ImmutableSet;\n \n+import static com.amazon.opendistroforelasticsearch.security.DefaultObjectMapper.getOrDefault;\n+\n /**\n  * This class represents all configurations for compliance.\n  * DLS/FLS uses this configuration for filtering and anonymizing fields.\n  * Audit Logger uses this configuration to post compliance audit logs.\n  */\n+@JsonAutoDetect(getterVisibility = JsonAutoDetect.Visibility.NONE)\n public class ComplianceConfig {\n \n     private static final Logger log = LogManager.getLogger(ComplianceConfig.class);\n+    public static final ComplianceConfig DEFAULT = ComplianceConfig.from(Settings.EMPTY);\n     private static final int CACHE_SIZE = 1000;\n     private static final String INTERNAL_ELASTICSEARCH = \"internal_elasticsearch\";\n \n     private final boolean logExternalConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3OTExNg==", "bodyText": "what is the difference between this and https://github.com/opendistro-for-elasticsearch/security/pull/542/files#diff-0e04f575b10578faf6c21e321ea023b3R255-R262? Why are we handling them differently?", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450579116", "createdAt": "2020-07-07T02:35:56Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/compliance/ComplianceConfig.java", "diffHunk": "@@ -105,17 +126,19 @@ private ComplianceConfig(\n         this.ignoredComplianceUsersForReadMatcher = WildcardMatcher.from(ignoredComplianceUsersForRead);\n         this.ignoredComplianceUsersForWriteMatcher = WildcardMatcher.from(ignoredComplianceUsersForWrite);\n         this.opendistrosecurityIndex = opendistrosecurityIndex;\n-\n-        //opendistro_security.compliance.pii_fields:\n-        //  - indexpattern,fieldpattern,fieldpattern,....\n-        this.readEnabledFields = watchedReadFields.stream()\n-                .map(watchedReadField -> watchedReadField.split(\",\"))\n-                .filter(split -> split.length != 0 && !Strings.isNullOrEmpty(split[0]))\n-                .collect(ImmutableMap.toImmutableMap(\n-                        split -> WildcardMatcher.from(split[0]),\n-                        split -> split.length == 1 ?\n-                                Collections.singleton(\"*\") : Arrays.stream(split).skip(1).collect(ImmutableSet.toImmutableSet())\n-                ));\n+        this.watchedReadFields = watchedReadFields;\n+        this.ignoredComplianceUsersForRead = ignoredComplianceUsersForRead;\n+        this.watchedWriteIndicesPatterns = watchedWriteIndicesPatterns;\n+        this.ignoredComplianceUsersForWrite = ignoredComplianceUsersForWrite;\n+\n+        this.readEnabledFields = watchedReadFields.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU4MDI0Mg==", "bodyText": "I remember using the minidev JSONObject object to create JSON objects for testing in unit tests here - https://github.com/opendistro-for-elasticsearch/security/blob/master/src/test/java/com/amazon/opendistroforelasticsearch/security/ssl/OpenDistroSecuritySSLReloadCertsActionTests.java#L67-L70.\nIt helped make the tests little more readable for me. Just a suggestion in case your dealing with a lot of JSON object creation via testing", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450580242", "createdAt": "2020-07-07T02:40:37Z", "author": {"login": "debjanibnrj"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfigSerializeTest.java", "diffHunk": "@@ -0,0 +1,247 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.compliance.ComplianceConfig;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.amazon.opendistroforelasticsearch.security.support.WildcardMatcher;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.InjectableValues;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.google.common.collect.ImmutableSet;\n+import org.elasticsearch.common.settings.Settings;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.AUTHENTICATED;\n+import static com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory.GRANTED_PRIVILEGES;\n+\n+import static org.junit.Assert.assertSame;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertEquals;\n+\n+public class AuditConfigSerializeTest {\n+\n+    private final ObjectMapper objectMapper = new ObjectMapper();\n+    private final WildcardMatcher DEFAULT_IGNORED_USER = WildcardMatcher.from(AuditConfig.DEFAULT_IGNORED_USERS);\n+\n+    @Before\n+    public void setUp() {\n+        InjectableValues.Std iv = new InjectableValues.Std();\n+        iv.addValue(Settings.class, Settings.EMPTY);\n+        objectMapper.setInjectableValues(iv);\n+    }\n+\n+    @Test\n+    public void testDefaultSerialize() throws JsonProcessingException {\n+        // arrange\n+        final AuditConfig audit = new AuditConfig(true, null, null);\n+        // act\n+        final String json = objectMapper.writeValueAsString(audit);\n+        assertEquals(\"{\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b4cc36f30f529d4f8e59b8ad0c480a6979f829"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff585f03cada40f18badf47e3e088febbef2f7e4", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/ff585f03cada40f18badf47e3e088febbef2f7e4", "committedDate": "2020-07-07T03:46:30Z", "message": "code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTUwMzUw", "url": "https://github.com/opensearch-project/security/pull/542#pullrequestreview-443550350", "createdAt": "2020-07-07T04:16:08Z", "commit": {"oid": "ff585f03cada40f18badf47e3e088febbef2f7e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNDoxNjowOVrOGtuiSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNDoxNjowOVrOGtuiSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYwMTU0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    @JsonProperty(value = \"ignore_users\")\n          \n          \n            \n                    @JsonProperty(\"ignore_users\")", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450601547", "createdAt": "2020-07-07T04:16:09Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfig.java", "diffHunk": "@@ -114,9 +113,9 @@ public static AuditConfig from(final Settings settings) {\n         private final boolean logRequestBody;\n         private final boolean resolveIndices;\n         private final boolean excludeSensitiveHeaders;\n-        @JsonProperty(value = \"ignore_users\", index = 8)\n+        @JsonProperty(value = \"ignore_users\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff585f03cada40f18badf47e3e088febbef2f7e4"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cf41c46fab350454a6bb82e6f597a49cbe1517e", "author": {"user": {"login": "sujithvm", "name": "Sujith Vadakkepat"}}, "url": "https://github.com/opensearch-project/security/commit/4cf41c46fab350454a6bb82e6f597a49cbe1517e", "committedDate": "2020-07-07T04:18:47Z", "message": "code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTU2NjAz", "url": "https://github.com/opensearch-project/security/pull/542#pullrequestreview-443556603", "createdAt": "2020-07-07T04:38:18Z", "commit": {"oid": "4cf41c46fab350454a6bb82e6f597a49cbe1517e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTYxMjM4", "url": "https://github.com/opensearch-project/security/pull/542#pullrequestreview-443561238", "createdAt": "2020-07-07T04:54:34Z", "commit": {"oid": "4cf41c46fab350454a6bb82e6f597a49cbe1517e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNDo1NDozNVrOGtvDkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNDo1NDozNVrOGtvDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxMDA2Ng==", "bodyText": "Any reason to use XContentBuilder instead of ObjectMapper?", "url": "https://github.com/opensearch-project/security/pull/542#discussion_r450610066", "createdAt": "2020-07-07T04:54:35Z", "author": {"login": "vrozov"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/security/auditlog/config/AuditConfigSerializeTest.java", "diffHunk": "@@ -0,0 +1,334 @@\n+package com.amazon.opendistroforelasticsearch.security.auditlog.config;\n+\n+import com.amazon.opendistroforelasticsearch.security.auditlog.impl.AuditCategory;\n+import com.amazon.opendistroforelasticsearch.security.compliance.ComplianceConfig;\n+import com.amazon.opendistroforelasticsearch.security.support.ConfigConstants;\n+import com.amazon.opendistroforelasticsearch.security.support.WildcardMatcher;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.InjectableValues;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.common.xcontent.XContentFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cf41c46fab350454a6bb82e6f597a49cbe1517e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTYxODI4", "url": "https://github.com/opensearch-project/security/pull/542#pullrequestreview-443561828", "createdAt": "2020-07-07T04:56:37Z", "commit": {"oid": "4cf41c46fab350454a6bb82e6f597a49cbe1517e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2808, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}