{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODM1OTg4", "number": 661, "title": "Support ES 7.9.0", "bodyText": "By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-08-24T23:22:17Z", "url": "https://github.com/opensearch-project/security/pull/661", "merged": true, "mergeCommit": {"oid": "f7eb8e40d82d2dfc8da7e239cc18ca78fa14f405"}, "closed": true, "closedAt": "2020-08-28T18:02:20Z", "author": {"login": "vrozov"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCzOnCABqjM2OTY3ODYwMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDYyzMgFqTQ3NzkyMDU4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTE3OTEw", "url": "https://github.com/opensearch-project/security/pull/661#pullrequestreview-476917910", "createdAt": "2020-08-27T17:05:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzowNTowM1rOHIZdkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODowMDo1NlrOHIbZzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NzgyNA==", "bodyText": "Why was this change done ?\nThe previous version was keeping in sync with all the fields form Elasticsearch, and now it might get out of sync in the future.", "url": "https://github.com/opensearch-project/security/pull/661#discussion_r478567824", "createdAt": "2020-08-27T17:05:03Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/configuration/OpenDistroSecurityFlsDlsIndexSearcherWrapper.java", "diffHunk": "@@ -42,8 +42,9 @@\n \n public class OpenDistroSecurityFlsDlsIndexSearcherWrapper extends OpenDistroSecurityIndexSearcherWrapper {\n \n-    private static final Set<String> metaFields = Sets.union(Sets.newHashSet(\"_source\", \"_version\", \"_field_names\", \"_seq_no\", \"_primary_term\"),\n-            Sets.newHashSet(MapperService.getAllMetaFields()));\n+    // TODO: the list is outdated. It is necessary to change how meta fields are handled\n+    private static final Set<String> metaFields = Sets.newHashSet(\"_source\", \"_version\", \"_field_names\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4OTMwMw==", "bodyText": "FieldCapabilitiesIndexRequest has also a method to return a list of indices().\nDo we need to merge the values together, similar to the above if section with SingleShardRequest ?\nhttps://github.com/elastic/elasticsearch/blob/b0f402487946d52a5d54b7ad289b800b6772fd6b/server/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesIndexRequest.java#L79", "url": "https://github.com/opensearch-project/security/pull/661#discussion_r478589303", "createdAt": "2020-08-27T17:42:40Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/resolver/IndexResolverReplacer.java", "diffHunk": "@@ -705,10 +706,23 @@ private boolean getOrReplaceAllIndices(final Object request, final IndicesProvid\n             }\n \n             String[] newIndices = provider.provide(indicesL.toArray(new String[0]), request, true);\n-            if(checkIndices(request, newIndices, true, allowEmptyIndices) == false) {\n+            if (!checkIndices(request, newIndices, true, allowEmptyIndices)) {\n                 return false;\n             }\n             ((SingleShardRequest) request).index(newIndices.length!=1?null:newIndices[0]);\n+        } else if (request instanceof FieldCapabilitiesIndexRequest) {\n+            FieldCapabilitiesIndexRequest fieldCapabilitiesRequest = (FieldCapabilitiesIndexRequest) request;\n+\n+            String index = fieldCapabilitiesRequest.index();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5OTYzMA==", "bodyText": "How was it taking care of sending responses before adding this catch(Ex) code ?\nWill this send entire stack trace or just the message ? Is it possible that we might expose something important here ?", "url": "https://github.com/opensearch-project/security/pull/661#discussion_r478599630", "createdAt": "2020-08-27T18:00:56Z", "author": {"login": "dinusX"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/dlic/rest/api/AbstractApiAction.java", "diffHunk": "@@ -401,19 +401,23 @@ protected final RestChannelConsumer prepareRequest(RestRequest request, NodeClie\n \t\t\t\t.getTransient(ConfigConstants.OPENDISTRO_SECURITY_REMOTE_ADDRESS);\n \t\tfinal Object originalOrigin = threadPool.getThreadContext().getTransient(ConfigConstants.OPENDISTRO_SECURITY_ORIGIN);\n \n-\t\treturn channel -> {\n-\n-\t\t\ttry (StoredContext ctx = threadPool.getThreadContext().stashContext()) {\n-\n+\t\treturn channel -> threadPool.generic().submit(() -> {\n+\t\t\ttry (StoredContext ignore = threadPool.getThreadContext().stashContext()) {\n \t\t\t\tthreadPool.getThreadContext().putHeader(ConfigConstants.OPENDISTRO_SECURITY_CONF_REQUEST_HEADER, \"true\");\n \t\t\t\tthreadPool.getThreadContext().putTransient(ConfigConstants.OPENDISTRO_SECURITY_USER, originalUser);\n \t\t\t\tthreadPool.getThreadContext().putTransient(ConfigConstants.OPENDISTRO_SECURITY_REMOTE_ADDRESS, originalRemoteAddress);\n \t\t\t\tthreadPool.getThreadContext().putTransient(ConfigConstants.OPENDISTRO_SECURITY_ORIGIN, originalOrigin);\n \n \t\t\t\thandleApiRequest(channel, request, client);\n-\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlog.error(\"Error processing request {}\", request, e);\n+\t\t\t\ttry {\n+\t\t\t\t\tchannel.sendResponse(new BytesRestResponse(channel, e));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dd1c43b5e98b4eab36362a435b7e03e7d5ee148", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/opensearch-project/security/commit/0dd1c43b5e98b4eab36362a435b7e03e7d5ee148", "committedDate": "2020-08-27T21:50:13Z", "message": "Support ES 7.9.0"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0dd1c43b5e98b4eab36362a435b7e03e7d5ee148", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/opensearch-project/security/commit/0dd1c43b5e98b4eab36362a435b7e03e7d5ee148", "committedDate": "2020-08-27T21:50:13Z", "message": "Support ES 7.9.0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTEyOTgy", "url": "https://github.com/opensearch-project/security/pull/661#pullrequestreview-477112982", "createdAt": "2020-08-27T21:58:17Z", "commit": {"oid": "0dd1c43b5e98b4eab36362a435b7e03e7d5ee148"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTIwNTgx", "url": "https://github.com/opensearch-project/security/pull/661#pullrequestreview-477920581", "createdAt": "2020-08-28T17:52:13Z", "commit": {"oid": "0dd1c43b5e98b4eab36362a435b7e03e7d5ee148"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2725, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}