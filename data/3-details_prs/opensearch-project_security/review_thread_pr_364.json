{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTU0MzUx", "number": 364, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoxMTo1MFrODwG47A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTowMzowM1rODwICTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzcxMTE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoxMTo1MFrOGC7EPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoyNDo1M1rOGC7ilw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxODA3OA==", "bodyText": "Since we're removing DCFListener maybe a more generic name like registerListener?", "url": "https://github.com/opensearch-project/security/pull/364#discussion_r405718078", "createdAt": "2020-04-08T18:11:50Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -225,12 +223,12 @@ public final boolean isInitialized() {\n         return initialized.get();\n     }\n     \n-    public void registerDCFListener(DCFListener listener) {\n-        listeners.add(listener);\n+    public void registerDCFListener(Object listener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03b75e69e0eef86b8c5c82f6e3ac2c7c81da935e"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyNTg0Nw==", "bodyText": "I think it would be OK to keep the original name. It signifies the event bus the listener subscribes to. Note that in the past it was also not necessary to have DCF in the registerDCFListener() name, as it was clear that the registration is done for DCFListener.", "url": "https://github.com/opensearch-project/security/pull/364#discussion_r405725847", "createdAt": "2020-04-08T18:24:53Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -225,12 +223,12 @@ public final boolean isInitialized() {\n         return initialized.get();\n     }\n     \n-    public void registerDCFListener(DCFListener listener) {\n-        listeners.add(listener);\n+    public void registerDCFListener(Object listener) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxODA3OA=="}, "originalCommit": {"oid": "03b75e69e0eef86b8c5c82f6e3ac2c7c81da935e"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzg5NDkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTowMTo1MlrOGC83oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNzoyNVrOGC9YuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0NzYxNg==", "bodyText": "Wondering if this should be injected from the constructor as some other classes can post on the same event bus.", "url": "https://github.com/opensearch-project/security/pull/364#discussion_r405747616", "createdAt": "2020-04-08T19:01:52Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -81,7 +82,7 @@ private void loadStaticConfig() throws IOException {\n     protected final Logger log = LogManager.getLogger(this.getClass());\n     private final ConfigurationRepository cr;\n     private final AtomicBoolean initialized = new AtomicBoolean();\n-    private final List<DCFListener> listeners = new ArrayList<>();\n+    private final EventBus eventBus = new EventBus(\"DynamicConfig\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03b75e69e0eef86b8c5c82f6e3ac2c7c81da935e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NjA4OA==", "bodyText": "Currently eventBus is not shared across DynamicConfigFactory class instances similar to how listeners was not shared. Till there is a use case where eventBus needs to be shared, I'd prefer to keep it encapsulated inside DynamicConfigFactory.", "url": "https://github.com/opensearch-project/security/pull/364#discussion_r405756088", "createdAt": "2020-04-08T19:17:25Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/securityconf/DynamicConfigFactory.java", "diffHunk": "@@ -81,7 +82,7 @@ private void loadStaticConfig() throws IOException {\n     protected final Logger log = LogManager.getLogger(this.getClass());\n     private final ConfigurationRepository cr;\n     private final AtomicBoolean initialized = new AtomicBoolean();\n-    private final List<DCFListener> listeners = new ArrayList<>();\n+    private final EventBus eventBus = new EventBus(\"DynamicConfig\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0NzYxNg=="}, "originalCommit": {"oid": "03b75e69e0eef86b8c5c82f6e3ac2c7c81da935e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzg5OTAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auth/BackendRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTowMzowM1rOGC86UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxOToyMlrOGC9cyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0ODMwNQ==", "bodyText": "How does this know which event bus to subscribe to?\nWhat happens if I make another event bus and post DynamicConfigModel ? Does this automatically subscribe for both?", "url": "https://github.com/opensearch-project/security/pull/364#discussion_r405748305", "createdAt": "2020-04-08T19:03:03Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auth/BackendRegistry.java", "diffHunk": "@@ -207,8 +206,8 @@ public void invalidateCache() {\n         transportImpersonationCache.invalidateAll();\n     }\n \n-    @Override\n-    public void onChanged(ConfigModel cm, DynamicConfigModel dcm, InternalUsersModel ium) {\n+    @Subscribe\n+    public void onDynamicConfigModelChanged(DynamicConfigModel dcm) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03b75e69e0eef86b8c5c82f6e3ac2c7c81da935e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NzEzMQ==", "bodyText": "It is necessary to register with the event bus. Please see DynamicConfigFactory.registerDCFListener().", "url": "https://github.com/opensearch-project/security/pull/364#discussion_r405757131", "createdAt": "2020-04-08T19:19:22Z", "author": {"login": "vrozov"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/security/auth/BackendRegistry.java", "diffHunk": "@@ -207,8 +206,8 @@ public void invalidateCache() {\n         transportImpersonationCache.invalidateAll();\n     }\n \n-    @Override\n-    public void onChanged(ConfigModel cm, DynamicConfigModel dcm, InternalUsersModel ium) {\n+    @Subscribe\n+    public void onDynamicConfigModelChanged(DynamicConfigModel dcm) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0ODMwNQ=="}, "originalCommit": {"oid": "03b75e69e0eef86b8c5c82f6e3ac2c7c81da935e"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2404, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}