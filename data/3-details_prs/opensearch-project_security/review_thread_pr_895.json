{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5ODQ3MDY1", "number": 895, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyMjo1MVrOFVXwBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyODowNFrOFVX3sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3OTUzNTQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/dlic/auth/ldap/backend/LDAPAuthorizationBackend.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyMjo1MVrOIdy-6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyMjo1MVrOIdy-6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNDkyMw==", "bodyText": "can we make these class level fields, then we can utilize them for other methods (eg: configureSSL) as well?", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568114923", "createdAt": "2021-02-01T20:22:51Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/dlic/auth/ldap/backend/LDAPAuthorizationBackend.java", "diffHunk": "@@ -257,9 +257,11 @@ private static Connection getConnection0(final Settings settings, final Path con\n         Connection connection = null;\n         Exception lastException = null;\n \n+        final boolean isDebugEnabled = log.isDebugEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3OTU1MDcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/dlic/auth/ldap2/LDAPAuthorizationBackend2.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyNjo1OVrOIdzIAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyNjo1OVrOIdzIAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzI0OQ==", "bodyText": "anyway to avoid passing these in args and declare them as class variables.", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568117249", "createdAt": "2021-02-01T20:26:59Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/dlic/auth/ldap2/LDAPAuthorizationBackend2.java", "diffHunk": "@@ -408,12 +409,13 @@ private void fillRoles0(final User user, final AuthCredentials optionalAuthCreds\n \n     protected Set<LdapName> resolveNestedRoles(final LdapName roleDn, final Connection ldapConnection,\n                                                String userRoleName, int depth, final boolean rolesearchEnabled,\n-                                               Set<Map.Entry<String, Settings>> roleSearchBaseSettingsSet)\n+                                               Set<Map.Entry<String, Settings>> roleSearchBaseSettingsSet,\n+                                               final boolean isDebugEnabled, final boolean isTraceEnabled)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3OTU1MzAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/dlic/auth/ldap2/LDAPUserSearcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyNzozNVrOIdzJXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyNzozNVrOIdzJXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzU5Nw==", "bodyText": "do we need isDebugEnabled variable here?", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568117597", "createdAt": "2021-02-01T20:27:35Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/dlic/auth/ldap2/LDAPUserSearcher.java", "diffHunk": "@@ -101,7 +101,7 @@ private LdapEntry existsSearchingUntilFirstHit(Connection ldapConnection, String\n                     SearchScope.SUBTREE);\n \n             if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3OTU1NTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/dlic/util/SettingsBasedSSLConfigurator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQyMDoyODowNFrOIdzKjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQyMjowMjo1NVrOI3KeLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzkwMg==", "bodyText": "do we need isDebugEnabled variable here?", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r568117902", "createdAt": "2021-02-01T20:28:04Z", "author": {"login": "debjanibnrj"}, "path": "src/main/java/com/amazon/dlic/util/SettingsBasedSSLConfigurator.java", "diffHunk": "@@ -414,7 +414,7 @@ public SSLConfig(SSLContext sslContext, String[] supportedProtocols, String[] su\n             this.effectiveKeyAlias = effectiveKeyAlias;\n \n             if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDcxNDE1Nw==", "bodyText": "This is not reused or loop in same method scope", "url": "https://github.com/opensearch-project/security/pull/895#discussion_r594714157", "createdAt": "2021-03-15T22:02:55Z", "author": {"login": "sujithvm"}, "path": "src/main/java/com/amazon/dlic/util/SettingsBasedSSLConfigurator.java", "diffHunk": "@@ -414,7 +414,7 @@ public SSLConfig(SSLContext sslContext, String[] supportedProtocols, String[] su\n             this.effectiveKeyAlias = effectiveKeyAlias;\n \n             if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODExNzkwMg=="}, "originalCommit": null, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2272, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}