{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NzE3Mzcx", "number": 3083, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NDoyOVrOEofYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozMjozMlrOEogYEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkyNzM4OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NDoyOVrOHZnNSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NDoyOVrOHZnNSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxODgyNQ==", "bodyText": "Please delete this empty line.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496618825", "createdAt": "2020-09-29T10:44:29Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -67,5 +79,4 @@ protected TestSetting() {\n         }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzMjk3OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjowNlrOHZnQuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjowNlrOHZnQuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTcwNw==", "bodyText": "Please delete all these annotations since I think they are not needed.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619707", "createdAt": "2020-09-29T10:46:06Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzMzE1OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjowOVrOHZnQ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjowOVrOHZnQ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTczNg==", "bodyText": "Please delete all these annotations since I think they are not needed.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619736", "createdAt": "2020-09-29T10:46:09Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzMzQ0OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjoxM1rOHZnRAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjoxM1rOHZnRAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTc3OA==", "bodyText": "Please delete all these annotations since I think they are not needed.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619778", "createdAt": "2020-09-29T10:46:13Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzMzY4OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjoxOFrOHZnRIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjoxOFrOHZnRIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTgxMQ==", "bodyText": "Please delete all these annotations since I think they are not needed.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619811", "createdAt": "2020-09-29T10:46:18Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n \n         // When", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzMzg4OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjoyMVrOHZnRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjoyMVrOHZnRRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTg0NA==", "bodyText": "Please delete all these annotations since I think they are not needed.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496619844", "createdAt": "2020-09-29T10:46:21Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/AbstractKapuaSettingTest.java", "diffHunk": "@@ -36,24 +48,24 @@ public String key() {\n     }\n \n     @Test\n-    public void shouldReadPathFromEnv() {\n+    public void shouldReadPathFromEnvTest() {\n         // When\n         String path = new TestSetting().property(\"PATH\");\n \n         // Then\n-        Assertions.assertThat(path).isNotEmpty();\n+        assertThat(path).isNotEmpty();\n     }\n \n     @Test\n-    public void shouldReadEnvUsingDotNotation() {\n+    public void shouldReadEnvUsingDotNotationTest() {\n         // Given\n         System.setProperty(\"FOO_BAR_BAZ\", \"qux\");\n \n         // When\n         String path = new TestSetting().property(\"foo.bar.baz\");\n \n         // Then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTAwNDM0OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTowNjo0MVrOHZn7xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTowNjo0MVrOHZn7xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMDcyNg==", "bodyText": "Please change message from \"The key is not contained\" to \"There is no key!\"", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496630726", "createdAt": "2020-09-29T11:06:41Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java", "diffHunk": "@@ -33,25 +33,39 @@ public void createInstanceOfClasses() {\n     @Test\n     public void getKeysTest() {\n         assertFalse(\"The next item exists!\", envFriendlyConfiguration.getKeys().hasNext());\n+        envFriendlyConfiguration.setProperty(\"Key1\", \"value1\");\n+        assertTrue(\"The next item does not exist!\", envFriendlyConfiguration.getKeys().hasNext());\n     }\n \n     @Test\n     public void getPropertyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"property\"));\n+        envFriendlyConfiguration.setProperty(\"key\", \"value\");\n+        envFriendlyConfiguration.setProperty(\"KEY_PROPERTY\", 10);\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"key\"));\n+        assertEquals(\"Expected and actual values should be the same!\", 10, envFriendlyConfiguration.getProperty(\"key.property\"));\n     }\n \n     @Test\n     public void getPropertyEmptyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"\"));\n+        envFriendlyConfiguration.setProperty(\"\", \"value\");\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"\"));\n     }\n \n     @Test(expected = NullPointerException.class)\n     public void getPropertyNullTest() {\n-        assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(null));\n+        envFriendlyConfiguration.getProperty(null);\n     }\n \n     @Test\n     public void containsKeyTest() {\n-        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"key\"));\n+        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.setProperty(\"Key\", \"value\");\n+        assertTrue(\"The key is not contained!\", envFriendlyConfiguration.containsKey(\"Key\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTAwNDg2OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTowNjo1MFrOHZn8Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTowNjo1MFrOHZn8Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMDgxMQ==", "bodyText": "Please change message from \"The key is not contained\" to \"There is no key!\"", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496630811", "createdAt": "2020-09-29T11:06:50Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/EnvFriendlyConfigurationTest.java", "diffHunk": "@@ -33,25 +33,39 @@ public void createInstanceOfClasses() {\n     @Test\n     public void getKeysTest() {\n         assertFalse(\"The next item exists!\", envFriendlyConfiguration.getKeys().hasNext());\n+        envFriendlyConfiguration.setProperty(\"Key1\", \"value1\");\n+        assertTrue(\"The next item does not exist!\", envFriendlyConfiguration.getKeys().hasNext());\n     }\n \n     @Test\n     public void getPropertyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"property\"));\n+        envFriendlyConfiguration.setProperty(\"key\", \"value\");\n+        envFriendlyConfiguration.setProperty(\"KEY_PROPERTY\", 10);\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"key\"));\n+        assertEquals(\"Expected and actual values should be the same!\", 10, envFriendlyConfiguration.getProperty(\"key.property\"));\n     }\n \n     @Test\n     public void getPropertyEmptyTest() {\n         assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(\"\"));\n+        envFriendlyConfiguration.setProperty(\"\", \"value\");\n+        assertEquals(\"Expected and actual values should be the same!\", \"value\", envFriendlyConfiguration.getProperty(\"\"));\n     }\n \n     @Test(expected = NullPointerException.class)\n     public void getPropertyNullTest() {\n-        assertNull(\"Null expected!\", envFriendlyConfiguration.getProperty(null));\n+        envFriendlyConfiguration.getProperty(null);\n     }\n \n     @Test\n     public void containsKeyTest() {\n-        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"key\"));\n+        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.setProperty(\"Key\", \"value\");\n+        assertTrue(\"The key is not contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.clearProperty(\"Key\");\n+        assertFalse(\"The key is contained!\", envFriendlyConfiguration.containsKey(\"Key\"));\n+        envFriendlyConfiguration.setProperty(\"KEY_PROPERTY\", 10);\n+        assertTrue(\"The key is not contained!\", envFriendlyConfiguration.containsKey(\"key.property\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTAxNDc3OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTowOTo1NVrOHZoCVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTowOTo1NVrOHZoCVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMjQwNA==", "bodyText": "Please rename this test to: \"throwingKapuaSettingErrorCodes\"", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496632404", "createdAt": "2020-09-29T11:09:55Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "diffHunk": "@@ -20,72 +20,114 @@\n public class KapuaSettingExceptionTest extends Assert {\n \n     Throwable throwable = new Throwable(\"throwable_error_message\");\n+    String kapuaErrorMessage = \"kapua-setting-service-error-messages\";\n+    KapuaSettingErrorCodes[] kapuaSettingErrorCodes = {KapuaSettingErrorCodes.INVALID_RESOURCE_FILE, KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, KapuaSettingErrorCodes.RESOURCE_NOT_FOUND};\n \n     @Test\n-    public void constructorNullTest() {\n+    public void kapuaSettingExceptionNullTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(null);\n         assertNull(\"Null expected!\", kapuaSettingException.getCode());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceNameTest() {\n+    public void kapuaSettingExceptionInvalidResourceNameTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceFileTest() {\n+    public void kapuaSettingExceptionInvalidResourceFileTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_FILE);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_FILE\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorResourceNotFoundTest() {\n+    public void kapuaSettingExceptionResourceNotFoundTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.RESOURCE_NOT_FOUND);\n         assertEquals(\"Expected and actual values should be the same!\", \"RESOURCE_NOT_FOUND\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithObjectArgTest() {\n+    public void kapuaSettingExceptionWithObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+            assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + value, kapuaSettingException.getMessage());\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n         }\n     }\n \n     @Test\n-    public void extendedConstructorWithNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertEquals(\"Expected and actual values should be the same!\", throwable, kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithNullThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, null, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertNull(\"Expected and actual values should be the same!\", kapuaSettingException.getCause());\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndObjectArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertEquals(\"Null expected!\", throwable, kapuaSettingException.getCause());\n             assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTAxNTU3OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxMDowN1rOHZoCxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxMDowN1rOHZoCxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMjUxOA==", "bodyText": "Please rename this test to: \"throwingKapuaSettingErrorCodesWithArguments\"", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496632518", "createdAt": "2020-09-29T11:10:07Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "diffHunk": "@@ -20,72 +20,114 @@\n public class KapuaSettingExceptionTest extends Assert {\n \n     Throwable throwable = new Throwable(\"throwable_error_message\");\n+    String kapuaErrorMessage = \"kapua-setting-service-error-messages\";\n+    KapuaSettingErrorCodes[] kapuaSettingErrorCodes = {KapuaSettingErrorCodes.INVALID_RESOURCE_FILE, KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, KapuaSettingErrorCodes.RESOURCE_NOT_FOUND};\n \n     @Test\n-    public void constructorNullTest() {\n+    public void kapuaSettingExceptionNullTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(null);\n         assertNull(\"Null expected!\", kapuaSettingException.getCode());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceNameTest() {\n+    public void kapuaSettingExceptionInvalidResourceNameTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceFileTest() {\n+    public void kapuaSettingExceptionInvalidResourceFileTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_FILE);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_FILE\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorResourceNotFoundTest() {\n+    public void kapuaSettingExceptionResourceNotFoundTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.RESOURCE_NOT_FOUND);\n         assertEquals(\"Expected and actual values should be the same!\", \"RESOURCE_NOT_FOUND\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithObjectArgTest() {\n+    public void kapuaSettingExceptionWithObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+            assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + value, kapuaSettingException.getMessage());\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n         }\n     }\n \n     @Test\n-    public void extendedConstructorWithNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertEquals(\"Expected and actual values should be the same!\", throwable, kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithNullThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, null, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertNull(\"Expected and actual values should be the same!\", kapuaSettingException.getCause());\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndObjectArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertEquals(\"Null expected!\", throwable, kapuaSettingException.getCause());\n             assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {\n+        for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n+            throw new KapuaSettingException(code);\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesArgumentsTest() throws KapuaSettingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTAxNjk4OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxMDoyOFrOHZoDkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxMDoyOFrOHZoDkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMjcyMA==", "bodyText": "Please rename this test to: \"throwingKapuaSettingErrorCodesWithCauseAndArguments\"", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496632720", "createdAt": "2020-09-29T11:10:28Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/setting/KapuaSettingExceptionTest.java", "diffHunk": "@@ -20,72 +20,114 @@\n public class KapuaSettingExceptionTest extends Assert {\n \n     Throwable throwable = new Throwable(\"throwable_error_message\");\n+    String kapuaErrorMessage = \"kapua-setting-service-error-messages\";\n+    KapuaSettingErrorCodes[] kapuaSettingErrorCodes = {KapuaSettingErrorCodes.INVALID_RESOURCE_FILE, KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, KapuaSettingErrorCodes.RESOURCE_NOT_FOUND};\n \n     @Test\n-    public void constructorNullTest() {\n+    public void kapuaSettingExceptionNullTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(null);\n         assertNull(\"Null expected!\", kapuaSettingException.getCode());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceNameTest() {\n+    public void kapuaSettingExceptionInvalidResourceNameTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorInvalidResourceFileTest() {\n+    public void kapuaSettingExceptionInvalidResourceFileTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_FILE);\n         assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_FILE\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void constructorResourceNotFoundTest() {\n+    public void kapuaSettingExceptionResourceNotFoundTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.RESOURCE_NOT_FOUND);\n         assertEquals(\"Expected and actual values should be the same!\", \"RESOURCE_NOT_FOUND\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \", kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithObjectArgTest() {\n+    public void kapuaSettingExceptionWithObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+            assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + value, kapuaSettingException.getMessage());\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n         }\n     }\n \n     @Test\n-    public void extendedConstructorWithNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertEquals(\"Expected and actual values should be the same!\", throwable, kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithNullThrowableAndNullObjArgTest() {\n+    public void kapuaSettingExceptionWithNullThrowableAndNullObjArgTest() {\n         KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, null, (Object) null);\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-        assertNull(\"Expected and actual values should be the same!\", kapuaSettingException.getCause());\n-        assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + null);\n+        assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+        assertNull(\"Null expected!\", kapuaSettingException.getCause());\n+        assertEquals(\"Expected and actual values should be the same!\", \"Error: \" + null, kapuaSettingException.getMessage());\n+        assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n     }\n \n     @Test\n-    public void extendedConstructorWithThrowableAndObjectArgTest() {\n+    public void kapuaSettingExceptionWithThrowableAndObjectArgTest() {\n         Object[] arguments = new Object[]{\"invalid_resource_name\", 1, 10L, 10.34, 5.99f, 'D', \"\", true, false, -128, 127, -32768, 32767, -2147483648, 2147483647, -9223372036854775808L, 9223372036854775807L};\n         for (Object value : arguments) {\n             KapuaSettingException kapuaSettingException = new KapuaSettingException(KapuaSettingErrorCodes.INVALID_RESOURCE_NAME, throwable, value);\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCode().toString(), \"INVALID_RESOURCE_NAME\");\n-            assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getCause(), throwable);\n+            assertEquals(\"Expected and actual values should be the same!\", \"INVALID_RESOURCE_NAME\", kapuaSettingException.getCode().toString());\n+            assertEquals(\"Null expected!\", throwable, kapuaSettingException.getCause());\n             assertEquals(\"Expected and actual values should be the same!\", kapuaSettingException.getMessage(), \"Error: \" + value);\n+            assertEquals(\"Expected and actual values should be the same!\", kapuaErrorMessage, kapuaSettingException.getKapuaErrorMessagesBundle());\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesTest() throws KapuaSettingException {\n+        for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n+            throw new KapuaSettingException(code);\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesArgumentsTest() throws KapuaSettingException {\n+        for (KapuaSettingErrorCodes code : kapuaSettingErrorCodes) {\n+            throw new KapuaSettingException(code, \"String\", true, 1, 10L);\n+        }\n+    }\n+\n+    @Test(expected = KapuaSettingException.class)\n+    public void throwingKapuaSettingExceptionKapuaSettingErrorCodesCauseArgumentsTest() throws KapuaSettingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTA0MzQxOnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxNzo1NFrOHZoTWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMToxNzo1NFrOHZoTWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzNjc2Mw==", "bodyText": "Please delete this line.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496636763", "createdAt": "2020-09-29T11:17:54Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java", "diffHunk": "@@ -16,9 +16,61 @@\n \n public class SemanticVersionTest extends Assert {\n \n+    @Test(expected = NullPointerException.class)\n+    public void semanticVersionNullTest() {\n+        SemanticVersion semanticVersion = new SemanticVersion(null);\n+    }\n+\n     @Test\n-    public void semanticVersionAfterTest() {\n+    //(expected = NullPointerException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTA4OTQ0OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozMjozMlrOHZowPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozMjozMlrOHZowPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0NDE1Ng==", "bodyText": "Please delete empty line.", "url": "https://github.com/eclipse/kapua/pull/3083#discussion_r496644156", "createdAt": "2020-09-29T11:32:32Z", "author": {"login": "LeoNerdoG"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/util/SemanticVersionTest.java", "diffHunk": "@@ -260,16 +330,178 @@ public void semanticVersionBeforeTest() {\n         for (int i = 0; i < semanticVersionLettersBeforeFalse.length; i++) {\n             try {\n                 assertTrue(new SemanticVersion(semanticVersionLettersBeforeFalse[i]).before(new SemanticVersion(semanticVersionLettersToCompareFalse[i])));\n+                fail(\"AssertionError expected\");\n             } catch (AssertionError e) {\n                 //Expected\n             }\n         }\n+\n+        try {\n+            assertTrue(new SemanticVersion(semanticMajorVersionToCompare).before(new SemanticVersion(semanticMajorVersion)));\n+            fail(\"NullPointerException expected\");\n+        } catch (Exception e) {\n+            //Expected\n+        }\n     }\n \n     @Test\n     public void semanticVersionToStringTest() {\n-\n         assertEquals(\"1.2.3\", new SemanticVersion(\"1.2.3\").toString());\n         assertEquals(\"1.2.3\", new SemanticVersion.VersionToken(\"1.2.3\").toString());\n     }\n+\n+    @Test\n+    public void versionTokenNullTest() {\n+        SemanticVersion.VersionToken versionToken = new SemanticVersion.VersionToken(null);\n+        assertNull(\"Null expected.\", versionToken.getVersionInteger());\n+        assertFalse(\"False expected.\", versionToken.isIntegerComparison());\n+        assertNull(\"Null expected.\", versionToken.getVersionString());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49394930a4511f1d382259501d455a4cd8520a66"}, "originalPosition": 240}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1781, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}