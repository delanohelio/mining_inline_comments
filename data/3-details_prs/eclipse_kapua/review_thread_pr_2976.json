{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NDY0MzY5", "number": 2976, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0ODo1MFrOD9Uk0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0ODo1NFrOD9Uk6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI2ODMzOnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/ResourceUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0ODo1MFrOGWvtmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0ODo1MFrOGWvtmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMzU3Ng==", "bodyText": "If they are not intended to match please use assertNotEquals.\nIf ResourceUtils.getResource(...) is meant to throw an Exception catch the Exception and do asserts on the type of Exception expected.", "url": "https://github.com/eclipse/kapua/pull/2976#discussion_r426503576", "createdAt": "2020-05-18T09:48:50Z", "author": {"login": "Coduz"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/util/ResourceUtilsTest.java", "diffHunk": "@@ -13,48 +13,112 @@\n \n import java.io.IOException;\n import java.io.Reader;\n+import java.lang.reflect.Constructor;\n import java.net.URL;\n+import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n \n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n import org.junit.Assert;\n+import org.junit.ComparisonFailure;\n import org.junit.Test;\n \n import com.google.common.io.CharStreams;\n import org.junit.experimental.categories.Category;\n \n @Category(JUnitTests.class)\n-public class ResourceUtilsTest {\n+public class ResourceUtilsTest extends Assert {\n \n-    /**\n-     * Test a successful resource resolve call and a successful read\n-     */\n     @Test\n-    public void testRead1() throws IOException {\n-        final URL url = ResourceUtils.getResource(\"test.properties\");\n-        Assert.assertNotNull(url);\n+    public void testConstructor() throws Exception {\n+        Constructor<ResourceUtils> resourceUtils = ResourceUtils.class.getDeclaredConstructor();\n+        resourceUtils.setAccessible(true);\n+        resourceUtils.newInstance();\n+    }\n \n-        try (final Reader reader = ResourceUtils.openAsReader(url, StandardCharsets.UTF_8)) {\n-            final String string = CharStreams.toString(reader);\n-            Assert.assertNotNull(string);\n-            Assert.assertFalse(string.isEmpty());\n+    @Test\n+    public void getResourceTest() {\n+        String resource = \"test.properties\";\n+        String noResource = \"file:/does-not-exist\";\n+\n+        ClassLoader classloaderTest = Thread.currentThread().getContextClassLoader();\n+        URL url = classloaderTest.getResource(resource);\n+\n+        //Positive test\n+        try {\n+            assertEquals(url, ResourceUtils.getResource(resource));\n+        } catch (AssertionError ex) {\n+            fail(\"AssertionError not expected\");\n+        }\n+\n+        //Negative test\n+        try {\n+            assertEquals(url, ResourceUtils.getResource(noResource));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a26ffcf70068c5ea95214ca687e53e3393796c9e"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NjI2ODU3OnYy", "diffSide": "RIGHT", "path": "commons/src/test/java/org/eclipse/kapua/commons/util/ResourceUtilsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0ODo1NFrOGWvtvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzoyNzo0M1rOGXTPmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMzYxMw==", "bodyText": "assertEquals has an overload method that accepts a message as a first argument. So fail invoked in the catch exception is not the correct usage of Assert stuff.\nPlease change this and also other similar usages", "url": "https://github.com/eclipse/kapua/pull/2976#discussion_r426503613", "createdAt": "2020-05-18T09:48:54Z", "author": {"login": "Coduz"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/util/ResourceUtilsTest.java", "diffHunk": "@@ -13,48 +13,112 @@\n \n import java.io.IOException;\n import java.io.Reader;\n+import java.lang.reflect.Constructor;\n import java.net.URL;\n+import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n \n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n import org.junit.Assert;\n+import org.junit.ComparisonFailure;\n import org.junit.Test;\n \n import com.google.common.io.CharStreams;\n import org.junit.experimental.categories.Category;\n \n @Category(JUnitTests.class)\n-public class ResourceUtilsTest {\n+public class ResourceUtilsTest extends Assert {\n \n-    /**\n-     * Test a successful resource resolve call and a successful read\n-     */\n     @Test\n-    public void testRead1() throws IOException {\n-        final URL url = ResourceUtils.getResource(\"test.properties\");\n-        Assert.assertNotNull(url);\n+    public void testConstructor() throws Exception {\n+        Constructor<ResourceUtils> resourceUtils = ResourceUtils.class.getDeclaredConstructor();\n+        resourceUtils.setAccessible(true);\n+        resourceUtils.newInstance();\n+    }\n \n-        try (final Reader reader = ResourceUtils.openAsReader(url, StandardCharsets.UTF_8)) {\n-            final String string = CharStreams.toString(reader);\n-            Assert.assertNotNull(string);\n-            Assert.assertFalse(string.isEmpty());\n+    @Test\n+    public void getResourceTest() {\n+        String resource = \"test.properties\";\n+        String noResource = \"file:/does-not-exist\";\n+\n+        ClassLoader classloaderTest = Thread.currentThread().getContextClassLoader();\n+        URL url = classloaderTest.getResource(resource);\n+\n+        //Positive test\n+        try {\n+            assertEquals(url, ResourceUtils.getResource(resource));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a26ffcf70068c5ea95214ca687e53e3393796c9e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4NTcyMw==", "bodyText": "Hi @Coduz I have made all changes that you mentioned above. If something is not ok please let me know so I can fix it. Thanks", "url": "https://github.com/eclipse/kapua/pull/2976#discussion_r427085723", "createdAt": "2020-05-19T07:27:43Z", "author": {"login": "sonja-ct"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/util/ResourceUtilsTest.java", "diffHunk": "@@ -13,48 +13,112 @@\n \n import java.io.IOException;\n import java.io.Reader;\n+import java.lang.reflect.Constructor;\n import java.net.URL;\n+import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n \n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n import org.junit.Assert;\n+import org.junit.ComparisonFailure;\n import org.junit.Test;\n \n import com.google.common.io.CharStreams;\n import org.junit.experimental.categories.Category;\n \n @Category(JUnitTests.class)\n-public class ResourceUtilsTest {\n+public class ResourceUtilsTest extends Assert {\n \n-    /**\n-     * Test a successful resource resolve call and a successful read\n-     */\n     @Test\n-    public void testRead1() throws IOException {\n-        final URL url = ResourceUtils.getResource(\"test.properties\");\n-        Assert.assertNotNull(url);\n+    public void testConstructor() throws Exception {\n+        Constructor<ResourceUtils> resourceUtils = ResourceUtils.class.getDeclaredConstructor();\n+        resourceUtils.setAccessible(true);\n+        resourceUtils.newInstance();\n+    }\n \n-        try (final Reader reader = ResourceUtils.openAsReader(url, StandardCharsets.UTF_8)) {\n-            final String string = CharStreams.toString(reader);\n-            Assert.assertNotNull(string);\n-            Assert.assertFalse(string.isEmpty());\n+    @Test\n+    public void getResourceTest() {\n+        String resource = \"test.properties\";\n+        String noResource = \"file:/does-not-exist\";\n+\n+        ClassLoader classloaderTest = Thread.currentThread().getContextClassLoader();\n+        URL url = classloaderTest.getResource(resource);\n+\n+        //Positive test\n+        try {\n+            assertEquals(url, ResourceUtils.getResource(resource));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMzYxMw=="}, "originalCommit": {"oid": "a26ffcf70068c5ea95214ca687e53e3393796c9e"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1690, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}