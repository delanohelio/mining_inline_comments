{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMDMyNjIw", "number": 2875, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyNzozNFrOEVUCHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODozMzozNFrOEVUK9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzgzNzczOnYy", "diffSide": "RIGHT", "path": "commons/src/main/java/org/eclipse/kapua/commons/model/query/predicate/AbstractMatchPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyNzozNFrOG7_kcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyNzozNFrOG7_kcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MDY5MA==", "bodyText": "Please fix", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465560690", "createdAt": "2020-08-05T08:27:34Z", "author": {"login": "Coduz"}, "path": "commons/src/main/java/org/eclipse/kapua/commons/model/query/predicate/AbstractMatchPredicate.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.commons.model.query.predicate;\n+\n+import java.util.List;\n+\n+import org.eclipse.kapua.model.query.predicate.MatchPredicate;\n+\n+/**\n+ * {@link MatchPredicate} implementation.\n+ *\n+ * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg0MDcwOnYy", "diffSide": "RIGHT", "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/AttributePredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODoyMVrOG7_mNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODoyMVrOG7_mNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTE0MA==", "bodyText": "Please fix", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465561140", "createdAt": "2020-08-05T08:28:21Z", "author": {"login": "Coduz"}, "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/AttributePredicate.java", "diffHunk": "@@ -71,6 +71,17 @@\n          * @since 1.0.0\n          */\n         STARTS_WITH,\n+\n+        /**\n+         * The same of {@link #STARTS_WITH} {@link Operator} but case insensitive\n+         * <p>\n+         * Matches results with value that starts with the given value, case insensitive.\n+         * To be used with {@link String} {@link org.eclipse.kapua.model.KapuaEntityAttributes}.\n+         *\n+         * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg0MTM2OnYy", "diffSide": "RIGHT", "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/AttributePredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODoyOVrOG7_mkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODoyOVrOG7_mkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTIzNA==", "bodyText": "Please fix", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465561234", "createdAt": "2020-08-05T08:28:29Z", "author": {"login": "Coduz"}, "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/AttributePredicate.java", "diffHunk": "@@ -83,6 +94,18 @@\n          */\n         LIKE,\n \n+        /**\n+         * {@link #LIKE} {@link Operator} but case insensitive\n+         * <p>\n+         * Matches results with value that are like (in SQL fashion) the given value case insensitive.\n+         * To be used with {@link String} {@link org.eclipse.kapua.model.KapuaEntityAttributes}.\n+         * <p>\n+         * If you want to match only the beginning of the {@link String} please consider using {@link #STARTS_WITH_IGNORE_CASE}.\n+         *\n+         * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg0MjEyOnYy", "diffSide": "RIGHT", "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/MatchPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODo0MFrOG7_m_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODo0MFrOG7_m_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTM0Mg==", "bodyText": "Please fix", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465561342", "createdAt": "2020-08-05T08:28:40Z", "author": {"login": "Coduz"}, "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/MatchPredicate.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.model.query.predicate;\n+\n+import java.util.List;\n+\n+/**\n+ * {@link MatchPredicate} definition.\n+ *\n+ * @param <T> Attribute value type.\n+ * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg0Mjc2OnYy", "diffSide": "RIGHT", "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/MatchPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODo0OFrOG7_nXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODo0OFrOG7_nXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTQzOQ==", "bodyText": "Please fix", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465561439", "createdAt": "2020-08-05T08:28:48Z", "author": {"login": "Coduz"}, "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/MatchPredicate.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.model.query.predicate;\n+\n+import java.util.List;\n+\n+/**\n+ * {@link MatchPredicate} definition.\n+ *\n+ * @param <T> Attribute value type.\n+ * @since 1.2.0\n+ */\n+public interface MatchPredicate<T> extends QueryPredicate {\n+\n+    /**\n+     * Gets the name of the {@link org.eclipse.kapua.model.KapuaEntityAttributes} to compare.\n+     *\n+     * @return The name name of the {@link org.eclipse.kapua.model.KapuaEntityAttributes} to compare.\n+     * @since 1.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg0MzA0OnYy", "diffSide": "RIGHT", "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/MatchPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODo1NFrOG7_nlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyODo1NFrOG7_nlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTQ5Mw==", "bodyText": "Please fix", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465561493", "createdAt": "2020-08-05T08:28:54Z", "author": {"login": "Coduz"}, "path": "service/api/src/main/java/org/eclipse/kapua/model/query/predicate/MatchPredicate.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.model.query.predicate;\n+\n+import java.util.List;\n+\n+/**\n+ * {@link MatchPredicate} definition.\n+ *\n+ * @param <T> Attribute value type.\n+ * @since 1.2.0\n+ */\n+public interface MatchPredicate<T> extends QueryPredicate {\n+\n+    /**\n+     * Gets the name of the {@link org.eclipse.kapua.model.KapuaEntityAttributes} to compare.\n+     *\n+     * @return The name name of the {@link org.eclipse.kapua.model.KapuaEntityAttributes} to compare.\n+     * @since 1.0.0\n+     */\n+    List<String> getAttributeNames();\n+\n+    /**\n+     * Gets the value to compare the results.\n+     *\n+     * @return The value to compare the results.\n+     * @since 1.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg0NDcwOnYy", "diffSide": "RIGHT", "path": "service/device/registry/api/src/main/java/org/eclipse/kapua/service/device/registry/DeviceMatchPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyOToyMVrOG7_olQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyOToyMVrOG7_olQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTc0OQ==", "bodyText": "Please fix", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465561749", "createdAt": "2020-08-05T08:29:21Z", "author": {"login": "Coduz"}, "path": "service/device/registry/api/src/main/java/org/eclipse/kapua/service/device/registry/DeviceMatchPredicate.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.device.registry;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import org.eclipse.kapua.commons.model.query.predicate.AbstractMatchPredicate;\n+\n+public class DeviceMatchPredicate<T> extends AbstractMatchPredicate<T> {\n+\n+    /**\n+     * Constructor.\n+     * <p>\n+     *\n+     * @param matchTerm\n+     * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg0NTY5OnYy", "diffSide": "RIGHT", "path": "service/device/registry/api/src/main/java/org/eclipse/kapua/service/device/registry/DeviceMatchPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyOTozN1rOG7_pMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODoyOTozN1rOG7_pMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2MTkwNg==", "bodyText": "Please remove <p>", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465561906", "createdAt": "2020-08-05T08:29:37Z", "author": {"login": "Coduz"}, "path": "service/device/registry/api/src/main/java/org/eclipse/kapua/service/device/registry/DeviceMatchPredicate.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.device.registry;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import org.eclipse.kapua.commons.model.query.predicate.AbstractMatchPredicate;\n+\n+public class DeviceMatchPredicate<T> extends AbstractMatchPredicate<T> {\n+\n+    /**\n+     * Constructor.\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzg2MDM2OnYy", "diffSide": "RIGHT", "path": "service/device/registry/api/src/main/java/org/eclipse/kapua/service/device/registry/DeviceMatchPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODozMzozNFrOG7_x8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODozMzozNFrOG7_x8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2NDE0NA==", "bodyText": "new ArrayList<> can be removed since Arrays.asList returns a List", "url": "https://github.com/eclipse/kapua/pull/2875#discussion_r465564144", "createdAt": "2020-08-05T08:33:34Z", "author": {"login": "Coduz"}, "path": "service/device/registry/api/src/main/java/org/eclipse/kapua/service/device/registry/DeviceMatchPredicate.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.device.registry;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+import org.eclipse.kapua.commons.model.query.predicate.AbstractMatchPredicate;\n+\n+public class DeviceMatchPredicate<T> extends AbstractMatchPredicate<T> {\n+\n+    /**\n+     * Constructor.\n+     * <p>\n+     *\n+     * @param matchTerm\n+     * @since 1.2.0\n+     */\n+    public DeviceMatchPredicate(T matchTerm) {\n+        this.attributeNames = new ArrayList<>(Arrays.asList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89ce594627293b00dbcb3438ed9a13c31dbd723"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1796, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}