{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NDY0MzY5", "number": 2976, "title": "Added Junit Tests for ResourceUtils", "bodyText": "Signed-off-by: Sonja sonja.matic@comtrade.com\nAdded Junit Tests for ResourceUtils\nRelated Issue\n/\nDescription of the solution adopted\n/\nScreenshots\n/", "createdAt": "2020-05-15T08:57:05Z", "url": "https://github.com/eclipse/kapua/pull/2976", "merged": true, "mergeCommit": {"oid": "7713af9a16cd724f0e15898876b2bba7c7f934aa"}, "closed": true, "closedAt": "2020-05-19T09:18:02Z", "author": {"login": "sonja-ct"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcicwN_gFqTQxMzQzODMwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABciw4v0AFqTQxNDI1NzEzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDM4MzA0", "url": "https://github.com/eclipse/kapua/pull/2976#pullrequestreview-413438304", "createdAt": "2020-05-18T09:48:50Z", "commit": {"oid": "a26ffcf70068c5ea95214ca687e53e3393796c9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0ODo1MFrOGWvtmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo0ODo1NFrOGWvtvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMzU3Ng==", "bodyText": "If they are not intended to match please use assertNotEquals.\nIf ResourceUtils.getResource(...) is meant to throw an Exception catch the Exception and do asserts on the type of Exception expected.", "url": "https://github.com/eclipse/kapua/pull/2976#discussion_r426503576", "createdAt": "2020-05-18T09:48:50Z", "author": {"login": "Coduz"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/util/ResourceUtilsTest.java", "diffHunk": "@@ -13,48 +13,112 @@\n \n import java.io.IOException;\n import java.io.Reader;\n+import java.lang.reflect.Constructor;\n import java.net.URL;\n+import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n \n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n import org.junit.Assert;\n+import org.junit.ComparisonFailure;\n import org.junit.Test;\n \n import com.google.common.io.CharStreams;\n import org.junit.experimental.categories.Category;\n \n @Category(JUnitTests.class)\n-public class ResourceUtilsTest {\n+public class ResourceUtilsTest extends Assert {\n \n-    /**\n-     * Test a successful resource resolve call and a successful read\n-     */\n     @Test\n-    public void testRead1() throws IOException {\n-        final URL url = ResourceUtils.getResource(\"test.properties\");\n-        Assert.assertNotNull(url);\n+    public void testConstructor() throws Exception {\n+        Constructor<ResourceUtils> resourceUtils = ResourceUtils.class.getDeclaredConstructor();\n+        resourceUtils.setAccessible(true);\n+        resourceUtils.newInstance();\n+    }\n \n-        try (final Reader reader = ResourceUtils.openAsReader(url, StandardCharsets.UTF_8)) {\n-            final String string = CharStreams.toString(reader);\n-            Assert.assertNotNull(string);\n-            Assert.assertFalse(string.isEmpty());\n+    @Test\n+    public void getResourceTest() {\n+        String resource = \"test.properties\";\n+        String noResource = \"file:/does-not-exist\";\n+\n+        ClassLoader classloaderTest = Thread.currentThread().getContextClassLoader();\n+        URL url = classloaderTest.getResource(resource);\n+\n+        //Positive test\n+        try {\n+            assertEquals(url, ResourceUtils.getResource(resource));\n+        } catch (AssertionError ex) {\n+            fail(\"AssertionError not expected\");\n+        }\n+\n+        //Negative test\n+        try {\n+            assertEquals(url, ResourceUtils.getResource(noResource));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a26ffcf70068c5ea95214ca687e53e3393796c9e"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMzYxMw==", "bodyText": "assertEquals has an overload method that accepts a message as a first argument. So fail invoked in the catch exception is not the correct usage of Assert stuff.\nPlease change this and also other similar usages", "url": "https://github.com/eclipse/kapua/pull/2976#discussion_r426503613", "createdAt": "2020-05-18T09:48:54Z", "author": {"login": "Coduz"}, "path": "commons/src/test/java/org/eclipse/kapua/commons/util/ResourceUtilsTest.java", "diffHunk": "@@ -13,48 +13,112 @@\n \n import java.io.IOException;\n import java.io.Reader;\n+import java.lang.reflect.Constructor;\n import java.net.URL;\n+import java.nio.charset.Charset;\n import java.nio.charset.StandardCharsets;\n \n import org.eclipse.kapua.qa.markers.junit.JUnitTests;\n import org.junit.Assert;\n+import org.junit.ComparisonFailure;\n import org.junit.Test;\n \n import com.google.common.io.CharStreams;\n import org.junit.experimental.categories.Category;\n \n @Category(JUnitTests.class)\n-public class ResourceUtilsTest {\n+public class ResourceUtilsTest extends Assert {\n \n-    /**\n-     * Test a successful resource resolve call and a successful read\n-     */\n     @Test\n-    public void testRead1() throws IOException {\n-        final URL url = ResourceUtils.getResource(\"test.properties\");\n-        Assert.assertNotNull(url);\n+    public void testConstructor() throws Exception {\n+        Constructor<ResourceUtils> resourceUtils = ResourceUtils.class.getDeclaredConstructor();\n+        resourceUtils.setAccessible(true);\n+        resourceUtils.newInstance();\n+    }\n \n-        try (final Reader reader = ResourceUtils.openAsReader(url, StandardCharsets.UTF_8)) {\n-            final String string = CharStreams.toString(reader);\n-            Assert.assertNotNull(string);\n-            Assert.assertFalse(string.isEmpty());\n+    @Test\n+    public void getResourceTest() {\n+        String resource = \"test.properties\";\n+        String noResource = \"file:/does-not-exist\";\n+\n+        ClassLoader classloaderTest = Thread.currentThread().getContextClassLoader();\n+        URL url = classloaderTest.getResource(resource);\n+\n+        //Positive test\n+        try {\n+            assertEquals(url, ResourceUtils.getResource(resource));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a26ffcf70068c5ea95214ca687e53e3393796c9e"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c01826b2634c71fa58d7505692b2ea428b002c1", "author": {"user": null}, "url": "https://github.com/eclipse/kapua/commit/4c01826b2634c71fa58d7505692b2ea428b002c1", "committedDate": "2020-05-18T13:28:39Z", "message": "Added Junit Tests for ResourceUtils\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a26ffcf70068c5ea95214ca687e53e3393796c9e", "author": {"user": null}, "url": "https://github.com/eclipse/kapua/commit/a26ffcf70068c5ea95214ca687e53e3393796c9e", "committedDate": "2020-05-15T08:53:57Z", "message": "Added Junit Tests for ResourceUtils\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>"}, "afterCommit": {"oid": "4c01826b2634c71fa58d7505692b2ea428b002c1", "author": {"user": null}, "url": "https://github.com/eclipse/kapua/commit/4c01826b2634c71fa58d7505692b2ea428b002c1", "committedDate": "2020-05-18T13:28:39Z", "message": "Added Junit Tests for ResourceUtils\n\nSigned-off-by: Sonja <sonja.matic@comtrade.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjQ2ODUw", "url": "https://github.com/eclipse/kapua/pull/2976#pullrequestreview-414246850", "createdAt": "2020-05-19T09:04:15Z", "commit": {"oid": "4c01826b2634c71fa58d7505692b2ea428b002c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjU3MTMz", "url": "https://github.com/eclipse/kapua/pull/2976#pullrequestreview-414257133", "createdAt": "2020-05-19T09:16:56Z", "commit": {"oid": "4c01826b2634c71fa58d7505692b2ea428b002c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 172, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}