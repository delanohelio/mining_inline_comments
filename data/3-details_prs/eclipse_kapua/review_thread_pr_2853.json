{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMjIwNjIy", "number": 2853, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTowM1rODew9qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTozN1rODew-XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTg2MDg4OnYy", "diffSide": "RIGHT", "path": "service/datastore/api/src/main/java/org/eclipse/kapua/service/datastore/model/query/MetricExistsPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTowM1rOFoFMNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTowM1rOFoFMNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MjQwNQ==", "bodyText": "@since 1.2.0", "url": "https://github.com/eclipse/kapua/pull/2853#discussion_r377572405", "createdAt": "2020-02-11T11:15:03Z", "author": {"login": "Coduz"}, "path": "service/datastore/api/src/main/java/org/eclipse/kapua/service/datastore/model/query/MetricExistsPredicate.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2011, 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.datastore.model.query;\n+\n+/**\n+ * Query predicate for matching messages with existing metrics\n+ *\n+ * @since 1.0.0\n+ */\n+public interface MetricExistsPredicate extends ExistsPredicate {\n+\n+    /**\n+     * Gets the metric type to search.\n+     * This is required because metric with the same name can have different types.\n+     *\n+     * @return The metric type\n+     * @since 1.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e693da37f471ad5d703c6f17b97e3d80402da12"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTg2MTEwOnYy", "diffSide": "RIGHT", "path": "service/datastore/api/src/main/java/org/eclipse/kapua/service/datastore/model/query/MetricExistsPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTowN1rOFoFMUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTowN1rOFoFMUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MjQzMg==", "bodyText": "@since 1.2.0", "url": "https://github.com/eclipse/kapua/pull/2853#discussion_r377572432", "createdAt": "2020-02-11T11:15:07Z", "author": {"login": "Coduz"}, "path": "service/datastore/api/src/main/java/org/eclipse/kapua/service/datastore/model/query/MetricExistsPredicate.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2011, 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.datastore.model.query;\n+\n+/**\n+ * Query predicate for matching messages with existing metrics\n+ *\n+ * @since 1.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e693da37f471ad5d703c6f17b97e3d80402da12"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTg2MTMxOnYy", "diffSide": "RIGHT", "path": "service/datastore/api/src/main/java/org/eclipse/kapua/service/datastore/model/query/MetricExistsPredicate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNToxMVrOFoFMcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNToxMVrOFoFMcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MjQ2Nw==", "bodyText": "@since 1.2.0", "url": "https://github.com/eclipse/kapua/pull/2853#discussion_r377572467", "createdAt": "2020-02-11T11:15:11Z", "author": {"login": "Coduz"}, "path": "service/datastore/api/src/main/java/org/eclipse/kapua/service/datastore/model/query/MetricExistsPredicate.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*******************************************************************************\n+ * Copyright (c) 2011, 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.datastore.model.query;\n+\n+/**\n+ * Query predicate for matching messages with existing metrics\n+ *\n+ * @since 1.0.0\n+ */\n+public interface MetricExistsPredicate extends ExistsPredicate {\n+\n+    /**\n+     * Gets the metric type to search.\n+     * This is required because metric with the same name can have different types.\n+     *\n+     * @return The metric type\n+     * @since 1.0.0\n+     */\n+    Class<?> getType();\n+\n+    /**\n+     * Sets the metric type so search.\n+     *\n+     * @param type The metric type to search.\n+     * @since 1.0.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e693da37f471ad5d703c6f17b97e3d80402da12"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTg2MjY4OnYy", "diffSide": "RIGHT", "path": "service/datastore/internal/src/main/java/org/eclipse/kapua/service/datastore/internal/model/query/MetricExistsPredicateImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTozN1rOFoFNPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToxNTozN1rOFoFNPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3MjY2OA==", "bodyText": "@since 1.2.0", "url": "https://github.com/eclipse/kapua/pull/2853#discussion_r377572668", "createdAt": "2020-02-11T11:15:37Z", "author": {"login": "Coduz"}, "path": "service/datastore/internal/src/main/java/org/eclipse/kapua/service/datastore/internal/model/query/MetricExistsPredicateImpl.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*******************************************************************************\n+ * Copyright (c) 2011, 2020 Eurotech and/or its affiliates and others\n+ *\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License v1.0\n+ * which accompanies this distribution, and is available at\n+ * http://www.eclipse.org/legal/epl-v10.html\n+ *\n+ * Contributors:\n+ *     Eurotech - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.kapua.service.datastore.internal.model.query;\n+\n+import org.eclipse.kapua.service.datastore.client.DatamodelMappingException;\n+import org.eclipse.kapua.service.datastore.internal.mediator.DatastoreUtils;\n+import org.eclipse.kapua.service.datastore.internal.schema.KeyValueEntry;\n+import org.eclipse.kapua.service.datastore.internal.schema.SchemaUtil;\n+import org.eclipse.kapua.service.datastore.model.query.MetricExistsPredicate;\n+\n+import com.fasterxml.jackson.databind.node.ObjectNode;\n+\n+/**\n+ * Implementation of query predicate for checking if a field exists\n+ *\n+ * @since 1.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e693da37f471ad5d703c6f17b97e3d80402da12"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1793, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}