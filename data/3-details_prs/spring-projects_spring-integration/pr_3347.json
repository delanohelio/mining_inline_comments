{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxNDgxOTk2", "number": 3347, "title": "GH-3340: IntegrationEvents  -add getSourceAsType()", "bodyText": "Resolves #3340\n\nadd common super-interface for MQTT components\nadd getConnectionInfo() so users can examine server URIs etc", "createdAt": "2020-07-17T21:45:14Z", "url": "https://github.com/spring-projects/spring-integration/pull/3347", "merged": true, "mergeCommit": {"oid": "40b0031e0f949a10a1befde45c8d6e5d2a523cc8"}, "closed": true, "closedAt": "2020-07-21T20:29:24Z", "author": {"login": "garyrussell"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc20ygEgFqTQ1MTc5Nzk0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3KskfgH2gAyNDUxNDgxOTk2OmM5ODZhM2Y3ZDU2YTUzNjU5MjQ5MjYxNDQ3ZjFlYzg5MWVhMWE1OTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzk3OTQ2", "url": "https://github.com/spring-projects/spring-integration/pull/3347#pullrequestreview-451797946", "createdAt": "2020-07-20T17:07:15Z", "commit": {"oid": "8b76bc84ac660e8345828c5453be0d40968bea4f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzowNzoxNVrOG0XaOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzowNzoxNVrOG0XaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2MjY4Mw==", "bodyText": "Yeah... I didn't mean to deprecate per-channel-adapter URL configuration.\nMy idea was just to deprecate a getUrl() since it not always reflect a connection reality.\nSince we have now that MqttConnectOptions getConnectionInfo() may be it is better to clone its instance and modify its serverURIs with the provided URL. So, we still can keep existing apps without respective modification for per-channel-adapter-client-factory.\nWDYT?", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r457562683", "createdAt": "2020-07-20T17:07:15Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/inbound/AbstractMqttMessageDrivenChannelAdapter.java", "diffHunk": "@@ -54,14 +55,35 @@\n \n \tprotected final Lock topicLock = new ReentrantLock(); // NOSONAR\n \n-\tpublic AbstractMqttMessageDrivenChannelAdapter(String url, String clientId, String... topic) {\n+\t/**\n+\t * Construct an instance with the provided properties.\n+\t * @param clientId the client id.\n+\t * @param topics the topics.\n+\t * @since 5.4.\n+\t */\n+\t@SuppressWarnings(\"deprecation\")\n+\tpublic AbstractMqttMessageDrivenChannelAdapter(String clientId, String... topics) {\n+\t\tthis(null, clientId, topics);\n+\t}\n+\n+\t/**\n+\t * Deprecated - do not use; implementations must maintain the url or other connection\n+\t * information.\n+\t * @deprecated in favor of\n+\t * {@link #AbstractMqttMessageDrivenChannelAdapter(String, String...)}.\n+\t * @param url the url.\n+\t * @param clientId the client id.\n+\t * @param topics the topics.\n+\t */\n+\t@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b76bc84ac660e8345828c5453be0d40968bea4f"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "473ccc983cfdb1f4b35aa4da8d88b248499ecd35", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/473ccc983cfdb1f4b35aa4da8d88b248499ecd35", "committedDate": "2020-07-21T14:02:45Z", "message": "GH-3340: IntegrationEvents  -add getSourceAsType()\n\nResolves https://github.com/spring-projects/spring-integration/issues/3340\n\n- add common super-interface for MQTT components\n- add `getConnectionInfo()` so users can examine server URIs etc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69d0db064cd9e8f3c7389650fef6fa5d33a13340", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/69d0db064cd9e8f3c7389650fef6fa5d33a13340", "committedDate": "2020-07-21T14:02:45Z", "message": "Reinstate per-adapter URIs - support multiple"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28b8958ee48849cb917b342fd2113192f3458c92", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/28b8958ee48849cb917b342fd2113192f3458c92", "committedDate": "2020-07-21T14:02:18Z", "message": "Reinstate per-adapter URIs - support multiple"}, "afterCommit": {"oid": "69d0db064cd9e8f3c7389650fef6fa5d33a13340", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/69d0db064cd9e8f3c7389650fef6fa5d33a13340", "committedDate": "2020-07-21T14:02:45Z", "message": "Reinstate per-adapter URIs - support multiple"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNTY5NjAz", "url": "https://github.com/spring-projects/spring-integration/pull/3347#pullrequestreview-452569603", "createdAt": "2020-07-21T15:22:18Z", "commit": {"oid": "69d0db064cd9e8f3c7389650fef6fa5d33a13340"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNToyMjoxOFrOG09PXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNToyNzo1N1rOG09f0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE4MjQ5NQ==", "bodyText": "M-m-m. May be this delegate should be just \"read-only\"?\nAnd all the setters should throw UnsupportedOperationException instead of delegation?", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458182495", "createdAt": "2020-07-21T15:22:18Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/core/DefaultMqttPahoClientFactory.java", "diffHunk": "@@ -95,9 +105,270 @@ public void setConnectionOptions(MqttConnectOptions options) {\n \n \t@Override\n \tpublic MqttConnectOptions getConnectionOptions() {\n-\t\treturn this.options;\n+\t\tif (this.serverUris == null) {\n+\t\t\treturn this.options;\n+\t\t}\n+\t\telse {\n+\t\t\treturn new ExtendedOptions();\n+\t\t}\n \t}\n \n+\t@Override\n+\tpublic void setServerUris(List<String> serverUris) {\n+\t\tthis.serverUris = serverUris;\n+\t}\n+\n+\tprivate class ExtendedOptions extends MqttConnectOptions {\n+\n+\t\t@Override\n+\t\tpublic char[] getPassword() {\n+\t\t\treturn DefaultMqttPahoClientFactory.this.options.getPassword();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setPassword(char[] password) {\n+\t\t\tDefaultMqttPahoClientFactory.this.options.setPassword(password);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69d0db064cd9e8f3c7389650fef6fa5d33a13340"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE4NjcwNg==", "bodyText": "I wouldn't do this. It is mutation of an external shared factory.\nWhat drove you to drop that url-based configuration?\nI thought we just need to have a consistency on the read side...", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458186706", "createdAt": "2020-07-21T15:27:57Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/inbound/MqttPahoMessageDrivenChannelAdapter.java", "diffHunk": "@@ -89,42 +94,91 @@\n \tprivate ApplicationEventPublisher applicationEventPublisher;\n \n \t/**\n-\t * Use this constructor for a single url (although it may be overridden\n-\t * if the server URI(s) are provided by the {@link MqttConnectOptions#getServerURIs()}\n-\t * provided by the {@link MqttPahoClientFactory}).\n+\t * Use this constructor for a single url (although it may be overridden if the server\n+\t * URI(s) are provided by the {@link MqttConnectOptions#getServerURIs()} provided by\n+\t * the {@link MqttPahoClientFactory}).\n+\t * @deprecated in favor of\n+\t * {@link #MqttPahoMessageDrivenChannelAdapter(List, String, MqttPahoClientFactory, String...)}\n+\t * - set the url in the client factory connection options.\n \t * @param url the URL.\n \t * @param clientId The client id.\n \t * @param clientFactory The client factory.\n \t * @param topic The topic(s).\n \t */\n+\t@Deprecated\n+\t@SuppressWarnings(\"deprecation\")\n \tpublic MqttPahoMessageDrivenChannelAdapter(String url, String clientId, MqttPahoClientFactory clientFactory,\n \t\t\tString... topic) {\n \t\tsuper(url, clientId, topic);\n \t\tthis.clientFactory = clientFactory;\n \t}\n \n \t/**\n-\t * Use this constructor if the server URI(s) are provided by the {@link MqttConnectOptions#getServerURIs()}\n-\t * provided by the {@link MqttPahoClientFactory}.\n+\t * Use this constructor with a list of server URIs, which will take precedence over\n+\t * the factory's connection options' server URIs.\n+\t * @param serverUris the server URIs.\n+\t * @param clientId The client id.\n+\t * @param clientFactory The client factory.\n+\t * @param topic The topic(s).\n+\t * @since 5.4\n+\t */\n+\tpublic MqttPahoMessageDrivenChannelAdapter(List<String> serverUris, String clientId,\n+\t\t\tMqttPahoClientFactory clientFactory, String... topic) {\n+\t\tsuper(clientId, topic);\n+\t\tthis.clientFactory = clientFactory;\n+\t\tthis.clientFactory.setServerUris(serverUris);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69d0db064cd9e8f3c7389650fef6fa5d33a13340"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/9f1153b761f2478f6e0dacbabd8b76f2485a7dc8", "committedDate": "2020-07-21T17:46:50Z", "message": "Restore single URL per adapter."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1b3671a71d69edc8b43ab984f2f1b4ce7f01a04", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/d1b3671a71d69edc8b43ab984f2f1b4ce7f01a04", "committedDate": "2020-07-21T17:44:26Z", "message": "Restore single URL per adapter."}, "afterCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/9f1153b761f2478f6e0dacbabd8b76f2485a7dc8", "committedDate": "2020-07-21T17:46:50Z", "message": "Restore single URL per adapter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNzAyMzg4", "url": "https://github.com/spring-projects/spring-integration/pull/3347#pullrequestreview-452702388", "createdAt": "2020-07-21T18:00:56Z", "commit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODowMDo1NlrOG1Dp-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODowNjoxNlrOG1D19g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4NzYxMQ==", "bodyText": "Better to extract local variable for URL to avoid noise from Sonar that we defer NPE calling the method several times.", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458287611", "createdAt": "2020-07-21T18:00:56Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/inbound/MqttPahoMessageDrivenChannelAdapter.java", "diffHunk": "@@ -174,6 +183,16 @@ public void setApplicationEventPublisher(ApplicationEventPublisher applicationEv\n \t\tthis.applicationEventPublisher = applicationEventPublisher; // NOSONAR (inconsistent synchronization)\n \t}\n \n+\t@Override\n+\tpublic MqttConnectOptions getConnectionInfo() {\n+\t\tMqttConnectOptions options = this.clientFactory.getConnectionOptions();\n+\t\tif (options.getServerURIs() == null && getUrl() != null) {\n+\t\t\toptions = MqttUtils.cloneConnectOptions(options);\n+\t\t\toptions.setServerURIs(new String[] { getUrl() });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4Nzc2Mg==", "bodyText": "I think there is no deprecations any more.", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458287762", "createdAt": "2020-07-21T18:01:10Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/inbound/MqttPahoMessageDrivenChannelAdapter.java", "diffHunk": "@@ -258,6 +277,7 @@ public void removeTopic(String... topic) {\n \t\t}\n \t}\n \n+\t@SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4ODE5NA==", "bodyText": "Looks like this one is out of use", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458288194", "createdAt": "2020-07-21T18:01:53Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/inbound/MqttPahoMessageDrivenChannelAdapter.java", "diffHunk": "@@ -68,6 +72,8 @@\n \n \tprivate final MqttPahoClientFactory clientFactory;\n \n+\tprivate Supplier<List<String>> uriSupplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4ODQ4MQ==", "bodyText": "I don't see deprecations any more", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458288481", "createdAt": "2020-07-21T18:02:22Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/outbound/MqttPahoMessageHandler.java", "diffHunk": "@@ -92,13 +94,14 @@ public MqttPahoMessageHandler(String url, String clientId, MqttPahoClientFactory\n \t * @param clientFactory The client factory.\n \t * @since 4.1\n \t */\n+\t@SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4ODk0Mw==", "bodyText": "Looks like duplication for this ifs", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458288943", "createdAt": "2020-07-21T18:03:12Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/outbound/MqttPahoMessageHandler.java", "diffHunk": "@@ -154,6 +157,19 @@ public void setApplicationEventPublisher(ApplicationEventPublisher applicationEv\n \t\tthis.applicationEventPublisher = applicationEventPublisher;\n \t}\n \n+\t@Override\n+\tpublic MqttConnectOptions getConnectionInfo() {\n+\t\tMqttConnectOptions options = this.clientFactory.getConnectionOptions();\n+\t\tif (options.getServerURIs() == null && getUrl() != null) {\n+\t\t\tif (options.getServerURIs() == null && getUrl() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI4OTYwNg==", "bodyText": "Why does password have a special treatment?", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458289606", "createdAt": "2020-07-21T18:04:21Z", "author": {"login": "artembilan"}, "path": "spring-integration-mqtt/src/main/java/org/springframework/integration/mqtt/support/MqttUtils.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.mqtt.support;\n+\n+import org.eclipse.paho.client.mqttv3.MqttConnectOptions;\n+\n+import org.springframework.beans.BeanUtils;\n+\n+/**\n+ * MQTT Utilities\n+ *\n+ * @author Gary Russell\n+ * @since 5.4\n+ *\n+ */\n+public final class MqttUtils {\n+\n+\tprivate MqttUtils() {\n+\t}\n+\n+\t/**\n+\t * Clone the {@link MqttConnectOptions}, except the serverUris.\n+\t * @param options the options to clone.\n+\t * @return the clone.\n+\t */\n+\tpublic static MqttConnectOptions cloneConnectOptions(MqttConnectOptions options) {\n+\t\tMqttConnectOptions options2 = new MqttConnectOptions();\n+\t\tBeanUtils.copyProperties(options, options2, \"password\", \"serverURIs\");\n+\t\tif (options.getPassword() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5MDY3OA==", "bodyText": "Would be great to mention such a type requirement on the MqttIntegrationEvent class JavaDocs.", "url": "https://github.com/spring-projects/spring-integration/pull/3347#discussion_r458290678", "createdAt": "2020-07-21T18:06:16Z", "author": {"login": "artembilan"}, "path": "src/reference/asciidoc/mqtt.adoc", "diffHunk": "@@ -403,3 +403,14 @@ Certain application events are published by the adapters.\n * `MqttSubscribedEvent` - published by the inbound adapter after subscribing to the topics.\n \n These events can be received by an `ApplicationListener<MqttIntegrationEvent>` or with an `@EventListener` method.\n+\n+To determine the source of an event, use the following; you can check the bean name and/or the connect options (to access the server URIs etc).\n+\n+====\n+[source, java]\n+----\n+MqttPahoComponent source = event.getSourceAsType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1153b761f2478f6e0dacbabd8b76f2485a7dc8"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c986a3f7d56a53659249261447f1ec891ea1a597", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/c986a3f7d56a53659249261447f1ec891ea1a597", "committedDate": "2020-07-21T18:39:39Z", "message": "Code cleanup for previous commit."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 96, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}