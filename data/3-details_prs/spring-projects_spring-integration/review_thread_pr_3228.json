{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0OTA0Nzcz", "number": 3228, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1MDoyMFrODsMHNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1NToyOFrODsMN0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjYyMzkwOnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1MDoyMVrOF898zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1MDoyMVrOF898zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3Mzg3MQ==", "bodyText": "Since alone is ok; Starting needs with.", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399473871", "createdAt": "2020-03-27T18:50:21Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "diffHunk": "@@ -37,10 +41,12 @@\n  * factory to get an instance of Jackson JSON-processor\n  * if jackson-databind lib is present on the classpath. Any other {@linkplain JsonObjectMapper}\n  * implementation can be provided.\n- * <p>Since version 3.0, you can omit the target class and the target type can be\n+ * <p> Starting version 3.0, you can omit the target class and the target type can be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacf2f3194d6301ee44debd317a30f225dfb09ac"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjYyNDc0OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1MDozOVrOF899XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1MDozOVrOF899XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NDAxMg==", "bodyText": "with", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399474012", "createdAt": "2020-03-27T18:50:39Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "diffHunk": "@@ -37,10 +41,12 @@\n  * factory to get an instance of Jackson JSON-processor\n  * if jackson-databind lib is present on the classpath. Any other {@linkplain JsonObjectMapper}\n  * implementation can be provided.\n- * <p>Since version 3.0, you can omit the target class and the target type can be\n+ * <p> Starting version 3.0, you can omit the target class and the target type can be\n  * determined by the {@link JsonHeaders} type entries - including the contents of a\n  * one-level container or map type.\n- * <p>The type headers can be classes or fully-qualified class names.\n+ * <p> The type headers can be classes or fully-qualified class names.\n+ * <p> Starting version 5.2.6, a SpEL expression option is provided to let to build a target", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacf2f3194d6301ee44debd317a30f225dfb09ac"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjYzODM2OnYy", "diffSide": "RIGHT", "path": "src/reference/asciidoc/transformer.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1NDo0MFrOF8-FhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1NDo0MFrOF8-FhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjEwMA==", "bodyText": "against the request message.", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399476100", "createdAt": "2020-03-27T18:54:40Z", "author": {"login": "garyrussell"}, "path": "src/reference/asciidoc/transformer.adoc", "diffHunk": "@@ -449,6 +449,11 @@ Starting with version 5.2, the `JsonToObjectTransformer` can be configured with\n Also this component now consults request message headers first for the presence of the `JsonHeaders.RESOLVABLE_TYPE` or `JsonHeaders.TYPE_ID` and falls back to the configured type otherwise.\n The `ObjectToJsonTransformer` now also populates a `JsonHeaders.RESOLVABLE_TYPE` header based on the request message payload for any possible downstream scenarios.\n \n+Starting with version 5.2.6, the `JsonToObjectTransformer` can be supplied with a `valueTypeExpression` to resolve a `ResolvableType` for the payload to convert from JSON at runtime against request message.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacf2f3194d6301ee44debd317a30f225dfb09ac"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjY0MDgwOnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1NToyOFrOF8-HDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1NToyOFrOF8-HDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjQ5Mw==", "bodyText": "from the request message", "url": "https://github.com/spring-projects/spring-integration/pull/3228#discussion_r399476493", "createdAt": "2020-03-27T18:55:28Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/json/JsonToObjectTransformer.java", "diffHunk": "@@ -144,12 +191,31 @@ protected Object doTransform(Message<?> message) {\n \t}\n \n \t@Nullable\n-\tprivate ResolvableType obtainResolvableTypeFromHeadersIfAny(MessageHeaders headers) {\n+\tprivate ResolvableType obtainResolvableType(Message<?> message) {\n+\t\ttry {\n+\t\t\treturn this.valueTypeExpression.getValue(this.evaluationContext, message, ResolvableType.class);\n+\t\t}\n+\t\tcatch (Exception ex) {\n+\t\t\tif (ex.getCause() instanceof ClassNotFoundException) {\n+\t\t\t\tlogger.info(\"Cannot build a ResolvableType from a request message '\" + message +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacf2f3194d6301ee44debd317a30f225dfb09ac"}, "originalPosition": 124}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2011, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}