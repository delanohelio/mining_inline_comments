{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTYzODUy", "number": 3232, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODoyNVrODtSgdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODoyNVrODtSgdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODE1NzM0OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/handler/support/MessagingMethodInvokerHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODoyNVrOF-oTaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODoyNVrOF-oTaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNjM2MQ==", "bodyText": "Any chances that we log special info that Pausable methods are not considered as candidates?", "url": "https://github.com/spring-projects/spring-integration/pull/3232#discussion_r401216361", "createdAt": "2020-03-31T21:08:25Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/handler/support/MessagingMethodInvokerHelper.java", "diffHunk": "@@ -818,14 +818,19 @@ private HandlerMethod obtainHandlerMethodIfAny(Method methodToProcess) {\n \t}\n \n \tprivate boolean isMethodEligible(Method methodToProcess) {\n-\t\treturn !(methodToProcess.isBridge() || // NOSONAR boolean complexity\n+\t\treturn (!(methodToProcess.isBridge() || // NOSONAR boolean complexity\n \t\t\t\tisMethodDefinedOnObjectClass(methodToProcess) ||\n \t\t\t\tmethodToProcess.getDeclaringClass().equals(Proxy.class) ||\n \t\t\t\t(this.requiresReply && void.class.equals(methodToProcess.getReturnType())) ||\n-\t\t\t\t(this.methodName != null && !this.methodName.equals(methodToProcess.getName())) ||\n-\t\t\t\t(this.methodName == null &&\n-\t\t\t\t\t\tObjectUtils.containsElement(new String[] { \"start\", \"stop\", \"isRunning\" },\n-\t\t\t\t\t\t\t\tmethodToProcess.getName())));\n+\t\t\t\t(this.methodName != null && !this.methodName.equals(methodToProcess.getName()))))\n+\t\t\t&& !isPausableMethod(methodToProcess);\n+\t}\n+\n+\tprivate boolean isPausableMethod(Method pausableMethod) {\n+\t\tClass<?> declaringClass = pausableMethod.getDeclaringClass();\n+\t\treturn (Pausable.class.isAssignableFrom(declaringClass) || Lifecycle.class.isAssignableFrom(declaringClass))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2017, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}