{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTcwMDI4", "number": 3190, "title": "GH-3182: Properly reset bean in the MockIntCtx", "bodyText": "Fixes #3182\nThe MockIntegrationContext.resetBeans() doesn't really restore a state\nof endpoint beans: the handle/source is applied only after start for that endpoint\n\nStop endpoints in the MockIntegrationContext.resetBeans() is they are running currently\nStart them back only if their autoStartup == true\nClear only those beans which names are provided for the resetBeans()\n\nCherry-pick to 5.2.x", "createdAt": "2020-02-20T20:55:10Z", "url": "https://github.com/spring-projects/spring-integration/pull/3190", "merged": true, "mergeCommit": {"oid": "b38c9e16e804d0dd920c01432de3f5d1a04ff1e7"}, "closed": true, "closedAt": "2020-02-21T13:49:46Z", "author": {"login": "artembilan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGRhwUgH2gAyMzc3OTcwMDI4OmU2OWUwMzhjMTkzMzliZmJjNTRhZjE0ZGJiYjQxNjNjMTRjNTFmOWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGjGOJAFqTM2Mjc5MDc0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e69e038c19339bfbc54af14dbbb4163c14c51f9c", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/e69e038c19339bfbc54af14dbbb4163c14c51f9c", "committedDate": "2020-02-20T20:54:53Z", "message": "GH-3182: Properly reset bean in the MockIntCtx\n\nFixes https://github.com/spring-projects/spring-integration/issues/3182\n\nThe `MockIntegrationContext.resetBeans()` doesn't really restore a state\nof endpoint beans: the handle/source is applied only after start for that endpoint\n\n* Stop endpoints in the `MockIntegrationContext.resetBeans()` is they are running currently\n* Start them back only if their `autoStartup == true`\n* Clear only those beans which names are provided for the `resetBeans()`\n\n**Cherry-pick to 5.2.x**"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMjQzMTEy", "url": "https://github.com/spring-projects/spring-integration/pull/3190#pullrequestreview-362243112", "createdAt": "2020-02-20T21:22:43Z", "commit": {"oid": "e69e038c19339bfbc54af14dbbb4163c14c51f9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMToyMjo0M1rOFsjm4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMToyMjo0M1rOFsjm4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI2NTA1OQ==", "bodyText": "Don't we need a test for this \"partial\" reset use case?", "url": "https://github.com/spring-projects/spring-integration/pull/3190#discussion_r382265059", "createdAt": "2020-02-20T21:22:43Z", "author": {"login": "garyrussell"}, "path": "spring-integration-test/src/main/java/org/springframework/integration/test/context/MockIntegrationContext.java", "diffHunk": "@@ -108,9 +114,19 @@ else if (endpoint instanceof ReactiveStreamsConsumer) {\n \t\t\t\t\telse if (endpoint instanceof IntegrationConsumer) {\n \t\t\t\t\t\tdirectFieldAccessor.setPropertyValue(HANDLER, e.getValue());\n \t\t\t\t\t}\n+\t\t\t\t\tif (lifecycle != null && lifecycle.isAutoStartup()) {\n+\t\t\t\t\t\tlifecycle.start();\n+\t\t\t\t\t}\n \t\t\t\t});\n \n-\t\tthis.beans.clear();\n+\t\tif (!ObjectUtils.isEmpty(beanNames)) {\n+\t\t\tfor (String name : beanNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69e038c19339bfbc54af14dbbb4163c14c51f9c"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91418746398c8c94d8ae613869c67d468bd0c631", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/91418746398c8c94d8ae613869c67d468bd0c631", "committedDate": "2020-02-20T22:32:59Z", "message": "* Ensure that only provided beans are reset"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzkwNzQ1", "url": "https://github.com/spring-projects/spring-integration/pull/3190#pullrequestreview-362790745", "createdAt": "2020-02-21T17:23:06Z", "commit": {"oid": "e69e038c19339bfbc54af14dbbb4163c14c51f9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoyMzowNlrOFs-mjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzoyMzowNlrOFs-mjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNzM0MA==", "bodyText": "Doesn't this have potential to break existing tests?\nMaybe this just matters for constructed examples. But I could imagine something like this:\n@BeforeClass\nvoid init() {\n  nonAutostartupHandler.start();\n}\n\n@After \nvoid cleanup() {\n  mockIntegrationContext.reset()\n}\n\n@Test\nvoid t1() {\n  // do something with handler\n}\n\n@Test \nvoid t2() {\n  // expect handler to be still running\n}\n\nAdmittedly the @BeforeClass is somewhat artificial. But I could see a  handler being manually started as part of context initialization.\nI'm sorry for not contributing a fix myself, I had a pretty busy week at work.", "url": "https://github.com/spring-projects/spring-integration/pull/3190#discussion_r382707340", "createdAt": "2020-02-21T17:23:06Z", "author": {"login": "hgarus"}, "path": "spring-integration-test/src/main/java/org/springframework/integration/test/context/MockIntegrationContext.java", "diffHunk": "@@ -108,9 +114,19 @@ else if (endpoint instanceof ReactiveStreamsConsumer) {\n \t\t\t\t\telse if (endpoint instanceof IntegrationConsumer) {\n \t\t\t\t\t\tdirectFieldAccessor.setPropertyValue(HANDLER, e.getValue());\n \t\t\t\t\t}\n+\t\t\t\t\tif (lifecycle != null && lifecycle.isAutoStartup()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69e038c19339bfbc54af14dbbb4163c14c51f9c"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 179, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}