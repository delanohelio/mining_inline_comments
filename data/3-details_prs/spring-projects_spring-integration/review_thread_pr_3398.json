{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDA4MDA5", "number": 3398, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1NToxNVrOEp4gOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxODowNjo0MFrOEp5x-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzUyODI3OnYy", "diffSide": "RIGHT", "path": "src/reference/asciidoc/metrics.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1NToxNVrOHb0x7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjo1NToxNVrOHb0x7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkzODM0OQ==", "bodyText": "Any chances to have some sample how to disable metrics for example for myChannel bean?", "url": "https://github.com/spring-projects/spring-integration/pull/3398#discussion_r498938349", "createdAt": "2020-10-02T16:55:15Z", "author": {"login": "artembilan"}, "path": "src/reference/asciidoc/metrics.adoc", "diffHunk": "@@ -118,3 +120,11 @@ and\n * `tag`: `type:channel`\n * `tag`: `name:<componentName>`\n * `description`: `The remaining capacity of the queue channel`\n+\n+===== Disabling Meters\n+\n+With the <<legacy-metrics>> (which have now been removed), you could specify which integration components would collect metrics.\n+By default, all meters are registered when first used.\n+Now, with Micrometer, you can add `MeterFilter` s to the `MeterRegistry` to prevent some or all from being registered.\n+You can filter out (deny) meters by any of the properties provided, `name`, `tag`, etc.\n+See https://micrometer.io/docs/concepts#_meter_filters[Meter Filters] in the Micrometer documentation for more information.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cac3192972617ffdcebff020683d15c4fe1d1f8"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzczNzUzOnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/test/java/org/springframework/integration/support/management/micrometer/MicrometerMetricsTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxODowNjo0MFrOHb22rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxODowNjo0MFrOHb22rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3MjMzNA==", "bodyText": "Probably writing this test you were going to add something to docs.\nAren't you?", "url": "https://github.com/spring-projects/spring-integration/pull/3398#discussion_r498972334", "createdAt": "2020-10-02T18:06:40Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/test/java/org/springframework/integration/support/management/micrometer/MicrometerMetricsTests.java", "diffHunk": "@@ -264,7 +275,11 @@ public void testMicrometerMetrics() {\n \n \t\t@Bean\n \t\tpublic static MeterRegistry meterRegistry() {\n-\t\t\treturn new SimpleMeterRegistry();\n+\t\t\tSimpleMeterRegistry registry = new SimpleMeterRegistry();\n+\t\t\tregistry.config().meterFilter(MeterFilter.deny(id ->\n+\t\t\t\t\t\"channel\".equals(id.getTag(\"type\")) &&\n+\t\t\t\t\t\"noMeters\".equals(id.getTag(\"name\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e60ca6362a556ce141fb31a3cf01a7bd580b90"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1919, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}