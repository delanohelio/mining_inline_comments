{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTc2Njky", "number": 3236, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyNjozNlrODtsYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMTo0Mjo1N1rODtt4pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjM5NjM2OnYy", "diffSide": "RIGHT", "path": "spring-integration-ip/src/main/resources/org/springframework/integration/ip/config/spring-integration-ip.xsd", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyNjozNlrOF_RVMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDoyNjozNlrOF_RVMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg4ODU2Mg==", "bodyText": "Would you mind to fix an expresssion typo in this file meanwhile?", "url": "https://github.com/spring-projects/spring-integration/pull/3236#discussion_r401888562", "createdAt": "2020-04-01T20:26:36Z", "author": {"login": "artembilan"}, "path": "spring-integration-ip/src/main/resources/org/springframework/integration/ip/config/spring-integration-ip.xsd", "diffHunk": "@@ -488,6 +488,16 @@\n \t\t\t\t\t</xsd:documentation>\n \t\t\t\t</xsd:annotation>\n \t\t\t</xsd:attribute>\n+\t\t\t<xsd:attribute name=\"async\" default=\"false\">\n+\t\t\t\t<xsd:annotation>\n+\t\t\t\t\t<xsd:documentation>\n+\t\t\t\t\t\tSet to true for async request/reply - see reference manual.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c522f5af581197e679dc338193abe8b5c35686d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQ2MjM1OnYy", "diffSide": "RIGHT", "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpOutboundGateway.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDo0NjozNlrOF_R95w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDo0NjozNlrOF_R95w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5ODk4Mw==", "bodyText": "Can we obtain isAsync() as local variable only once in the begging of method?\nKinda to avoid a race condition when it could be changed in between at runtime...", "url": "https://github.com/spring-projects/spring-integration/pull/3236#discussion_r401898983", "createdAt": "2020-04-01T20:46:36Z", "author": {"login": "artembilan"}, "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpOutboundGateway.java", "diffHunk": "@@ -172,7 +196,9 @@ protected Object handleRequestMessage(Message<?> requestMessage) {\n \t\t\tthrow new MessageHandlingException(requestMessage, \"Interrupted in the [\" + this + ']', e);\n \t\t}\n \t\tfinally {\n-\t\t\tcleanUp(haveSemaphore, connection, connectionId);\n+\t\t\tif (!isAsync()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c522f5af581197e679dc338193abe8b5c35686d"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjQ3MzI2OnYy", "diffSide": "RIGHT", "path": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/TcpOutboundGatewayTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDo0OTo1NVrOF_SE0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDo0OTo1NVrOF_SE0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkwMDc1NA==", "bodyText": "Can we make this test class as JUnit 5 since we are here already?", "url": "https://github.com/spring-projects/spring-integration/pull/3236#discussion_r401900754", "createdAt": "2020-04-01T20:49:55Z", "author": {"login": "artembilan"}, "path": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/TcpOutboundGatewayTests.java", "diffHunk": "@@ -98,8 +105,8 @@\n \tpublic static LongRunningIntegrationTest longTests = new LongRunningIntegrationTest();\n \n \t@Rule\n-\tpublic Log4j2LevelAdjuster adjuster = Log4j2LevelAdjuster.trace();\n-\n+\tpublic Log4j2LevelAdjuster adjuster = Log4j2LevelAdjuster.trace()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c522f5af581197e679dc338193abe8b5c35686d"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjY0Mjk1OnYy", "diffSide": "LEFT", "path": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/TcpOutboundGatewayTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMTo0Mjo1N1rOF_Ttiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMTo0Mjo1N1rOF_Ttiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyNzU2Mw==", "bodyText": "Just for info: IDEA doesn't mark such a public modifier as redundant.\nSo, we don't need to bother ourselves to remove them any more \ud83d\ude04\n(If it doesn't annoy you, of course)", "url": "https://github.com/spring-projects/spring-integration/pull/3236#discussion_r401927563", "createdAt": "2020-04-01T21:42:57Z", "author": {"login": "artembilan"}, "path": "spring-integration-ip/src/test/java/org/springframework/integration/ip/tcp/TcpOutboundGatewayTests.java", "diffHunk": "@@ -1011,7 +1002,7 @@ public void postSend(Message<?> message, MessageChannel channel, boolean sent) {\n \t}\n \n \t@Test\n-\tpublic void testAsyncTimeout() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530cbc46521b67332ee7a00f34a53748052c0721"}, "originalPosition": 199}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2023, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}