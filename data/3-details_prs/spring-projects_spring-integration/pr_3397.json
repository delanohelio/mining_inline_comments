{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2OTk0NDk2", "number": 3397, "title": "GH-3395: Fix XML expression default for ARFOGateway", "bodyText": "Resolves #3395\nOutbound remote file gateway parser requires expression even though some\ncommands don't need or use it.\nTo avoid adding a factory bean, set a default value in the schema and interpret\nthat default as needed, depending on the command.", "createdAt": "2020-10-02T15:55:04Z", "url": "https://github.com/spring-projects/spring-integration/pull/3397", "merged": true, "mergeCommit": {"oid": "cbe37e8942db394d5edd1e60b350f2a3c6e2c10b"}, "closed": true, "closedAt": "2020-10-02T18:31:54Z", "author": {"login": "garyrussell"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOoBJlAH2gAyNDk2OTk0NDk2OjExNDQwNTc2ZjhjMjZjNzVkNWQ1ZGJjZTlmZTllZDk1ZjY1NTUwM2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOqHLtAH2gAyNDk2OTk0NDk2OjQ2OWU4MTc1MGU5MjFiODk5ZjdiZmJmMjVkNTIzNGFiMjViODlmNzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "11440576f8c26c75d5d5dbce9fe9ed95f655503b", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/11440576f8c26c75d5d5dbce9fe9ed95f655503b", "committedDate": "2020-10-02T15:49:38Z", "message": "GH-3395: Fix XML expression default for ARFOGateway\n\nResolves https://github.com/spring-projects/spring-integration/issues/3395\n\nOutbound remote file gateway parser requires `expression` even though some\ncommands don't need or use it.\n\nTo avoid adding a factory bean, set a default value in the schema and interpret\nthat default as needed, depending on the command."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMjgyOTkw", "url": "https://github.com/spring-projects/spring-integration/pull/3397#pullrequestreview-501282990", "createdAt": "2020-10-02T16:33:25Z", "commit": {"oid": "11440576f8c26c75d5d5dbce9fe9ed95f655503b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjozMzoyNlrOHb0Igg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjozMzoyNlrOHb0Igg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNzc0Ng==", "bodyText": "Why can't we set it to null from the parser and override it to \"payload\" if needed according command logic?", "url": "https://github.com/spring-projects/spring-integration/pull/3397#discussion_r498927746", "createdAt": "2020-10-02T16:33:26Z", "author": {"login": "artembilan"}, "path": "spring-integration-file/src/main/java/org/springframework/integration/file/remote/gateway/AbstractRemoteFileOutboundGateway.java", "diffHunk": "@@ -187,21 +187,27 @@ public AbstractRemoteFileOutboundGateway(RemoteFileTemplate<F> remoteFileTemplat\n \t * 'get' etc), and an expression to determine the filename.\n \t * @param remoteFileTemplate the remote file template.\n \t * @param command the command.\n-\t * @param expression the filename expression.\n+\t * @param expressionArg the filename expression.\n \t */\n \tpublic AbstractRemoteFileOutboundGateway(RemoteFileTemplate<F> remoteFileTemplate, Command command,\n-\t\t\t@Nullable String expression) {\n+\t\t\t@Nullable String expressionArg) {\n \n \t\tAssert.notNull(remoteFileTemplate, \"'remoteFileTemplate' cannot be null\");\n \t\tthis.remoteFileTemplate = remoteFileTemplate;\n \t\tthis.command = command;\n+\t\tString expression = expressionArg;\n+\t\tboolean noExpressionNeeded = Command.LS.equals(this.command)\n+\t\t\t\t|| Command.NLST.equals(this.command)\n+\t\t\t\t|| Command.PUT.equals(this.command)\n+\t\t\t\t|| Command.MPUT.equals(this.command);\n+\t\tif (\"++xsd.expression.default++\".equals(expression)) {\n+\t\t\texpression = noExpressionNeeded ? null : \"payload\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11440576f8c26c75d5d5dbce9fe9ed95f655503b"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbafac4eb1b08f37a54a8488c3336750f5149ee1", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/cbafac4eb1b08f37a54a8488c3336750f5149ee1", "committedDate": "2020-10-02T17:25:07Z", "message": "Move detection of default expression to parser."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMzIwNTg0", "url": "https://github.com/spring-projects/spring-integration/pull/3397#pullrequestreview-501320584", "createdAt": "2020-10-02T17:31:10Z", "commit": {"oid": "cbafac4eb1b08f37a54a8488c3336750f5149ee1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzozMToxMFrOHb111Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzozMToxMFrOHb111Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk1NTczMw==", "bodyText": "Why just this not enough?\nI mean we just call builder.addConstructorArgValue(element.getAttribute(EXPRESSION_ATTRIBUTE));.\nNothing more.\nWhat am I missing with null propagation and defering logic into the AbstractRemoteFileOutboundGateway.\nProbably that point is that expression was not optional in the past, so we left that if (element.hasAttribute(EXPRESSION_ATTRIBUTE)) { logic in the parser.\nBut it turns out that we just need to always call builder.addConstructorArgValue(expression);, so we got the proper ctor resolution even if expression is null.", "url": "https://github.com/spring-projects/spring-integration/pull/3397#discussion_r498955733", "createdAt": "2020-10-02T17:31:10Z", "author": {"login": "artembilan"}, "path": "spring-integration-file/src/main/java/org/springframework/integration/file/config/AbstractRemoteFileOutboundGatewayParser.java", "diffHunk": "@@ -59,7 +59,11 @@ protected BeanDefinitionBuilder parseHandler(Element element, ParserContext pars\n \t\telse {\n \t\t\tbuilder.addConstructorArgValue(element.getAttribute(\"command\"));\n \t\t\tif (element.hasAttribute(EXPRESSION_ATTRIBUTE)) {\n-\t\t\t\tbuilder.addConstructorArgValue(element.getAttribute(EXPRESSION_ATTRIBUTE));\n+\t\t\t\tString expression = element.getAttribute(EXPRESSION_ATTRIBUTE);\n+\t\t\t\tif (\"++xsd.expression.default++\".equals(expression)) {\n+\t\t\t\t\texpression = null;\n+\t\t\t\t}\n+\t\t\t\tbuilder.addConstructorArgValue(expression);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbafac4eb1b08f37a54a8488c3336750f5149ee1"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "469e81750e921b899f7bfbf25d5234ab25b89f78", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/469e81750e921b899f7bfbf25d5234ab25b89f78", "committedDate": "2020-10-02T18:16:02Z", "message": "Polishing - just propagate the empty string attribute."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 125, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}