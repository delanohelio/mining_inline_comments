{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MTk2MTUx", "number": 3261, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjowNDoxMlrOD12KVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjowNDoxMlrOD12KVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Nzg4NTAwOnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/context/IntegrationContextUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjowNDoxMlrOGLerMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODowMDo1MlrOGLjFWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5MDA5OQ==", "bodyText": "Why just one parent? Don't we need to recurse up the BF tree?", "url": "https://github.com/spring-projects/spring-integration/pull/3261#discussion_r414690099", "createdAt": "2020-04-24T16:04:12Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/context/IntegrationContextUtils.java", "diffHunk": "@@ -212,4 +215,26 @@ public static Properties getIntegrationProperties(BeanFactory beanFactory) {\n \t\treturn properties;\n \t}\n \n+\t/**\n+\t * Return a {@link BeanDefinition} with the given name,\n+\t * obtained from the given {@link BeanFactory} or one of its parents.\n+\t * @param name the bean name to return\n+\t * @param beanFactory the {@link ConfigurableListableBeanFactory} to travers.\n+\t * @return the {@link BeanDefinition} for a given name\n+\t * @throws NoSuchBeanDefinitionException if a {@link BeanDefinition} is not found\n+\t * @since 5.1.10\n+\t */\n+\tpublic static BeanDefinition getBeanDefinition(String name, ConfigurableListableBeanFactory beanFactory) {\n+\t\ttry {\n+\t\t\treturn beanFactory.getBeanDefinition(name);\n+\t\t}\n+\t\tcatch (NoSuchBeanDefinitionException ex) {\n+\t\t\tBeanFactory parentBeanFactory = beanFactory.getParentBeanFactory();\n+\t\t\tif (parentBeanFactory instanceof ConfigurableListableBeanFactory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a2d7a55d29fe1ac1aa47c64b591bece648a594"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc1NTg2OA==", "bodyText": "Because the next return getBeanDefinition(name, (ConfigurableListableBeanFactory) parentBeanFactory); call is indeed recursive.\nNot sure what am I missing...", "url": "https://github.com/spring-projects/spring-integration/pull/3261#discussion_r414755868", "createdAt": "2020-04-24T17:50:19Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/context/IntegrationContextUtils.java", "diffHunk": "@@ -212,4 +215,26 @@ public static Properties getIntegrationProperties(BeanFactory beanFactory) {\n \t\treturn properties;\n \t}\n \n+\t/**\n+\t * Return a {@link BeanDefinition} with the given name,\n+\t * obtained from the given {@link BeanFactory} or one of its parents.\n+\t * @param name the bean name to return\n+\t * @param beanFactory the {@link ConfigurableListableBeanFactory} to travers.\n+\t * @return the {@link BeanDefinition} for a given name\n+\t * @throws NoSuchBeanDefinitionException if a {@link BeanDefinition} is not found\n+\t * @since 5.1.10\n+\t */\n+\tpublic static BeanDefinition getBeanDefinition(String name, ConfigurableListableBeanFactory beanFactory) {\n+\t\ttry {\n+\t\t\treturn beanFactory.getBeanDefinition(name);\n+\t\t}\n+\t\tcatch (NoSuchBeanDefinitionException ex) {\n+\t\t\tBeanFactory parentBeanFactory = beanFactory.getParentBeanFactory();\n+\t\t\tif (parentBeanFactory instanceof ConfigurableListableBeanFactory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5MDA5OQ=="}, "originalCommit": {"oid": "90a2d7a55d29fe1ac1aa47c64b591bece648a594"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2MjMzMQ==", "bodyText": "Doh - not enough coffee.", "url": "https://github.com/spring-projects/spring-integration/pull/3261#discussion_r414762331", "createdAt": "2020-04-24T18:00:52Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/context/IntegrationContextUtils.java", "diffHunk": "@@ -212,4 +215,26 @@ public static Properties getIntegrationProperties(BeanFactory beanFactory) {\n \t\treturn properties;\n \t}\n \n+\t/**\n+\t * Return a {@link BeanDefinition} with the given name,\n+\t * obtained from the given {@link BeanFactory} or one of its parents.\n+\t * @param name the bean name to return\n+\t * @param beanFactory the {@link ConfigurableListableBeanFactory} to travers.\n+\t * @return the {@link BeanDefinition} for a given name\n+\t * @throws NoSuchBeanDefinitionException if a {@link BeanDefinition} is not found\n+\t * @since 5.1.10\n+\t */\n+\tpublic static BeanDefinition getBeanDefinition(String name, ConfigurableListableBeanFactory beanFactory) {\n+\t\ttry {\n+\t\t\treturn beanFactory.getBeanDefinition(name);\n+\t\t}\n+\t\tcatch (NoSuchBeanDefinitionException ex) {\n+\t\t\tBeanFactory parentBeanFactory = beanFactory.getParentBeanFactory();\n+\t\t\tif (parentBeanFactory instanceof ConfigurableListableBeanFactory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5MDA5OQ=="}, "originalCommit": {"oid": "90a2d7a55d29fe1ac1aa47c64b591bece648a594"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2030, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}