{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzgwNDQx", "number": 3332, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoyMTo1NFrOEMlaJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoyNjoyM1rOEMlguQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjMxMjY4OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/util/Pool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoyMTo1NFrOGux-EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzozNzoyMFrOGuyheg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNjM4NQ==", "bodyText": "The default is not going to work for Java 6, but we may not just introduce this method into the Pool interface for backward bytecode compatibility.", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451706385", "createdAt": "2020-07-08T17:21:54Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/util/Pool.java", "diffHunk": "@@ -72,4 +72,11 @@\n \t */\n \tint getAllocatedCount();\n \n+\t/**\n+\t * Close the pool; returned items will be destroyed.\n+\t * @since 4.3.23\n+\t */\n+\tdefault void close() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcxNTQ1MA==", "bodyText": "Probably easiest to cast to SimplePool on 4.3.x?", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451715450", "createdAt": "2020-07-08T17:37:20Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/util/Pool.java", "diffHunk": "@@ -72,4 +72,11 @@\n \t */\n \tint getAllocatedCount();\n \n+\t/**\n+\t * Close the pool; returned items will be destroyed.\n+\t * @since 4.3.23\n+\t */\n+\tdefault void close() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNjM4NQ=="}, "originalCommit": {"oid": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjMyMzI4OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/test/java/org/springframework/integration/util/SimplePoolTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoyNDo0NVrOGuyExw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoyNDo0NVrOGuyExw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwODEwMw==", "bodyText": "I'll take a look what we need to do during back-port to 4.3.x ...", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451708103", "createdAt": "2020-07-08T17:24:45Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/test/java/org/springframework/integration/util/SimplePoolTests.java", "diffHunk": "@@ -27,7 +29,7 @@\n import java.util.concurrent.Semaphore;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n-import org.junit.Test;\n+import org.junit.jupiter.api.Test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjMyOTUzOnYy", "diffSide": "RIGHT", "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoyNjoyM1rOGuyIqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoyNjoyM1rOGuyIqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwOTA5Ng==", "bodyText": "Why that new close() can't do this for us, too?", "url": "https://github.com/spring-projects/spring-integration/pull/3332#discussion_r451709096", "createdAt": "2020-07-08T17:26:23Z", "author": {"login": "artembilan"}, "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/connection/CachingClientConnectionFactory.java", "diffHunk": "@@ -389,6 +390,12 @@ public synchronized void stop() {\n \t\tthis.pool.removeAllIdleItems();\n \t}\n \n+\t@Override\n+\tpublic void destroy() throws Exception {\n+\t\tthis.pool.close();\n+\t\tthis.pool.removeAllIdleItems();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8e83b478bde647da1d2a03373b70a46e4fbc2b"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1854, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}