{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzOTY4MjAw", "number": 3380, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNTowNzo1MFrOEiKgiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNTowNzo1MFrOEiKgiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjU5MjA5OnYy", "diffSide": "RIGHT", "path": "spring-integration-sftp/src/main/java/org/springframework/integration/sftp/session/SftpSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNTowNzo1MFrOHP4sig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNTowNzo1MFrOHP4sig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQxOTU5NA==", "bodyText": "I think this should return true since it was a race condition. RFU currently discards the result; I think it should check it and throw an exception if false - see FtpSession where we simply delegate to the client.", "url": "https://github.com/spring-projects/spring-integration/pull/3380#discussion_r486419594", "createdAt": "2020-09-10T15:07:50Z", "author": {"login": "garyrussell"}, "path": "spring-integration-sftp/src/main/java/org/springframework/integration/sftp/session/SftpSession.java", "diffHunk": "@@ -252,8 +252,13 @@ public boolean mkdir(String remoteDirectory) throws IOException {\n \t\ttry {\n \t\t\tthis.channel.mkdir(remoteDirectory);\n \t\t}\n-\t\tcatch (SftpException e) {\n-\t\t\tthrow new NestedIOException(\"failed to create remote directory '\" + remoteDirectory + \"'.\", e);\n+\t\tcatch (SftpException ex) {\n+\t\t\tif (ex.id == ChannelSftp.SSH_FX_FAILURE && exists(remoteDirectory)) {\n+\t\t\t\treturn false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8e6483fe0ebe97ca652302f30cd2bbaf91a809c"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1903, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}