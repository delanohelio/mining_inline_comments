{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3ODk0MDI1", "number": 3349, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDoxOTo1OFrOES-jNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODoxNjozM1rOETJVVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzM0NjQ1OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/QueueChannel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDoxOTo1OFrOG4dVUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDoxOTo1OFrOG4dVUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1NDAzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t.description(\"The remaining.capacity of queue channel\")\n          \n          \n            \n            \t\t\t\t\t\t.description(\"The remaining capacity of the queue channel\")", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r461854034", "createdAt": "2020-07-28T20:19:58Z", "author": {"login": "micheljung"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/QueueChannel.java", "diffHunk": "@@ -79,6 +87,26 @@ public QueueChannel() {\n \t\tthis(new LinkedBlockingQueue<>());\n \t}\n \n+\t@Override\n+\tpublic void registerMetricsCaptor(MetricsCaptor metricsCaptor) {\n+\t\tsuper.registerMetricsCaptor(metricsCaptor);\n+\t\tthis.sizeGauge =\n+\t\t\t\tmetricsCaptor.gaugeBuilder(\"spring.integration.channel.queue.size\", this,\n+\t\t\t\t\t\t(channel) -> getQueueSize())\n+\t\t\t\t\t\t.tag(\"name\", getComponentName() == null ? \"unknown\" : getComponentName())\n+\t\t\t\t\t\t.tag(\"type\", \"channel\")\n+\t\t\t\t\t\t.description(\"The size of queue channel\")\n+\t\t\t\t\t\t.build();\n+\n+\t\tthis.remainingCapacityGauge =\n+\t\t\t\tmetricsCaptor.gaugeBuilder(\"spring.integration.channel.queue.remaining.capacity\", this,\n+\t\t\t\t\t\t(channel) -> getRemainingCapacity())\n+\t\t\t\t\t\t.tag(\"name\", getComponentName() == null ? \"unknown\" : getComponentName())\n+\t\t\t\t\t\t.tag(\"type\", \"channel\")\n+\t\t\t\t\t\t.description(\"The remaining.capacity of queue channel\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101387132c2056b3a1b3af7fa32cd000330de165"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzM1NDcwOnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/QueueChannel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDoyMjozMVrOG4daZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDoyMjozMVrOG4daZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg1NTMzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t.description(\"The size of queue channel\")\n          \n          \n            \n            \t\t\t\t\t\t.description(\"The size of the queue channel\")", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r461855333", "createdAt": "2020-07-28T20:22:31Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/QueueChannel.java", "diffHunk": "@@ -79,6 +87,26 @@ public QueueChannel() {\n \t\tthis(new LinkedBlockingQueue<>());\n \t}\n \n+\t@Override\n+\tpublic void registerMetricsCaptor(MetricsCaptor metricsCaptor) {\n+\t\tsuper.registerMetricsCaptor(metricsCaptor);\n+\t\tthis.sizeGauge =\n+\t\t\t\tmetricsCaptor.gaugeBuilder(\"spring.integration.channel.queue.size\", this,\n+\t\t\t\t\t\t(channel) -> getQueueSize())\n+\t\t\t\t\t\t.tag(\"name\", getComponentName() == null ? \"unknown\" : getComponentName())\n+\t\t\t\t\t\t.tag(\"type\", \"channel\")\n+\t\t\t\t\t\t.description(\"The size of queue channel\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101387132c2056b3a1b3af7fa32cd000330de165"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NTExMzE5OnYy", "diffSide": "RIGHT", "path": "src/reference/asciidoc/metrics.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODoxNjozM1rOG4tpsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNDowMjowOFrOG456-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyMTM5Mg==", "bodyText": "@artembilan\nIsn't this misleading? In the 5.1.x branch this might be true but 5.2.8.RELEASE and 5.3.2.RELEASE don't have this feature.", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r462121392", "createdAt": "2020-07-29T08:16:33Z", "author": {"login": "micheljung"}, "path": "src/reference/asciidoc/metrics.adoc", "diffHunk": "@@ -165,6 +165,20 @@ It is possible to customize the names and tags of `Meters` created by integratio\n The https://github.com/spring-projects/spring-integration/blob/master/spring-integration-core/src/test/java/org/springframework/integration/support/management/micrometer/MicrometerCustomMetricsTests.java[MicrometerCustomMetricsTests] test case shows a simple example of how to do that.\n You can also further customize the meters by overloading the `build()` methods on builder subclasses.\n \n+Starting with version 5.1.13, the `QueueChannel` exposes Micrometer gauges for queue size and remaining capacity:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79038289ab4bc2e0baaff68b8c98def825129a30"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMjQyNw==", "bodyText": "Well, it even misleads you when you try to upgrade from 5.1.13 to those 5.2.8 or 5.3.2, because there is no that fix yet.\nSo, it was always about upgrading to the latest minor version of the particular point generation.", "url": "https://github.com/spring-projects/spring-integration/pull/3349#discussion_r462322427", "createdAt": "2020-07-29T14:02:08Z", "author": {"login": "artembilan"}, "path": "src/reference/asciidoc/metrics.adoc", "diffHunk": "@@ -165,6 +165,20 @@ It is possible to customize the names and tags of `Meters` created by integratio\n The https://github.com/spring-projects/spring-integration/blob/master/spring-integration-core/src/test/java/org/springframework/integration/support/management/micrometer/MicrometerCustomMetricsTests.java[MicrometerCustomMetricsTests] test case shows a simple example of how to do that.\n You can also further customize the meters by overloading the `build()` methods on builder subclasses.\n \n+Starting with version 5.1.13, the `QueueChannel` exposes Micrometer gauges for queue size and remaining capacity:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyMTM5Mg=="}, "originalCommit": {"oid": "79038289ab4bc2e0baaff68b8c98def825129a30"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1872, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}