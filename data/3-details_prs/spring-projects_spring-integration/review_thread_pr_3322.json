{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjUzMjM2", "number": 3322, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo1MToyNlrOELAE7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo1MToyNlrOELAE7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTcxMDU0OnYy", "diffSide": "LEFT", "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/StandardIntegrationFlow.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo1MToyNlrOGsXv4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToyOTozMVrOGsakHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3OTYxOQ==", "bodyText": "I didn't notice this, but stopping right to left was wrong; corrected in the new code.", "url": "https://github.com/spring-projects/spring-integration/pull/3322#discussion_r449179619", "createdAt": "2020-07-02T17:51:26Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/StandardIntegrationFlow.java", "diffHunk": "@@ -127,30 +124,29 @@ public void start() {\n \n \t@Override\n \tpublic void stop(Runnable callback) {\n-\t\tif (this.lifecycles.size() > 0) {\n-\t\t\tAggregatingCallback aggregatingCallback = new AggregatingCallback(this.lifecycles.size(), callback);\n-\t\t\tListIterator<SmartLifecycle> iterator = this.lifecycles.listIterator(this.lifecycles.size());\n-\t\t\twhile (iterator.hasPrevious()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc7cfa5dfa4603b42bbd90792097478b4352e877"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4ODM3MQ==", "bodyText": "No, Gary, it was right. Because we started before from right to left and filled out the local lifecycles property.\nThen we used this lifecycles in the stop() and therefore the first one in the flow was in the end of that list, so we again should iterate it backwards to stop in proper order.\nRight now indeed we don't have an intermediate list therefore the logic is changed around a normal integrationComponents state.", "url": "https://github.com/spring-projects/spring-integration/pull/3322#discussion_r449188371", "createdAt": "2020-07-02T18:08:29Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/StandardIntegrationFlow.java", "diffHunk": "@@ -127,30 +124,29 @@ public void start() {\n \n \t@Override\n \tpublic void stop(Runnable callback) {\n-\t\tif (this.lifecycles.size() > 0) {\n-\t\t\tAggregatingCallback aggregatingCallback = new AggregatingCallback(this.lifecycles.size(), callback);\n-\t\t\tListIterator<SmartLifecycle> iterator = this.lifecycles.listIterator(this.lifecycles.size());\n-\t\t\twhile (iterator.hasPrevious()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3OTYxOQ=="}, "originalCommit": {"oid": "fc7cfa5dfa4603b42bbd90792097478b4352e877"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyNTc1OA==", "bodyText": "Ah... right.", "url": "https://github.com/spring-projects/spring-integration/pull/3322#discussion_r449225758", "createdAt": "2020-07-02T19:29:31Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/StandardIntegrationFlow.java", "diffHunk": "@@ -127,30 +124,29 @@ public void start() {\n \n \t@Override\n \tpublic void stop(Runnable callback) {\n-\t\tif (this.lifecycles.size() > 0) {\n-\t\t\tAggregatingCallback aggregatingCallback = new AggregatingCallback(this.lifecycles.size(), callback);\n-\t\t\tListIterator<SmartLifecycle> iterator = this.lifecycles.listIterator(this.lifecycles.size());\n-\t\t\twhile (iterator.hasPrevious()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3OTYxOQ=="}, "originalCommit": {"oid": "fc7cfa5dfa4603b42bbd90792097478b4352e877"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1846, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}