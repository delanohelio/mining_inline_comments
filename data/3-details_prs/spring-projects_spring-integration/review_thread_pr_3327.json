{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTMxMjY1", "number": 3327, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMjo1MVrOELy-Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMzo1MFrOELy_PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODA0ODkxOnYy", "diffSide": "RIGHT", "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/dsl/TcpOutboundGatewaySpec.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMjo1MVrOGtiYFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMjo1MVrOGtiYFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwMjMyNw==", "bodyText": "Looks like you have there this setter as well setUnsolicitedMessageChannel(MessageChannel unsolicitedMessageChannel). Don't we need to have similar option here on DSL level?\nThanks", "url": "https://github.com/spring-projects/spring-integration/pull/3327#discussion_r450402327", "createdAt": "2020-07-06T18:22:51Z", "author": {"login": "artembilan"}, "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/dsl/TcpOutboundGatewaySpec.java", "diffHunk": "@@ -114,6 +114,11 @@ public TcpOutboundGatewaySpec async(boolean async) {\n \t\treturn this;\n \t}\n \n+\tpublic TcpOutboundGatewaySpec unsolictedMessageChannelName(String channelName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80506586bce203764fd721fc735df5dac1b17ebc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODA1MTgxOnYy", "diffSide": "RIGHT", "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpOutboundGateway.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMzo1MFrOGtiZ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMzo1MFrOGtiZ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwMjc4Mw==", "bodyText": "this. on method calls?\nI guess you have just moved those existing setter over here for better class structure.\nNevertheless can we fix this. as well since we are already here in a change?", "url": "https://github.com/spring-projects/spring-integration/pull/3327#discussion_r450402783", "createdAt": "2020-07-06T18:23:50Z", "author": {"login": "artembilan"}, "path": "spring-integration-ip/src/main/java/org/springframework/integration/ip/tcp/TcpOutboundGateway.java", "diffHunk": "@@ -118,14 +129,53 @@ public void setIntegrationEvaluationContext(EvaluationContext evaluationContext)\n \t\tthis.evaluationContextSet = true;\n \t}\n \n-\t@Override\n-\tprotected void doInit() {\n-\t\tsuper.doInit();\n-\t\tif (!this.evaluationContextSet) {\n-\t\t\tthis.evaluationContext = ExpressionUtils.createStandardEvaluationContext(getBeanFactory());\n-\t\t}\n-\t\tAssert.state(!this.closeStreamAfterSend || this.isSingleUse,\n-\t\t\t\t\"Single use connection needed with closeStreamAfterSend\");\n+\t/**\n+\t * Specify the Spring Integration reply channel. If this property is not\n+\t * set the gateway will check for a 'replyChannel' header on the request.\n+\t * @param replyChannel The reply channel.\n+\t */\n+\tpublic void setReplyChannel(MessageChannel replyChannel) {\n+\t\tthis.setOutputChannel(replyChannel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80506586bce203764fd721fc735df5dac1b17ebc"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1852, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}