{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzA3OTYx", "number": 3404, "title": "Fix MeterRegistry eager load", "bodyText": "If there is a MeterRegistry bean (any) in the application context,\nwe add a MicrometerMetricsCaptor bean which populates meters further\nfrom the components.\nIn some case we may load a MicrometerMetricsCaptor bean too early\nso, not all the stuff around MeterRegistry maybe ready.\nSee Spring Boot and its MetricsAutoConfiguration\n\nFix the MicrometerMetricsCaptorRegistrar the way to rely on the\nObjectProvider<MeterRegistry> instead\nAdd package protected ctor to the MicrometerMetricsCaptor to\nprovide a target MeterRegistry on demand\n\nAll of that will ensure that we use an already post-processed MeterRegistry\nincluding Spring Boot auto-configuration\nCherry-pick to 5.3.x & 5.2.x", "createdAt": "2020-10-15T18:50:58Z", "url": "https://github.com/spring-projects/spring-integration/pull/3404", "merged": true, "mergeCommit": {"oid": "4027adc3923f82f001bb229212ffc2ac56dcb73e"}, "closed": true, "closedAt": "2020-10-15T19:13:17Z", "author": {"login": "artembilan"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS2ZiDAH2gAyNTA0MzA3OTYxOjAzZTMwYzZmYTZjZGNmNzVkOWUwYWE2YjBiY2RkNWNkOTI2M2Y2ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS2hAkAFqTUwOTY3OTg5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "03e30c6fa6cdcf75d9e0aa6b0bcdd5cd9263f6e7", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/03e30c6fa6cdcf75d9e0aa6b0bcdd5cd9263f6e7", "committedDate": "2020-10-15T18:50:38Z", "message": "Fix MeterRegistry eager load\n\nIf there is a `MeterRegistry` bean (any) in the application context,\nwe add a `MicrometerMetricsCaptor` bean which populates meters further\nfrom the components.\nIn some case we may load a `MicrometerMetricsCaptor` bean too early\nso, not all the stuff around `MeterRegistry` maybe ready.\nSee Spring Boot and its `MetricsAutoConfiguration`\n\n* Fix the `MicrometerMetricsCaptorRegistrar` the way to rely on the\n`ObjectProvider<MeterRegistry>` instead\n* Add package protected ctor to the `MicrometerMetricsCaptor` to\nprovide a target `MeterRegistry` on demand\n\nAll of that will ensure that we use an already post-processed `MeterRegistry`\nincluding Spring Boot auto-configuration\n\n**Cherry-pick to 5.3.x & 5.2.x**"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Njc5ODk1", "url": "https://github.com/spring-projects/spring-integration/pull/3404#pullrequestreview-509679895", "createdAt": "2020-10-15T18:58:06Z", "commit": {"oid": "03e30c6fa6cdcf75d9e0aa6b0bcdd5cd9263f6e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo1ODowNlrOHiV2LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODo1ODowNlrOHiV2LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3MTU2NA==", "bodyText": "Shouldn't we get the first if there are more than one? (provider.stream().findFirst()) This would then be consistent with the existing code.", "url": "https://github.com/spring-projects/spring-integration/pull/3404#discussion_r505771564", "createdAt": "2020-10-15T18:58:06Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor.java", "diffHunk": "@@ -49,31 +50,44 @@\n \n \tpublic static final String MICROMETER_CAPTOR_NAME = \"integrationMicrometerMetricsCaptor\";\n \n-\tprotected final MeterRegistry meterRegistry; // NOSONAR\n+\tprivate MeterRegistry meterRegistry;\n+\n+\tprivate ObjectProvider<MeterRegistry> meterRegistryProvider;\n \n \tpublic MicrometerMetricsCaptor(MeterRegistry meterRegistry) {\n \t\tAssert.notNull(meterRegistry, \"meterRegistry cannot be null\");\n \t\tthis.meterRegistry = meterRegistry;\n \t}\n \n+\tMicrometerMetricsCaptor(ObjectProvider<MeterRegistry> meterRegistryProvider) {\n+\t\tthis.meterRegistryProvider = meterRegistryProvider;\n+\t}\n+\n+\tpublic MeterRegistry getMeterRegistry() {\n+\t\tif (this.meterRegistry == null) {\n+\t\t\tthis.meterRegistry = this.meterRegistryProvider.getIfUnique();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03e30c6fa6cdcf75d9e0aa6b0bcdd5cd9263f6e7"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 134, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}