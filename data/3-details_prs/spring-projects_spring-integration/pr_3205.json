{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxOTQ1Mjgy", "number": 3205, "title": "GH-3204: Add channel interceptor support to flow definition", "bodyText": "Adds an intercept() builder method to register one or more\nchannel interceptors at the current flow position.\nIssue #3204\n\nadd intercept(ChannelInterceptor...) to BaseIntegrationFlowDefinition\nrefactor to reuse interceptable channel creation from wireTap", "createdAt": "2020-02-29T21:11:11Z", "url": "https://github.com/spring-projects/spring-integration/pull/3205", "merged": true, "mergeCommit": {"oid": "1511dd8748dbb72077111144f8460d97fc5068d2"}, "closed": true, "closedAt": "2020-03-05T21:15:53Z", "author": {"login": "grubeninspekteur"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJy1iiAFqTM2NzQ1OTQxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKxRxUgBqjMxMDI3MzA5OTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDU5NDEy", "url": "https://github.com/spring-projects/spring-integration/pull/3205#pullrequestreview-367459412", "createdAt": "2020-03-02T19:18:59Z", "commit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToxODo1OVrOFwr_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMzoyOVrOFwsJpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5NjcwNw==", "bodyText": "I think we need to return exactly an InterceptableChannel from here.\nAnd let's call it like currentInterceptableChannel()! A \"make\" is confusing a little bit...", "url": "https://github.com/spring-projects/spring-integration/pull/3205#discussion_r386596707", "createdAt": "2020-03-02T19:18:59Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "diffHunk": "@@ -179,6 +180,21 @@ protected MessageChannel getCurrentMessageChannel() {\n \t\treturn this.currentMessageChannel;\n \t}\n \n+\t/**\n+\t * Returns the current channel if it is an {@link InterceptableChannel}, otherwise registers a new implicit\n+\t * {@link DirectChannel} in the flow and returns that one.\n+\t * @return the current channel after the operation\n+\t */\n+\tprotected MessageChannel makeCurrentMessageChannelInterceptable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5NzIxNg==", "bodyText": "Method JavaDocs must be imperative style: https://github.com/spring-projects/spring-framework/wiki/Code-Style#javadoc-formatting", "url": "https://github.com/spring-projects/spring-integration/pull/3205#discussion_r386597216", "createdAt": "2020-03-02T19:20:03Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "diffHunk": "@@ -2829,6 +2840,26 @@ public B trigger(MessageTriggerAction triggerAction,\n \t\treturn handle(new ServiceActivatingHandler(triggerAction, \"trigger\"), endpointConfigurer);\n \t}\n \n+\t/**\n+\t * Adds one or more {@link ChannelInterceptor} implementations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5OTMzNQ==", "bodyText": "Well, our style to make methods on this builder as verbs, in other words commands: do this or that.\nLook at this as EIP-operators!\nTherefore if we add this feature here, it has to be named as intercept().", "url": "https://github.com/spring-projects/spring-integration/pull/3205#discussion_r386599335", "createdAt": "2020-03-02T19:23:29Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "diffHunk": "@@ -2829,6 +2840,26 @@ public B trigger(MessageTriggerAction triggerAction,\n \t\treturn handle(new ServiceActivatingHandler(triggerAction, \"trigger\"), endpointConfigurer);\n \t}\n \n+\t/**\n+\t * Adds one or more {@link ChannelInterceptor} implementations\n+\t * to the current {@link #currentMessageChannel}, in the given order, after any interceptors already registered.\n+\t * @param interceptorArray one or more {@link ChannelInterceptor}s.\n+\t * @return the current {@link BaseIntegrationFlowDefinition}.\n+\t * @throws IllegalArgumentException if no interceptors or at least one null value are provided\n+\t * @since 5.3\n+\t */\n+\tpublic B interceptor(ChannelInterceptor... interceptorArray) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfba5449d28215bc1be19a99570e8f8e47710791", "author": {"user": {"login": "grubeninspekteur", "name": "Tim Feuerbach"}}, "url": "https://github.com/spring-projects/spring-integration/commit/dfba5449d28215bc1be19a99570e8f8e47710791", "committedDate": "2020-03-05T20:08:28Z", "message": "GH-3204: Add channel interceptor support to flow definition\n\nAdds an `intercept()` builder method to register one or more\nchannel interceptors at the current flow position.\n\nFixes https://github.com/spring-projects/spring-integration/issues/3204\n\n* add `intercept(ChannelInterceptor...)` to `BaseIntegrationFlowDefinition`\n* refactor to reuse interceptable channel creation from `wireTap`\n* document the new operator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676", "author": {"user": {"login": "grubeninspekteur", "name": "Tim Feuerbach"}}, "url": "https://github.com/spring-projects/spring-integration/commit/6dfd84db5129d75a2818abe6914b016564977676", "committedDate": "2020-02-29T21:01:56Z", "message": "GH-3204: Add channel interceptor support to flow definition\n\nAdds an `interceptor()` builder method to register one or more\nchannel interceptors at the current flow position.\n\nFixes https://github.com/spring-projects/spring-integration/issues/3204\n\n* add `interceptor(ChannelInterceptor...)` to `BaseIntegrationFlowDefinition`\n* refactor to reuse interceptable channel creation from `wireTap`"}, "afterCommit": {"oid": "dfba5449d28215bc1be19a99570e8f8e47710791", "author": {"user": {"login": "grubeninspekteur", "name": "Tim Feuerbach"}}, "url": "https://github.com/spring-projects/spring-integration/commit/dfba5449d28215bc1be19a99570e8f8e47710791", "committedDate": "2020-03-05T20:08:28Z", "message": "GH-3204: Add channel interceptor support to flow definition\n\nAdds an `intercept()` builder method to register one or more\nchannel interceptors at the current flow position.\n\nFixes https://github.com/spring-projects/spring-integration/issues/3204\n\n* add `intercept(ChannelInterceptor...)` to `BaseIntegrationFlowDefinition`\n* refactor to reuse interceptable channel creation from `wireTap`\n* document the new operator"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 193, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}