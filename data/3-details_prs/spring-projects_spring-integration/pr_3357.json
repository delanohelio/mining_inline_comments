{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjMwNzIy", "number": 3357, "title": "Remove Legacy Metrics", "bodyText": "Simplify MBeans - instead of wrapping to expose lifecycle methods,\nimplement ManageableLifecycle. Register an additional MBean for\npolled endpoints to control the lifecycle.", "createdAt": "2020-08-06T19:49:41Z", "url": "https://github.com/spring-projects/spring-integration/pull/3357", "merged": true, "mergeCommit": {"oid": "1beb854fb4f498d2fb8ab037f1df84881eed7222"}, "closed": true, "closedAt": "2020-08-07T16:56:58Z", "author": {"login": "garyrussell"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8lCmeAFqTQ2Mjk2ODYwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8m4y7ABqjM2MzM4OTA2ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTY4NjAx", "url": "https://github.com/spring-projects/spring-integration/pull/3357#pullrequestreview-462968601", "createdAt": "2020-08-07T00:53:57Z", "commit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDo1Mzo1N1rOG9I4Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNDowNzowMlrOG9bQwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2MTgxOA==", "bodyText": "The @ManagedResource is missed then.\nOr you placed it on QueueChannelOperations...", "url": "https://github.com/spring-projects/spring-integration/pull/3357#discussion_r466761818", "createdAt": "2020-08-07T00:53:57Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/QueueChannel.java", "diffHunk": "@@ -219,11 +219,13 @@ protected boolean doSend(Message<?> message, long timeout) {\n \t\treturn purgedMessages;\n \t}\n \n+\t@ManagedAttribute(description = \"Queue size\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2MjQzMw==", "bodyText": "Hm. Looks like we don't need a @ManagedResource.\nWhat do I miss?\nThanks", "url": "https://github.com/spring-projects/spring-integration/pull/3357#discussion_r466762433", "createdAt": "2020-08-07T00:56:24Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/core/Pausable.java", "diffHunk": "@@ -27,16 +28,18 @@\n  * @since 5.0.3\n  *\n  */\n-public interface Pausable extends Lifecycle {\n+public interface Pausable extends ManageableLifecycle {\n \n \t/**\n \t * Pause the endpoint.\n \t */\n+\t@ManagedOperation(description = \"Pause the component\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2NDU0Mw==", "bodyText": "I'm not sure this one has to be manageable - it is just an inner one", "url": "https://github.com/spring-projects/spring-integration/pull/3357#discussion_r466764543", "createdAt": "2020-08-07T01:04:46Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/endpoint/ReactiveStreamsConsumer.java", "diffHunk": "@@ -209,7 +210,7 @@ protected void doStop() {\n \t}\n \n \tprivate static final class MessageHandlerSubscriber\n-\t\t\timplements CoreSubscriber<Message<?>>, Disposable, Lifecycle {\n+\t\t\timplements CoreSubscriber<Message<?>>, Disposable, ManageableLifecycle {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2NDgwNw==", "bodyText": "Probably we need to raise an issue to not forget this TODO...", "url": "https://github.com/spring-projects/spring-integration/pull/3357#discussion_r466764807", "createdAt": "2020-08-07T01:05:50Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/gateway/MessagingGatewaySupport.java", "diffHunk": "@@ -675,8 +646,8 @@ private void sendMessageForReactiveFlow(MessageChannel requestChannel, Message<?\n \n \t\treturn reply\n \t\t\t\t.doOnSubscribe(s -> {\n-\t\t\t\t\tif (!error && this.countsEnabled) {\n-\t\t\t\t\t\tthis.messageCount.incrementAndGet();\n+\t\t\t\t\tif (!error) {\n+\t\t\t\t\t\t// TODO Micrometer counter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2NzEyOA==", "bodyText": "I wonder if we really should apply our Integration management logic to not integration components.\nThis one sounds more like regular Spring bean, so what is the point to manage it.\nI might be not reached JMX yet, but just in case I won't forget in this number of file to review...\nThanks for understanding", "url": "https://github.com/spring-projects/spring-integration/pull/3357#discussion_r466767128", "createdAt": "2020-08-07T01:14:43Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/store/MessageGroupStoreReaper.java", "diffHunk": "@@ -35,7 +35,7 @@\n  * @author Dave Turanski\n  * @author Artem Bilan\n  */\n-public class MessageGroupStoreReaper implements Runnable, DisposableBean, InitializingBean, SmartLifecycle {\n+public class MessageGroupStoreReaper implements Runnable, DisposableBean, InitializingBean, ManageableSmartLifecycle {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2ODAwNg==", "bodyText": "Do we really need this?\nI'm sorry to asking nit-pick questions: you definitely spent some effort on the matter, but it is very hard to review this big PR.", "url": "https://github.com/spring-projects/spring-integration/pull/3357#discussion_r466768006", "createdAt": "2020-08-07T01:17:58Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/support/management/IntegrationManagement.java", "diffHunk": "@@ -84,14 +83,21 @@ default void registerMetricsCaptor(MetricsCaptor captor) {\n \t\t// no op\n \t}\n \n-\n-\n \t@Override\n \tdefault void destroy() {\n \t\t// no op\n \t}\n \n-\n+\t/**\n+\t * Return this {@link IntegrationManagement} as its concrete type.\n+\t * @param <T> the type.\n+\t * @return this.\n+\t * @since 5.4\n+\t */\n+\t@SuppressWarnings(\"unchecked\")\n+\tdefault <T> T getThisAs() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA2Mjk3Nw==", "bodyText": "I think we don't need this if. The logic below covers everything we needed.\nAnd having a MessageHandler as a proxy won't give us a positive match with this if anyway.", "url": "https://github.com/spring-projects/spring-integration/pull/3357#discussion_r467062977", "createdAt": "2020-08-07T14:07:02Z", "author": {"login": "artembilan"}, "path": "spring-integration-jmx/src/main/java/org/springframework/integration/monitor/IntegrationMBeanExporter.java", "diffHunk": "@@ -348,25 +344,25 @@ private void postProcessAbstractEndpoint(Object bean) {\n \t\tif (bean instanceof IntegrationConsumer) {\n \t\t\tIntegrationConsumer integrationConsumer = (IntegrationConsumer) bean;\n \t\t\tMessageHandler handler = integrationConsumer.getHandler();\n-\t\t\tif (handler instanceof org.springframework.integration.support.management.MessageHandlerMetrics) {\n-\t\t\t\torg.springframework.integration.support.management.MessageHandlerMetrics messageHandlerMetrics =\n-\t\t\t\t\t\t(org.springframework.integration.support.management.MessageHandlerMetrics) extractTarget(handler);\n-\t\t\t\tregisterHandler(messageHandlerMetrics);\n-\t\t\t\tthis.handlers.add(messageHandlerMetrics);\n-\t\t\t\tthis.runtimeBeans.add(messageHandlerMetrics);\n+\t\t\tif (handler instanceof AbstractMessageHandler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1"}, "originalPosition": 191}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5d3714d005ea40bd6e4216decaab1900364f23c", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/d5d3714d005ea40bd6e4216decaab1900364f23c", "committedDate": "2020-08-07T14:42:00Z", "message": "Remove Legacy Metrics\n\n- Simplify MBeans - instead of wrapping to expose lifecycle methods,\n  implement `ManageableLifecycle`. Register an additional MBean for\n  polled endpoints to control the lifecycle."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b32ac463b49fe64b26a34e798d1ca4af1eacea", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/33b32ac463b49fe64b26a34e798d1ca4af1eacea", "committedDate": "2020-08-07T16:19:36Z", "message": "Polishing\n\n- Move `QueueChannel` `@ManagedAttribute`s to `QueueChannelOperations`\n- Make all `AbstractEndpoints` `IntegrationManagedResource`s and remove `ManagedEndpoint`\n  to allow exposure of any `@Managed*` methods (including those on `Pausable`)\n- Revert to `Lifecycle` for classes that are not related to endpoints\n- Remove legacy metrics from docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b939ba1e97287522a9117aa4afdf934ed823adf1", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/b939ba1e97287522a9117aa4afdf934ed823adf1", "committedDate": "2020-08-06T19:48:08Z", "message": "Remove Legacy Metrics\n\n- Simplify MBeans - instead of wrapping to expose lifecycle methods,\n  implement `ManageableLifecycle`. Register an additional MBean for\n  polled endpoints to control the lifecycle."}, "afterCommit": {"oid": "33b32ac463b49fe64b26a34e798d1ca4af1eacea", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/33b32ac463b49fe64b26a34e798d1ca4af1eacea", "committedDate": "2020-08-07T16:19:36Z", "message": "Polishing\n\n- Move `QueueChannel` `@ManagedAttribute`s to `QueueChannelOperations`\n- Make all `AbstractEndpoints` `IntegrationManagedResource`s and remove `ManagedEndpoint`\n  to allow exposure of any `@Managed*` methods (including those on `Pausable`)\n- Revert to `Lifecycle` for classes that are not related to endpoints\n- Remove legacy metrics from docs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 108, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}