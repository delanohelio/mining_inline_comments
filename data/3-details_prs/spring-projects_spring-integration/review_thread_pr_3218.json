{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTEwNDMz", "number": 3218, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoxNjoxNlrODoynAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoxNjoxNlrODoynAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDk4ODE2OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/kotlin/org/springframework/integration/dsl/KotlinIntegrationFlowDefinition.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoxNjoxNlrOF3jq1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoyMDo1OFrOF3j3wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwMDQwNg==", "bodyText": "This looks suspicious. The function is scatterGather and the variant below does not have this change.", "url": "https://github.com/spring-projects/spring-integration/pull/3218#discussion_r393800406", "createdAt": "2020-03-17T16:16:16Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/kotlin/org/springframework/integration/dsl/KotlinIntegrationFlowDefinition.kt", "diffHunk": "@@ -971,31 +977,33 @@ class KotlinIntegrationFlowDefinition(@PublishedApi internal val delegate: Integ\n \n \t/**\n \t * Populate a [ScatterGatherHandler] to the current integration flow position\n-\t * based on the provided [RecipientListRouterSpec] for scattering function\n+\t * based on the provided [KotlinRecipientListRouterSpec] for scattering function\n \t * and default [AggregatorSpec] for gathering function.\n \t */\n-\tfun scatterGather(scatterer: RecipientListRouterSpec.() -> Unit) {\n-\t\tthis.delegate.scatterGather(scatterer)\n+\tfun scatterGather(scatterer: KotlinRecipientListRouterSpec.() -> Unit) {\n+\t\tthis.delegate.scatterGather(Consumer { scatterer(KotlinRecipientListRouterSpec(it)) })\n \t}\n \n \t/**\n-\t * Populate a [ScatterGatherHandler] to the current integration flow position\n-\t * based on the provided [RecipientListRouterSpec] for scattering function\n+\t * Populate a [KotlinRecipientListRouterSpec] to the current integration flow position", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f640eaa255691a5aabbe6ad8479b45c22a9116"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwMzcxMw==", "bodyText": "Doh...\nWill fix soon", "url": "https://github.com/spring-projects/spring-integration/pull/3218#discussion_r393803713", "createdAt": "2020-03-17T16:20:58Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/kotlin/org/springframework/integration/dsl/KotlinIntegrationFlowDefinition.kt", "diffHunk": "@@ -971,31 +977,33 @@ class KotlinIntegrationFlowDefinition(@PublishedApi internal val delegate: Integ\n \n \t/**\n \t * Populate a [ScatterGatherHandler] to the current integration flow position\n-\t * based on the provided [RecipientListRouterSpec] for scattering function\n+\t * based on the provided [KotlinRecipientListRouterSpec] for scattering function\n \t * and default [AggregatorSpec] for gathering function.\n \t */\n-\tfun scatterGather(scatterer: RecipientListRouterSpec.() -> Unit) {\n-\t\tthis.delegate.scatterGather(scatterer)\n+\tfun scatterGather(scatterer: KotlinRecipientListRouterSpec.() -> Unit) {\n+\t\tthis.delegate.scatterGather(Consumer { scatterer(KotlinRecipientListRouterSpec(it)) })\n \t}\n \n \t/**\n-\t * Populate a [ScatterGatherHandler] to the current integration flow position\n-\t * based on the provided [RecipientListRouterSpec] for scattering function\n+\t * Populate a [KotlinRecipientListRouterSpec] to the current integration flow position", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwMDQwNg=="}, "originalCommit": {"oid": "34f640eaa255691a5aabbe6ad8479b45c22a9116"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2004, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}