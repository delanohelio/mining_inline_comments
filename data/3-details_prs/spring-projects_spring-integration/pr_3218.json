{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5OTEwNDMz", "number": 3218, "title": "Add Kotlin wrappers for router specs", "bodyText": "To avoid casting and extra logic logic in the end-user code,\nit is better to provide Kotlin-specific API to let end-users to\ndo whatever is really dictated by API and don't think about specific types to cast", "createdAt": "2020-03-17T15:33:39Z", "url": "https://github.com/spring-projects/spring-integration/pull/3218", "merged": true, "mergeCommit": {"oid": "92421f75755991c7bf2b1773f53ed168731153df"}, "closed": true, "closedAt": "2020-03-17T16:56:46Z", "author": {"login": "artembilan"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOkgDggH2gAyMzg5OTEwNDMzOjM0ZjY0MGVhYTI1NTY5MWE1YWFiYmU2YWQ4NDc5YjQ1YzIyYTkxMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOlnLRAH2gAyMzg5OTEwNDMzOmYwOWU0YWU5NjI0OTNiOTM5YWFlNTc2N2FhOWQyZjk4YzhlMGI0Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "34f640eaa255691a5aabbe6ad8479b45c22a9116", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/34f640eaa255691a5aabbe6ad8479b45c22a9116", "committedDate": "2020-03-17T15:32:37Z", "message": "Add Kotlin wrappers for router specs\n\nTo avoid casting and extra logic logic in the end-user code,\nit is better to provide Kotlin-specific API to let end-users to\ndo whatever is really dictated by API and don't think about specific types to cast"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MTg5OTQ3", "url": "https://github.com/spring-projects/spring-integration/pull/3218#pullrequestreview-376189947", "createdAt": "2020-03-17T16:16:16Z", "commit": {"oid": "34f640eaa255691a5aabbe6ad8479b45c22a9116"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoxNjoxNlrOF3jq1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoxNjoxNlrOF3jq1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgwMDQwNg==", "bodyText": "This looks suspicious. The function is scatterGather and the variant below does not have this change.", "url": "https://github.com/spring-projects/spring-integration/pull/3218#discussion_r393800406", "createdAt": "2020-03-17T16:16:16Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/kotlin/org/springframework/integration/dsl/KotlinIntegrationFlowDefinition.kt", "diffHunk": "@@ -971,31 +977,33 @@ class KotlinIntegrationFlowDefinition(@PublishedApi internal val delegate: Integ\n \n \t/**\n \t * Populate a [ScatterGatherHandler] to the current integration flow position\n-\t * based on the provided [RecipientListRouterSpec] for scattering function\n+\t * based on the provided [KotlinRecipientListRouterSpec] for scattering function\n \t * and default [AggregatorSpec] for gathering function.\n \t */\n-\tfun scatterGather(scatterer: RecipientListRouterSpec.() -> Unit) {\n-\t\tthis.delegate.scatterGather(scatterer)\n+\tfun scatterGather(scatterer: KotlinRecipientListRouterSpec.() -> Unit) {\n+\t\tthis.delegate.scatterGather(Consumer { scatterer(KotlinRecipientListRouterSpec(it)) })\n \t}\n \n \t/**\n-\t * Populate a [ScatterGatherHandler] to the current integration flow position\n-\t * based on the provided [RecipientListRouterSpec] for scattering function\n+\t * Populate a [KotlinRecipientListRouterSpec] to the current integration flow position", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f640eaa255691a5aabbe6ad8479b45c22a9116"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f09e4ae962493b939aae5767aa9d2f98c8e0b439", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/f09e4ae962493b939aae5767aa9d2f98c8e0b439", "committedDate": "2020-03-17T16:50:18Z", "message": "* Fix typos; code clean up"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 202, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}