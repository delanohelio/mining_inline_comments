{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTEzMTg3", "number": 3339, "title": "Fix Kafka Send Timeout", "bodyText": "Resolves spring-cloud/spring-cloud-stream-binder-kafka#928\nKafka has a longer default send timeout; this means a send could be successful long\nafter Spring has timed out the send.\nI will backport to the 3.3.x extension after merge", "createdAt": "2020-07-14T21:03:50Z", "url": "https://github.com/spring-projects/spring-integration/pull/3339", "merged": true, "mergeCommit": {"oid": "9c252be028ab11a1aa6f3cb5908258b8f7e10d88"}, "closed": true, "closedAt": "2020-07-15T14:35:34Z", "author": {"login": "garyrussell"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc08jldgH2gAyNDQ5MTEzMTg3OmQ2MjEzYzY0ZWRjM2Y3YjI2ZTQ3OWJiM2Q0MWI1MjFjYTI1NDIwNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1LlnxgH2gAyNDQ5MTEzMTg3OjA5NjJiYjdlNWY2YTc3YmJjZDNhMmVhZTRmMmRmMTNjMmY1YTFkYWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d6213c64edc3f7b26e479bb3d41b521ca2542059", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/d6213c64edc3f7b26e479bb3d41b521ca2542059", "committedDate": "2020-07-14T21:03:19Z", "message": "Fix Kafka Send Timeout\n\nResolves https://github.com/spring-cloud/spring-cloud-stream-binder-kafka/issues/928\n\nKafka has a longer default send timeout; this means a send could be successful long\nafter Spring has timed out the send.\n\n**I will backport to the 3.3.x extension after merge**"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDgyOTIz", "url": "https://github.com/spring-projects/spring-integration/pull/3339#pullrequestreview-448482923", "createdAt": "2020-07-14T21:34:12Z", "commit": {"oid": "d6213c64edc3f7b26e479bb3d41b521ca2542059"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDoxMlrOGxmLqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDozNlrOGxmMaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODk4Nw==", "bodyText": "Why can't we call setSendTimeout(long sendTimeout) instead?", "url": "https://github.com/spring-projects/spring-integration/pull/3339#discussion_r454658987", "createdAt": "2020-07-14T21:34:12Z", "author": {"login": "artembilan"}, "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "diffHunk": "@@ -175,6 +181,25 @@ public KafkaProducerMessageHandler(final KafkaTemplate<K, V> kafkaTemplate) {\n \t\t\tlogger.warn(\"The KafkaTemplate is transactional; this gateway will only work if the consumer is \"\n \t\t\t\t\t+ \"configured to read uncommitted records\");\n \t\t}\n+\t\tdetermineSendTimeout();\n+\t\tthis.deliveryTimeoutMsProperty = this.sendTimeoutExpression.getValue(Long.class) - TIMEOUT_BUFFER;\n+\t}\n+\n+\tprivate void determineSendTimeout() {\n+\t\tMap<String, Object> props = this.kafkaTemplate.getProducerFactory().getConfigurationProperties();\n+\t\tObject dt = props.get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n+\t\tif (dt == null) {\n+\t\t\tdt = ProducerConfig.configDef().defaultValues().get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n+\t\t}\n+\t\tif (dt instanceof Long) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(((Long) dt) + TIMEOUT_BUFFER);\n+\t\t}\n+\t\telse if (dt instanceof Integer) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n+\t\t}\n+\t\telse if (dt instanceof String) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.parseLong((String) dt) + TIMEOUT_BUFFER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6213c64edc3f7b26e479bb3d41b521ca2542059"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1OTE3Nw==", "bodyText": "Looks like you have changed your mind and decided to not use this setter in the ctor.\nI mean doesn't look like there is still a justification for a final...", "url": "https://github.com/spring-projects/spring-integration/pull/3339#discussion_r454659177", "createdAt": "2020-07-14T21:34:36Z", "author": {"login": "artembilan"}, "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "diffHunk": "@@ -257,13 +282,14 @@ public void setSendTimeout(long sendTimeout) {\n \n \t/**\n \t * Specify a SpEL expression to evaluate a timeout in milliseconds for how long this\n-\t * {@link KafkaProducerMessageHandler} should wait wait for send operation\n-\t * results. Defaults to 10 seconds. The timeout is applied only in {@link #sync} mode.\n+\t * {@link KafkaProducerMessageHandler} should wait wait for send operation results.\n+\t * Defaults to the kafka {@code delivery.timeout.ms} property + 5 seconds. The timeout\n+\t * is applied only in {@link #sync} mode.\n \t * @param sendTimeoutExpression the {@link Expression} for timeout to wait for result\n-\t * fo send operation.\n+\t * for a send operation.\n \t * @since 2.1.1\n \t */\n-\tpublic void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n+\tpublic final void setSendTimeoutExpression(Expression sendTimeoutExpression) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6213c64edc3f7b26e479bb3d41b521ca2542059"}, "originalPosition": 94}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0962bb7e5f6a77bbcd3a2eae4f2df13c2f5a1daa", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/0962bb7e5f6a77bbcd3a2eae4f2df13c2f5a1daa", "committedDate": "2020-07-15T14:34:07Z", "message": "Use setSendTimeout; make it final."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 89, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}