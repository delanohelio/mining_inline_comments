{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNTY2NzIy", "number": 3200, "title": "GH-3199: FailoverClientCF - Fail Back Option", "bodyText": "Resolves: #3199\nPreviously, the FCCF did not cache a shared connection; if server 1 is down\nand server 2 is up, this caused an attempt to connect to server 1 every time\nwe got the connection.\nAdd 2 options: refreshSharedInterval and closeOnRefresh, defaulting to\n0 and false respectively, to maintain the same behavior as before the options\nexisted.\nDisallow caching of the single shared connection if the delegate factories are\nCachingClientConnectionFactory instances.\ncherry-pick to 5.2.x\nI will backport to 5.1.x, 4.3.x after review/merge.", "createdAt": "2020-02-28T19:51:20Z", "url": "https://github.com/spring-projects/spring-integration/pull/3200", "merged": true, "mergeCommit": {"oid": "4180e01e5974d63e17057982c4a7048428916f60"}, "closed": true, "closedAt": "2020-02-28T20:52:17Z", "author": {"login": "garyrussell"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcI1SVKAH2gAyMzgxNTY2NzIyOjMxZTI4NjliYzk0NzVjNGJhMmYzNGQxNjkyNjA2YjNjOTQzNGU2YjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI1_0SgH2gAyMzgxNTY2NzIyOjUzYTNhYzRmMWViYWFhMzZlOTA3NGI2ZmFmYmY5MzEzNThkNDIwOTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "31e2869bc9475c4ba2f34d1692606b3c9434e6b2", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/31e2869bc9475c4ba2f34d1692606b3c9434e6b2", "committedDate": "2020-02-28T19:42:28Z", "message": "GH-3199: FailoverClientCF - Fail Back Option\n\nResolves: https://github.com/spring-projects/spring-integration/issues/3199\n\nPreviously, the FCCF did not cache a shared connection; if server 1 is down\nand server 2 is up, this caused an attempt to connect to server 1 every time\nwe got the connection.\n\nAdd 2 options: `refreshSharedInterval` and `closeOnRefresh`, defaulting to\n0 and false respectively, to maintain the same behavior as before the options\nexisted.\n\nDisallow caching of the single shared connection if the delegate factories are\n`CachingClientConnectionFactory` instances.\n\n**cherry-pick to 5.2.x**\n\nI will backport to 5.1.x, 4.3.x after review/merge."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjYxODM1", "url": "https://github.com/spring-projects/spring-integration/pull/3200#pullrequestreview-366661835", "createdAt": "2020-02-28T20:20:16Z", "commit": {"oid": "31e2869bc9475c4ba2f34d1692606b3c9434e6b2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDoyMDoxNlrOFwBudw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDoyMDoxNlrOFwBudw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkwNDI0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Set `closeOnRefresh` to close thee \"old\" connection after a refresh actually creates a new connection.\n          \n          \n            \n            Set `closeOnRefresh` to close the \"old\" connection after a refresh actually creates a new connection.", "url": "https://github.com/spring-projects/spring-integration/pull/3200#discussion_r385904247", "createdAt": "2020-02-28T20:20:16Z", "author": {"login": "artembilan"}, "path": "src/reference/asciidoc/ip.adoc", "diffHunk": "@@ -536,6 +536,23 @@ The following example shows how to configure a failover client connection factor\n \n NOTE: When using the failover connection factory, the `singleUse` property must be consistent between the factory itself and the list of factories it is configured to use.\n \n+The connnection factory has two properties when used with a shared connection (`singleUse=false`):\n+\n+* `refreshSharedInterval`\n+* `closeOnRefresh`\n+\n+These are `0` and `false` to retain the same behavior that existed before the properties were added.\n+\n+Consider the following scenario based on the above configuration:\n+Let's say `clientFactory1` cannot establish a connection but `clientFactory2` can.\n+Each time the `failCF` `getConnection()` method is called, we will again attempt to connect using `clientFactory1`; if successful, the \"old\" connection will remain open and may be reused in future if the first factory fails once more.\n+\n+Set `refreshSharedInterval` to only attempt to reconnect with the first factory after that time has expired; set it to `Long.MAX_VALUE` if you only want to fail back to the first factory when the current connection fails.\n+\n+Set `closeOnRefresh` to close thee \"old\" connection after a refresh actually creates a new connection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31e2869bc9475c4ba2f34d1692606b3c9434e6b2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53a3ac4f1ebaaa36e9074b6fafbf931358d42093", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/53a3ac4f1ebaaa36e9074b6fafbf931358d42093", "committedDate": "2020-02-28T20:32:09Z", "message": "Polish javadocs and fix typo in docs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 189, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}