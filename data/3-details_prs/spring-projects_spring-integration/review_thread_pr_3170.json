{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDY1OTUy", "number": 3170, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo1MToxNVrODdz1uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMDoyNDozMlrODd0bEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTg0NjMzOnYy", "diffSide": "RIGHT", "path": "spring-integration-amqp/src/main/java/org/springframework/integration/amqp/dsl/AmqpOutboundChannelAdapterSpec.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo1MToxNVrOFmoHFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo1MToxNVrOFmoHFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0NzM4MQ==", "bodyText": "Gary, can you make all the ctors and final props in these AMQP specs as protected for possible extension?\nSo, I won't include them into my extensions PR #3167 to avoid conflicts between our two fixes.\nThanks", "url": "https://github.com/spring-projects/spring-integration/pull/3170#discussion_r376047381", "createdAt": "2020-02-06T19:51:15Z", "author": {"login": "artembilan"}, "path": "spring-integration-amqp/src/main/java/org/springframework/integration/amqp/dsl/AmqpOutboundChannelAdapterSpec.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.springframework.integration.amqp.dsl;\n+\n+import org.springframework.amqp.core.AmqpTemplate;\n+import org.springframework.messaging.Message;\n+\n+/**\n+ * Spec for an outbound AMQP channel adapter\n+ *\n+ * @author Gary Russell\n+ * @since 5.3\n+ *\n+ */\n+public class AmqpOutboundChannelAdapterSpec extends AmqpOutboundEndpointSpec<AmqpOutboundChannelAdapterSpec> {\n+\n+\tAmqpOutboundChannelAdapterSpec(AmqpTemplate amqpTemplate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52f890dad1f468b0cb79c75c7d65d85990c601ab"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTk0MTk0OnYy", "diffSide": "RIGHT", "path": "spring-integration-amqp/src/main/java/org/springframework/integration/amqp/dsl/AmqpBaseOutboundEndpointSpec.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMDoyNDozMlrOFmpC7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMDoyNDozMlrOFmpC7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA2MjcwMw==", "bodyText": "Right, this is one of those I'd like to cover with DSL extensions and all those protected ctors \ud83d\ude04", "url": "https://github.com/spring-projects/spring-integration/pull/3170#discussion_r376062703", "createdAt": "2020-02-06T20:24:32Z", "author": {"login": "artembilan"}, "path": "spring-integration-amqp/src/main/java/org/springframework/integration/amqp/dsl/AmqpBaseOutboundEndpointSpec.java", "diffHunk": "@@ -311,4 +311,17 @@ public S errorMessageStrategy(ErrorMessageStrategy errorMessageStrategy) {\n \t\treturn _this();\n \t}\n \n+\t/**\n+\t * Set a timeout after which a nack will be synthesized if no publisher confirm has\n+\t * been received within that time. Missing confirms will be checked every 50% of this\n+\t * value so the synthesized nack will be sent between 1x and 1.5x this timeout.\n+\t * @param timeout the approximate timeout.\n+\t * @return the spec.\n+\t * @since 5.3\n+\t */\n+\tpublic S confirmTimeout(long timeout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0eaaff67b72ba88e0c582ed4b7a5cae9d422c0"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1963, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}