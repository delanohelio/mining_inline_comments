{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjEwNzI3", "number": 3193, "title": "GH-3192: pub-sub DSL for broker-backed channels", "bodyText": "Fixes #3192\n\nIntroduce a BroadcastCapableChannel abstract to indicate those SubscribableChannel\nimplementations which can provide a pub-sub functionality\nImplement a BroadcastCapableChannel in broker-baked channels with pub-sub option\nIntroduce a BaseIntegrationFlowDefinition.publishSubscribeChannel() based\non the BroadcastCapableChannel and BroadcastPublishSubscribeSpec to let to\nconfigure sub-flow subscribers in fluent manner", "createdAt": "2020-02-24T20:19:38Z", "url": "https://github.com/spring-projects/spring-integration/pull/3193", "merged": true, "mergeCommit": {"oid": "87c8e47a886c74e7e7622f8dbee22fd30c0a8a55"}, "closed": true, "closedAt": "2020-02-25T18:01:39Z", "author": {"login": "artembilan"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHjaqSgH2gAyMzc5MjEwNzI3OjM1MThhNjhmYWI4ZTE4MTY5MmViYWU2ZDQzNWU5NjRhZjQ5MjBjNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH2CjigFqTM2NDMzMDg3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3518a68fab8e181692ebae6d435e964af4920c44", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/3518a68fab8e181692ebae6d435e964af4920c44", "committedDate": "2020-02-24T20:19:21Z", "message": "GH-3192: pub-sub DSL for broker-backed channels\n\nFixes https://github.com/spring-projects/spring-integration/issues/3192\n\n* Introduce a `BroadcastCapableChannel` abstract to indicate those `SubscribableChannel`\nimplementations which can provide a pub-sub functionality\n* Implement a `BroadcastCapableChannel` in broker-baked channels with pub-sub option\n* Introduce a `BaseIntegrationFlowDefinition.publishSubscribeChannel()` based\non the `BroadcastCapableChannel` and `BroadcastPublishSubscribeSpec` to let to\nconfigure sub-flow subscribers in fluent manner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c16c9c8e6c4e676d1bcd8a469b39f767e7e7a3d", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/1c16c9c8e6c4e676d1bcd8a469b39f767e7e7a3d", "committedDate": "2020-02-24T21:28:26Z", "message": "* Add some JavaDocs and document new feature"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzEwMDY2", "url": "https://github.com/spring-projects/spring-integration/pull/3193#pullrequestreview-364310066", "createdAt": "2020-02-25T17:18:14Z", "commit": {"oid": "1c16c9c8e6c4e676d1bcd8a469b39f767e7e7a3d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNzoxODoxNFrOFuOT8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNzoxODo1MFrOFuOVYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAxMzI5Nw==", "bodyText": "Shouldn't we show the cast here? Or is your intention to fix the TODO in JmsTests?", "url": "https://github.com/spring-projects/spring-integration/pull/3193#discussion_r384013297", "createdAt": "2020-02-25T17:18:14Z", "author": {"login": "garyrussell"}, "path": "src/reference/asciidoc/dsl.adoc", "diffHunk": "@@ -742,6 +742,32 @@ public IntegrationFlow subscribersFlow() {\n You can achieve the same result with separate `IntegrationFlow` `@Bean` definitions, but we hope you find the sub-flow style of logic composition useful.\n We find that it results in shorter (and so more readable) code.\n \n+Starting with version 5.3, a `BroadcastCapableChannel`-based `publishSubscribeChannel()` implementation is provided to configure sub-flow subscribers on the broker-backed message channels.\n+For example we now can configure several subscribers as sub-flows on the `Jms.publishSubscribeChannel()`:\n+\n+====\n+[source,java]\n+----\n+@Bean\n+public BroadcastCapableChannel jmsPublishSubscribeChannel() {\n+    return Jms.publishSubscribeChannel(jmsConnectionFactory())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c16c9c8e6c4e676d1bcd8a469b39f767e7e7a3d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAxMzY2NA==", "bodyText": "Remove the - on broker-backed ....", "url": "https://github.com/spring-projects/spring-integration/pull/3193#discussion_r384013664", "createdAt": "2020-02-25T17:18:50Z", "author": {"login": "garyrussell"}, "path": "src/reference/asciidoc/dsl.adoc", "diffHunk": "@@ -742,6 +742,32 @@ public IntegrationFlow subscribersFlow() {\n You can achieve the same result with separate `IntegrationFlow` `@Bean` definitions, but we hope you find the sub-flow style of logic composition useful.\n We find that it results in shorter (and so more readable) code.\n \n+Starting with version 5.3, a `BroadcastCapableChannel`-based `publishSubscribeChannel()` implementation is provided to configure sub-flow subscribers on the broker-backed message channels.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c16c9c8e6c4e676d1bcd8a469b39f767e7e7a3d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c246950502de45d77304db27a0497dce630fc69", "author": {"user": {"login": "artembilan", "name": "Artem Bilan"}}, "url": "https://github.com/spring-projects/spring-integration/commit/2c246950502de45d77304db27a0497dce630fc69", "committedDate": "2020-02-25T17:41:25Z", "message": "* Show the channel bean definition in the doc\n* Fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzMwODcy", "url": "https://github.com/spring-projects/spring-integration/pull/3193#pullrequestreview-364330872", "createdAt": "2020-02-25T18:01:13Z", "commit": {"oid": "2c246950502de45d77304db27a0497dce630fc69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 183, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}