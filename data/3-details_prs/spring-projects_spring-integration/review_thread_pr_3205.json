{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxOTQ1Mjgy", "number": 3205, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToxODo1OVrODkZB5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMzoyOVrODkZIqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDg1NDE0OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToxODo1OVrOFwr_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToxODo1OVrOFwr_Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5NjcwNw==", "bodyText": "I think we need to return exactly an InterceptableChannel from here.\nAnd let's call it like currentInterceptableChannel()! A \"make\" is confusing a little bit...", "url": "https://github.com/spring-projects/spring-integration/pull/3205#discussion_r386596707", "createdAt": "2020-03-02T19:18:59Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "diffHunk": "@@ -179,6 +180,21 @@ protected MessageChannel getCurrentMessageChannel() {\n \t\treturn this.currentMessageChannel;\n \t}\n \n+\t/**\n+\t * Returns the current channel if it is an {@link InterceptableChannel}, otherwise registers a new implicit\n+\t * {@link DirectChannel} in the flow and returns that one.\n+\t * @return the current channel after the operation\n+\t */\n+\tprotected MessageChannel makeCurrentMessageChannelInterceptable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDg1NzIyOnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMDowM1rOFwsBYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMDowM1rOFwsBYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5NzIxNg==", "bodyText": "Method JavaDocs must be imperative style: https://github.com/spring-projects/spring-framework/wiki/Code-Style#javadoc-formatting", "url": "https://github.com/spring-projects/spring-integration/pull/3205#discussion_r386597216", "createdAt": "2020-03-02T19:20:03Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "diffHunk": "@@ -2829,6 +2840,26 @@ public B trigger(MessageTriggerAction triggerAction,\n \t\treturn handle(new ServiceActivatingHandler(triggerAction, \"trigger\"), endpointConfigurer);\n \t}\n \n+\t/**\n+\t * Adds one or more {@link ChannelInterceptor} implementations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDg3MTQ2OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMzoyOVrOFwsJpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMzoyOVrOFwsJpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5OTMzNQ==", "bodyText": "Well, our style to make methods on this builder as verbs, in other words commands: do this or that.\nLook at this as EIP-operators!\nTherefore if we add this feature here, it has to be named as intercept().", "url": "https://github.com/spring-projects/spring-integration/pull/3205#discussion_r386599335", "createdAt": "2020-03-02T19:23:29Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/dsl/BaseIntegrationFlowDefinition.java", "diffHunk": "@@ -2829,6 +2840,26 @@ public B trigger(MessageTriggerAction triggerAction,\n \t\treturn handle(new ServiceActivatingHandler(triggerAction, \"trigger\"), endpointConfigurer);\n \t}\n \n+\t/**\n+\t * Adds one or more {@link ChannelInterceptor} implementations\n+\t * to the current {@link #currentMessageChannel}, in the given order, after any interceptors already registered.\n+\t * @param interceptorArray one or more {@link ChannelInterceptor}s.\n+\t * @return the current {@link BaseIntegrationFlowDefinition}.\n+\t * @throws IllegalArgumentException if no interceptors or at least one null value are provided\n+\t * @since 5.3\n+\t */\n+\tpublic B interceptor(ChannelInterceptor... interceptorArray) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd84db5129d75a2818abe6914b016564977676"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1995, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}