{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3Njk3OTUz", "number": 3408, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0NjozMFrOEwWCBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0OToxOVrOEwWGTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTI4MDY4OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/gateway/MessagingGatewaySupport.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0NjozMFrOHl14Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0NjozMFrOHl14Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0MjA5MA==", "bodyText": "Needs // NOSONAR (catch throwable).", "url": "https://github.com/spring-projects/spring-integration/pull/3408#discussion_r509442090", "createdAt": "2020-10-21T16:46:30Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/gateway/MessagingGatewaySupport.java", "diffHunk": "@@ -528,7 +528,7 @@ private Object doSendAndReceive(Object object, boolean shouldConvert) {\n \t\t\t\tsample.stop(sendTimer());\n \t\t\t}\n \t\t}\n-\t\tcatch (Exception ex) {\n+\t\tcatch (Throwable ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5002feabd48477493e0d23d1eddf52cc845eea74"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MTI5MTY1OnYy", "diffSide": "RIGHT", "path": "spring-integration-core/src/main/java/org/springframework/integration/gateway/MessagingGatewaySupport.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0OToxOVrOHl1_Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNjo0OToxOVrOHl1_Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTQ0Mzg2Mw==", "bodyText": "Needs throw me; to retain existing behavior of throwing error flow exceptions to caller.\nIt's not clear why this try/catch is here at all; this is an Error on the error flow, not the original flow.", "url": "https://github.com/spring-projects/spring-integration/pull/3408#discussion_r509443863", "createdAt": "2020-10-21T16:49:19Z", "author": {"login": "garyrussell"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/gateway/MessagingGatewaySupport.java", "diffHunk": "@@ -543,7 +543,14 @@ private Object doSendAndReceive(Object object, boolean shouldConvert) {\n \t\t\t\t\treply instanceof ErrorMessage\n \t\t\t\t\t\t\t? ((ErrorMessage) reply).getPayload()\n \t\t\t\t\t\t\t: (Throwable) reply;\n-\t\t\treturn handleSendAndReceiveError(object, requestMessage, error, shouldConvert);\n+\t\t\ttry {\n+\t\t\t\treturn handleSendAndReceiveError(object, requestMessage, error, shouldConvert);\n+\t\t\t}\n+\t\t\tcatch (MessagingException me) {\n+\t\t\t\tif (me.getCause() instanceof Error) { // NOSONAR\n+\t\t\t\t\tthrow (Error) me.getCause();\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5002feabd48477493e0d23d1eddf52cc845eea74"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1931, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}