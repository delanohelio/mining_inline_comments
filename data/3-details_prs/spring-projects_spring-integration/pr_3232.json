{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTYzODUy", "number": 3232, "title": "GH-3230: MMIH: Fix Pausable/Lifecycle Methods", "bodyText": "Resolves #3230\nPreviously, methods with the same name as Lifecycle methods were unconditionally ignored when no method name provided.\n\nUse logic similar to ControlBusMethodFilter to explicitly compare the candidate Method\nto those on Paused and Lifecycle and only ignore those.\nExplicitly disallow these methods when named - previously the check was only performed\nif no method name was supplied.\n\nConsideration for backporting:\nBehavior change, test lifecycleOnlyExplicitMethod() fails on 5.2.x (method explicitly requested works).", "createdAt": "2020-03-31T19:54:27Z", "url": "https://github.com/spring-projects/spring-integration/pull/3232", "merged": true, "mergeCommit": {"oid": "fcca7a7b2696fa6bebfcf35892077166e4541fb0"}, "closed": true, "closedAt": "2020-04-01T16:17:27Z", "author": {"login": "garyrussell"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTI-VPAH2gAyMzk2NTYzODUyOmVhMzk3ZGIyMjEwOWQ4YWY5YjNkZDdlNjdkZGIzYWI2MzQ4MjA0ZjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTaH_PAFqTM4NTc0MjM4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "committedDate": "2020-03-31T20:17:58Z", "message": "GH-3230: MMIH: Fix Pausable/Lifecycle Methods\n\nResolves https://github.com/spring-projects/spring-integration/issues/3230\n\nPreviously, methods with the same name as `Lifecycle` methods were unconditionally ignored.\n\n- Use logic similar to `ControlBusMethodFilter` to explicitly compare the candidate Method\n  to those on `Paused` and `Lifecycle` and only ignore those.\n- Explicitly disallow these methods when named - previously the check was only performed\n  if no method name was supplied."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2669b238c458e01784bb4b37c0e3b306260490b9", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/2669b238c458e01784bb4b37c0e3b306260490b9", "committedDate": "2020-03-31T19:49:36Z", "message": "GH-3230: MMIH: Fix Pausable/Lifecycle Methods\n\nResolves https://github.com/spring-projects/spring-integration/issues/3230\n\nPreviously, methods with the same name as `Lifecycle` methods were unconditionally ignored.\n\n- Use logic similar to `ControlBusMethodFilter` to explicitly compare the candidate Method\n  to those on `Paused` and `Lifecycle` and only ignore those.\n- Explicitly disallow these methods when named - previously the check was only performed\n  if no method name was supplied."}, "afterCommit": {"oid": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/ea397db22109d8af9b3dd7e67ddb3ab6348204f1", "committedDate": "2020-03-31T20:17:58Z", "message": "GH-3230: MMIH: Fix Pausable/Lifecycle Methods\n\nResolves https://github.com/spring-projects/spring-integration/issues/3230\n\nPreviously, methods with the same name as `Lifecycle` methods were unconditionally ignored.\n\n- Use logic similar to `ControlBusMethodFilter` to explicitly compare the candidate Method\n  to those on `Paused` and `Lifecycle` and only ignore those.\n- Explicitly disallow these methods when named - previously the check was only performed\n  if no method name was supplied."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTA2MDU0", "url": "https://github.com/spring-projects/spring-integration/pull/3232#pullrequestreview-385106054", "createdAt": "2020-03-31T21:08:25Z", "commit": {"oid": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODoyNVrOF-oTaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODoyNVrOF-oTaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNjM2MQ==", "bodyText": "Any chances that we log special info that Pausable methods are not considered as candidates?", "url": "https://github.com/spring-projects/spring-integration/pull/3232#discussion_r401216361", "createdAt": "2020-03-31T21:08:25Z", "author": {"login": "artembilan"}, "path": "spring-integration-core/src/main/java/org/springframework/integration/handler/support/MessagingMethodInvokerHelper.java", "diffHunk": "@@ -818,14 +818,19 @@ private HandlerMethod obtainHandlerMethodIfAny(Method methodToProcess) {\n \t}\n \n \tprivate boolean isMethodEligible(Method methodToProcess) {\n-\t\treturn !(methodToProcess.isBridge() || // NOSONAR boolean complexity\n+\t\treturn (!(methodToProcess.isBridge() || // NOSONAR boolean complexity\n \t\t\t\tisMethodDefinedOnObjectClass(methodToProcess) ||\n \t\t\t\tmethodToProcess.getDeclaringClass().equals(Proxy.class) ||\n \t\t\t\t(this.requiresReply && void.class.equals(methodToProcess.getReturnType())) ||\n-\t\t\t\t(this.methodName != null && !this.methodName.equals(methodToProcess.getName())) ||\n-\t\t\t\t(this.methodName == null &&\n-\t\t\t\t\t\tObjectUtils.containsElement(new String[] { \"start\", \"stop\", \"isRunning\" },\n-\t\t\t\t\t\t\t\tmethodToProcess.getName())));\n+\t\t\t\t(this.methodName != null && !this.methodName.equals(methodToProcess.getName()))))\n+\t\t\t&& !isPausableMethod(methodToProcess);\n+\t}\n+\n+\tprivate boolean isPausableMethod(Method pausableMethod) {\n+\t\tClass<?> declaringClass = pausableMethod.getDeclaringClass();\n+\t\treturn (Pausable.class.isAssignableFrom(declaringClass) || Lifecycle.class.isAssignableFrom(declaringClass))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea397db22109d8af9b3dd7e67ddb3ab6348204f1"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fa2f89ab6b0ee43034202070e4a7263c142e87b", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/5fa2f89ab6b0ee43034202070e4a7263c142e87b", "committedDate": "2020-03-31T21:28:02Z", "message": "- reinstate `Pausable/Lifecycle` methods if explicitly requested.\n- log `Pausable` methods that are not candidates."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjQ1NDc4", "url": "https://github.com/spring-projects/spring-integration/pull/3232#pullrequestreview-385645478", "createdAt": "2020-04-01T14:33:26Z", "commit": {"oid": "5fa2f89ab6b0ee43034202070e4a7263c142e87b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8db6fc50d84749bc76cc06d04e393f6a6054db2e", "author": {"user": {"login": "garyrussell", "name": "Gary Russell"}}, "url": "https://github.com/spring-projects/spring-integration/commit/8db6fc50d84749bc76cc06d04e393f6a6054db2e", "committedDate": "2020-04-01T15:23:31Z", "message": "- Fix typo in test method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzQyMzg2", "url": "https://github.com/spring-projects/spring-integration/pull/3232#pullrequestreview-385742386", "createdAt": "2020-04-01T16:16:54Z", "commit": {"oid": "8db6fc50d84749bc76cc06d04e393f6a6054db2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 211, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}