{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTEzMTg3", "number": 3339, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDoxMlrOEOcMrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDozNlrOEOcNJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTc3NTE5OnYy", "diffSide": "RIGHT", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDoxMlrOGxmLqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDoxMlrOGxmLqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODk4Nw==", "bodyText": "Why can't we call setSendTimeout(long sendTimeout) instead?", "url": "https://github.com/spring-projects/spring-integration/pull/3339#discussion_r454658987", "createdAt": "2020-07-14T21:34:12Z", "author": {"login": "artembilan"}, "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "diffHunk": "@@ -175,6 +181,25 @@ public KafkaProducerMessageHandler(final KafkaTemplate<K, V> kafkaTemplate) {\n \t\t\tlogger.warn(\"The KafkaTemplate is transactional; this gateway will only work if the consumer is \"\n \t\t\t\t\t+ \"configured to read uncommitted records\");\n \t\t}\n+\t\tdetermineSendTimeout();\n+\t\tthis.deliveryTimeoutMsProperty = this.sendTimeoutExpression.getValue(Long.class) - TIMEOUT_BUFFER;\n+\t}\n+\n+\tprivate void determineSendTimeout() {\n+\t\tMap<String, Object> props = this.kafkaTemplate.getProducerFactory().getConfigurationProperties();\n+\t\tObject dt = props.get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n+\t\tif (dt == null) {\n+\t\t\tdt = ProducerConfig.configDef().defaultValues().get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n+\t\t}\n+\t\tif (dt instanceof Long) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(((Long) dt) + TIMEOUT_BUFFER);\n+\t\t}\n+\t\telse if (dt instanceof Integer) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n+\t\t}\n+\t\telse if (dt instanceof String) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.parseLong((String) dt) + TIMEOUT_BUFFER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6213c64edc3f7b26e479bb3d41b521ca2542059"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTc3NjM5OnYy", "diffSide": "RIGHT", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDozNlrOGxmMaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTozNDozNlrOGxmMaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1OTE3Nw==", "bodyText": "Looks like you have changed your mind and decided to not use this setter in the ctor.\nI mean doesn't look like there is still a justification for a final...", "url": "https://github.com/spring-projects/spring-integration/pull/3339#discussion_r454659177", "createdAt": "2020-07-14T21:34:36Z", "author": {"login": "artembilan"}, "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "diffHunk": "@@ -257,13 +282,14 @@ public void setSendTimeout(long sendTimeout) {\n \n \t/**\n \t * Specify a SpEL expression to evaluate a timeout in milliseconds for how long this\n-\t * {@link KafkaProducerMessageHandler} should wait wait for send operation\n-\t * results. Defaults to 10 seconds. The timeout is applied only in {@link #sync} mode.\n+\t * {@link KafkaProducerMessageHandler} should wait wait for send operation results.\n+\t * Defaults to the kafka {@code delivery.timeout.ms} property + 5 seconds. The timeout\n+\t * is applied only in {@link #sync} mode.\n \t * @param sendTimeoutExpression the {@link Expression} for timeout to wait for result\n-\t * fo send operation.\n+\t * for a send operation.\n \t * @since 2.1.1\n \t */\n-\tpublic void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n+\tpublic final void setSendTimeoutExpression(Expression sendTimeoutExpression) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6213c64edc3f7b26e479bb3d41b521ca2542059"}, "originalPosition": 94}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1857, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}