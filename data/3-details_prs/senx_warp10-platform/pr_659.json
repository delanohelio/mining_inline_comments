{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMDY3NzQ0", "number": 659, "title": "Fix JSON dump test with expose owner and producer", "bodyText": "", "createdAt": "2020-02-10T10:54:14Z", "url": "https://github.com/senx/warp10-platform/pull/659", "merged": true, "mergeCommit": {"oid": "3d4b9b83296917926b496f48ca403c9c6854ed4b"}, "closed": true, "closedAt": "2020-02-10T11:52:24Z", "author": {"login": "steven-gueguen"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcC66_6AH2gAyMzczMDY3NzQ0OjE3ZGI5OGNhN2M1MDRiZWI4MzU0ODY1ZTlmN2ZmNTQzM2Y1YzYxZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC7TmIAH2gAyMzczMDY3NzQ0OmM5NWFjNjU1OGE4NjUwMGRhNjAxYTY5NjBiODVmNjE5NjY2M2RjNDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "17db98ca7c504beb8354865e9f7ff5433f5c61d0", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/17db98ca7c504beb8354865e9f7ff5433f5c61d0", "committedDate": "2020-02-10T10:52:52Z", "message": "Fix JSON dump test with expose owner and producer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODQ2OTc1", "url": "https://github.com/senx/warp10-platform/pull/659#pullrequestreview-355846975", "createdAt": "2020-02-10T10:57:16Z", "commit": {"oid": "17db98ca7c504beb8354865e9f7ff5433f5c61d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo1NzoxNlrOFnh1DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo1NzoxNlrOFnh1DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MzAzNg==", "bodyText": "Would be clearer if the values used for producer and owner were actual UUIDs, it would not lead people into thinking other values could be there", "url": "https://github.com/senx/warp10-platform/pull/659#discussion_r376993036", "createdAt": "2020-02-10T10:57:16Z", "author": {"login": "hbs"}, "path": "warp10/src/test/java/io/warp10/continuum/egress/EgressFetchHandlerTest.java", "diffHunk": "@@ -1,45 +1,74 @@\n package io.warp10.continuum.egress;\n \n+import io.warp10.WarpConfig;\n import io.warp10.continuum.gts.GTSDecoder;\n import io.warp10.continuum.gts.GTSEncoder;\n import io.warp10.continuum.store.thrift.data.Metadata;\n-import org.apache.commons.io.IOUtils;\n-import org.junit.Test;\n \n-import java.io.*;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintWriter;\n+import java.io.StringReader;\n import java.nio.charset.StandardCharsets;\n-import java.util.*;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.atomic.AtomicReference;\n \n+import org.apache.commons.io.IOUtils;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n import static java.util.Collections.singleton;\n import static java.util.Collections.singletonMap;\n import static org.junit.Assert.assertEquals;\n \n public class EgressFetchHandlerTest {\n-  private static ClassLoader CL = EgressFetchHandlerTest.class.getClassLoader();\n+\n+  private static final ClassLoader CL = EgressFetchHandlerTest.class.getClassLoader();\n+\n+  @BeforeClass\n+  public static void beforeClass() throws Exception {\n+    WarpConfig.safeSetProperties(new StringReader(\"warp.timeunits=us\"));\n+  }\n \n   @Test\n-  public void testJsonDump() throws Exception {\n+  public void testJsonDumpWithoutExpose() throws Exception {\n+    String json = jsonDumpWithExpose(false);\n+    String expect = IOUtils.toString(CL.getResourceAsStream(\"EgressFetchHandlerTest_1.json\"), StandardCharsets.UTF_8);\n+\n+    assertEquals(expect.trim(), json);\n+  }\n+\n+  @Test\n+  public void testJsonDumpWithExpose() throws Exception {\n+    String json = jsonDumpWithExpose(true);\n+    String expect = IOUtils.toString(CL.getResourceAsStream(\"EgressFetchHandlerExposeTest.json\"), StandardCharsets.UTF_8);\n+\n+    assertEquals(expect.trim(), json);\n+  }\n+\n+  private String jsonDumpWithExpose(boolean expose) throws Exception {\n+    Map<String, String> labels = new HashMap<String, String>();\n+    labels.put(\"foo\", \"bar\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17db98ca7c504beb8354865e9f7ff5433f5c61d0"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c95ac6558a86500da601a6960b85f6196663dc47", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/c95ac6558a86500da601a6960b85f6196663dc47", "committedDate": "2020-02-10T11:19:44Z", "message": "Use UUID for owner and producer"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3419, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}