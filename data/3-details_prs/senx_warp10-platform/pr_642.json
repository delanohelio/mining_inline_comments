{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NzUyMTAy", "number": 642, "title": "Add functions from HHCodeHelper", "bodyText": "This allows getting the center or the bounding box given one hhcode.\nAllow also to compute neighboring cells.", "createdAt": "2020-01-24T09:42:39Z", "url": "https://github.com/senx/warp10-platform/pull/642", "merged": true, "mergeCommit": {"oid": "dcf6b546ee7565b6b73c2aa34c801bf9e1bbecc1"}, "closed": true, "closedAt": "2020-01-24T15:03:30Z", "author": {"login": "steven-gueguen"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8iHRZAH2gAyMzY2NzUyMTAyOmUwNDliZTdmMWEyZjNiYTMxYmZiY2I3ZGU3YTUyNDFmMDFhZTIyNWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9gOpOAH2gAyMzY2NzUyMTAyOjIyMzM2N2Y2NjY2YjRjNzM3YmRiYTUxMTg2Y2FjNWMwYWNmOWY4MmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e049be7f1a2f3ba31bfbcb7de7a5241f01ae225b", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/e049be7f1a2f3ba31bfbcb7de7a5241f01ae225b", "committedDate": "2020-01-21T14:35:06Z", "message": "Add functions on HHCode from GeoXPLib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10d4aef98c01bc33ad9dfc596108b89ebf984216", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/10d4aef98c01bc33ad9dfc596108b89ebf984216", "committedDate": "2020-01-23T09:30:03Z", "message": "Merge branch 'master' of github.com:senx/warp10-platform into geoxplib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47898769526fc2c33cd0657b85e0d9227d79f70d", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/47898769526fc2c33cd0657b85e0d9227d79f70d", "committedDate": "2020-01-24T09:29:01Z", "message": "Merge branch 'master' of github.com:senx/warp10-platform into geoxplib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bae020a760a8f4dc6d7e91005dd774a22d3e715f", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/bae020a760a8f4dc6d7e91005dd774a22d3e715f", "committedDate": "2020-01-24T09:36:45Z", "message": "Formating"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd9ce3dac7f555917244bc65eb6a016f328f038", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/5cd9ce3dac7f555917244bc65eb6a016f328f038", "committedDate": "2020-01-24T09:37:13Z", "message": "Merge branch 'master' of github.com:senx/warp10-platform into geoxplib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "463f4b2e627fde894c61fdeb531d9e3c770170f6", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/463f4b2e627fde894c61fdeb531d9e3c770170f6", "committedDate": "2020-01-24T12:39:01Z", "message": "Factorize HHCODE functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1389db2a42a5161aa6d6752f298035654d66c118", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/1389db2a42a5161aa6d6752f298035654d66c118", "committedDate": "2020-01-24T12:39:23Z", "message": "Merge branch 'master' of github.com:senx/warp10-platform into geoxplib"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTMzOTc2", "url": "https://github.com/senx/warp10-platform/pull/642#pullrequestreview-347933976", "createdAt": "2020-01-24T12:53:46Z", "commit": {"oid": "1389db2a42a5161aa6d6752f298035654d66c118"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjo1Mzo0NlrOFhcxKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMjo1NzoxMFrOFhc2RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxODY2NA==", "bodyText": "This should not be a field, it should be a local variable updated for each invocation of the function", "url": "https://github.com/senx/warp10-platform/pull/642#discussion_r370618664", "createdAt": "2020-01-24T12:53:46Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/HHCODEFUNC.java", "diffHunk": "@@ -0,0 +1,138 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.functions;\n+\n+import com.geoxp.geo.HHCodeHelper;\n+import com.google.common.primitives.Longs;\n+\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n+\n+/**\n+ * Template function to interface with HHCodeHelper\n+ */\n+public class HHCODEFUNC extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+\n+  public enum HHCodeAction {\n+    NORTH, SOUTH, EAST, WEST, NORTH_EAST, NORTH_WEST, SOUTH_EAST, SOUTH_WEST, BBOX, CENTER\n+  }\n+\n+  private HHCodeAction action;\n+  private boolean isLongFormat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1389db2a42a5161aa6d6752f298035654d66c118"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxODkzOQ==", "bodyText": "Don't reference the stack, and in the present case this would be only 2 elements.", "url": "https://github.com/senx/warp10-platform/pull/642#discussion_r370618939", "createdAt": "2020-01-24T12:54:28Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/HHCODEFUNC.java", "diffHunk": "@@ -0,0 +1,138 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.functions;\n+\n+import com.geoxp.geo.HHCodeHelper;\n+import com.google.common.primitives.Longs;\n+\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n+\n+/**\n+ * Template function to interface with HHCodeHelper\n+ */\n+public class HHCODEFUNC extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+\n+  public enum HHCodeAction {\n+    NORTH, SOUTH, EAST, WEST, NORTH_EAST, NORTH_WEST, SOUTH_EAST, SOUTH_WEST, BBOX, CENTER\n+  }\n+\n+  private HHCodeAction action;\n+  private boolean isLongFormat;\n+  private int res;\n+\n+  public HHCODEFUNC(String name, HHCodeAction action) {\n+    super(name);\n+    this.action = action;\n+    this.isLongFormat = true;\n+  }\n+\n+  @Override\n+  public Object apply(WarpScriptStack stack) throws WarpScriptException {\n+\n+    Object o = stack.pop();\n+\n+    if (!(o instanceof Long)) {\n+      throw new WarpScriptException(getName() + \" expects resolution (even number between 2 and 30) and a boolean as the top 3 elements of the stack.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1389db2a42a5161aa6d6752f298035654d66c118"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxOTA1Ng==", "bodyText": "use a local variable", "url": "https://github.com/senx/warp10-platform/pull/642#discussion_r370619056", "createdAt": "2020-01-24T12:54:49Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/HHCODEFUNC.java", "diffHunk": "@@ -0,0 +1,138 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.functions;\n+\n+import com.geoxp.geo.HHCodeHelper;\n+import com.google.common.primitives.Longs;\n+\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n+\n+/**\n+ * Template function to interface with HHCodeHelper\n+ */\n+public class HHCODEFUNC extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+\n+  public enum HHCodeAction {\n+    NORTH, SOUTH, EAST, WEST, NORTH_EAST, NORTH_WEST, SOUTH_EAST, SOUTH_WEST, BBOX, CENTER\n+  }\n+\n+  private HHCodeAction action;\n+  private boolean isLongFormat;\n+  private int res;\n+\n+  public HHCODEFUNC(String name, HHCodeAction action) {\n+    super(name);\n+    this.action = action;\n+    this.isLongFormat = true;\n+  }\n+\n+  @Override\n+  public Object apply(WarpScriptStack stack) throws WarpScriptException {\n+\n+    Object o = stack.pop();\n+\n+    if (!(o instanceof Long)) {\n+      throw new WarpScriptException(getName() + \" expects resolution (even number between 2 and 30) and a boolean as the top 3 elements of the stack.\");\n+    }\n+\n+    res = ((Number) o).intValue();\n+\n+    if (0 != res && (res < 2 || res > 30 || (0 != (res & 1)))) {\n+      throw new WarpScriptException(getName() + \" expects a maximum resolution which is an even number between 2 and 30 or 0.\");\n+    }\n+\n+\n+    Object hhcode = stack.pop();\n+\n+    long hh;\n+    this.isLongFormat = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1389db2a42a5161aa6d6752f298035654d66c118"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxOTQ1NA==", "bodyText": "Same goes for res, make it a local variable", "url": "https://github.com/senx/warp10-platform/pull/642#discussion_r370619454", "createdAt": "2020-01-24T12:55:48Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/HHCODEFUNC.java", "diffHunk": "@@ -0,0 +1,138 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.functions;\n+\n+import com.geoxp.geo.HHCodeHelper;\n+import com.google.common.primitives.Longs;\n+\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n+\n+/**\n+ * Template function to interface with HHCodeHelper\n+ */\n+public class HHCODEFUNC extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+\n+  public enum HHCodeAction {\n+    NORTH, SOUTH, EAST, WEST, NORTH_EAST, NORTH_WEST, SOUTH_EAST, SOUTH_WEST, BBOX, CENTER\n+  }\n+\n+  private HHCodeAction action;\n+  private boolean isLongFormat;\n+  private int res;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1389db2a42a5161aa6d6752f298035654d66c118"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxOTk3Mw==", "bodyText": "drop reference of isLongFormat, simply return a long and in apply convert to string at the given resolution if the input was a string", "url": "https://github.com/senx/warp10-platform/pull/642#discussion_r370619973", "createdAt": "2020-01-24T12:57:10Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/HHCODEFUNC.java", "diffHunk": "@@ -0,0 +1,138 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.functions;\n+\n+import com.geoxp.geo.HHCodeHelper;\n+import com.google.common.primitives.Longs;\n+\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n+\n+/**\n+ * Template function to interface with HHCodeHelper\n+ */\n+public class HHCODEFUNC extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+\n+  public enum HHCodeAction {\n+    NORTH, SOUTH, EAST, WEST, NORTH_EAST, NORTH_WEST, SOUTH_EAST, SOUTH_WEST, BBOX, CENTER\n+  }\n+\n+  private HHCodeAction action;\n+  private boolean isLongFormat;\n+  private int res;\n+\n+  public HHCODEFUNC(String name, HHCodeAction action) {\n+    super(name);\n+    this.action = action;\n+    this.isLongFormat = true;\n+  }\n+\n+  @Override\n+  public Object apply(WarpScriptStack stack) throws WarpScriptException {\n+\n+    Object o = stack.pop();\n+\n+    if (!(o instanceof Long)) {\n+      throw new WarpScriptException(getName() + \" expects resolution (even number between 2 and 30) and a boolean as the top 3 elements of the stack.\");\n+    }\n+\n+    res = ((Number) o).intValue();\n+\n+    if (0 != res && (res < 2 || res > 30 || (0 != (res & 1)))) {\n+      throw new WarpScriptException(getName() + \" expects a maximum resolution which is an even number between 2 and 30 or 0.\");\n+    }\n+\n+\n+    Object hhcode = stack.pop();\n+\n+    long hh;\n+    this.isLongFormat = true;\n+\n+    if (hhcode instanceof Long) {\n+      hh = (long) hhcode;\n+    } else if (hhcode instanceof String) {\n+      String hhstr = hhcode.toString();\n+      if (hhstr.length() > 16) {\n+        throw new WarpScriptException(getName() + \" expects an hexadecimal HHCode string of length <= 16\");\n+      } else if (hhstr.length() < 16) {\n+        hhcode = new StringBuilder(hhstr).append(\"0000000000000000\");\n+        ((StringBuilder) hhcode).setLength(16);\n+      }\n+      hh = Long.parseUnsignedLong(hhcode.toString(), 16);\n+      this.isLongFormat = false;\n+    } else if (hhcode instanceof byte[]) {\n+      hh = Longs.fromByteArray((byte[]) hhcode);\n+    } else {\n+      throw new WarpScriptException(getName() + \" expects a long, a string or a byte array.\");\n+    }\n+\n+    switch (this.action) {\n+      case NORTH:\n+        stack.push(this.manageFormat(HHCodeHelper.northHHCode(hh, this.res)));\n+        break;\n+      case SOUTH:\n+        stack.push(this.manageFormat(HHCodeHelper.southHHCode(hh, this.res)));\n+        break;\n+      case EAST:\n+        stack.push(this.manageFormat(HHCodeHelper.eastHHCode(hh, this.res)));\n+        break;\n+      case WEST:\n+        stack.push(this.manageFormat(HHCodeHelper.westHHCode(hh, this.res)));\n+        break;\n+      case NORTH_EAST:\n+        stack.push(this.manageFormat(HHCodeHelper.northEastHHCode(hh, this.res)));\n+        break;\n+      case NORTH_WEST:\n+        stack.push(this.manageFormat(HHCodeHelper.northWestHHCode(hh, this.res)));\n+        break;\n+      case SOUTH_EAST:\n+        stack.push(this.manageFormat(HHCodeHelper.southEastHHCode(hh, this.res)));\n+        break;\n+      case SOUTH_WEST:\n+        stack.push(this.manageFormat(HHCodeHelper.southWestHHCode(hh, this.res)));\n+        break;\n+      case BBOX:\n+        double[] bbox = HHCodeHelper.getHHCodeBBox(hh, this.res);\n+        stack.push(bbox[0]);\n+        stack.push(bbox[1]);\n+        stack.push(bbox[2]);\n+        stack.push(bbox[3]);\n+        break;\n+      case CENTER:\n+        double[] latlon = HHCodeHelper.getCenterLatLon(hh, this.res);\n+        stack.push(latlon[0]);\n+        stack.push(latlon[1]);\n+        break;\n+      default:\n+        throw new WarpScriptException(\"Unknown HHCODE action\");\n+    }\n+\n+    return stack;\n+  }\n+\n+  private Object manageFormat(long hh) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1389db2a42a5161aa6d6752f298035654d66c118"}, "originalPosition": 129}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "104c793a1803ded3fc80779163563afd89a976ae", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/104c793a1803ded3fc80779163563afd89a976ae", "committedDate": "2020-01-24T13:30:19Z", "message": "Use local variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTcwODQy", "url": "https://github.com/senx/warp10-platform/pull/642#pullrequestreview-347970842", "createdAt": "2020-01-24T14:02:08Z", "commit": {"oid": "104c793a1803ded3fc80779163563afd89a976ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDowMjowOFrOFheidQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDowMjowOFrOFheidQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0NzY2OQ==", "bodyText": "Actually since you accept either LONG, STRING or BYTES as input it would be more logical to output a byte array if the input was a byte array. So instead of passing isLongFormat, why not simply pass the input and check its type in manageFormat?", "url": "https://github.com/senx/warp10-platform/pull/642#discussion_r370647669", "createdAt": "2020-01-24T14:02:08Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/HHCODEFUNC.java", "diffHunk": "@@ -0,0 +1,135 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.functions;\n+\n+import com.geoxp.geo.HHCodeHelper;\n+import com.google.common.primitives.Longs;\n+\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n+\n+/**\n+ * Template function to interface with HHCodeHelper\n+ */\n+public class HHCODEFUNC extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+\n+  public enum HHCodeAction {\n+    NORTH, SOUTH, EAST, WEST, NORTH_EAST, NORTH_WEST, SOUTH_EAST, SOUTH_WEST, BBOX, CENTER\n+  }\n+\n+  private HHCodeAction action;\n+\n+  public HHCODEFUNC(String name, HHCodeAction action) {\n+    super(name);\n+    this.action = action;\n+  }\n+\n+  @Override\n+  public Object apply(WarpScriptStack stack) throws WarpScriptException {\n+\n+    Object o = stack.pop();\n+\n+    if (!(o instanceof Long)) {\n+      throw new WarpScriptException(getName() + \" expects resolution (even number between 2 and 30).\");\n+    }\n+\n+    int res = ((Number) o).intValue();\n+\n+    if (0 != res && (res < 2 || res > 30 || (0 != (res & 1)))) {\n+      throw new WarpScriptException(getName() + \" expects a maximum resolution which is an even number between 2 and 30 or 0.\");\n+    }\n+\n+\n+    Object hhcode = stack.pop();\n+\n+    long hh;\n+    boolean isLongFormat = true;\n+\n+    if (hhcode instanceof Long) {\n+      hh = (long) hhcode;\n+    } else if (hhcode instanceof String) {\n+      String hhstr = hhcode.toString();\n+      if (hhstr.length() > 16) {\n+        throw new WarpScriptException(getName() + \" expects an hexadecimal HHCode string of length <= 16\");\n+      } else if (hhstr.length() < 16) {\n+        hhcode = new StringBuilder(hhstr).append(\"0000000000000000\");\n+        ((StringBuilder) hhcode).setLength(16);\n+      }\n+      hh = Long.parseUnsignedLong(hhcode.toString(), 16);\n+      isLongFormat = false;\n+    } else if (hhcode instanceof byte[]) {\n+      hh = Longs.fromByteArray((byte[]) hhcode);\n+    } else {\n+      throw new WarpScriptException(getName() + \" expects a long, a string or a byte array.\");\n+    }\n+\n+    switch (this.action) {\n+      case NORTH:\n+        stack.push(this.manageFormat(HHCodeHelper.northHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case SOUTH:\n+        stack.push(this.manageFormat(HHCodeHelper.southHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case EAST:\n+        stack.push(this.manageFormat(HHCodeHelper.eastHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case WEST:\n+        stack.push(this.manageFormat(HHCodeHelper.westHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case NORTH_EAST:\n+        stack.push(this.manageFormat(HHCodeHelper.northEastHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case NORTH_WEST:\n+        stack.push(this.manageFormat(HHCodeHelper.northWestHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case SOUTH_EAST:\n+        stack.push(this.manageFormat(HHCodeHelper.southEastHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case SOUTH_WEST:\n+        stack.push(this.manageFormat(HHCodeHelper.southWestHHCode(hh, res), res, isLongFormat));\n+        break;\n+      case BBOX:\n+        double[] bbox = HHCodeHelper.getHHCodeBBox(hh, res);\n+        stack.push(bbox[0]);\n+        stack.push(bbox[1]);\n+        stack.push(bbox[2]);\n+        stack.push(bbox[3]);\n+        break;\n+      case CENTER:\n+        double[] latlon = HHCodeHelper.getCenterLatLon(hh, res);\n+        stack.push(latlon[0]);\n+        stack.push(latlon[1]);\n+        break;\n+      default:\n+        throw new WarpScriptException(\"Unknown HHCODE action\");\n+    }\n+\n+    return stack;\n+  }\n+\n+  private Object manageFormat(long hh, int res, boolean isLongFormat) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "104c793a1803ded3fc80779163563afd89a976ae"}, "originalPosition": 126}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "693dcb640192e2a7773109368dce6f3378c693f4", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/693dcb640192e2a7773109368dce6f3378c693f4", "committedDate": "2020-01-24T14:39:42Z", "message": "Manage output as a byte array"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56888547ea8a92b0459518fb6332da2177f86e35", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/56888547ea8a92b0459518fb6332da2177f86e35", "committedDate": "2020-01-24T14:40:00Z", "message": "Merge branch 'master' of github.com:senx/warp10-platform into geoxplib"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MDAxNTQ4", "url": "https://github.com/senx/warp10-platform/pull/642#pullrequestreview-348001548", "createdAt": "2020-01-24T14:47:35Z", "commit": {"oid": "56888547ea8a92b0459518fb6332da2177f86e35"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0NzozNVrOFhf9KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDo0NzozNVrOFhf9KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDg4OQ==", "bodyText": "Actually for a HHCode resolution can be up to 32, it is only for cells in a GeoXPShape that resolution is limited to 30.", "url": "https://github.com/senx/warp10-platform/pull/642#discussion_r370670889", "createdAt": "2020-01-24T14:47:35Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/HHCODEFUNC.java", "diffHunk": "@@ -0,0 +1,135 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.functions;\n+\n+import com.geoxp.geo.HHCodeHelper;\n+import com.google.common.primitives.Longs;\n+\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n+\n+/**\n+ * Template function to interface with HHCodeHelper\n+ */\n+public class HHCODEFUNC extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+\n+  public enum HHCodeAction {\n+    NORTH, SOUTH, EAST, WEST, NORTH_EAST, NORTH_WEST, SOUTH_EAST, SOUTH_WEST, BBOX, CENTER\n+  }\n+\n+  private HHCodeAction action;\n+\n+  public HHCODEFUNC(String name, HHCodeAction action) {\n+    super(name);\n+    this.action = action;\n+  }\n+\n+  @Override\n+  public Object apply(WarpScriptStack stack) throws WarpScriptException {\n+\n+    Object o = stack.pop();\n+\n+    if (!(o instanceof Long)) {\n+      throw new WarpScriptException(getName() + \" expects resolution (even number between 2 and 30).\");\n+    }\n+\n+    int res = ((Number) o).intValue();\n+\n+    if (0 != res && (res < 2 || res > 30 || (0 != (res & 1)))) {\n+      throw new WarpScriptException(getName() + \" expects a maximum resolution which is an even number between 2 and 30 or 0.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56888547ea8a92b0459518fb6332da2177f86e35"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "223367f6666b4c737bdba51186cac5c0acf9f82b", "author": {"user": {"login": "steven-gueguen", "name": "Steven GUEGUEN"}}, "url": "https://github.com/senx/warp10-platform/commit/223367f6666b4c737bdba51186cac5c0acf9f82b", "committedDate": "2020-01-24T14:57:16Z", "message": "Fix max resolution"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3401, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}