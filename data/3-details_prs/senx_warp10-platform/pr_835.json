{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MjEzMDA4", "number": 835, "title": "Initial commit of mapper.geo.fence, added constants for geo mappers", "bodyText": "", "createdAt": "2020-09-18T10:04:02Z", "url": "https://github.com/senx/warp10-platform/pull/835", "merged": true, "mergeCommit": {"oid": "a9e70a711142daded1f07396ee34f24869542ac7"}, "closed": true, "closedAt": "2020-09-22T12:13:41Z", "author": {"login": "hbs"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKAswlAH2gAyNDg5MjEzMDA4OmE0YTcxZDliMzlhNDE0NmIwMTIzOTk2OTMzYTM0ZDEwMzU2MDM3NTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLVWPVAFqTQ5MzMxODA0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4a71d9b39a4146b0123996933a34d1035603753", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/a4a71d9b39a4146b0123996933a34d1035603753", "committedDate": "2020-09-18T07:45:22Z", "message": "Initial commit of mapper.geo.fence, added constants for geo mappers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNDk2NzUx", "url": "https://github.com/senx/warp10-platform/pull/835#pullrequestreview-492496751", "createdAt": "2020-09-21T11:22:27Z", "commit": {"oid": "a4a71d9b39a4146b0123996933a34d1035603753"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToyMjoyN1rOHVLNPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToyMzowNVrOHVLOaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2NTc1Ng==", "bodyText": "The comment does not match the code.\nOn top of that, I'm not sure returning false for GeoTimeSerie.NO_LOCATION is what most users expect. I'd rather return null for no location.", "url": "https://github.com/senx/warp10-platform/pull/835#discussion_r491965756", "createdAt": "2020-09-21T11:22:27Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/mapper/MapperGeoFence.java", "diffHunk": "@@ -0,0 +1,107 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.mapper;\n+\n+import io.warp10.continuum.gts.GeoTimeSerie;\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.StackUtils;\n+import io.warp10.script.WarpScriptLib;\n+import io.warp10.script.WarpScriptMapperFunction;\n+import io.warp10.script.WarpScriptStackFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.functions.GEOPACK;\n+\n+import com.geoxp.GeoXPLib;\n+import com.geoxp.GeoXPLib.GeoXPShape;\n+\n+/**\n+ * Mapper which returns true or false whether a point location falls within or outside a given GeoShape.\n+ */\n+public class MapperGeoFence extends NamedWarpScriptFunction implements WarpScriptMapperFunction {\n+  \n+  public static class Builder extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+    \n+    public Builder(String name) {\n+      super(name);\n+    }\n+    \n+    @Override\n+    public Object apply(WarpScriptStack stack) throws WarpScriptException {\n+      Object shape = stack.pop();\n+      \n+      if (!(shape instanceof GeoXPShape)) {\n+        throw new WarpScriptException(getName() + \" expects a Geo Shape.\");\n+      }\n+      \n+      stack.push(new MapperGeoFence(getName(), (GeoXPShape) shape));\n+      return stack;\n+    }\n+  }\n+\n+  private final GeoXPShape shape;\n+  \n+  /**\n+   * Default constructor, the timezone will be UTC\n+   */\n+  public MapperGeoFence(String name, GeoXPShape shape) {\n+    super(name);\n+    this.shape = shape;\n+  }\n+  \n+  @Override\n+  public Object apply(Object[] args) throws WarpScriptException {\n+    long tick = (long) args[0];\n+    long[] locations = (long[]) args[4];\n+    long[] elevations = (long[]) args[5];\n+    Object[] values = (Object[]) args[6];\n+\n+    if (values.length < 1) {\n+      return new Object[] { tick, GeoTimeSerie.NO_LOCATION, GeoTimeSerie.NO_ELEVATION, null };\n+    }\n+    \n+    long location = locations[0];\n+    long elevation = elevations[0];\n+    \n+    //\n+    // If there is less than one value or if there is no location associated with the\n+    // value, return null as the tick value.\n+    //\n+   \n+    if (null == values[0] || GeoTimeSerie.NO_LOCATION == location || !GeoXPLib.isGeoXPPointInGeoXPShape(location, this.shape)) {\n+      return new Object[] { tick, location, elevation, false };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a71d9b39a4146b0123996933a34d1035603753"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2NjA1OQ==", "bodyText": "Timezone of the GeoXPShape?", "url": "https://github.com/senx/warp10-platform/pull/835#discussion_r491966059", "createdAt": "2020-09-21T11:23:05Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/mapper/MapperGeoFence.java", "diffHunk": "@@ -0,0 +1,107 @@\n+//\n+//   Copyright 2020  SenX S.A.S.\n+//\n+//   Licensed under the Apache License, Version 2.0 (the \"License\");\n+//   you may not use this file except in compliance with the License.\n+//   You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+//   Unless required by applicable law or agreed to in writing, software\n+//   distributed under the License is distributed on an \"AS IS\" BASIS,\n+//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+//   See the License for the specific language governing permissions and\n+//   limitations under the License.\n+//\n+\n+package io.warp10.script.mapper;\n+\n+import io.warp10.continuum.gts.GeoTimeSerie;\n+import io.warp10.script.NamedWarpScriptFunction;\n+import io.warp10.script.StackUtils;\n+import io.warp10.script.WarpScriptLib;\n+import io.warp10.script.WarpScriptMapperFunction;\n+import io.warp10.script.WarpScriptStackFunction;\n+import io.warp10.script.WarpScriptException;\n+import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.functions.GEOPACK;\n+\n+import com.geoxp.GeoXPLib;\n+import com.geoxp.GeoXPLib.GeoXPShape;\n+\n+/**\n+ * Mapper which returns true or false whether a point location falls within or outside a given GeoShape.\n+ */\n+public class MapperGeoFence extends NamedWarpScriptFunction implements WarpScriptMapperFunction {\n+  \n+  public static class Builder extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+    \n+    public Builder(String name) {\n+      super(name);\n+    }\n+    \n+    @Override\n+    public Object apply(WarpScriptStack stack) throws WarpScriptException {\n+      Object shape = stack.pop();\n+      \n+      if (!(shape instanceof GeoXPShape)) {\n+        throw new WarpScriptException(getName() + \" expects a Geo Shape.\");\n+      }\n+      \n+      stack.push(new MapperGeoFence(getName(), (GeoXPShape) shape));\n+      return stack;\n+    }\n+  }\n+\n+  private final GeoXPShape shape;\n+  \n+  /**\n+   * Default constructor, the timezone will be UTC\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a71d9b39a4146b0123996933a34d1035603753"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5668191c76f446255c4079342eaf5c2ac6ecf554", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/5668191c76f446255c4079342eaf5c2ac6ecf554", "committedDate": "2020-09-21T11:30:13Z", "message": "Addressed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc71e1bbe4d6e40400efe07e43f9afb36c3c97b", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/6bc71e1bbe4d6e40400efe07e43f9afb36c3c97b", "committedDate": "2020-09-21T15:57:23Z", "message": "Simplified conditional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMzE4MDQ5", "url": "https://github.com/senx/warp10-platform/pull/835#pullrequestreview-493318049", "createdAt": "2020-09-22T10:22:42Z", "commit": {"oid": "6bc71e1bbe4d6e40400efe07e43f9afb36c3c97b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3215, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}