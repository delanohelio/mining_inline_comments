{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NTAwMDYy", "number": 802, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTozMzozNVrOEUiTTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTo0NDoxOFrOEVDwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTY4OTczOnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/json/JsonUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTozMzozNVrOG6yvgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTozMzozNVrOG6yvgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMwMTk1NQ==", "bodyText": "Shouldn't we leave the possibility to return JSON content too? Because the transformer may use an existing implementation of a serializer which will produce JSON. The validity of the returned JSON would be the responsability of the called entity as it was in the previous implementation.", "url": "https://github.com/senx/warp10-platform/pull/802#discussion_r464301955", "createdAt": "2020-08-03T09:33:35Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/json/JsonUtils.java", "diffHunk": "@@ -57,33 +52,35 @@ public void serialize(Object value, JsonGenerator gen, SerializerProvider serial\n   }\n \n   /**\n-   * Used to swap UnknownSerializer and BeanSerializer for CustomEncodersSerializer.\n+   * Used to swap UnknownSerializer and BeanSerializer for CustomSerializer.\n    */\n   public static class NotSerializedToCustomSerializedModifier extends BeanSerializerModifier {\n     @Override\n     public JsonSerializer<?> modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer) {\n       if (serializer instanceof UnknownSerializer || serializer instanceof BeanSerializer) {\n-        return customEncodersSerializer;\n+        return CUSTOM_SERIALIZER;\n       } else {\n         return serializer;\n       }\n     }\n   }\n \n-  public static class CustomEncodersSerializer extends JsonSerializer<Object> {\n+  /**\n+   * Handles custom serialization based on transformers.\n+   */\n+  public static class CustomSerializer extends JsonSerializer<Object> {\n     @Override\n     public void serialize(Object value, JsonGenerator gen, SerializerProvider serializers) throws IOException {\n-      if (null != encoders && !encoders.isEmpty()) {\n-        StringBuilder sb = new StringBuilder();\n-        boolean encoded = false;\n-        for (JsonEncoder encoder: encoders) {\n-          encoded = encoder.addElement(sb, value);\n-          if (encoded) {\n+      if (null != transformers && !transformers.isEmpty()) {\n+        JsonTransformer.TransformationResult transfRes = null;\n+        for (JsonTransformer transformer: transformers) {\n+          transfRes = transformer.transform(value);\n+          if (null != transfRes && transfRes.transformed) {\n             break;\n           }\n         }\n-        if (encoded) {\n-          gen.writeRaw(sb.toString());\n+        if (null != transfRes && transfRes.transformed) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9d71aecbb13e7b31824d1c9cea15c622d7b4ee6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTE3MDQ3OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/json/JsonUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNTo0NDoxOFrOG7mYSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzo1MDo1MFrOG7-S8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0Nzk3Nw==", "bodyText": "Add comments describing the meaning of those fields", "url": "https://github.com/senx/warp10-platform/pull/802#discussion_r465147977", "createdAt": "2020-08-04T15:44:18Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/json/JsonUtils.java", "diffHunk": "@@ -95,20 +96,41 @@ public void serialize(Object value, JsonGenerator gen, SerializerProvider serial\n     }\n   }\n \n-  public static final NullKeySerializer nullKeySerializer = new NullKeySerializer();\n-  public static final CustomEncodersSerializer customEncodersSerializer = new CustomEncodersSerializer();\n+  private static final NullKeySerializer NULL_KEY_SERIALIZER = new NullKeySerializer();\n+  private static final CustomSerializer CUSTOM_SERIALIZER = new CustomSerializer();\n \n   //\n   // ObjectMapper instances are thread-safe, so we can safely use a single static instance.\n   //\n-  private static final ObjectMapper strictMapper;\n-  private static final ObjectMapper looseMapper;\n+  private static final ObjectMapper STRICT_MAPPER;\n+  private static final ObjectMapper LOOSE_MAPPER;\n+\n+  public interface JsonTransformer {\n+    class TransformationResult {\n+      public final boolean transformed;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6835df3dc2909fb96adc75236ecaee559e56638d"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUzOTgyNw==", "bodyText": "Also add getter method so the fields can be set private", "url": "https://github.com/senx/warp10-platform/pull/802#discussion_r465539827", "createdAt": "2020-08-05T07:50:50Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/json/JsonUtils.java", "diffHunk": "@@ -95,20 +96,41 @@ public void serialize(Object value, JsonGenerator gen, SerializerProvider serial\n     }\n   }\n \n-  public static final NullKeySerializer nullKeySerializer = new NullKeySerializer();\n-  public static final CustomEncodersSerializer customEncodersSerializer = new CustomEncodersSerializer();\n+  private static final NullKeySerializer NULL_KEY_SERIALIZER = new NullKeySerializer();\n+  private static final CustomSerializer CUSTOM_SERIALIZER = new CustomSerializer();\n \n   //\n   // ObjectMapper instances are thread-safe, so we can safely use a single static instance.\n   //\n-  private static final ObjectMapper strictMapper;\n-  private static final ObjectMapper looseMapper;\n+  private static final ObjectMapper STRICT_MAPPER;\n+  private static final ObjectMapper LOOSE_MAPPER;\n+\n+  public interface JsonTransformer {\n+    class TransformationResult {\n+      public final boolean transformed;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0Nzk3Nw=="}, "originalCommit": {"oid": "6835df3dc2909fb96adc75236ecaee559e56638d"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1275, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}