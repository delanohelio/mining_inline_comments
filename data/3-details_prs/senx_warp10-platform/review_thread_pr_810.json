{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMTc2NDQ4", "number": 810, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTowODo0MVrOEUpNPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNDoyMlrOEU8SCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDgyMTEwOnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/ASREGS.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNTowODo0MVrOG69W0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNzowNDo0N1rOG7BeTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3NTg1OA==", "bodyText": "What happens if you initially had 1 2 3 [ 1 2 2 ] STORE? It seems that register 2 will end up with value 2 instead of 3.", "url": "https://github.com/senx/warp10-platform/pull/810#discussion_r464475858", "createdAt": "2020-08-03T15:08:41Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/ASREGS.java", "diffHunk": "@@ -242,16 +242,40 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n             }\n           } else if (symbol instanceof ENDLIST) {\n             int idx = i - 2;\n+            int nbOfReg = 0; // Keeps track of the number of registers in this list\n             while (idx >= 0 && !(statements.get(idx) instanceof MARK)) {\n               Object stmt = statements.get(idx);\n               if (stmt instanceof String) {\n                 Integer regno = varregs.get(stmt);\n                 if (null != regno) {\n                   statements.set(idx, (long) regno);\n+                  nbOfReg++;\n                 }\n+              } else if (stmt instanceof Long) {\n+                nbOfReg++;\n               }\n               idx--;\n-            }            \n+            }\n+\n+            // Further optimization: if the list contains only registers, replace by POPRs which is much faster.\n+            // For instance, replace [ 3 7 9 ] STORE by NOOP POPR9 POPR7 POPR3 NOOP NOOP.\n+            int listLength = i - idx - 2;\n+            if (nbOfReg == listLength) {\n+              statements.set(idx, NOOP); // replace MARK\n+              statements.set(i - 1, NOOP); // replace ENDLIST\n+              statements.set(i, NOOP); // replace STORE\n+\n+              // As we must flip the order of the list, we must store the registers first.\n+              int[] regInList = new int[listLength];\n+              for (int listIndex = 0; listIndex < listLength; listIndex++) {\n+                regInList[listIndex] = ((Long) statements.get(idx + 1 + listIndex)).intValue();\n+              }\n+\n+              // Replace register number by POPRs. Be careful, we flip the list order!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1908def4919131c41cb4ef3855e8fe9e3ca5f24b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ4NzgxNQ==", "bodyText": "Good question, I didn't think about this case.\nTurns out\n  1 2 3 [ 1 2 2 ] STORE\n  2 LOAD\n\nLeaves 2 on the stack as STORE iterates through the array backwards poping and storing. So the behavior is the same with or without ASREGS.\nHowever there is an other bug, I'm investigating.", "url": "https://github.com/senx/warp10-platform/pull/810#discussion_r464487815", "createdAt": "2020-08-03T15:27:44Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/ASREGS.java", "diffHunk": "@@ -242,16 +242,40 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n             }\n           } else if (symbol instanceof ENDLIST) {\n             int idx = i - 2;\n+            int nbOfReg = 0; // Keeps track of the number of registers in this list\n             while (idx >= 0 && !(statements.get(idx) instanceof MARK)) {\n               Object stmt = statements.get(idx);\n               if (stmt instanceof String) {\n                 Integer regno = varregs.get(stmt);\n                 if (null != regno) {\n                   statements.set(idx, (long) regno);\n+                  nbOfReg++;\n                 }\n+              } else if (stmt instanceof Long) {\n+                nbOfReg++;\n               }\n               idx--;\n-            }            \n+            }\n+\n+            // Further optimization: if the list contains only registers, replace by POPRs which is much faster.\n+            // For instance, replace [ 3 7 9 ] STORE by NOOP POPR9 POPR7 POPR3 NOOP NOOP.\n+            int listLength = i - idx - 2;\n+            if (nbOfReg == listLength) {\n+              statements.set(idx, NOOP); // replace MARK\n+              statements.set(i - 1, NOOP); // replace ENDLIST\n+              statements.set(i, NOOP); // replace STORE\n+\n+              // As we must flip the order of the list, we must store the registers first.\n+              int[] regInList = new int[listLength];\n+              for (int listIndex = 0; listIndex < listLength; listIndex++) {\n+                regInList[listIndex] = ((Long) statements.get(idx + 1 + listIndex)).intValue();\n+              }\n+\n+              // Replace register number by POPRs. Be careful, we flip the list order!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3NTg1OA=="}, "originalCommit": {"oid": "1908def4919131c41cb4ef3855e8fe9e3ca5f24b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU0MzMxMA==", "bodyText": "I think we should consider fixing STORE in the process, 1 2 3 [ 1 2 2 ] STORE should really leave 3 in register 2, at least that is what would be expected.", "url": "https://github.com/senx/warp10-platform/pull/810#discussion_r464543310", "createdAt": "2020-08-03T17:04:47Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/ASREGS.java", "diffHunk": "@@ -242,16 +242,40 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n             }\n           } else if (symbol instanceof ENDLIST) {\n             int idx = i - 2;\n+            int nbOfReg = 0; // Keeps track of the number of registers in this list\n             while (idx >= 0 && !(statements.get(idx) instanceof MARK)) {\n               Object stmt = statements.get(idx);\n               if (stmt instanceof String) {\n                 Integer regno = varregs.get(stmt);\n                 if (null != regno) {\n                   statements.set(idx, (long) regno);\n+                  nbOfReg++;\n                 }\n+              } else if (stmt instanceof Long) {\n+                nbOfReg++;\n               }\n               idx--;\n-            }            \n+            }\n+\n+            // Further optimization: if the list contains only registers, replace by POPRs which is much faster.\n+            // For instance, replace [ 3 7 9 ] STORE by NOOP POPR9 POPR7 POPR3 NOOP NOOP.\n+            int listLength = i - idx - 2;\n+            if (nbOfReg == listLength) {\n+              statements.set(idx, NOOP); // replace MARK\n+              statements.set(i - 1, NOOP); // replace ENDLIST\n+              statements.set(i, NOOP); // replace STORE\n+\n+              // As we must flip the order of the list, we must store the registers first.\n+              int[] regInList = new int[listLength];\n+              for (int listIndex = 0; listIndex < listLength; listIndex++) {\n+                regInList[listIndex] = ((Long) statements.get(idx + 1 + listIndex)).intValue();\n+              }\n+\n+              // Replace register number by POPRs. Be careful, we flip the list order!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ3NTg1OA=="}, "originalCommit": {"oid": "1908def4919131c41cb4ef3855e8fe9e3ca5f24b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzkzNzM1OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/STORE.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozMToyOVrOG7ao-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozMToyOVrOG7ao-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1NTY0MQ==", "bodyText": "Use get(n) in the loop then a dropn instead of calling popn which will allocate a new array.", "url": "https://github.com/senx/warp10-platform/pull/810#discussion_r464955641", "createdAt": "2020-08-04T10:31:29Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/STORE.java", "diffHunk": "@@ -56,19 +56,22 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     }\n     \n     if (count > 0) {\n-      for (int i = count - 1; i >= 0; i--) {\n+      Object[] objectsToStore = stack.popn(count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53c3ef8fc9de140388ba455eb0e2305b821525fd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzk0NjMyOnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/ASREGS.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNDoyMlrOG7audw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNDoyMlrOG7audw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1NzA0Nw==", "bodyText": "Use a static set of maps instead of per call maps.", "url": "https://github.com/senx/warp10-platform/pull/810#discussion_r464957047", "createdAt": "2020-08-04T10:34:22Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/ASREGS.java", "diffHunk": "@@ -177,22 +175,16 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       }\n       \n       if (null == varregs.get(v.toString())) {\n-        regidx = inuse.nextClearBit(0);\n+        int regidx = inuse.nextClearBit(0);\n         inuse.set(regidx);\n         varregs.put(v.toString(), regidx);\n       }\n-    }    \n+    }\n \n-    numregs = regidx + 1;\n+    HashMap<Integer, PUSHR> PUSHRs = new HashMap<Integer, PUSHR>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53c3ef8fc9de140388ba455eb0e2305b821525fd"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1143, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}