{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MjM0OTIy", "number": 855, "title": "Add streamDelimiter parameter to HTTP definitions to stream the POST payload to the macro", "bodyText": "On 100s MB files, there is no noticeable difference in speed between the previous method (all the data in the request payload) and the stream method. However, the memory consumption of the stream method is, as expected, lower.\nExample of a script to read IBTrACS CSV files by splitting the stream on new lines.\n{\n  'path' '/ibtracs'\n  'prefix' false\n  'streamDelimiter' '%0A' 'UTF-8' ->BYTES\n  'macro' \n  <% \n    'payload' STORE\n    'request' STORE\n\n    $payload ISNULL NOT\n    <% \n    $payload 'UTF-8' BYTES->\n    'row' STORE\n\n      <%\n        $row ',' 13 SPLIT\n        'row_split' STORE\n        \n        $row_split 0 GET 'id' STORE\n\n        $row_split 6 GET TRIM ' ' 'T' REPLACE 'z' +\n        TOTIMESTAMP 'ts' STORE\n\n        $row_split 8 GET TODOUBLE 'lat' STORE\n        $row_split 9 GET TODOUBLE 'lon' STORE\n\n        $row_split 10 GET TRIM\n        DUP SIZE 0 >\n        <% TODOUBLE %>\n        <% DROP -1 %>\n        IFTE\n        'wind' STORE\n\n        $row_split 11 GET TRIM\n        DUP SIZE 0 >\n        <% TODOUBLE %>\n        <% DROP -1 %>\n        IFTE\n        'pressure' STORE\n\n        T 'valid_input' STORE\n      %>\n      <%\n        // Ingore invalid input\n        F 'valid_input' STORE\n      %>\n      <% %>\n      TRY\n      \n      $valid_input\n      <%\n        // Last id is stored in register 0\n        PUSHR0 $id !=\n        <%\n          // No previous encoders or current encoder is for another id\n          PUSHR0 ISNULL NOT\n          <%\n            // Pool of encoders stored in register 1.\n            PUSHR1 ISNULL\n            <% [] POPR1 %>\n            IFT\n\n            PUSHR1\n            $wind_encoder +! \n            $pressure_encoder +!\n            \n            SIZE 1000 > // UPDATE every 1000 encoders\n            <%\n              PUSHR1 $request 'params' GET 'token' GET 0 GET UPDATE\n              [] POPR1\n            %>\n            IFT\n          %>\n          <%\n            $request 'params' GET 'token' GET 0 GET\n            'token' STORE\n          %>\n          IFTE\n\n          $row_split 5 GET 'name' STORE \n\n          NEWENCODER\n          'stream.wind' RENAME\n          { 'id' $id } RELABEL\n          { 'name' $name } SETATTRIBUTES\n          'wind_encoder' STORE\n          NEWENCODER\n          'stream.pressure' RENAME\n          { 'id' $id } RELABEL\n          { 'name' $name } SETATTRIBUTES\n          'pressure_encoder' STORE\n\n          $id POPR0\n        %>\n        IFT\n\n        $wind_encoder\n        $ts $lat $lon NaN $wind ADDVALUE\n        DROP\n\n        $pressure_encoder\n        $ts $lat $lon NaN $pressure ADDVALUE\n        DROP\n      %>\n      IFT\n    %>\n    <%\n      PUSHR1 $request 'params' GET 'token' GET 0 GET UPDATE\n\n      {\n        'status' 200\n      } \n    %>\n    IFTE\n  %>\n  ASREGS\n}", "createdAt": "2020-09-28T15:37:05Z", "url": "https://github.com/senx/warp10-platform/pull/855", "merged": true, "mergeCommit": {"oid": "31c8a2fa50eee70dcd73fbfa2cb5d35e34a232c8"}, "closed": true, "closedAt": "2020-12-07T12:55:26Z", "author": {"login": "ftence"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNVQmFgH2gAyNDk0MjM0OTIyOmNhOTFjZDVlOGE4ZWU4MzIxYzA3N2FhMjEzZDkzMDA3ODA0MGIwY2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOP4ZUgH2gAyNDk0MjM0OTIyOjk0MzM3ZWJhN2VmZGEwZDk2NmM1YzYzZTc0YWY5ZGNjZmQ4NjYxZjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca91cd5e8a8ee8321c077aa213d930078040b0ca", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/ca91cd5e8a8ee8321c077aa213d930078040b0ca", "committedDate": "2020-09-28T15:24:23Z", "message": "Add stream mode to HTTP plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8a5bf9d1ad64a410e7a3a593c089217a39d33c", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/4e8a5bf9d1ad64a410e7a3a593c089217a39d33c", "committedDate": "2020-09-28T15:30:30Z", "message": "Remove unused import and update copyright notice"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODEyMTE1", "url": "https://github.com/senx/warp10-platform/pull/855#pullrequestreview-499812115", "createdAt": "2020-09-30T21:06:40Z", "commit": {"oid": "4e8a5bf9d1ad64a410e7a3a593c089217a39d33c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMTowNjo0MFrOHavVig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMToxNjozMFrOHavobw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwMDU4Ng==", "bodyText": "field should use plura to conform to the other field names.", "url": "https://github.com/senx/warp10-platform/pull/855#discussion_r497800586", "createdAt": "2020-09-30T21:06:40Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/plugins/http/HTTPWarp10Plugin.java", "diffHunk": "@@ -108,6 +109,11 @@\n    */\n   private Map<String, Boolean> parsePayloads = new HashMap<String, Boolean>();\n \n+  /**\n+   * Map of uri to stream delimiter.\n+   */\n+  private Map<String, Byte> streamDelimiter = new HashMap<String, Byte>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8a5bf9d1ad64a410e7a3a593c089217a39d33c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwNDA5NA==", "bodyText": "The lines below are unclear, they are executed even if isParsePayload is false, the fact that it works should be described in a comment.", "url": "https://github.com/senx/warp10-platform/pull/855#discussion_r497804094", "createdAt": "2020-09-30T21:13:46Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/plugins/http/WarpScriptHandler.java", "diffHunk": "@@ -103,14 +112,29 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n       }\n       params.put(\"headers\", headers);\n \n-      // Get the payload if the content-type is not application/x-www-form-urlencoded or we do not want to parse the payload\n-      if (!MimeTypes.Type.FORM_ENCODED.is(request.getContentType()) || !plugin.isParsePayload(prefix)) {\n-        byte[] payload = IOUtils.toByteArray(request.getInputStream());\n-        if (0 < payload.length) {\n-          params.put(\"payload\", payload);\n+      // We have to get the input stream before getting the parameters, else we won't be able to read it!\n+      InputStream inputStream = null;\n+\n+      // The input stream is handled very differently if the WarpScript is expecting a splitted stream or not.\n+      if (null == plugin.streamDelimiter(prefix)) {\n+        // Get the payload if the content-type is not application/x-www-form-urlencoded or we do not want to parse the payload\n+        if ((!MimeTypes.Type.FORM_ENCODED.is(request.getContentType()) || !plugin.isParsePayload(prefix))) {\n+          // Ready all the stream and store the payload.\n+          byte[] payload = IOUtils.toByteArray(request.getInputStream());\n+          if (0 < payload.length) {\n+            params.put(\"payload\", payload);\n+          }\n+        }\n+      } else {\n+        // The input stream will be splitted and given to the macro later.\n+        if (null != request.getHeader(\"Content-Type\") && \"application/gzip\".equals(request.getHeader(\"Content-Type\"))) {\n+          inputStream = new GZIPInputStream(request.getInputStream());\n+        } else {\n+          inputStream = request.getInputStream();\n         }\n       }\n \n+      // Get the parameters in the URL and payload if we want to parse the x-www-form-urlencoded payload.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8a5bf9d1ad64a410e7a3a593c089217a39d33c"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgwNTQyMw==", "bodyText": "make target final and use target == array[i]", "url": "https://github.com/senx/warp10-platform/pull/855#discussion_r497805423", "createdAt": "2020-09-30T21:16:30Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/plugins/http/WarpScriptHandler.java", "diffHunk": "@@ -166,10 +233,19 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n         }\n       } catch (WarpScriptException wse) {\n         throw new IOException(wse);\n-      }      \n+      }\n     } finally {\n       WarpConfig.clearThreadProperties();\n       WarpScriptStackRegistry.unregister(stack);\n-    }    \n+    }\n+  }\n+\n+  private static int indexOf(byte[] array, byte target, int start, int end) {\n+    for (int i = start; i < end; i++) {\n+      if (array[i] == target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e8a5bf9d1ad64a410e7a3a593c089217a39d33c"}, "originalPosition": 174}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94337eba7efda0d966c5c63e74af9dccfd8661f4", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/94337eba7efda0d966c5c63e74af9dccfd8661f4", "committedDate": "2020-10-01T11:42:21Z", "message": "Address PR comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3233, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}