{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NjY1MDQ5", "number": 866, "title": "Fix concurrency in StandaloneDirectoryClient", "bodyText": "classids was a HashMap which is not thread safe although it is accessed by several threads. In particular, it resulted in CLASS_COMPARATOR to fail with NPE because the get couldn't find the key because of a concurrent put.\nAlso unregister is not synchronized anymore because it was the only synchronized method and no synchronization on this was done. On the contrary, critical parts are synchronized on metadatas, so the critical part in unregister is now synchronized on metadatas as well.", "createdAt": "2020-11-06T10:52:05Z", "url": "https://github.com/senx/warp10-platform/pull/866", "merged": true, "mergeCommit": {"oid": "7fb0adf0039949e5ce0c0c133610f55591bdb61c"}, "closed": true, "closedAt": "2020-12-02T13:59:11Z", "author": {"login": "ftence"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ0RvbgH2gAyNTE2NjY1MDQ5OjM0ODZmYTc1OTUyNDQwOWUyM2UwYjZkMGY2YzIxMDNhZDc3NzY2M2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiMVISAH2gAyNTE2NjY1MDQ5OjAzYjEyZWMyMzJlMzE3NzgzMDUxNDZmZDNmYjc4ZTA2ZGU2NGExZDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3486fa759524409e23e0b6d0f6c2103ad777663c", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/3486fa759524409e23e0b6d0f6c2103ad777663c", "committedDate": "2020-11-06T10:19:47Z", "message": "Make classids able to handle concurrent reads/writes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd9448e3cec1283caa1cbe9c29560862a80fb7b6", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/cd9448e3cec1283caa1cbe9c29560862a80fb7b6", "committedDate": "2020-11-06T10:45:48Z", "message": "Unsync unregister and sync on metadata the critical part"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDc0NjQ2", "url": "https://github.com/senx/warp10-platform/pull/866#pullrequestreview-525074646", "createdAt": "2020-11-06T11:34:50Z", "commit": {"oid": "cd9448e3cec1283caa1cbe9c29560862a80fb7b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTozNDo1MVrOHuqpTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTozNDo1MVrOHuqpTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5NTI0NQ==", "bodyText": "Why compute the labels id before it is needed? This is a costly operation.", "url": "https://github.com/senx/warp10-platform/pull/866#discussion_r518695245", "createdAt": "2020-11-06T11:34:51Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java", "diffHunk": "@@ -680,19 +681,22 @@ public void register(Metadata metadata) throws IOException {\n     }\n   }\n \n-  public synchronized void unregister(Metadata metadata) {\n-    if (!classids.containsKey(metadata.getName())) {\n-      return;\n-    }\n+  public void unregister(Metadata metadata) {\n     // 128BITS\n     long labelsId = GTSHelper.labelsId(this.labelsLongs, metadata.getLabels());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd9448e3cec1283caa1cbe9c29560862a80fb7b6"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MTEwODU0", "url": "https://github.com/senx/warp10-platform/pull/866#pullrequestreview-525110854", "createdAt": "2020-11-06T12:34:00Z", "commit": {"oid": "cd9448e3cec1283caa1cbe9c29560862a80fb7b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMjozNDowMFrOHusVgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMjozNDowMFrOHusVgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcyMjk0Nw==", "bodyText": "On line 632 (in register), the call to metadatas.get() could throw an NPE if the entry for that class name is removed on line 598. The solution would be to protect the part in register with a syncrhonized block on metadatas", "url": "https://github.com/senx/warp10-platform/pull/866#discussion_r518722947", "createdAt": "2020-11-06T12:34:00Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java", "diffHunk": "@@ -680,19 +681,22 @@ public void register(Metadata metadata) throws IOException {\n     }\n   }\n \n-  public synchronized void unregister(Metadata metadata) {\n-    if (!classids.containsKey(metadata.getName())) {\n-      return;\n-    }\n+  public void unregister(Metadata metadata) {\n     // 128BITS\n     long labelsId = GTSHelper.labelsId(this.labelsLongs, metadata.getLabels());\n-    if (!metadatas.get(metadata.getName()).containsKey(labelsId)) {\n-      return;\n-    }\n-    metadatas.get(metadata.getName()).remove(labelsId);\n-    if (metadatas.get(metadata.getName()).isEmpty()) {\n-      metadatas.remove(metadata.getName());\n-      classids.remove(metadata.getName());\n+\n+    synchronized (metadatas) {\n+      if (!classids.containsKey(metadata.getName())) {\n+        return;\n+      }\n+      if (!metadatas.get(metadata.getName()).containsKey(labelsId)) {\n+        return;\n+      }\n+      metadatas.get(metadata.getName()).remove(labelsId);\n+      if (metadatas.get(metadata.getName()).isEmpty()) {\n+        metadatas.remove(metadata.getName());\n+        classids.remove(metadata.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd9448e3cec1283caa1cbe9c29560862a80fb7b6"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e09ecfa9e195c36877e5bd0973d4502c43bbd47", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/0e09ecfa9e195c36877e5bd0973d4502c43bbd47", "committedDate": "2020-11-06T17:14:23Z", "message": "Tighter synchronisation to avoid NPE due to concurrent modifications"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3904cea71e545067a6a7aedd8423a67ade85824b", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/3904cea71e545067a6a7aedd8423a67ade85824b", "committedDate": "2020-11-09T14:18:51Z", "message": "More checks to avoid NPEs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "909377a3ad61179aed22ee5d359978e613654719", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/909377a3ad61179aed22ee5d359978e613654719", "committedDate": "2020-11-09T15:20:34Z", "message": "Finer synchronization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMjAyOTky", "url": "https://github.com/senx/warp10-platform/pull/866#pullrequestreview-540202992", "createdAt": "2020-11-27T22:18:39Z", "commit": {"oid": "909377a3ad61179aed22ee5d359978e613654719"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QyMjoxODo0MFrOH7KW_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QyMjoxODo0MFrOH7KW_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc5Nzc1OA==", "bodyText": "Actually second thoughts about where labelsId is computed. If it is occasional to call unregister for a GTS whose class is  no longer known it might be better to always compute labelsId where labelsId is declared rather than in the synchronized block since the computation is CPU heavy and therefore would extend the time spent in the syncrhonized block which would block all threads attempting to synchronize on metadatas. So probably better to always compute labelsId and do so outside of the synchronized block.", "url": "https://github.com/senx/warp10-platform/pull/866#discussion_r531797758", "createdAt": "2020-11-27T22:18:40Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneDirectoryClient.java", "diffHunk": "@@ -680,19 +706,23 @@ public void register(Metadata metadata) throws IOException {\n     }\n   }\n \n-  public synchronized void unregister(Metadata metadata) {\n-    if (!classids.containsKey(metadata.getName())) {\n-      return;\n-    }\n+  public void unregister(Metadata metadata) {\n     // 128BITS\n-    long labelsId = GTSHelper.labelsId(this.labelsLongs, metadata.getLabels());\n-    if (!metadatas.get(metadata.getName()).containsKey(labelsId)) {\n-      return;\n-    }\n-    metadatas.get(metadata.getName()).remove(labelsId);\n-    if (metadatas.get(metadata.getName()).isEmpty()) {\n-      metadatas.remove(metadata.getName());\n-      classids.remove(metadata.getName());\n+    long labelsId;\n+\n+    synchronized(metadatas) {\n+      if (!classids.containsKey(metadata.getName())) {\n+        return;\n+      }\n+      labelsId = GTSHelper.labelsId(this.labelsLongs, metadata.getLabels());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "909377a3ad61179aed22ee5d359978e613654719"}, "originalPosition": 429}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03b12ec232e31778305146fd3fb78e06de64a1d0", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/03b12ec232e31778305146fd3fb78e06de64a1d0", "committedDate": "2020-12-02T10:52:36Z", "message": "Compute labelsId outside synchronized block"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3251, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}