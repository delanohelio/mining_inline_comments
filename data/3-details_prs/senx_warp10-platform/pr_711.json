{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2Mzk4ODEy", "number": 711, "title": "Fixes #698, supersedes #701, empty GTSs from operations are UNDEF and keep metas", "bodyText": "Addresses the comments in #701 because @pi-r-p is unavailable ATM.\nThis PR passes this new test:\nNEWGTS 'gtsDouble' RENAME 0 0 0 0 3.14 ADDVALUE 'gtsDouble' STORE\nNEWGTS 'gtsLong' RENAME 0 0 0 0 42 ADDVALUE 'gtsLong' STORE\nNEWGTS 'gtsLongNotAligned' RENAME 1 0 0 0 42 ADDVALUE 'gtsLongNotAligned' STORE\nNEWGTS 'gtsBool' RENAME 0 0 0 0 T ADDVALUE 'gtsBool' STORE\nNEWGTS 'gtsBoolNotAligned' RENAME 1 0 0 0 T ADDVALUE 'gtsBoolNotAligned' STORE\nNEWGTS 'gtsEmpty' RENAME 'gtsEmpty' STORE\nNEWGTS 'gtsEmptyBucketized' RENAME [ SWAP bucketizer.last 10 1 11 ] BUCKETIZE 0 GET 'gtsEmptyBucketized' STORE\nNEWGTS 'gtsLongBucketized' RENAME 0 0 0 0 42 ADDVALUE [ SWAP bucketizer.last 10 1 11 ] BUCKETIZE 0 GET 'gtsLongBucketized' STORE\nNEWGTS 'gtsBoolBucketized' RENAME 0 0 0 0 T ADDVALUE [ SWAP bucketizer.last 10 1 11 ] BUCKETIZE 0 GET 'gtsBoolBucketized' STORE\n\n<% VALUES 0 GET TYPEOF %> 'tg' STORE\n<% 2 0 0 0 \"string\" ADDVALUE @tg \"STRING\" == %> 'nottyped' STORE\n<% BUCKETCOUNT 0 > %> 'bkzed' STORE\n\n\n$gtsDouble $gtsDouble + @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong + @tg \"DOUBLE\" == ASSERT\n$gtsDouble 2 + @tg \"DOUBLE\" == ASSERT\n$gtsDouble 2 + NAME \"gtsDouble\" == ASSERT\n$gtsLong $gtsDouble + @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong + @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsLong + @tg \"LONG\" == ASSERT\n$gtsLong 2 + @tg \"LONG\" == ASSERT\n$gtsLong 2 + NAME \"gtsLong\" == ASSERT\n$gtsLong 2.0 + @tg \"DOUBLE\" == ASSERT\n$gtsLong 2.0 + NAME \"gtsLong\" == ASSERT\n2 $gtsLong + @tg \"LONG\" == ASSERT\n2 $gtsLong + NAME \"gtsLong\" == ASSERT\n2.0 $gtsLong + @tg \"DOUBLE\" == ASSERT\n2.0 $gtsLong + NAME \"gtsLong\" == ASSERT\n$gtsLong 2 + @tg \"LONG\" == ASSERT\n$gtsLongNotAligned $gtsDouble + @nottyped   ASSERT\n$gtsEmpty 0 + @nottyped   ASSERT\n$gtsEmpty $gtsEmpty + @nottyped   ASSERT\n$gtsLongBucketized 0 + @bkzed   ASSERT\n$gtsEmptyBucketized 0 + @bkzed   ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized + @bkzed   ASSERT\n$gtsLongBucketized $gtsLongBucketized + @bkzed   ASSERT\n\n\n$gtsDouble $gtsDouble * @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong * @tg \"DOUBLE\" == ASSERT\n$gtsDouble 2 * @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsDouble * @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong * @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsLong * @tg \"LONG\" == ASSERT\n$gtsLong 2 * @tg \"LONG\" == ASSERT\n$gtsLong 2.0 * @tg \"DOUBLE\" == ASSERT\n2 $gtsLong * @tg \"LONG\" == ASSERT\n2.0 $gtsLong * @tg \"DOUBLE\" == ASSERT\n$gtsLong 2 * @tg \"LONG\" == ASSERT\n$gtsLongNotAligned $gtsDouble * @nottyped   ASSERT\n$gtsEmpty 0 * @nottyped   ASSERT\n$gtsEmpty $gtsEmpty * @nottyped   ASSERT\n$gtsLongBucketized 0 * @bkzed   ASSERT\n$gtsEmptyBucketized 0 * @bkzed   ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized * @bkzed   ASSERT\n$gtsLongBucketized $gtsLongBucketized * @bkzed   ASSERT\n\n$gtsDouble $gtsDouble / @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong / @tg \"DOUBLE\" == ASSERT\n$gtsDouble 2 / @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsDouble / @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong / @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsLong / @tg \"LONG\" == ASSERT\n$gtsLong 2 / @tg \"LONG\" == ASSERT\n$gtsLong 2.0 / @tg \"DOUBLE\" == ASSERT\n2 $gtsLong / @tg \"LONG\" == ASSERT\n2.0 $gtsLong / @tg \"DOUBLE\" == ASSERT\n$gtsLong 2 / @tg \"LONG\" == ASSERT\n$gtsLongNotAligned $gtsDouble / @nottyped   ASSERT\n$gtsEmpty 1 / @nottyped   ASSERT\n$gtsEmpty $gtsEmpty / @nottyped   ASSERT\n$gtsLongBucketized 1 / @bkzed   ASSERT\n$gtsEmptyBucketized 1 / @bkzed   ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized / @bkzed   ASSERT\n$gtsLongBucketized $gtsLongBucketized / @bkzed   ASSERT\n$gtsLong 4 / VALUES 0 GET 10 == ASSERT\n85 $gtsLong / VALUES 0 GET 2 == ASSERT\n$gtsLong 4.0 / VALUES 0 GET 10.5 0.00001 ~= ASSERT\n63.0 $gtsLong / VALUES 0 GET 1.5 0.00001 ~= ASSERT\n$gtsDouble 4 / VALUES 0 GET 0.785 0.00001 ~= ASSERT\n85 $gtsDouble / VALUES 0 GET 27.070063694 0.00001 ~= ASSERT\n$gtsDouble 4.0 / VALUES 0 GET 0.785 0.00001 ~= ASSERT\n63.0 $gtsDouble / VALUES 0 GET 20.063694268 0.00001 ~= ASSERT\n\n$gtsDouble $gtsDouble - @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong - @tg \"DOUBLE\" == ASSERT\n$gtsDouble 2 - @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsDouble - @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong - @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsLong - @tg \"LONG\" == ASSERT\n$gtsLong 2 - @tg \"LONG\" == ASSERT\n$gtsLong 2.0 - @tg \"DOUBLE\" == ASSERT\n2 $gtsLong - @tg \"LONG\" == ASSERT\n2.0 $gtsLong - @tg \"DOUBLE\" == ASSERT\n$gtsLong 2 - @tg \"LONG\" == ASSERT\n$gtsLongNotAligned $gtsDouble - @nottyped   ASSERT\n$gtsEmpty 0 - @nottyped   ASSERT\n$gtsEmpty $gtsEmpty - @nottyped   ASSERT\n$gtsLongBucketized 0 - @bkzed   ASSERT\n$gtsEmptyBucketized 0 - @bkzed   ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized - @bkzed   ASSERT\n$gtsLongBucketized $gtsLongBucketized - @bkzed   ASSERT\n$gtsLong 2 - VALUES 0 GET 40 == ASSERT\n2 $gtsLong - VALUES 0 GET -40 == ASSERT\n$gtsLong 4.0 - VALUES 0 GET 38.0 0.00001 ~= ASSERT\n63.0 $gtsLong - VALUES 0 GET 21.0 0.00001 ~= ASSERT\n$gtsDouble 2 - VALUES 0 GET 1.14 0.00001 ~= ASSERT\n2 $gtsDouble - VALUES 0 GET -1.14 0.00001 ~= ASSERT\n$gtsDouble 4.0 - VALUES 0 GET -0.86 0.00001 ~= ASSERT\n63.0 $gtsDouble - VALUES 0 GET 59.86 0.00001 ~= ASSERT\n\n\n$gtsLong 100 >  @nottyped    ASSERT \n$gtsLong 100.0 >  @nottyped    ASSERT\n$gtsLong $gtsLongNotAligned >  @nottyped    ASSERT\n$gtsLongBucketized $gtsLongBucketized >  @bkzed    ASSERT\n$gtsLongBucketized 100 >  @bkzed    ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized >  @bkzed    ASSERT\n$gtsEmptyBucketized 100 >  @bkzed    ASSERT\n\n$gtsBool $gtsBool && @tg \"BOOLEAN\" == ASSERT\n$gtsBool $gtsBoolNotAligned && @nottyped  ASSERT\n$gtsEmpty $gtsBool && @nottyped  ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized && @bkzed  ASSERT\n\n$gtsBool $gtsBool || @tg \"BOOLEAN\" == ASSERT\n$gtsBool $gtsBoolNotAligned || @nottyped  ASSERT\n$gtsEmpty $gtsBool || @nottyped  ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized || @bkzed  ASSERT\n\n$gtsDouble $gtsDouble <= @tg \"DOUBLE\" == ASSERT\n$gtsDouble $gtsLong <= @tg \"DOUBLE\" == ASSERT\n$gtsDouble 99 <= @tg \"DOUBLE\" == ASSERT\n$gtsDouble 99 <= NAME \"gtsDouble\" == ASSERT\n$gtsLong $gtsDouble <= @nottyped ASSERT\n$gtsDouble $gtsLong <= @tg \"DOUBLE\" == ASSERT\n$gtsLong $gtsLong <= @tg \"LONG\" == ASSERT\n$gtsLong 99 <= @tg \"LONG\" == ASSERT\n$gtsLong 99 <= NAME \"gtsLong\" == ASSERT\n$gtsLong 99.0 <= @tg \"LONG\" == ASSERT\n$gtsLong 99.0 <= NAME \"gtsLong\" == ASSERT\n$gtsLong 2 <= @nottyped ASSERT\n$gtsLongNotAligned $gtsDouble <= @nottyped   ASSERT\n$gtsEmpty 0 <= @nottyped   ASSERT\n$gtsEmpty $gtsEmpty <= @nottyped   ASSERT\n$gtsLongBucketized 0 <= @bkzed   ASSERT\n$gtsEmptyBucketized 0 <= @bkzed   ASSERT\n$gtsEmptyBucketized $gtsEmptyBucketized <= @bkzed   ASSERT\n$gtsLongBucketized $gtsLongBucketized <= @bkzed   ASSERT", "createdAt": "2020-03-31T15:05:58Z", "url": "https://github.com/senx/warp10-platform/pull/711", "merged": true, "mergeCommit": {"oid": "dce7ab3d603b083ee7f81b6500758c8fa5615ec4"}, "closed": true, "closedAt": "2020-04-01T08:23:48Z", "author": {"login": "ftence"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQlEKJAH2gAyMzk2Mzk4ODEyOmFkNDMxYmM5MjZlY2Y5Nzc1ZTA2ZTkzMDFiNGUxZTA2ZWY3MDQwYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTTUJrgFqTM4NTM2MjA3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad431bc926ecf9775e06e9301b4e1e06ef7040aa", "author": {"user": {"login": "pi-r-p", "name": "Pierre Papin"}}, "url": "https://github.com/senx/warp10-platform/commit/ad431bc926ecf9775e06e9301b4e1e06ef7040aa", "committedDate": "2020-03-23T21:19:54Z", "message": "fix issue #698, gts ops type consistency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/c79ced1a708519f757a0affac24cb1a8f5b95b27", "committedDate": "2020-03-31T14:57:20Z", "message": "Keep meta intact even if the returned GTS is empty."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0ODk2NzQw", "url": "https://github.com/senx/warp10-platform/pull/711#pullrequestreview-384896740", "createdAt": "2020-03-31T16:19:26Z", "commit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoxOToyNlrOF-dxGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoyNTo1OVrOF-eCjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MzczNw==", "bodyText": "There should be a test in applyBinaryOp that the operator is non null, as is the op.op() call will fail with an NPE.", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401043737", "createdAt": "2020-03-31T16:19:26Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/binary/ADD.java", "diffHunk": "@@ -137,13 +137,16 @@ public Object op(GeoTimeSerie gtsa, GeoTimeSerie gtsb, int idxa, int idxb) {\n           };\n           break;\n         default:\n-          // both inputs are empty, return an empty gts.\n-          stack.push(new GeoTimeSerie());\n-          return stack;\n+          // Leave op to null.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQwNQ==", "bodyText": "avoiding the function call op.doubleValue() would probably be more efficient, at least before inlining/JIT kicks in.", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047405", "createdAt": "2020-03-31T16:24:45Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/binary/SUB.java", "diffHunk": "@@ -171,19 +164,31 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op;\n-       } else {\n-         value = op - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op.doubleValue();\n+          } else {\n+            value = op.doubleValue() - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzQ0Nw==", "bodyText": "ditto", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047447", "createdAt": "2020-03-31T16:24:51Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/binary/SUB.java", "diffHunk": "@@ -171,19 +164,31 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op;\n-       } else {\n-         value = op - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() - op.doubleValue();\n+          } else {\n+            value = op.doubleValue() - ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n+          }\n+          GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n+        }\n+      } else {\n+        for (int i = 0; i < n; i++) {\n+          long value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).longValue() - op.longValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0Nzg1MA==", "bodyText": "avoid function call op.doubleValue()", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047850", "createdAt": "2020-03-31T16:25:28Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/binary/DIV.java", "diffHunk": "@@ -168,19 +161,30 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op;\n-       } else {\n-         value = op / ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op.doubleValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0NzkzNw==", "bodyText": "avoid op.longValue()", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401047937", "createdAt": "2020-03-31T16:25:36Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/binary/DIV.java", "diffHunk": "@@ -168,19 +161,30 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-       double value;\n-       if (op1gts) {\n-         value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op;\n-       } else {\n-         value = op / ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n-       }\n-       GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n \n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() / op.doubleValue();\n+          } else {\n+            value = op.doubleValue() / ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue();\n+          }\n+          GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n+        }\n+      } else {\n+        for (int i = 0; i < n; i++) {\n+          long value;\n+          if (op1gts) {\n+            value = ((Number) GTSHelper.valueAtIndex(gts, i)).longValue() / op.longValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODEwMQ==", "bodyText": "avoid op.doubleValue()", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401048101", "createdAt": "2020-03-31T16:25:50Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/binary/MUL.java", "diffHunk": "@@ -177,13 +170,20 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-        double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op;\n-        GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op.doubleValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0ODIwNw==", "bodyText": "avoid op.longValue()", "url": "https://github.com/senx/warp10-platform/pull/711#discussion_r401048207", "createdAt": "2020-03-31T16:25:59Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/binary/MUL.java", "diffHunk": "@@ -177,13 +170,20 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       if (!(gts.getType() == TYPE.LONG || gts.getType() == TYPE.DOUBLE)) {\n         throw new WarpScriptException(typeCheckErrorMsg);\n       }\n-      \n-      double op = op1gts ? ((Number) op2).doubleValue() : ((Number) op1).doubleValue();\n-      \n-      for (int i = 0; i < n; i++) {\n-        double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op;\n-        GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n-      }      \n+\n+      Number op = op1gts ? (Number) op2 : (Number) op1;\n+\n+      if (op instanceof Double || gts.getType() == TYPE.DOUBLE) {\n+        for (int i = 0; i < n; i++) {\n+          double value = ((Number) GTSHelper.valueAtIndex(gts, i)).doubleValue() * op.doubleValue();\n+          GTSHelper.setValue(result, GTSHelper.tickAtIndex(gts, i), GTSHelper.locationAtIndex(gts, i), GTSHelper.elevationAtIndex(gts, i), value, false);\n+        }\n+      } else {\n+        for (int i = 0; i < n; i++) {\n+          long value = ((Number) GTSHelper.valueAtIndex(gts, i)).longValue() * op.longValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c79ced1a708519f757a0affac24cb1a8f5b95b27"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30c7e20790a8bcc3521dc81283cdf93a942993db", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/30c7e20790a8bcc3521dc81283cdf93a942993db", "committedDate": "2020-04-01T08:02:21Z", "message": "Get long or double value outside the loop."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzYyMDc5", "url": "https://github.com/senx/warp10-platform/pull/711#pullrequestreview-385362079", "createdAt": "2020-04-01T08:20:51Z", "commit": {"oid": "30c7e20790a8bcc3521dc81283cdf93a942993db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3302, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}