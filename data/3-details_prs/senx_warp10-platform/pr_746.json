{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MzEwNTIy", "number": 746, "title": "Simplify constant conditions and constant variables", "bodyText": "Each modification is explained in the diff.", "createdAt": "2020-04-22T14:00:18Z", "url": "https://github.com/senx/warp10-platform/pull/746", "merged": true, "mergeCommit": {"oid": "be72b5842dd06cb9475b751a46ef05649bbc019c"}, "closed": true, "closedAt": "2020-05-04T19:18:31Z", "author": {"login": "ftence"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaIvUHAH2gAyNDA3MzEwNTIyOjU5NTJlODFlZjcyZjA1OTZlNDc0ZTIwODE5ZDQ1M2VjMjU0NmFkOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceEf-EgFqTQwNTI3NTE5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/5952e81ef72f0596e474e20819d453ec2546ad8d", "committedDate": "2020-04-22T13:59:02Z", "message": "Simplify constant conditions and constant variables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MjIzNjA1", "url": "https://github.com/senx/warp10-platform/pull/746#pullrequestreview-398223605", "createdAt": "2020-04-22T14:02:32Z", "commit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "state": "COMMENTED", "comments": {"totalCount": 54, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNDowMjozMlrOGJ4KTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOToxMDoxMFrOGKGqbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxMDUwOQ==", "bodyText": "event cannot be null because it is already checked and initialized in event = ensureLoggingEvent(event);", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413010509", "createdAt": "2020-04-22T14:02:32Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/LogUtil.java", "diffHunk": "@@ -163,10 +163,6 @@ public static final LoggingEvent setLoggingEventStackTrace(LoggingEvent event, S\n \n       t = t.getCause();\n     }\n-    \n-    if (null == event) {\n-      event = new LoggingEvent();\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxMjA0Nw==", "bodyText": "OrderPreservingBase64.decode cannot return null.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413012047", "createdAt": "2020-04-22T14:04:21Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/LogUtil.java", "diffHunk": "@@ -193,10 +189,6 @@ public static final LoggingEvent unwrapLog(byte[] key, String logmsg) {\n     try {\n       byte[] data = OrderPreservingBase64.decode(logmsg.getBytes(StandardCharsets.US_ASCII));\n       \n-      if (null == data) {\n-        return null;      \n-      }\n-      ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxMjcxOA==", "bodyText": "private static final String THROTTLING_MANAGER_SUFFIX = \".throttle\"; so it cannot start with .dump.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413012718", "createdAt": "2020-04-22T14:05:13Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/ThrottlingManager.java", "diffHunk": "@@ -1098,13 +1098,8 @@ public static void fuse(HyperLogLogPlus hllp) throws Exception {\n   \n   private static void dumpCurrentConfig() {\n     if (null != dir && !producerHLLPEstimators.isEmpty() && !applicationHLLPEstimators.isEmpty()) {\n-      File config;\n-      if (\".dump\".endsWith(THROTTLING_MANAGER_SUFFIX)) {\n-        config = new File(dir, \"current\" + THROTTLING_MANAGER_SUFFIX + \".dump.\");      \n-      } else {\n-        config = new File(dir, \"current\" + THROTTLING_MANAGER_SUFFIX + \".dump\");\n-      }\n-      ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxNTE3NA==", "bodyText": "substring cannot return null.\nreq.getPathInfo() could return null but in our case it never does because it contains at least api/v0/.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413015174", "createdAt": "2020-04-22T14:08:11Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressExecHandler.java", "diffHunk": "@@ -200,7 +200,7 @@ public void handle(String target, Request baseRequest, HttpServletRequest req, H\n       \n       String pathInfo = req.getPathInfo().substring(target.length());\n       \n-      if (null != pathInfo && pathInfo.length() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxNTYwMg==", "bodyText": "Never used.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413015602", "createdAt": "2020-04-22T14:08:42Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -142,16 +142,12 @@ public EgressFetchHandler(KeyStore keystore, Properties properties, DirectoryCli\n   \n   @Override\n   public void handle(String target, Request baseRequest, HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {\n-    boolean fromArchive = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxNjIxMw==", "bodyText": "Always false. Used false instead in method calls to make that clear.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413016213", "createdAt": "2020-04-22T14:09:29Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -142,16 +142,12 @@ public EgressFetchHandler(KeyStore keystore, Properties properties, DirectoryCli\n   \n   @Override\n   public void handle(String target, Request baseRequest, HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {\n-    boolean fromArchive = false;\n     boolean splitFetch = false;\n-    boolean writeTimestamp = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxNjc4NQ==", "bodyText": "Should this be removed?", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413016785", "createdAt": "2020-04-22T14:10:14Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -142,16 +142,12 @@ public EgressFetchHandler(KeyStore keystore, Properties properties, DirectoryCli\n   \n   @Override\n   public void handle(String target, Request baseRequest, HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {\n-    boolean fromArchive = false;\n     boolean splitFetch = false;\n-    boolean writeTimestamp = false;\n-    \n+\n     if (Constants.API_ENDPOINT_FETCH.equals(target)) {\n       baseRequest.setHandled(true);\n-      fromArchive = false;\n     } else if (Constants.API_ENDPOINT_AFETCH.equals(target)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxOTI5OQ==", "bodyText": "extractReadToken already takes care of invalid token and thus throws instead of returning null.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413019299", "createdAt": "2020-04-22T14:13:11Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -376,11 +372,6 @@ public void handle(String target, Request baseRequest, HttpServletRequest req, H\n         } catch (WarpScriptException ee) {\n           throw new IOException(ee);\n         }\n-              \n-        if (null == rtoken) {\n-          resp.sendError(HttpServletResponse.SC_FORBIDDEN, \"Missing token.\");\n-          return;\n-        }      ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAyMDI1Mw==", "bodyText": "Previous while loop can only exit if !itermeta.hasNext().", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413020253", "createdAt": "2020-04-22T14:14:20Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -631,7 +622,7 @@ public boolean hasNext() {\n             }         \n           }\n           \n-          if (!itermeta.hasNext() && (itermeta instanceof MetadataIterator)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA0MjI3Ng==", "bodyText": "writeTimestamp is always false.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413042276", "createdAt": "2020-04-22T14:40:27Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -756,7 +747,7 @@ public void close() throws Exception {\n           //\n           \n           if (metas.size() > FETCH_BATCHSIZE || !itermeta.hasNext()) {\n-            try(GTSDecoderIterator iterrsc = storeClient.fetch(rtoken, metas, now, then, count, skip, sample, writeTimestamp, preBoundary, postBoundary)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA0MzQwMg==", "bodyText": "Previous while loop can only exit if !itermeta.hasNext().", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413043402", "createdAt": "2020-04-22T14:41:40Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -816,7 +807,7 @@ public void close() throws Exception {\n           }        \n         }\n         \n-        if (!itermeta.hasNext() && (itermeta instanceof MetadataIterator)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2MzI5MQ==", "bodyText": "First time it is evaluated null == chunkenc so the second part is not evaluated.\nAfter that, lastchunk is assigned to chunk, which is a long thus cannot be null.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413063291", "createdAt": "2020-04-22T15:04:16Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -1949,7 +1940,7 @@ private void packedDump(PrintWriter pw, GTSDecoderIterator iter, long now, long\n           // If it is the first chunk or we changed chunk, create a new encoder\n           //\n           \n-          if (null == chunkenc || (null != lastchunk && chunk != lastchunk)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2NDIxOA==", "bodyText": "extractReadToken already checks that the token is valid and throw if its not instead of returning null", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413064218", "createdAt": "2020-04-22T15:05:24Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressSplitsHandler.java", "diffHunk": "@@ -105,11 +105,6 @@ public void handle(String target, Request baseRequest, HttpServletRequest reques\n       throw new IOException(ee);\n     }\n \n-    if (null == rtoken) {\n-      response.sendError(HttpServletResponse.SC_FORBIDDEN, \"Missing token.\");\n-      return;\n-    }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2NjAwMw==", "bodyText": "reader cannot be null in the try clause except for the last line, which cannot throw a IOException.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413066003", "createdAt": "2020-04-22T15:07:33Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/ThriftDirectoryClient.java", "diffHunk": "@@ -641,7 +641,7 @@ public DirectoryStatsResponse call() throws Exception {\n                 reader = null;\n                 \n               } catch (IOException ioe){\n-                if (null != reader) { try { reader.close(); } catch (Exception e) {} }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2NjkzMA==", "bodyText": "Because\n    Map<String,HyperLogLogPlus> perClassCardinality = new HashMap<String, HyperLogLogPlus>();\n    Map<String,HyperLogLogPlus> perLabelValueCardinality = new HashMap<String, HyperLogLogPlus>();\n\nboth cannot be null.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413066930", "createdAt": "2020-04-22T15:08:37Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/ThriftDirectoryClient.java", "diffHunk": "@@ -889,21 +889,17 @@ public DirectoryStatsResponse call() throws Exception {\n       stats.put(STATS_LABEL_VALUES_ESTIMATOR, labelValuesCardinalityEstimator.cardinality());\n     }\n     \n-    if (null != perClassCardinality) {\n-      Map<String,Long> cardinalities = new HashMap<String, Long>();\n-      for (Entry<String,HyperLogLogPlus> entry: perClassCardinality.entrySet()) {\n-        cardinalities.put(entry.getKey(), entry.getValue().cardinality());\n-      }\n-      stats.put(STATS_PER_CLASS_ESTIMATOR, cardinalities);\n+    Map<String,Long> cardinalitiesPerClass = new HashMap<String, Long>();\n+    for (Entry<String,HyperLogLogPlus> entry: perClassCardinality.entrySet()) {\n+      cardinalitiesPerClass.put(entry.getKey(), entry.getValue().cardinality());\n     }\n+    stats.put(STATS_PER_CLASS_ESTIMATOR, cardinalitiesPerClass);\n \n-    if (null != perLabelValueCardinality) {\n-      Map<String,Long> cardinalities = new HashMap<String, Long>();\n-      for (Entry<String,HyperLogLogPlus> entry: perLabelValueCardinality.entrySet()) {\n-        cardinalities.put(entry.getKey(), entry.getValue().cardinality());\n-      }\n-      stats.put(STATS_PER_LABEL_VALUE_ESTIMATOR, cardinalities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3MDYxNQ==", "bodyText": "No need to continue the while because the print is already conditioned by include:\n          if (include) {\n            pw.println(line);\n          }", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413070615", "createdAt": "2020-04-22T15:12:56Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/ingress/DatalogForwarder.java", "diffHunk": "@@ -332,11 +332,6 @@ private boolean doUpdate(DatalogAction action) {\n                 }\n               }\n               continue;\n-            } else {\n-              // Ignore line if shard is not included in those we forward\n-              if (!include) {\n-                continue;\n-              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3Mjk3Mg==", "bodyText": "Will throw NPE if the producer is not defined in the token.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413072972", "createdAt": "2020-04-22T15:15:44Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/ingress/Ingress.java", "diffHunk": "@@ -1439,14 +1439,13 @@ public void handleDelete(String target, Request baseRequest, HttpServletRequest\n     // For delete operations, producer and owner MUST be equal\n     //\n     \n-    if (!producer.equals(owner)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3MzE1MA==", "bodyText": "Unused.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413073150", "createdAt": "2020-04-22T15:15:57Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/ingress/Ingress.java", "diffHunk": "@@ -1439,14 +1439,13 @@ public void handleDelete(String target, Request baseRequest, HttpServletRequest\n     // For delete operations, producer and owner MUST be equal\n     //\n     \n-    if (!producer.equals(owner)) {\n+    if (null == producer || !producer.equals(owner)) {\n       throw new IOException(\"Invalid write token for deletion.\");\n     }\n     \n     Map<String,String> sensisionLabels = new HashMap<String,String>();\n     sensisionLabels.put(SensisionConstants.SENSISION_LABEL_PRODUCER, producer);\n \n-    long count = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3NTM5NA==", "bodyText": "Cannot happen because already checked before.\nBefore the PR change, could not happen either because a NPE would have been thrown.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413075394", "createdAt": "2020-04-22T15:18:40Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/ingress/Ingress.java", "diffHunk": "@@ -1460,11 +1459,6 @@ public void handleDelete(String target, Request baseRequest, HttpServletRequest\n     boolean metaonly = null != request.getParameter(Constants.HTTP_PARAM_METAONLY);\n \n     try {      \n-      if (null == producer || null == owner) {\n-        response.sendError(HttpServletResponse.SC_FORBIDDEN, \"Invalid token.\");\n-        return;\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3NjcxMg==", "bodyText": "We're already in a if (!dryrun && doShuffle) so !dryrun is always true.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413076712", "createdAt": "2020-04-22T15:20:20Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/ingress/Ingress.java", "diffHunk": "@@ -1796,33 +1790,31 @@ public void close() throws Exception {\n           while(shufflediterator.hasNext()) {\n             Metadata metadata = shufflediterator.next();\n             \n-            if (!dryrun) {\n-              if (null != this.plugin) {\n-                if (!this.plugin.delete(this, writeToken, metadata)) {\n-                  continue;\n-                }\n-              }\n-              \n-              if (!metaonly) {\n-                pushDeleteMessage(start, end, minage, metadata);\n+            if (null != this.plugin) {\n+              if (!this.plugin.delete(this, writeToken, metadata)) {\n+                continue;\n               }\n-              \n-              if (Long.MAX_VALUE == end && Long.MIN_VALUE == start && 0 == minage) {\n-                completeDeletion = true;\n-                // We must also push the metadata deletion and remove the metadata from the cache\n-                Metadata meta = new Metadata(metadata);\n-                meta.setSource(Configuration.INGRESS_METADATA_DELETE_SOURCE);\n-                pushMetadataMessage(meta);          \n-                byte[] bytes = new byte[16];\n-                // We know class/labels Id were computed in pushMetadataMessage\n-                GTSHelper.fillGTSIds(bytes, 0, meta.getClassId(), meta.getLabelsId());\n-                BigInteger key = new BigInteger(bytes);\n-                synchronized(this.metadataCache) {\n-                  this.metadataCache.remove(key);\n-                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3NzI4OA==", "bodyText": "Unused.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413077288", "createdAt": "2020-04-22T15:21:04Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java", "diffHunk": "@@ -102,8 +102,6 @@ public void run() {\n \n       GTSDecoder lastdecoder = null;\n \n-      int count = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3OTExNw==", "bodyText": "Was reset to null at the end of each iteration of the while loop. Changed to variable defined in the loop instead.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413079117", "createdAt": "2020-04-22T15:23:14Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java", "diffHunk": "@@ -128,18 +126,15 @@ public void run() {\n         // Iterate over the GTSDecoders\n         //\n         \n-        GTSDecoder decoder = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA4MDQyNQ==", "bodyText": "null == decoder was always true because decoder was reset to null  at the end of each iteration of the while loop.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413080425", "createdAt": "2020-04-22T15:24:49Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/continuum/store/ParallelGTSDecoderIteratorWrapper.java", "diffHunk": "@@ -182,11 +176,10 @@ public void run() {\n             \n             queue.put(lastdecoder);\n             lastdecoder = decoder;\n-            decoder = null;\n           }\n         }\n         \n-        if (null == decoder && null != lastdecoder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA4MTIzNA==", "bodyText": "lastserver is always null.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413081234", "createdAt": "2020-04-22T15:25:47Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/hadoop/Warp10InputFormat.java", "diffHunk": "@@ -319,7 +318,7 @@ public Warp10InputFormat() {\n       \n       // If the server changed or we've reached the maximum split size, flush the current split.\n       \n-      if (null != lastserver && !lastserver.equals(tokens[0]) || avgsplitcount == subsplits) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA4MTQ3Ng==", "bodyText": "Is always null.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413081476", "createdAt": "2020-04-22T15:26:03Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/hadoop/Warp10InputFormat.java", "diffHunk": "@@ -305,7 +305,6 @@ public Warp10InputFormat() {\n     br = new BufferedReader(new FileReader(outfile));\n     \n     Warp10InputSplit split = new Warp10InputSplit();\n-    String lastserver = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA4MjI2Nw==", "bodyText": "Cannot be null, checked and initialized just before.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413082267", "createdAt": "2020-04-22T15:27:01Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/hadoop/WarpScriptInputFormat.java", "diffHunk": "@@ -245,10 +245,6 @@ public InputStream getWarpScriptInputStream(String originalFilePath) throws IOEx\n       fis = new FileInputStream(filepath);\n     }\n     \n-    if (null == fis) {\n-      throw new IOException(\"WarpScript file '\" + filepath + \"' could not be found.\");\n-    }\n-    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA4NDA5Mw==", "bodyText": "done is always true here so make it explicit.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413084093", "createdAt": "2020-04-22T15:29:10Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/hadoop/WarpScriptRecordReader.java", "diffHunk": "@@ -176,7 +176,7 @@ public boolean nextKeyValue() throws IOException, InterruptedException {\n         List<Object> input = new ArrayList<Object>();\n         \n         // This is the last K/V we feed to the executor\n-        input.add(done);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5MDcxMQ==", "bodyText": "Could never be true, fixes wrong boolean operator.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413090711", "createdAt": "2020-04-22T15:37:06Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/hadoop/WarpScriptRecordReader.java", "diffHunk": "@@ -192,7 +192,7 @@ public boolean nextKeyValue() throws IOException, InterruptedException {\n           // ensuring each is a [ key value ] pair\n           for (int i = results.size() - 1; i >= 0; i--) {\n             Object result = results.get(i);\n-            if (!(result instanceof List) && 2 != ((List) result).size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5MTcwMQ==", "bodyText": "macro is a Macro which is Snapshotable so this was only a null check.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413091701", "createdAt": "2020-04-22T15:38:19Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/MacroHelper.java", "diffHunk": "@@ -56,7 +56,7 @@ public String toString() {\n     \n     @Override\n     public String snapshot() {\n-      if (macro instanceof Snapshotable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5Mjc4MQ==", "bodyText": "this.properties cannot be null because this.properties = properties;\nand\n    if (null == properties) {\n      throw new RuntimeException(\"Warp 10 configuration not set.\");\n    }", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413092781", "createdAt": "2020-04-22T15:39:39Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/MemoryWarpScriptStack.java", "diffHunk": "@@ -243,7 +243,7 @@ public MemoryWarpScriptStack(StoreClient storeClient, DirectoryClient directoryC\n     \n     this.properties = properties;\n \n-    int nregs = Integer.parseInt(null == this.properties ? String.valueOf(WarpScriptStack.DEFAULT_REGISTERS) : this.properties.getProperty(Configuration.CONFIG_WARPSCRIPT_REGISTERS, String.valueOf(WarpScriptStack.DEFAULT_REGISTERS)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5Mzc3Mg==", "bodyText": "func is always null because of line above.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413093772", "createdAt": "2020-04-22T15:40:49Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/MemoryWarpScriptStack.java", "diffHunk": "@@ -842,7 +842,7 @@ public void exec(String line) throws WarpScriptException {\n             // Check WarpScript functions\n             //\n \n-            func = null != func ? func : defined.get(stmt);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5NDQ0Nw==", "bodyText": "Macro is Snashotable so it is always false because taken care of by the condition above.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413094447", "createdAt": "2020-04-22T15:41:37Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/StackUtils.java", "diffHunk": "@@ -488,10 +489,8 @@ public static String toString(Object o) {\n       sb.append(Boolean.toString((boolean) o));\n     } else if (o instanceof WarpScriptStackFunction) {\n       sb.append(o.toString());\n-    } else if (o instanceof Snapshotable) {\n+    } else if (o instanceof Snapshotable) { // Also includes Macro\n       ((Snapshotable) o).snapshot();\n-    } else if (o instanceof Macro) {\n-      sb.append(o.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5ODExNg==", "bodyText": "As List is Iterable, only check Iterable.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413098116", "createdAt": "2020-04-22T15:46:04Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/FOREACH.java", "diffHunk": "@@ -69,7 +69,7 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       throw new WarpScriptException(getName() + \" expects a macro on top of the stack.\");\n     }\n     \n-    if (!(obj instanceof List) && !(obj instanceof Map) && !(obj instanceof Iterator) && !(obj instanceof Iterable) && !(obj instanceof GeoTimeSerie) && !(obj instanceof GTSEncoder) && !(obj instanceof String)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5ODUxNA==", "bodyText": "Always true, else an error is thrown.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413098514", "createdAt": "2020-04-22T15:46:30Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/FOREACH.java", "diffHunk": "@@ -173,7 +173,7 @@ public String next() {\n           // Do nothing!\n         }        \n       }\n-    } else if (obj instanceof GTSEncoder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwMDYxNg==", "bodyText": "Remove unneeded test, add a comment to keep that clear.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413100616", "createdAt": "2020-04-22T15:49:07Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/GEOCOVER.java", "diffHunk": "@@ -95,19 +95,16 @@ public Object applyOnElement(Object element) throws WarpScriptException {\n               }\n             }            \n           }\n-        } else if (element instanceof GTSEncoder) {          \n-          if (rhumblines) {\n-            // Can't happen\n-          } else {\n-            GTSDecoder decoder = ((GTSEncoder) element).getDecoder();\n+        } else if (element instanceof GTSEncoder) {\n+          // In that case, rhumblines == false\n+          GTSDecoder decoder = ((GTSEncoder) element).getDecoder();\n \n-            while (decoder.next()) {\n-              long location = decoder.getLocation();\n-              if (GeoTimeSerie.NO_LOCATION != location) {\n-                long cell = ((location & mask) >>> 4) | prefix;\n-                cells.add(cell);\n-              }\n-            }            ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwMTAyMA==", "bodyText": "Already taken care of by instanceof.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413101020", "createdAt": "2020-04-22T15:49:41Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/HEADER.java", "diffHunk": "@@ -45,7 +45,7 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     \n     top = stack.pop();\n     \n-    if (!(top instanceof String) || null == top) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwMjE0NQ==", "bodyText": "We are in an else clause that make sure we have !encoders.isEmpty(), so no need to check that.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413102145", "createdAt": "2020-04-22T15:51:08Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/MERGE.java", "diffHunk": "@@ -81,14 +81,12 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       } else {\n         GTSEncoder encoder = new GTSEncoder(0L);\n         \n-        if (!encoders.isEmpty()) {\n-          encoder.setMetadata(encoders.get(0).getMetadata());\n-          \n-          for (GTSEncoder enc: encoders) {\n-            encoder.merge(enc);\n-          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwMzc0MQ==", "bodyText": "If null != decoder then null == gts, make that explicit.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413103741", "createdAt": "2020-04-22T15:53:07Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/MVEXTRACT.java", "diffHunk": "@@ -129,7 +129,7 @@ public Object applyOnElement(Object element) throws WarpScriptException {\n       } else if (value instanceof String) {\n         if (null != decoder) {\n           // We are getting values from a decoder, so a STRING is not a binary value\n-          values.add(elt(decoder, gts, idx, value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwNDUxNg==", "bodyText": "If null == decoder, make that explicit.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413104516", "createdAt": "2020-04-22T15:54:05Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/MVEXTRACT.java", "diffHunk": "@@ -140,14 +140,14 @@ public Object applyOnElement(Object element) throws WarpScriptException {\n               values.add(mvextract(GTSWrapperHelper.fromGTSWrapperToGTSEncoder(wrapper)));\n             } else {\n               List<Object> elt = new ArrayList<Object>();\n-              elt.add(elt(decoder, gts, idx, value));\n+              elt.add(elt(null, gts, idx, value));\n               elt.add(mvextract(GTSWrapperHelper.fromGTSWrapperToGTSEncoder(wrapper)));\n               values.add(elt);\n             }\n           } catch (IOException e) {\n             throw new WarpScriptException(\"Error decoding.\");\n           } catch (TException te) {\n-            values.add(elt(decoder, gts, idx, value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwNjA2MQ==", "bodyText": "Breaking here will make the test in the while useless. Remove the break and leave the while end.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413106061", "createdAt": "2020-04-22T15:56:02Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/REOPTALT.java", "diffHunk": "@@ -126,7 +126,7 @@ private static final String buildOptAlt(List<String> alternatives) {\n         len++;\n       } else {\n         len--;\n-        break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwNjQyNg==", "bodyText": "Always true, else an error would have been thrown.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413106426", "createdAt": "2020-04-22T15:56:27Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/REVERSE.java", "diffHunk": "@@ -74,7 +74,7 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       }\n       \n       stack.push(top);\n-    } else if (top instanceof byte[]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwNzE1NQ==", "bodyText": "Macro case is never reached because already taken care of by the Snashotable one.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413107155", "createdAt": "2020-04-22T15:57:22Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/SNAPSHOT.java", "diffHunk": "@@ -385,12 +385,9 @@ public static void addElement(SNAPSHOT snapshot, StringBuilder sb, Object o, boo\n       } else if (o instanceof Mark) {\n         sb.append(WarpScriptLib.MARK);\n         sb.append(\" \");\n-      } else if (o instanceof Snapshotable) {\n+      } else if (o instanceof Snapshotable) { // Also includes Macro\n         sb.append(((Snapshotable) o).snapshot());\n         sb.append(\" \");\n-      } else if (o instanceof Macro) {\n-        sb.append(o.toString());\n-        sb.append(\" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEwODM1NA==", "bodyText": "metadata is always null, replaced by null.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413108354", "createdAt": "2020-04-22T15:58:53Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/processing/Pencode.java", "diffHunk": "@@ -64,13 +64,12 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       writer = iter.next();\n     }\n     ImageWriteParam param = writer.getDefaultWriteParam();\n-    IIOMetadata metadata = null;\n     ByteArrayOutputStream baos = new ByteArrayOutputStream();\n     BufferedOutputStream output = new BufferedOutputStream(baos);\n     \n     try {\n       writer.setOutput(ImageIO.createImageOutputStream(output));\n-      writer.write(metadata, new IIOImage(bimage, null, metadata), param);      ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExMTg2Mw==", "bodyText": "readable value is known for each call.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413111863", "createdAt": "2020-04-22T16:03:29Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/SNAPSHOT.java", "diffHunk": "@@ -284,7 +284,7 @@ public static void addElement(SNAPSHOT snapshot, StringBuilder sb, Object o, boo\n           sb.append(WarpScriptLib.LIST_START);\n           sb.append(\" \");\n           for (Object oo : (Vector) o) {\n-            addElement(snapshot, sb, oo, readable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExMzEzNw==", "bodyText": "Always true.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413113137", "createdAt": "2020-04-22T16:05:15Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/unary/TOTIMESTAMP.java", "diffHunk": "@@ -46,7 +46,7 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     } else if (top instanceof java.util.Date) {\n       long ts = ((java.util.Date) top).getTime() * Constants.TIME_UNITS_PER_MS;\n       stack.push(ts);\n-    } else if (top instanceof String) {      ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzMzMxNA==", "bodyText": "LEVELDB_HOME is not in REQUIRED_PROPERTIES.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413133314", "createdAt": "2020-04-22T16:31:42Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/Warp.java", "diffHunk": "@@ -146,10 +146,6 @@ public static void main(String[] args) throws Exception {\n     boolean enableREL = !(\"true\".equals(properties.getProperty(Configuration.WARP_INTERACTIVE_DISABLE)));\n     \n     for (String property: REQUIRED_PROPERTIES) {\n-      // Don't check LEVELDB_HOME when in-memory\n-      if (inmemory && Configuration.LEVELDB_HOME.equals(property)) {\n-        continue;\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzNTYxNg==", "bodyText": "Always happen in the else clause.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413135616", "createdAt": "2020-04-22T16:34:51Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/mapper/MapperbSAX.java", "diffHunk": "@@ -146,9 +146,7 @@ public Object apply(Object[] args) throws WarpScriptException {\n         symbols[i] = ((Number) values[i]).intValue();\n       } else {\n         // Fill missing values with the last one encountered\n-        if (i > 0) {\n-          symbols[i] = symbols[i - 1];\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzOTM2Nw==", "bodyText": "dr is initialized just above so null != dr is always true.\nAlso simplifying !a || a && b to !a || b.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413139367", "createdAt": "2020-04-22T16:39:50Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneIngressHandler.java", "diffHunk": "@@ -1112,7 +1112,7 @@ public void handleMeta(String target, Request baseRequest, HttpServletRequest re\n           dr.setDeltaAttributes(deltaAttributes);\n         }\n         \n-        if (null != dr && (!forwarded || (forwarded && this.logforwarded))) {        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzOTcyNg==", "bodyText": "iter is a MetadataIterator so this is only a null check.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413139726", "createdAt": "2020-04-22T16:40:18Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java", "diffHunk": "@@ -248,7 +248,7 @@ public void onWebSocketMessage(Session session, String message) throws Exception\n             this.handler.unsubscribe(session, metadatas);\n           }\n         } finally {\n-          if (iter instanceof MetadataIterator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzOTk4OA==", "bodyText": "Make expose value explicit.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413139988", "createdAt": "2020-04-22T16:40:40Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java", "diffHunk": "@@ -844,7 +844,7 @@ private boolean getExposeOwnerProducer(Session session) {\n   \n   private synchronized void setExposeOwnerProducer(Session session, boolean expose) {\n     if (expose) {\n-      this.exposeOwnerProducer.put(session, expose);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE0MzI2Nw==", "bodyText": "Make the value of metadata explicit.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413143267", "createdAt": "2020-04-22T16:45:06Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneShardedDirectoryClientWrapper.java", "diffHunk": "@@ -178,7 +175,7 @@ public Metadata getMetadataById(BigInteger id) {\n   @Override\n   public void register(Metadata metadata) throws IOException {\n     if (null == metadata) {\n-      this.client.register(metadata);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE0NDcyNQ==", "bodyText": "Never happens as modulus is initialized and is final.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413144725", "createdAt": "2020-04-22T16:46:36Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneShardedDirectoryClientWrapper.java", "diffHunk": "@@ -93,9 +93,6 @@ public StandaloneShardedDirectoryClientWrapper(KeyStore keystore, StandaloneDire\n       this.filter = new ShardFilter() {        \n         @Override\n         public boolean exclude(long classId, long labelsId) {\n-          if (null == modulus) {\n-            return false;\n-          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0NjY4NA==", "bodyText": "This never happen. In the above line\n      if (null == chunkDecoder) {\n        continue;\n      }\n\nand the only way for chunkDecoder to be non-null is\n        if (null != this.chunks[chunk] && !(boundaryOnly && null == boundary)) {\n          chunkDecoder = this.chunks[chunk].getUnsafeDecoder(false);\n        }\n\nwhich means !(boundaryOnly && null == boundary) so boundaryOnly && null == boundary is always false.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413246684", "createdAt": "2020-04-22T19:07:53Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/InMemoryChunkSet.java", "diffHunk": "@@ -399,11 +399,6 @@ public int compare(Object[] o1, Object[] o2) {\n         continue;\n       }\n       \n-      // Chunk does not intersect the main range, so if we are not fetching a preboundary, ignore it\n-      if (boundaryOnly && null == boundary) {\n-        continue;\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0ODEwOQ==", "bodyText": "startrow is always set to null or else return true; in the first part.\nSo the test null == startrow is always true and then startrow is reassigned to a new value.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413248109", "createdAt": "2020-04-22T19:10:10Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneStoreClient.java", "diffHunk": "@@ -387,45 +387,37 @@ public boolean hasNext() {\n             Entry<byte[], byte[]> kv = iterator.peekNext();\n \n             // If the next key is over the range, nullify startrow unless we still have boundaries to fetch\n-            if (0 == preBoundary && 0 == postBoundary && Bytes.compareTo(kv.getKey(), stoprow) > 0) {\n-              startrow = null;\n-            } else {\n+            if (!(0 == preBoundary && 0 == postBoundary && Bytes.compareTo(kv.getKey(), stoprow) > 0)) {\n               //\n               // If we are time based or value count based with values left to read or with boundaries still to be fetched,\n               // return true\n               if (-1 == fcount || nvalues > 0 || preBoundary > 0 || postBoundary > 0) {\n                 return true;\n-              } else {\n-                startrow = null;\n               }\n             }\n-          } else {\n-            startrow = null;\n           }\n           \n-          // We need to reseek if startrow is null (it indicates we need to skip to the next GTS)\n-          if (null == startrow) {\n-            idx++;\n+          // We need to reseek because we need to skip to the next GTS\n+          idx++;\n \n-            if (idx >= metadatas.size()) {\n-              return false;\n-            }\n-            \n-            startrow = new byte[Constants.HBASE_RAW_DATA_KEY_PREFIX.length + 8 + 8 + 8];\n-            ByteBuffer bb = ByteBuffer.wrap(startrow).order(ByteOrder.BIG_ENDIAN);\n-            bb.put(Constants.HBASE_RAW_DATA_KEY_PREFIX);\n-            bb.putLong(metadatas.get(idx).getClassId());\n-            bb.putLong(metadatas.get(idx).getLabelsId());\n-            bb.putLong(Long.MAX_VALUE - now);\n-              \n-            stoprow = new byte[startrow.length];\n-            bb = ByteBuffer.wrap(stoprow).order(ByteOrder.BIG_ENDIAN);\n-            bb.put(Constants.HBASE_RAW_DATA_KEY_PREFIX);\n-            bb.putLong(metadatas.get(idx).getClassId());\n-            bb.putLong(metadatas.get(idx).getLabelsId());                            \n-            bb.putLong(Long.MAX_VALUE - then);\n+          if (idx >= metadatas.size()) {\n+            return false;\n           }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/0245794d2d166eb5d5a71f388783579262b8f647", "committedDate": "2020-04-22T19:12:33Z", "message": "Remove an always-true condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NTAwMjY5", "url": "https://github.com/senx/warp10-platform/pull/746#pullrequestreview-398500269", "createdAt": "2020-04-22T19:16:54Z", "commit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOToxNjo1NVrOGKG61Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOToxODo0MVrOGKG_LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1MjMwOQ==", "bodyText": "if hasLabel, then checkLabels because hasLabel can be true only if checkLabels", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413252309", "createdAt": "2020-04-22T19:16:55Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/filter/FilterByLabels.java", "diffHunk": "@@ -136,12 +136,12 @@ public FilterByLabels(String name, Map<String,String> selectors, boolean checkLa\n           }\n \n           // Now check the label or attribute value\n-          if (hasLabel && checkLabels) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1MzQyMA==", "bodyText": "Because\n          if (!matched) {\t          if (!matched) {\n            break;\t            break;\n          }\n\nWe know that it matched and it was not on labels, so it must be on attributes.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r413253420", "createdAt": "2020-04-22T19:18:41Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/filter/FilterByLabels.java", "diffHunk": "@@ -136,12 +136,12 @@ public FilterByLabels(String name, Map<String,String> selectors, boolean checkLa\n           }\n \n           // Now check the label or attribute value\n-          if (hasLabel && checkLabels) {\n+          if (hasLabel) {\n             if (!matcher.reset(labels.get(label)).matches()) {\n               matched = false;\n               break;\n             }            \n-          } else if (checkAttributes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTE1MzE4", "url": "https://github.com/senx/warp10-platform/pull/746#pullrequestreview-401915318", "createdAt": "2020-04-28T14:50:08Z", "commit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo1MDowOVrOGNX9Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNTo1NTozOFrOGNbLAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3NzEzNQ==", "bodyText": "I think the original intent was the other way around, i.e. if THROTTLING_MANAGER_SUFFIX ends with \".dump\" then the dump file should end in \".dump.\". So please correct your fix.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416677135", "createdAt": "2020-04-28T14:50:09Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/continuum/ThrottlingManager.java", "diffHunk": "@@ -1098,13 +1098,8 @@ public static void fuse(HyperLogLogPlus hllp) throws Exception {\n   \n   private static void dumpCurrentConfig() {\n     if (null != dir && !producerHLLPEstimators.isEmpty() && !applicationHLLPEstimators.isEmpty()) {\n-      File config;\n-      if (\".dump\".endsWith(THROTTLING_MANAGER_SUFFIX)) {\n-        config = new File(dir, \"current\" + THROTTLING_MANAGER_SUFFIX + \".dump.\");      \n-      } else {\n-        config = new File(dir, \"current\" + THROTTLING_MANAGER_SUFFIX + \".dump\");\n-      }\n-      ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxMjcxOA=="}, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3Nzk1OA==", "bodyText": "If the various endpoint paths are modified, api/v0 may disappear from them, modifying this check will then lead to an error which is not suitable.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416677958", "createdAt": "2020-04-28T14:51:06Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressExecHandler.java", "diffHunk": "@@ -200,7 +200,7 @@ public void handle(String target, Request baseRequest, HttpServletRequest req, H\n       \n       String pathInfo = req.getPathInfo().substring(target.length());\n       \n-      if (null != pathInfo && pathInfo.length() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxNTE3NA=="}, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3OTcwOQ==", "bodyText": "Yes it should, but probably as part of a coherent PR removing all mentions of archive, including from Store interface method signatures.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416679709", "createdAt": "2020-04-28T14:53:15Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/continuum/egress/EgressFetchHandler.java", "diffHunk": "@@ -142,16 +142,12 @@ public EgressFetchHandler(KeyStore keystore, Properties properties, DirectoryCli\n   \n   @Override\n   public void handle(String target, Request baseRequest, HttpServletRequest req, HttpServletResponse resp) throws IOException, ServletException {\n-    boolean fromArchive = false;\n     boolean splitFetch = false;\n-    boolean writeTimestamp = false;\n-    \n+\n     if (Constants.API_ENDPOINT_FETCH.equals(target)) {\n       baseRequest.setHandled(true);\n-      fromArchive = false;\n     } else if (Constants.API_ENDPOINT_AFETCH.equals(target)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAxNjc4NQ=="}, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NzA3OQ==", "bodyText": "lastserver should be set to tokens[0] in the loop instead of removing the check.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416687079", "createdAt": "2020-04-28T15:02:25Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/hadoop/Warp10InputFormat.java", "diffHunk": "@@ -319,7 +318,7 @@ public Warp10InputFormat() {\n       \n       // If the server changed or we've reached the maximum split size, flush the current split.\n       \n-      if (null != lastserver && !lastserver.equals(tokens[0]) || avgsplitcount == subsplits) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA4MTIzNA=="}, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4ODE4MQ==", "bodyText": "make that null != macro", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416688181", "createdAt": "2020-04-28T15:03:54Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/MacroHelper.java", "diffHunk": "@@ -56,7 +56,7 @@ public String toString() {\n     \n     @Override\n     public String snapshot() {\n-      if (macro instanceof Snapshotable) {\n+      if (macro != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5MjI3Mg==", "bodyText": "Maybe, but should we check the attributes? This is what checkAttributes determines, so it is not always true.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416692272", "createdAt": "2020-04-28T15:09:04Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/filter/FilterByLabels.java", "diffHunk": "@@ -136,12 +136,12 @@ public FilterByLabels(String name, Map<String,String> selectors, boolean checkLa\n           }\n \n           // Now check the label or attribute value\n-          if (hasLabel && checkLabels) {\n+          if (hasLabel) {\n             if (!matcher.reset(labels.get(label)).matches()) {\n               matched = false;\n               break;\n             }            \n-          } else if (checkAttributes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1MzQyMA=="}, "originalCommit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NzQ0Mg==", "bodyText": "Agreed, but keeping readable in the calls makes understanding the code simpler when browsing it without an IDE which makes the parameter name explicit.", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416697442", "createdAt": "2020-04-28T15:15:29Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/SNAPSHOT.java", "diffHunk": "@@ -284,7 +284,7 @@ public static void addElement(SNAPSHOT snapshot, StringBuilder sb, Object o, boo\n           sb.append(WarpScriptLib.LIST_START);\n           sb.append(\" \");\n           for (Object oo : (Vector) o) {\n-            addElement(snapshot, sb, oo, readable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExMTg2Mw=="}, "originalCommit": {"oid": "5952e81ef72f0596e474e20819d453ec2546ad8d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwMTQ5MA==", "bodyText": "null != iter", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416701490", "createdAt": "2020-04-28T15:20:39Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/standalone/StandalonePlasmaHandler.java", "diffHunk": "@@ -248,7 +248,7 @@ public void onWebSocketMessage(Session session, String message) throws Exception\n             this.handler.unsubscribe(session, metadatas);\n           }\n         } finally {\n-          if (iter instanceof MetadataIterator) {\n+          if (iter != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyOTg1Ng==", "bodyText": "Leave a comment indicating this is determined by startrow having been set to null", "url": "https://github.com/senx/warp10-platform/pull/746#discussion_r416729856", "createdAt": "2020-04-28T15:55:38Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/standalone/StandaloneStoreClient.java", "diffHunk": "@@ -387,45 +387,37 @@ public boolean hasNext() {\n             Entry<byte[], byte[]> kv = iterator.peekNext();\n \n             // If the next key is over the range, nullify startrow unless we still have boundaries to fetch\n-            if (0 == preBoundary && 0 == postBoundary && Bytes.compareTo(kv.getKey(), stoprow) > 0) {\n-              startrow = null;\n-            } else {\n+            if (!(0 == preBoundary && 0 == postBoundary && Bytes.compareTo(kv.getKey(), stoprow) > 0)) {\n               //\n               // If we are time based or value count based with values left to read or with boundaries still to be fetched,\n               // return true\n               if (-1 == fcount || nvalues > 0 || preBoundary > 0 || postBoundary > 0) {\n                 return true;\n-              } else {\n-                startrow = null;\n               }\n             }\n-          } else {\n-            startrow = null;\n           }\n           \n-          // We need to reseek if startrow is null (it indicates we need to skip to the next GTS)\n-          if (null == startrow) {\n-            idx++;\n+          // We need to reseek because we need to skip to the next GTS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0245794d2d166eb5d5a71f388783579262b8f647"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08fa218c1306416d6d88d74ec13f3b5f35bb3fcc", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/08fa218c1306416d6d88d74ec13f3b5f35bb3fcc", "committedDate": "2020-05-04T11:08:45Z", "message": "Addressed PR comments, fixed symbols in url, more comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "577e602556ea484678111fd88705f5601cbfbfb4", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/577e602556ea484678111fd88705f5601cbfbfb4", "committedDate": "2020-05-04T19:02:42Z", "message": "Add comments to make if/else clear"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1Mjc1MTk0", "url": "https://github.com/senx/warp10-platform/pull/746#pullrequestreview-405275194", "createdAt": "2020-05-04T19:18:22Z", "commit": {"oid": "577e602556ea484678111fd88705f5601cbfbfb4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3327, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}