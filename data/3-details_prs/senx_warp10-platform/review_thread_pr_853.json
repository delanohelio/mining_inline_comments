{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MDM3MjUx", "number": 853, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoxOTo1NlrOEoA-kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0MTo1MFrOEoCl7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzk0NTEyOnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/SPLIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoxOTo1NlrOHY3ayQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDoxOTo1NlrOHY3ayQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzNTg0OQ==", "bodyText": "-1 == index", "url": "https://github.com/senx/warp10-platform/pull/853#discussion_r495835849", "createdAt": "2020-09-28T10:19:56Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/SPLIT.java", "diffHunk": "@@ -16,56 +16,94 @@\n \n package io.warp10.script.functions;\n \n-import io.warp10.continuum.gts.UnsafeString;\n import io.warp10.script.NamedWarpScriptFunction;\n-import io.warp10.script.WarpScriptStackFunction;\n import io.warp10.script.WarpScriptException;\n import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n \n-import java.net.URLDecoder;\n import java.util.ArrayList;\n import java.util.List;\n \n /**\n- * Split a String in segments given a delimiter\n+ * Split a String in segments given a delimiter.\n+ * <p>\n+ * The limit parameter controls the number of times the pattern is applied and therefore affects the length of the\n+ * resulting array. If the limit n is greater than zero then the pattern will be applied at most n - 1 times, the\n+ * array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched\n+ * delimiter.\n  */\n public class SPLIT extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n-  \n+\n   public SPLIT(String name) {\n     super(name);\n   }\n-  \n+\n   @Override\n   public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     Object o = stack.pop();\n-    \n+\n+    int limit = Integer.MAX_VALUE;\n+\n+    if (o instanceof Long) {\n+      limit = Math.toIntExact((Long) o);\n+\n+      if (limit <= 0) {\n+        throw new WarpScriptException(getName() + \" expects the limit to be a strictly positive integer.\");\n+      }\n+\n+      o = stack.pop();\n+    }\n+\n     if (!(o instanceof String)) {\n       throw new WarpScriptException(getName() + \" expects a string delimiter of length 1.\");\n     }\n-    \n+\n     if (1 != o.toString().length()) {\n       throw new WarpScriptException(getName() + \" expects a string delimiter of length 1.\");\n     }\n \n     char delimiter = o.toString().charAt(0);\n-    \n+\n     o = stack.pop();\n \n     if (!(o instanceof String)) {\n       throw new WarpScriptException(getName() + \" operates on a String.\");\n     }\n \n+    stack.push(split(o.toString(), delimiter, limit));\n \n-    String[] tokens = UnsafeString.split(o.toString(), delimiter);\n-    \n-    List<String> ltokens = new ArrayList<String>();\n-    \n-    for (String token: tokens) {\n-      ltokens.add(token);\n-    }\n-    \n-    stack.push(ltokens);\n-    \n     return stack;\n   }\n+\n+  /**\n+   * Split a string using a delimiter and returning a List of \"limit\" maximum length.\n+   * @param input The String instance to be split.\n+   * @param delim The delimiter to use for the split.\n+   * @param limit The returned List maximum size. For limit <= 0 the List contains the input.\n+   * @return A List of splits.\n+   */\n+  public static List<String> split(String input, char delim, int limit) {\n+    ArrayList<String> l = new ArrayList<String>();\n+    int offset = 0;\n+    int splits = 1;\n+\n+    while (splits < limit) {\n+      int index = input.indexOf(delim, offset);\n+      if (index == -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a0442f7ddc42ddbe63968df097c34d0590533b"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDIwOTY0OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/SPLIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0MTo0N1rOHY54Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0MTo0N1rOHY54Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3NjE4Mw==", "bodyText": "Could use (String) o since you checked that o was indeed an instance of String.", "url": "https://github.com/senx/warp10-platform/pull/853#discussion_r495876183", "createdAt": "2020-09-28T11:41:47Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/SPLIT.java", "diffHunk": "@@ -16,56 +16,94 @@\n \n package io.warp10.script.functions;\n \n-import io.warp10.continuum.gts.UnsafeString;\n import io.warp10.script.NamedWarpScriptFunction;\n-import io.warp10.script.WarpScriptStackFunction;\n import io.warp10.script.WarpScriptException;\n import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n \n-import java.net.URLDecoder;\n import java.util.ArrayList;\n import java.util.List;\n \n /**\n- * Split a String in segments given a delimiter\n+ * Split a String in segments given a delimiter.\n+ * <p>\n+ * The limit parameter controls the number of times the pattern is applied and therefore affects the length of the\n+ * resulting array. If the limit n is greater than zero then the pattern will be applied at most n - 1 times, the\n+ * array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched\n+ * delimiter.\n  */\n public class SPLIT extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n-  \n+\n   public SPLIT(String name) {\n     super(name);\n   }\n-  \n+\n   @Override\n   public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     Object o = stack.pop();\n-    \n+\n+    int limit = Integer.MAX_VALUE;\n+\n+    if (o instanceof Long) {\n+      limit = Math.toIntExact((Long) o);\n+\n+      if (limit <= 0) {\n+        throw new WarpScriptException(getName() + \" expects the limit to be a strictly positive integer.\");\n+      }\n+\n+      o = stack.pop();\n+    }\n+\n     if (!(o instanceof String)) {\n       throw new WarpScriptException(getName() + \" expects a string delimiter of length 1.\");\n     }\n-    \n+\n     if (1 != o.toString().length()) {\n       throw new WarpScriptException(getName() + \" expects a string delimiter of length 1.\");\n     }\n \n     char delimiter = o.toString().charAt(0);\n-    \n+\n     o = stack.pop();\n \n     if (!(o instanceof String)) {\n       throw new WarpScriptException(getName() + \" operates on a String.\");\n     }\n \n+    stack.push(split(o.toString(), delimiter, limit));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0571e663d689493147817747bd5534f66c87e9a"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDIwOTcyOnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/SPLIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0MTo1MFrOHY54Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo0MTo1MFrOHY54Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3NjE5NQ==", "bodyText": "Can use (String) o", "url": "https://github.com/senx/warp10-platform/pull/853#discussion_r495876195", "createdAt": "2020-09-28T11:41:50Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/SPLIT.java", "diffHunk": "@@ -16,56 +16,94 @@\n \n package io.warp10.script.functions;\n \n-import io.warp10.continuum.gts.UnsafeString;\n import io.warp10.script.NamedWarpScriptFunction;\n-import io.warp10.script.WarpScriptStackFunction;\n import io.warp10.script.WarpScriptException;\n import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n \n-import java.net.URLDecoder;\n import java.util.ArrayList;\n import java.util.List;\n \n /**\n- * Split a String in segments given a delimiter\n+ * Split a String in segments given a delimiter.\n+ * <p>\n+ * The limit parameter controls the number of times the pattern is applied and therefore affects the length of the\n+ * resulting array. If the limit n is greater than zero then the pattern will be applied at most n - 1 times, the\n+ * array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched\n+ * delimiter.\n  */\n public class SPLIT extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n-  \n+\n   public SPLIT(String name) {\n     super(name);\n   }\n-  \n+\n   @Override\n   public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     Object o = stack.pop();\n-    \n+\n+    int limit = Integer.MAX_VALUE;\n+\n+    if (o instanceof Long) {\n+      limit = Math.toIntExact((Long) o);\n+\n+      if (limit <= 0) {\n+        throw new WarpScriptException(getName() + \" expects the limit to be a strictly positive integer.\");\n+      }\n+\n+      o = stack.pop();\n+    }\n+\n     if (!(o instanceof String)) {\n       throw new WarpScriptException(getName() + \" expects a string delimiter of length 1.\");\n     }\n-    \n+\n     if (1 != o.toString().length()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0571e663d689493147817747bd5534f66c87e9a"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1167, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}