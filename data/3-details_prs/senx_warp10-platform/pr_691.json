{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2Njk1MzM5", "number": 691, "title": "Added configuration of macro cache size", "bodyText": "", "createdAt": "2020-03-11T13:39:08Z", "url": "https://github.com/senx/warp10-platform/pull/691", "merged": true, "mergeCommit": {"oid": "341392888f25fc96a0e3bf843cd17346f66d7fb9"}, "closed": true, "closedAt": "2020-03-24T10:41:09Z", "author": {"login": "hbs"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMnRAngH2gAyMzg2Njk1MzM5OmM2MzcwN2E2OWU2NDJkNTEwMjE0MDJhOTZmYzg5ODBlNDVhODE5MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQwYBSgFqTM4MDE3ODc3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c63707a69e642d51021402a96fc8980e45a8191a", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/c63707a69e642d51021402a96fc8980e45a8191a", "committedDate": "2020-03-11T13:38:03Z", "message": "Added configuration of macro cache size"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MDU2MDc1", "url": "https://github.com/senx/warp10-platform/pull/691#pullrequestreview-375056075", "createdAt": "2020-03-16T09:57:11Z", "commit": {"oid": "c63707a69e642d51021402a96fc8980e45a8191a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwOTo1NzoxMVrOF2soMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMDo1MzowNlrOF2uypw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg5ODYwOQ==", "bodyText": "It is also a number of macro, not a size ? (size = memory footprint)", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r392898609", "createdAt": "2020-03-16T09:57:11Z", "author": {"login": "pi-r-p"}, "path": "etc/conf.templates/distributed/20-macros.conf.template", "diffHunk": "@@ -40,4 +40,8 @@\n // Maximum TTL that can be set using MACROTTL (defaults to 2**62 ms)\n #warpscript.repository.ttl.hard = \n \n+// Number of macros loaded from 'warpscript.repository.directory' to keep in memory\n+warpscript.repository.cache.size = 10000\n \n+// Size of macro cache for the macros loaded from the classpath\n+warpscript.library.cache.size = 10000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63707a69e642d51021402a96fc8980e45a8191a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzNDA1NQ==", "bodyText": "What about a warning somewhere in the logs to tell user that some macro are not in the cache ?", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r392934055", "createdAt": "2020-03-16T10:53:06Z", "author": {"login": "pi-r-p"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptMacroLibrary.java", "diffHunk": "@@ -46,8 +49,25 @@\n  * TODO(hbs): add support for secure script (the keystore is not initialized)\n  */\n public class WarpScriptMacroLibrary {\n-  private static final Map<String,Macro> macros = new HashMap<String, Macro>();\n+  private static final Map<String,Macro> macros;\n   \n+  private static final int DEFAULT_CACHE_SIZE = 10000;\n+  \n+  static {\n+    //\n+    // Create macro map\n+    //\n+    \n+    final int maxcachesize = Integer.parseInt(WarpConfig.getProperty(Configuration.WARPSCRIPT_LIBRARY_CACHE_SIZE, Integer.toString(DEFAULT_CACHE_SIZE)));\n+    \n+    macros = new LinkedHashMap<String,Macro>() {\n+      @Override\n+      protected boolean removeEldestEntry(java.util.Map.Entry<String,Macro> eldest) {\n+        return this.size() > maxcachesize;\n+      }\n+    };\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c63707a69e642d51021402a96fc8980e45a8191a"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "188246d615980b0a1e54b2ac93931dc1a9cc7ad2", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/188246d615980b0a1e54b2ac93931dc1a9cc7ad2", "committedDate": "2020-03-16T13:41:07Z", "message": "Cleaned imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b6b6874dae317f1b25e15725cc8cd4851f9fe44", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/8b6b6874dae317f1b25e15725cc8cd4851f9fe44", "committedDate": "2020-03-16T13:41:19Z", "message": "Cleaned imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19cbb4dbdba8501ae7f522eb8536ecd1b55c9076", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/19cbb4dbdba8501ae7f522eb8536ecd1b55c9076", "committedDate": "2020-03-16T13:44:04Z", "message": "Added metric for tracking the size of the WarpFleet macros cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "662c0aa5dd6c10d91f9eb1b398e6f1f263a581d1", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/662c0aa5dd6c10d91f9eb1b398e6f1f263a581d1", "committedDate": "2020-03-16T17:27:15Z", "message": "Added TTL enforcement for library macros and reporting metrics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NTQ5NzIz", "url": "https://github.com/senx/warp10-platform/pull/691#pullrequestreview-378549723", "createdAt": "2020-03-20T14:50:12Z", "commit": {"oid": "662c0aa5dd6c10d91f9eb1b398e6f1f263a581d1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNDo1MDoxMlrOF5W3XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNTozMjoxNFrOF5Yndw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY4Nzc3Mg==", "bodyText": "Unused import.", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r395687772", "createdAt": "2020-03-20T14:50:12Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptMacroLibrary.java", "diffHunk": "@@ -30,13 +27,23 @@\n import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.Enumeration;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n import java.util.Properties;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.jar.JarEntry;\n import java.util.jar.JarFile;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.warp10.WarpConfig;\n+import io.warp10.continuum.Configuration;\n+import io.warp10.continuum.sensision.SensisionConstants;\n+import io.warp10.script.WarpScriptStack.Macro;\n+import io.warp10.script.functions.INCLUDE;\n+import io.warp10.sensision.Sensision;\n+import jline.internal.Log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "662c0aa5dd6c10d91f9eb1b398e6f1f263a581d1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNTc0OQ==", "bodyText": "Why not checking for overflow and not setting expiry if it overflows?", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r395705749", "createdAt": "2020-03-20T15:16:19Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptMacroLibrary.java", "diffHunk": "@@ -185,6 +237,20 @@ public static Macro loadMacro(Object root, InputStream in, String name) throws W\n       macro.setSecure(true);\n       macro.setNameRecursive(name);\n       \n+      long macroTtl = ttl;\n+      \n+      if (null != stack.getAttribute(WarpScriptStack.ATTRIBUTE_MACRO_TTL)) {\n+        macroTtl = (long) stack.getAttribute(WarpScriptStack.ATTRIBUTE_MACRO_TTL);\n+      }\n+      \n+      if (macroTtl > hardTtl) {\n+        macroTtl = hardTtl;\n+      }\n+\n+      // Set expiry. Note using a ttl too long will wrap around the sum and will\n+      // make the macro expire too early\n+      macro.setExpiry(System.currentTimeMillis() + ttl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "662c0aa5dd6c10d91f9eb1b398e6f1f263a581d1"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNjg1Nw==", "bodyText": "Is there a reason there is a sensision metric for the library and not for the repo?", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r395706857", "createdAt": "2020-03-20T15:17:55Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptMacroRepository.java", "diffHunk": "@@ -102,8 +104,24 @@\n   /**\n    * Actual macros\n    */\n-  private final static Map<String,Macro> macros = new HashMap<String,Macro>();\n+  private final static Map<String,Macro> macros;\n  \n+  private static final int DEFAULT_CACHE_SIZE = 10000;\n+  \n+  static {\n+    //\n+    // Create macro map\n+    //\n+    \n+    final int maxcachesize = Integer.parseInt(WarpConfig.getProperty(Configuration.REPOSITORY_CACHE_SIZE, Integer.toString(DEFAULT_CACHE_SIZE)));\n+    \n+    macros = new LinkedHashMap<String,Macro>() {\n+      @Override\n+      protected boolean removeEldestEntry(java.util.Map.Entry<String,Macro> eldest) {\n+        return this.size() > maxcachesize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "662c0aa5dd6c10d91f9eb1b398e6f1f263a581d1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcxNjQ3MQ==", "bodyText": "Same question for logging evicted macros.", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r395716471", "createdAt": "2020-03-20T15:32:14Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptMacroRepository.java", "diffHunk": "@@ -102,8 +104,24 @@\n   /**\n    * Actual macros\n    */\n-  private final static Map<String,Macro> macros = new HashMap<String,Macro>();\n+  private final static Map<String,Macro> macros;\n  \n+  private static final int DEFAULT_CACHE_SIZE = 10000;\n+  \n+  static {\n+    //\n+    // Create macro map\n+    //\n+    \n+    final int maxcachesize = Integer.parseInt(WarpConfig.getProperty(Configuration.REPOSITORY_CACHE_SIZE, Integer.toString(DEFAULT_CACHE_SIZE)));\n+    \n+    macros = new LinkedHashMap<String,Macro>() {\n+      @Override\n+      protected boolean removeEldestEntry(java.util.Map.Entry<String,Macro> eldest) {\n+        return this.size() > maxcachesize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTcwNjg1Nw=="}, "originalCommit": {"oid": "662c0aa5dd6c10d91f9eb1b398e6f1f263a581d1"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da995854ceb953819f33e9ef96cac159f1d03b08", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/da995854ceb953819f33e9ef96cac159f1d03b08", "committedDate": "2020-03-20T19:58:13Z", "message": "Resolved conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db240fe8ee227b0be2803752a39ab98a695f068", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/6db240fe8ee227b0be2803752a39ab98a695f068", "committedDate": "2020-03-20T20:14:04Z", "message": "Addressed PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTAwOTcy", "url": "https://github.com/senx/warp10-platform/pull/691#pullrequestreview-379500972", "createdAt": "2020-03-23T14:48:00Z", "commit": {"oid": "6db240fe8ee227b0be2803752a39ab98a695f068"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo0ODowMVrOF6I14A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDo1ODo0OFrOF6JXWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUwNjU5Mg==", "bodyText": "Could be final.", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r396506592", "createdAt": "2020-03-23T14:48:01Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptMacroRepository.java", "diffHunk": "@@ -108,17 +114,21 @@\n  \n   private static final int DEFAULT_CACHE_SIZE = 10000;\n   \n+  private static int maxcachesize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6db240fe8ee227b0be2803752a39ab98a695f068"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxNTE2MA==", "bodyText": "Why Long.MAX_VALUE - 1 and not Long.MAX_VALUE?", "url": "https://github.com/senx/warp10-platform/pull/691#discussion_r396515160", "createdAt": "2020-03-23T14:58:48Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptMacroLibrary.java", "diffHunk": "@@ -249,7 +251,12 @@ public static Macro loadMacro(Object root, InputStream in, String name) throws W\n \n       // Set expiry. Note using a ttl too long will wrap around the sum and will\n       // make the macro expire too early\n-      macro.setExpiry(System.currentTimeMillis() + ttl);\n+      \n+      try {\n+        macro.setExpiry(Math.addExact(System.currentTimeMillis(), ttl));\n+      } catch (ArithmeticException ae) {\n+        macro.setExpiry(Long.MAX_VALUE - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6db240fe8ee227b0be2803752a39ab98a695f068"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ab5acff0db1ad8140ac5c04f158d08e5db42225", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/6ab5acff0db1ad8140ac5c04f158d08e5db42225", "committedDate": "2020-03-23T15:21:41Z", "message": "Maded maxcachesie final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTc4Nzcz", "url": "https://github.com/senx/warp10-platform/pull/691#pullrequestreview-380178773", "createdAt": "2020-03-24T10:30:33Z", "commit": {"oid": "6ab5acff0db1ad8140ac5c04f158d08e5db42225"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3462, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}