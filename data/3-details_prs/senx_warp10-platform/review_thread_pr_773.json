{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5MjM1Mzg0", "number": 773, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjozMFrOEDYfmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjozMFrOEDYfmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTgyNDkwOnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/GeoJSON.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoxNjozMFrOGgXicw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODo0NTozMFrOGgrWyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5MzI2Nw==", "bodyText": "If find this kind of hacky, I'd prefer to have a dedicated function to apply the buffer and output a WKT.\nOther solution: I was planning to modify ->GEOJSON and introduce ->WKT as well as ->WKB to convert between formats, maybe it would be a good place to add this logic?", "url": "https://github.com/senx/warp10-platform/pull/773#discussion_r436593267", "createdAt": "2020-06-08T10:16:30Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/GeoJSON.java", "diffHunk": "@@ -67,6 +72,23 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       throw new WarpScriptException(uoe);\n     }\n \n+    //\n+    // Apply buffer if defined\n+    //\n+    Map<Object,Object> buffer = (Map<Object,Object>) stack.getAttribute(GEOBUFFER.ATTR_GEOBUFFER);\n+    \n+    if (null != buffer) {\n+      // Clear the buffer\n+      stack.setAttribute(GEOBUFFER.ATTR_GEOBUFFER, null);\n+      // Apply the buffer operation\n+      BufferOp bop = new BufferOp(geometry, (BufferParameters) buffer.get(GEOBUFFER.KEY_PARAMS));\n+      geometry = bop.getResultGeometry(((Double) buffer.get(GEOBUFFER.KEY_DIST)).doubleValue());\n+      if (Boolean.TRUE.equals(buffer.get(GEOBUFFER.KEY_WKT))) {\n+        stack.push(geometry.toText());\n+        return stack;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0d71ab32be1bf7551354debec4902996d9b853e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYzMzU5Mw==", "bodyText": "Hackyness is a way of life :-)\nHow about we change the behavior of GEO.BUFFER so if the 'wkt', 'wkb' or 'geojson' key is present in its input parameters then the buffer is added to the value associated with the key and output instead of configuring the buffer for the next GEO.WKT/GEO.WKB/GEO.GEOJSON call?", "url": "https://github.com/senx/warp10-platform/pull/773#discussion_r436633593", "createdAt": "2020-06-08T11:42:37Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/GeoJSON.java", "diffHunk": "@@ -67,6 +72,23 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       throw new WarpScriptException(uoe);\n     }\n \n+    //\n+    // Apply buffer if defined\n+    //\n+    Map<Object,Object> buffer = (Map<Object,Object>) stack.getAttribute(GEOBUFFER.ATTR_GEOBUFFER);\n+    \n+    if (null != buffer) {\n+      // Clear the buffer\n+      stack.setAttribute(GEOBUFFER.ATTR_GEOBUFFER, null);\n+      // Apply the buffer operation\n+      BufferOp bop = new BufferOp(geometry, (BufferParameters) buffer.get(GEOBUFFER.KEY_PARAMS));\n+      geometry = bop.getResultGeometry(((Double) buffer.get(GEOBUFFER.KEY_DIST)).doubleValue());\n+      if (Boolean.TRUE.equals(buffer.get(GEOBUFFER.KEY_WKT))) {\n+        stack.push(geometry.toText());\n+        return stack;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5MzI2Nw=="}, "originalCommit": {"oid": "d0d71ab32be1bf7551354debec4902996d9b853e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkxNzk2MA==", "bodyText": "Good idea!", "url": "https://github.com/senx/warp10-platform/pull/773#discussion_r436917960", "createdAt": "2020-06-08T18:45:30Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/functions/GeoJSON.java", "diffHunk": "@@ -67,6 +72,23 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n       throw new WarpScriptException(uoe);\n     }\n \n+    //\n+    // Apply buffer if defined\n+    //\n+    Map<Object,Object> buffer = (Map<Object,Object>) stack.getAttribute(GEOBUFFER.ATTR_GEOBUFFER);\n+    \n+    if (null != buffer) {\n+      // Clear the buffer\n+      stack.setAttribute(GEOBUFFER.ATTR_GEOBUFFER, null);\n+      // Apply the buffer operation\n+      BufferOp bop = new BufferOp(geometry, (BufferParameters) buffer.get(GEOBUFFER.KEY_PARAMS));\n+      geometry = bop.getResultGeometry(((Double) buffer.get(GEOBUFFER.KEY_DIST)).doubleValue());\n+      if (Boolean.TRUE.equals(buffer.get(GEOBUFFER.KEY_WKT))) {\n+        stack.push(geometry.toText());\n+        return stack;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5MzI2Nw=="}, "originalCommit": {"oid": "d0d71ab32be1bf7551354debec4902996d9b853e"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1258, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}