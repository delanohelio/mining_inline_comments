{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzM0NTc1", "number": 741, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTowMFrOD0mBiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNTowOToyNFrOD0z0-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDc1NTI5OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/op/OpBoolean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTowMFrOGJmiSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTowMFrOGJmiSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMTczNg==", "bodyText": "This comment should be modified.", "url": "https://github.com/senx/warp10-platform/pull/741#discussion_r412721736", "createdAt": "2020-04-22T07:01:00Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/op/OpBoolean.java", "diffHunk": "@@ -21,55 +21,50 @@\n import io.warp10.script.WarpScriptNAryFunction;\n import io.warp10.script.WarpScriptException;\n \n-import java.util.Map;\n-\n /**\n  * OR values from multiple time series. The elevation and location are cleared.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37b5ef84da19389c39cb59b3e787fa322ad6eb48"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDc1ODYyOnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/op/OpBoolean.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTo0MFrOGJmkCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTo0MFrOGJmkCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMjE4Ng==", "bodyText": "This deserves an explanatory comment", "url": "https://github.com/senx/warp10-platform/pull/741#discussion_r412722186", "createdAt": "2020-04-22T07:01:40Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/op/OpBoolean.java", "diffHunk": "@@ -21,55 +21,50 @@\n import io.warp10.script.WarpScriptNAryFunction;\n import io.warp10.script.WarpScriptException;\n \n-import java.util.Map;\n-\n /**\n  * OR values from multiple time series. The elevation and location are cleared.\n  */\n-public class OpOR extends NamedWarpScriptFunction implements WarpScriptNAryFunction {\n-  \n+public class OpBoolean extends NamedWarpScriptFunction implements WarpScriptNAryFunction {\n+\n+  /**\n+   * Does this apply an \"or\" (true) or an \"and\" (false).\n+   */\n+  private final Boolean or;\n+\n   /**\n    * Should we ignore nulls (false) or forbid them (true)\n    */\n   private final boolean forbidNulls;\n   \n-  public OpOR(String name, boolean forbidNulls) {\n+  public OpBoolean(String name, boolean applyOr, boolean forbidNulls) {\n     super(name);\n+    this.or = applyOr;\n     this.forbidNulls = forbidNulls;\n   }\n   \n   @Override\n   public Object apply(Object[] args) throws WarpScriptException {\n     long tick = (long) args[0];\n-    String[] names = (String[]) args[1];\n-    Map<String,String>[] labels = (Map<String,String>[]) args[2];\n-    long[] ticks = (long[]) args[3];\n-    long[] locations = (long[]) args[4];\n-    long[] elevations = (long[]) args[5];\n     Object[] values = (Object[]) args[6];\n     \n-    boolean or = false;\n-    \n     long location = GeoTimeSerie.NO_LOCATION;\n     long elevation = GeoTimeSerie.NO_ELEVATION;\n-    \n-    for (int i = 0; i < values.length; i++) {      \n+\n+    for (Object value: values) {\n       // If one of the values is 'null' (absent), return null as the value\n-      if (null == values[i]) {\n+      if (null == value) {\n         if (this.forbidNulls) {\n-          return new Object[] { tick, location, elevation, null };\n+          return new Object[] {tick, location, elevation, null};\n         } else {\n           continue;\n         }\n-      }      \n-      \n-      or = or || Boolean.TRUE.equals(values[i]);\n-      \n-      if (or) {\n-        return new Object[] { tick, location, elevation, true };\n+      }\n+\n+      if (this.or.equals(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37b5ef84da19389c39cb59b3e787fa322ad6eb48"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzAxNTU5OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/op/OpBoolean.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNTowOToxM1rOGJ7o8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNTowOToxM1rOGJ7o8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2NzUwNA==", "bodyText": "Please refrain from using Python syntax for boolean constants", "url": "https://github.com/senx/warp10-platform/pull/741#discussion_r413067504", "createdAt": "2020-04-22T15:09:13Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/op/OpBoolean.java", "diffHunk": "@@ -21,55 +21,59 @@\n import io.warp10.script.WarpScriptNAryFunction;\n import io.warp10.script.WarpScriptException;\n \n-import java.util.Map;\n-\n /**\n- * OR values from multiple time series. The elevation and location are cleared.\n+ * OR or AND values from multiple time series. The elevation and location are cleared.\n  */\n-public class OpOR extends NamedWarpScriptFunction implements WarpScriptNAryFunction {\n-  \n+public class OpBoolean extends NamedWarpScriptFunction implements WarpScriptNAryFunction {\n+\n+  /**\n+   * Does this apply an \"or\" (true) or an \"and\" (false).\n+   */\n+  private final Boolean or;\n+\n   /**\n    * Should we ignore nulls (false) or forbid them (true)\n    */\n   private final boolean forbidNulls;\n-  \n-  public OpOR(String name, boolean forbidNulls) {\n+\n+  /**\n+   * Build a boolean operator applying either OR or AND.\n+   * @param name Name given to this function\n+   * @param applyOr Whether to apply \"or\" (true) or an \"and\" (false).\n+   * @param forbidNulls Whether to ignore nulls (false) or forbid them (true).\n+   */\n+  public OpBoolean(String name, boolean applyOr, boolean forbidNulls) {\n     super(name);\n+    this.or = applyOr;\n     this.forbidNulls = forbidNulls;\n   }\n   \n   @Override\n   public Object apply(Object[] args) throws WarpScriptException {\n     long tick = (long) args[0];\n-    String[] names = (String[]) args[1];\n-    Map<String,String>[] labels = (Map<String,String>[]) args[2];\n-    long[] ticks = (long[]) args[3];\n-    long[] locations = (long[]) args[4];\n-    long[] elevations = (long[]) args[5];\n     Object[] values = (Object[]) args[6];\n     \n-    boolean or = false;\n-    \n     long location = GeoTimeSerie.NO_LOCATION;\n     long elevation = GeoTimeSerie.NO_ELEVATION;\n-    \n-    for (int i = 0; i < values.length; i++) {      \n+\n+    for (Object value: values) {\n       // If one of the values is 'null' (absent), return null as the value\n-      if (null == values[i]) {\n+      if (null == value) {\n         if (this.forbidNulls) {\n-          return new Object[] { tick, location, elevation, null };\n+          return new Object[] {tick, location, elevation, null};\n         } else {\n           continue;\n         }\n-      }      \n-      \n-      or = or || Boolean.TRUE.equals(values[i]);\n-      \n-      if (or) {\n-        return new Object[] { tick, location, elevation, true };\n+      }\n+\n+      // If this function applies an OR, this can stop as soon as it encounters a True value and the result will be True.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cb6a5901926cbad18be56e3a9e3fb400c8ae5c4"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzAxNjg5OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/WarpScriptLib.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNTowOToyNFrOGJ7prA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNTowOToyNFrOGJ7prA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2NzY5Mg==", "bodyText": "Unrelated to PR", "url": "https://github.com/senx/warp10-platform/pull/741#discussion_r413067692", "createdAt": "2020-04-22T15:09:24Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/WarpScriptLib.java", "diffHunk": "@@ -2507,7 +2506,7 @@ public static void registerExtensions() {\n         wse.register();\n         \n         String namespace = props.getProperty(Configuration.CONFIG_WARPSCRIPT_NAMESPACE_PREFIX + wse.getClass().getName(), \"\").trim(); \n-        if (null != namespace && !\"\".equals(namespace)) {\n+        if (!\"\".equals(namespace)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cb6a5901926cbad18be56e3a9e3fb400c8ae5c4"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1230, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}