{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNDYzODEw", "number": 814, "title": "Add utility functions to check and set keys in keystore\u2026", "bodyText": "...and fix some keystore.forget()\nMakes key extraction and check much more readable and factorized.\nAlso fix two bugs with missing keystore.forget().", "createdAt": "2020-08-05T15:35:36Z", "url": "https://github.com/senx/warp10-platform/pull/814", "merged": true, "mergeCommit": {"oid": "01262c36d69359f753d0217d689242b53db41c10"}, "closed": true, "closedAt": "2020-09-01T15:16:04Z", "author": {"login": "ftence"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc79Bx5AH2gAyNDYzNDYzODEwOjUyOTZhNWVjOWY5Zjg5MzM4NTQ2MTQxOWE2NjJiY2U4YzNjMzVhNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEPi72AH2gAyNDYzNDYzODEwOjU4YWRjMjA0MWU2OTIyYjMwN2U3ZTg1YzZkNWFlMGNkNmIyNDA4OGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5296a5ec9f9f893385461419a662bce8c3c35a48", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/5296a5ec9f9f893385461419a662bce8c3c35a48", "committedDate": "2020-08-05T15:33:46Z", "message": "Add utility functions to check and set keys in keystore and fix some keystore.forget()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzkwNzU4", "url": "https://github.com/senx/warp10-platform/pull/814#pullrequestreview-461790758", "createdAt": "2020-08-05T15:43:11Z", "commit": {"oid": "5296a5ec9f9f893385461419a662bce8c3c35a48"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTo0MzoxMVrOG8PiMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyNTozOFrOHJtiMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgyMjI1Nw==", "bodyText": "bit -> bits", "url": "https://github.com/senx/warp10-platform/pull/814#discussion_r465822257", "createdAt": "2020-08-05T15:43:11Z", "author": {"login": "hbs"}, "path": "crypto/src/main/java/io/warp10/crypto/KeyStore.java", "diffHunk": "@@ -220,4 +224,65 @@\n    * Forget.\n    */\n   public void forget();\n+\n+\n+\n+  /**\n+   * Get a key from the configuration, add, if it exists and if the number of bits of the key is in the given values,\n+   * add it to the key store.\n+   * @param keystore The KeyStore to add the key to.\n+   * @param keyname The key name under which to add the key in the key store.\n+   * @param props The properties from which to get the key.\n+   * @param configurationKey The configuration key holding the key value.\n+   * @param sizeInBits The valid number of bits of the key. Typically 128 or 128, 192, 256.\n+   * @return The key.\n+   */\n+  public static byte[] checkAndSetKey(KeyStore keystore, String keystoreKey, Properties props, String configurationKey, int... sizeInBits) {\n+    return checkAndSetKey(keystore, keystoreKey, props, configurationKey, null, sizeInBits);\n+  }\n+\n+  /**\n+   * Get a key from the configuration, add, if it exists or has a non-null default and if the number of bits of the key\n+   * is in the given values, add it to the key store.\n+   * @param keystore The KeyStore to add the key to.\n+   * @param keyname The key name under which to add the key in the key store.\n+   * @param props The properties from which to get the key.\n+   * @param configurationKey The configuration key holding the key value.\n+   * @param defaultKeyValue The default key in case it is not found in the properties.\n+   * @param sizeInBits The valid number of bits of the key. Typically 128 or 128, 192, 256.\n+   * @return The key.\n+   */\n+  public static byte[] checkAndSetKey(KeyStore keystore, String keyname, Properties props, String configurationKey, String defaultKeyValue, int... sizeInBits) {\n+    String keyspec = props.getProperty(configurationKey, defaultKeyValue);\n+\n+    if (null != keyspec) {\n+      byte[] key = keystore.decodeKey(keyspec);\n+\n+      // Check the size of the key\n+      StringBuilder sizesStr = new StringBuilder();\n+      boolean correctSize = false;\n+      for (int sizeIndex = 0; sizeIndex < sizeInBits.length; sizeIndex++) {\n+        if (sizeInBits[sizeIndex] == key.length * 8) {\n+          correctSize = true;\n+          break;\n+        }\n+\n+        if (sizeIndex > 0) {\n+          if (sizeIndex == sizeInBits.length - 1) {\n+            sizesStr.append(\" or \");\n+          } else {\n+            sizesStr.append(\", \");\n+          }\n+        }\n+        sizesStr.append(sizeInBits[sizeIndex]);\n+      }\n+      Preconditions.checkArgument(correctSize, \"Key %s MUST be %s bit long.\", configurationKey, sizesStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5296a5ec9f9f893385461419a662bce8c3c35a48"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NDg1Nw==", "bodyText": "extraneous add", "url": "https://github.com/senx/warp10-platform/pull/814#discussion_r467094857", "createdAt": "2020-08-07T14:58:54Z", "author": {"login": "hbs"}, "path": "crypto/src/main/java/io/warp10/crypto/KeyStore.java", "diffHunk": "@@ -220,4 +224,65 @@\n    * Forget.\n    */\n   public void forget();\n+\n+\n+\n+  /**\n+   * Get a key from the configuration, add, if it exists and if the number of bits of the key is in the given values,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5296a5ec9f9f893385461419a662bce8c3c35a48"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NTA0Mw==", "bodyText": "keystore", "url": "https://github.com/senx/warp10-platform/pull/814#discussion_r467095043", "createdAt": "2020-08-07T14:59:14Z", "author": {"login": "hbs"}, "path": "crypto/src/main/java/io/warp10/crypto/KeyStore.java", "diffHunk": "@@ -220,4 +224,65 @@\n    * Forget.\n    */\n   public void forget();\n+\n+\n+\n+  /**\n+   * Get a key from the configuration, add, if it exists and if the number of bits of the key is in the given values,\n+   * add it to the key store.\n+   * @param keystore The KeyStore to add the key to.\n+   * @param keyname The key name under which to add the key in the key store.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5296a5ec9f9f893385461419a662bce8c3c35a48"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NTU4NA==", "bodyText": "extraneous add", "url": "https://github.com/senx/warp10-platform/pull/814#discussion_r467095584", "createdAt": "2020-08-07T15:00:06Z", "author": {"login": "hbs"}, "path": "crypto/src/main/java/io/warp10/crypto/KeyStore.java", "diffHunk": "@@ -220,4 +224,65 @@\n    * Forget.\n    */\n   public void forget();\n+\n+\n+\n+  /**\n+   * Get a key from the configuration, add, if it exists and if the number of bits of the key is in the given values,\n+   * add it to the key store.\n+   * @param keystore The KeyStore to add the key to.\n+   * @param keyname The key name under which to add the key in the key store.\n+   * @param props The properties from which to get the key.\n+   * @param configurationKey The configuration key holding the key value.\n+   * @param sizeInBits The valid number of bits of the key. Typically 128 or 128, 192, 256.\n+   * @return The key.\n+   */\n+  public static byte[] checkAndSetKey(KeyStore keystore, String keystoreKey, Properties props, String configurationKey, int... sizeInBits) {\n+    return checkAndSetKey(keystore, keystoreKey, props, configurationKey, null, sizeInBits);\n+  }\n+\n+  /**\n+   * Get a key from the configuration, add, if it exists or has a non-null default and if the number of bits of the key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5296a5ec9f9f893385461419a662bce8c3c35a48"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk0NTI2Ng==", "bodyText": "Incorrect parameters.", "url": "https://github.com/senx/warp10-platform/pull/814#discussion_r479945266", "createdAt": "2020-08-31T07:25:38Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/WarpDist.java", "diffHunk": "@@ -345,4 +307,19 @@ public static boolean isEgress() {\n   public static void setEgress(boolean egress) {\n     hasEgress = egress;\n   }\n+\n+  public static void extractKeys(KeyStore keystore, Properties properties) {\n+    KeyStore.checkAndSetKey(keystore, KeyStore.SIPHASH_CLASS, properties, Configuration.WARP_HASH_CLASS, 128);\n+    KeyStore.checkAndSetKey(keystore, KeyStore.SIPHASH_LABELS, properties, Configuration.WARP_HASH_LABELS, 128);\n+    KeyStore.checkAndSetKey(keystore, KeyStore.SIPHASH_TOKEN, properties, Configuration.WARP_HASH_TOKEN, 128);\n+    KeyStore.checkAndSetKey(keystore, KeyStore.SIPHASH_APPID, properties, Configuration.WARP_HASH_APP, 128);\n+    KeyStore.checkAndSetKey(keystore, KeyStore.AES_TOKEN, properties, Configuration.WARP_AES_TOKEN, 128, 192, 256);\n+    KeyStore.checkAndSetKey(keystore, KeyStore.AES_SECURESCRIPTS, properties, Configuration.WARP_AES_SCRIPTS, 128, 192, 256);\n+    KeyStore.checkAndSetKey(keystore, KeyStore.AES_METASETS, properties, Configuration.WARP_AES_METASETS, 128, 192, 256);\n+    KeyStore.checkAndSetKey(keystore, KeyStore.SIPHASH_CLASS, properties, Configuration.WARP_HASH_CLASS, Configuration.WARP_DEFAULT_AES_LOGGING, 128, 192, 256);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5296a5ec9f9f893385461419a662bce8c3c35a48"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58adc2041e6922b307e7e85c6d5ae0cd6b24088d", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/58adc2041e6922b307e7e85c6d5ae0cd6b24088d", "committedDate": "2020-08-31T09:39:40Z", "message": "Fix checkAndSetKey parameters and typos"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3193, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}