{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MDMxMjg3", "number": 819, "title": "Add RUNR to run macros from registers and make ASREGS use it", "bodyText": "", "createdAt": "2020-09-01T12:02:25Z", "url": "https://github.com/senx/warp10-platform/pull/819", "merged": true, "mergeCommit": {"oid": "179bfdb213fab8ae771a1325b86de7993f755784"}, "closed": true, "closedAt": "2020-09-03T06:37:36Z", "author": {"login": "ftence"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEl4o0gH2gAyNDc3MDMxMjg3OjhjZTM5ZmU0YjM0ZDk4ZDE3Y2I0MzE0YWU1NTUwNTQ2MDEzMTU5ZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE3pvPAH2gAyNDc3MDMxMjg3OmMwMjUxYWVhYTg0OWZlYzliNTE2MzE1NmYzMjAzYjcyZjc2MWEzOTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8ce39fe4b34d98d17cb4314ae5550546013159fa", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/8ce39fe4b34d98d17cb4314ae5550546013159fa", "committedDate": "2020-09-01T11:41:17Z", "message": "Add RUNR to run macros from registers and make ASREGS use it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTExNzc2", "url": "https://github.com/senx/warp10-platform/pull/819#pullrequestreview-480511776", "createdAt": "2020-09-02T06:15:42Z", "commit": {"oid": "8ce39fe4b34d98d17cb4314ae5550546013159fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjoxNTo0M1rOHLc8kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjoxNTo0M1rOHLc8kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc3MDY0MQ==", "bodyText": "What is the typical case when this option would be used?", "url": "https://github.com/senx/warp10-platform/pull/819#discussion_r481770641", "createdAt": "2020-09-02T06:15:43Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/VARS.java", "diffHunk": "@@ -43,32 +43,42 @@ public VARS(String name) {\n   \n   @Override\n   public Object apply(WarpScriptStack stack) throws WarpScriptException {\n-    \n     Object top = stack.pop();\n-    \n+\n+    boolean onlyStoreAndPopr = false;\n+    if (top instanceof Boolean) {\n+      onlyStoreAndPopr = (Boolean) top;\n+      top = stack.pop();\n+    }\n+\n     if (!(top instanceof Macro)) {\n       throw new WarpScriptException(getName() + \" operates on a macro.\");\n     }\n \n     Macro macro = (Macro) top;\n \n     try {\n-      stack.push(getVars(macro));\n+      stack.push(getVars(macro, onlyStoreAndPopr));\n     } catch (WarpScriptException wse) {\n       throw new WarpScriptException(getName() + \" failed.\", wse);\n     }\n \n     return stack;\n   }\n \n+  public static List<Object> getVars(Macro macro) throws WarpScriptException {\n+    return getVars(macro, false);\n+  }\n+\n   /**\n    * Loop over the macro statements, in a recursive manner, extracting all variable names.\n    *\n    * @param macro The root macro to extract the variable names from.\n+   * @param onlyStoreAndPopr Return only variables used for storage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce39fe4b34d98d17cb4314ae5550546013159fa"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69731861409afa6e9478503f9ed7c737894b1181", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/69731861409afa6e9478503f9ed7c737894b1181", "committedDate": "2020-09-02T08:20:46Z", "message": "More doc on onlyStoreAndPopr and fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0251aeaa849fec9b5163156f3203b72f761a390", "author": {"user": {"login": "ftence", "name": "Fabien Tenc\u00e9"}}, "url": "https://github.com/senx/warp10-platform/commit/c0251aeaa849fec9b5163156f3203b72f761a390", "committedDate": "2020-09-02T08:23:18Z", "message": "Again more doc on onlyStoreAndPopr"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3204, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}