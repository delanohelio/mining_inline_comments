{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MTgyMzEy", "number": 796, "title": "Added support for encoding iTXt PNG chunks", "bodyText": "", "createdAt": "2020-07-22T15:11:55Z", "url": "https://github.com/senx/warp10-platform/pull/796", "merged": true, "mergeCommit": {"oid": "8dcc0090ac9db4dec97fae6a58290d4403b5f39c"}, "closed": true, "closedAt": "2020-07-23T14:23:37Z", "author": {"login": "hbs"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3cUMdgH2gAyNDU1MTgyMzEyOjY1NGI1MWE2YmIzMjA3NmFkNjliMzc1N2VmY2RlNThjZDhhMTliNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3wL8EAFqTQ1NDE4MDc2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "654b51a6bb32076ad69b3757efcde58cd8a19b64", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/654b51a6bb32076ad69b3757efcde58cd8a19b64", "committedDate": "2020-07-22T15:11:19Z", "message": "Added support for encoding iTXt PNG chunks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb3c4ac0ec3f431222ed8d1b70c3c1d4d64f7aa8", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/eb3c4ac0ec3f431222ed8d1b70c3c1d4d64f7aa8", "committedDate": "2020-07-22T15:57:48Z", "message": "Fixed compression method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDk5Mzcw", "url": "https://github.com/senx/warp10-platform/pull/796#pullrequestreview-454099370", "createdAt": "2020-07-23T12:55:03Z", "commit": {"oid": "eb3c4ac0ec3f431222ed8d1b70c3c1d4d64f7aa8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3aea08221ca27c6e7cdbfb0201eec2f29828dc46", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/3aea08221ca27c6e7cdbfb0201eec2f29828dc46", "committedDate": "2020-07-23T13:26:59Z", "message": "Added support of tEXt and zTXt chunks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MTU4MDM1", "url": "https://github.com/senx/warp10-platform/pull/796#pullrequestreview-454158035", "createdAt": "2020-07-23T13:56:40Z", "commit": {"oid": "3aea08221ca27c6e7cdbfb0201eec2f29828dc46"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1Njo0MFrOG2Lv8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzo1Njo0MFrOG2Lv8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ2ODc4NQ==", "bodyText": "Fix the message with tEXt and zEXt", "url": "https://github.com/senx/warp10-platform/pull/796#discussion_r459468785", "createdAt": "2020-07-23T13:56:40Z", "author": {"login": "pi-r-p"}, "path": "warp10/src/main/java/io/warp10/script/processing/Pencode.java", "diffHunk": "@@ -69,7 +80,73 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n     \n     try {\n       writer.setOutput(ImageIO.createImageOutputStream(output));\n-      writer.write(null, new IIOImage(bimage, null, null), param);\n+      \n+      IIOImage iioimage = new IIOImage(bimage, null, null);\n+      \n+      if (null != chunks) {\n+        PNGMetadata metadata = new PNGMetadata();\n+        \n+        for (Entry<Object,Object> entry: chunks.entrySet()) {\n+          if (\"tEXt\".equals(entry.getKey()) || \"zTXt\".equals(entry.getKey())) {\n+            boolean zTXt = \"zTXt\".equals(entry.getKey());\n+            Object chunklist = entry.getValue();\n+            \n+            if (!(chunklist instanceof List)) {\n+              throw new WarpScriptException(getName() + \" expects chunk type to be associated with a list of chunks.\");\n+            }\n+            \n+            for (Object chunkelt: (List<Object>) chunklist) {\n+              if (!(chunkelt instanceof Map)) {\n+                throw new WarpScriptException(getName() + \" expects iTXt chunks to be MAP instances.\");\n+              }\n+              Map<Object,Object> chunkmap = (Map<Object,Object>) chunkelt;\n+              \n+              if (chunkmap.get(\"keyword\") instanceof String && chunkmap.get(\"text\") instanceof String) {\n+                if (zTXt) {\n+                  metadata.zTXt_keyword.add((String) chunkmap.get(\"keyword\"));\n+                  metadata.zTXt_text.add((String) chunkmap.get(\"text\"));\n+                  metadata.zTXt_compressionMethod.add(0);\n+                } else {\n+                  metadata.tEXt_keyword.add((String) chunkmap.get(\"keyword\"));\n+                  metadata.tEXt_text.add((String) chunkmap.get(\"text\"));                  \n+                }\n+              } else {\n+                throw new WarpScriptException(getName() + \" tEXt chunks MUST contains 'keyword' and 'text' entries of type STRING.\");\n+              }\n+            }\n+          } else if (\"iTXt\".equals(entry.getKey())) {\n+            Object chunklist = entry.getValue();\n+            \n+            if (!(chunklist instanceof List)) {\n+              throw new WarpScriptException(getName() + \" expects chunk type to be associated with a list of chunks.\");\n+            }\n+            \n+            for (Object chunkelt: (List<Object>) chunklist) {\n+              if (!(chunkelt instanceof Map)) {\n+                throw new WarpScriptException(getName() + \" expects iTXt chunks to be MAP instances.\");\n+              }\n+              Map<Object,Object> chunkmap = (Map<Object,Object>) chunkelt;\n+              \n+              if (chunkmap.get(\"keyword\") instanceof String && chunkmap.get(\"text\") instanceof String) {\n+                metadata.iTXt_keyword.add((String) chunkmap.get(\"keyword\"));\n+                metadata.iTXt_text.add((String) chunkmap.get(\"text\"));\n+                metadata.iTXt_compressionFlag.add(Boolean.TRUE.equals(chunkmap.get(\"compressionFlag\")));\n+                // 0 is the only supported compression method (http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html)\n+                metadata.iTXt_compressionMethod.add(0);\n+                metadata.iTXt_languageTag.add(chunkmap.getOrDefault(\"languageTag\", \"\").toString());\n+                metadata.iTXt_translatedKeyword.add(chunkmap.getOrDefault(\"translatedKeyword\", \"\").toString());\n+              } else {\n+                throw new WarpScriptException(getName() + \" iTXt chunks MUST contains 'keyword' and 'text' entries of type STRING.\");\n+              }\n+            }\n+          } else {\n+            throw new WarpScriptException(getName() + \" only 'iTXt' chunks can be specified.\");\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aea08221ca27c6e7cdbfb0201eec2f29828dc46"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2301ea4e5bb8e6c5d4546d0346f8cac435d07fcd", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/2301ea4e5bb8e6c5d4546d0346f8cac435d07fcd", "committedDate": "2020-07-23T14:06:47Z", "message": "Fixed messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MTgwNzY5", "url": "https://github.com/senx/warp10-platform/pull/796#pullrequestreview-454180769", "createdAt": "2020-07-23T14:20:24Z", "commit": {"oid": "2301ea4e5bb8e6c5d4546d0346f8cac435d07fcd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3380, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}