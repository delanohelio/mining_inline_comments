{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMTg3MDUy", "number": 663, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTozOTo0NlrODevF0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTo0MDozMlrODevGyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTU1NDA5OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/GeoIntersection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTozOTo0NlrOFoCSbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTozOTo0NlrOFoCSbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyNDg0Nw==", "bodyText": "simply cast element", "url": "https://github.com/senx/warp10-platform/pull/663#discussion_r377524847", "createdAt": "2020-02-11T09:39:46Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/GeoIntersection.java", "diffHunk": "@@ -35,19 +37,40 @@ public GeoIntersection(String name) {\n   \n   @Override\n   public Object apply(WarpScriptStack stack) throws WarpScriptException {\n-    Object a = stack.pop();\n-    Object b = stack.pop();\n-    \n-    if (!(a instanceof GeoXPShape) || !(b instanceof GeoXPShape)) {\n-      throw new WarpScriptException(getName() + \" expects two GeoShape instances as the top 2 elements of the stack.\");\n+    Object top = stack.pop();\n+\n+    if (top instanceof List) {\n+      List list = (List) top;\n+      if (list.isEmpty()) {\n+        stack.push(GeoXPLib.fromCells(new long[] {}, false));\n+      } else {\n+        Object element = list.get(0);\n+        if (!(element instanceof GeoXPShape)) {\n+          throw new WarpScriptException(getName() + \" expects two GeoShape instances as the top 2 elements of the stack or a list of GeoShape instances.\");\n+        }\n+        GeoXPShape shape = (GeoXPShape) element;\n+        for (int i = 1; i < list.size(); i++) {\n+          element = list.get(i);\n+          if (!(element instanceof GeoXPShape)) {\n+            throw new WarpScriptException(getName() + \" expects two GeoShape instances as the top 2 elements of the stack or a list of GeoShape instances.\");\n+          }\n+          shape = GeoXPLib.intersection(shape, (GeoXPShape) list.get(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92033386b6c2ca836321969ebb5de8225c5fa161"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTU1NjU2OnYy", "diffSide": "RIGHT", "path": "warp10/src/main/java/io/warp10/script/functions/GeoUnion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTo0MDozMlrOFoCT-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwOTo0MDozMlrOFoCT-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUyNTI0Mw==", "bodyText": "simply cast element", "url": "https://github.com/senx/warp10-platform/pull/663#discussion_r377525243", "createdAt": "2020-02-11T09:40:32Z", "author": {"login": "hbs"}, "path": "warp10/src/main/java/io/warp10/script/functions/GeoUnion.java", "diffHunk": "@@ -16,38 +16,60 @@\n \n package io.warp10.script.functions;\n \n+import com.geoxp.GeoXPLib;\n+import com.geoxp.GeoXPLib.GeoXPShape;\n import io.warp10.script.NamedWarpScriptFunction;\n-import io.warp10.script.WarpScriptStackFunction;\n import io.warp10.script.WarpScriptException;\n import io.warp10.script.WarpScriptStack;\n+import io.warp10.script.WarpScriptStackFunction;\n \n-import com.geoxp.GeoXPLib;\n-import com.geoxp.GeoXPLib.GeoXPShape;\n+import java.util.List;\n \n /**\n  * Computes the union of two GeoXPShape\n  */\n public class GeoUnion extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n-  \n+\n   public GeoUnion(String name) {\n     super(name);\n   }\n-  \n+\n   @Override\n   public Object apply(WarpScriptStack stack) throws WarpScriptException {\n-    Object a = stack.pop();\n-    Object b = stack.pop();\n-    \n-    if (!(a instanceof GeoXPShape) || !(b instanceof GeoXPShape)) {\n-      throw new WarpScriptException(getName() + \" expects two GeoShape instances as the top 2 elements of the stack.\");\n+    Object top = stack.pop();\n+\n+    if (top instanceof List) {\n+      List list = (List) top;\n+      if (list.isEmpty()) {\n+        stack.push(GeoXPLib.fromCells(new long[] {}, false));\n+      } else {\n+        Object element = list.get(0);\n+        if (!(element instanceof GeoXPShape)) {\n+          throw new WarpScriptException(getName() + \" expects two GeoShape instances as the top 2 elements of the stack or a list of GeoShape instances.\");\n+        }\n+        GeoXPShape shape = (GeoXPShape) element;\n+        for (int i = 1; i < list.size(); i++) {\n+          element = list.get(i);\n+          if (!(element instanceof GeoXPShape)) {\n+            throw new WarpScriptException(getName() + \" expects two GeoShape instances as the top 2 elements of the stack or a list of GeoShape instances.\");\n+          }\n+          shape = GeoXPLib.union(shape, (GeoXPShape) list.get(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92033386b6c2ca836321969ebb5de8225c5fa161"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1304, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}