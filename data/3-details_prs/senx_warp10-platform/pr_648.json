{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTM3NDcy", "number": 648, "title": "Added support for fetching TrueType fonts via http/https", "bodyText": "", "createdAt": "2020-01-25T17:48:25Z", "url": "https://github.com/senx/warp10-platform/pull/648", "merged": true, "mergeCommit": {"oid": "177fcf909055c1d7aeff85212d06bd69abe8ba25"}, "closed": true, "closedAt": "2020-02-07T13:35:16Z", "author": {"login": "hbs"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb93CIcgH2gAyMzY3MTM3NDcyOjgzYzU0MWQxYTg2MTVmYTNhOWQ4NGEzZjcwNTk0NTMxZmU1NzI3YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB_UTSAFqTM1NTE1MjUzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "83c541d1a8615fa3a9d84a3f70594531fe5727ae", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/83c541d1a8615fa3a9d84a3f70594531fe5727ae", "committedDate": "2020-01-25T17:31:25Z", "message": "Added support for fetching TrueType fonts via http/https"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzODM5MDc1", "url": "https://github.com/senx/warp10-platform/pull/648#pullrequestreview-353839075", "createdAt": "2020-02-05T16:05:46Z", "commit": {"oid": "83c541d1a8615fa3a9d84a3f70594531fe5727ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjowNTo0NlrOFl9jjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoxMjozNFrOFl90eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1MDE1Ng==", "bodyText": "Fails if url contains a space. This can be avoided by double escaping in WarpScript ie %2520.\nEscape in code or to be documented.", "url": "https://github.com/senx/warp10-platform/pull/648#discussion_r375350156", "createdAt": "2020-02-05T16:05:46Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/processing/typography/PcreateFont.java", "diffHunk": "@@ -45,21 +80,62 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n \n     PFont font = null;\n     \n-    if (3 == params.size()) {\n-      font = pg.parent.createFont(params.get(1).toString(), ((Number) params.get(2)).floatValue());\n-    } else if (4 == params.size()) {\n-      font = pg.parent.createFont(\n-          params.get(1).toString(),\n-          ((Number) params.get(2)).floatValue(),\n-          Boolean.TRUE.equals(params.get(3)));\n-    } else if (5 == params.size()) {\n-      font = pg.parent.createFont(\n-          params.get(1).toString(),\n-          ((Number) params.get(2)).floatValue(),\n-          Boolean.TRUE.equals(params.get(3)),\n-          params.get(4).toString().toCharArray());\n-    }\n+    //\n+    // Handle the case of remote font files differently, passing the URL\n+    // to the defined validator\n+    //\n+    \n+    if (params.get(1).toString().startsWith(\"http://\") || params.get(1).toString().startsWith(\"https://\")) {\n+      String url = resolver.resolve(params.get(1).toString());\n \n+      InputStream in = null;\n+      \n+      try {\n+        //\n+        // FIXME(hbs): support WOFF/WOFF2 on top of TTF/OTF\n+        //\n+        in = new URL(url).openStream();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83c541d1a8615fa3a9d84a3f70594531fe5727ae"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NDQ5MA==", "bodyText": "Why use a resolver instead of a validator?\nIf it needs to stay a resolver, can't this macro return a special value for forbidden access, like NULL or an empty stack and produce a clear error message?", "url": "https://github.com/senx/warp10-platform/pull/648#discussion_r375354490", "createdAt": "2020-02-05T16:12:34Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/processing/typography/PcreateFont.java", "diffHunk": "@@ -31,9 +39,36 @@\n  * Call createFont\n  */\n public class PcreateFont extends NamedWarpScriptFunction implements WarpScriptStackFunction {\n+    \n+  private final FontResolver resolver;\n   \n+  private static class FontResolver {\n+    \n+    private final String warpscript;\n+    \n+    public FontResolver(String mc2) {\n+      this.warpscript = mc2;\n+    }\n+    \n+    public String resolve(String url) throws WarpScriptException {\n+      if (null == this.warpscript) {\n+        throw new WarpScriptException(\"Font resolver not set, rejecting all URLs.\");\n+      }\n+      try {\n+        MemoryWarpScriptStack stack = new MemoryWarpScriptStack(null, null);\n+        stack.push(url);\n+        stack.exec(this.warpscript);\n+        return (String) stack.pop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83c541d1a8615fa3a9d84a3f70594531fe5727ae"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54fe37095953f60a212f4af055af2659a29da0da", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/54fe37095953f60a212f4af055af2659a29da0da", "committedDate": "2020-02-06T15:17:25Z", "message": "Added a call to URLEncoder#encode if the URL contains a space"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDU4ODAy", "url": "https://github.com/senx/warp10-platform/pull/648#pullrequestreview-355058802", "createdAt": "2020-02-07T10:20:45Z", "commit": {"oid": "54fe37095953f60a212f4af055af2659a29da0da"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoyMDo0NVrOFm4hOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoyMjowOFrOFm4jvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxNjIxNg==", "bodyText": "This will fail because it will also escape part of the URL which should not be escaped resulting it \"https%3A%2F%2F\"...\nYou could unconditionally do a url.replace(\" \", \"%20\")\nor a nice solution from SO:\n      String urlStr = resolver.resolve(params.get(1).toString());\n\n      InputStream in = null;\n      \n      try {\n        URL url = new URL(urlStr);\n        URI uri = new URI(url.getProtocol(), url.getUserInfo(), url.getHost(), url.getPort(), url.getPath(), url.getQuery(), url.getRef());\n        \n        in = new URL(uri.toASCIIString()).openStream();", "url": "https://github.com/senx/warp10-platform/pull/648#discussion_r376316216", "createdAt": "2020-02-07T10:20:45Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/processing/typography/PcreateFont.java", "diffHunk": "@@ -94,6 +96,12 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n         //\n         // FIXME(hbs): support WOFF/WOFF2 on top of TTF/OTF\n         //\n+        \n+        // Encode the URL if it contains a whitespace\n+        if (url.contains(\" \")) {\n+          url = URLEncoder.encode(url, StandardCharsets.UTF_8.name());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54fe37095953f60a212f4af055af2659a29da0da"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxNjg2MA==", "bodyText": "Could be nice to also allow file://.\n(Tested and working with the SO solution below).", "url": "https://github.com/senx/warp10-platform/pull/648#discussion_r376316860", "createdAt": "2020-02-07T10:22:08Z", "author": {"login": "ftence"}, "path": "warp10/src/main/java/io/warp10/script/processing/typography/PcreateFont.java", "diffHunk": "@@ -45,21 +82,68 @@ public Object apply(WarpScriptStack stack) throws WarpScriptException {\n \n     PFont font = null;\n     \n-    if (3 == params.size()) {\n-      font = pg.parent.createFont(params.get(1).toString(), ((Number) params.get(2)).floatValue());\n-    } else if (4 == params.size()) {\n-      font = pg.parent.createFont(\n-          params.get(1).toString(),\n-          ((Number) params.get(2)).floatValue(),\n-          Boolean.TRUE.equals(params.get(3)));\n-    } else if (5 == params.size()) {\n-      font = pg.parent.createFont(\n-          params.get(1).toString(),\n-          ((Number) params.get(2)).floatValue(),\n-          Boolean.TRUE.equals(params.get(3)),\n-          params.get(4).toString().toCharArray());\n-    }\n+    //\n+    // Handle the case of remote font files differently, passing the URL\n+    // to the defined validator\n+    //\n+    \n+    if (params.get(1).toString().startsWith(\"http://\") || params.get(1).toString().startsWith(\"https://\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54fe37095953f60a212f4af055af2659a29da0da"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55b5c335b224060c36c10f0654fdb4253e7a3940", "author": {"user": {"login": "hbs", "name": "Mathias Herberts"}}, "url": "https://github.com/senx/warp10-platform/commit/55b5c335b224060c36c10f0654fdb4253e7a3940", "committedDate": "2020-02-07T11:48:57Z", "message": "Added support for file:// and corrected handling of whitespaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MTUyNTM0", "url": "https://github.com/senx/warp10-platform/pull/648#pullrequestreview-355152534", "createdAt": "2020-02-07T13:26:12Z", "commit": {"oid": "55b5c335b224060c36c10f0654fdb4253e7a3940"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3407, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}