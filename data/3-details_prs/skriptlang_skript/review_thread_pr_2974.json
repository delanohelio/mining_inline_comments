{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjMzMjcz", "number": 2974, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMDowNToxNFrOD66nXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxOTowNFrOEPy4Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTA0MzUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMDowNToxNFrOGS_LDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMDowNjowNlrOGS_LVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU2MjU3Mw==", "bodyText": "As APickledWalrus said, we should be created a type rather than using strings.", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r422562573", "createdAt": "2020-05-10T00:05:14Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Game Rule\")\n+@Description(\"The gamerule of a world.\")\n+@Examples({\"set the gamerule \\\"commandBlockOutput\\\" of world \\\"world\\\" to false\"})\n+@Since(\"2.5\")\n+public class ExprGameRule extends SimpleExpression<Object> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprGameRule.class, Object.class, ExpressionType.PROPERTY,\n+\t\t\t\"[the] game[ ]rule %string% of %world%\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07b21f94094f2722fc0ed12f435c85fc506f2aa2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU2MjY0NQ==", "bodyText": "Also on this, it should take in multiple worlds, not just one.", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r422562645", "createdAt": "2020-05-10T00:06:06Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Game Rule\")\n+@Description(\"The gamerule of a world.\")\n+@Examples({\"set the gamerule \\\"commandBlockOutput\\\" of world \\\"world\\\" to false\"})\n+@Since(\"2.5\")\n+public class ExprGameRule extends SimpleExpression<Object> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprGameRule.class, Object.class, ExpressionType.PROPERTY,\n+\t\t\t\"[the] game[ ]rule %string% of %world%\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU2MjU3Mw=="}, "originalCommit": {"oid": "07b21f94094f2722fc0ed12f435c85fc506f2aa2"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTA0Mzg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMDowNTo0MVrOGS_LNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMDowNTo0MVrOGS_LNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU2MjYxNQ==", "bodyText": "Anytime we create new things for Skript, we use \"INSERT VERSION\" .... this will be changed later when we release.", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r422562615", "createdAt": "2020-05-10T00:05:41Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Game Rule\")\n+@Description(\"The gamerule of a world.\")\n+@Examples({\"set the gamerule \\\"commandBlockOutput\\\" of world \\\"world\\\" to false\"})\n+@Since(\"2.5\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07b21f94094f2722fc0ed12f435c85fc506f2aa2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTA0ODY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMDoxMzoyMlrOGS_NeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMDoxMzoyMlrOGS_NeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU2MzE5Mw==", "bodyText": "To keep consistency, this should be Gamerule not Game Rule", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r422563193", "createdAt": "2020-05-10T00:13:22Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Game Rule\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07b21f94094f2722fc0ed12f435c85fc506f2aa2"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTEyOTIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjoxMDo1N1rOGS_xdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjoxMDo1N1rOGS_xdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3MjQwNw==", "bodyText": "This isn't a property expression, it's a combined one.", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r422572407", "createdAt": "2020-05-10T02:10:57Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Game Rule\")\n+@Description(\"The gamerule of a world.\")\n+@Examples({\"set the gamerule \\\"commandBlockOutput\\\" of world \\\"world\\\" to false\"})\n+@Since(\"2.5\")\n+public class ExprGameRule extends SimpleExpression<Object> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprGameRule.class, Object.class, ExpressionType.PROPERTY,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07b21f94094f2722fc0ed12f435c85fc506f2aa2"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTEzMDk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjoxMzo0OVrOGS_ySQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjoxMzo0OVrOGS_ySQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3MjYxNw==", "bodyText": "separate import for the ParseResult parameter.", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r422572617", "createdAt": "2020-05-10T02:13:49Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Game Rule\")\n+@Description(\"The gamerule of a world.\")\n+@Examples({\"set the gamerule \\\"commandBlockOutput\\\" of world \\\"world\\\" to false\"})\n+@Since(\"2.5\")\n+public class ExprGameRule extends SimpleExpression<Object> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprGameRule.class, Object.class, ExpressionType.PROPERTY,\n+\t\t\t\"[the] game[ ]rule %string% of %world%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<String> gamerule;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<World> world;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07b21f94094f2722fc0ed12f435c85fc506f2aa2"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMTEzNzczOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjoyNDoxNVrOGS_1ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQwMjoyNDoxNVrOGS_1ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU3MzQxOA==", "bodyText": "if the returned type is the GameRule class, then why didn't you use that in the registration as well?", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r422573418", "createdAt": "2020-05-10T02:24:15Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Game Rule\")\n+@Description(\"The gamerule of a world.\")\n+@Examples({\"set the gamerule \\\"commandBlockOutput\\\" of world \\\"world\\\" to false\"})\n+@Since(\"2.5\")\n+public class ExprGameRule extends SimpleExpression<Object> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprGameRule.class, Object.class, ExpressionType.PROPERTY,\n+\t\t\t\"[the] game[ ]rule %string% of %world%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<String> gamerule;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<World> world;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tgamerule = (Expression<String>) exprs[0];\n+\t\tworld = (Expression<World>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(final Changer.ChangeMode mode) {\n+\t\tif (mode == Changer.ChangeMode.SET) return CollectionUtils.array(Object.class);\n+\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(final Event e, final @Nullable Object[] delta, final Changer.ChangeMode mode) {\n+\t\tassert delta != null;\n+\t\tif (mode == Changer.ChangeMode.SET) {\n+\t\t\tWorld gameruleWorld = world.getSingle(e);\n+\t\t\tif (gameruleWorld == null) return;\n+\t\t\tGameRule bukkitGamerule = getGamerule(e);\n+\t\t\tif (bukkitGamerule == null) return;\n+\t\t\tgameruleWorld.setGameRule(bukkitGamerule, delta[0]);\n+\t\t}\n+\t}\n+\t\t\n+\t@Nullable\n+\t@Override\n+\tprotected Object[] get(Event e) {\n+\t\tWorld gameruleWorld = world.getSingle(e);\n+\t\tif (gameruleWorld == null) return null;\n+\t\tGameRule<?> bukkitGamerule = getGamerule(e);\n+\t\tif (bukkitGamerule == null) return null;\n+\t\treturn new Object[] {gameruleWorld.getGameRuleValue(bukkitGamerule)};\n+\t}\n+\t\n+\t@Nullable\n+\tprivate GameRule<?> getGamerule(Event e) {\n+\t\tString stringGamerule = gamerule.getSingle(e);\n+\t\tif (stringGamerule == null) return null;\n+\t\tGameRule<?> bukkitGamerule = GameRule.getByName(stringGamerule);\n+\t\treturn bukkitGamerule;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<?> getReturnType() {\n+\t\treturn GameRule.class;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07b21f94094f2722fc0ed12f435c85fc506f2aa2"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODM3OTY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTo1NDo1OVrOGUDAHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTo1NDo1OVrOGUDAHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3Mzg4NQ==", "bodyText": "You will need to change your line endings in your IDE for this class, to prevent this kind of commit happening.\nNot only does it kill commit history, but it also prevents us from being able to easily see the line changes.", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r423673885", "createdAt": "2020-05-12T11:54:59Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -1,432 +1,442 @@\n-/**\r\n- *   This file is part of Skript.\r\n- *\r\n- *  Skript is free software: you can redistribute it and/or modify\r\n- *  it under the terms of the GNU General Public License as published by\r\n- *  the Free Software Foundation, either version 3 of the License, or\r\n- *  (at your option) any later version.\r\n- *\r\n- *  Skript is distributed in the hope that it will be useful,\r\n- *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n- *  GNU General Public License for more details.\r\n- *\r\n- *  You should have received a copy of the GNU General Public License\r\n- *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\r\n- *\r\n- *\r\n- * Copyright 2011-2017 Peter G\u00fcttinger and contributors\r\n- */\r\n-package ch.njol.skript.expressions;\r\n-\r\n-import java.lang.invoke.MethodHandle;\r\n-import java.lang.invoke.MethodHandles;\r\n-import java.lang.invoke.MethodType;\r\n-import java.util.ArrayList;\r\n-import java.util.List;\r\n-\r\n-import org.bukkit.Bukkit;\r\n-import org.bukkit.ChatColor;\r\n-import org.bukkit.entity.Entity;\r\n-import org.bukkit.entity.HumanEntity;\r\n-import org.bukkit.entity.LivingEntity;\r\n-import org.bukkit.entity.Player;\r\n-import org.bukkit.event.Event;\r\n-import org.bukkit.event.inventory.InventoryType;\r\n-import org.bukkit.inventory.Inventory;\r\n-import org.bukkit.inventory.ItemStack;\r\n-import org.bukkit.inventory.meta.ItemMeta;\r\n-import org.eclipse.jdt.annotation.Nullable;\r\n-\r\n-import ch.njol.skript.Skript;\r\n-import ch.njol.skript.aliases.ItemType;\r\n-import ch.njol.skript.classes.Changer.ChangeMode;\r\n-import ch.njol.skript.classes.Changer.ChangerUtils;\r\n-import ch.njol.skript.doc.Description;\r\n-import ch.njol.skript.doc.Examples;\r\n-import ch.njol.skript.doc.Name;\r\n-import ch.njol.skript.doc.Since;\r\n-import ch.njol.skript.expressions.base.SimplePropertyExpression;\r\n-import ch.njol.skript.lang.Expression;\r\n-import ch.njol.skript.lang.SkriptParser.ParseResult;\r\n-import ch.njol.skript.lang.Variable;\r\n-import ch.njol.skript.util.slot.Slot;\r\n-import ch.njol.util.Kleenean;\r\n-import ch.njol.util.coll.CollectionUtils;\r\n-\r\n-@Name(\"Name / Display Name\")\r\n-@Description({\"Represents the Minecraft account, display or tab list name of a player, or the custom name of an item, entity or inventory.\",\r\n-\t\t\"\",\r\n-\t\t\"<ul>\",\r\n-\t\t\"\\t<li><strong>Players</strong>\",\r\n-\t\t\"\\t\\t<ul>\",\r\n-\t\t\"\\t\\t\\t<li><strong>Name:</strong> The Minecraft account name of the player. Can't be changed, but 'display name' can be changed.</li>\",\r\n-\t\t\"\\t\\t\\t<li><strong>Display Name:</strong> The name of the player that is displayed in messages. \" +\r\n-\t\t\t\"This name can be changed freely and can include colour codes, and is shared among all plugins (e.g. chat plugins will use the display name).</li>\",\r\n-\t\t\"\\t\\t</ul>\",\r\n-\t\t\"\\t</li>\",\r\n-\t\t\"\\t<li><strong>Entities</strong>\",\r\n-\t\t\"\\t\\t<ul>\",\r\n-\t\t\"\\t\\t\\t<li><strong>Name:</strong> The custom name of the entity. Can be changed. But for living entities, \" +\r\n-\t\t\t\"the players will have to target the entity to see its name tag. For non-living entities, the name will not be visible at all. To prevent this, use 'display name'.</li>\",\r\n-\t\t\"\\t\\t\\t<li><strong>Display Name:</strong> The custom name of the entity. Can be changed, \" +\r\n-\t\t\t\"which will also enable <em>custom name visibility</em> of the entity so name tag of the entity will be visible always.</li>\",\r\n-\t\t\"\\t\\t</ul>\",\r\n-\t\t\"\\t</li>\",\r\n-\t\t\"\\t<li><strong>Items</strong>\",\r\n-\t\t\"\\t\\t<ul>\",\r\n-\t\t\"\\t\\t\\t<li><strong>Name and Display Name:</strong> The <em>custom</em> name of the item (not the Minecraft locale name). Can be changed.</li>\",\r\n-\t\t\"\\t\\t</ul>\",\r\n-\t\t\"\\t</li>\",\r\n-\t\t\"\\t<li><strong>Inventories</strong>\",\r\n-\t\t\"\\t\\t<ul>\",\r\n-\t\t\"\\t\\t\\t<li><strong>Name and Display Name:</strong> The name/title of the inventory. \" +\r\n-\t\t\t\"Changing name of an inventory means opening the same inventory with the same contents but with a different name to its current viewers.</li>\",\r\n-\t\t\"\\t\\t</ul>\",\r\n-\t\t\"\\t</li>\",\r\n-\t\t\"</ul>\"})\r\n-@Examples({\"on join:\",\r\n-\t\t\"\tplayer has permission \\\"name.red\\\"\",\r\n-\t\t\"\tset the player's display name to \\\"<red>[admin] <gold>%name of player%\\\"\",\r\n-\t\t\"\tset the player's tab list name to \\\"<green>%player's name%\\\"\",\r\n-\t\t\"set the name of the player's tool to \\\"Legendary Sword of Awesomeness\\\"\"})\r\n-@Since(\"before 2.1, 2.2-dev20 (inventory name), 2.4 (non-living entity support, changeable inventory name)\")\r\n-public class ExprName extends SimplePropertyExpression<Object, String> {\r\n-\r\n-\t@Nullable\r\n-\tstatic final MethodHandle TITLE_METHOD;\r\n-\r\n-\tstatic {\r\n-\t\tMethodHandle _METHOD = null;\r\n-\t\ttry {\r\n-\t\t\t_METHOD = MethodHandles.lookup().findVirtual(Inventory.class, \"getTitle\", MethodType.methodType(String.class));\r\n-\t\t} catch (IllegalAccessException | NoSuchMethodException ignored) {}\r\n-\t\tTITLE_METHOD = _METHOD;\r\n-\t}\r\n-\r\n-\tprivate final static int ITEM = 1, ENTITY = 2, PLAYER = 4, INVENTORY = 8;\r\n-\tfinal static String[] types = {\"itemstacks/slots\", \"entities\", \"players\", \"inventories\"};\r\n-\r\n-\tprivate enum NameType {\r\n-\t\tNAME(\"name\", \"name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t((ItemType) o).setItemMeta(m);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemType) {\r\n-\t\t\t\t\tItemMeta m = ((ItemType) o).getItemMeta();\r\n-\t\t\t\t\treturn !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tDISPLAY_NAME(\"display name\", \"(display|nick|chat)[ ]name[s]\", PLAYER | ITEM | ENTITY | INVENTORY, PLAYER | ITEM | ENTITY | INVENTORY) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\t((Player) o).setDisplayName(name == null ? ((Player) o).getName() : name + ChatColor.RESET);\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\t((Entity) o).setCustomName(name);\r\n-\t\t\t\t\t((Entity) o).setCustomNameVisible(name != null);\r\n-\t\t\t\t\tif (o instanceof LivingEntity)\r\n-\t\t\t\t\t\t((LivingEntity) o).setRemoveWhenFarAway(name == null);\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\tif (m != null) {\r\n-\t\t\t\t\t\tm.setDisplayName(name);\r\n-\t\t\t\t\t\t((ItemStack) o).setItemMeta(m);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tInventory inventory = ((Inventory) o);\r\n-\t\t\t\t\tList<HumanEntity> viewers = new ArrayList<>(inventory.getViewers());\r\n-\t\t\t\t\tif (viewers.isEmpty())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tInventory copy;\r\n-\t\t\t\t\tInventoryType invType = inventory.getType();\r\n-\t\t\t\t\tif (!invType.isCreatable())\r\n-\t\t\t\t\t\treturn;\r\n-\t\t\t\t\tif (invType == InventoryType.CHEST) {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize());\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), inventory.getSize(), name);\r\n-\t\t\t\t\t} else {\r\n-\t\t\t\t\t\tif (name == null)\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType);\r\n-\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\tcopy = Bukkit.createInventory(inventory.getHolder(), invType, name);\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\tcopy.setContents(inventory.getContents());\r\n-\t\t\t\t\tviewers.forEach(human -> human.openInventory(copy));\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Entity) {\r\n-\t\t\t\t\treturn ((Entity) o).getCustomName();\r\n-\t\t\t\t} else if (o instanceof ItemStack) {\r\n-\t\t\t\t\tif (!((ItemStack) o).hasItemMeta())\r\n-\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\tItemMeta m = ((ItemStack) o).getItemMeta();\r\n-\t\t\t\t\treturn m == null || !m.hasDisplayName() ? null : m.getDisplayName();\r\n-\t\t\t\t} else if (o instanceof Inventory) {\r\n-\t\t\t\t\tif (TITLE_METHOD != null) {\r\n-\t\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t\treturn ((String) TITLE_METHOD.invoke(o));\r\n-\t\t\t\t\t\t} catch (IllegalAccessException e) {\r\n-\t\t\t\t\t\t\tassert false;\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t} catch (Throwable e) {\r\n-\t\t\t\t\t\t\tSkript.exception(e);\r\n-\t\t\t\t\t\t\treturn null;\r\n-\t\t\t\t\t\t}\r\n-\t\t\t\t\t}\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t},\r\n-\t\tTABLIST_NAME(\"player list name\", \"(player|tab)[ ]list name[s]\", PLAYER, PLAYER) {\r\n-\t\t\t@Override\r\n-\t\t\tvoid set(@Nullable Object o, @Nullable String name) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\ttry {\r\n-\t\t\t\t\t\t((Player) o).setPlayerListName(name == null ? \"\" : name);\r\n-\t\t\t\t\t} catch (IllegalArgumentException ignored) {}\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\r\n-\t\t\t@Override\r\n-\t\t\t@Nullable\r\n-\t\t\tString get(@Nullable Object o) {\r\n-\t\t\t\tif (o == null)\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\tif (o instanceof Player) {\r\n-\t\t\t\t\treturn ((Player) o).getPlayerListName();\r\n-\t\t\t\t} else {\r\n-\t\t\t\t\tassert false;\r\n-\t\t\t\t\treturn null;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t};\r\n-\r\n-\t\tfinal String name;\r\n-\t\tfinal String pattern;\r\n-\t\tfinal int from;\r\n-\t\tfinal int acceptChange;\r\n-\r\n-\t\tNameType(String name, String pattern, int from, int change) {\r\n-\t\t\tthis.name = name;\r\n-\t\t\tthis.pattern = \"(\" + ordinal() + \"\u00a6)\" + pattern;\r\n-\t\t\tthis.from = from;\r\n-\t\t\tacceptChange = change;\r\n-\t\t}\r\n-\r\n-\t\tabstract void set(@Nullable Object o, @Nullable String s);\r\n-\r\n-\t\t@Nullable\r\n-\t\tabstract String get(@Nullable Object o);\r\n-\r\n-\t\tString getFrom() {\r\n-\t\t\tStringBuilder b = new StringBuilder();\r\n-\t\t\tfor (int i = 0; i < types.length; i++) {\r\n-\t\t\t\tif ((from & (1 << i)) == 0)\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ITEM && !Skript.isRunningMinecraft(1, 4, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif ((1 << i) == ENTITY && !Skript.isRunningMinecraft(1, 5))\r\n-\t\t\t\t\tcontinue;\r\n-\t\t\t\tif (b.length() != 0)\r\n-\t\t\t\t\tb.append(\"/\");\r\n-\t\t\t\tb.append(types[i]);\r\n-\t\t\t}\r\n-\t\t\treturn \"\" + b;\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tstatic {\r\n-\t\tfor (NameType n : NameType.values())\r\n-\t\t\tregister(ExprName.class, String.class, n.pattern, n.getFrom());\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"null\")\r\n-\tprivate NameType type;\r\n-\r\n-\t@SuppressWarnings({\"null\", \"unchecked\"})\r\n-\t@Override\r\n-\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\r\n-\t\ttype = NameType.values()[parseResult.mark];\r\n-\t\tif (exprs[0] instanceof Variable)\r\n-\t\t\tsetExpr(exprs[0].getConvertedExpression(Object.class));\r\n-\t\telse\r\n-\t\t\tsetExpr(exprs[0]);\r\n-\t\treturn true;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\t@Nullable\r\n-\tpublic String convert(Object o) {\r\n-\t\treturn type.get(o instanceof Slot ? ((Slot) o).getItem() : o);\r\n-\t}\r\n-\r\n-\tprivate int changeType = 0;\r\n-\r\n-\t// TODO find a better method for handling changes (in general)\r\n-\t// e.g. a Changer that takes an object and returns another which should then be saved if applicable (the Changer includes the ChangeMode)\r\n-\t@Override\r\n-\t@Nullable\r\n-\tpublic Class<?>[] acceptChange(ChangeMode mode) {\r\n-\t\tif (mode == ChangeMode.DELETE && (type.acceptChange & ~PLAYER) != 0 || mode == ChangeMode.RESET)\r\n-\t\t\treturn new Class[0];\r\n-\t\tif (mode != ChangeMode.SET)\r\n-\t\t\treturn null;\r\n-\t\tif ((type.acceptChange & PLAYER) != 0 && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = PLAYER;\r\n-\t\t} else if ((type.acceptChange & INVENTORY) != 0 && Inventory.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tchangeType = INVENTORY;\r\n-\t\t} else if ((type.acceptChange & ITEM) != 0 && (getExpr().isSingle() && ChangerUtils.acceptsChange(getExpr(), ChangeMode.SET, ItemStack.class, ItemType.class) || Slot.class.isAssignableFrom(getExpr().getReturnType()))) {\r\n-\t\t\tchangeType = ITEM;\r\n-\t\t} else if ((type.acceptChange & ENTITY) != 0 && Entity.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\tif (type == NameType.NAME && Player.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\t\tSkript.error(\"Can't change the Minecraft name of a player. Change the 'display name' or 'tab list name' instead.\");\r\n-\t\t\t\treturn null;\r\n-\t\t\t}\r\n-\t\t\tchangeType = ENTITY;\r\n-\t\t}\r\n-\t\treturn changeType == 0 ? null : CollectionUtils.array(String.class);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\r\n-\t\tString name = delta == null ? null : (String) delta[0];\r\n-\t\tif (changeType == ITEM) {\r\n-\t\t\tif (Slot.class.isAssignableFrom(getExpr().getReturnType())) {\r\n-\t\t\t\tfor (Slot s : (Slot[]) getExpr().getArray(e)) {\r\n-\t\t\t\t\tItemStack i = s.getItem();\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\ts.setItem(i);\r\n-\t\t\t\t}\r\n-\t\t\t} else {\r\n-\t\t\t\tObject i = getExpr().getSingle(e);\r\n-\t\t\t\tif (i instanceof ItemType) {\r\n-\t\t\t\t\ttype.set(i, name);\r\n-\t\t\t\t\tgetExpr().change(e, new ItemType[] {(ItemType) i}, ChangeMode.SET);\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\t}\r\n-\r\n-\t\t\t\tif (!(i instanceof ItemStack) && !(i instanceof Slot))\r\n-\t\t\t\t\treturn;\r\n-\t\t\t\tItemStack is = i instanceof Slot ? ((Slot) i).getItem() : (ItemStack) i;\r\n-\t\t\t\ttype.set(is, name);\r\n-\t\t\t\tif (i instanceof Slot)\r\n-\t\t\t\t\t((Slot) i).setItem(is);\r\n-\t\t\t\telse if (ChangerUtils.acceptsChange(getExpr(), ChangeMode.SET, ItemStack.class))\r\n-\t\t\t\t\tgetExpr().change(e, new Object[] {i}, ChangeMode.SET);\r\n-\t\t\t\telse\r\n-\t\t\t\t\tgetExpr().change(e, new ItemType[] {new ItemType((ItemStack) i)}, ChangeMode.SET);\r\n-\t\t\t}\r\n-\t\t} else {\r\n-\t\t\tfor (Object o : getExpr().getArray(e)) {\r\n-\t\t\t\tif (o instanceof Entity || o instanceof Inventory)\r\n-\t\t\t\t\ttype.set(o, name);\r\n-\t\t\t}\r\n-\t\t}\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic Class<String> getReturnType() {\r\n-\t\treturn String.class;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tprotected String getPropertyName() {\r\n-\t\treturn type.name;\r\n-\t}\r\n-\r\n-}\r\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe2a614877d4106689f0a1a31a3e7cb4b31322d3"}, "originalPosition": 433}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTk3NDIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxNTowMlrOGzq4ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxNTowMlrOGzq4ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMzE4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t.usage(Arrays.stream(GameRule.values()).map(GameRule::getName).collect(Collectors.joining()))\n          \n          \n            \n            \t\t\t\t.usage(Arrays.stream(GameRule.values()).map(GameRule::getName).collect(Collectors.joining(\", \")))", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r456833187", "createdAt": "2020-07-18T22:15:02Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1721,6 +1724,40 @@ public String getVariableNamePattern() {\n \t\t\t\t\t})\n \t\t\t\t\t.serializer(new EnumSerializer<>(Cat.Type.class)));\n \t\t}\n+\n+\t\tif (Skript.classExists(\"org.bukkit.GameRule\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(GameRule.class, \"gamerule\")\n+\t\t\t\t.user(\"gamerules?\")\n+\t\t\t\t.name(\"Gamerule\")\n+\t\t\t\t.description(\"A gamerule\")\n+\t\t\t\t.usage(Arrays.stream(GameRule.values()).map(GameRule::getName).collect(Collectors.joining()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575bf3cbd729d8a280320f040c8eae1e82123f1c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTk3NTI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxNzowNlrOGzq5IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxNzowNlrOGzq5IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMzMxMw==", "bodyText": "Changer.ChangeMode should be imported directly", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r456833313", "createdAt": "2020-07-18T22:17:06Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.GameruleValue;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Gamerule Value\")\n+@Description(\"The gamerule value of a world.\")\n+@Examples({\"set the gamerule commandBlockOutput of world \\\"world\\\" to false\"})\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+public class ExprGameRule extends SimpleExpression<GameruleValue> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.GameRule\")) {\n+\t\t\tSkript.registerExpression(ExprGameRule.class, GameruleValue.class, ExpressionType.COMBINED,\n+\t\t\t\t\"[the] gamerule %gamerule% of %worlds%\");\n+\t\t}\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<GameRule> gamerule;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<World> world;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tgamerule = (Expression<GameRule>) exprs[0];\n+\t\tworld = (Expression<World>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(final Changer.ChangeMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575bf3cbd729d8a280320f040c8eae1e82123f1c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTk3NTM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxNzoxNlrOGzq5Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMjozMzoyN1rOGz06Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMzMyNw==", "bodyText": "Does this work with ExprName properly? You should need to add game rules to the accepted values (unless it already works?)", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r456833327", "createdAt": "2020-07-18T22:17:16Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -94,13 +100,14 @@\n \r\n \t@Nullable\r\n \tstatic final MethodHandle TITLE_METHOD;\r\n+\tstatic final boolean HAS_GAMERULES;\r\n \r\n \tstatic {\r\n+\t\tHAS_GAMERULES = Skript.classExists(\"org.bukkit.GameRule\");\r\n \t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575bf3cbd729d8a280320f040c8eae1e82123f1c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5NzQyMw==", "bodyText": "Fixed \ud83d\udc4d", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r456997423", "createdAt": "2020-07-20T02:33:27Z", "author": {"login": "chatasma"}, "path": "src/main/java/ch/njol/skript/expressions/ExprName.java", "diffHunk": "@@ -94,13 +100,14 @@\n \r\n \t@Nullable\r\n \tstatic final MethodHandle TITLE_METHOD;\r\n+\tstatic final boolean HAS_GAMERULES;\r\n \r\n \tstatic {\r\n+\t\tHAS_GAMERULES = Skript.classExists(\"org.bukkit.GameRule\");\r\n \t\tregister(ExprName.class, String.class, \"(1\u00a6name[s]|2\u00a6(display|nick|chat|custom)[ ]name[s])\", \"players/entities/itemtypes/inventories/slots\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMzMyNw=="}, "originalCommit": {"oid": "575bf3cbd729d8a280320f040c8eae1e82123f1c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTk3NTgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxNzo1MlrOGzq5ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxNzo1MlrOGzq5ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMzM4MA==", "bodyText": "You can take in Boolean.class and Number.class instead", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r456833380", "createdAt": "2020-07-18T22:17:52Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.GameruleValue;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Gamerule Value\")\n+@Description(\"The gamerule value of a world.\")\n+@Examples({\"set the gamerule commandBlockOutput of world \\\"world\\\" to false\"})\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+public class ExprGameRule extends SimpleExpression<GameruleValue> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.GameRule\")) {\n+\t\t\tSkript.registerExpression(ExprGameRule.class, GameruleValue.class, ExpressionType.COMBINED,\n+\t\t\t\t\"[the] gamerule %gamerule% of %worlds%\");\n+\t\t}\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<GameRule> gamerule;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<World> world;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tgamerule = (Expression<GameRule>) exprs[0];\n+\t\tworld = (Expression<World>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(final Changer.ChangeMode mode) {\n+\t\tif (mode == Changer.ChangeMode.SET) return CollectionUtils.array(Object.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575bf3cbd729d8a280320f040c8eae1e82123f1c"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTk3NjAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxODoyNlrOGzq5gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxODoyNlrOGzq5gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMzQwOA==", "bodyText": "Return should be on the next line", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r456833408", "createdAt": "2020-07-18T22:18:26Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.GameruleValue;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Gamerule Value\")\n+@Description(\"The gamerule value of a world.\")\n+@Examples({\"set the gamerule commandBlockOutput of world \\\"world\\\" to false\"})\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+public class ExprGameRule extends SimpleExpression<GameruleValue> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.GameRule\")) {\n+\t\t\tSkript.registerExpression(ExprGameRule.class, GameruleValue.class, ExpressionType.COMBINED,\n+\t\t\t\t\"[the] gamerule %gamerule% of %worlds%\");\n+\t\t}\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<GameRule> gamerule;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<World> world;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tgamerule = (Expression<GameRule>) exprs[0];\n+\t\tworld = (Expression<World>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(final Changer.ChangeMode mode) {\n+\t\tif (mode == Changer.ChangeMode.SET) return CollectionUtils.array(Object.class);\n+\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(final Event e, final @Nullable Object[] delta, final Changer.ChangeMode mode) {\n+\t\tassert delta != null;\n+\t\tif (mode == Changer.ChangeMode.SET) {\n+\t\t\tGameRule bukkitGamerule = gamerule.getSingle(e);\n+\t\t\tif (bukkitGamerule == null) return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575bf3cbd729d8a280320f040c8eae1e82123f1c"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTk3NjM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxOTowNFrOGzq5pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQyMjoxOTowNFrOGzq5pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjgzMzQ0NQ==", "bodyText": "the following statement to the for loop should also be on its own line", "url": "https://github.com/SkriptLang/Skript/pull/2974#discussion_r456833445", "createdAt": "2020-07-18T22:19:04Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprGameRule.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.GameRule;\n+import org.bukkit.World;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.GameruleValue;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Gamerule Value\")\n+@Description(\"The gamerule value of a world.\")\n+@Examples({\"set the gamerule commandBlockOutput of world \\\"world\\\" to false\"})\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+public class ExprGameRule extends SimpleExpression<GameruleValue> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.GameRule\")) {\n+\t\t\tSkript.registerExpression(ExprGameRule.class, GameruleValue.class, ExpressionType.COMBINED,\n+\t\t\t\t\"[the] gamerule %gamerule% of %worlds%\");\n+\t\t}\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<GameRule> gamerule;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<World> world;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tgamerule = (Expression<GameRule>) exprs[0];\n+\t\tworld = (Expression<World>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(final Changer.ChangeMode mode) {\n+\t\tif (mode == Changer.ChangeMode.SET) return CollectionUtils.array(Object.class);\n+\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(final Event e, final @Nullable Object[] delta, final Changer.ChangeMode mode) {\n+\t\tassert delta != null;\n+\t\tif (mode == Changer.ChangeMode.SET) {\n+\t\t\tGameRule bukkitGamerule = gamerule.getSingle(e);\n+\t\t\tif (bukkitGamerule == null) return;\n+\t\t\tfor (World gameruleWorld : world.getArray(e)) gameruleWorld.setGameRule(bukkitGamerule, delta[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575bf3cbd729d8a280320f040c8eae1e82123f1c"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1139, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}