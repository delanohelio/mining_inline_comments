{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzU2NjM3", "number": 3223, "reviewThreads": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0MzozNlrOESLagA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToyOTo0OVrOEw86FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk2ODMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0MzozNlrOG3OshA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0MzozNlrOG3OshA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTYzNg==", "bodyText": "To keep with the continuity of other conditions, this should be Is Server Whitelisted", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565636", "createdAt": "2020-07-26T19:43:36Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk2ODUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0Mzo0OFrOG3Osng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0Mzo0OFrOG3Osng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTY2Mg==", "bodyText": "This sentence should end with a period.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565662", "createdAt": "2020-07-26T19:43:48Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk3MDQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0NTo1OFrOG3Otdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0NTo1OFrOG3Otdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTg3OQ==", "bodyText": "This technically is not correct syntax, it should end with a colon : ... while I understand this is an example, an example should be able to be copy/pasted without issue.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565879", "createdAt": "2020-07-26T19:45:58Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")\n+@Examples(\"if server is whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk3MTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0NzoxOVrOG3Ot5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMDoyMjo0MVrOG3O7Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTk5MA==", "bodyText": "Could probably use a property condition for this.\nSee CondIsSneaking as an example.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565990", "createdAt": "2020-07-26T19:47:19Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")\n+@Examples(\"if server is whitelisted\")\n+@Since(\"INSERT VERSION\")\n+public class CondServerIsWhitelisted extends Condition {\n+\t\n+\tstatic {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2OTM0Ng==", "bodyText": "As discussed on discord, lets just ignore what I said here.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460569346", "createdAt": "2020-07-26T20:22:41Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")\n+@Examples(\"if server is whitelisted\")\n+@Since(\"INSERT VERSION\")\n+public class CondServerIsWhitelisted extends Condition {\n+\t\n+\tstatic {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTk5MA=="}, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk3MTk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0ODoxMVrOG3OuNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0ODoxMVrOG3OuNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjA3MQ==", "bodyText": "This sentence should end with a period.\nI also feel like the description should be expanded on, as its pretty vague and does not detail what the expression is used for.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460566071", "createdAt": "2020-07-26T19:48:11Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk3MjY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0OTowMVrOG3OuhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0OTowMVrOG3OuhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjE0OA==", "bodyText": "As stated many times already, conditions and void methods should not be on the same line.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460566148", "createdAt": "2020-07-26T19:49:01Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null) Bukkit.setWhitelist((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzE0MTc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzoyNTowM1rOG3iTmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozNzoyNFrOG3iy4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NjkzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Name(\"Is Server Whitelisted\")\n          \n          \n            \n            @Name(\"Is Whitelisted\")", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460886938", "createdAt": "2020-07-27T13:25:03Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5NDI0MQ==", "bodyText": "People might confuse it for whether or not a player is whitelisted", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460894241", "createdAt": "2020-07-27T13:36:15Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NjkzOA=="}, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5NDk0Ng==", "bodyText": "Fair enough", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460894946", "createdAt": "2020-07-27T13:37:24Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NjkzOA=="}, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzE2NzA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozMToxM1rOG3ijNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozMToxM1rOG3ijNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MDkzMg==", "bodyText": "ParseResult should be imported directly", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460890932", "createdAt": "2020-07-27T13:31:13Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzE2OTU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozMTo1MFrOG3ikyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozMTo1MFrOG3ikyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MTMzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n          \n          \n            \n            \t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460891339", "createdAt": "2020-07-27T13:31:50Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzE3NzU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozMzo1MlrOG3ipxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0MzowMFrOG3jBXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA==", "bodyText": "delta is nullable, you've got to check whether it is null here", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460892614", "createdAt": "2020-07-27T13:33:52Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5Njg3Mw==", "bodyText": "I am checking that", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460896873", "createdAt": "2020-07-27T13:40:24Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA=="}, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5Nzk2MQ==", "bodyText": "Ah yeah, I am clearly blind", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460897961", "createdAt": "2020-07-27T13:42:01Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA=="}, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODY1Mw==", "bodyText": "It happens to the best of us", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460898653", "createdAt": "2020-07-27T13:43:00Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA=="}, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzE4MDMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozNDozMVrOG3ireQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozNDozMVrOG3ireQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MzA0OQ==", "bodyText": "missing new line at the end of the file", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460893049", "createdAt": "2020-07-27T13:34:31Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:\n+\t\t\tcase RESET:\n+\t\t\t\tfor (OfflinePlayer p : Bukkit.getWhitelistedPlayers())\n+\t\t\t\t\tp.setWhitelisted(false);\n+\t\t\t\tbreak;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends OfflinePlayer> getReturnType() {\n+\t\treturn OfflinePlayer.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"whitelist\";\n+\t}\n+\t\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzE4MDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozNDozOFrOG3irxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozNDozOFrOG3irxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MzEyNg==", "bodyText": "missing new line at the end of the file", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460893126", "createdAt": "2020-07-27T13:34:38Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"server is whitelisted\";\n+\t}\n+\t\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODEzNTM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxMjozNFrOG3rznA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxMjozNFrOG3rznA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0MjU4OA==", "bodyText": "The file name should start with Cond", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461042588", "createdAt": "2020-07-27T17:12:34Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODEzNzk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxMzoxNVrOG3r1Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1MToxOVrOG3tLkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Mjk3OQ==", "bodyText": "might be useful to prefix this with \"[the]\"\nI don\u2019t think that\u2019s done automatically", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461042979", "createdAt": "2020-07-27T17:13:15Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTEwNQ==", "bodyText": "You're right", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461065105", "createdAt": "2020-07-27T17:51:19Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Mjk3OQ=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODE0MDczOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxNDowNFrOG3r23A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxNDowNFrOG3r23A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0MzQyMA==", "bodyText": "You should check if the condition is negated here, so if it is negated, you can return \"server is not whitelisted\"", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461043420", "createdAt": "2020-07-27T17:14:04Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"server is whitelisted\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODE0NjUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxNToxOVrOG3r6LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1MTo1N1rOG3tNEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDI2OA==", "bodyText": "What happens if you call this method and there are no whitelisted players? Does it return an empty list or null?", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461044268", "createdAt": "2020-07-27T17:15:19Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NTQ5MQ==", "bodyText": "It returns an empty list", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461065491", "createdAt": "2020-07-27T17:51:57Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDI2OA=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODE1MDAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxNjoxNlrOG3r8PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzo1Mzo1NlrOG3tRlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDc5Ng==", "bodyText": "IMO you should use curly brackets when you have an it / else if / else, but I\u2019m not sure what the conventions say about that actually", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461044796", "createdAt": "2020-07-27T17:16:16Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NjY0Nw==", "bodyText": "I checked and doing that is fine", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461066647", "createdAt": "2020-07-27T17:53:56Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDc5Ng=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODE1OTE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxOTowMlrOG3sCZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDoyNDo1NVrOG34MeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg==", "bodyText": "This isn\u2019t proper usage of REMOVE_ALL, since really your just clearing it, not removing a specific type from the list", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461046372", "createdAt": "2020-07-27T17:19:02Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2NjQ2Nw==", "bodyText": "Well removing all players from the list = resetting it", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461066467", "createdAt": "2020-07-27T17:53:35Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4ODM3Ng==", "bodyText": "Yes, but you\u2019re not always removing players. REMOVE_ALL is used like:\nremove all <something> from <something>\nremove all creepers from the whitelist doesn\u2019t really make sense.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461088376", "createdAt": "2020-07-27T18:32:38Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5Mzc4NQ==", "bodyText": "You're right, I'll remove it", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461093785", "createdAt": "2020-07-27T18:42:31Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0NTU2MA==", "bodyText": "For the record, REMOVE_ALL has a somewhat specific usage and it is being able to remove all duplicates of a list, considering REMOVE just removes the first one that it encounters. You can't have duplicates in a whitelist so it's rather useless here.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461245560", "createdAt": "2020-07-28T00:24:55Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODE2MTYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxOTo0M1rOG3sD7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxOTo0M1rOG3sD7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Njc2Nw==", "bodyText": "I recommend splitting this up over several lines (to avoid having one long line)", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461046767", "createdAt": "2020-07-27T17:19:43Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODE2NTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoyMDozNVrOG3sF_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDowMToxOVrOG5x29A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI5Mg==", "bodyText": "If you do remove the REMOVE_ALL changer, I recommend removing the delta checks and just adding one at the top of the file. You can also check the change mode for RESET\nif (delta == null && mode != ChangeMode.RESET)\n    return;", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461047292", "createdAt": "2020-07-27T17:20:35Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzODkwMA==", "bodyText": "I would make this change to avoid repetitive code.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r463238900", "createdAt": "2020-07-30T20:01:19Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI5Mg=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTA4ODI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1MTo1OVrOG306hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo1NzowNlrOG5xuEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg==", "bodyText": "Snow mentioned the \"server\" part here.\nMaybe this condition can be changed to check for server and players?!?!", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461191812", "createdAt": "2020-07-27T21:51:59Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzNTU5NQ==", "bodyText": "Considering you can just do:\nif the whitelist contains some offline player:\n\nI didn't really pay attention to that detail but it could make it less confusing for users so, why not.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461235595", "createdAt": "2020-07-27T23:53:15Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}, "originalCommit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQyNDI4OA==", "bodyText": "How about not adding that but stating that they can use 'whitelist contains ...' to the description", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461424288", "createdAt": "2020-07-28T08:54:20Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}, "originalCommit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNjYyNQ==", "bodyText": "IMO you should be able to check if players are whitelisted too.\nif the player is whitelisted:", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r463236625", "createdAt": "2020-07-30T19:57:06Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}, "originalCommit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTMyNTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyMTo0NFrOHYh1Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyMTo0NFrOHYh1Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjE1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r495482155", "createdAt": "2020-09-26T18:21:44Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class CondIsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondIsServerWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382424d7b1ffbefd12a21ca883c90b645ad40cd6"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTMyNjE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyMjo0NFrOHYh1eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyMjo0NFrOHYh1eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjIzNA==", "bodyText": "You should add a default case here that asserts false", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r495482234", "createdAt": "2020-09-26T18:22:44Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\t\tfor (OfflinePlayer p : Bukkit.getWhitelistedPlayers())\n+\t\t\t\t\tp.setWhitelisted(false);\n+\t\t\t\tbreak;\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382424d7b1ffbefd12a21ca883c90b645ad40cd6"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzY1MDEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToyOTo0OVrOHm0jug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToyOTo0OVrOHm0jug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2OTA1MA==", "bodyText": "Ideally this would support multiple players\nalso, you should put the pattern on separate lines (one line per pattern) ;D", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r510469050", "createdAt": "2020-10-22T21:29:49Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Whitelisted\")\n+@Description(\"Whether or not the server or a player is whitelisted.\")\n+@Examples({\"if server is whitelisted:\", \"if player is whitelisted\"})\n+@Since(\"INSERT VERSION\")\n+public class CondIsWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondIsWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\", \"%player% (is|1\u00a6is(n't| not)) white[ ]listed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8c2bbfbf24654a7cad554ca67eeb80b9590f950"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1090, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}