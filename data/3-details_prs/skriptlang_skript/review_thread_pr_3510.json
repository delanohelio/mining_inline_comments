{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNTMyMjUx", "number": 3510, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0MTo1OVrOE03Xiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODozOTo1N1rOE9Wfbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODY4NTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffect.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0MTo1OVrOHs0uwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDo0Mzo0M1rOHtFZcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2MzMyOA==", "bodyText": "Maybe EffPotion should also (or instead) take in PotionEffects?\nWith this, you kind of have two systems that IMO need to be brought together somehow.", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516763328", "createdAt": "2020-11-03T15:41:59Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffect.java", "diffHunk": "@@ -20,36 +20,79 @@\n \n import org.bukkit.event.Event;\n import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n import org.eclipse.jdt.annotation.Nullable;\n \n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n import ch.njol.skript.lang.SkriptParser.ParseResult;\n import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.Timespan;\n import ch.njol.util.Kleenean;\n \n-/**\n- * @author Peter G\u00fcttinger\n- */\n+@Name(\"Potion Effect\")\n+@Description({\"Create a new potion effect to apply to an entity or item type. Do note that when applying potion effects \",\n+\t\"to tipped arrows/lingering potions, Minecraft reduces the timespan.\"})\n+@Examples({\"set {_p} to potion effect of speed of tier 1 without particles for 10 minutes\",\n+\t\"add {_p} to potion effects of player's tool\",\n+\t\"add {_p} to potion effects of target entity\",\n+\t\"add potion effect of speed 1 to potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n public class ExprPotionEffect extends SimpleExpression<PotionEffect> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzNjQwMQ==", "bodyText": "Ok, I added support for potion effects in EffPotion. I decided to prevent breakages and just add it rather than replacing what is currently there.", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517036401", "createdAt": "2020-11-04T00:43:43Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffect.java", "diffHunk": "@@ -20,36 +20,79 @@\n \n import org.bukkit.event.Event;\n import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n import org.eclipse.jdt.annotation.Nullable;\n \n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n import ch.njol.skript.lang.SkriptParser.ParseResult;\n import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.Timespan;\n import ch.njol.util.Kleenean;\n \n-/**\n- * @author Peter G\u00fcttinger\n- */\n+@Name(\"Potion Effect\")\n+@Description({\"Create a new potion effect to apply to an entity or item type. Do note that when applying potion effects \",\n+\t\"to tipped arrows/lingering potions, Minecraft reduces the timespan.\"})\n+@Examples({\"set {_p} to potion effect of speed of tier 1 without particles for 10 minutes\",\n+\t\"add {_p} to potion effects of player's tool\",\n+\t\"add {_p} to potion effects of target entity\",\n+\t\"add potion effect of speed 1 to potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n public class ExprPotionEffect extends SimpleExpression<PotionEffect> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2MzMyOA=="}, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODcwMDI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0NToxNlrOHs04Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMDo0Mzo1OFrOHtFZrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTY5OA==", "bodyText": "Could this take in PotionEffectTypes as well? e.g.\nadd swiftness to potion effects of player\n\nwhere this would add swiftness 1 with default time", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516765698", "createdAt": "2020-11-03T15:45:16Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype, add a potion effect to an entity/itemtype, and remove a\",\n+\t\"potion effect or potion effect type from an entity/itemtype. Do note you will not be able to clear the base potion effects \",\n+\t\"of a potion item. In that case, just switch the item to a water bottle.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tobjects = (Expression<Object>) exprs[0];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected PotionEffect[] get(Event e) {\n+\t\tList<PotionEffect> effects = new ArrayList<>();\n+\t\tfor (Object object : this.objects.getArray(e)) {\n+\t\t\tif (object instanceof LivingEntity)\n+\t\t\t\teffects.addAll(((LivingEntity) object).getActivePotionEffects());\n+\t\t\telse if (object instanceof ItemType)\n+\t\t\t\teffects.addAll(PotionEffectUtils.getEffects((ItemType) object));\n+\t\t}\n+\t\treturn effects.toArray(new PotionEffect[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class, PotionEffectType[].class);\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzUzMA==", "bodyText": "thats a good idea", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517007530", "createdAt": "2020-11-03T23:06:11Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype, add a potion effect to an entity/itemtype, and remove a\",\n+\t\"potion effect or potion effect type from an entity/itemtype. Do note you will not be able to clear the base potion effects \",\n+\t\"of a potion item. In that case, just switch the item to a water bottle.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tobjects = (Expression<Object>) exprs[0];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected PotionEffect[] get(Event e) {\n+\t\tList<PotionEffect> effects = new ArrayList<>();\n+\t\tfor (Object object : this.objects.getArray(e)) {\n+\t\t\tif (object instanceof LivingEntity)\n+\t\t\t\teffects.addAll(((LivingEntity) object).getActivePotionEffects());\n+\t\t\telse if (object instanceof ItemType)\n+\t\t\t\teffects.addAll(PotionEffectUtils.getEffects((ItemType) object));\n+\t\t}\n+\t\treturn effects.toArray(new PotionEffect[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class, PotionEffectType[].class);\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTY5OA=="}, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAzNjQ2MQ==", "bodyText": "This change has been made.", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517036461", "createdAt": "2020-11-04T00:43:58Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype, add a potion effect to an entity/itemtype, and remove a\",\n+\t\"potion effect or potion effect type from an entity/itemtype. Do note you will not be able to clear the base potion effects \",\n+\t\"of a potion item. In that case, just switch the item to a water bottle.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tobjects = (Expression<Object>) exprs[0];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected PotionEffect[] get(Event e) {\n+\t\tList<PotionEffect> effects = new ArrayList<>();\n+\t\tfor (Object object : this.objects.getArray(e)) {\n+\t\t\tif (object instanceof LivingEntity)\n+\t\t\t\teffects.addAll(((LivingEntity) object).getActivePotionEffects());\n+\t\t\telse if (object instanceof ItemType)\n+\t\t\t\teffects.addAll(PotionEffectUtils.getEffects((ItemType) object));\n+\t\t}\n+\t\treturn effects.toArray(new PotionEffect[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class, PotionEffectType[].class);\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTY5OA=="}, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODcwMTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0NTozOFrOHs05DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowNjoyNVrOHtDpAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTk2NA==", "bodyText": "ParseResult direct import", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516765964", "createdAt": "2020-11-03T15:45:38Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype, add a potion effect to an entity/itemtype, and remove a\",\n+\t\"potion effect or potion effect type from an entity/itemtype. Do note you will not be able to clear the base potion effects \",\n+\t\"of a potion item. In that case, just switch the item to a water bottle.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzYxOA==", "bodyText": "OOPS... and I normally do that.\nEdit: FIXED", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517007618", "createdAt": "2020-11-03T23:06:25Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype, add a potion effect to an entity/itemtype, and remove a\",\n+\t\"potion effect or potion effect type from an entity/itemtype. Do note you will not be able to clear the base potion effects \",\n+\t\"of a potion item. In that case, just switch the item to a water bottle.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NTk2NA=="}, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODcxMjE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0Nzo1N1rOHs0_tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODozMzowNlrOH5_nrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NzY3MQ==", "bodyText": "What are the comparison issues?", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516767671", "createdAt": "2020-11-03T15:47:57Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "diffHunk": "@@ -76,6 +87,17 @@ public static PotionEffectType parseType(final String s) {\n \t\treturn types.get(s.toLowerCase());\n \t}\n \t\n+\t// This is a stupid bandaid to fix comparison issues when converting potion datas", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzg5MA==", "bodyText": "Its in the note of this PR, should I add it there too?", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r517007890", "createdAt": "2020-11-03T23:07:04Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "diffHunk": "@@ -76,6 +87,17 @@ public static PotionEffectType parseType(final String s) {\n \t\treturn types.get(s.toLowerCase());\n \t}\n \t\n+\t// This is a stupid bandaid to fix comparison issues when converting potion datas", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NzY3MQ=="}, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3MzIyOQ==", "bodyText": "might not be a bad idea", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530573229", "createdAt": "2020-11-25T18:33:06Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "diffHunk": "@@ -76,6 +87,17 @@ public static PotionEffectType parseType(final String s) {\n \t\treturn types.get(s.toLowerCase());\n \t}\n \t\n+\t// This is a stupid bandaid to fix comparison issues when converting potion datas", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2NzY3MQ=="}, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODcxNTY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0ODo0M1rOHs1B_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNTo0ODo0M1rOHs1B_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc2ODI1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param entity Entity to add effects\n          \n          \n            \n            \t * @param entity Entity to add effects to", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r516768254", "createdAt": "2020-11-03T15:48:43Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/util/PotionEffectUtils.java", "diffHunk": "@@ -189,4 +226,100 @@ public static String getPotionName(@Nullable PotionEffectType effect, boolean ex\n \t\t\n \t\treturn s;\n \t}\n+\t\n+\t/**\n+\t * Clear all the active {@link PotionEffect PotionEffects} from an Entity\n+\t *\n+\t * @param entity Entity to clear effects for\n+\t */\n+\tpublic static void clearAllEffects(LivingEntity entity) {\n+\t\tentity.getActivePotionEffects().forEach(potionEffect -> entity.removePotionEffect(potionEffect.getType()));\n+\t}\n+\t\n+\t/**\n+\t * Add PotionEffects to an entity\n+\t *\n+\t * @param entity Entity to add effects", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04f6fae5a86dc3adcd7f582862190201d5490d87"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzY1ODA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/effects/EffPotion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODozNTozNlrOH5_sZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo0Mzo0NlrOH6Bo_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NDQzOQ==", "bodyText": "\\t here instead of an actual tab? since you're already editing this file ;D", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530574439", "createdAt": "2020-11-25T18:35:36Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/effects/EffPotion.java", "diffHunk": "@@ -43,14 +44,16 @@\n @Examples({\"apply swiftness 2 to the player\",\n \t\t\"remove haste from the victim\",\n \t\t\"on join:\",\n-\t\t\"\tapply potion of strength of tier {strength.%player%} to the player for 999 days\"})\n-@Since(\"2.0, 2.2-dev27 (ambient and particle-less potion effects), 2.5 (replacing existing effect)\")\n+\t\t\"\tapply potion of strength of tier {strength.%player%} to the player for 999 days\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84702d1c19b62d2071602c3c36824d07def6a71"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwNjMzMw==", "bodyText": "Good call ... done!", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530606333", "createdAt": "2020-11-25T19:43:46Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/effects/EffPotion.java", "diffHunk": "@@ -43,14 +44,16 @@\n @Examples({\"apply swiftness 2 to the player\",\n \t\t\"remove haste from the victim\",\n \t\t\"on join:\",\n-\t\t\"\tapply potion of strength of tier {strength.%player%} to the player for 999 days\"})\n-@Since(\"2.0, 2.2-dev27 (ambient and particle-less potion effects), 2.5 (replacing existing effect)\")\n+\t\t\"\tapply potion of strength of tier {strength.%player%} to the player for 999 days\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NDQzOQ=="}, "originalCommit": {"oid": "d84702d1c19b62d2071602c3c36824d07def6a71"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzY3MDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODozOTo1N1rOH5_0rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo0NDowMVrOH6BpdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NjU1OQ==", "bodyText": "Doesn't really matter, but maybe it'd be better to use a default case here that returns null?", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530576559", "createdAt": "2020-11-25T18:39:57Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype and add/remove a potion effect/type to/from an entity/itemtype.\",\n+\t\"Do note you will not be able to clear the base potion effects of a potion item. In that case, just set the item to a water bottle.\",\n+\t\"When adding a potion effect type (rather than a potion effect), it will default to 15 seconds with tier 1.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"add speed to potion effects of target entity\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tobjects = (Expression<Object>) exprs[0];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected PotionEffect[] get(Event e) {\n+\t\tList<PotionEffect> effects = new ArrayList<>();\n+\t\tfor (Object object : this.objects.getArray(e)) {\n+\t\t\tif (object instanceof LivingEntity)\n+\t\t\t\teffects.addAll(((LivingEntity) object).getActivePotionEffects());\n+\t\t\telse if (object instanceof ItemType)\n+\t\t\t\teffects.addAll(PotionEffectUtils.getEffects((ItemType) object));\n+\t\t}\n+\t\treturn effects.toArray(new PotionEffect[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class, PotionEffectType[].class);\n+\t\t}\n+\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d84702d1c19b62d2071602c3c36824d07def6a71"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwNjQ1Mw==", "bodyText": "Updated, cause why not ;)", "url": "https://github.com/SkriptLang/Skript/pull/3510#discussion_r530606453", "createdAt": "2020-11-25T19:44:01Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprPotionEffects.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.bukkit.entity.LivingEntity;\n+import org.bukkit.event.Event;\n+import org.bukkit.potion.PotionEffect;\n+import org.bukkit.potion.PotionEffectType;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.PotionEffectUtils;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Potion Effects\")\n+@Description({\"Represents the active potion effects of entities and itemtypes.\",\n+\t\"You can clear all potion effects of an entity/itemtype and add/remove a potion effect/type to/from an entity/itemtype.\",\n+\t\"Do note you will not be able to clear the base potion effects of a potion item. In that case, just set the item to a water bottle.\",\n+\t\"When adding a potion effect type (rather than a potion effect), it will default to 15 seconds with tier 1.\"})\n+@Examples({\"set {_p::*} to active potion effects of player\",\n+\t\"clear all the potion effects of player\",\n+\t\"clear all the potion effects of player's tool\",\n+\t\"add potion effects of player to potion effects of player's tool\",\n+\t\"add speed to potion effects of target entity\",\n+\t\"remove speed and night vision from potion effects of player\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprPotionEffects extends SimpleExpression<PotionEffect> {\n+\t\n+\tstatic {\n+\t\tPropertyExpression.register(ExprPotionEffects.class, PotionEffect.class,\n+\t\t\t\"[(all [[of] the]|the)] [active] potion effects\", \"livingentities/itemtypes\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Object> objects;\n+\t\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tobjects = (Expression<Object>) exprs[0];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected PotionEffect[] get(Event e) {\n+\t\tList<PotionEffect> effects = new ArrayList<>();\n+\t\tfor (Object object : this.objects.getArray(e)) {\n+\t\t\tif (object instanceof LivingEntity)\n+\t\t\t\teffects.addAll(((LivingEntity) object).getActivePotionEffects());\n+\t\t\telse if (object instanceof ItemType)\n+\t\t\t\teffects.addAll(PotionEffectUtils.getEffects((ItemType) object));\n+\t\t}\n+\t\treturn effects.toArray(new PotionEffect[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\t\treturn CollectionUtils.array(PotionEffect[].class, PotionEffectType[].class);\n+\t\t}\n+\t\treturn null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3NjU1OQ=="}, "originalCommit": {"oid": "d84702d1c19b62d2071602c3c36824d07def6a71"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 953, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}