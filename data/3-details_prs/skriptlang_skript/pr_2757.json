{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxODYyNTY3", "number": 2757, "title": "Enchanting Events", "bodyText": "Description\nThis pull request adds full support for the PrepareItemEnchantEvent and EnchantItemEvent.\n\nTarget Minecraft Versions: Any\nRequirements:     1.11+ for enchantment offers\nRelated Issues:     None?", "createdAt": "2020-01-12T19:25:51Z", "url": "https://github.com/SkriptLang/Skript/pull/2757", "merged": true, "mergeCommit": {"oid": "4efdcf25e07d9d66870a4107ac1b31445cb41aa4"}, "closed": true, "closedAt": "2020-07-12T17:13:01Z", "author": {"login": "APickledWalrus"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5se-UAH2gAyMzYxODYyNTY3Ojc1YjBkZGYxMTA2ZTU2MWY3MWNjNzZhNzRmNWVlZjUwOWYxYjlkMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0QC7AgFqTQ0Njg5NTQ0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/75b0ddf1106e561f71cc76a74f5eef509f1b9d37", "committedDate": "2020-01-12T18:58:16Z", "message": "Enchant Prepare Base"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjEwNDA5", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-341610409", "createdAt": "2020-01-13T00:10:57Z", "commit": {"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMDoxMDo1N1rOFcr1Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMDoxMDo1N1rOFcr1Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYyMjYwNw==", "bodyText": "Maybe you could test the other way round, and return Number as default, i.e. if (mode == ChangeMode.REMOVE_ALL ...)", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r365622607", "createdAt": "2020-01-13T00:10:57Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+import java.util.List;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+@Name(\"Enchantment Offer Cost\")\n+@Description(\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. NOTE: This changes how many levels are required to enchant, but does not change the number of levels removed. To change that, use the enchant event.\")\n+@Examples(\"set cost of enchantment offer 1 to 50\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tregister(ExprEnchantmentOfferCost.class, Number.class, \"[enchant[ment]] cost\", \"enchantmentoffers\");\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] cost\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getCost();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjEwNDc1", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-341610475", "createdAt": "2020-01-13T00:11:59Z", "commit": {"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMDoxMTo1OVrOFcr1kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMDoxMTo1OVrOFcr1kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYyMjY3NA==", "bodyText": "Same issue here.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r365622674", "createdAt": "2020-01-13T00:11:59Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.block.BlockState;\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.SpongeAbsorbEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.registrations.Converters;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description(\"The enchantment level of an enchantment offer. NOTE: This change is visual, and does not change the number of levels applied. To change that, use the enchant event.\")\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] level\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET || mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTA0ODUx", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-344504851", "createdAt": "2020-01-17T10:59:17Z", "commit": {"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDo1OToxOFrOFe1naA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDo1OToxOFrOFe1naA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4MDA0MA==", "bodyText": "Wrong event class xD", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r367880040", "createdAt": "2020-01-17T10:59:18Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.bukkit.block.BlockState;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.SpongeAbsorbEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Bonus\")\n+@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves.\")\n+@Events(\"enchant prepare\")\n+@Examples(\"the enchantment bonus\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentBonus extends SimpleExpression<Integer> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantmentBonus.class, Integer.class, ExpressionType.SIMPLE, \"[the] enchantment bonus\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(SpongeAbsorbEvent.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b0ddf1106e561f71cc76a74f5eef509f1b9d37"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c36ccaf6a461b579ab37dec2e16551eabed8903", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/7c36ccaf6a461b579ab37dec2e16551eabed8903", "committedDate": "2020-01-20T04:39:02Z", "message": "Cleanup Enchant Prepare Files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/d2e154d4eb7d48c97adf6cf8eeebe59e51da047f", "committedDate": "2020-01-20T05:46:39Z", "message": "Add version compatibility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjU5OTUz", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-352259953", "createdAt": "2020-02-03T13:42:57Z", "commit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "state": "DISMISSED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo0Mjo1N1rOFkxt3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzo0NzozM1rOFkx3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwNzYxNQ==", "bodyText": "Number of bookshelves where exactly? Near the enchantment table? How near, exactly? You can link to Minecraft wiki if it depends on MC version or is too complex to explain with a few sentences.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374107615", "createdAt": "2020-02-03T13:42:57Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Bonus\")\n+@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwODM3MQ==", "bodyText": "Is there any replacement in later versions? Also, use separate annotation to spell out the requirements.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374108371", "createdAt": "2020-02-03T13:44:24Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Arrays;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Exp Level Cost\")\n+@Description({\"The cost of an enchantment in an enchant prepare event. This expression is only for Minecraft 1.9 and 1.10.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwODk4Mg==", "bodyText": "Indicate required MC version in annotation meant for requirements.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374108982", "createdAt": "2020-02-03T13:45:33Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events. Minecraft 1.11+.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTIxMQ==", "bodyText": "Requirements annotation.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109211", "createdAt": "2020-02-03T13:45:59Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Cost\")\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. Minecraft 1.11+.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTM0OQ==", "bodyText": "Nullable annotation to line before.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109349", "createdAt": "2020-02-03T13:46:17Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Cost\")\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer. Minecraft 1.11+.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\",\n+\t\t\t\"This changes how many levels are required to enchant, but does not change the number of levels removed.\", \n+\t\t\t\"To change the number of levels removed, use the enchant event.\"})\n+@Examples(\"set cost of enchantment offer 1 to 50\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.methodExists(EnchantmentOffer.class, \"getCost\")) {\n+\t\t\tregister(ExprEnchantmentOfferCost.class, Number.class, \"[enchant[ment]] cost\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] cost\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getCost();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTc1OA==", "bodyText": "Change visual to e.g. cosmetic.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109758", "createdAt": "2020-02-03T13:47:03Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.registrations.Converters;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment\")\n+@Description({\"The enchantment of an enchantment offer. Minecraft 1.11+.\", \n+\t\t\t\"NOTE: The level and cost should be set with their corresponding expressions.\", \n+\t\t\t\"This change is visual, and does not effect what the item will be enchanted with.\", ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDEwOTkxOA==", "bodyText": "Requirements annotation.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374109918", "createdAt": "2020-02-03T13:47:23Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer. Minecraft 1.11+.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDExMDAwOQ==", "bodyText": "No inline nullable annotation.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r374110009", "createdAt": "2020-02-03T13:47:33Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer. Minecraft 1.11+.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is visual, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the enchant event.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.methodExists(EnchantmentOffer.class, \"getEnchantmentLevel\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] level\";\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2e154d4eb7d48c97adf6cf8eeebe59e51da047f"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b82ef638205f2d9617f335ac5f963b8a27b000b6", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/b82ef638205f2d9617f335ac5f963b8a27b000b6", "committedDate": "2020-02-05T01:23:30Z", "message": "Enchant Item Event Syntax"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83d720dc9f172bdc2158eba14c395a8553528688", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/83d720dc9f172bdc2158eba14c395a8553528688", "committedDate": "2020-02-05T02:32:53Z", "message": "Enchant Prepare Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQwMzcx", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-366040371", "createdAt": "2020-02-27T22:18:53Z", "commit": {"oid": "83d720dc9f172bdc2158eba14c395a8553528688"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxODo1NFrOFvjOJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxODo1NFrOFvjOJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNDQ1NQ==", "bodyText": "We often get people asking for help, who demand examples from us (on discord).\nI recommend adding a bit more of an example here, one which could include an event.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r385404455", "createdAt": "2020-02-27T22:18:54Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Bonus\")\n+@Description(\"The enchantment bonus in an enchant prepare event. This represents the number of bookshelves affecting/surrounding the enchantment table.\")\n+@Events(\"enchant prepare\")\n+@Examples(\"the enchantment bonus\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d720dc9f172bdc2158eba14c395a8553528688"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ffe9872b4503a357add71445326b850ae6758b5", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/9ffe9872b4503a357add71445326b850ae6758b5", "committedDate": "2020-02-29T20:41:32Z", "message": "Clarity Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "101422562b1820e6c0786cad5cad5233a937e1db", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/101422562b1820e6c0786cad5cad5233a937e1db", "committedDate": "2020-03-27T01:28:13Z", "message": "Merge branch 'master' into APickledWalrus-evts-enchant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/2a1de38172bc16c2f2d28fb9c3194f12f2d33d91", "committedDate": "2020-03-27T02:55:07Z", "message": "Minor Changes & Fixes\n\n- Fix version compatibility\n- Improve adherence to coding conventions\n- Add ability to customize the event item for the enchant prepare event\n- Minor doc/pattern changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5OTgwNzQ4", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-389980748", "createdAt": "2020-04-08T13:36:33Z", "commit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzozNjozM1rOGCvmaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDo0MToxNVrOGCyeHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzMDIxNw==", "bodyText": "should a dash really be an option and should [ed] be optional? enchanted-item is kinda ugly and so is enchant-item. don't think anyone would really try that rather than just having a space", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405530217", "createdAt": "2020-04-08T13:36:33Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchant[ed](-| )item\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNzE4NQ==", "bodyText": "skript already has a click type expression - it makes more sense to add support for enchant events to that rather than make a whole new expression\n\n  \n    \n      Skript/src/main/java/ch/njol/skript/expressions/ExprClicked.java\n    \n    \n         Line 201\n      in\n      4947bb8\n    \n    \n    \n    \n\n        \n          \n           return new ClickType[] {((InventoryClickEvent) e).getClick()};", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405537185", "createdAt": "2020-04-08T13:46:23Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemClickedButton.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Clicked Button\")\n+@Description(\"The enchantment button clicked in an enchant event. It will return 1, 2, or 3.\")\n+@Examples({\"on enchant:\", \n+\t\t\t\"\\tif the clicked enchantment button is 1:\", \n+\t\t\t\"\\t\\tsend \\\"You clicked button 1!\\\"\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemClickedButton extends SimpleExpression<Number>{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNzkyMg==", "bodyText": "put toArray on it's own line please", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405537922", "createdAt": "2020-04-08T13:47:22Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue())).toArray(EnchantmentType[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzOTMzMw==", "bodyText": "maybe it makes sense to add a Map.Entry<Enchantment, Integer> constructor to EnchantmentType the bukkit API usually returns enchants as a map like this", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405539333", "createdAt": "2020-04-08T13:49:19Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue())).toArray(EnchantmentType[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0OTE5OQ==", "bodyText": "what about enchantment cost? also usually xp is valid too", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405549199", "createdAt": "2020-04-08T14:02:23Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n+@Events(\"enchant prepare\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \"[the] [exp[erience]] cost of enchant[(ing|ment)]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0OTU3OQ==", "bodyText": "or cost of the enchantment", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405549579", "createdAt": "2020-04-08T14:02:53Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n+@Events(\"enchant prepare\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \"[the] [exp[erience]] cost of enchant[(ing|ment)]\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU0OTE5OQ=="}, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2OTUyOA==", "bodyText": "in my opinion, this expression should not support that singular syntax - you should simply have enchantment offers then another expression can handle things like first element out of enchantment offer", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405569528", "createdAt": "2020-04-08T14:30:30Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"enchant[ment] offer 1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2OTg5OA==", "bodyText": "wouldn't it be offerNumber != 3?", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405569898", "createdAt": "2020-04-08T14:30:59Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"enchant[ment] offer 1\",\n+\t\t\t\t\t\"enchant[ment] offer 2\",\n+\t\t\t\t\t\"enchant[ment] offer 3\",\n+\t\t\t\t\t\"[the] enchant[ment] offers\");\n+\t\t}\n+\t}\n+\n+\tprivate int offerNumber;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tofferNumber = matchedPattern;\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (offerNumber == 3)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\t\treturn new EnchantmentOffer[]{((PrepareItemEnchantEvent) e).getOffers()[offerNumber]};\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn offerNumber != 4;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MTU4MA==", "bodyText": "if I try to set it to 0 or a negative number should it really set the level to 1?", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405571580", "createdAt": "2020-04-08T14:33:18Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (level < 1) level = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MTc1NA==", "bodyText": "if the change is less than 1 why does it change anything at all?", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405571754", "createdAt": "2020-04-08T14:33:33Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (level < 1) level = 1;\n+\t\tint change = 1;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MjQ3Mg==", "bodyText": "getPropertyName isn't meant to have the syntax tokens in it, it is used for the toString and should be representative of how it would read in a script", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572472", "createdAt": "2020-04-08T14:34:25Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint level = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (level < 1) level = 1;\n+\t\tint change = 1;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1)\n+\t\t\t\t\t\tchange = 1;\n+\t\t\t\t\toffer.setEnchantmentLevel(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level - offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1)\n+\t\t\t\t\t\tchange = 1;\n+\t\t\t\t\toffer.setEnchantmentLevel(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"[enchant[ment]] level\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MjU5Mg==", "bodyText": "getPropertyName isn't meant to have the syntax tokens in it, it is used for the toString and should be representative of how it would read in a script", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572592", "createdAt": "2020-04-08T14:34:32Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferEnchantment.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.registrations.Converters;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment\")\n+@Description({\"The enchantment of an enchantment offer.\", \n+\t\t\t\"The level and cost of the enchantment should be set with their corresponding expressions.\", \n+\t\t\t\"This change is cosmetic, and does not affect what the item will be enchanted with.\", \n+\t\t\t\"To change the enchantment that is applied, use the applied enchantment expression.\"})\n+@Examples(\"set enchantment of enchantment offer 1 to sharpness\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferEnchantment extends SimplePropertyExpression<EnchantmentOffer, EnchantmentType> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferEnchantment.class, EnchantmentType.class, \"enchant[ment]\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic EnchantmentType convert(final EnchantmentOffer offer) {\n+\t\treturn Converters.convert(offer.getEnchantment(), EnchantmentType.class);\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET)\n+\t\t\treturn CollectionUtils.array(EnchantmentType.class);\n+\t\treturn null;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, Changer.ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null || delta.length == 0)\n+\t\t\treturn;\n+\t\tEnchantmentType enchant = (EnchantmentType) delta[0];\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\toffer.setEnchantment(enchant.getType());\n+\t\t\t\t\toffer.setEnchantmentLevel(enchant.getLevel());\n+\t\t\t\t}\n+\t\t\tcase ADD:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\tcase RESET:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<EnchantmentType> getReturnType() {\n+\t\treturn EnchantmentType.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MjY0OQ==", "bodyText": "getPropertyName isn't meant to have the syntax tokens in it, it is used for the toString and should be representative of how it would read in a script", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572649", "createdAt": "2020-04-08T14:34:36Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferCost.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Cost\")\n+@Description({\"The cost of an enchantment offer. This is displayed to the right of an enchantment offer.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\",\n+\t\t\t\"This changes how many levels are required to enchant, but does not change the number of levels removed.\", \n+\t\t\t\"To change the number of levels removed, use the enchant event.\"})\n+@Examples(\"set cost of enchantment offer 1 to 50\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferCost extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferCost.class, Number.class, \"[enchant[ment]] cost\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getCost();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0)\n+\t\t\treturn;\n+\t\tint cost = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (cost < 1) cost = 1;\n+\t\tint change = 1;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setCost(cost);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = cost + offer.getCost();\n+\t\t\t\t\tif (change < 1) change = 1;\n+\t\t\t\t\toffer.setCost(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = cost - offer.getCost();\n+\t\t\t\t\tif (change < 1) change = 1;\n+\t\t\t\t\toffer.setCost(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Class<Number> getReturnType() {\n+\t\treturn Number.class;\n+\t}\n+\n+\t@Override\n+\tprotected String getPropertyName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3Mjk0OQ==", "bodyText": "doesn't give the right output when the enchantment offers expression is used", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405572949", "createdAt": "2020-04-08T14:35:00Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"enchant[ment] offer 1\",\n+\t\t\t\t\t\"enchant[ment] offer 2\",\n+\t\t\t\t\t\"enchant[ment] offer 3\",\n+\t\t\t\t\t\"[the] enchant[ment] offers\");\n+\t\t}\n+\t}\n+\n+\tprivate int offerNumber;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tofferNumber = matchedPattern;\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (offerNumber == 3)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\t\treturn new EnchantmentOffer[]{((PrepareItemEnchantEvent) e).getOffers()[offerNumber]};\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn offerNumber != 4;\n+\t}\n+\n+\t@Override\n+\tpublic Class<? extends EnchantmentOffer> getReturnType() {\n+\t\treturn EnchantmentOffer.class;\n+\t}\n+\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3NTgwNg==", "bodyText": "subtracting 0 shouldn't subtract 1, it should just do nothing", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405575806", "createdAt": "2020-04-08T14:39:06Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Arrays;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Prepare Enchantment Experience Level Cost\")\n+@Description({\"The experience cost of an enchantment in an enchant prepare event.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\"})\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tset the cost of enchantment 1 to 50\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.9 or 1.10\")\n+@SuppressWarnings(\"deprecation\")\n+public class ExprEnchantmentExpLevelCosts extends SimpleExpression<Number>{\n+\n+\tstatic {\n+\t\tif (!Skript.isRunningMinecraft(1, 11)) { // This expression should only be usable on 1.9 and 1.10.\n+\t\t\tSkript.registerExpression(ExprEnchantmentExpLevelCosts.class, Number.class, ExpressionType.SIMPLE,\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] 1\",\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] 2\",\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] 3\",\n+\t\t\t\t\t\"[the] cost of (enchant[ment]s|enchant[ment] offers)\");\n+\t\t}\n+\t}\n+\n+\tprivate int offerNumber;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"The enchantment exp level cost is only usable in an enchant prepare event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tofferNumber = matchedPattern;\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected Number[] get(Event e) {\n+\t\tif (offerNumber == 4) {\n+\t\t\treturn Arrays.stream(((PrepareItemEnchantEvent) e).getExpLevelCostsOffered())\n+\t\t\t\t\t.boxed()\n+\t\t\t\t\t.toArray(Number[]::new);\n+\t\t}\n+\t\treturn new Number[]{((PrepareItemEnchantEvent) e).getExpLevelCostsOffered()[offerNumber]};\n+\t}\n+\n+\t@Override\n+\tpublic @Nullable Class<?>[] acceptChange(Changer.ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, Changer.ChangeMode mode) {\n+\t\tint cost = delta != null ? ((Number) delta[0]).intValue() : 1;\n+\t\tif (cost < 1) cost = 1;\n+\t\tPrepareItemEnchantEvent e = (PrepareItemEnchantEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (offerNumber == 4) {\n+\t\t\t\t\tfor (int i = 0; i <= 2; i++)\n+\t\t\t\t\t\te.getExpLevelCostsOffered()[i] = cost;\n+\t\t\t\t} else {\n+\t\t\t\t\te.getExpLevelCostsOffered()[offerNumber] = cost;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tint add;\n+\t\t\t\tif (offerNumber == 4) {\n+\t\t\t\t\tfor (int i = 0; i <= 2; i++) {\n+\t\t\t\t\t\tadd = cost + e.getExpLevelCostsOffered()[i];\n+\t\t\t\t\t\tif (add < 1) add = 1;\n+\t\t\t\t\t\te.getExpLevelCostsOffered()[i] = add;\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tadd = cost + e.getExpLevelCostsOffered()[offerNumber];\n+\t\t\t\t\tif (add < 1) add = 1;\n+\t\t\t\t\te.getExpLevelCostsOffered()[offerNumber] = add;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tint subtract;\n+\t\t\t\tif (offerNumber == 4) {\n+\t\t\t\t\tfor (int i = 0; i <= 2; i++) {\n+\t\t\t\t\t\tsubtract = cost - e.getExpLevelCostsOffered()[i];\n+\t\t\t\t\t\tif (subtract < 1) subtract = 1;\n+\t\t\t\t\t\te.getExpLevelCostsOffered()[i] = subtract;\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tsubtract = cost - e.getExpLevelCostsOffered()[offerNumber];\n+\t\t\t\t\tif (subtract < 1) subtract = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3Njk0NQ==", "bodyText": "that implies this will match anything without whitespace which is not true - toVariableNameString has a space in it", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405576945", "createdAt": "2020-04-08T14:40:48Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1719,6 +1720,41 @@ public String getVariableNamePattern() {\n \t\t\t\t\t})\n \t\t\t\t\t.serializer(new EnumSerializer<>(Cat.Type.class)));\n \t\t}\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(EnchantmentOffer.class, \"enchantmentoffer\")\n+\t\t\t\t.user(\"enchant[ment][ ]offers?\")\n+\t\t\t\t.name(\"Enchantment Offer\")\n+\t\t\t\t.description(\"The enchantmentoffer in an enchant prepare event.\")\n+\t\t\t\t.examples(\"cost of enchantmentoffer\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<EnchantmentOffer>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\tpublic EnchantmentOffer parse(String input, ParseContext context) {\n+\t\t\t\t\t\treturn null;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic boolean canParse(ParseContext context) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(EnchantmentOffer eo, int flags) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment(), flags) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment()) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String getVariableNamePattern() {\n+\t\t\t\t\t\treturn \"\\\\S+\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3NzI0NQ==", "bodyText": "no need to add these other types", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r405577245", "createdAt": "2020-04-08T14:41:15Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchant[ed](-| )item\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class) && !ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"The enchant item is only usable in an enchant prepare event or enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected ItemType[] get(Event e) {\n+\t\tif (e instanceof PrepareItemEnchantEvent)\n+\t\t\treturn new ItemType[]{new ItemType(((PrepareItemEnchantEvent) e).getItem())};\n+\t\treturn new ItemType[]{new ItemType(((EnchantItemEvent) e).getItem())};\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET)\n+\t\t\treturn CollectionUtils.array(ItemType.class);\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tassert delta != null;\n+\t\tItemType item = ((ItemType) delta[0]);\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (event instanceof PrepareItemEnchantEvent) {\n+\t\t\t\t\tPrepareItemEnchantEvent e = (PrepareItemEnchantEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t} else {\n+\t\t\t\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1de38172bc16c2f2d28fb9c3194f12f2d33d91"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea5d9c0e900800501b3c6491a765b88f6ae69225", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/ea5d9c0e900800501b3c6491a765b88f6ae69225", "committedDate": "2020-04-27T15:07:31Z", "message": "Make Requested Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875", "committedDate": "2020-04-27T15:08:30Z", "message": "Merge branch 'master' into APickledWalrus-evts-enchant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTIwNTkx", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-401920591", "createdAt": "2020-04-28T14:55:14Z", "commit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "state": "DISMISSED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNDo1NToxNFrOGNYNdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjo0NDoyNlrOGNdTjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MTMzMg==", "bodyText": "no need to duplicate the code:\nreturn toString(eo, 0);", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416681332", "createdAt": "2020-04-28T14:55:14Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1719,6 +1720,41 @@ public String getVariableNamePattern() {\n \t\t\t\t\t})\n \t\t\t\t\t.serializer(new EnumSerializer<>(Cat.Type.class)));\n \t\t}\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(EnchantmentOffer.class, \"enchantmentoffer\")\n+\t\t\t\t.user(\"enchant[ment][ ]offers?\")\n+\t\t\t\t.name(\"Enchantment Offer\")\n+\t\t\t\t.description(\"The enchantmentoffer in an enchant prepare event.\")\n+\t\t\t\t.examples(\"cost of enchantmentoffer\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<EnchantmentOffer>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\tpublic EnchantmentOffer parse(String input, ParseContext context) {\n+\t\t\t\t\t\treturn null;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic boolean canParse(ParseContext context) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(EnchantmentOffer eo, int flags) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment(), flags) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment()) + \" \" + eo.getEnchantmentLevel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjMxMw==", "bodyText": "should be enchanted item", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416686313", "createdAt": "2020-04-28T15:01:26Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantEventsEnchantItem extends SimpleExpression<ItemType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantEventsEnchantItem.class, ItemType.class, ExpressionType.SIMPLE, \"[the] enchanted item\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class) && !ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"The enchant item is only usable in an enchant prepare event or enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected ItemType[] get(Event e) {\n+\t\tif (e instanceof PrepareItemEnchantEvent)\n+\t\t\treturn new ItemType[]{new ItemType(((PrepareItemEnchantEvent) e).getItem())};\n+\t\treturn new ItemType[]{new ItemType(((EnchantItemEvent) e).getItem())};\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.SET)\n+\t\t\treturn CollectionUtils.array(ItemType.class);\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null)\n+\t\t\treturn;\n+\t\tItemType item = ((ItemType) delta[0]);\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (event instanceof PrepareItemEnchantEvent) {\n+\t\t\t\t\tPrepareItemEnchantEvent e = (PrepareItemEnchantEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t} else {\n+\t\t\t\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\t\t\t\te.getItem().setType(item.getMaterial());\n+\t\t\t\t\te.getItem().setItemMeta(item.getItemMeta());\n+\t\t\t\t\te.getItem().setAmount(item.getAmount());\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\tcase RESET:\n+\t\t\tcase DELETE:\n+\t\t\tcase REMOVE_ALL:\n+\t\t\t\tassert false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tpublic Class<? extends ItemType> getReturnType() {\n+\t\treturn ItemType.class;\n+\t}\n+\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"enchant item\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjgwMw==", "bodyText": "missing spaces around <", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416686803", "createdAt": "2020-04-28T15:02:03Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5NDY2MA==", "bodyText": "you could use fallthrough here:\ncase SET:\n   clear();\ncase ADD:\n    addEnchants();\n    break;", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416694660", "createdAt": "2020-04-28T15:12:02Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {\n+\t\t\t\tif (delta[i] instanceof EnchantmentType)\n+\t\t\t\t\tenchants[i] = (EnchantmentType) delta[i];\n+\t\t\t\telse\n+\t\t\t\t\tenchants[i] = new EnchantmentType((Enchantment) delta[i]);\n+\t\t\t}\n+\t\t}\n+\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\te.getEnchantsToAdd().clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5ODA5NQ==", "bodyText": "you don't have to check if it contains the key or value, you can just remove", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416698095", "createdAt": "2020-04-28T15:16:18Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {\n+\t\t\t\tif (delta[i] instanceof EnchantmentType)\n+\t\t\t\t\tenchants[i] = (EnchantmentType) delta[i];\n+\t\t\t\telse\n+\t\t\t\t\tenchants[i] = new EnchantmentType((Enchantment) delta[i]);\n+\t\t\t}\n+\t\t}\n+\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\te.getEnchantsToAdd().clear();\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentType enchant : enchants) {\n+\t\t\t\t\tif (e.getEnchantsToAdd().containsKey(enchant.getType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY5OTQ3MA==", "bodyText": "remove all is not the same as delete, it requires an expression. for example remove all sharpness 1 from applied enchants would remove all enchants in this case", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416699470", "createdAt": "2020-04-28T15:17:59Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentType[] enchants = new EnchantmentType[delta != null ? delta.length : 0];\n+\t\tif (delta != null && delta.length != 0) {\n+\t\t\tfor (int i = 0; i<delta.length; i++) {\n+\t\t\t\tif (delta[i] instanceof EnchantmentType)\n+\t\t\t\t\tenchants[i] = (EnchantmentType) delta[i];\n+\t\t\t\telse\n+\t\t\t\t\tenchants[i] = new EnchantmentType((Enchantment) delta[i]);\n+\t\t\t}\n+\t\t}\n+\t\tEnchantItemEvent e = (EnchantItemEvent) event;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\te.getEnchantsToAdd().clear();\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentType enchant : enchants)\n+\t\t\t\t\te.getEnchantsToAdd().put(enchant.getType(), enchant.getLevel());\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentType enchant : enchants) {\n+\t\t\t\t\tif (e.getEnchantsToAdd().containsKey(enchant.getType())) {\n+\t\t\t\t\t\tif (e.getEnchantsToAdd().containsValue(enchant.getLevel())) {\n+\t\t\t\t\t\t\te.getEnchantsToAdd().remove(enchant.getType(), enchant.getLevel());\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\tcase REMOVE_ALL:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwNDM2Mw==", "bodyText": "what do you mean when you say it doesn't serve a purpose?", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416704363", "createdAt": "2020-04-28T15:24:08Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n+@Events(\"enchant prepare\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",\n+\t\t\t\t\"[the] enchant[ment] cost\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The experience cost of enchanting is only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tprotected Number[] get(Event e) {\n+\t\treturn new Number[]{((EnchantItemEvent) e).getExpLevelCost()};\n+\t}\n+\n+\t/*\n+\t * As of now, modifying the cost does not seem to serve a purpose.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwNDkxNg==", "bodyText": "this example is incorrect", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416704916", "createdAt": "2020-04-28T15:24:51Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczMjIyNA==", "bodyText": "why the hardcoded 2? you should still use the length of the array", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416732224", "createdAt": "2020-04-28T15:58:33Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"[the] enchant[ment] offers\",\n+\t\t\t\t\t\"enchant[ment] offer %number%\",\n+\t\t\t\t\t\"[the] %number%(st|nd|rd|th) enchant[ment] offer\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Number> exprOfferNumber;\n+\n+\tprivate boolean multiple;\n+\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (matchedPattern == 0) {\n+\t\t\tmultiple = true;\n+\t\t} else {\n+\t\t\texprOfferNumber = (Expression<Number>) exprs[0];\n+\t\t\tmultiple = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (multiple)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\n+\t\tint offerNumber = exprOfferNumber.getSingle(e).intValue();\n+\t\tif (offerNumber < 1 || offerNumber > 3)\n+\t\t\treturn new EnchantmentOffer[]{};\n+\t\treturn new EnchantmentOffer[]{((PrepareItemEnchantEvent) e).getOffers()[offerNumber - 1]};\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.DELETE)\n+\t\t\treturn CollectionUtils.array(EnchantmentOffer.class);\n+\t\treturn null;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\n+\t\t// Index Form\n+\t\tint offerNumber = 0;\n+\t\tif (exprOfferNumber != null) {\n+\t\t\tofferNumber = exprOfferNumber.getSingle(e).intValue() - 1;\n+\t\t}\n+\n+\t\tif (e instanceof PrepareItemEnchantEvent) {\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase DELETE:\n+\t\t\t\t\tif (multiple) {\n+\t\t\t\t\t\tfor (int i = 0; i <= 2; i++)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc0NzY2OQ==", "bodyText": "i think it would make more sense to add an enchantment event value to the event and just piggy back off the cost property expression that already exists. it would allow for the same syntax is less code", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416747669", "createdAt": "2020-04-28T16:19:47Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost to enchant in an enchant event.\", \n+\t\t\t\t\"This is the number displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %cost of enchanting%\\\" to player\"})\n+@Events(\"enchant prepare\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [e]xp[erience] cost (of|for) [the] enchant[ment]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MDk1Ng==", "bodyText": "instead of a whole expression for this, couldn't you just have this just return an EnchantmentOffer and use the already existing cost expression", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416750956", "createdAt": "2020-04-28T16:24:15Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentExpLevelCosts.java", "diffHunk": "@@ -0,0 +1,194 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.Arrays;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Prepare Enchantment Experience Level Cost\")\n+@Description({\"The experience cost of an enchantment in an enchant prepare event.\",\n+\t\t\t\"If the cost is changed, it will always be at least 1.\"})\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tset the cost of enchantment 1 to 50\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.9 or 1.10\")\n+@SuppressWarnings(\"deprecation\")\n+public class ExprEnchantmentExpLevelCosts extends SimpleExpression<Number>{\n+\n+\tstatic {\n+\t\tif (!Skript.isRunningMinecraft(1, 11)) { // This expression should only be usable on 1.9 and 1.10.\n+\t\t\tSkript.registerExpression(ExprEnchantmentExpLevelCosts.class, Number.class, ExpressionType.SIMPLE,\n+\t\t\t\t\t\"[the] cost of (enchant[ment]s|enchant[ment] offers)\",\n+\t\t\t\t\t\"[the] cost of enchant[ment] [offer] %number%\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTc2Mw==", "bodyText": "exprOfferNumber may be null, this could cause an NPE", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416751763", "createdAt": "2020-04-28T16:25:28Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"[the] enchant[ment] offers\",\n+\t\t\t\t\t\"enchant[ment] offer %number%\",\n+\t\t\t\t\t\"[the] %number%(st|nd|rd|th) enchant[ment] offer\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Number> exprOfferNumber;\n+\n+\tprivate boolean multiple;\n+\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (matchedPattern == 0) {\n+\t\t\tmultiple = true;\n+\t\t} else {\n+\t\t\texprOfferNumber = (Expression<Number>) exprs[0];\n+\t\t\tmultiple = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (multiple)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\n+\t\tint offerNumber = exprOfferNumber.getSingle(e).intValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTg3NQ==", "bodyText": "new EnchantmentOffer[0];", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416751875", "createdAt": "2020-04-28T16:25:37Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"[the] enchant[ment] offers\",\n+\t\t\t\t\t\"enchant[ment] offer %number%\",\n+\t\t\t\t\t\"[the] %number%(st|nd|rd|th) enchant[ment] offer\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Number> exprOfferNumber;\n+\n+\tprivate boolean multiple;\n+\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (matchedPattern == 0) {\n+\t\t\tmultiple = true;\n+\t\t} else {\n+\t\t\texprOfferNumber = (Expression<Number>) exprs[0];\n+\t\t\tmultiple = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (multiple)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\n+\t\tint offerNumber = exprOfferNumber.getSingle(e).intValue();\n+\t\tif (offerNumber < 1 || offerNumber > 3)\n+\t\t\treturn new EnchantmentOffer[]{};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MjMxMA==", "bodyText": "also wouldn't it make more sense to just check the length of the offer array? just because this is the length now doesn't mean it will be in the future", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416752310", "createdAt": "2020-04-28T16:26:12Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOffer.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer\")\n+@Description(\"The enchantment offer in enchant prepare events.\")\n+@Examples({\"on enchant prepare:\",\n+\t\t\"\\tsend \\\"Your enchantment offers are: %the enchantment offers%\\\" to player\"})\n+@Since(\"INSERT VERSION\")\n+@Events(\"enchant prepare\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOffer extends SimpleExpression<EnchantmentOffer> {\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tSkript.registerExpression(ExprEnchantmentOffer.class, EnchantmentOffer.class, ExpressionType.SIMPLE, \n+\t\t\t\t\t\"[the] enchant[ment] offers\",\n+\t\t\t\t\t\"enchant[ment] offer %number%\",\n+\t\t\t\t\t\"[the] %number%(st|nd|rd|th) enchant[ment] offer\");\n+\t\t}\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Number> exprOfferNumber;\n+\n+\tprivate boolean multiple;\n+\n+\t@SuppressWarnings({\"null\", \"unchecked\"})\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(PrepareItemEnchantEvent.class)) {\n+\t\t\tSkript.error(\"Enchantment offers are only usable in enchant prepare events\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\tif (matchedPattern == 0) {\n+\t\t\tmultiple = true;\n+\t\t} else {\n+\t\t\texprOfferNumber = (Expression<Number>) exprs[0];\n+\t\t\tmultiple = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentOffer[] get(Event e) {\n+\t\tif (multiple)\n+\t\t\treturn ((PrepareItemEnchantEvent) e).getOffers();\n+\n+\t\tint offerNumber = exprOfferNumber.getSingle(e).intValue();\n+\t\tif (offerNumber < 1 || offerNumber > 3)\n+\t\t\treturn new EnchantmentOffer[]{};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc1MTg3NQ=="}, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2Mzc4OQ==", "bodyText": "wouldn't this mean you can't do add -1 to player's level to a level 1 player and get 0?", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416763789", "createdAt": "2020-04-28T16:42:54Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null)\n+\t\t\treturn;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) \n+\t\t\treturn;\n+\t\tint change;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2NDM1Ng==", "bodyText": "shouldn't this be reversed? offer.getEnchantmentLevel() - level", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416764356", "createdAt": "2020-04-28T16:43:44Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null)\n+\t\t\treturn;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) \n+\t\t\treturn;\n+\t\tint change;\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tfor (EnchantmentOffer offer : offers)\n+\t\t\t\t\toffer.setEnchantmentLevel(level);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level + offer.getEnchantmentLevel();\n+\t\t\t\t\tif (change < 1) \n+\t\t\t\t\t\treturn;\n+\t\t\t\t\toffer.setEnchantmentLevel(change);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tfor (EnchantmentOffer offer : offers) {\n+\t\t\t\t\tchange = level - offer.getEnchantmentLevel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjc2NDgxNQ==", "bodyText": "shouldn't scripters be able to set the level to 0 or even negative levels if they wanted to?", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r416764815", "createdAt": "2020-04-28T16:44:26Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentOfferLevel.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.enchantments.EnchantmentOffer;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchantment Offer Enchantment Level\")\n+@Description({\"The enchantment level of an enchantment offer.\",\n+\t\t\t\"If the level is changed, it will always be at least 1.\",\n+\t\t\t\"This change is cosmetic, and does not change the number of levels applied.\", \n+\t\t\t\"To change the number of levels applied, use the applied enchantment expression.\",})\n+@Examples(\"set enchantment level of enchantment offer 1 to 3\")\n+@Since(\"INSERT VERSION\")\n+@RequiredPlugins(\"1.11 or newer\")\n+public class ExprEnchantmentOfferLevel extends SimplePropertyExpression<EnchantmentOffer, Number>{\n+\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tregister(ExprEnchantmentOfferLevel.class, Number.class, \"[enchant[ment]] level\", \"enchantmentoffers\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic Number convert(final EnchantmentOffer offer) {\n+\t\treturn offer.getEnchantmentLevel();\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE || mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Number.class);\n+\t}\n+\n+\t@Override\n+\tpublic void change(Event event, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tEnchantmentOffer[] offers = getExpr().getArray(event);\n+\t\tif (offers.length == 0 || delta == null)\n+\t\t\treturn;\n+\t\tint level = ((Number) delta[0]).intValue();\n+\t\tif (level < 1) ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a78d9de3dfd12ff17dcc6c4eca75ce1d05a875"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/a9ca19cc8e23a90304bd7ae173ab7a43097495c5", "committedDate": "2020-04-28T19:46:47Z", "message": "Make More Requested Changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzkwNzc1", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-408790775", "createdAt": "2020-05-10T23:09:58Z", "commit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMzowOTo1OFrOGTIauQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMzozMjoxMVrOGTIlBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNDA0MQ==", "bodyText": "Remove this change", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422714041", "createdAt": "2020-05-10T23:09:58Z", "author": {"login": "SnowPyon"}, "path": ".classpath", "diffHunk": "@@ -24,7 +24,6 @@\n \t\t\t<attribute name=\"gradle_used_by_scope\" value=\"test\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNDMzMg==", "bodyText": "This should be \"offer:\" + eo.getEnchantment().getKey().getKey() + \"=\" + eo.getEnchantmentLevel() or something similar, and the varible pattern may match that as well.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422714332", "createdAt": "2020-05-10T23:12:32Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1719,6 +1720,41 @@ public String getVariableNamePattern() {\n \t\t\t\t\t})\n \t\t\t\t\t.serializer(new EnumSerializer<>(Cat.Type.class)));\n \t\t}\n+\t\tif (Skript.classExists(\"org.bukkit.enchantments.EnchantmentOffer\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(EnchantmentOffer.class, \"enchantmentoffer\")\n+\t\t\t\t.user(\"enchant[ment][ ]offers?\")\n+\t\t\t\t.name(\"Enchantment Offer\")\n+\t\t\t\t.description(\"The enchantmentoffer in an enchant prepare event.\")\n+\t\t\t\t.examples(\"cost of enchantmentoffer\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<EnchantmentOffer>() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\tpublic EnchantmentOffer parse(String input, ParseContext context) {\n+\t\t\t\t\t\treturn null;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic boolean canParse(ParseContext context) {\n+\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(EnchantmentOffer eo, int flags) {\n+\t\t\t\t\t\treturn EnchantmentType.toString(eo.getEnchantment(), flags) + \" \" + eo.getEnchantmentLevel();\n+\t\t\t\t\t}\n+\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(EnchantmentOffer eo) {\n+\t\t\t\t\t\treturn toString(eo, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNDk1MQ==", "bodyText": "This should just be called Enchant Item", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422714951", "createdAt": "2020-05-10T23:18:00Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNTYwNw==", "bodyText": "This method accepts an array, and it should match the given name parameter on Skript#registerEvent method for the event.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422715607", "createdAt": "2020-05-10T23:23:13Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantEventsEnchantItem.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Material;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Events Enchant Item\")\n+@Description({\"The enchant item in an enchant prepare event or enchant event.\",\n+\t\t\t\t\"It can be modified, but enchantments will still be applied in the enchant event.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tset the enchanted item to a diamond chestplate\",\n+\t\t\t\"on enchant prepare:\",\n+\t\t\t\"\\tset the enchant item to a wooden sword\"})\n+@Events(\"enchant prepare and enchant\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNTk0OA==", "bodyText": "Same as above, remove Enchant Event and make @Events match with the event name.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422715948", "createdAt": "2020-05-10T23:25:59Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjExNg==", "bodyText": "I believe this should be fine if it takes only EnchantmentType due to the Enchantment -> EnchantmentType converter (and Skript shouldn't really be returning Enchantment anywhere, if it does, it should be changed), not 100% sure though.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716116", "createdAt": "2020-05-10T23:27:27Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(EnchantItemEvent.class)) {\n+\t\t\tSkript.error(\"The applied enchantments are only usable in an enchant event.\", ErrorQuality.SEMANTIC_ERROR);\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\t@Nullable\n+\tprotected EnchantmentType[] get(Event e) {\n+\t\treturn ((EnchantItemEvent) e).getEnchantsToAdd().entrySet().stream()\n+\t\t\t\t.map(entry -> new EnchantmentType(entry.getKey(), entry.getValue()))\n+\t\t\t\t.toArray(EnchantmentType[]::new);\n+\t}\n+\n+\t@Override\n+\t@Nullable\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.REMOVE_ALL || mode == ChangeMode.RESET)\n+\t\t\treturn null;\n+\t\treturn CollectionUtils.array(Enchantment[].class, EnchantmentType[].class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjMyNw==", "bodyText": "enchantment button clicked doesn't really make sense, does it?", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716327", "createdAt": "2020-05-10T23:29:02Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprClicked.java", "diffHunk": "@@ -72,7 +73,8 @@\n \t\tSLOT(2, Slot.class, \"clicked slot\", \"clicked slot\"),\n \t\tINVENTORY(3, Inventory.class, \"clicked inventory\", \"clicked inventory\"),\n \t\tTYPE(4, ClickType.class, \"click type\", \"click (type|action)\"),\n-\t\tACTION(5, InventoryAction.class, \"inventory action\", \"inventory action\");\n+\t\tACTION(5, InventoryAction.class, \"inventory action\", \"inventory action\"),\n+\t\tENCHANT_BUTTON(6, Number.class, \"clicked enchantment button\", \"(clicked [enchant[ment]] button|enchant[ment] button clicked)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjQwMw==", "bodyText": "The s shouldn't be optional,", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716403", "createdAt": "2020-05-10T23:29:46Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemEnchantments.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.bukkit.enchantments.Enchantment;\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.bukkit.inventory.meta.ItemMeta;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.PropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.skript.util.EnchantmentType;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Applied Enchantments\")\n+@Description({\"The applied enchantments in an enchant event.\",\n+\t\t\t\t\"Deleting or removing the applied enchantments will prevent the item's enchantment.\"})\n+@Examples({\"on enchant\",\n+\t\t\t\"\\tset the applied enchantments to sharpness 10 and fire aspect 5\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemEnchantments extends SimpleExpression<EnchantmentType> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemEnchantments.class, EnchantmentType.class, ExpressionType.SIMPLE, \"[the] applied enchant[ment][s]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjU1Ng==", "bodyText": "Same as the others.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716556", "createdAt": "2020-05-10T23:30:47Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjYwMQ==", "bodyText": "Remove the enchanting|to enchant part, it's redundant.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716601", "createdAt": "2020-05-10T23:31:16Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantItemExpCost.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.EnchantItemEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Enchant Event Experience Cost\")\n+@Description({\"The cost of enchanting in an enchant event.\", \n+\t\t\t\t\"This is number that was displayed in the enchantment table, not the actual number of levels removed.\"})\n+@Examples({\"on enchant:\",\n+\t\t\t\"\\tsend \\\"Cost: %the displayed cost of enchanting%\\\" to player\"})\n+@Events(\"enchant\")\n+@Since(\"INSERT VERSION\")\n+public class ExprEnchantItemExpCost extends SimpleExpression<Number> {\n+\n+\tstatic {\n+\t\tSkript.registerExpression(ExprEnchantItemExpCost.class, Number.class, ExpressionType.SIMPLE, \n+\t\t\t\t\"[the] [displayed] [[e]xp[erience]] cost (of enchanting|to enchant)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcxNjY3OQ==", "bodyText": "Same here.", "url": "https://github.com/SkriptLang/Skript/pull/2757#discussion_r422716679", "createdAt": "2020-05-10T23:32:11Z", "author": {"login": "SnowPyon"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEnchantmentBonus.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.log.ErrorQuality;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Enchant Prepare Enchantment Bonus\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9ca19cc8e23a90304bd7ae173ab7a43097495c5"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "748030ab504894d3084daa095127c6189d81eeac", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/748030ab504894d3084daa095127c6189d81eeac", "committedDate": "2020-06-13T22:58:38Z", "message": "Finishing Touches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4b159291034321fc62d9f19665b8857e072b288", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/e4b159291034321fc62d9f19665b8857e072b288", "committedDate": "2020-06-13T22:59:04Z", "message": "Merge branch 'master' into APickledWalrus-evts-enchant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31ec908ca57415b944605ef3decec8b8c5c68fb4", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/31ec908ca57415b944605ef3decec8b8c5c68fb4", "committedDate": "2020-06-13T23:06:16Z", "message": "Remove redundant wording"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMTkwNjc3", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-430190677", "createdAt": "2020-06-14T06:09:54Z", "commit": {"oid": "31ec908ca57415b944605ef3decec8b8c5c68fb4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjQ5NTI0", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-430249524", "createdAt": "2020-06-14T20:41:53Z", "commit": {"oid": "31ec908ca57415b944605ef3decec8b8c5c68fb4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb7d69b4046dcc98e61b3e3e45a595ac4c1e7922", "author": {"user": {"login": "FranKusmiruk", "name": "Frank Kusmiruk"}}, "url": "https://github.com/SkriptLang/Skript/commit/fb7d69b4046dcc98e61b3e3e45a595ac4c1e7922", "committedDate": "2020-06-15T20:12:18Z", "message": "Merge branch 'master' into APickledWalrus-evts-enchant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dab91ec385f2651f98e213a424f24e634aaf3d61", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/dab91ec385f2651f98e213a424f24e634aaf3d61", "committedDate": "2020-07-10T01:40:19Z", "message": "Stylistic Changes and Small Bug Fixes\n\nAlso removed some unnecessary code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80c2929d76fc5ba30e5bfcc719f21c99011059f5", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/80c2929d76fc5ba30e5bfcc719f21c99011059f5", "committedDate": "2020-07-10T01:41:06Z", "message": "Merge branch 'master' into APickledWalrus-evts-enchant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1713f92de58a7b0e102f88e1b2559a223fcbf2f2", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/1713f92de58a7b0e102f88e1b2559a223fcbf2f2", "committedDate": "2020-07-12T05:20:17Z", "message": "Enchantment Offer Updates\n\nNew converters / comparators too\nSmall bug fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfd7f9abc192aa3c95aa96bad4617f88b9e9aa78", "author": {"user": {"login": "APickledWalrus", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/dfd7f9abc192aa3c95aa96bad4617f88b9e9aa78", "committedDate": "2020-07-12T05:22:22Z", "message": "Merge branch 'master' into APickledWalrus-evts-enchant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODk1NDQ4", "url": "https://github.com/SkriptLang/Skript/pull/2757#pullrequestreview-446895448", "createdAt": "2020-07-12T17:11:49Z", "commit": {"oid": "dfd7f9abc192aa3c95aa96bad4617f88b9e9aa78"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3128, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}