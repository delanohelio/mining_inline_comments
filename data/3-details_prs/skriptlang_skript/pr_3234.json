{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MzExNDE2", "number": 3234, "title": "Added a way to get the list of all commands or a specific command's info", "bodyText": "Description\n\nAdded a method to get the ScriptCommands and the SimpleCommandMap to Commands.java and created ExprAllCommands and ExprCommandInfo\n\nTarget Minecraft Versions: any \nRequirements: none \nRelated Issues: #3553", "createdAt": "2020-07-27T17:50:31Z", "url": "https://github.com/SkriptLang/Skript/pull/3234", "merged": true, "mergeCommit": {"oid": "f9fb72d0baf3f0f99f006032e615a407ce2a689f"}, "closed": true, "closedAt": "2021-04-27T01:59:03Z", "author": {"login": "DeltaRays"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5FlHjAH2gAyNDU3MzExNDE2OmMyOWVjZGEyNTFkYjBkMjMwNmUxOTM2YjU2MmFmYzdjZmNhNTkxN2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeREMaqgFqTY0NTI3NDg5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/c29ecda251db0d2306e1936b562afc7cfca5917b", "committedDate": "2020-07-27T17:49:50Z", "message": "Added a way to get the list of all commands or a specific command's info\n\nAdded a method to get the ScriptCommands and the SimpleCommandMap to Commands.java and created ExprAllCommands and ExprCommandInfo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjUzOTky", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-456253992", "createdAt": "2020-07-28T02:10:31Z", "commit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMjoxMDozMVrOG35_dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMjo0MjozMFrOG36hog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NDk5OA==", "bodyText": "You didn't make scripts optional", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461274998", "createdAt": "2020-07-28T02:10:31Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3NTIwMA==", "bodyText": "I've been saying this forever, but please put the next statement on its own line", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461275200", "createdAt": "2020-07-28T02:11:15Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null) return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3ODE3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\treturn Commands.getCommandMap().getCommands().parallelStream().map(command -> command.getLabel()).toArray(String[]::new);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t}\n          \n          \n            \n            \t\t\treturn Commands.getCommandMap()\n          \n          \n            \n            \t\t\t.getCommands()\n          \n          \n            \n            \t\t\t.parallelStream()\n          \n          \n            \n            \t\t\t.map(Command::getLabel)\n          \n          \n            \n            \t\t\t.toArray(String[]::new);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t}\n          \n      \n    \n    \n  \n\nAlso, does this contain / on the labels? what about commands like WE ones (with double //)", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461278178", "createdAt": "2020-07-28T02:22:20Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null) return null;\n+\t\t\treturn Commands.getCommandMap().getCommands().parallelStream().map(command -> command.getLabel()).toArray(String[]::new);\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3ODUyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn \"all commands\";\n          \n          \n            \n            \t\treturn \"all \" + (scriptsCommandsOnly ? \"script\" : \"\")  + \"commands\";", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461278528", "createdAt": "2020-07-28T02:23:49Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null) return null;\n+\t\t\treturn Commands.getCommandMap().getCommands().parallelStream().map(command -> command.getLabel()).toArray(String[]::new);\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends String> getReturnType() {\n+\t\treturn String.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"all commands\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDMyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n          \n          \n            \n            \t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n          \n          \n            \n            \t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n          \n          \n            \n            \t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n          \n          \n            \n            \t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n          \n          \n            \n            \t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n          \n          \n            \n            \t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n          \n          \n            \n            \t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n          \n          \n            \n            \t\t\t\"[the] main command [label] of %strings%\", \"%strings%'[s] main command [label]\",\n          \n          \n            \n            \t\t\t\"[the] description of command %strings%\", \"command %strings%'[s] description\",\n          \n          \n            \n            \t\t\t\"[the] label of command %strings%\", \"command %strings%'[s] label\",\n          \n          \n            \n            \t\t\t\"[the] usage of command %strings%\", \"command %strings%'[s] usage\",\n          \n          \n            \n            \t\t\t\"[the] aliases of command %strings%\", \"command %strings%'[s] aliases\",\n          \n          \n            \n            \t\t\t\"[the] permission of command %strings%\", \"command %strings%'[s] permission\",\n          \n          \n            \n            \t\t\t\"[the] permission message of command %strings%\", \"command %strings%'[s] permission message\",\n          \n          \n            \n            \t\t\t\"[the] plugin [owner] of command %strings%\", \"command %strings%'[s] plugin [owner]\");\n          \n      \n    \n    \n  \n\nThe code should be edited accordingly to support multiple commands", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280324", "createdAt": "2020-07-28T02:30:26Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDU0Nw==", "bodyText": "ParseResult should be imported directly", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280547", "createdAt": "2020-07-28T02:31:20Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDcxMQ==", "bodyText": "Again, the following statement should be on its own line", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280711", "createdAt": "2020-07-28T02:31:54Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tcommandName = (Expression<String>) exprs[0];\n+\t\ttype = InfoType.values()[Math.floorDiv(matchedPattern, 2)];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tString commandName = this.commandName.getSingle(e);\n+\t\tif (commandName == null) return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDgwMg==", "bodyText": "Same here", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461280802", "createdAt": "2020-07-28T02:32:18Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tcommandName = (Expression<String>) exprs[0];\n+\t\ttype = InfoType.values()[Math.floorDiv(matchedPattern, 2)];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tString commandName = this.commandName.getSingle(e);\n+\t\tif (commandName == null) return null;\n+\t\tcommandName = commandName.toLowerCase().split(\" \")[0];\n+\t\tif (commandName.startsWith(\"/\")) commandName = commandName.substring(1);\n+\t\tCommand command = Commands.getCommandMap().getCommand(commandName);\n+\t\tif (command == null) return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4Mzc0Ng==", "bodyText": "this should be after the class declaration as a private enum and be declared after the main class's declaration.", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r461283746", "createdAt": "2020-07-28T02:42:30Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb82e6918f0faa0408db216f87a6e2de876d5bf9", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/cb82e6918f0faa0408db216f87a6e2de876d5bf9", "committedDate": "2020-07-28T08:21:16Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ccac37e488722316dbf51fc537e13f8820fb6be", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/5ccac37e488722316dbf51fc537e13f8820fb6be", "committedDate": "2020-07-28T08:42:09Z", "message": "Updated everything"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjgyODE4", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-458682818", "createdAt": "2020-07-30T19:12:15Z", "commit": {"oid": "5ccac37e488722316dbf51fc537e13f8820fb6be"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOToxMjoxNVrOG5wTtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOToyMTo1MFrOG5wmyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMzQ5Mw==", "bodyText": "minor nitpick, but can you remove one of the spaces?", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463213493", "createdAt": "2020-07-30T19:12:15Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccac37e488722316dbf51fc537e13f8820fb6be"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxMzcwMg==", "bodyText": "spaces between the plus symbols? :D", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463213702", "createdAt": "2020-07-30T19:12:35Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null)\n+\t\t\t\treturn null;\n+\t\t\treturn Commands.getCommandMap()\n+\t\t\t\t.getCommands()\n+\t\t\t\t.parallelStream()\n+\t\t\t\t.map(command -> command.getLabel())\n+\t\t\t\t.toArray(String[]::new);\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends String> getReturnType() {\n+\t\treturn String.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"all \"+(scriptCommandsOnly ? \"script \" : \" \")+ \"commands\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccac37e488722316dbf51fc537e13f8820fb6be"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIxODM3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn commandName + \" command\";\n          \n          \n            \n            \t\treturn \"the \" + type.name().toLowerCase().replace(\"_\", \"\") + \" of command \" + commandName.toString(e, debug)\n          \n      \n    \n    \n  \n\nmay require some slight changes to the enum to make this work", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463218377", "createdAt": "2020-07-30T19:21:50Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,146 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tInfoType type;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> commandName;\n+\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tcommandName = (Expression<String>) exprs[0];\n+\t\ttype = InfoType.values()[Math.floorDiv(matchedPattern, 2)];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tString commandName = this.commandName.getSingle(e);\n+\t\tif (commandName == null)\n+\t\t\treturn null;\n+\t\tcommandName = commandName.toLowerCase().split(\" \")[0];\n+\t\tif (commandName.startsWith(\"/\"))\n+\t\t\tcommandName = commandName.substring(1);\n+\t\tCommand command = Commands.getCommandMap().getCommand(commandName);\n+\t\tif (command == null)\n+\t\t\treturn null;\n+\t\tswitch (type) {\n+\t\t\tcase NAME:\n+\t\t\t\treturn new String[]{command.getName()};\n+\t\t\tcase DESCRIPTION:\n+\t\t\t\treturn new String[]{command.getDescription()};\n+\t\t\tcase LABEL:\n+\t\t\t\treturn new String[]{command.getLabel()};\n+\t\t\tcase USAGE:\n+\t\t\t\treturn new String[]{command.getUsage()};\n+\t\t\tcase ALIASES:\n+\t\t\t\treturn command.getAliases().toArray(new String[0]);\n+\t\t\tcase PERMISSION:\n+\t\t\t\treturn new String[]{command.getPermission()};\n+\t\t\tcase PERMISSION_MESSAGE:\n+\t\t\t\treturn new String[]{command.getPermissionMessage()};\n+\t\t\tcase PLUGIN:\n+\t\t\t\tif (command instanceof PluginCommand) {\n+\t\t\t\t\treturn new String[]{((PluginCommand) command).getPlugin().getName()};\n+\t\t\t\t} else if (command instanceof BukkitCommand) {\n+\t\t\t\t\treturn new String[]{\"Bukkit\"};\n+\t\t\t\t} else if (command.getClass().getPackage().getName().startsWith(\"org.spigot\")) {\n+\t\t\t\t\treturn new String[]{\"Spigot\"};\n+\t\t\t\t} else if (command.getClass().getPackage().getName().startsWith(\"com.destroystokyo.paper\")) {\n+\t\t\t\t\treturn new String[]{\"Paper\"};\n+\t\t\t\t}\n+\t\t}\n+\t\treturn new String[0];\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends String> getReturnType() {\n+\t\treturn String.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn commandName + \" command\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccac37e488722316dbf51fc537e13f8820fb6be"}, "originalPosition": 132}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "707ae666c786540493a8ce8705db519354ca8b07", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/707ae666c786540493a8ce8705db519354ca8b07", "committedDate": "2020-07-30T21:28:14Z", "message": "Update src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09c6656229c8893101c57a0d9130628ccab86cb6", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/09c6656229c8893101c57a0d9130628ccab86cb6", "committedDate": "2020-07-30T21:31:04Z", "message": "Fixed everything"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8d9e693cf5886a37fd616de1d84081d078a2c12", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/d8d9e693cf5886a37fd616de1d84081d078a2c12", "committedDate": "2020-07-30T21:31:50Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aee5614ef51950b351284d2172c00097ff372525", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/aee5614ef51950b351284d2172c00097ff372525", "committedDate": "2020-07-30T22:14:59Z", "message": "Merge remote-tracking branch 'origin/features/CommandInfo' into features/CommandInfo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODE2Nzc3", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-458816777", "createdAt": "2020-07-30T22:53:48Z", "commit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjo1Mzo0OFrOG52hhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMjo1Mzo0OFrOG52hhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMxNTMzNA==", "bodyText": "This wasn't resolved, and believe me people find ways to make use of the expression returning multiple commands so it should be supported. I provided a class that should help with it on Discord, if anything.", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463315334", "createdAt": "2020-07-30T22:53:48Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDMyNA=="}, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODYwNjcy", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-458860672", "createdAt": "2020-07-31T01:14:32Z", "commit": {"oid": "aee5614ef51950b351284d2172c00097ff372525"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMToxNDozM1rOG547zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMToxNjo1MVrOG54-Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NDgzMQ==", "bodyText": "space between methods", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463354831", "createdAt": "2020-07-31T01:14:33Z", "author": {"login": "TheLimeGlass"}, "path": "src/main/java/ch/njol/skript/command/Commands.java", "diffHunk": "@@ -102,7 +102,13 @@\n \tstatic {\n \t\tinit(); // separate method for the annotation\n \t}\n-\t\n+\tpublic static Set<String> getScriptCommands(){\n+\t\treturn commands.keySet();\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aee5614ef51950b351284d2172c00097ff372525"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NTE4Mw==", "bodyText": "when making line breaks for methods, Java standards require two indentations not one.", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463355183", "createdAt": "2020-07-31T01:15:46Z", "author": {"login": "TheLimeGlass"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] (|1\u00a6script) commands\");\n+\t}\n+\t\n+\tprivate boolean scriptCommandsOnly;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tscriptCommandsOnly = parseResult.mark == 1;\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\t@SuppressWarnings(\"null\")\n+\tprotected String[] get(Event e) {\n+\t\tif (scriptCommandsOnly) {\n+\t\t\treturn Commands.getScriptCommands().toArray(new String[0]);\n+\t\t} else {\n+\t\t\tif (Commands.getCommandMap() == null)\n+\t\t\t\treturn null;\n+\t\t\treturn Commands.getCommandMap()\n+\t\t\t\t.getCommands()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aee5614ef51950b351284d2172c00097ff372525"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NTQ1MA==", "bodyText": "Also make sure to change the isSingle method when adding multiple value support", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r463355450", "createdAt": "2020-07-31T01:16:51Z", "author": {"login": "TheLimeGlass"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+enum InfoType {\n+\tNAME,\n+\tDESCRIPTION,\n+\tLABEL,\n+\tUSAGE,\n+\tALIASES,\n+\tPERMISSION,\n+\tPERMISSION_MESSAGE,\n+\tPLUGIN,\n+}\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main [command] [name] of command %string%\", \"command %string%'s main [command] [name]\",\n+\t\t\t\"[the] description of command %string%\", \"command %string%'s description\",\n+\t\t\t\"[the] label of command %string%\", \"command %string%'s label\",\n+\t\t\t\"[the] usage of command %string%\", \"command %string%'s usage\",\n+\t\t\t\"[the] aliases of command %string%\", \"command %string%'s aliases\",\n+\t\t\t\"[the] permission of command %string%\", \"command %string%'s permission\",\n+\t\t\t\"[the] permission message of command %string%\", \"command %string%'s permission message\",\n+\t\t\t\"[the] plugin [owner] of command %string%\", \"command %string%'s plugin [owner]\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MDMyNA=="}, "originalCommit": {"oid": "c29ecda251db0d2306e1936b562afc7cfca5917b"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18b37667b3e50b344a89f7fcd6189b80b95004fb", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/18b37667b3e50b344a89f7fcd6189b80b95004fb", "committedDate": "2020-07-31T11:28:55Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9c53492491d1c3a1fe9113e6358fc38427c1ea3", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/a9c53492491d1c3a1fe9113e6358fc38427c1ea3", "committedDate": "2020-07-31T11:37:58Z", "message": "Added an empty line between methods in Commands, tabbed everything that needed to be tabbed 1 more 1 more, and updated ExprCommandInfo to support more commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "197c26946359823ce22d02fb755e8d791e72e31f", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/197c26946359823ce22d02fb755e8d791e72e31f", "committedDate": "2020-07-31T11:38:11Z", "message": "Merge remote-tracking branch 'origin/features/CommandInfo' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fe744ed85358f87fa461436fa0303d1db3845b1", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/9fe744ed85358f87fa461436fa0303d1db3845b1", "committedDate": "2020-08-02T16:15:56Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1412fb5d7ed9cf986d7fcbe2772a03a1ae444b2", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/a1412fb5d7ed9cf986d7fcbe2772a03a1ae444b2", "committedDate": "2020-09-08T18:08:23Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "202aa92d3d8aa7e387fff9d702a3a44892d472e9", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/202aa92d3d8aa7e387fff9d702a3a44892d472e9", "committedDate": "2020-09-08T18:17:21Z", "message": "modified a few things according to the suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDIxMTg3", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-497021187", "createdAt": "2020-09-26T18:00:11Z", "commit": {"oid": "202aa92d3d8aa7e387fff9d702a3a44892d472e9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODowMDoxMlrOHYhumw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODowMToyMFrOHYhvAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MDQ3NQ==", "bodyText": "space after this method", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495480475", "createdAt": "2020-09-26T18:00:12Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/command/Commands.java", "diffHunk": "@@ -102,7 +102,14 @@\n \tstatic {\n \t\tinit(); // separate method for the annotation\n \t}\n+\tpublic static Set<String> getScriptCommands(){\n+\t\treturn commands.keySet();\n+\t}\n \t\n+\t@Nullable\n+\tpublic static SimpleCommandMap getCommandMap(){\n+\t\treturn commandMap;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202aa92d3d8aa7e387fff9d702a3a44892d472e9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MDU3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] [(1\u00a6script)] commands\");\n          \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"(all of the|all the|all) [registered] [(1\u00a6script)] commands\");", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495480577", "createdAt": "2020-09-26T18:01:20Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[all] [registered] [(1\u00a6script)] commands\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202aa92d3d8aa7e387fff9d702a3a44892d472e9"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a593df6b4a7783326c285a30c3b10857c694c89f", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/a593df6b4a7783326c285a30c3b10857c694c89f", "committedDate": "2020-09-26T18:20:13Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80e0162814c4c67b29569b9f5747a245d0ae163f", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/80e0162814c4c67b29569b9f5747a245d0ae163f", "committedDate": "2020-09-26T18:28:30Z", "message": "Modified the all commands pattern and added a nl after a method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56983c9a5f8584aead53aaa338ddea0814a0fbf1", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/56983c9a5f8584aead53aaa338ddea0814a0fbf1", "committedDate": "2020-09-26T18:28:40Z", "message": "Merge remote-tracking branch 'origin/features/CommandInfo' into features/CommandInfo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDM1NDc2", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-497035476", "createdAt": "2020-09-26T22:38:34Z", "commit": {"oid": "56983c9a5f8584aead53aaa338ddea0814a0fbf1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjozODozNFrOHYjEKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjozODo1OVrOHYjESg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMjM3OA==", "bodyText": "My bad. My suggestion was flawed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"(all of the|all the|all) [registered] [(1\u00a6script)] commands\");\n          \n          \n            \n            \t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"[(all|the|all [of] the)] [registered] [(1\u00a6script)] commands\");", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495502378", "createdAt": "2020-09-26T22:38:34Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprAllCommands.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"All commands\")\n+@Description(\"Returns all registered commands or all script commands.\")\n+@Examples({\"send \\\"Number of all commands: %size of all commands%\\\"\",\n+\t\"send \\\"Number of all script commands: %size of all script commands%\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprAllCommands extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprAllCommands.class, String.class, ExpressionType.SIMPLE, \"(all of the|all the|all) [registered] [(1\u00a6script)] commands\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56983c9a5f8584aead53aaa338ddea0814a0fbf1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMjQxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\"[the] aliases of command %strings%\", \"command %strings%'[s] aliases\",\n          \n          \n            \n            \t\t\t\"[(all|the|all [of] the)] aliases of command %strings%\", \"command %strings%'[s] aliases\",", "url": "https://github.com/SkriptLang/Skript/pull/3234#discussion_r495502410", "createdAt": "2020-09-26T22:38:59Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import java.util.ArrayList;\n+import java.util.Objects;\n+\n+import org.bukkit.command.Command;\n+import org.bukkit.command.CommandMap;\n+import org.bukkit.command.PluginCommand;\n+import org.bukkit.command.defaults.BukkitCommand;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.command.Commands;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+\n+\n+@Name(\"Command Info\")\n+@Description(\"Get information about a command.\")\n+@Examples({\"main name of command \\\"skript\\\"\",\n+\t\"description of command \\\"help\\\"\",\n+\t\"label of command \\\"pl\\\"\",\n+\t\"usage of command \\\"help\\\"\",\n+\t\"aliases of command \\\"bukkit:help\\\"\",\n+\t\"permission of command \\\"/op\\\"\",\n+\t\"command \\\"op\\\"'s permission message\",\n+\t\"command \\\"sk\\\"'s plugin owner\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprCommandInfo extends SimpleExpression<String> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprCommandInfo.class, String.class, ExpressionType.SIMPLE,\n+\t\t\t\"[the] main command [label] of command %strings%\", \"command %strings%'[s] main command [name]\",\n+\t\t\t\"[the] description of command %strings%\", \"command %strings%'[s] description\",\n+\t\t\t\"[the] label of command %strings%\", \"command %strings%'[s] label\",\n+\t\t\t\"[the] usage of command %strings%\", \"command %strings%'[s] usage\",\n+\t\t\t\"[the] aliases of command %strings%\", \"command %strings%'[s] aliases\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56983c9a5f8584aead53aaa338ddea0814a0fbf1"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ba3ee21cd65d2fef6ec9c816fa41f2ee5402944", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/7ba3ee21cd65d2fef6ec9c816fa41f2ee5402944", "committedDate": "2020-09-27T04:34:02Z", "message": "Update src/main/java/ch/njol/skript/expressions/ExprCommandInfo.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24f92edd400bbecd3a1231b44dd4a3e049fc73cf", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/24f92edd400bbecd3a1231b44dd4a3e049fc73cf", "committedDate": "2020-09-27T04:34:12Z", "message": "Update src/main/java/ch/njol/skript/expressions/ExprAllCommands.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDk5MDkz", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-497099093", "createdAt": "2020-09-27T18:01:40Z", "commit": {"oid": "24f92edd400bbecd3a1231b44dd4a3e049fc73cf"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81ab3ffaca83ddad744b50bfb9efda1778ec18b7", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/81ab3ffaca83ddad744b50bfb9efda1778ec18b7", "committedDate": "2020-10-06T19:27:25Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf409c35e7b8d9962759bb35920e8b8d54173c15", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/bf409c35e7b8d9962759bb35920e8b8d54173c15", "committedDate": "2020-10-28T17:21:37Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78bafb94435e2ce95cad61c7ef659edda7a5f1b0", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/78bafb94435e2ce95cad61c7ef659edda7a5f1b0", "committedDate": "2020-11-05T20:14:17Z", "message": "Updated license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63a702eae5541a291d0838ed6f9fc8f1dacae429", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/63a702eae5541a291d0838ed6f9fc8f1dacae429", "committedDate": "2020-11-05T20:30:46Z", "message": "Another license header fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMzMxNzIy", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-600331722", "createdAt": "2021-03-01T00:56:56Z", "commit": {"oid": "63a702eae5541a291d0838ed6f9fc8f1dacae429"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19e55277854ede26715be8a190c08cbfef8be529", "author": {"user": {"login": "FranKusmiruk", "name": "Frank Kusmiruk"}}, "url": "https://github.com/SkriptLang/Skript/commit/19e55277854ede26715be8a190c08cbfef8be529", "committedDate": "2021-04-27T00:48:42Z", "message": "Merge branch 'master' into features/CommandInfo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1MjMzNjk4", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-645233698", "createdAt": "2021-04-27T00:51:08Z", "commit": {"oid": "19e55277854ede26715be8a190c08cbfef8be529"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1b4cdb2e0cc2b584ea0304a92aac318d93fd00f", "author": {"user": {"login": "FranKusmiruk", "name": "Frank Kusmiruk"}}, "url": "https://github.com/SkriptLang/Skript/commit/e1b4cdb2e0cc2b584ea0304a92aac318d93fd00f", "committedDate": "2021-04-27T01:52:10Z", "message": "Fix plurality of ExprCommandInfo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQ1Mjc0ODk4", "url": "https://github.com/SkriptLang/Skript/pull/3234#pullrequestreview-645274898", "createdAt": "2021-04-27T01:58:17Z", "commit": {"oid": "e1b4cdb2e0cc2b584ea0304a92aac318d93fd00f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3111, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}