{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTkxNjUy", "number": 3199, "title": "Introducing BlockData to Skript", "bodyText": "Description\nThis PR introduces block data to Skript.\nSkript's alias system has been growing and growing massively, due to the amount of blocks/items Minecraft has added to the game. Each Minecraft update has given us a run for our money, we've had a lot of work to do.\nThis new system enhances Skript by giving users the ability to set blocks using Minecraft's namespace IDs as well as block states.\nWhile yes this is not strictly English style sentences like the rest of Skript, but this system has some really good benefits:\n\nUsers will not have to wait for Skript to update aliases when a new Minecraft version comes out (For blocks)... they can simply use Minecraft's default names for said new blocks\nUsers will have full control over all blocks in Minecraft. Some blocks which do not have proper aliases (ie: fences, walls, mushroom blocks) due to a large amount of variations, will now be able to be fully configured without the need for addons.\nBoth the minecraft: namespace as well as underscores are optional, giving users full control on how they want to set their blocks.\n\nI also added an expression to get the block data from a block. This can be used to store in a variable, and also used to set a block later with it.\nBlock data can also be parsed from a string.\nThis system is not meant as a replacement for aliases but a way to give more control over blocks and allowing users to not have to struggle with figuring out aliases (especially on complicated blocks, ie: stairs)\nNOTE:\n\nDue to the comma in Skript being used to split lists, I opted to use a semi colon as a delimiter to split the block states. If anyone has a better option, please let me know, Im open to changes.\nI suck at regex, so if anyone has recommendations on cleaning that part up, please let me know.\n\nExamples of usage:\n# Setting a block\nset block at player to minecraft:campfire[lit=false;waterlogged=true]\nset block at spawn to oak stairs[facing=north]\nset target block to stone_stairs[facing=east;waterlogged=true]\nset target block to respawn_anchor\n\n# Using block data expression\nset {_data} to block data of block at player\nset target block of player to {_data}\n\n# Parsing\nset {_d} to \"minecraft:campfire[lit=false]\" parsed as blockdata\nset {_d} to \"oak stairs[facing=north;waterlogged=true]\" parsed as blockdata\n\nTarget Minecraft Versions: 1.13+\nRequirements: 1.13+ is required for this\nRelated Issues:  #2547", "createdAt": "2020-07-23T22:56:54Z", "url": "https://github.com/SkriptLang/Skript/pull/3199", "merged": true, "mergeCommit": {"oid": "96edae20d15aa8b1bb9db0fcd9e29c0be2c15cb9"}, "closed": true, "closedAt": "2020-07-30T22:09:04Z", "author": {"login": "ShaneBeee"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3t6xDAH2gAyNDU1OTkxNjUyOjVlODBkYmY4ZDkyYjA0ZGZkMjIyMzI3ZDczMzM2YWM3YjU2NWY4YWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6GZZyAFqTQ1ODc2NTEwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5e80dbf8d92b04dfd222327d73336ac7b565f8ac", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/5e80dbf8d92b04dfd222327d73336ac7b565f8ac", "committedDate": "2020-07-23T11:41:50Z", "message": "BlockData - introduce block data to Skript"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "490846e106ec55ccafea0a57eef79d186d7c8d92", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/490846e106ec55ccafea0a57eef79d186d7c8d92", "committedDate": "2020-07-23T22:28:57Z", "message": "BlockUtils - add the ability to return null rather than setting blocks to air"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fb2c0236cf66932da015a22d5c90b50c4142558", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/2fb2c0236cf66932da015a22d5c90b50c4142558", "committedDate": "2020-07-23T22:30:04Z", "message": "BukkitClasses(BlockData) - add serializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23c17cb275f73e759baaf48444cfb0e9402f36fb", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/23c17cb275f73e759baaf48444cfb0e9402f36fb", "committedDate": "2020-07-23T22:38:43Z", "message": "Add block data test script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afbb7cfac2a21c4205963fb818b2b7ee2347cb90", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/afbb7cfac2a21c4205963fb818b2b7ee2347cb90", "committedDate": "2020-07-23T23:12:12Z", "message": "BukkitClasses - allow for space in block data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTY2NzYx", "url": "https://github.com/SkriptLang/Skript/pull/3199#pullrequestreview-454566761", "createdAt": "2020-07-23T23:48:33Z", "commit": {"oid": "afbb7cfac2a21c4205963fb818b2b7ee2347cb90"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo0ODozM1rOG2fRQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo0ODozM1rOG2fRQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4ODYwOQ==", "bodyText": "Maybe add a comment for the rationale behind the first replace", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r459788609", "createdAt": "2020-07-23T23:48:33Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,21 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\tString data = dataString.replace(\";\", \",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afbb7cfac2a21c4205963fb818b2b7ee2347cb90"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc20d81fe6b8c3574cec7f71c2a719330262b9c5", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/bc20d81fe6b8c3574cec7f71c2a719330262b9c5", "committedDate": "2020-07-23T23:55:52Z", "message": "BlockUtils - add a note regarding delimiter use in block data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72b47a36d654f109bde2cbdcd843653988c48ace", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/72b47a36d654f109bde2cbdcd843653988c48ace", "committedDate": "2020-07-24T05:19:07Z", "message": "DefaultComparators - added default comparator for block -> BlockData and included a test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff7547c708a565ecf2f1033142c6284ebf45f5e3", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/ff7547c708a565ecf2f1033142c6284ebf45f5e3", "committedDate": "2020-07-24T05:20:23Z", "message": "DefaultChangers - use classExists method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bbc1458c7b9d15f26daadbc2a5b865036baec52", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/3bbc1458c7b9d15f26daadbc2a5b865036baec52", "committedDate": "2020-07-25T20:31:41Z", "message": "Merge branch 'master' into feature/block-data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzUyODk1", "url": "https://github.com/SkriptLang/Skript/pull/3199#pullrequestreview-455352895", "createdAt": "2020-07-26T10:48:28Z", "commit": {"oid": "3bbc1458c7b9d15f26daadbc2a5b865036baec52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMDo0ODoyOFrOG3LX9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMDo0ODoyOFrOG3LX9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTIyMQ==", "bodyText": "Minor nitpick, but the first and second comment lines are properly capitalized, but then the subsequent ones aren't", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r460511221", "createdAt": "2020-07-26T10:48:28Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// if there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");\n+\t\t// and replace white space between namespace with underscores", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bbc1458c7b9d15f26daadbc2a5b865036baec52"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed7b14a51ce39641c3ec166933ab49e3e6fcdf5", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/eed7b14a51ce39641c3ec166933ab49e3e6fcdf5", "committedDate": "2020-07-26T10:56:17Z", "message": "BlockUtils - fix casing of notes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1c346530ba6031d9aff9947480533e406c6103a", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/f1c346530ba6031d9aff9947480533e406c6103a", "committedDate": "2020-07-26T10:56:54Z", "message": "Merge branch 'master' of https://github.com/SkriptLang/Skript into feature/block-data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/83d86f42f27429200e1cc02bf059cb71f8c076d3", "committedDate": "2020-07-26T10:57:07Z", "message": "Merge remote-tracking branch 'origin/feature/block-data' into feature/block-data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzUzOTIy", "url": "https://github.com/SkriptLang/Skript/pull/3199#pullrequestreview-455353922", "createdAt": "2020-07-26T11:04:51Z", "commit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzQwNTgz", "url": "https://github.com/SkriptLang/Skript/pull/3199#pullrequestreview-458740583", "createdAt": "2020-07-30T20:41:14Z", "commit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0MToxNFrOG5zENA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0NTozNFrOG5zMhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODY3Ng==", "bodyText": "Nitpick, but could you remove the space here? ;)", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463258676", "createdAt": "2020-07-30T20:41:14Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODgxNA==", "bodyText": "Same here with the space >:)", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463258814", "createdAt": "2020-07-30T20:41:30Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic BlockData parse(String s, ParseContext context) {\n+\t\t\t\t\t\treturn BlockUtils.createBlockData(s);\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(BlockData o, int flags) {\n+\t\t\t\t\t\treturn o.getAsString().replace(\",\", \";\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(BlockData o) {\n+\t\t\t\t\t\treturn \"blockdata:\" + o.getAsString();\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String getVariableNamePattern() {\n+\t\t\t\t\t\treturn \"blockdata:.+\";\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.serializer(new Serializer<BlockData>() {\n+\t\t\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1OTU0Ng==", "bodyText": "Another nitpick, but you don't need the curly brackets here \ud83d\ude42", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463259546", "createdAt": "2020-07-30T20:43:01Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprBlockData.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.block.data.BlockData;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Block Data\")\n+@Description(\"Get the <a href='types.html#blockdata'>block data</a> associated with a block. This data can also be used to set blocks.\")\n+@Examples({\"set {data} to block data of target block\",\n+\t\"set block at player to {data}\"})\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+@Since(\"INSERT VERSION\")\n+public class ExprBlockData extends SimplePropertyExpression<Block, BlockData> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDgwNQ==", "bodyText": "I might be wrong, but wouldn't there still be white space if there were multiple spaces before the bracket?", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463260805", "createdAt": "2020-07-30T20:45:34Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// Remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// If there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7608aafbe4a954b868495439b42258dabae7b5c3", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/7608aafbe4a954b868495439b42258dabae7b5c3", "committedDate": "2020-07-30T20:56:19Z", "message": "Merge branch 'master' into feature/block-data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0766080646cd10d19dac43e68a5bb3deb85e7f5", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/e0766080646cd10d19dac43e68a5bb3deb85e7f5", "committedDate": "2020-07-30T20:58:27Z", "message": "BukkitClasses - removed whitespace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "362db3f9a8eba1c9bf0499dfd3c7ac15e592979c", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/362db3f9a8eba1c9bf0499dfd3c7ac15e592979c", "committedDate": "2020-07-30T21:01:39Z", "message": "ExprBlockData - removed braces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07164bd24aa1915a255ef974e518b4842a2de72c", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/07164bd24aa1915a255ef974e518b4842a2de72c", "committedDate": "2020-07-30T21:18:51Z", "message": "BlockUtils - better regex for removing white space before \"[\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzY1MTA5", "url": "https://github.com/SkriptLang/Skript/pull/3199#pullrequestreview-458765109", "createdAt": "2020-07-30T21:20:52Z", "commit": {"oid": "07164bd24aa1915a255ef974e518b4842a2de72c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3069, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}