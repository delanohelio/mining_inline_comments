{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTkxNjUy", "number": 3199, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo0ODozM1rOERp2LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0NTozNFrOET1pOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTQ2ODYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo0ODozM1rOG2fRQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzo1NDowNlrOG2fXSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4ODYwOQ==", "bodyText": "Maybe add a comment for the rationale behind the first replace", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r459788609", "createdAt": "2020-07-23T23:48:33Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,21 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\tString data = dataString.replace(\";\", \",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afbb7cfac2a21c4205963fb818b2b7ee2347cb90"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MDE1Mw==", "bodyText": "Will do \ud83d\udc4d", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r459790153", "createdAt": "2020-07-23T23:54:06Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,21 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\tString data = dataString.replace(\";\", \",\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc4ODYwOQ=="}, "originalCommit": {"oid": "afbb7cfac2a21c4205963fb818b2b7ee2347cb90"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDUyODYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMDo0ODoyOFrOG3LX9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMDo1ODoxMlrOG3LbiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTIyMQ==", "bodyText": "Minor nitpick, but the first and second comment lines are properly capitalized, but then the subsequent ones aren't", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r460511221", "createdAt": "2020-07-26T10:48:28Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// if there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");\n+\t\t// and replace white space between namespace with underscores", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bbc1458c7b9d15f26daadbc2a5b865036baec52"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTMxNg==", "bodyText": "wHaT iS wRoNg WiTh ThAt?\nIm joking haha! Yeah, ill fix it up :)", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r460511316", "createdAt": "2020-07-26T10:49:32Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// if there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");\n+\t\t// and replace white space between namespace with underscores", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTIyMQ=="}, "originalCommit": {"oid": "3bbc1458c7b9d15f26daadbc2a5b865036baec52"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMjEzNg==", "bodyText": "Ok, the casings have been fixed \ud83d\udc4d", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r460512136", "createdAt": "2020-07-26T10:58:12Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// if there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");\n+\t\t// and replace white space between namespace with underscores", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTIyMQ=="}, "originalCommit": {"oid": "3bbc1458c7b9d15f26daadbc2a5b865036baec52"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM1OTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0MToxNFrOG5zENA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1Nzo0OVrOG5zk9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODY3Ng==", "bodyText": "Nitpick, but could you remove the space here? ;)", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463258676", "createdAt": "2020-07-30T20:41:14Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2NzA2MQ==", "bodyText": "Ok space being removed, will see in next commit!", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463267061", "createdAt": "2020-07-30T20:57:49Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODY3Ng=="}, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM2MDM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0MTozMFrOG5zEvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1Nzo1NVrOG5zlLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODgxNA==", "bodyText": "Same here with the space >:)", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463258814", "createdAt": "2020-07-30T20:41:30Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic BlockData parse(String s, ParseContext context) {\n+\t\t\t\t\t\treturn BlockUtils.createBlockData(s);\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(BlockData o, int flags) {\n+\t\t\t\t\t\treturn o.getAsString().replace(\",\", \";\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(BlockData o) {\n+\t\t\t\t\t\treturn \"blockdata:\" + o.getAsString();\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String getVariableNamePattern() {\n+\t\t\t\t\t\treturn \"blockdata:.+\";\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.serializer(new Serializer<BlockData>() {\n+\t\t\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2NzExNw==", "bodyText": "Ok space being removed, will see in next commit!", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463267117", "createdAt": "2020-07-30T20:57:55Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -292,6 +294,84 @@ public Block deserialize(final String s) {\n \t\t\t\t\t}\n \t\t\t\t}));\n \t\t\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {\n+\t\t\tClasses.registerClass(new ClassInfo<>(BlockData.class, \"blockdata\")\n+\t\t\t\t.user(\"block ?datas?\")\n+\t\t\t\t.name(\"Block Data\")\n+\t\t\t\t.description(\"Block data is the detailed information about a block, referred to in Minecraft as BlockStates, \" +\n+\t\t\t\t\t\"allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, \" +\n+\t\t\t\t\t\"and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're \" +\n+\t\t\t\t\t\"looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). \" +\n+\t\t\t\t\t\"The 'minecraft:' namespace is optional, as well as are underscores.\")\n+\t\t\t\t.examples(\"set block at player to campfire[lit=false]\",\n+\t\t\t\t\t\"set target block of player to oak stairs[facing=north;waterlogged=true]\",\n+\t\t\t\t\t\"set block at player to grass_block[snowy=true]\",\n+\t\t\t\t\t\"set loop-block to minecraft:chest[facing=north]\",\n+\t\t\t\t\t\"set block above player to oak_log[axis=y]\",\n+\t\t\t\t\t\"set target block of player to minecraft:oak_leaves[distance=2;persistent=false]\")\n+\t\t\t\t.after(\"itemtype\")\n+\t\t\t\t.requiredPlugins(\"Minecraft 1.13+\")\n+\t\t\t\t.since(\"INSERT VERSION\")\n+\t\t\t\t.parser(new Parser<BlockData>() {\n+\t\t\t\t\t\n+\t\t\t\t\t@Nullable\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic BlockData parse(String s, ParseContext context) {\n+\t\t\t\t\t\treturn BlockUtils.createBlockData(s);\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toString(BlockData o, int flags) {\n+\t\t\t\t\t\treturn o.getAsString().replace(\",\", \";\");\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String toVariableNameString(BlockData o) {\n+\t\t\t\t\t\treturn \"blockdata:\" + o.getAsString();\n+\t\t\t\t\t}\n+\t\t\t\t\t\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic String getVariableNamePattern() {\n+\t\t\t\t\t\treturn \"blockdata:.+\";\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.serializer(new Serializer<BlockData>() {\n+\t\t\t\t\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODgxNA=="}, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM2NTA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprBlockData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0MzowMVrOG5zHmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTowMzozMFrOG5zwTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1OTU0Ng==", "bodyText": "Another nitpick, but you don't need the curly brackets here \ud83d\ude42", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463259546", "createdAt": "2020-07-30T20:43:01Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprBlockData.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.block.data.BlockData;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Block Data\")\n+@Description(\"Get the <a href='types.html#blockdata'>block data</a> associated with a block. This data can also be used to set blocks.\")\n+@Examples({\"set {data} to block data of target block\",\n+\t\"set block at player to {data}\"})\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+@Since(\"INSERT VERSION\")\n+public class ExprBlockData extends SimplePropertyExpression<Block, BlockData> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2Nzg0NQ==", "bodyText": "Yeah sure, but I also dont see why it should be removed, but ill remove it anyways.", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463267845", "createdAt": "2020-07-30T20:59:20Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprBlockData.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.block.data.BlockData;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Block Data\")\n+@Description(\"Get the <a href='types.html#blockdata'>block data</a> associated with a block. This data can also be used to set blocks.\")\n+@Examples({\"set {data} to block data of target block\",\n+\t\"set block at player to {data}\"})\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+@Since(\"INSERT VERSION\")\n+public class ExprBlockData extends SimplePropertyExpression<Block, BlockData> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1OTU0Ng=="}, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2OTk2NA==", "bodyText": "Well, you don't have to if you think it's better with them there. Mainly made this suggestion since most expressions omit them :)", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463269964", "createdAt": "2020-07-30T21:03:30Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprBlockData.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.block.Block;\n+import org.bukkit.block.data.BlockData;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+\n+@Name(\"Block Data\")\n+@Description(\"Get the <a href='types.html#blockdata'>block data</a> associated with a block. This data can also be used to set blocks.\")\n+@Examples({\"set {data} to block data of target block\",\n+\t\"set block at player to {data}\"})\n+@RequiredPlugins(\"Minecraft 1.13+\")\n+@Since(\"INSERT VERSION\")\n+public class ExprBlockData extends SimplePropertyExpression<Block, BlockData> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.block.data.BlockData\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1OTU0Ng=="}, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM3MzA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0NTozNFrOG5zMhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMToxOTowOFrOG50MsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDgwNQ==", "bodyText": "I might be wrong, but wouldn't there still be white space if there were multiple spaces before the bracket?", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463260805", "createdAt": "2020-07-30T20:45:34Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// Remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// If there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3NzIzMg==", "bodyText": "Fixed via all the dudes on discord:)", "url": "https://github.com/SkriptLang/Skript/pull/3199#discussion_r463277232", "createdAt": "2020-07-30T21:19:08Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/util/BlockUtils.java", "diffHunk": "@@ -99,4 +101,23 @@ public static Location getLocation(final @Nullable Block b) {\n \t\treturn l;\n \t}\n \t\n+\t@Nullable\n+\tpublic static BlockData createBlockData(String dataString) {\n+\t\t// Skript uses a comma to separate lists, so we use a semi colon as a delimiter\n+\t\t// Here we are just replacing it back to a comma to create a new block data\n+\t\tString data = dataString.replace(\";\", \",\");\n+\t\t// Remove white space within square brackets ([ lit = false] -> [lit=false])\n+\t\tdata = data.replaceAll(\" (?=[^\\\\[]*])\", \"\");\n+\t\t// If there are spaces before the square bracket we remove that\n+\t\tdata = data.replace(\" [\", \"[\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDgwNQ=="}, "originalCommit": {"oid": "83d86f42f27429200e1cc02bf059cb71f8c076d3"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1070, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}