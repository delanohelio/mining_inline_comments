{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDQ4Mzk3", "number": 3206, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNTozNVrOER-9EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMToyMjozN1rOEoUIZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjkyNjg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNTozNVrOG2_eVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNTozNVrOG2_eVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNjI0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n          \n          \n            \n            \t\tif (Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\"))\n          \n          \n            \n            \t\t\tregister(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460316244", "createdAt": "2020-07-24T22:35:35Z", "author": {"login": "Matocolotoe"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjkyNzc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNjowN1rOG2_e2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNjowN1rOG2_e2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNjM3OQ==", "bodyText": "Debug line there", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460316379", "createdAt": "2020-07-24T22:36:07Z", "author": {"login": "Matocolotoe"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tSystem.out.println(entity.getType().name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk0NzA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0NzowOFrOG2_pxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0NzowOFrOG2_pxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxOTE3Mg==", "bodyText": "Use getArray", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460319172", "createdAt": "2020-07-24T22:47:08Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk0NzgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0NzozM1rOG2_qMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0NzozM1rOG2_qMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxOTI4MQ==", "bodyText": "The statement after the if should be on its own line", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460319281", "createdAt": "2020-07-24T22:47:33Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tSystem.out.println(entity.getType().name());\n+\t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setPierceLevel(strength);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk1MDE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0OTowMlrOG2_rjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo0OTowMlrOG2_rjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxOTYzMA==", "bodyText": "If the previous if statement has braces, this one should as well", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460319630", "createdAt": "2020-07-24T22:49:02Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tSystem.out.println(entity.getType().name());\n+\t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setPierceLevel(strength);\n+\t\t\t} else if (entity instanceof Arrow)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk1Mjc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo1MDozOFrOG2_tGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo1MDozOFrOG2_tGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMDAyNg==", "bodyText": "Use getArray", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460320026", "createdAt": "2020-07-24T22:50:38Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk1MzQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo1MTowNlrOG2_tig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo1MTowNlrOG2_tig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMDEzOA==", "bodyText": "Should also support add and remove changers considering you are able to use those this way:\nincrease shot arrow's pierce level by 1\n\nForgot to mention this on your other PR for knockback strength", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460320138", "createdAt": "2020-07-24T22:51:06Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk1NTM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo1MjoxN1rOG2_usw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo1MjoxN1rOG2_usw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMDQzNQ==", "bodyText": "This should be a constant as well, declared before the static block since you also have the same check being used there", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460320435", "createdAt": "2020-07-24T22:52:17Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tif(Skript.classExists(\"org.bukkit.entity.AbstractArrow\") || Skript.methodExists(Arrow.class, \"getPierceLevel\")) register(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk1ODAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjo1Mzo0OFrOG2_wUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNzoyMTo1NlrOG3DJdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMDg0OA==", "bodyText": "Should specify that it applies to anything considered arrows since we don't know if Mojang is going to add more arrow-like projectiles.", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460320848", "createdAt": "2020-07-24T22:53:48Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NjQzOA==", "bodyText": "Yeah but it didn\u2019t work with tridents and using projectile seemed too generic", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r460376438", "createdAt": "2020-07-25T07:21:56Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMDg0OA=="}, "originalCommit": {"oid": "71dcde3c018a6366ef1555bee7f1910d4364c593"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjMzNzgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNDo0MlrOG5y3Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNDo0MlrOG5y3Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NTMzOA==", "bodyText": "This should be changed to a switch statement", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r463255338", "createdAt": "2020-07-30T20:34:42Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tif (abstractArrowExists || Skript.methodExists(Arrow.class, \"getPierceLevel\"))\n+\t\t\tregister(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0aa195d593628e0ad712b26a043a2391c5cd76a3"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjMzOTYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNToxMlrOG5y4MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNToxMlrOG5y4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NTYwMQ==", "bodyText": "Curly brackets on the IF statements \ud83d\ude0e", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r463255601", "createdAt": "2020-07-30T20:35:12Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tif (abstractArrowExists || Skript.methodExists(Arrow.class, \"getPierceLevel\"))\n+\t\t\tregister(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0aa195d593628e0ad712b26a043a2391c5cd76a3"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM0MDcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNTozMFrOG5y41A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNTozMFrOG5y41A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NTc2NA==", "bodyText": "IF statement should be on it's own line", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r463255764", "createdAt": "2020-07-30T20:35:30Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tif (abstractArrowExists || Skript.methodExists(Arrow.class, \"getPierceLevel\"))\n+\t\t\tregister(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = Math.round(abstractArrow.getPierceLevel() - strength);\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tabstractArrow.setPierceLevel(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = Math.round(arrow.getPierceLevel() - strength);\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tarrow.setPierceLevel(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = Math.round(abstractArrow.getPierceLevel() + strength);\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tabstractArrow.setPierceLevel(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = Math.round(arrow.getPierceLevel() + strength);\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tarrow.setPierceLevel(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\tif (abstractArrowExists) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setPierceLevel(strength);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0aa195d593628e0ad712b26a043a2391c5cd76a3"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM1MTkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozOTowOVrOG5y_vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozOTowOVrOG5y_vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NzUzNQ==", "bodyText": "this should be private", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r463257535", "createdAt": "2020-07-30T20:39:09Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0aa195d593628e0ad712b26a043a2391c5cd76a3"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTMzNzQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODozOTo1NVrOHYh64A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODozOTo1NVrOHYh64A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzYxNg==", "bodyText": "You should add a default case that asserts false", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r495483616", "createdAt": "2020-09-26T18:39:55Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tprivate final static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tif (abstractArrowExists || Skript.methodExists(Arrow.class, \"getPierceLevel\"))\n+\t\t\tregister(ExprArrowPierceLevel.class, Number.class, \"[the] arrow pierce level\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getPierceLevel() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getPierceLevel() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase RESET:\n+\t\t\tcase REMOVE:\n+\t\t\tcase ADD:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 0;\n+\t\tint mod = 1;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tmod = -1;\n+\t\t\tcase ADD:\n+\t\t\t\tif (abstractArrowExists) {\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = Math.round(abstractArrow.getPierceLevel() + strength * mod);\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tabstractArrow.setPierceLevel(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = Math.round(arrow.getPierceLevel() + strength * mod);\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tarrow.setPierceLevel(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\tif (abstractArrowExists) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow)\n+\t\t\t\t\t\t\t((AbstractArrow) entity).setPierceLevel(strength);\n+\t\t\t\t\t} else if (entity instanceof Arrow) {\n+\t\t\t\t\t\t((Arrow) entity).setPierceLevel(strength);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbreak;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e2b6ecefdf3be2ccc83085b8a798b85222362fe"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzA4MzI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMToyMjozN1rOHZVCtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjoyNzowMlrOHZcpAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyMTIwNw==", "bodyText": "I think you can just test Skript.methodExists(Arrow.class, \"getPierceLevel\") for here.\nAlso, if this method is not guaranteed to exist in all versions supported by Skript, can you add a @RequiredPlugins MC version?", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r496321207", "createdAt": "2020-09-29T01:22:37Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tprivate final static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tif (abstractArrowExists || Skript.methodExists(Arrow.class, \"getPierceLevel\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72675726749f9cb5d103c040df33073b42e8b442"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ0NTY5OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/SkriptLang/Skript/pull/3206#discussion_r496445698", "createdAt": "2020-09-29T06:27:02Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowPierceLevel.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Pierce Level\")\n+@Description(\"An arrow's pierce level.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow pierce level of event-projectile to 5\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowPierceLevel extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tprivate final static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tif (abstractArrowExists || Skript.methodExists(Arrow.class, \"getPierceLevel\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyMTIwNw=="}, "originalCommit": {"oid": "72675726749f9cb5d103c040df33073b42e8b442"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1076, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}