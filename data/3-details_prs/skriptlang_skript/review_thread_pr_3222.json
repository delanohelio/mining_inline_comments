{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzQ4NDI1", "number": 3222, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNTozNVrOESLVAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo0NjoyN1rOESwYfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk1NDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNTozNVrOG3Ol9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo1MDozNFrOG3OvJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2Mzk1Nw==", "bodyText": "Since we're checking if this class exists and if im not mistaken its introduced in 1.16.1, it should be added here which version it works on for the docs", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460563957", "createdAt": "2020-07-26T19:25:35Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "diffHunk": "@@ -567,5 +568,11 @@\n \t\t\t\"\\tif the clicked button is enchantment option 1:\",\n \t\t\t\"\\t\\tset the applied enchantments to sharpness 10 and unbreaking 10\")\n \t\t.since(\"2.5\");\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjIwMg==", "bodyText": "The fertilize event was added in 1.13, but yeah I'll add it there", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460566202", "createdAt": "2020-07-26T19:49:27Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "diffHunk": "@@ -567,5 +568,11 @@\n \t\t\t\"\\tif the clicked button is enchantment option 1:\",\n \t\t\t\"\\t\\tset the applied enchantments to sharpness 10 and unbreaking 10\")\n \t\t.since(\"2.5\");\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2Mzk1Nw=="}, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjMwOA==", "bodyText": "Oh sorry I was thinking about the fertilize block method that was recently added. But yes, 1.13 should be added.", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460566308", "createdAt": "2020-07-26T19:50:34Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "diffHunk": "@@ -567,5 +568,11 @@\n \t\t\t\"\\tif the clicked button is enchantment option 1:\",\n \t\t\t\"\\t\\tset the applied enchantments to sharpness 10 and unbreaking 10\")\n \t\t.since(\"2.5\");\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2Mzk1Nw=="}, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk1NDcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNjoxMFrOG3OmMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNjoxMFrOG3OmMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDAxNw==", "bodyText": "same goes here, should annotate with RequiredPlugins(\"Minecraft 1.16.1+\") (If that is the correct version it was added)", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460564017", "createdAt": "2020-07-26T19:26:10Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"2.5\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk1NjA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNzo1NVrOG3Om0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo1OTozNlrOG3OyWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDE3OQ==", "bodyText": "Just out of curiosity, did you test without these getters?\nIf im not mistaken Skript automatically gets block and player from events with these methods, I could be wrong.", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460564179", "createdAt": "2020-07-26T19:27:55Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "diffHunk": "@@ -915,6 +916,23 @@ public Inventory get(final InventoryClickEvent e) {\n \t\t\t\treturn e.getClickedInventory();\n \t\t\t}\n \t\t}, 0);\n+\t\t//BlockFertilizeEvent\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\")) {\n+\t\t\tEventValues.registerEventValue(BlockFertilizeEvent.class, Block.class, new Getter<Block, BlockFertilizeEvent>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjI3Ng==", "bodyText": "Oh I didn't know that, I'll test", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460566276", "createdAt": "2020-07-26T19:50:16Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "diffHunk": "@@ -915,6 +916,23 @@ public Inventory get(final InventoryClickEvent e) {\n \t\t\t\treturn e.getClickedInventory();\n \t\t\t}\n \t\t}, 0);\n+\t\t//BlockFertilizeEvent\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\")) {\n+\t\t\tEventValues.registerEventValue(BlockFertilizeEvent.class, Block.class, new Getter<Block, BlockFertilizeEvent>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDE3OQ=="}, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjYwMg==", "bodyText": "It works with block but not with player \ud83e\udd14", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460566602", "createdAt": "2020-07-26T19:54:14Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "diffHunk": "@@ -915,6 +916,23 @@ public Inventory get(final InventoryClickEvent e) {\n \t\t\t\treturn e.getClickedInventory();\n \t\t\t}\n \t\t}, 0);\n+\t\t//BlockFertilizeEvent\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\")) {\n+\t\t\tEventValues.registerEventValue(BlockFertilizeEvent.class, Block.class, new Getter<Block, BlockFertilizeEvent>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDE3OQ=="}, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzEzMA==", "bodyText": "Ok good to know. I know that often they're wonky, but I that could be an issue with how we've got them registered elsewhere.", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460567130", "createdAt": "2020-07-26T19:59:36Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "diffHunk": "@@ -915,6 +916,23 @@ public Inventory get(final InventoryClickEvent e) {\n \t\t\t\treturn e.getClickedInventory();\n \t\t\t}\n \t\t}, 0);\n+\t\t//BlockFertilizeEvent\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\")) {\n+\t\t\tEventValues.registerEventValue(BlockFertilizeEvent.class, Block.class, new Getter<Block, BlockFertilizeEvent>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDE3OQ=="}, "originalCommit": {"oid": "b7f5389b65360996d4586939f97c6b281c15ea81"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzIzMjE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0Njo0MlrOG3jLuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0Njo0MlrOG3jLuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwMTMwNQ==", "bodyText": "each stream operation should be on its own line.", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460901305", "createdAt": "2020-07-27T13:46:42Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"2.5\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn\n+\t\t\t((BlockFertilizeEvent) e).getBlocks().stream().map(BlockStateBlock::new).toArray(BlockStateBlock[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb0350f5df7feb017c504366008cd73d25262a6b"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzIzNDc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0NzoxN1rOG3jNXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo1MDo0NVrOG3jW-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwMTcyNQ==", "bodyText": "Operations that return a list are often worth implementing the iterator method. In this case, we are only creating instances of BlockStateBlock so it may not be needed though", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460901725", "createdAt": "2020-07-27T13:47:17Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"2.5\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn\n+\t\t\t((BlockFertilizeEvent) e).getBlocks().stream().map(BlockStateBlock::new).toArray(BlockStateBlock[]::new);\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb0350f5df7feb017c504366008cd73d25262a6b"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNDE4Ng==", "bodyText": "Yeah I'm not sure as to whether it is", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r460904186", "createdAt": "2020-07-27T13:50:45Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"2.5\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn\n+\t\t\t((BlockFertilizeEvent) e).getBlocks().stream().map(BlockStateBlock::new).toArray(BlockStateBlock[]::new);\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwMTcyNQ=="}, "originalCommit": {"oid": "cb0350f5df7feb017c504366008cd73d25262a6b"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDc1NDg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToyNzo0M1rOG4Ebeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToyNzo0M1rOG4Ebeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0NjAxMA==", "bodyText": "Missing period at end of sentence.", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461446010", "createdAt": "2020-07-28T09:27:43Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "diffHunk": "@@ -567,5 +568,12 @@\n \t\t\t\"\\tif the clicked button is enchantment option 1:\",\n \t\t\t\"\\t\\tset the applied enchantments to sharpness 10 and unbreaking 10\")\n \t\t.since(\"2.5\");\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerEvent(\"Block Fertilize\", SimpleEvent.class, BlockFertilizeEvent.class, \"[block] fertilize\")\n+\t\t\t.description(\"Called when a player fertilizes blocks\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77c9b9cff2e43e9ecaa77978df4aff806769c1cf"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDc1NjkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToyODoxNVrOG4Ecxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToyODoxNVrOG4Ecxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0NjM0Mw==", "bodyText": "The b on blocks should be capitalized", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461446343", "createdAt": "2020-07-28T09:28:15Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized blocks\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77c9b9cff2e43e9ecaa77978df4aff806769c1cf"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDc2MDQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToyOToxNFrOG4EfEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToyOToxNFrOG4EfEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0NjkzMQ==", "bodyText": "ParseResult should be imported directly", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461446931", "createdAt": "2020-07-28T09:29:14Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"2.5\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77c9b9cff2e43e9ecaa77978df4aff806769c1cf"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDk2MzQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoyNjo0NlrOG4GdRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoyNzo1NlrOG4Gfdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3OTIzNg==", "bodyText": "Nitpick, but it should be Minecraft 1.13+", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461479236", "createdAt": "2020-07-28T10:26:46Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "diffHunk": "@@ -567,5 +568,12 @@\n \t\t\t\"\\tif the clicked button is enchantment option 1:\",\n \t\t\t\"\\t\\tset the applied enchantments to sharpness 10 and unbreaking 10\")\n \t\t.since(\"2.5\");\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerEvent(\"Block Fertilize\", SimpleEvent.class, BlockFertilizeEvent.class, \"[block] fertilize\")\n+\t\t\t.description(\"Called when a player fertilizes blocks.\")\n+\t\t\t.requiredPlugins(\"Minecraft 1.13 or newer\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bf2d074bd22d431487bb81f7ddd166a263ba0f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3OTc5OA==", "bodyText": "Wait nevermind, my bad", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461479798", "createdAt": "2020-07-28T10:27:56Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/events/SimpleEvents.java", "diffHunk": "@@ -567,5 +568,12 @@\n \t\t\t\"\\tif the clicked button is enchantment option 1:\",\n \t\t\t\"\\t\\tset the applied enchantments to sharpness 10 and unbreaking 10\")\n \t\t.since(\"2.5\");\n+\t\tif(Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerEvent(\"Block Fertilize\", SimpleEvent.class, BlockFertilizeEvent.class, \"[block] fertilize\")\n+\t\t\t.description(\"Called when a player fertilizes blocks.\")\n+\t\t\t.requiredPlugins(\"Minecraft 1.13 or newer\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ3OTIzNg=="}, "originalCommit": {"oid": "78bf2d074bd22d431487bb81f7ddd166a263ba0f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDk2ODU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoyODoyNFrOG4GgYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoyODoyNFrOG4GgYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4MDAzMw==", "bodyText": "@Since(\"INSERT VERSION\")", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461480033", "createdAt": "2020-07-28T10:28:24Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized Blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"2.5\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bf2d074bd22d431487bb81f7ddd166a263ba0f"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MDk3MTcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoyOToyNFrOG4Gidw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDoyOToyNFrOG4Gidw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4MDU2Nw==", "bodyText": "Do\nreturn ((BlockFertilizeEvent) e).getBlocks().stream()\n\t\t\t.map(BlockStateBlock::new)\n\t\t\t.toArray(BlockStateBlock[]::new);", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461480567", "createdAt": "2020-07-28T10:29:24Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized Blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"2.5\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn\n+\t\t\t((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t\t.map(BlockStateBlock::new)\n+\t\t\t\t.toArray(BlockStateBlock[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bf2d074bd22d431487bb81f7ddd166a263ba0f"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTAyNTI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo0NjoyN1rOG4HDKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMDo1MzowMVrOG4HP1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4ODkzNw==", "bodyText": "I think there should be 2 tabs, so\n\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n\t\t\t\t.map(BlockStateBlock::new)\n\t\t\t\t.iterator();\n\nOther than that, I think it's good to merge.", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461488937", "createdAt": "2020-07-28T10:46:27Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized Blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"INSERT VERSION\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t\t.map(BlockStateBlock::new)\n+\t\t\t\t.toArray(BlockStateBlock[]::new);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Iterator<? extends BlockStateBlock> iterator(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t.map(BlockStateBlock::new)\n+\t\t\t.iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7d37b095d568f832ba60d95d58e78993a2f2137"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MDMwNA==", "bodyText": "\ud83e\udd37", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461490304", "createdAt": "2020-07-28T10:49:12Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized Blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"INSERT VERSION\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t\t.map(BlockStateBlock::new)\n+\t\t\t\t.toArray(BlockStateBlock[]::new);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Iterator<? extends BlockStateBlock> iterator(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t.map(BlockStateBlock::new)\n+\t\t\t.iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4ODkzNw=="}, "originalCommit": {"oid": "d7d37b095d568f832ba60d95d58e78993a2f2137"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MTcwMQ==", "bodyText": "As per coding conventions :)", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461491701", "createdAt": "2020-07-28T10:52:01Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized Blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"INSERT VERSION\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t\t.map(BlockStateBlock::new)\n+\t\t\t\t.toArray(BlockStateBlock[]::new);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Iterator<? extends BlockStateBlock> iterator(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t.map(BlockStateBlock::new)\n+\t\t\t.iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4ODkzNw=="}, "originalCommit": {"oid": "d7d37b095d568f832ba60d95d58e78993a2f2137"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MjA2Mw==", "bodyText": "Oh it's a coding convention?", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461492063", "createdAt": "2020-07-28T10:52:45Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized Blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"INSERT VERSION\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t\t.map(BlockStateBlock::new)\n+\t\t\t\t.toArray(BlockStateBlock[]::new);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Iterator<? extends BlockStateBlock> iterator(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t.map(BlockStateBlock::new)\n+\t\t\t.iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4ODkzNw=="}, "originalCommit": {"oid": "d7d37b095d568f832ba60d95d58e78993a2f2137"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ5MjE4MQ==", "bodyText": "Hadn't noticed, my bad", "url": "https://github.com/SkriptLang/Skript/pull/3222#discussion_r461492181", "createdAt": "2020-07-28T10:53:01Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprFertilizedBlocks.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+\n+import java.util.Iterator;\n+\n+import org.bukkit.event.Event;\n+import org.bukkit.event.block.BlockFertilizeEvent;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.ScriptLoader;\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Events;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.RequiredPlugins;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.skript.util.BlockStateBlock;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Fertilized Blocks\")\n+@Description(\"The blocks fertilized in block fertilize events.\")\n+@RequiredPlugins(\"Minecraft 1.13 or newer\")\n+@Events(\"block fertilize\")\n+@Examples(\"the fertilized blocks\")\n+@Since(\"INSERT VERSION\")\n+public class ExprFertilizedBlocks extends SimpleExpression<BlockStateBlock> {\n+\t\n+\tstatic {\n+\t\tif (Skript.classExists(\"org.bukkit.event.block.BlockFertilizeEvent\"))\n+\t\t\tSkript.registerExpression(ExprFertilizedBlocks.class, BlockStateBlock.class, ExpressionType.SIMPLE, \"[all] [the] fertilized blocks\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tif (!ScriptLoader.isCurrentEvent(BlockFertilizeEvent.class)) {\n+\t\t\tSkript.error(\"The 'fertilized blocks' are only usable in block fertilize events\");\n+\t\t\treturn false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected BlockStateBlock[] get(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t\t.map(BlockStateBlock::new)\n+\t\t\t\t.toArray(BlockStateBlock[]::new);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Iterator<? extends BlockStateBlock> iterator(Event e) {\n+\t\treturn ((BlockFertilizeEvent) e).getBlocks().stream()\n+\t\t\t.map(BlockStateBlock::new)\n+\t\t\t.iterator();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ4ODkzNw=="}, "originalCommit": {"oid": "d7d37b095d568f832ba60d95d58e78993a2f2137"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1087, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}