{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjcyMDI0", "number": 2829, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxODowOToxN1rODiK1pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowNDoyN1rODkBOZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTU1NzUxOnYy", "diffSide": "LEFT", "path": ".classpath", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxODowOToxN1rOFtSDIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODoyOTozNVrOFtrJTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyNTk1Mg==", "bodyText": "Did you mean to do this?", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r383025952", "createdAt": "2020-02-23T18:09:17Z", "author": {"login": "APickledWalrus"}, "path": ".classpath", "diffHunk": "@@ -24,7 +24,6 @@\n \t\t\t<attribute name=\"gradle_used_by_scope\" value=\"test\"/>\n \t\t</attributes>\n \t</classpathentry>\n-\t<classpathentry kind=\"src\" path=\"src/test/skript\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9572730926e26679611d3048a7fed9ef6e34e07c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyODMzNw==", "bodyText": "It's eclipse, and it was rewritten to be updated because no one uses eclipse.", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r383028337", "createdAt": "2020-02-23T18:43:28Z", "author": {"login": "TheLimeGlass"}, "path": ".classpath", "diffHunk": "@@ -24,7 +24,6 @@\n \t\t\t<attribute name=\"gradle_used_by_scope\" value=\"test\"/>\n \t\t</attributes>\n \t</classpathentry>\n-\t<classpathentry kind=\"src\" path=\"src/test/skript\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyNTk1Mg=="}, "originalCommit": {"oid": "9572730926e26679611d3048a7fed9ef6e34e07c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQzNzEzNA==", "bodyText": "I do use Eclipse, and this probably makes test scripts source folder not visible.", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r383437134", "createdAt": "2020-02-24T18:29:35Z", "author": {"login": "bensku"}, "path": ".classpath", "diffHunk": "@@ -24,7 +24,6 @@\n \t\t\t<attribute name=\"gradle_used_by_scope\" value=\"test\"/>\n \t\t</attributes>\n \t</classpathentry>\n-\t<classpathentry kind=\"src\" path=\"src/test/skript\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyNTk1Mg=="}, "originalCommit": {"oid": "9572730926e26679611d3048a7fed9ef6e34e07c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk1MDg4OnYy", "diffSide": "RIGHT", "path": "skript-worldguard6/.classpath", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMTo1NzoyMVrOFwI_aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMTo1NzoyMVrOFwI_aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMzI3Mg==", "bodyText": "Please get rid of Eclipse configuration files for subprojects. They're coming to .gitignore soon, when my PR is merged.", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r386023272", "createdAt": "2020-02-29T11:57:21Z", "author": {"login": "bensku"}, "path": "skript-worldguard6/.classpath", "diffHunk": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86af28919e09a44a40fe14b5ab1543172e40304"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk1MTc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMDowM1rOFwI_3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMDowM1rOFwI_3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMzM5MQ==", "bodyText": "Don't just suppress heap pollution warnings. It would be better to manually verify that this occasion is safe and add @SafeVarargs to method.", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r386023391", "createdAt": "2020-02-29T12:00:03Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "diffHunk": "@@ -101,22 +96,17 @@ public EventValueInfo(final Class<E> event, final Class<T> c, final Getter<T, E>\n \t * @param time\r\n \t * @param excludes Subclasses of the event for which this event value should not be registered for\r\n \t */\r\n-\tpublic static <T, E extends Event> void registerEventValue(final Class<E> e, final Class<T> c, final Getter<T, E> g, final int time, final @Nullable String excludeErrorMessage, final @Nullable Class<? extends E>... excludes) {\r\n+\tpublic static <T, E extends Event> void registerEventValue(Class<E> e, Class<T> c, Getter<T, E> g, int time, @Nullable String excludeErrorMessage, @SuppressWarnings(\"unchecked\") @Nullable Class<? extends E>... excludes) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86af28919e09a44a40fe14b5ab1543172e40304"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk1MjU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMTozMFrOFwJAPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMTozMFrOFwJAPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMzQ4Ng==", "bodyText": "When adding missing Javadoc, please follow code conventions with the formatting.", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r386023486", "createdAt": "2020-02-29T12:01:30Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "diffHunk": "@@ -125,98 +115,123 @@ public EventValueInfo(final Class<E> event, final Class<T> c, final Getter<T, E>\n \t * It is recommended to use {@link EventValues#getEventValueGetter(Class, Class, int)} or {@link EventValueExpression#EventValueExpression(Class)} instead of invoking this\r\n \t * method repeatedly.\r\n \t * \r\n-\t * @param e\r\n-\t * @param c\r\n-\t * @param time\r\n+\t * @param e event\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86af28919e09a44a40fe14b5ab1543172e40304"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk1Mjg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMjoxNlrOFwJAaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMjoxNlrOFwJAaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMzUyOA==", "bodyText": "Return type of getter?", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r386023528", "createdAt": "2020-02-29T12:02:16Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "diffHunk": "@@ -125,98 +115,123 @@ public EventValueInfo(final Class<E> event, final Class<T> c, final Getter<T, E>\n \t * It is recommended to use {@link EventValues#getEventValueGetter(Class, Class, int)} or {@link EventValueExpression#EventValueExpression(Class)} instead of invoking this\r\n \t * method repeatedly.\r\n \t * \r\n-\t * @param e\r\n-\t * @param c\r\n-\t * @param time\r\n+\t * @param e event\r\n+\t * @param c type of getter\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86af28919e09a44a40fe14b5ab1543172e40304"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk1MzM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMzoxOFrOFwJApw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowMzoxOFrOFwJApw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMzU5MQ==", "bodyText": "Unfortunately, this argument is int. You'll need to provide some hints about acceptable values, otherwise Javadoc is not very useful.", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r386023591", "createdAt": "2020-02-29T12:03:18Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "diffHunk": "@@ -125,98 +115,123 @@ public EventValueInfo(final Class<E> event, final Class<T> c, final Getter<T, E>\n \t * It is recommended to use {@link EventValues#getEventValueGetter(Class, Class, int)} or {@link EventValueExpression#EventValueExpression(Class)} instead of invoking this\r\n \t * method repeatedly.\r\n \t * \r\n-\t * @param e\r\n-\t * @param c\r\n-\t * @param time\r\n+\t * @param e event\r\n+\t * @param c type of getter\r\n+\t * @param time the event-value's time\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86af28919e09a44a40fe14b5ab1543172e40304"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDk1Mzk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowNDoyN1rOFwJA9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMjowNDoyN1rOFwJA9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMzY2OQ==", "bodyText": "Might be grammatical error here, please check. If it is not, please elaborate a bit instead. I'm not sure what this means.", "url": "https://github.com/SkriptLang/Skript/pull/2829#discussion_r386023669", "createdAt": "2020-02-29T12:04:27Z", "author": {"login": "bensku"}, "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "diffHunk": "@@ -125,98 +115,123 @@ public EventValueInfo(final Class<E> event, final Class<T> c, final Getter<T, E>\n \t * It is recommended to use {@link EventValues#getEventValueGetter(Class, Class, int)} or {@link EventValueExpression#EventValueExpression(Class)} instead of invoking this\r\n \t * method repeatedly.\r\n \t * \r\n-\t * @param e\r\n-\t * @param c\r\n-\t * @param time\r\n+\t * @param e event\r\n+\t * @param c type of getter\r\n+\t * @param time the event-value's time\r\n \t * @return The event's value\r\n \t * @see #registerEventValue(Class, Class, Getter, int)\r\n \t */\r\n \t@Nullable\r\n-\tpublic static <T, E extends Event> T getEventValue(final E e, final Class<T> c, final int time) {\r\n-\t\t@SuppressWarnings({\"null\", \"unchecked\"})\r\n-\t\tfinal Getter<? extends T, ? super E> g = EventValues.getEventValueGetter((Class<E>) e.getClass(), c, time);\r\n-\t\tif (g == null)\r\n+\tpublic static <T, E extends Event> T getEventValue(E e, Class<T> c, int time) {\r\n+\t\t@SuppressWarnings(\"unchecked\")\r\n+\t\tGetter<? extends T, ? super E> getter = getEventValueGetter((Class<E>) e.getClass(), c, time);\r\n+\t\tif (getter == null)\r\n \t\t\treturn null;\r\n-\t\treturn g.get(e);\r\n+\t\treturn getter.get(e);\r\n \t}\r\n \t\r\n \t/**\r\n \t * Returns a getter to get a value from an event.\r\n \t * <p>\r\n \t * Can print an error if the event value is blocked for the given event.\r\n \t * \r\n-\t * @param e\r\n-\t * @param c\r\n-\t * @param time\r\n+\t * @param e event class runtime calling\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86af28919e09a44a40fe14b5ab1543172e40304"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1127, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}