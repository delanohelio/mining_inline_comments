{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzMzNTYx", "number": 3218, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMToyNjoxNVrOESI6KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyNTowNFrOEnxANA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDU1Nzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMToyNjoxNVrOG3LmSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMToyNjoxNVrOG3LmSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxNDg5MQ==", "bodyText": "As stated before on Discord, the condition and void method should not be on the same line.", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r460514891", "createdAt": "2020-07-26T11:26:15Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null) {\n+\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n+\t\t\t\tif (m instanceof Minecart) ((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t});\n+\t\t\treturn;\n+\t\t}\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tgetExpr().stream(e).forEach(m -> {\n+\t\t\t\t\tif (m instanceof Minecart) ((Minecart) m).setMaxSpeed(((Number) delta[0]).doubleValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52fcbd04ecea8aea0fc9c16d4d496384ad2d5c01"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjI2ODA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxMjowNFrOG5yLeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxMjowNFrOG5yLeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NDE1NA==", "bodyText": "the IF statement should be on it's own line", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r463244154", "createdAt": "2020-07-30T20:12:04Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null) {\n+\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cd31f5e092a75a86287bec699fc9631955b64eb"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjI3MDEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxMjo0MVrOG5yMqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxMjo0MVrOG5yMqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NDQ1OQ==", "bodyText": "Can you put this statement into a switch?", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r463244459", "createdAt": "2020-07-30T20:12:41Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cd31f5e092a75a86287bec699fc9631955b64eb"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjI4MjE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxNjoyOVrOG5yUNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxNjoyOVrOG5yUNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0NjM4OQ==", "bodyText": "Oh, also, can you switch these to for loops (based on other PRs / feedback to stay consistent)?", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r463246389", "createdAt": "2020-07-30T20:16:29Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE || mode == ChangeMode.RESET || mode == ChangeMode.SET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null) {\n+\t\t\tif (mode == ChangeMode.RESET) getExpr().stream(e).forEach(m -> {\n+\t\t\t\tif (m instanceof Minecart)\n+\t\t\t\t\t((Minecart) m).setMaxSpeed(0.4);\n+\t\t\t});\n+\t\t\treturn;\n+\t\t}\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tgetExpr().stream(e).forEach(m -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cd31f5e092a75a86287bec699fc9631955b64eb"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTMyNzg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyNTowNFrOHYh2QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyNTowNFrOHYh2QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjQzMg==", "bodyText": "The switch statement should have a default case that asserts false", "url": "https://github.com/SkriptLang/Skript/pull/3218#discussion_r495482432", "createdAt": "2020-09-26T18:25:04Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMaxMinecartSpeed.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Max Minecart Speed\")\n+@Description(\"The maximum speed of a minecart.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset max minecart speed of event-entity to 1\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMaxMinecartSpeed extends SimplePropertyExpression<Entity, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMaxMinecartSpeed.class, Number.class, \"max[imum] minecart (speed|velocity)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getMaxSpeed() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "549369bbc15bfb74c5c70f76f6b27a659a705414"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1081, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}