{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzM2NTI2", "number": 3219, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMToyNDozMlrOESI5hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTo0NDo1MFrOEqYJqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDU1NjIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedVelocity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMToyNDozMlrOG3LlgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMToyNDozMlrOG3LlgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxNDY4OQ==", "bodyText": "As stated before on Discord, the condition and void method should not be on the same line.", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r460514689", "createdAt": "2020-07-26T11:24:32Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedVelocity.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedVelocity.class, Vector.class, \"[minecart] derailed velocity\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart ? ((Minecart) entity).getDerailedVelocityMod() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.ADD || mode == ChangeMode.REMOVE) ? CollectionUtils.array(Vector.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tswitch (mode) {\n+\t\t\t\tcase SET:\n+\t\t\t\t\tgetExpr().stream(e).forEach(entity -> {\n+\t\t\t\t\t\tif (entity instanceof Minecart) ((Minecart) entity).setDerailedVelocityMod((Vector) delta[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c814b280869ac83742f2f171c12abe7707e03bae"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjI2MDMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDowOTo0MlrOG5yGzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDowOTo0MlrOG5yGzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0Mjk1OQ==", "bodyText": "Space after method end? :D", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r463242959", "createdAt": "2020-07-30T20:09:42Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tif (flying)\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setFlyingVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).add(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).subtract(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\telse\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setDerailedVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).add(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).subtract(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn (flying ? \"flying\" : \"derailed\") + \" velocity\";\n+\t}\n+\t\n+\t\n+\t@Override\n+\tpublic Class<? extends Vector> getReturnType() {\n+\t\treturn Vector.class;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7dbd92c279553274cdb240966260b087e58746"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjI2MDkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDowOTo1M1rOG5yHKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDowOTo1M1rOG5yHKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0MzA0OA==", "bodyText": "Can you remove one of the spaces here?", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r463243048", "createdAt": "2020-07-30T20:09:53Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tif (flying)\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setFlyingVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).add(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setFlyingVelocityMod(((Vector) delta[0]).subtract(minecart.getFlyingVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\telse\n+\t\t\t\tswitch (mode) {\n+\t\t\t\t\tcase SET:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart)\n+\t\t\t\t\t\t\t\t((Minecart) entity).setDerailedVelocityMod((Vector) delta[0]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase ADD:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).add(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase REMOVE:\n+\t\t\t\t\t\tfor (Entity entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\t\tif (entity instanceof Minecart) {\n+\t\t\t\t\t\t\t\tMinecart minecart = (Minecart) entity;\n+\t\t\t\t\t\t\t\tminecart.setDerailedVelocityMod(((Vector) delta[0]).subtract(minecart.getDerailedVelocityMod()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn (flying ? \"flying\" : \"derailed\") + \" velocity\";\n+\t}\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7dbd92c279553274cdb240966260b087e58746"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjI2MjYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxMDoyNlrOG5yIKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoxMDoyNlrOG5yIKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI0MzMwNg==", "bodyText": "IMO you should add curly brackets to the if/else statement", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r463243306", "createdAt": "2020-07-30T20:10:26Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta != null) {\n+\t\t\tif (flying)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea7dbd92c279553274cdb240966260b087e58746"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTMyNjg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyNDoxMVrOHYh1zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyNDoxMVrOHYh1zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjMxOQ==", "bodyText": "Both switches should have a default case that asserts false", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r495482319", "createdAt": "2020-09-26T18:24:11Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,147 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Vector.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4123b6ad6c29c6c5d2f548ce46abfcd262a79199"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzA3NDM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMToxNzo1OVrOHZU9yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjoyMzo0NlrOHZcjtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxOTk0Nw==", "bodyText": "To reduce the casting, perhaps you could do\n\t\tif (entity instanceof Minecart) {\n\t\t\tMinecart mc = (Minecart) entity;\n\t\t\treturn flying ? mc.getFlyingVelocityMod() : mc.getDerailedVelocityMod();\n\t\t}\n\t\treturn null;\n\nAlso, I think you swapped your flying velocity and derailed velocity, since you put flying as the condition, they should be swapped?", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r496319947", "createdAt": "2020-09-29T01:17:59Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae040f73d2a928e39598ef12939d760a5f7139e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ0NDM0Mg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r496444342", "createdAt": "2020-09-29T06:23:46Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class, \"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\treturn entity instanceof Minecart\n+\t\t\t? (flying ? ((Minecart) entity).getDerailedVelocityMod() : ((Minecart) entity).getFlyingVelocityMod())\n+\t\t\t: null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxOTk0Nw=="}, "originalCommit": {"oid": "cae040f73d2a928e39598ef12939d760a5f7139e"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjAwNzc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMDoxNDoxMVrOHcJ5pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMDoxNDoxMVrOHcJ5pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4NDM4OQ==", "bodyText": "Should be some spacing here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif(entity instanceof Minecart){\n          \n          \n            \n            \t\tif (entity instanceof Minecart) {", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r499284389", "createdAt": "2020-10-04T20:14:11Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Entity;\n+import org.bukkit.entity.Minecart;\n+import org.bukkit.event.Event;\n+import org.bukkit.util.Vector;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Minecart Derailed / Flying Velocity\")\n+@Description(\"The velocity of a minecart as soon as it has been derailed or as soon as it starts flying.\")\n+@Examples({\"on right click on minecart:\",\n+\t\"\\tset derailed velocity of event-entity to vector 2, 10, 2\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprMinecartDerailedFlyingVelocity extends SimplePropertyExpression<Entity, Vector> {\n+\t\n+\tstatic {\n+\t\tregister(ExprMinecartDerailedFlyingVelocity.class, Vector.class,\n+\t\t\t\"[minecart] (1\u00a6derailed|2\u00a6flying) velocity\", \"entities\");\n+\t}\n+\t\n+\tprivate boolean flying;\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tflying = parseResult.mark == 2;\n+\t\treturn super.init(exprs, matchedPattern, isDelayed, parseResult);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Vector convert(Entity entity) {\n+\t\tif(entity instanceof Minecart){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86efaa4060ca66f03ddb47e5d3baf2ad5b9bf08f"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODcxMzM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTo0NDo1MFrOHcjDzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTo1NzowOVrOHcjkEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NjU4OA==", "bodyText": "You'll need to fix the license header", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r499696588", "createdAt": "2020-10-05T15:44:50Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1da10c03cbba0b20f365e83fcde04889ae184b3e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwNDg0OA==", "bodyText": "Yeah I'm going through all my pr's and doing it \ud83d\udc4d", "url": "https://github.com/SkriptLang/Skript/pull/3219#discussion_r499704848", "createdAt": "2020-10-05T15:57:09Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprMinecartDerailedFlyingVelocity.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NjU4OA=="}, "originalCommit": {"oid": "1da10c03cbba0b20f365e83fcde04889ae184b3e"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1083, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}