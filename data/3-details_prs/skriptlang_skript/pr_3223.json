{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzU2NjM3", "number": 3223, "title": "Added ExprWhitelist and CondServerIsWhitelisted", "bodyText": "Description\n\nAdded a way to manage the server's whitelist with skript\n\nTarget Minecraft Versions: any \nRequirements: none \nRelated Issues: none", "createdAt": "2020-07-26T14:22:40Z", "url": "https://github.com/SkriptLang/Skript/pull/3223", "merged": true, "mergeCommit": {"oid": "08ca2bc2a5612a42beb699250d0b8e45cf090938"}, "closed": true, "closedAt": "2020-11-12T00:08:22Z", "author": {"login": "DeltaRays"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4uAiuAH2gAyNDU2NzU2NjM3OmUwZDVhMWIzY2M5MmE1YTMyYjJhNGM0Y2M4YWI1OWVhNzAyYzIzODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbnD9ogH2gAyNDU2NzU2NjM3OjQwNjEwODIzOWUyZWQ5NTk1ODQzMTU0MzMyMTM1YTMwM2E2YjZmNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389", "committedDate": "2020-07-26T14:22:04Z", "message": "Added ExprWhitelist and CondServerIsWhitelisted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzkwMjQy", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-455390242", "createdAt": "2020-07-26T19:43:36Z", "commit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0MzozNlrOG3OshA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTo0OTowMVrOG3OuhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTYzNg==", "bodyText": "To keep with the continuity of other conditions, this should be Is Server Whitelisted", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565636", "createdAt": "2020-07-26T19:43:36Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTY2Mg==", "bodyText": "This sentence should end with a period.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565662", "createdAt": "2020-07-26T19:43:48Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTg3OQ==", "bodyText": "This technically is not correct syntax, it should end with a colon : ... while I understand this is an example, an example should be able to be copy/pasted without issue.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565879", "createdAt": "2020-07-26T19:45:58Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")\n+@Examples(\"if server is whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTk5MA==", "bodyText": "Could probably use a property condition for this.\nSee CondIsSneaking as an example.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460565990", "createdAt": "2020-07-26T19:47:19Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondServerIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Server Is Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted\")\n+@Examples(\"if server is whitelisted\")\n+@Since(\"INSERT VERSION\")\n+public class CondServerIsWhitelisted extends Condition {\n+\t\n+\tstatic {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjA3MQ==", "bodyText": "This sentence should end with a period.\nI also feel like the description should be expanded on, as its pretty vague and does not detail what the expression is used for.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460566071", "createdAt": "2020-07-26T19:48:11Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjE0OA==", "bodyText": "As stated many times already, conditions and void methods should not be on the same line.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460566148", "createdAt": "2020-07-26T19:49:01Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null) Bukkit.setWhitelist((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5a1b3cc92a5a32b2a4c4cc8ab59ea702c2389"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/c78074d3751603e70f91eb98d2bc6365edab2e72", "committedDate": "2020-07-26T20:22:38Z", "message": "Expanded on the ExprWhitelist description, renamed ServerIsWhitelisted to IsServerWhitelisted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Nzc2Nzc5", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-455776779", "createdAt": "2020-07-27T13:25:02Z", "commit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzoyNTowM1rOG3iTmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzozNDozOFrOG3irxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg4NjkzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Name(\"Is Server Whitelisted\")\n          \n          \n            \n            @Name(\"Is Whitelisted\")", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460886938", "createdAt": "2020-07-27T13:25:03Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MDkzMg==", "bodyText": "ParseResult should be imported directly", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460890932", "createdAt": "2020-07-27T13:31:13Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MTMzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n          \n          \n            \n            \t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460891339", "createdAt": "2020-07-27T13:31:50Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MjYxNA==", "bodyText": "delta is nullable, you've got to check whether it is null here", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460892614", "createdAt": "2020-07-27T13:33:52Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MzA0OQ==", "bodyText": "missing new line at the end of the file", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460893049", "createdAt": "2020-07-27T13:34:31Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[]{});\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:\n+\t\t\tcase RESET:\n+\t\t\t\tfor (OfflinePlayer p : Bukkit.getWhitelistedPlayers())\n+\t\t\t\t\tp.setWhitelisted(false);\n+\t\t\t\tbreak;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean isSingle() {\n+\t\treturn false;\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends OfflinePlayer> getReturnType() {\n+\t\treturn OfflinePlayer.class;\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"whitelist\";\n+\t}\n+\t\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MzEyNg==", "bodyText": "missing new line at the end of the file", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r460893126", "createdAt": "2020-07-27T13:34:38Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"server is whitelisted\";\n+\t}\n+\t\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c78074d3751603e70f91eb98d2bc6365edab2e72"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ecac1bd83d30e33a575b19f43686d150d68ff52", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/9ecac1bd83d30e33a575b19f43686d150d68ff52", "committedDate": "2020-07-27T13:36:57Z", "message": "replaced new OfflinePlayer[]{} with new OfflinePlayer[0]\n\nCo-authored-by: Frank Kusmiruk <48283695+FranKusmiruk@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b0e87bb15a3babe8cd387a746b60d83deede01d", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/3b0e87bb15a3babe8cd387a746b60d83deede01d", "committedDate": "2020-07-27T13:39:47Z", "message": "Merge branch 'master' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/0571df11d5867111b9d5ef40d0d5e73ffb462af5", "committedDate": "2020-07-27T13:41:44Z", "message": "Imported ParseResult directly and added new line at the end of the file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1OTc3NDM4", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-455977438", "createdAt": "2020-07-27T17:12:34Z", "commit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoxMjozNFrOG3rznA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzoyMDozNVrOG3sF_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0MjU4OA==", "bodyText": "The file name should start with Cond", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461042588", "createdAt": "2020-07-27T17:12:34Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Mjk3OQ==", "bodyText": "might be useful to prefix this with \"[the]\"\nI don\u2019t think that\u2019s done automatically", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461042979", "createdAt": "2020-07-27T17:13:15Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0MzQyMA==", "bodyText": "You should check if the condition is negated here, so if it is negated, you can return \"server is not whitelisted\"", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461043420", "createdAt": "2020-07-27T17:14:04Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/IsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class IsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(IsServerWhitelisted.class, \"server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"server is whitelisted\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDI2OA==", "bodyText": "What happens if you call this method and there are no whitelisted players? Does it return an empty list or null?", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461044268", "createdAt": "2020-07-27T17:15:19Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDc5Ng==", "bodyText": "IMO you should use curly brackets when you have an it / else if / else, but I\u2019m not sure what the conventions say about that actually", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461044796", "createdAt": "2020-07-27T17:16:16Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NjM3Mg==", "bodyText": "This isn\u2019t proper usage of REMOVE_ALL, since really your just clearing it, not removing a specific type from the list", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461046372", "createdAt": "2020-07-27T17:19:02Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE_ALL:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0Njc2Nw==", "bodyText": "I recommend splitting this up over several lines (to avoid having one long line)", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461046767", "createdAt": "2020-07-27T17:19:43Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI5Mg==", "bodyText": "If you do remove the REMOVE_ALL changer, I recommend removing the delta checks and just adding one at the top of the file. You can also check the change mode for RESET\nif (delta == null && mode != ChangeMode.RESET)\n    return;", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461047292", "createdAt": "2020-07-27T17:20:35Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cdb142ba8f66526b6565abb217f786da706f655", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/5cdb142ba8f66526b6565abb217f786da706f655", "committedDate": "2020-07-27T17:56:04Z", "message": "renamed the condition and added isNegated to the toString return, and split the description over multiple times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/1d9aa87f06cef0a02b6d0c83134bb7e645931363", "committedDate": "2020-07-27T18:43:39Z", "message": "removed the REMOVE_ALL change mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTYxNTM3", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-456161537", "createdAt": "2020-07-27T21:51:59Z", "commit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1MTo1OVrOG306hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1MTo1OVrOG306hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg==", "bodyText": "Snow mentioned the \"server\" part here.\nMaybe this condition can be changed to check for server and players?!?!", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461191812", "createdAt": "2020-07-27T21:51:59Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjExMzgx", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-456211381", "createdAt": "2020-07-27T23:53:15Z", "commit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzo1MzoxNVrOG33liw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzo1MzoxNVrOG33liw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzNTU5NQ==", "bodyText": "Considering you can just do:\nif the whitelist contains some offline player:\n\nI didn't really pay attention to that detail but it could make it less confusing for users so, why not.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r461235595", "createdAt": "2020-07-27T23:53:15Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}, "originalCommit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30f0b91afab20d254f641a4d9608a2d1699e97e9", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/30f0b91afab20d254f641a4d9608a2d1699e97e9", "committedDate": "2020-07-28T08:53:09Z", "message": "Merge branch 'master' into ExprWhitelist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzEyMDcw", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-458712070", "createdAt": "2020-07-30T19:57:06Z", "commit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxOTo1NzowNlrOG5xuEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDowMToxOVrOG5x29A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzNjYyNQ==", "bodyText": "IMO you should be able to check if players are whitelisted too.\nif the player is whitelisted:", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r463236625", "createdAt": "2020-07-30T19:57:06Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5MTgxMg=="}, "originalCommit": {"oid": "1d9aa87f06cef0a02b6d0c83134bb7e645931363"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIzODkwMA==", "bodyText": "I would make this change to avoid repetitive code.", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r463238900", "createdAt": "2020-07-30T20:01:19Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist. This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET || mode == ChangeMode.REMOVE_ALL)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NzI5Mg=="}, "originalCommit": {"oid": "0571df11d5867111b9d5ef40d0d5e73ffb462af5"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2cdc1fcb499f67ab8517df58f045a855729f866", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/a2cdc1fcb499f67ab8517df58f045a855729f866", "committedDate": "2020-07-30T22:17:41Z", "message": "Merge branch 'master' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc1494f7f261d5d37d1596935012b9a0f6f8ee37", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/fc1494f7f261d5d37d1596935012b9a0f6f8ee37", "committedDate": "2020-08-02T16:21:12Z", "message": "Merge branch 'master' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "382424d7b1ffbefd12a21ca883c90b645ad40cd6", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/382424d7b1ffbefd12a21ca883c90b645ad40cd6", "committedDate": "2020-09-08T18:20:29Z", "message": "Merge branch 'master' into ExprWhitelist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDIyMzQ0", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-497022344", "createdAt": "2020-09-26T18:21:43Z", "commit": {"oid": "382424d7b1ffbefd12a21ca883c90b645ad40cd6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyMTo0NFrOHYh1Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODoyMjo0NFrOHYh1eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjE1NQ==", "bodyText": "Suggested change", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r495482155", "createdAt": "2020-09-26T18:21:44Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Server Whitelisted\")\n+@Description(\"Whether or not the server is whitelisted.\")\n+@Examples(\"if server is whitelisted:\")\n+@Since(\"INSERT VERSION\")\n+public class CondIsServerWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondIsServerWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tsetNegated(parseResult.mark != 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\treturn Bukkit.hasWhitelist() == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382424d7b1ffbefd12a21ca883c90b645ad40cd6"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjIzNA==", "bodyText": "You should add a default case here that asserts false", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r495482234", "createdAt": "2020-09-26T18:22:44Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprWhitelist.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.OfflinePlayer;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.ExpressionType;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.skript.lang.util.SimpleExpression;\n+import ch.njol.util.Kleenean;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Whitelist\")\n+@Description(\"A server's whitelist.\" +\n+\t\"This expression can be used to add/remove players to/from the whitelist,\" +\n+\t\" to enable it and disable it (set whitelist to true / set whitelist to false),\" +\n+\t\" and to empty it (reset whitelist)\")\n+@Examples({\"set whitelist to false\",\n+\t\"add all players to whitelist\",\n+\t\"reset the whitelist\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprWhitelist extends SimpleExpression<OfflinePlayer> {\n+\t\n+\tstatic {\n+\t\tSkript.registerExpression(ExprWhitelist.class, OfflinePlayer.class, ExpressionType.SIMPLE, \"[the] white[ ]list\");\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\treturn true;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tprotected OfflinePlayer[] get(Event e) {\n+\t\treturn Bukkit.getServer().getWhitelistedPlayers().toArray(new OfflinePlayer[0]);\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tif (mode == ChangeMode.ADD || mode == ChangeMode.REMOVE)\n+\t\t\treturn CollectionUtils.array(OfflinePlayer[].class);\n+\t\telse if (mode == ChangeMode.SET || mode == ChangeMode.RESET)\n+\t\t\treturn CollectionUtils.array(Boolean.class);\n+\t\telse\n+\t\t\treturn null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\t\tif (delta != null)\n+\t\t\t\t\tBukkit.setWhitelist((Boolean) delta[0]);\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(true);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (delta != null) {\n+\t\t\t\t\tfor (Object p : delta)\n+\t\t\t\t\t\t((OfflinePlayer) p).setWhitelisted(false);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\t\tfor (OfflinePlayer p : Bukkit.getWhitelistedPlayers())\n+\t\t\t\t\tp.setWhitelisted(false);\n+\t\t\t\tbreak;\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382424d7b1ffbefd12a21ca883c90b645ad40cd6"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51e2209f483db6117ee181307074c87312c5d5b4", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/51e2209f483db6117ee181307074c87312c5d5b4", "committedDate": "2020-09-26T18:31:37Z", "message": "Merge branch 'master' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a839f2c7ef42af731053a40b5b5b658e5291f18", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/7a839f2c7ef42af731053a40b5b5b658e5291f18", "committedDate": "2020-09-26T18:56:16Z", "message": "Update src/main/java/ch/njol/skript/conditions/CondIsServerWhitelisted.java\n\nCo-authored-by: APickledWalrus <apickledwalrus@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63d82c3f7087da6adbc527ef87767ad8a05c87ec", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/63d82c3f7087da6adbc527ef87767ad8a05c87ec", "committedDate": "2020-09-26T18:57:14Z", "message": "Added a default case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c455dda333d4e39b6f77dabf3bef92526e73ce4", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/1c455dda333d4e39b6f77dabf3bef92526e73ce4", "committedDate": "2020-09-26T18:57:27Z", "message": "Merge remote-tracking branch 'origin/ExprWhitelist' into ExprWhitelist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDM1NzYy", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-497035762", "createdAt": "2020-09-26T22:45:16Z", "commit": {"oid": "1c455dda333d4e39b6f77dabf3bef92526e73ce4"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f053eeceae8553842a7e73fa387932e9f2ef4926", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/f053eeceae8553842a7e73fa387932e9f2ef4926", "committedDate": "2020-10-04T20:19:53Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5642d5d8cf993a916817335611a306169cab96f3", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/5642d5d8cf993a916817335611a306169cab96f3", "committedDate": "2020-10-04T23:02:19Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd0f44d366d30bbc66adafeff8c8b572795cf28d", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/fd0f44d366d30bbc66adafeff8c8b572795cf28d", "committedDate": "2020-10-05T15:54:39Z", "message": "Another broken files commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b668ea4103efbf5c980dc3ce7ee3fe0deed03dd", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/3b668ea4103efbf5c980dc3ce7ee3fe0deed03dd", "committedDate": "2020-10-05T15:54:49Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae5d1517b7ab5931b286526da8f404420c52b902", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/ae5d1517b7ab5931b286526da8f404420c52b902", "committedDate": "2020-10-05T15:54:55Z", "message": "Merge remote-tracking branch 'origin/ExprWhitelist' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beb29f8c0c7075bbc5422aa2ab1e3b898d3468ec", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/beb29f8c0c7075bbc5422aa2ab1e3b898d3468ec", "committedDate": "2020-10-05T15:55:21Z", "message": "License changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDA5Mjky", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-502409292", "createdAt": "2020-10-05T20:48:57Z", "commit": {"oid": "beb29f8c0c7075bbc5422aa2ab1e3b898d3468ec"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "420622965323a2e1771472c8ffff3efe579679b7", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/420622965323a2e1771472c8ffff3efe579679b7", "committedDate": "2020-10-10T10:57:25Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a4d44099b1e9e527a75eba8ac356437d863999f", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/0a4d44099b1e9e527a75eba8ac356437d863999f", "committedDate": "2020-10-13T16:22:14Z", "message": "Updated CondIsServerWhitelisted.java to check whether or not a player is whitelisted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb03323e7821f8d1ed907c4a5fd8a7f750d0611b", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/eb03323e7821f8d1ed907c4a5fd8a7f750d0611b", "committedDate": "2020-10-13T16:22:32Z", "message": "Merge remote-tracking branch 'origin/ExprWhitelist' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8c2bbfbf24654a7cad554ca67eeb80b9590f950", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/e8c2bbfbf24654a7cad554ca67eeb80b9590f950", "committedDate": "2020-10-21T05:25:24Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTMzNzgz", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-515133783", "createdAt": "2020-10-22T21:29:49Z", "commit": {"oid": "e8c2bbfbf24654a7cad554ca67eeb80b9590f950"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToyOTo0OVrOHm0jug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMToyOTo0OVrOHm0jug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ2OTA1MA==", "bodyText": "Ideally this would support multiple players\nalso, you should put the pattern on separate lines (one line per pattern) ;D", "url": "https://github.com/SkriptLang/Skript/pull/3223#discussion_r510469050", "createdAt": "2020-10-22T21:29:49Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondIsWhitelisted.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.Bukkit;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Is Whitelisted\")\n+@Description(\"Whether or not the server or a player is whitelisted.\")\n+@Examples({\"if server is whitelisted:\", \"if player is whitelisted\"})\n+@Since(\"INSERT VERSION\")\n+public class CondIsWhitelisted extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondIsWhitelisted.class, \"[the] server (is|1\u00a6is(n't| not)) white[ ]listed\", \"%player% (is|1\u00a6is(n't| not)) white[ ]listed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8c2bbfbf24654a7cad554ca67eeb80b9590f950"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47bc7bb6c33cc209e9450efec67e4c16ef63ac76", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/47bc7bb6c33cc209e9450efec67e4c16ef63ac76", "committedDate": "2020-11-05T19:18:29Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c61f746984944c05720de80bcb48ba52f59c712", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/3c61f746984944c05720de80bcb48ba52f59c712", "committedDate": "2020-11-05T19:22:52Z", "message": "e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b47b4927b12f92e10c86270b8d1c4e40f620bd4d", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/b47b4927b12f92e10c86270b8d1c4e40f620bd4d", "committedDate": "2020-11-05T19:23:08Z", "message": "Revert \"e\"\n\nThis reverts commit 3c61f746984944c05720de80bcb48ba52f59c712."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb7e4191e2579338eabf54e1e7831e80349d01dd", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/eb7e4191e2579338eabf54e1e7831e80349d01dd", "committedDate": "2020-11-05T19:23:16Z", "message": "Tested something"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69044282ae31fb20d1a55ba08a49fcf14bc2de7", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/e69044282ae31fb20d1a55ba08a49fcf14bc2de7", "committedDate": "2020-11-05T19:23:42Z", "message": "Revert \"Tested something\"\n\nThis reverts commit eb7e4191e2579338eabf54e1e7831e80349d01dd."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b63a3b78c987da3af693c20f0b5cf366fd96cb2c", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/b63a3b78c987da3af693c20f0b5cf366fd96cb2c", "committedDate": "2020-11-05T20:11:02Z", "message": "Reverted license header changes and added support to multiple players"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODU5NDM1", "url": "https://github.com/SkriptLang/Skript/pull/3223#pullrequestreview-525859435", "createdAt": "2020-11-08T23:46:10Z", "commit": {"oid": "b63a3b78c987da3af693c20f0b5cf366fd96cb2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd62ee2534759ee302eeba3bf67d928f2e3b52ea", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/dd62ee2534759ee302eeba3bf67d928f2e3b52ea", "committedDate": "2020-11-08T23:46:19Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "406108239e2ed9595843154332135a303a6b6f4a", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/406108239e2ed9595843154332135a303a6b6f4a", "committedDate": "2020-11-12T00:03:49Z", "message": "Merge branch 'dev-2.5' into ExprWhitelist"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3096, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}