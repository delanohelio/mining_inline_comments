{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNzYyMjEz", "number": 3174, "title": "Created CondMatches.java", "bodyText": "Description\n\nCreated a condition to check whether or not a list of strings match a list of regexes\nTarget Minecraft Versions:     \nRequirements:     \nRelated Issues:", "createdAt": "2020-07-19T20:38:05Z", "url": "https://github.com/SkriptLang/Skript/pull/3174", "merged": true, "mergeCommit": {"oid": "19f0b8e275c0a2d7bbdab28b012a0ae8bee4fbc5"}, "closed": true, "closedAt": "2020-11-16T11:49:30Z", "author": {"login": "DeltaRays"}, "timelineItems": {"totalCount": 47, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2jJiKgH2gAyNDUyNzYyMjEzOmRmNDcxMTVlMjdmOTllZmY4N2NiMzE1ZTgwZmU1MjI0YTgxOTAxZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcLVwXAH2gAyNDUyNzYyMjEzOjMzNWYzZjkyNTE5OTgwOTliNDhjM2VkZTNmYzcwZjM3YWQ1ZWJjM2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "df47115e27f99eff87cb315e80fe5224a81901e3", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/df47115e27f99eff87cb315e80fe5224a81901e3", "committedDate": "2020-07-19T20:35:05Z", "message": "Create CondMatches.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aed4b343e9bd45b1979069aa343eeb9dc837de8", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/1aed4b343e9bd45b1979069aa343eeb9dc837de8", "committedDate": "2020-07-19T20:38:57Z", "message": "As usual I forgot the skript copyright comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMTYxNzE1", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-451161715", "createdAt": "2020-07-19T20:43:33Z", "commit": {"oid": "1aed4b343e9bd45b1979069aa343eeb9dc837de8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMDo0MzozM1rOGzyOQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMDo0Nzo0N1rOGzyP3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1MzQwOA==", "bodyText": "Maybe rename these fields? string and regex for example \ud83d\ude03", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r456953408", "createdAt": "2020-07-19T20:43:33Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% match[es] %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> text1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aed4b343e9bd45b1979069aa343eeb9dc837de8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1MzY0MA==", "bodyText": "I think you can just use Expression#getArray here. The returned arrays won't be null, but they may be empty.", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r456953640", "createdAt": "2020-07-19T20:45:38Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% match[es] %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> text1;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> text2;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\ttext1 = (Expression<String>) exprs[0];\n+\t\ttext2 = (Expression<String>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt1 = text1.getAll(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aed4b343e9bd45b1979069aa343eeb9dc837de8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1MzgyMA==", "bodyText": "I would make using matches required. Using just match sound weird to me. Are there any situations where using match would be better though?", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r456953820", "createdAt": "2020-07-19T20:47:47Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% match[es] %strings%\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aed4b343e9bd45b1979069aa343eeb9dc837de8"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ced82d1cd1d85d5190ef072d0bd8ca42e33d2c9f", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/ced82d1cd1d85d5190ef072d0bd8ca42e33d2c9f", "committedDate": "2020-07-19T20:56:59Z", "message": "Update CondMatches.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMTY1NjEw", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-451165610", "createdAt": "2020-07-19T21:43:42Z", "commit": {"oid": "ced82d1cd1d85d5190ef072d0bd8ca42e33d2c9f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzIxMzAy", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-451321302", "createdAt": "2020-07-20T06:16:10Z", "commit": {"oid": "ced82d1cd1d85d5190ef072d0bd8ca42e33d2c9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjoxNjoxMFrOGz6YWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjoxNjoxMFrOGz6YWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA4NzA2Nw==", "bodyText": "Shouldn't this be Pattern[] patterns?", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r457087067", "createdAt": "2020-07-20T06:16:10Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% match[es] %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> strings;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> regex;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tstrings = (Expression<String>) exprs[0];\n+\t\tregex = (Expression<String>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt1 = strings.getArray(e);\n+\t\tString[] txt2 = regex.getArray(e);\n+\t\tif (txt1.length < 1 || txt2.length < 1) return false;\n+\t\tObject[] patterns = Arrays.stream(txt2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced82d1cd1d85d5190ef072d0bd8ca42e33d2c9f"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12f5edb280013a5ae9ba6c646e79aae217b2fa14", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/12f5edb280013a5ae9ba6c646e79aae217b2fa14", "committedDate": "2020-07-20T07:45:39Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "650a3d20cc1ede9cb901eac94cd29b917411fd32", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/650a3d20cc1ede9cb901eac94cd29b917411fd32", "committedDate": "2020-07-20T10:35:55Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTA5ODI5", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-451509829", "createdAt": "2020-07-20T11:10:06Z", "commit": {"oid": "650a3d20cc1ede9cb901eac94cd29b917411fd32"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d706611abcb14cc1ffd2fea741fbf48567e59f9a", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/d706611abcb14cc1ffd2fea741fbf48567e59f9a", "committedDate": "2020-07-20T21:50:31Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25598fa919590fe5cc0d23c8b851f8398b640a84", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/25598fa919590fe5cc0d23c8b851f8398b640a84", "committedDate": "2020-07-22T07:06:35Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "801fae2b51d1c83416f9abcd292fb93fc35ffb8e", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/801fae2b51d1c83416f9abcd292fb93fc35ffb8e", "committedDate": "2020-07-22T07:44:34Z", "message": "Added negation to the condition (doesn't match), removed an unnecessary array and added tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTA0Mzgx", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-453104381", "createdAt": "2020-07-22T08:29:24Z", "commit": {"oid": "801fae2b51d1c83416f9abcd292fb93fc35ffb8e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODoyOToyNFrOG1YP7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODoyOToyNFrOG1YP7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNTAwNA==", "bodyText": "Are you sure you want to use Matcher#find() here and not Matcher#matches()?\nAlso, you're using allMatch for both of these, but I think that should be dependant on whether it's an and list or an or list (see https://github.com/SkriptLang/Skript/blob/master/src/main/java/ch/njol/skript/lang/Expression.java#L76)", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r458625004", "createdAt": "2020-07-22T08:29:24Z", "author": {"login": "TPGamesNL"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% (1\u00a6match[es]|2\u00a6does(n't| not) match) %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> strings;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> regex;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tstrings = (Expression<String>) exprs[0];\n+\t\tregex = (Expression<String>) exprs[1];\n+\t\tsetNegated(parseResult.mark == 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt1 = strings.getArray(e);\n+\t\tString[] patterns = regex.getArray(e);\n+\t\tif (txt1.length < 1 || patterns.length < 1) return false;\n+\t\treturn Arrays.stream(txt1)\n+\t\t\t.allMatch((str) -> Arrays.stream(patterns)\n+\t\t\t\t.allMatch((pattern) -> (Pattern.compile(pattern).matcher(str).find()))) == isNegated();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801fae2b51d1c83416f9abcd292fb93fc35ffb8e"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTA5NjUy", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-453109652", "createdAt": "2020-07-22T08:36:16Z", "commit": {"oid": "801fae2b51d1c83416f9abcd292fb93fc35ffb8e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozNjoxNlrOG1YgLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozNjoxNlrOG1YgLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyOTE2NQ==", "bodyText": "Pattern compilation can be computationally expensive... does this compile all the pattern strings once only? Or does it do a compilation every comparison?", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r458629165", "createdAt": "2020-07-22T08:36:16Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% (1\u00a6match[es]|2\u00a6does(n't| not) match) %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> strings;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> regex;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, SkriptParser.ParseResult parseResult) {\n+\t\tstrings = (Expression<String>) exprs[0];\n+\t\tregex = (Expression<String>) exprs[1];\n+\t\tsetNegated(parseResult.mark == 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt1 = strings.getArray(e);\n+\t\tString[] patterns = regex.getArray(e);\n+\t\tif (txt1.length < 1 || patterns.length < 1) return false;\n+\t\treturn Arrays.stream(txt1)\n+\t\t\t.allMatch((str) -> Arrays.stream(patterns)\n+\t\t\t\t.allMatch((pattern) -> (Pattern.compile(pattern).matcher(str).find()))) == isNegated();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801fae2b51d1c83416f9abcd292fb93fc35ffb8e"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTEwNDUw", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-453110450", "createdAt": "2020-07-22T08:37:18Z", "commit": {"oid": "801fae2b51d1c83416f9abcd292fb93fc35ffb8e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozNzoxOFrOG1YitA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozNzoxOFrOG1YitA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyOTgxMg==", "bodyText": "A few more tests would be nice... matching uuid? etc", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r458629812", "createdAt": "2020-07-22T08:37:18Z", "author": {"login": "Wealthyturtle"}, "path": "src/test/skript/tests/syntaxes/conditions/CondMatches.sk", "diffHunk": "@@ -0,0 +1,3 @@\n+test \"matches condition\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801fae2b51d1c83416f9abcd292fb93fc35ffb8e"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf5da05b9259057aabbcd4abcadf473a2a76ca8b", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/bf5da05b9259057aabbcd4abcadf473a2a76ca8b", "committedDate": "2020-07-22T12:37:52Z", "message": "Improved the system to make it more efficient and to make it support 'or' in both the strings to check and in the regexes to check. I also added a few other tests for 'or' and 'and', and for negative conditions (don't match, doesn't match, etc.)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMzEyOTQ1", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-453312945", "createdAt": "2020-07-22T13:24:36Z", "commit": {"oid": "bf5da05b9259057aabbcd4abcadf473a2a76ca8b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzoyNDozNlrOG1iOgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMzoyNDozNlrOG1iOgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc4ODQ4Mw==", "bodyText": "Full stop here", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r458788483", "createdAt": "2020-07-22T13:24:36Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+import java.util.stream.Stream;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5da05b9259057aabbcd4abcadf473a2a76ca8b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db30cc1315399e54c3d2df5a02f4fb74047cdba0", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/db30cc1315399e54c3d2df5a02f4fb74047cdba0", "committedDate": "2020-07-22T13:41:00Z", "message": "Added a dot at the end of the description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNTU0Mjc1", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-453554275", "createdAt": "2020-07-22T17:56:12Z", "commit": {"oid": "db30cc1315399e54c3d2df5a02f4fb74047cdba0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1NjoxMlrOG1t0-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo1NjoxMlrOG1t0-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3ODU1Mg==", "bodyText": "What's the rationale behind using a parallel stream here?", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r458978552", "createdAt": "2020-07-22T17:56:12Z", "author": {"login": "chatasma"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+import java.util.stream.Stream;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions.\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% (1\u00a6match[es]|2\u00a6do[es](n't| not) match) %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> strings;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> regex;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tstrings = (Expression<String>) exprs[0];\n+\t\tregex = (Expression<String>) exprs[1];\n+\t\tsetNegated(parseResult.mark == 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt = strings.getAll(e);\n+\t\tString[] regexes = regex.getAll(e);\n+\t\tif (txt.length < 1 || regexes.length < 1) return false;\n+\t\tboolean result;\n+\t\tboolean stringAnd = strings.getAnd();\n+\t\tboolean regexAnd = regex.getAnd();\n+\t\tif (stringAnd) {\n+\t\t\tif (regexAnd) {\n+\t\t\t\tresult = Arrays.stream(txt).parallel().allMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).allMatch((pattern -> pattern.matcher(str).find())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db30cc1315399e54c3d2df5a02f4fb74047cdba0"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66e6e7ca14be116c52d2dc693a951d86ab8fc96a", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/66e6e7ca14be116c52d2dc693a951d86ab8fc96a", "committedDate": "2020-07-22T19:09:53Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "303534809f80872a72b0299d284978e871f14a29", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/303534809f80872a72b0299d284978e871f14a29", "committedDate": "2020-07-23T07:04:14Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc6e8f185fbf88b3cc3ab7c9217b4ceddc1da8f8", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/dc6e8f185fbf88b3cc3ab7c9217b4ceddc1da8f8", "committedDate": "2020-07-23T07:25:15Z", "message": "Removed .parallel()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "515f3cea28d7c7c5bba28dbc6041bbaed9cfe96a", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/515f3cea28d7c7c5bba28dbc6041bbaed9cfe96a", "committedDate": "2020-07-24T07:44:31Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4ab998ebb494ac62cd0947a0e995c9ce4583fb9", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/d4ab998ebb494ac62cd0947a0e995c9ce4583fb9", "committedDate": "2020-07-24T15:02:35Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9783860bd3e70e8b825e22dd5b857af5639c4a60", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/9783860bd3e70e8b825e22dd5b857af5639c4a60", "committedDate": "2020-07-26T09:53:43Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzQ4MjU5", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-458748259", "createdAt": "2020-07-30T20:53:04Z", "commit": {"oid": "9783860bd3e70e8b825e22dd5b857af5639c4a60"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MzowNFrOG5zbaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MzoyM1rOG5zcBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2NDYxNg==", "bodyText": "IMO, you should just surround matches and doesn't match, but that's more of my formatting opinion", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r463264616", "createdAt": "2020-07-30T20:53:04Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions.\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% (1\u00a6match[es]|2\u00a6do[es](n't| not) match) %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> strings;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> regex;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tstrings = (Expression<String>) exprs[0];\n+\t\tregex = (Expression<String>) exprs[1];\n+\t\tsetNegated(parseResult.mark == 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt = strings.getAll(e);\n+\t\tString[] regexes = regex.getAll(e);\n+\t\tif (txt.length < 1 || regexes.length < 1) return false;\n+\t\tboolean result;\n+\t\tboolean stringAnd = strings.getAnd();\n+\t\tboolean regexAnd = regex.getAnd();\n+\t\tif (stringAnd) {\n+\t\t\tif (regexAnd) {\n+\t\t\t\tresult = Arrays.stream(txt).allMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).allMatch((pattern -> pattern.matcher(str).find())));\n+\t\t\t} else {\n+\t\t\t\tresult = Arrays.stream(txt).allMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).anyMatch((pattern -> pattern.matcher(str).find())));\n+\t\t\t}\n+\t\t} else if (regexAnd) {\n+\t\t\tresult = Arrays.stream(txt).anyMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).allMatch((pattern -> pattern.matcher(str).find())));\n+\t\t} else {\n+\t\t\tresult = Arrays.stream(txt).anyMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).anyMatch((pattern -> pattern.matcher(str).find())));\n+\t\t\t\n+\t\t}\n+\t\treturn result == isNegated();\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn strings.toString(e, debug) + \" \" + (isNegated() ? \"matches\" : \"doesn't match\") + \" \" + regex.toString(e, debug);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9783860bd3e70e8b825e22dd5b857af5639c4a60"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2NDc3Mw==", "bodyText": "Whitespace \ud83d\ude28", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r463264773", "createdAt": "2020-07-30T20:53:23Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions.\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class, \"%strings% (1\u00a6match[es]|2\u00a6do[es](n't| not) match) %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> strings;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> regex;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tstrings = (Expression<String>) exprs[0];\n+\t\tregex = (Expression<String>) exprs[1];\n+\t\tsetNegated(parseResult.mark == 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt = strings.getAll(e);\n+\t\tString[] regexes = regex.getAll(e);\n+\t\tif (txt.length < 1 || regexes.length < 1) return false;\n+\t\tboolean result;\n+\t\tboolean stringAnd = strings.getAnd();\n+\t\tboolean regexAnd = regex.getAnd();\n+\t\tif (stringAnd) {\n+\t\t\tif (regexAnd) {\n+\t\t\t\tresult = Arrays.stream(txt).allMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).allMatch((pattern -> pattern.matcher(str).find())));\n+\t\t\t} else {\n+\t\t\t\tresult = Arrays.stream(txt).allMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).anyMatch((pattern -> pattern.matcher(str).find())));\n+\t\t\t}\n+\t\t} else if (regexAnd) {\n+\t\t\tresult = Arrays.stream(txt).anyMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).allMatch((pattern -> pattern.matcher(str).find())));\n+\t\t} else {\n+\t\t\tresult = Arrays.stream(txt).anyMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).anyMatch((pattern -> pattern.matcher(str).find())));\n+\t\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9783860bd3e70e8b825e22dd5b857af5639c4a60"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20796acace7db480f553eb8e810e7d2940674b3f", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/20796acace7db480f553eb8e810e7d2940674b3f", "committedDate": "2020-07-31T11:15:05Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784e939527c0b0d8beeda4b869f8bee30a8b3cda", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/784e939527c0b0d8beeda4b869f8bee30a8b3cda", "committedDate": "2020-07-31T11:16:48Z", "message": "Removed an empty line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e93c09f5a9e3c58200ac639ed4eefdd79f85a7f", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/6e93c09f5a9e3c58200ac639ed4eefdd79f85a7f", "committedDate": "2020-08-02T16:25:06Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0e3bb645d0f0798c60448b8e4ddbce0e5abf772", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/b0e3bb645d0f0798c60448b8e4ddbce0e5abf772", "committedDate": "2020-09-08T18:53:52Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ea9ec665bb8c4e598ee77b611d17d7351b67f54", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/5ea9ec665bb8c4e598ee77b611d17d7351b67f54", "committedDate": "2020-09-26T11:41:19Z", "message": "Made it so you can partially match strings and added more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08f7a3509e4c154ea733fd8c7e6a451fb8e2c8db", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/08f7a3509e4c154ea733fd8c7e6a451fb8e2c8db", "committedDate": "2020-09-26T11:44:42Z", "message": "Merge branch 'master' into CondMatches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDI0MTcy", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-497024172", "createdAt": "2020-09-26T18:53:16Z", "commit": {"oid": "08f7a3509e4c154ea733fd8c7e6a451fb8e2c8db"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTA4MzYx", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-498908361", "createdAt": "2020-09-29T21:31:17Z", "commit": {"oid": "08f7a3509e4c154ea733fd8c7e6a451fb8e2c8db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozMToxOFrOHaC4iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTozMToxOFrOHaC4iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3MjI2NA==", "bodyText": "In my opinion, I feel this description is quite lacklustre.\nI know that you have regex matching available here, but there is absolutely no mention of it. I recommend updating the description to give more detail on what this condition actually does.", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r497072264", "createdAt": "2020-09-29T21:31:18Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Test whether strings match defined regular expressions.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08f7a3509e4c154ea733fd8c7e6a451fb8e2c8db"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da1edc27a7ceab70a3a81529aef33637c23cc9c3", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/da1edc27a7ceab70a3a81529aef33637c23cc9c3", "committedDate": "2020-09-30T05:43:55Z", "message": "Update CondMatches.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d6a713aefe7fff6bef743f8d73e9e1fba66d2e", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/36d6a713aefe7fff6bef743f8d73e9e1fba66d2e", "committedDate": "2020-09-30T05:48:44Z", "message": "Merge branch 'dev-2.5' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69788b1a776ffc9047ad21b2232af63cf622f810", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/69788b1a776ffc9047ad21b2232af63cf622f810", "committedDate": "2020-10-05T12:09:05Z", "message": "Merge branch 'dev-2.5' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82fb3a230a1e8d554469bc66d50a9bc494e70d35", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/82fb3a230a1e8d554469bc66d50a9bc494e70d35", "committedDate": "2020-10-05T14:54:19Z", "message": "Updated license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dae812bf0d2a51f29f7a5b1e569ba252ef80c96", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/2dae812bf0d2a51f29f7a5b1e569ba252ef80c96", "committedDate": "2020-10-10T10:59:12Z", "message": "Merge branch 'dev-2.5' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e308ac0de94f7ac645433f49151fb4d6140aeb5", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/2e308ac0de94f7ac645433f49151fb4d6140aeb5", "committedDate": "2020-10-10T11:00:22Z", "message": "Updated the description of CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05d29f1a672071904ff3720e5298d11c65ef9646", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/05d29f1a672071904ff3720e5298d11c65ef9646", "committedDate": "2020-10-10T11:00:45Z", "message": "Merge remote-tracking branch 'origin/CondMatches' into CondMatches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2OTQxODkx", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-506941891", "createdAt": "2020-10-12T21:57:01Z", "commit": {"oid": "05d29f1a672071904ff3720e5298d11c65ef9646"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODU1OTAy", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-525855902", "createdAt": "2020-11-08T23:10:51Z", "commit": {"oid": "05d29f1a672071904ff3720e5298d11c65ef9646"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMzoxMDo1MVrOHvbNkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMzoxMDo1MVrOHvbNkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ5MDk2MQ==", "bodyText": "Am I crazy, or is this backwards?\n(isNegated() ? \"matches\" : \"doesn't match\")", "url": "https://github.com/SkriptLang/Skript/pull/3174#discussion_r519490961", "createdAt": "2020-11-08T23:10:51Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondMatches.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+\n+package ch.njol.skript.conditions;\n+\n+import java.util.Arrays;\n+import java.util.regex.Pattern;\n+\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Matches\")\n+@Description(\"Checks whether the defined strings match the input regexes (Regular expressions).\")\n+@Examples({\"on chat:\",\n+\t\"\\tif message partially matches \\\"\\\\d\\\":\",\n+\t\"\\t\\tsend \\\"Message contains a digit!\\\"\",\n+\t\"\\tif message doesn't match \\\"[A-Za-z]+\\\":\",\n+\t\"\\t\\tsend \\\"Message doesn't only contain letters!\\\"\"})\n+@Since(\"INSERT VERSION\")\n+public class CondMatches extends Condition {\n+\t\n+\tstatic {\n+\t\tSkript.registerCondition(CondMatches.class,\n+\t\t\t\"%strings% (1\u00a6match[es]|2\u00a6do[es](n't| not) match) %strings%\",\n+\t\t\t\"%strings% (1\u00a6partially match[es]|2\u00a6do[es](n't| not) partially match) %strings%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> strings;\n+\t@SuppressWarnings(\"null\")\n+\tExpression<String> regex;\n+\t\n+\tboolean partial;\n+\t\n+\t@Override\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\tpublic boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelayed, ParseResult parseResult) {\n+\t\tstrings = (Expression<String>) exprs[0];\n+\t\tregex = (Expression<String>) exprs[1];\n+\t\tpartial = matchedPattern == 1;\n+\t\tsetNegated(parseResult.mark == 1);\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tpublic boolean check(Event e) {\n+\t\tString[] txt = strings.getAll(e);\n+\t\tString[] regexes = regex.getAll(e);\n+\t\tif (txt.length < 1 || regexes.length < 1) return false;\n+\t\tboolean result;\n+\t\tboolean stringAnd = strings.getAnd();\n+\t\tboolean regexAnd = regex.getAnd();\n+\t\tif (stringAnd) {\n+\t\t\tif (regexAnd) {\n+\t\t\t\tresult = Arrays.stream(txt).allMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).allMatch((pattern -> matches(str, pattern))));\n+\t\t\t} else {\n+\t\t\t\tresult = Arrays.stream(txt).allMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).anyMatch((pattern -> matches(str, pattern))));\n+\t\t\t}\n+\t\t} else if (regexAnd) {\n+\t\t\tresult = Arrays.stream(txt).anyMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).allMatch((pattern -> matches(str, pattern))));\n+\t\t} else {\n+\t\t\tresult = Arrays.stream(txt).anyMatch((str) -> Arrays.stream(regexes).parallel().map(Pattern::compile).anyMatch((pattern -> matches(str, pattern))));\n+\t\t}\n+\t\treturn result == isNegated();\n+\t}\n+\t\n+\tpublic boolean matches(String str, Pattern pattern) {\n+\t\treturn partial ? pattern.matcher(str).find() : str.matches(pattern.pattern());\n+\t}\n+\t\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn strings.toString(e, debug) + \" \" + (isNegated() ? \"matches\" : \"doesn't match\") + \" \" + regex.toString(e, debug);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d29f1a672071904ff3720e5298d11c65ef9646"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f306bca22ad94e01499959b8c35cc5d1a690e8ee", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/f306bca22ad94e01499959b8c35cc5d1a690e8ee", "committedDate": "2020-11-10T17:38:03Z", "message": "Merge branch 'dev-2.5' into CondMatches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a809fbd3333d1e7b667842a48dc504be994d4aec", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/a809fbd3333d1e7b667842a48dc504be994d4aec", "committedDate": "2020-11-10T17:42:46Z", "message": "Update CondMatches.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NjQwNDAy", "url": "https://github.com/SkriptLang/Skript/pull/3174#pullrequestreview-528640402", "createdAt": "2020-11-11T23:59:01Z", "commit": {"oid": "a809fbd3333d1e7b667842a48dc504be994d4aec"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "335f3f9251998099b48c3ede3fc70f37ad5ebc3e", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/335f3f9251998099b48c3ede3fc70f37ad5ebc3e", "committedDate": "2020-11-13T18:19:50Z", "message": "Merge branch 'dev-2.5' into CondMatches"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3063, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}