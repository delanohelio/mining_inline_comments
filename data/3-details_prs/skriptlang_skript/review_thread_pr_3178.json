{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyOTY4ODY2", "number": 3178, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMTozNTo0NVrOEQbhRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MDo1MlrOET1vyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjYzNTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprDateAgoLater.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMTozNTo0NVrOG0k7oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODoyOToxNVrOG5ZQbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NDIyNQ==", "bodyText": "this does not function the same as old behavior, the old behavior would replace a null date with the current date, while this implementation just returns null for a null date", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457784225", "createdAt": "2020-07-21T01:35:45Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprDateAgoLater.java", "diffHunk": "@@ -46,20 +46,24 @@\n                 \"%timespan% (later|(from|after) [the] [date] %-date%)\");\n     }\n \n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Timespan> timespan;\n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Date> date;\n \n     private boolean ago;\n \n-    @Nullable\n+\t@SuppressWarnings(\"null\")\n+\t@Nullable\n     @Override\n     protected Date[] get(Event e) {\n+\t\tif (this.timespan == null || this.date == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE3NDE1NA==", "bodyText": "Will this.date ever be null? Like, the Expression<Date> variable itself, not its content.", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r462174154", "createdAt": "2020-07-29T09:44:01Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprDateAgoLater.java", "diffHunk": "@@ -46,20 +46,24 @@\n                 \"%timespan% (later|(from|after) [the] [date] %-date%)\");\n     }\n \n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Timespan> timespan;\n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Date> date;\n \n     private boolean ago;\n \n-    @Nullable\n+\t@SuppressWarnings(\"null\")\n+\t@Nullable\n     @Override\n     protected Date[] get(Event e) {\n+\t\tif (this.timespan == null || this.date == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NDIyNQ=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyNzI0Nw==", "bodyText": "yes, in the second pattern the date expr is nullable", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r462427247", "createdAt": "2020-07-29T16:24:22Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprDateAgoLater.java", "diffHunk": "@@ -46,20 +46,24 @@\n                 \"%timespan% (later|(from|after) [the] [date] %-date%)\");\n     }\n \n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Timespan> timespan;\n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Date> date;\n \n     private boolean ago;\n \n-    @Nullable\n+\t@SuppressWarnings(\"null\")\n+\t@Nullable\n     @Override\n     protected Date[] get(Event e) {\n+\t\tif (this.timespan == null || this.date == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NDIyNQ=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgzNTgyMw==", "bodyText": "Fixed in next commit", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r462835823", "createdAt": "2020-07-30T08:29:15Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/expressions/ExprDateAgoLater.java", "diffHunk": "@@ -46,20 +46,24 @@\n                 \"%timespan% (later|(from|after) [the] [date] %-date%)\");\n     }\n \n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Timespan> timespan;\n-    @SuppressWarnings(\"null\")\n+    @Nullable\n     private Expression<Date> date;\n \n     private boolean ago;\n \n-    @Nullable\n+\t@SuppressWarnings(\"null\")\n+\t@Nullable\n     @Override\n     protected Date[] get(Event e) {\n+\t\tif (this.timespan == null || this.date == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NDIyNQ=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjY0NTAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/bukkitutil/BukkitUnsafe.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMTo0MToyMFrOG0lBZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjoyOTozM1rOG42JWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NTcwMA==", "bodyText": "why is it safe to remove the exception that may be thrown here? it's not guaranteed that this API exists", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457785700", "createdAt": "2020-07-21T01:41:20Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/bukkitutil/BukkitUnsafe.java", "diffHunk": "@@ -60,10 +60,7 @@\n \tprivate static final boolean knownNullPtr = !Skript.isRunningMinecraft(1, 11);\n \t\n \tstatic {\n-\t\tUnsafeValues values = Bukkit.getUnsafe();\n-\t\tif (values == null)\n-\t\t\tthrow new Error(\"UnsafeValues not available\");\n-\t\tunsafe = values;\n+\t\tunsafe = Bukkit.getUnsafe();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc5NTcxMQ==", "bodyText": "Wait, when would this API not exist? If the user is running some non-Bukkit software?", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457795711", "createdAt": "2020-07-21T02:17:12Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/bukkitutil/BukkitUnsafe.java", "diffHunk": "@@ -60,10 +60,7 @@\n \tprivate static final boolean knownNullPtr = !Skript.isRunningMinecraft(1, 11);\n \t\n \tstatic {\n-\t\tUnsafeValues values = Bukkit.getUnsafe();\n-\t\tif (values == null)\n-\t\t\tthrow new Error(\"UnsafeValues not available\");\n-\t\tunsafe = values;\n+\t\tunsafe = Bukkit.getUnsafe();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NTcwMA=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1MDM5Mg==", "bodyText": "It's in the class docs: \"Their existence and behavior is not guaranteed across future versions.\"", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r462250392", "createdAt": "2020-07-29T12:10:55Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/bukkitutil/BukkitUnsafe.java", "diffHunk": "@@ -60,10 +60,7 @@\n \tprivate static final boolean knownNullPtr = !Skript.isRunningMinecraft(1, 11);\n \t\n \tstatic {\n-\t\tUnsafeValues values = Bukkit.getUnsafe();\n-\t\tif (values == null)\n-\t\t\tthrow new Error(\"UnsafeValues not available\");\n-\t\tunsafe = values;\n+\t\tunsafe = Bukkit.getUnsafe();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NTcwMA=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MDU3MQ==", "bodyText": "I re-did the code section for that, I think it should solve this?", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r462260571", "createdAt": "2020-07-29T12:29:33Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/bukkitutil/BukkitUnsafe.java", "diffHunk": "@@ -60,10 +60,7 @@\n \tprivate static final boolean knownNullPtr = !Skript.isRunningMinecraft(1, 11);\n \t\n \tstatic {\n-\t\tUnsafeValues values = Bukkit.getUnsafe();\n-\t\tif (values == null)\n-\t\t\tthrow new Error(\"UnsafeValues not available\");\n-\t\tunsafe = values;\n+\t\tunsafe = Bukkit.getUnsafe();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NTcwMA=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjY0Njc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMTo0MjozMVrOG0lCfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMjoxMToxMFrOG0lh1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NTk4MQ==", "bodyText": "has getOfflinePlayer always been guaranteed to be non-null? if not, this may not be the same as old behavior", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457785981", "createdAt": "2020-07-21T01:42:31Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -843,16 +842,14 @@ public boolean canBeInstantiated() {\n \t\t\t\t\tprotected OfflinePlayer deserialize(final Fields fields) throws StreamCorruptedException {\n \t\t\t\t\t\tif (fields.contains(\"uuid\") && uuidSupported) {\n \t\t\t\t\t\t\tfinal UUID uuid = fields.getObject(\"uuid\", UUID.class);\n-\t\t\t\t\t\t\tOfflinePlayer p;\n-\t\t\t\t\t\t\tif (uuid == null || (p = Bukkit.getOfflinePlayer(uuid)) == null)\n+\t\t\t\t\t\t\tif (uuid == null)\n \t\t\t\t\t\t\t\tthrow new StreamCorruptedException();\n-\t\t\t\t\t\t\treturn p;\n+\t\t\t\t\t\t\treturn Bukkit.getOfflinePlayer(uuid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NzczOQ==", "bodyText": "Bukkit.getOfflinePlayer(uuid) is @NotNull", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457787739", "createdAt": "2020-07-21T01:48:44Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -843,16 +842,14 @@ public boolean canBeInstantiated() {\n \t\t\t\t\tprotected OfflinePlayer deserialize(final Fields fields) throws StreamCorruptedException {\n \t\t\t\t\t\tif (fields.contains(\"uuid\") && uuidSupported) {\n \t\t\t\t\t\t\tfinal UUID uuid = fields.getObject(\"uuid\", UUID.class);\n-\t\t\t\t\t\t\tOfflinePlayer p;\n-\t\t\t\t\t\t\tif (uuid == null || (p = Bukkit.getOfflinePlayer(uuid)) == null)\n+\t\t\t\t\t\t\tif (uuid == null)\n \t\t\t\t\t\t\t\tthrow new StreamCorruptedException();\n-\t\t\t\t\t\t\treturn p;\n+\t\t\t\t\t\t\treturn Bukkit.getOfflinePlayer(uuid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NTk4MQ=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc5NDAwNw==", "bodyText": "Same thing here,", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457794007", "createdAt": "2020-07-21T02:11:10Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -843,16 +842,14 @@ public boolean canBeInstantiated() {\n \t\t\t\t\tprotected OfflinePlayer deserialize(final Fields fields) throws StreamCorruptedException {\n \t\t\t\t\t\tif (fields.contains(\"uuid\") && uuidSupported) {\n \t\t\t\t\t\t\tfinal UUID uuid = fields.getObject(\"uuid\", UUID.class);\n-\t\t\t\t\t\t\tOfflinePlayer p;\n-\t\t\t\t\t\t\tif (uuid == null || (p = Bukkit.getOfflinePlayer(uuid)) == null)\n+\t\t\t\t\t\t\tif (uuid == null)\n \t\t\t\t\t\t\t\tthrow new StreamCorruptedException();\n-\t\t\t\t\t\t\treturn p;\n+\t\t\t\t\t\t\treturn Bukkit.getOfflinePlayer(uuid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NTk4MQ=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjY1MTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMTo0NToxMlrOG0lFfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMjowODoyNlrOG0lfDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4Njc1MQ==", "bodyText": "i think getChunkAt may return null in some circumstances, do you know if this is true?", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457786751", "createdAt": "2020-07-21T01:45:12Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1245,10 +1242,9 @@ public boolean canBeInstantiated() {\n \t\t\t\t\tprotected Chunk deserialize(final Fields fields) throws StreamCorruptedException {\n \t\t\t\t\t\tfinal World w = fields.getObject(\"world\", World.class);\n \t\t\t\t\t\tfinal int x = fields.getPrimitive(\"x\", int.class), z = fields.getPrimitive(\"z\", int.class);\n-\t\t\t\t\t\tChunk c;\n-\t\t\t\t\t\tif (w == null || (c = w.getChunkAt(x, z)) == null)\n+\t\t\t\t\t\tif (w == null)\n \t\t\t\t\t\t\tthrow new StreamCorruptedException();\n-\t\t\t\t\t\treturn c;\n+\t\t\t\t\t\treturn w.getChunkAt(x, z);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4Nzg5MA==", "bodyText": "I'm not sure... but the docs says that it's @NotNull as well", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457787890", "createdAt": "2020-07-21T01:49:18Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1245,10 +1242,9 @@ public boolean canBeInstantiated() {\n \t\t\t\t\tprotected Chunk deserialize(final Fields fields) throws StreamCorruptedException {\n \t\t\t\t\t\tfinal World w = fields.getObject(\"world\", World.class);\n \t\t\t\t\t\tfinal int x = fields.getPrimitive(\"x\", int.class), z = fields.getPrimitive(\"z\", int.class);\n-\t\t\t\t\t\tChunk c;\n-\t\t\t\t\t\tif (w == null || (c = w.getChunkAt(x, z)) == null)\n+\t\t\t\t\t\tif (w == null)\n \t\t\t\t\t\t\tthrow new StreamCorruptedException();\n-\t\t\t\t\t\treturn c;\n+\t\t\t\t\t\treturn w.getChunkAt(x, z);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4Njc1MQ=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc5MzI5NQ==", "bodyText": "I did some investigation, according to https://helpch.at/docs/1.9/ although it doesn't say it's @NotNull (no null notations used at that time), but it never mentions returning null being a possibility, unlike some other functions that do mention null is a possible return value.", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457793295", "createdAt": "2020-07-21T02:08:26Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitClasses.java", "diffHunk": "@@ -1245,10 +1242,9 @@ public boolean canBeInstantiated() {\n \t\t\t\t\tprotected Chunk deserialize(final Fields fields) throws StreamCorruptedException {\n \t\t\t\t\t\tfinal World w = fields.getObject(\"world\", World.class);\n \t\t\t\t\t\tfinal int x = fields.getPrimitive(\"x\", int.class), z = fields.getPrimitive(\"z\", int.class);\n-\t\t\t\t\t\tChunk c;\n-\t\t\t\t\t\tif (w == null || (c = w.getChunkAt(x, z)) == null)\n+\t\t\t\t\t\tif (w == null)\n \t\t\t\t\t\t\tthrow new StreamCorruptedException();\n-\t\t\t\t\t\treturn c;\n+\t\t\t\t\t\treturn w.getChunkAt(x, z);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4Njc1MQ=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjY1NTAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMTo0Njo1OFrOG0lHdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMjoxNDoxMVrOG0llAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NzI1Mw==", "bodyText": "getBlockFace is marked as non-null, but has it always been?", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457787253", "createdAt": "2020-07-21T01:46:58Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "diffHunk": "@@ -673,9 +672,7 @@ public Block get(final PlayerInteractEvent e) {\n \t\t\t@Override\n \t\t\t@Nullable\n \t\t\tpublic Direction get(final PlayerInteractEvent e) {\n-\t\t\t\tif (e.getBlockFace() != null)\n-\t\t\t\t\treturn new Direction(new double[] {e.getBlockFace().getModX(), e.getBlockFace().getModY(), e.getBlockFace().getModZ()});\n-\t\t\t\treturn Direction.ZERO; // Same as 'BlockFace.SELF' or literal 'at'\n+\t\t\t\treturn new Direction(new double[] {e.getBlockFace().getModX(), e.getBlockFace().getModY(), e.getBlockFace().getModZ()});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc5NDgxOQ==", "bodyText": "No mention of null here.", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r457794819", "createdAt": "2020-07-21T02:14:11Z", "author": {"login": "Wealthyturtle"}, "path": "src/main/java/ch/njol/skript/classes/data/BukkitEventValues.java", "diffHunk": "@@ -673,9 +672,7 @@ public Block get(final PlayerInteractEvent e) {\n \t\t\t@Override\n \t\t\t@Nullable\n \t\t\tpublic Direction get(final PlayerInteractEvent e) {\n-\t\t\t\tif (e.getBlockFace() != null)\n-\t\t\t\t\treturn new Direction(new double[] {e.getBlockFace().getModX(), e.getBlockFace().getModY(), e.getBlockFace().getModZ()});\n-\t\t\t\treturn Direction.ZERO; // Same as 'BlockFace.SELF' or literal 'at'\n+\t\t\t\treturn new Direction(new double[] {e.getBlockFace().getModX(), e.getBlockFace().getModY(), e.getBlockFace().getModZ()});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc4NzI1Mw=="}, "originalCommit": {"oid": "0125583029f41e15c0b11b2b83e6294d1a0a1578"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM4NzcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprEntities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MDoxMVrOG5zVuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MDoxMVrOG5zVuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MzE2MA==", "bodyText": "This annotation should be after the other ones", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r463263160", "createdAt": "2020-07-30T20:50:11Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprEntities.java", "diffHunk": "@@ -135,6 +135,7 @@ public boolean isLoopOf(String s) {\n \t\treturn false;\n \t}\n \n+\t@SuppressWarnings(\"null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "043f4ee7817faf26ee4b63816b4b66068985d6e0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM4OTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/events/EvtResourcePackResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MDozNlrOG5zWkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MDozNlrOG5zWkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MzM3OQ==", "bodyText": "Should be after override", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r463263379", "createdAt": "2020-07-30T20:50:36Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/events/EvtResourcePackResponse.java", "diffHunk": "@@ -61,6 +61,7 @@ public boolean init(final Literal<?>[] args, final int matchedPattern, final Par\n \t\treturn true;\n \t}\n \n+\t@SuppressWarnings(\"null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "043f4ee7817faf26ee4b63816b4b66068985d6e0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM4OTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/effects/EffPlayerVisibility.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MDo1MlrOG5zXHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo1MDo1MlrOG5zXHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MzUxOA==", "bodyText": "This one too ;)", "url": "https://github.com/SkriptLang/Skript/pull/3178#discussion_r463263518", "createdAt": "2020-07-30T20:50:52Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/effects/EffPlayerVisibility.java", "diffHunk": "@@ -74,6 +78,7 @@ public boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelaye\n \t\treturn true;\n \t}\n \n+    @SuppressWarnings(\"null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "043f4ee7817faf26ee4b63816b4b66068985d6e0"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1068, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}