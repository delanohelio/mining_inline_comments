{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Mzg0ODY1", "number": 3204, "title": "Create ExprArrowCriticalState.java", "bodyText": "Description\n\n\nTarget Minecraft Versions: any \nRequirements: none\nRelated Issues: none", "createdAt": "2020-07-24T16:42:10Z", "url": "https://github.com/SkriptLang/Skript/pull/3204", "merged": true, "mergeCommit": {"oid": "855b822d47558ea4f34ff719d517c3e9a7520190"}, "closed": true, "closedAt": "2020-09-29T22:14:05Z", "author": {"login": "DeltaRays"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4GzXzgH2gAyNDU2Mzg0ODY1OjAyZDUzZGI5NTQzNjUwYzViNTMyNThiODhlNGJjZGViNWU5Y2YxMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNvtX-gFqTQ5ODkzMTE5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02d53db9543650c5b53258b88e4bcdeb5e9cf128", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/02d53db9543650c5b53258b88e4bcdeb5e9cf128", "committedDate": "2020-07-24T16:41:23Z", "message": "Create ExprArrowCriticalState.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MDQxMTc3", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-455041177", "createdAt": "2020-07-24T16:53:59Z", "commit": {"oid": "02d53db9543650c5b53258b88e4bcdeb5e9cf128"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo1Mzo1OVrOG22w4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo1ODozOFrOG226RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3MzUzNw==", "bodyText": "You accidentally put 'mode state'", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r460173537", "createdAt": "2020-07-24T16:53:59Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowCriticalState.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Entity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Critical State\")\n+@Description(\"An arrow's critical state.\")\n+@Examples(\"set critical mode state of last shot arrow to true\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02d53db9543650c5b53258b88e4bcdeb5e9cf128"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3NTI2MA==", "bodyText": "Instead of having two loops, you might be able to it with just one (e.g)\nboolean state = delta != null ? (Boolean) delta[0] : false;", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r460175260", "createdAt": "2020-07-24T16:57:21Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowCriticalState.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Entity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Critical State\")\n+@Description(\"An arrow's critical state.\")\n+@Examples(\"set critical mode state of last shot arrow to true\")\n+public class ExprArrowCriticalState extends SimplePropertyExpression<Entity, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowCriticalState.class, Boolean.class, \"[the] critical arrow (state|ability|mode)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Entity arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).isCritical() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null || delta.length < 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02d53db9543650c5b53258b88e4bcdeb5e9cf128"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE3NTk0MA==", "bodyText": "Move if check onto a separate line \ud83d\ude42", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r460175940", "createdAt": "2020-07-24T16:58:38Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowCriticalState.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Entity;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Critical State\")\n+@Description(\"An arrow's critical state.\")\n+@Examples(\"set critical mode state of last shot arrow to true\")\n+public class ExprArrowCriticalState extends SimplePropertyExpression<Entity, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowCriticalState.class, Boolean.class, \"[the] critical arrow (state|ability|mode)\", \"entities\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Entity arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).isCritical() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null || delta.length < 1) {\n+\t\t\tfor (Entity entity : getExpr().getAll(e)) {\n+\t\t\t\tif (entity instanceof Arrow) ((Arrow) entity).setCritical(false);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tfor (Entity entity : getExpr().getAll(e)) {\n+\t\t\t\tif (entity instanceof Arrow) ((Arrow) entity).setCritical((Boolean) delta[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02d53db9543650c5b53258b88e4bcdeb5e9cf128"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "535d181296fefb12d9f054108bca338db8759c7b", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/535d181296fefb12d9f054108bca338db8759c7b", "committedDate": "2020-07-24T18:01:46Z", "message": "Fixed the critical state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b587668a2070a15553cc8a720a3ecedf147aa5d", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/5b587668a2070a15553cc8a720a3ecedf147aa5d", "committedDate": "2020-07-24T18:05:35Z", "message": "Updated the example and added @Since(\"INSERT VERSION\")"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e11c5f092f81f58999ea1e6ee8567b963c54f52", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/6e11c5f092f81f58999ea1e6ee8567b963c54f52", "committedDate": "2020-07-24T18:45:12Z", "message": "Added support for tridents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9df4783df2fc044655f88000b38c6b1c9fb5ced", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/a9df4783df2fc044655f88000b38c6b1c9fb5ced", "committedDate": "2020-07-24T18:47:38Z", "message": "Changed a few names from Arrow to Projectile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0de4513195290d921d5b27664b15577ccfdcbaa6", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/0de4513195290d921d5b27664b15577ccfdcbaa6", "committedDate": "2020-07-24T20:31:49Z", "message": "Formatted the lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fe8ef855b40a84a36d1a6977ff239789ed2bfcb", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/5fe8ef855b40a84a36d1a6977ff239789ed2bfcb", "committedDate": "2020-07-25T18:07:41Z", "message": "Merge branch 'master' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edc7279946b642cea0f96d490c63c4a6fe96215d", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/edc7279946b642cea0f96d490c63c4a6fe96215d", "committedDate": "2020-07-25T19:22:44Z", "message": "Merge remote-tracking branch 'origin/ArrowCriticalState' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41b7ad499658d67f3504ac1c00700865b0b42d59", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/41b7ad499658d67f3504ac1c00700865b0b42d59", "committedDate": "2020-07-25T19:28:34Z", "message": "Began working on ProjectileIsCritical"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d616ad6caf3a155a5984fdde7df5afa2aa794e02", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/d616ad6caf3a155a5984fdde7df5afa2aa794e02", "committedDate": "2020-07-25T19:31:15Z", "message": "Removed is critical (is it worth adding)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29d3aed51f2c9fab7f644741a8073d0325d181d8", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/29d3aed51f2c9fab7f644741a8073d0325d181d8", "committedDate": "2020-07-26T09:49:50Z", "message": "Merge branch 'master' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0a072f2bc3f778378a1baf2b438b18a87256e01", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/b0a072f2bc3f778378a1baf2b438b18a87256e01", "committedDate": "2020-07-26T09:51:59Z", "message": "Updated the ProjectileCriticalState copyright comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93a1f8e82e41aef7cfd4566826ec8ea2a561adfc", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/93a1f8e82e41aef7cfd4566826ec8ea2a561adfc", "committedDate": "2020-07-26T09:52:18Z", "message": "Merge remote-tracking branch 'origin/ArrowCriticalState' into ArrowCriticalState"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzM3ODkw", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-458737890", "createdAt": "2020-07-30T20:37:09Z", "commit": {"oid": "93a1f8e82e41aef7cfd4566826ec8ea2a561adfc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNzowOVrOG5y8Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDozNzoxOFrOG5y8Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NjU4Ng==", "bodyText": "Accident empty line ;)", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r463256586", "createdAt": "2020-07-30T20:37:09Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileCriticalState.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Critical State\")\n+@Description(\"A projectile's critical state. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile critical mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileCriticalState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileCriticalState.class, Boolean.class, \"[the] (projectile|arrow) critical (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile arrow) {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a1f8e82e41aef7cfd4566826ec8ea2a561adfc"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NjY0Mw==", "bodyText": "should be a constant", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r463256643", "createdAt": "2020-07-30T20:37:18Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileCriticalState.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Critical State\")\n+@Description(\"A projectile's critical state. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile critical mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileCriticalState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileCriticalState.class, Boolean.class, \"[the] (projectile|arrow) critical (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93a1f8e82e41aef7cfd4566826ec8ea2a561adfc"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9254be2a0d9b5e46748b33a44bfae342dfff973", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/c9254be2a0d9b5e46748b33a44bfae342dfff973", "committedDate": "2020-07-31T11:13:54Z", "message": "Merge branch 'master' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd8a62445023f23dc106394f67a148cbc1f38b4", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/8fd8a62445023f23dc106394f67a148cbc1f38b4", "committedDate": "2020-07-31T11:14:45Z", "message": "Updated everything (thanks apickledwalrus)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c2b5113d377abee3d5f0b76f27e7e8fa0ffaecf", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/5c2b5113d377abee3d5f0b76f27e7e8fa0ffaecf", "committedDate": "2020-07-31T11:15:44Z", "message": "Merge remote-tracking branch 'origin/ArrowCriticalState' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d45eb9916ed1f0ca3699e9c15e0fd6fc3281428b", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/d45eb9916ed1f0ca3699e9c15e0fd6fc3281428b", "committedDate": "2020-08-02T16:24:35Z", "message": "Merge branch 'master' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1a1cc70cd7f3a5227bed982f37298c153837601", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/b1a1cc70cd7f3a5227bed982f37298c153837601", "committedDate": "2020-09-08T18:46:03Z", "message": "Merge branch 'master' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4c982d16ac9b5f6b29e69cf5e82c411daf6e3e7", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/e4c982d16ac9b5f6b29e69cf5e82c411daf6e3e7", "committedDate": "2020-09-26T09:55:31Z", "message": "Merge branch 'master' into ArrowCriticalState"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDIzOTA2", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-497023906", "createdAt": "2020-09-26T18:49:04Z", "commit": {"oid": "e4c982d16ac9b5f6b29e69cf5e82c411daf6e3e7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0OTowNFrOHYh9tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0OTowNFrOHYh9tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDM0MQ==", "bodyText": "You should have curly braces on this else if statement IMO", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r495484341", "createdAt": "2020-09-26T18:49:04Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileCriticalState.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Critical State\")\n+@Description(\"A projectile's critical state. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile critical mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileCriticalState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tprivate static final boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileCriticalState.class, Boolean.class, \"[the] (projectile|arrow) critical (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).isCritical() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).isCritical() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tboolean state = delta != null ? (Boolean) delta[0] : false;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tif (entity instanceof AbstractArrow)\n+\t\t\t\t\t((AbstractArrow) entity).setCritical(state);\n+\t\t\t} else if (entity instanceof Arrow)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4c982d16ac9b5f6b29e69cf5e82c411daf6e3e7"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1ea16ca5e2b9d28a48fa2f3a0ca027550668971", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/b1ea16ca5e2b9d28a48fa2f3a0ca027550668971", "committedDate": "2020-09-26T19:07:41Z", "message": "Default case :sunglasses: (Curly braces)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDM2MDEz", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-497036013", "createdAt": "2020-09-26T22:51:11Z", "commit": {"oid": "b1ea16ca5e2b9d28a48fa2f3a0ca027550668971"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjo1MToxMVrOHYjHtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjo1MToxMVrOHYjHtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMzI4Nw==", "bodyText": "You shouldn't do anything if delta is null. I missed that in my original review.", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r495503287", "createdAt": "2020-09-26T22:51:11Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileCriticalState.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Critical State\")\n+@Description(\"A projectile's critical state. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile critical mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileCriticalState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tprivate static final boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileCriticalState.class, Boolean.class, \"[the] (projectile|arrow) critical (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).isCritical() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).isCritical() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tboolean state = delta != null ? (Boolean) delta[0] : false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1ea16ca5e2b9d28a48fa2f3a0ca027550668971"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42f6f553c0ed27411da1f2999bc01e4016bdb5de", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/42f6f553c0ed27411da1f2999bc01e4016bdb5de", "committedDate": "2020-09-27T04:41:39Z", "message": "Update ExprProjectileCriticalState.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDk5MTQw", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-497099140", "createdAt": "2020-09-27T18:02:31Z", "commit": {"oid": "42f6f553c0ed27411da1f2999bc01e4016bdb5de"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MTAzMjUy", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-497103252", "createdAt": "2020-09-27T19:06:47Z", "commit": {"oid": "42f6f553c0ed27411da1f2999bc01e4016bdb5de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxOTowNjo0OFrOHYpTDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxOTowNjo0OFrOHYpTDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTYwNDQ5NA==", "bodyText": "can't this all be one line? if (abstractArrowExists && entity instanceof AbstractArrow)", "url": "https://github.com/SkriptLang/Skript/pull/3204#discussion_r495604494", "createdAt": "2020-09-27T19:06:48Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileCriticalState.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Critical State\")\n+@Description(\"A projectile's critical state. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile critical mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileCriticalState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tprivate static final boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileCriticalState.class, Boolean.class, \"[the] (projectile|arrow) critical (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).isCritical() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).isCritical() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tif (delta == null) return;\n+\t\tboolean state = (Boolean) delta[0];\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42f6f553c0ed27411da1f2999bc01e4016bdb5de"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9030cfa95a57f3a89a1967e7b2daeb8524df2bd8", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/9030cfa95a57f3a89a1967e7b2daeb8524df2bd8", "committedDate": "2020-09-28T10:21:03Z", "message": "Update ExprProjectileCriticalState.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NDY0NTE1", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-497464515", "createdAt": "2020-09-28T12:34:13Z", "commit": {"oid": "9030cfa95a57f3a89a1967e7b2daeb8524df2bd8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTk4OTA2", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-497998906", "createdAt": "2020-09-29T01:20:32Z", "commit": {"oid": "9030cfa95a57f3a89a1967e7b2daeb8524df2bd8"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5101b62ef8cf33ec2438957ddb7c269da7a7e2e2", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/5101b62ef8cf33ec2438957ddb7c269da7a7e2e2", "committedDate": "2020-09-29T22:06:20Z", "message": "Merge branch 'master' into ArrowCriticalState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ae6e2c305949cab283dca20a7f689faa7c6dd32", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/4ae6e2c305949cab283dca20a7f689faa7c6dd32", "committedDate": "2020-09-29T22:06:45Z", "message": "Update copyright header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69567cff1641b62b5d83b17075d19d9bd9548b5b", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/69567cff1641b62b5d83b17075d19d9bd9548b5b", "committedDate": "2020-09-29T22:07:29Z", "message": "Merge branch 'dev-2.5' into ArrowCriticalState"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTMxMTky", "url": "https://github.com/SkriptLang/Skript/pull/3204#pullrequestreview-498931192", "createdAt": "2020-09-29T22:13:21Z", "commit": {"oid": "69567cff1641b62b5d83b17075d19d9bd9548b5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3071, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}