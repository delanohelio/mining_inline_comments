{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDI0NTMx", "number": 3205, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozODoxMlrOER7Vwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjo0OTo0MlrOEnyEIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjMzNDc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozODoxMlrOG253rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxMDoxMzozOFrOG3D-DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA==", "bodyText": "((Long) delta[0]).intValue()\nJust cast the object to an integer ?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460224430", "createdAt": "2020-07-24T18:38:12Z", "author": {"login": "Matocolotoe"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNTc3Nw==", "bodyText": "You want to cast it to a Number, not a Long\nAlso, what if I set the strength to -10? Does that work? Sometimes IllegalArgumentExceptions will be thrown for numbers out of range, so please check that if you can \ud83d\ude42", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460225777", "createdAt": "2020-07-24T18:41:02Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMTMzNQ==", "bodyText": "It told me it couldn't cast a Long to an Integer", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460231335", "createdAt": "2020-07-24T18:53:31Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzMTM5OQ==", "bodyText": "(to Matocolotoe)", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460231399", "createdAt": "2020-07-24T18:53:41Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0ODU5Nw==", "bodyText": "@DeltaRays I was talking about delta[0]", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460248597", "createdAt": "2020-07-24T19:31:34Z", "author": {"login": "Matocolotoe"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0OTIzMw==", "bodyText": "Yeah, so was I", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460249233", "createdAt": "2020-07-24T19:32:54Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI5NjIwMA==", "bodyText": "?????", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460296200", "createdAt": "2020-07-24T21:28:54Z", "author": {"login": "Matocolotoe"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NTk3NA==", "bodyText": "When I casted delta[0] to an integer it told me it couldn\u2019t cast a long to an integer. Don\u2019t worry, I\u2019ve fixed it", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460375974", "createdAt": "2020-07-25T07:15:59Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4OTkwMQ==", "bodyText": "Of course but I'm talking about the original object... Nevermind.", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460389901", "createdAt": "2020-07-25T10:13:38Z", "author": {"login": "Matocolotoe"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA=="}, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjM5NTU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1OTo0MlrOG26drA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1OTo0MlrOG26drA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNDE1Ng==", "bodyText": "random white space? \ud83d\ude33", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460234156", "createdAt": "2020-07-24T18:59:42Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Knockback Strength\")\n+@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjM5OTU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOTowMDo1NlrOG26gNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOTowMDo1NlrOG26gNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNDgwNA==", "bodyText": "You should cast to Number, not Long \ud83d\ude42\nAlso, how are values < 0 handled? Do they work?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460234804", "createdAt": "2020-07-24T19:00:56Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Knockback Strength\")\n+@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\t\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjQ2MjMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOToyMjo1OFrOG27G1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOToyMjo1OFrOG27G1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDY5NA==", "bodyText": "You might be better off checking if strength < 0 and just not doing anything, but that\u2019s up for debate: should setting it to a negative value set it to no strength? Personally I don\u2019t think it should do anything, but others may disagree.", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460244694", "createdAt": "2020-07-24T19:22:58Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjQ2MzQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOToyMzoyMlrOG27HlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOToyNjo0MVrOG27NgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDg4NA==", "bodyText": "Accidental debug line left in \ud83d\ude0e", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460244884", "createdAt": "2020-07-24T19:23:22Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tSystem.out.println(entity.getType().name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NjQwMQ==", "bodyText": "oop", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460246401", "createdAt": "2020-07-24T19:26:41Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tSystem.out.println(entity.getType().name());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDg4NA=="}, "originalCommit": {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjg3NjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjowOTowNlrOG2_BJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjowOTowNlrOG2_BJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwODc3Mg==", "bodyText": "This should be a constant", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460308772", "createdAt": "2020-07-24T22:09:06Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjkwMzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoyMjo0N1rOG2_Qeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoyMjo0N1rOG2_Qeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjY5OA==", "bodyText": "Always use Expression#getArray over getAll", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460312698", "createdAt": "2020-07-24T22:22:47Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjkwOTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoyNjowMlrOG2_T8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoyNjowMlrOG2_T8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzU4Nw==", "bodyText": "Why is arrow between parenthesis?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460313587", "createdAt": "2020-07-24T22:26:02Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjkxMDI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoyNjo0MFrOG2_Uow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNzoxNzowMVrOG3DH9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzc2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Name(\"Arrow Knockback Strength\")\n          \n          \n            \n            @Name(\"Projectile Knockback Strength\")", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460313763", "createdAt": "2020-07-24T22:26:40Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NjA1Mw==", "bodyText": "", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460376053", "createdAt": "2020-07-25T07:17:01Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzc2Mw=="}, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjkyNDU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNDozOFrOG2_dBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNzoxNzoxOFrOG3DICg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNTkxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Description(\"An arrow's knockback strength.\")\n          \n          \n            \n            @Description(\"The knockback strength of projectiles considered arrows (i.e.: tridents as well).\")", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460315911", "createdAt": "2020-07-24T22:34:38Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3NjA3NA==", "bodyText": "", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460376074", "createdAt": "2020-07-25T07:17:18Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNTkxMQ=="}, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTM0MjgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0NzozOFrOHYh9Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0NzozOFrOHYh9Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDI1OA==", "bodyText": "Default case \ud83d\ude0e", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495484258", "createdAt": "2020-09-26T18:47:38Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Number) delta[0]).intValue() : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = abstractArrow.getKnockbackStrength() - strength;\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tabstractArrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = arrow.getKnockbackStrength() - strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tarrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = abstractArrow.getKnockbackStrength() + strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tabstractArrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = arrow.getKnockbackStrength() + strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tarrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\tif (abstractArrowExists) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setKnockbackStrength(strength);\n+\t\t\t\t\t} else if (entity instanceof Arrow) {\n+\t\t\t\t\t\t((Arrow) entity).setKnockbackStrength(strength);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbreak;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c281d9770574fc0cc208c02e20ab7b4506fd5afe"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTM0MzE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0ODoyMlrOHYh9kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0ODoyMlrOHYh9kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDMwNw==", "bodyText": "Maybe use a switch statement here?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495484307", "createdAt": "2020-09-26T18:48:22Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c281d9770574fc0cc208c02e20ab7b4506fd5afe"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTUwMTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjo0OTo0MlrOHYjHVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjo0OTo0MlrOHYjHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMzE4OA==", "bodyText": "Maybe not the last thing after all haha. These if and else statements should have curly braces.", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495503188", "createdAt": "2020-09-26T22:49:42Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase RESET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Number) delta[0]).intValue() : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7f69588d8d76f7e39b708b62853d6d218c038ad"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1074, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}