{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MDM5OTAz", "number": 3558, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NToyMVrOE9Wlww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NTozNlrOE9WmLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzY4NzA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/localization/Language.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NToyMVrOH5_-0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToyOToyNVrOH6BPBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3OTE1Mw==", "bodyText": "return should be on its own line", "url": "https://github.com/SkriptLang/Skript/pull/3558#discussion_r530579153", "createdAt": "2020-11-25T18:45:21Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/localization/Language.java", "diffHunk": "@@ -62,6 +62,32 @@\n \t */\n \tprivate static String name = \"english\";\n \t\n+\t/**\n+\t * Get if Skript uses the Localized language instead of English.\n+\t * @return True if Skript uses the Localized language elements, false otherwise\n+\t */\n+\tpublic static boolean isUsingLocalizedLanguage() {\n+\t\treturn useLocal;\n+\t}\n+\t\n+\t/**\n+\t * Get elements of the English language of Skript syntax.\n+\t * @return A copy of all the elements of the English language\n+\t */\n+\tpublic static HashMap<String, String> getEnglishLanguage() {\n+\t\treturn new HashMap<>(english);\n+\t}\n+\t\n+\t/**\n+\t * Get elements of the Localized language of Skript syntax.\n+\t * @return A copy of all the elements of the Localized language\n+\t */\n+\t@Nullable\n+\tpublic static HashMap<String, String> getLocalized() {\n+\t\tif (localized != null) return new HashMap<>(localized);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bcd36a2ba65399c857c3cde1fcdcaf08399914e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5OTY4NA==", "bodyText": "Fixed this in abb07d1.", "url": "https://github.com/SkriptLang/Skript/pull/3558#discussion_r530599684", "createdAt": "2020-11-25T19:29:25Z", "author": {"login": "NickAcPT"}, "path": "src/main/java/ch/njol/skript/localization/Language.java", "diffHunk": "@@ -62,6 +62,32 @@\n \t */\n \tprivate static String name = \"english\";\n \t\n+\t/**\n+\t * Get if Skript uses the Localized language instead of English.\n+\t * @return True if Skript uses the Localized language elements, false otherwise\n+\t */\n+\tpublic static boolean isUsingLocalizedLanguage() {\n+\t\treturn useLocal;\n+\t}\n+\t\n+\t/**\n+\t * Get elements of the English language of Skript syntax.\n+\t * @return A copy of all the elements of the English language\n+\t */\n+\tpublic static HashMap<String, String> getEnglishLanguage() {\n+\t\treturn new HashMap<>(english);\n+\t}\n+\t\n+\t/**\n+\t * Get elements of the Localized language of Skript syntax.\n+\t * @return A copy of all the elements of the Localized language\n+\t */\n+\t@Nullable\n+\tpublic static HashMap<String, String> getLocalized() {\n+\t\tif (localized != null) return new HashMap<>(localized);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3OTE1Mw=="}, "originalCommit": {"oid": "5bcd36a2ba65399c857c3cde1fcdcaf08399914e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzY4ODEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NTozNlrOH5__bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToyOToxOVrOH6BO0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3OTMxMQ==", "bodyText": "same as above", "url": "https://github.com/SkriptLang/Skript/pull/3558#discussion_r530579311", "createdAt": "2020-11-25T18:45:36Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "diffHunk": "@@ -56,12 +58,73 @@ public EventValueInfo(Class<E> event, Class<T> c, Getter<T, E> getter, @Nullable\n \t\t\tthis.excludes = excludes;\n \t\t\tthis.excludeErrorMessage = excludeErrorMessage;\n \t\t}\n+\t\t\n+\t\t/**\n+\t\t * Get the class that represents the Event.\n+\t\t * @return The class of the Event associated with this event value\n+\t\t */\n+\t\tpublic Class<E> getEventClass() {\n+\t\t\treturn event;\n+\t\t}\n+\t\t\n+\t\t/**\n+\t\t * Get the class that represents Value.\n+\t\t * @return The class of the Value associated with this event value\n+\t\t */\n+\t\tpublic Class<T> getValueClass() {\n+\t\t\treturn c;\n+\t\t}\n+\t\t\n+\t\t/**\n+\t\t * Get the classes that represent the excluded for this Event value.\n+\t\t * @return The classes of the Excludes associated with this event value\n+\t\t */\n+\t\t@Nullable\n+\t\t@SuppressWarnings(\"null\")\n+\t\tpublic Class<? extends E>[] getExcludes() {\n+\t\t\tif (excludes != null) return Arrays.copyOf(excludes, excludes.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bcd36a2ba65399c857c3cde1fcdcaf08399914e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5OTYzMg==", "bodyText": "Fixed this in abb07d1.", "url": "https://github.com/SkriptLang/Skript/pull/3558#discussion_r530599632", "createdAt": "2020-11-25T19:29:19Z", "author": {"login": "NickAcPT"}, "path": "src/main/java/ch/njol/skript/registrations/EventValues.java", "diffHunk": "@@ -56,12 +58,73 @@ public EventValueInfo(Class<E> event, Class<T> c, Getter<T, E> getter, @Nullable\n \t\t\tthis.excludes = excludes;\n \t\t\tthis.excludeErrorMessage = excludeErrorMessage;\n \t\t}\n+\t\t\n+\t\t/**\n+\t\t * Get the class that represents the Event.\n+\t\t * @return The class of the Event associated with this event value\n+\t\t */\n+\t\tpublic Class<E> getEventClass() {\n+\t\t\treturn event;\n+\t\t}\n+\t\t\n+\t\t/**\n+\t\t * Get the class that represents Value.\n+\t\t * @return The class of the Value associated with this event value\n+\t\t */\n+\t\tpublic Class<T> getValueClass() {\n+\t\t\treturn c;\n+\t\t}\n+\t\t\n+\t\t/**\n+\t\t * Get the classes that represent the excluded for this Event value.\n+\t\t * @return The classes of the Excludes associated with this event value\n+\t\t */\n+\t\t@Nullable\n+\t\t@SuppressWarnings(\"null\")\n+\t\tpublic Class<? extends E>[] getExcludes() {\n+\t\t\tif (excludes != null) return Arrays.copyOf(excludes, excludes.length);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3OTMxMQ=="}, "originalCommit": {"oid": "5bcd36a2ba65399c857c3cde1fcdcaf08399914e"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 970, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}