{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDc5MDc5", "number": 3431, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NTowMFrOEqHS5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODo1NToxOFrOEqob7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk1MTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NTowMFrOHcJdQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NTowMFrOHcJdQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzEyMA==", "bodyText": "You should import ParseResult directly", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r499277120", "createdAt": "2020-10-04T18:55:00Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.effects;\n+\n+import org.bukkit.Material;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Effect;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Open Book\")\n+@Description(\"Opens a written book to a player.\")\n+@Examples(\"open book player's tool to player\")\n+@Since(\"INSERT VERSION\")\n+public class EffOpenBook extends Effect {\n+\t\n+\tstatic {\n+\t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% to %players%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<ItemType> book;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Player> players;\n+\t\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\t@Override\n+\tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final SkriptParser.ParseResult parseResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b54d25a495603fe0e025232392d957652dfac9df"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk1MjE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NTozMlrOHcJddQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NTozMlrOHcJddQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzE3Mw==", "bodyText": "Nitpicky but could you add a space after here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t}\n          \n          \n            \n            \t}", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r499277173", "createdAt": "2020-10-04T18:55:32Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.effects;\n+\n+import org.bukkit.Material;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Effect;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Open Book\")\n+@Description(\"Opens a written book to a player.\")\n+@Examples(\"open book player's tool to player\")\n+@Since(\"INSERT VERSION\")\n+public class EffOpenBook extends Effect {\n+\t\n+\tstatic {\n+\t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% to %players%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<ItemType> book;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Player> players;\n+\t\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\t@Override\n+\tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final SkriptParser.ParseResult parseResult) {\n+\t\tbook = (Expression<ItemType>) exprs[0];\n+\t\tplayers = (Expression<Player>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tprotected void execute(final Event e) {\n+\t\t@Nullable ItemType itemType = book.getSingle(e);\n+\t\tif (itemType != null && itemType.getMaterial() == Material.WRITTEN_BOOK) {\n+\t\t\t@Nullable ItemStack itemStack = itemType.getRandom();\n+\t\t\tif (itemStack != null) {\n+\t\t\t\tfor (Player player : players.getArray(e)) {\n+\t\t\t\t\tplayer.openBook(itemStack);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\t@Override\n+\tpublic String toString(@Nullable Event e, boolean debug) {\n+\t\treturn \"open book \" + book.toString(e, debug) + \" to \" + players.toString(e, debug);\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b54d25a495603fe0e025232392d957652dfac9df"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk1MjUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NTo1N1rOHcJdpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxODo1NTo1N1rOHcJdpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI3NzIyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% to %players%\");\n          \n          \n            \n            \t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% (to|for) %players%\");", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r499277221", "createdAt": "2020-10-04T18:55:57Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.effects;\n+\n+import org.bukkit.Material;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Effect;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Open Book\")\n+@Description(\"Opens a written book to a player.\")\n+@Examples(\"open book player's tool to player\")\n+@Since(\"INSERT VERSION\")\n+public class EffOpenBook extends Effect {\n+\t\n+\tstatic {\n+\t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% to %players%\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b54d25a495603fe0e025232392d957652dfac9df"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk4NjA4OnYy", "diffSide": "LEFT", "path": ".gitattributes", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0MzowMVrOHcJuuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMDowMTowMFrOHcJ1Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTU5Mw==", "bodyText": "this change isn't related to the pr", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r499281593", "createdAt": "2020-10-04T19:43:01Z", "author": {"login": "Pikachu920"}, "path": ".gitattributes", "diffHunk": "@@ -2,7 +2,7 @@\n         #\n         # Handle line endings automatically for files detected as text\n         # and leave all files detected as binary untouched.\n-        * text=auto", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9903c980a5a3006c277dfbba48cda8e71564ace5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MzIxMQ==", "bodyText": "that could be due to it not being on the 2.5 branch, just updated it, should go away", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r499283211", "createdAt": "2020-10-04T20:01:00Z", "author": {"login": "ShaneBeee"}, "path": ".gitattributes", "diffHunk": "@@ -2,7 +2,7 @@\n         #\n         # Handle line endings automatically for files detected as text\n         # and leave all files detected as binary untouched.\n-        * text=auto", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTU5Mw=="}, "originalCommit": {"oid": "9903c980a5a3006c277dfbba48cda8e71564ace5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNTk4Njg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxOTo0NDoxOVrOHcJvJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQyMDowODo1OFrOHcJ35A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTcwMQ==", "bodyText": "do you need to do the nullable annotations for some reason? we don't really use them in methods", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r499281701", "createdAt": "2020-10-04T19:44:19Z", "author": {"login": "Pikachu920"}, "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.effects;\n+\n+import org.bukkit.Material;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Effect;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Open Book\")\n+@Description(\"Opens a written book to a player.\")\n+@Examples(\"open book player's tool to player\")\n+@Since(\"INSERT VERSION\")\n+public class EffOpenBook extends Effect {\n+\t\n+\tstatic {\n+\t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% (to|for) %players%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<ItemType> book;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Player> players;\n+\t\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\t@Override\n+\tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final ParseResult parseResult) {\n+\t\tbook = (Expression<ItemType>) exprs[0];\n+\t\tplayers = (Expression<Player>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tprotected void execute(final Event e) {\n+\t\t@Nullable ItemType itemType = book.getSingle(e);\n+\t\tif (itemType != null && itemType.getMaterial() == Material.WRITTEN_BOOK) {\n+\t\t\t@Nullable ItemStack itemStack = itemType.getRandom();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9903c980a5a3006c277dfbba48cda8e71564ace5"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4Mzk0MA==", "bodyText": "It had a warning\nExpression 'book.getSingle(e)' might evaluate to null but is assigned to a variable that is annotated with @NotNull", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r499283940", "createdAt": "2020-10-04T20:08:58Z", "author": {"login": "OfficialDonut"}, "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.effects;\n+\n+import org.bukkit.Material;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Effect;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Open Book\")\n+@Description(\"Opens a written book to a player.\")\n+@Examples(\"open book player's tool to player\")\n+@Since(\"INSERT VERSION\")\n+public class EffOpenBook extends Effect {\n+\t\n+\tstatic {\n+\t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% (to|for) %players%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<ItemType> book;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Player> players;\n+\t\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\t@Override\n+\tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final ParseResult parseResult) {\n+\t\tbook = (Expression<ItemType>) exprs[0];\n+\t\tplayers = (Expression<Player>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tprotected void execute(final Event e) {\n+\t\t@Nullable ItemType itemType = book.getSingle(e);\n+\t\tif (itemType != null && itemType.getMaterial() == Material.WRITTEN_BOOK) {\n+\t\t\t@Nullable ItemStack itemStack = itemType.getRandom();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI4MTcwMQ=="}, "originalCommit": {"oid": "9903c980a5a3006c277dfbba48cda8e71564ace5"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTM4MTU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODo1NToxOFrOHc8jWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODo1NToxOFrOHc8jWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDExNDI2Ng==", "bodyText": "In the event a Bukkit material is changed or what not, an alias should be used here instead, here is an example of another class with books doing it:\n\n  \n    \n      Skript/src/main/java/ch/njol/skript/expressions/ExprBookTitle.java\n    \n    \n         Line 45\n      in\n      99af0a1\n    \n    \n    \n    \n\n        \n          \n           private static final ItemType book = Aliases.javaItemType(\"book with text\"); \n        \n    \n  \n\n\n\n  \n    \n      Skript/src/main/java/ch/njol/skript/expressions/ExprBookTitle.java\n    \n    \n        Lines 54 to 59\n      in\n      99af0a1\n    \n    \n    \n    \n\n        \n          \n           public String convert(ItemType item) { \n        \n\n        \n          \n           \tItemStack itemStack = item.getRandom(); \n        \n\n        \n          \n           \tassert itemStack != null; \n        \n\n        \n          \n           \tif (!book.isOfType(itemStack)) \n        \n\n        \n          \n           \t\treturn null; \n        \n\n        \n          \n           \treturn ((BookMeta) itemStack.getItemMeta()).getTitle(); \n        \n    \n  \n\n\nin this case you could use the ItemType#equals method instead before getting the item stack.", "url": "https://github.com/SkriptLang/Skript/pull/3431#discussion_r500114266", "createdAt": "2020-10-06T08:55:18Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/effects/EffOpenBook.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ * Copyright Peter G\u00fcttinger, SkriptLang team and contributors\n+ */\n+package ch.njol.skript.effects;\n+\n+import org.bukkit.Material;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Event;\n+import org.bukkit.inventory.ItemStack;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.aliases.ItemType;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Effect;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Open Book\")\n+@Description(\"Opens a written book to a player.\")\n+@Examples(\"open book player's tool to player\")\n+@Since(\"INSERT VERSION\")\n+public class EffOpenBook extends Effect {\n+\t\n+\tstatic {\n+\t\tSkript.registerEffect(EffOpenBook.class, \"(open|show) book %itemtype% (to|for) %players%\");\n+\t}\n+\t\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<ItemType> book;\n+\t@SuppressWarnings(\"null\")\n+\tprivate Expression<Player> players;\n+\t\n+\t@SuppressWarnings({\"unchecked\", \"null\"})\n+\t@Override\n+\tpublic boolean init(final Expression<?>[] exprs, final int matchedPattern, final Kleenean isDelayed, final ParseResult parseResult) {\n+\t\tbook = (Expression<ItemType>) exprs[0];\n+\t\tplayers = (Expression<Player>) exprs[1];\n+\t\treturn true;\n+\t}\n+\t\n+\t@Override\n+\tprotected void execute(final Event e) {\n+\t\tItemType itemType = book.getSingle(e);\n+\t\tif (itemType != null && itemType.getMaterial() == Material.WRITTEN_BOOK) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aba2db074970a2992c29bfdceb2f9dbe99924b1d"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1032, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}