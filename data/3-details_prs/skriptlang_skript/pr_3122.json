{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTkyNjg5", "number": 3122, "title": "Level Progress Fixes + Floating Point Safety Function", "bodyText": "Description\nFixes the issue with the Level Progress expression causing an exception to occur if a NaN or INF value is passed onto the server. Additionally, this PR also adds 2 new safe() functions into the Math2 util class to make a floating point number \"safe\" by replacing NaN and INF values. Feedback on the documentation for those 2 functions would be good :)\n\nTarget Minecraft Versions:     Any\nRequirements:     None\nRelated Issues:     #2680", "createdAt": "2020-07-10T02:52:15Z", "url": "https://github.com/SkriptLang/Skript/pull/3122", "merged": true, "mergeCommit": {"oid": "6a708a7a45b89d1055646929cf54d06532b91d53"}, "closed": true, "closedAt": "2020-07-10T03:06:38Z", "author": {"login": "Wealthyturtle"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczab8AAH2gAyNDQ3MTkyNjg5OjFmMzJkZjgzOGI1MGRkNmExOWM2YzQ2YjFkZTI5NjJlYzJlODEwY2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczauN7AFqTQ0NjA5MzQwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1f32df838b50dd6a19c6c46b1de2962ec2e810cc", "author": {"user": {"login": "Wealthyturtle", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/1f32df838b50dd6a19c6c46b1de2962ec2e810cc", "committedDate": "2020-07-10T02:44:16Z", "message": "Merge pull request #17 from SkriptLang/master\n\nMerge Upstream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a062b8484493633fef1a62cabbf9e10c5d7ebc1", "author": {"user": {"login": "Wealthyturtle", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/0a062b8484493633fef1a62cabbf9e10c5d7ebc1", "committedDate": "2020-07-10T02:48:26Z", "message": "Safe Math2 Functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7bd3d0bb5e089914524631e206e2777071691f7", "author": {"user": {"login": "Wealthyturtle", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/e7bd3d0bb5e089914524631e206e2777071691f7", "committedDate": "2020-07-10T02:49:24Z", "message": "Safety Check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDkxNjUy", "url": "https://github.com/SkriptLang/Skript/pull/3122#pullrequestreview-446091652", "createdAt": "2020-07-10T02:57:36Z", "commit": {"oid": "e7bd3d0bb5e089914524631e206e2777071691f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjo1NzozNlrOGvoRUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjo1NzozNlrOGvoRUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjA0OA==", "bodyText": "Space after if", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452596048", "createdAt": "2020-07-10T02:57:36Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/util/Math2.java", "diffHunk": "@@ -454,4 +454,30 @@ public static double smoothStep(final double x, final double x1, final double x2\n \t\treturn d * d * (3 - 2 * d);\n \t}\n \t\n+\t/**\n+\t * Guarantees a float is neither NaN nor INF.\n+\t * Useful for situations when safe floats are required.\n+\t * \n+\t * @param f\n+\t * @return 0 if f is NaN or INF, otherwise f\n+\t */\n+\tpublic static float safe(float f) {\n+\t\tif(f != f || Float.isInfinite(f)) //NaN or INF ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7bd3d0bb5e089914524631e206e2777071691f7"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDkxNzAw", "url": "https://github.com/SkriptLang/Skript/pull/3122#pullrequestreview-446091700", "createdAt": "2020-07-10T02:57:47Z", "commit": {"oid": "e7bd3d0bb5e089914524631e206e2777071691f7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjo1Nzo0N1rOGvoRgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjo1Nzo0N1rOGvoRgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjA5Nw==", "bodyText": "Space after if", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452596097", "createdAt": "2020-07-10T02:57:47Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/util/Math2.java", "diffHunk": "@@ -454,4 +454,30 @@ public static double smoothStep(final double x, final double x1, final double x2\n \t\treturn d * d * (3 - 2 * d);\n \t}\n \t\n+\t/**\n+\t * Guarantees a float is neither NaN nor INF.\n+\t * Useful for situations when safe floats are required.\n+\t * \n+\t * @param f\n+\t * @return 0 if f is NaN or INF, otherwise f\n+\t */\n+\tpublic static float safe(float f) {\n+\t\tif(f != f || Float.isInfinite(f)) //NaN or INF \n+\t\t\treturn 0;\n+\t\treturn f;\n+\t}\n+\t\n+\t/**\n+\t * Guarantees a double is neither NaN nor INF.\n+\t * Useful for situations when safe doubles are required.\n+\t * \n+\t * @param d\n+\t * @return 0 if d is NaN or INF, otherwise d\n+\t */\n+\tpublic static double safe(double d) {\n+\t\tif(d != d || Double.isInfinite(d)) //NaN or INF ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7bd3d0bb5e089914524631e206e2777071691f7"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dcf76c102aac12afd4dfb3aa94b8c771c750ceb", "author": {"user": {"login": "Wealthyturtle", "name": null}}, "url": "https://github.com/SkriptLang/Skript/commit/1dcf76c102aac12afd4dfb3aa94b8c771c750ceb", "committedDate": "2020-07-10T02:58:20Z", "message": "Update Math2.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDkyMjE5", "url": "https://github.com/SkriptLang/Skript/pull/3122#pullrequestreview-446092219", "createdAt": "2020-07-10T02:59:45Z", "commit": {"oid": "1dcf76c102aac12afd4dfb3aa94b8c771c750ceb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDkyMzYy", "url": "https://github.com/SkriptLang/Skript/pull/3122#pullrequestreview-446092362", "createdAt": "2020-07-10T03:00:18Z", "commit": {"oid": "1dcf76c102aac12afd4dfb3aa94b8c771c750ceb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzowMDoxOFrOGvoTqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMzowMDoxOFrOGvoTqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NjY1MA==", "bodyText": "don't you have to use the method on the level as well", "url": "https://github.com/SkriptLang/Skript/pull/3122#discussion_r452596650", "createdAt": "2020-07-10T03:00:18Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprLevelProgress.java", "diffHunk": "@@ -101,13 +101,13 @@ public void change(final Event e, final @Nullable Object[] delta, final ChangeMo\n \t\t\t\t\treturn;\r\n \t\t\t}\r\n \t\t\tp.setLevel(Math.max(0, p.getLevel() + (int) Math.floor(c)));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dcf76c102aac12afd4dfb3aa94b8c771c750ceb"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDkzNDAw", "url": "https://github.com/SkriptLang/Skript/pull/3122#pullrequestreview-446093400", "createdAt": "2020-07-10T03:04:14Z", "commit": {"oid": "1dcf76c102aac12afd4dfb3aa94b8c771c750ceb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3038, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}