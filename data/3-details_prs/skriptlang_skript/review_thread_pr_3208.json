{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDY1MDY5", "number": 3208, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowMzo0NFrOER_Pqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODozNTo0MVrOEnxDCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk3NDUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowMzo0NFrOG2_5yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowMzo0NFrOG2_5yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyMzI3Mw==", "bodyText": "Use getArray. Also, you can remove the braces on this for loop", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r460323273", "createdAt": "2020-07-24T23:03:44Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce state of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileBounceState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileBounceState.class, Boolean.class, \"[the] (projectile) bounce (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile projectile) {\n+\t\treturn projectile.doesBounce();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tboolean state = delta != null ? (Boolean) delta[0] : false;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644ac6e247827940dd31115d32666240afc55792"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4NDM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowOToyNVrOG2__HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzowOToyNVrOG2__HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNDYzNg==", "bodyText": "does this default to either true or false to all projectiles, if not, does Spigot/Paper provide a way to get each projectile's default bounce state? If not, reset changer makes little sense", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r460324636", "createdAt": "2020-07-24T23:09:25Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce state of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileBounceState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileBounceState.class, Boolean.class, \"[the] (projectile) bounce (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile projectile) {\n+\t\treturn projectile.doesBounce();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Boolean.class) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644ac6e247827940dd31115d32666240afc55792"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4Nzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMTozMlrOG3ABDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMTozMlrOG3ABDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTEzMw==", "bodyText": "why is projectile on parenthesis?", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r460325133", "createdAt": "2020-07-24T23:11:32Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce state of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileBounceState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileBounceState.class, Boolean.class, \"[the] (projectile) bounce (state|ability|mode)\", \"projectiles\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644ac6e247827940dd31115d32666240afc55792"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Mjk4ODk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMzoxMTo1OVrOG3ABkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNzowODoyMlrOG3GE2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTI2Nw==", "bodyText": "I'd rather the example to be:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\"\\tset projectile bounce state of event-projectile to true\"})\n          \n          \n            \n            \t\"\\tset bounce mode of shot projectile to true\"})", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r460325267", "createdAt": "2020-07-24T23:11:59Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce state of event-projectile to true\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644ac6e247827940dd31115d32666240afc55792"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyNDQxMQ==", "bodyText": "I don't want to remove 'projectile' as something regarding 'bounce' might be used in the future for something other than projectiles", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r460424411", "createdAt": "2020-07-25T17:08:22Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce state of event-projectile to true\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMyNTI2Nw=="}, "originalCommit": {"oid": "644ac6e247827940dd31115d32666240afc55792"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDA0MTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondProjectileCanBounce.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMjozOTo0MFrOG3H2qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQwOTozODo0MVrOG3K9oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ1MzU0Nw==", "bodyText": "This is a property condition, you may as well use the PropertyCondition class for it, with the CAN property type.", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r460453547", "createdAt": "2020-07-25T22:39:40Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/conditions/CondProjectileCanBounce.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Projectile Can Bounce\")\n+@Description(\"Whether or not a projectile can bounce.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tsend \\\"Boing!\\\" to all players if projectile can bounce\"})\n+@Since(\"INSERT VERSION\")\n+public class CondProjectileCanBounce extends Condition {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41f43525724a25e2650f344f9daab6c61fb39a2e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwNDQ4MQ==", "bodyText": "Okay, I'll use that", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r460504481", "createdAt": "2020-07-26T09:38:41Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/conditions/CondProjectileCanBounce.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.conditions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.lang.Condition;\n+import ch.njol.skript.lang.Expression;\n+import ch.njol.skript.lang.SkriptParser.ParseResult;\n+import ch.njol.util.Kleenean;\n+\n+@Name(\"Projectile Can Bounce\")\n+@Description(\"Whether or not a projectile can bounce.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tsend \\\"Boing!\\\" to all players if projectile can bounce\"})\n+@Since(\"INSERT VERSION\")\n+public class CondProjectileCanBounce extends Condition {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ1MzU0Nw=="}, "originalCommit": {"oid": "41f43525724a25e2650f344f9daab6c61fb39a2e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjMxMzM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDoyNjo0M1rOG5yn7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMToxMDo0NFrOG6E2ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1MTQzNw==", "bodyText": "can you add a newline? :)", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r463251437", "createdAt": "2020-07-30T20:26:43Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileBounceState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileBounceState.class, Boolean.class, \"[the] projectile bounce (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile projectile) {\n+\t\treturn projectile.doesBounce();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tboolean state = delta != null ? (Boolean) delta[0] : false;\n+\t\tfor (Projectile entity : getExpr().getArray(e))\n+\t\t\tentity.setBounce(state);\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends Boolean> getReturnType() {\n+\t\treturn Boolean.class;\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"projectile bounce state\";\n+\t}\n+\t\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1221d1eafbbbd585bd253bab584aabe3280d2d3"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzU1MDA5MA==", "bodyText": "Yeah, many of them would benefit from #3216", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r463550090", "createdAt": "2020-07-31T11:10:44Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileBounceState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileBounceState.class, Boolean.class, \"[the] projectile bounce (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile projectile) {\n+\t\treturn projectile.doesBounce();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tboolean state = delta != null ? (Boolean) delta[0] : false;\n+\t\tfor (Projectile entity : getExpr().getArray(e))\n+\t\t\tentity.setBounce(state);\n+\t}\n+\t\n+\t@Override\n+\tpublic Class<? extends Boolean> getReturnType() {\n+\t\treturn Boolean.class;\n+\t}\n+\t\n+\t@Override\n+\tprotected String getPropertyName() {\n+\t\treturn \"projectile bounce state\";\n+\t}\n+\t\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1MTQzNw=="}, "originalCommit": {"oid": "f1221d1eafbbbd585bd253bab584aabe3280d2d3"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTMzNTE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODozNTo0MVrOHYh5qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxOTowMDoyM1rOHYiBxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzMwNQ==", "bodyText": "I don't think you should do anything if delta is null", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r495483305", "createdAt": "2020-09-26T18:35:41Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileBounceState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileBounceState.class, Boolean.class, \"[the] projectile bounce (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile projectile) {\n+\t\treturn projectile.doesBounce();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tboolean state = delta != null ? (Boolean) delta[0] : false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9814d3fa09429512240803ac222910df69c577c"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NTM4MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/SkriptLang/Skript/pull/3208#discussion_r495485380", "createdAt": "2020-09-26T19:00:23Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileBounceState.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ *   This file is part of Skript.\n+ *\n+ *  Skript is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  Skript is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Bounce State\")\n+@Description(\"A projectile's bounce state.\")\n+@Examples({\"on projectile hit:\",\n+\t\"\\tset projectile bounce mode of event-projectile to true\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileBounceState extends SimplePropertyExpression<Projectile, Boolean> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileBounceState.class, Boolean.class, \"[the] projectile bounce (state|ability|mode)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Boolean convert(Projectile projectile) {\n+\t\treturn projectile.doesBounce();\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tboolean state = delta != null ? (Boolean) delta[0] : false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzMwNQ=="}, "originalCommit": {"oid": "a9814d3fa09429512240803ac222910df69c577c"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1078, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}