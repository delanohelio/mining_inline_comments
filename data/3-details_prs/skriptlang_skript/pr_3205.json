{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDI0NTMx", "number": 3205, "title": "Added ExprArrowKnockbackStrength", "bodyText": "Target Minecraft Versions: any \nRequirements: none \nRelated Issues: none", "createdAt": "2020-07-24T18:18:30Z", "url": "https://github.com/SkriptLang/Skript/pull/3205", "merged": true, "mergeCommit": {"oid": "c71a6e3dfd7a367240ada73c6a65128917c1cf44"}, "closed": true, "closedAt": "2020-09-29T22:26:16Z", "author": {"login": "DeltaRays"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4ILuGgH2gAyNDU2NDI0NTMxOmIxYmI2ZDBkOTUzMGM3MzM5YTRiNzBkOWFhMmQxNzQ2ZDg1MWU3NjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNv3z8gFqTQ5ODk0ODA4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/b1bb6d0d9530c7339a4b70d9aa2d1746d851e762", "committedDate": "2020-07-24T18:17:53Z", "message": "Added ExprArrowKnockbackStrength"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTA1NzM2", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-455105736", "createdAt": "2020-07-24T18:38:11Z", "commit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozODoxMlrOG253rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozODoxMlrOG253rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyNDQzMA==", "bodyText": "((Long) delta[0]).intValue()\nJust cast the object to an integer ?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460224430", "createdAt": "2020-07-24T18:38:12Z", "author": {"login": "Matocolotoe"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback (strength|force)\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint state = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1bb6d0d9530c7339a4b70d9aa2d1746d851e762"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/0772e87504b2f4f529bb67eca2bc111ceb9a1fd8", "committedDate": "2020-07-24T18:51:41Z", "message": "Updated a few names and added trident support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTE4MDM5", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-455118039", "createdAt": "2020-07-24T18:59:41Z", "commit": {"oid": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODo1OTo0MlrOG26drA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOTowMDo1NlrOG26gNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNDE1Ng==", "bodyText": "random white space? \ud83d\ude33", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460234156", "createdAt": "2020-07-24T18:59:42Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Knockback Strength\")\n+@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIzNDgwNA==", "bodyText": "You should cast to Number, not Long \ud83d\ude42\nAlso, how are values < 0 handled? Do they work?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460234804", "createdAt": "2020-07-24T19:00:56Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprProjectileKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Projectile Knockback Strength\")\n+@Description(\"A projectile's knockback strength. The only currently accepted projectiles are arrows and tridents.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset projectile knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprProjectileKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprProjectileKnockbackStrength.class, Number.class, \"[the] (projectile|arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\t\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Boolean.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Long) delta[0]).intValue() : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0772e87504b2f4f529bb67eca2bc111ceb9a1fd8"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f08356ad8d8519bd136a5c462b607c558444085a", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/f08356ad8d8519bd136a5c462b607c558444085a", "committedDate": "2020-07-24T19:03:17Z", "message": "Knockback strength doesn't work for tridents :-/\nYou're right, values < 0 return errors so I used Math.max"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09", "committedDate": "2020-07-24T19:04:20Z", "message": "Changed the file name, too"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTMxMzI4", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-455131328", "createdAt": "2020-07-24T19:22:57Z", "commit": {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOToyMjo1OFrOG27G1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxOToyMzoyMlrOG27HlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDY5NA==", "bodyText": "You might be better off checking if strength < 0 and just not doing anything, but that\u2019s up for debate: should setting it to a negative value set it to no strength? Personally I don\u2019t think it should do anything, but others may disagree.", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460244694", "createdAt": "2020-07-24T19:22:58Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI0NDg4NA==", "bodyText": "Accidental debug line left in \ud83d\ude0e", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460244884", "createdAt": "2020-07-24T19:23:22Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {\n+\t\t\tif (abstractArrowExists) {\n+\t\t\t\tSystem.out.println(entity.getType().name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42cfb876ec2a2e690406ea7bbc4bb0bf5318f09"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/c8016aaf1a1b3d25cd709d2903bcf152273cb82c", "committedDate": "2020-07-24T19:35:02Z", "message": "removed the debug line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b8c8459bfec2952b53bcbdce20f7776376a1729", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/4b8c8459bfec2952b53bcbdce20f7776376a1729", "committedDate": "2020-07-24T20:32:19Z", "message": "Formatted the lines"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjEwNDYy", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-455210462", "createdAt": "2020-07-24T22:09:06Z", "commit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "state": "DISMISSED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjowOTowNlrOG2_BJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNDozOFrOG2_dBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwODc3Mg==", "bodyText": "This should be a constant", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460308772", "createdAt": "2020-07-24T22:09:06Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjY5OA==", "bodyText": "Always use Expression#getArray over getAll", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460312698", "createdAt": "2020-07-24T22:22:47Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\tboolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.SET || mode == ChangeMode.RESET) ? CollectionUtils.array(Number.class) : null;\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? Math.max(((Number) delta[0]).intValue(), 0) : 1;\n+\t\tfor (Projectile entity : getExpr().getAll(e)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzU4Nw==", "bodyText": "Why is arrow between parenthesis?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460313587", "createdAt": "2020-07-24T22:26:02Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] (arrow) knockback strength\", \"projectiles\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMzc2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Name(\"Arrow Knockback Strength\")\n          \n          \n            \n            @Name(\"Projectile Knockback Strength\")", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460313763", "createdAt": "2020-07-24T22:26:40Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNTkxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Description(\"An arrow's knockback strength.\")\n          \n          \n            \n            @Description(\"The knockback strength of projectiles considered arrows (i.e.: tridents as well).\")", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r460315911", "createdAt": "2020-07-24T22:34:38Z", "author": {"login": "FranKusmiruk"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8016aaf1a1b3d25cd709d2903bcf152273cb82c"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1df0f1a0ea934833b9cbabe46cf22210b836a856", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/1df0f1a0ea934833b9cbabe46cf22210b836a856", "committedDate": "2020-07-25T07:18:58Z", "message": "Merge branch 'master' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34063dba93a92aa8c395e2445be6ee355f651b43", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/34063dba93a92aa8c395e2445be6ee355f651b43", "committedDate": "2020-07-25T18:16:03Z", "message": "Merge remote-tracking branch 'origin/ArrowKnockbackStrength' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cf60dd9305e27f96921deb3780391e599ce1bf0", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/1cf60dd9305e27f96921deb3780391e599ce1bf0", "committedDate": "2020-07-25T18:19:20Z", "message": "Fixed copyright issues and added REMOVE and ADD to ExprArrowKnockbackStrength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b6bc44db1ec0220ccb70606fbf299e3f0932cc9", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/7b6bc44db1ec0220ccb70606fbf299e3f0932cc9", "committedDate": "2020-07-26T09:49:35Z", "message": "Merge branch 'master' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6663814472504e1158bc49cdc38731fd23191c6e", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/6663814472504e1158bc49cdc38731fd23191c6e", "committedDate": "2020-08-02T16:24:09Z", "message": "Merge branch 'master' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cff79bc5b126b9699c92687e77bb9fb3d3825338", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/cff79bc5b126b9699c92687e77bb9fb3d3825338", "committedDate": "2020-09-08T18:42:40Z", "message": "Merge branch 'master' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb092a704a7d58366d1e552754a68e67423d9986", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/eb092a704a7d58366d1e552754a68e67423d9986", "committedDate": "2020-09-08T18:45:31Z", "message": "Removed Math.max to allow removing negative values and made setting the damage to a negative value not do anything"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c281d9770574fc0cc208c02e20ab7b4506fd5afe", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/c281d9770574fc0cc208c02e20ab7b4506fd5afe", "committedDate": "2020-09-26T09:55:05Z", "message": "Merge branch 'master' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDIzODM3", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-497023837", "createdAt": "2020-09-26T18:47:38Z", "commit": {"oid": "c281d9770574fc0cc208c02e20ab7b4506fd5afe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0NzozOFrOHYh9Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxODo0ODoyMlrOHYh9kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDI1OA==", "bodyText": "Default case \ud83d\ude0e", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495484258", "createdAt": "2020-09-26T18:47:38Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Number) delta[0]).intValue() : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = abstractArrow.getKnockbackStrength() - strength;\n+\t\t\t\t\t\t\tif (dmg < 0) dmg = 0;\n+\t\t\t\t\t\t\tabstractArrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = arrow.getKnockbackStrength() - strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tarrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase ADD:\n+\t\t\t\tif (abstractArrowExists)\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) {\n+\t\t\t\t\t\t\tAbstractArrow abstractArrow = (AbstractArrow) entity;\n+\t\t\t\t\t\t\tint dmg = abstractArrow.getKnockbackStrength() + strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tabstractArrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\t\tif (entity instanceof Arrow) {\n+\t\t\t\t\t\t\tArrow arrow = (Arrow) entity;\n+\t\t\t\t\t\t\tint dmg = arrow.getKnockbackStrength() + strength;\n+\t\t\t\t\t\t\tif (dmg < 0) return;\n+\t\t\t\t\t\t\tarrow.setKnockbackStrength(dmg);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase RESET:\n+\t\t\tcase SET:\n+\t\t\t\tfor (Projectile entity : getExpr().getArray(e)) {\n+\t\t\t\t\tif (abstractArrowExists) {\n+\t\t\t\t\t\tif (entity instanceof AbstractArrow) ((AbstractArrow) entity).setKnockbackStrength(strength);\n+\t\t\t\t\t} else if (entity instanceof Arrow) {\n+\t\t\t\t\t\t((Arrow) entity).setKnockbackStrength(strength);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tbreak;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c281d9770574fc0cc208c02e20ab7b4506fd5afe"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NDMwNw==", "bodyText": "Maybe use a switch statement here?", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495484307", "createdAt": "2020-09-26T18:48:22Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\treturn (mode == ChangeMode.DELETE || mode == ChangeMode.REMOVE_ALL) ? null : CollectionUtils.array(Number.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c281d9770574fc0cc208c02e20ab7b4506fd5afe"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7f69588d8d76f7e39b708b62853d6d218c038ad", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/f7f69588d8d76f7e39b708b62853d6d218c038ad", "committedDate": "2020-09-26T19:05:39Z", "message": "Default case :sunglasses:"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDM1OTU4", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-497035958", "createdAt": "2020-09-26T22:49:42Z", "commit": {"oid": "f7f69588d8d76f7e39b708b62853d6d218c038ad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjo0OTo0MlrOHYjHVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQyMjo0OTo0MlrOHYjHVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwMzE4OA==", "bodyText": "Maybe not the last thing after all haha. These if and else statements should have curly braces.", "url": "https://github.com/SkriptLang/Skript/pull/3205#discussion_r495503188", "createdAt": "2020-09-26T22:49:42Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/expressions/ExprArrowKnockbackStrength.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * This file is part of Skript.\n+ *\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ *\n+ *\n+ * Copyright 2011-2017 Peter G\u00fcttinger and contributors\n+ */\n+package ch.njol.skript.expressions;\n+\n+import org.bukkit.entity.AbstractArrow;\n+import org.bukkit.entity.Arrow;\n+import org.bukkit.entity.Projectile;\n+import org.bukkit.event.Event;\n+import org.eclipse.jdt.annotation.Nullable;\n+\n+import ch.njol.skript.Skript;\n+import ch.njol.skript.classes.Changer.ChangeMode;\n+import ch.njol.skript.doc.Description;\n+import ch.njol.skript.doc.Examples;\n+import ch.njol.skript.doc.Name;\n+import ch.njol.skript.doc.Since;\n+import ch.njol.skript.expressions.base.SimplePropertyExpression;\n+import ch.njol.util.coll.CollectionUtils;\n+\n+@Name(\"Arrow Knockback Strength\")\n+@Description(\"An arrow's knockback strength.\")\n+@Examples({\"on shoot:\",\n+\t\"\\tevent-projectile is an arrow\",\n+\t\"\\tset arrow knockback strength of event-projectile to 10\"})\n+@Since(\"INSERT VERSION\")\n+public class ExprArrowKnockbackStrength extends SimplePropertyExpression<Projectile, Number> {\n+\t\n+\tfinal static boolean abstractArrowExists = Skript.classExists(\"org.bukkit.entity.AbstractArrow\");\n+\t\n+\tstatic {\n+\t\tregister(ExprArrowKnockbackStrength.class, Number.class, \"[the] arrow knockback strength\", \"projectiles\");\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Number convert(Projectile arrow) {\n+\t\tif (abstractArrowExists)\n+\t\t\treturn arrow instanceof AbstractArrow ? ((AbstractArrow) arrow).getKnockbackStrength() : null;\n+\t\treturn arrow instanceof Arrow ? ((Arrow) arrow).getKnockbackStrength() : null;\n+\t}\n+\t\n+\t@Nullable\n+\t@Override\n+\tpublic Class<?>[] acceptChange(ChangeMode mode) {\n+\t\tswitch (mode) {\n+\t\t\tcase SET:\n+\t\t\tcase ADD:\n+\t\t\tcase RESET:\n+\t\t\tcase REMOVE:\n+\t\t\t\treturn CollectionUtils.array(Number.class);\n+\t\t\tdefault:\n+\t\t\t\treturn null;\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic void change(Event e, @Nullable Object[] delta, ChangeMode mode) {\n+\t\tint strength = delta != null ? ((Number) delta[0]).intValue() : 0;\n+\t\tswitch (mode) {\n+\t\t\tcase REMOVE:\n+\t\t\t\tif (abstractArrowExists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7f69588d8d76f7e39b708b62853d6d218c038ad"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78def1cd82009137c40fb8399dd46ab8b024d699", "author": {"user": {"login": "DeltaRays", "name": "DeltaRays"}}, "url": "https://github.com/SkriptLang/Skript/commit/78def1cd82009137c40fb8399dd46ab8b024d699", "committedDate": "2020-09-27T04:37:48Z", "message": "Update ExprArrowKnockbackStrength.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19f1bd9a9ea0e020e187baa7b54060a956ea72fe", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/19f1bd9a9ea0e020e187baa7b54060a956ea72fe", "committedDate": "2020-09-29T22:08:41Z", "message": "Update copyright header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108064ebc6f620c23cd5533756dd75b6bab94c81", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/108064ebc6f620c23cd5533756dd75b6bab94c81", "committedDate": "2020-09-29T22:09:54Z", "message": "Merge branch 'dev-2.5' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "938f6237f3d184b570a9e5493d1154c3a9aeefc8", "author": {"user": {"login": "ShaneBeee", "name": "Shane Bee"}}, "url": "https://github.com/SkriptLang/Skript/commit/938f6237f3d184b570a9e5493d1154c3a9aeefc8", "committedDate": "2020-09-29T22:14:56Z", "message": "Merge branch 'dev-2.5' into ArrowKnockbackStrength"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTQ1ODM3", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-498945837", "createdAt": "2020-09-29T22:23:33Z", "commit": {"oid": "938f6237f3d184b570a9e5493d1154c3a9aeefc8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTQ4MDg2", "url": "https://github.com/SkriptLang/Skript/pull/3205#pullrequestreview-498948086", "createdAt": "2020-09-29T22:24:45Z", "commit": {"oid": "938f6237f3d184b570a9e5493d1154c3a9aeefc8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3073, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}