{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjU1MDE2", "number": 3370, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjoxNzoyMVrOEnwdfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODoyMToyOVrOEqNafg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTIzOTAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjoxNzoyMVrOHYhMsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjoxNzoyMVrOHYhMsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3MTc5Mw==", "bodyText": "Can you replace the tab here with \\t? Since you're already editing this expression ;D", "url": "https://github.com/SkriptLang/Skript/pull/3370#discussion_r495471793", "createdAt": "2020-09-26T16:17:21Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "diffHunk": "@@ -34,15 +34,15 @@\n \n @Name(\"Starts/Ends With\")\n @Description(\"Checks if a text starts or ends with another.\")\n-@Examples({\"if the argument starts with \\\"test\\\":\",\n-\t\t\"\tsend \\\"Stop!\\\"\"})\n-@Since(\"2.2-dev36\")\n+@Examples({\"if the argument starts with \\\"test\\\" or \\\"debug\\\":\",\n+\t\"\tsend \\\"Stop!\\\"\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f22f6632d67f6e6e49aef59651a154532b8d5b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTIzOTY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjoxODowOFrOHYhM-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjoxODowOFrOHYhM-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3MTg2NQ==", "bodyText": "Nitpick but I think\nreturn false;\nshould be on its own line.", "url": "https://github.com/SkriptLang/Skript/pull/3370#discussion_r495471865", "createdAt": "2020-09-26T16:18:08Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "diffHunk": "@@ -63,15 +63,38 @@ public boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelaye\n \t\n \t@Override\n \tpublic boolean check(Event e) {\n-\t\tString affix = this.affix.getSingle(e);\n-\t\t\n-\t\tif (affix == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n+\t\tString[] affixes = this.affix.getAll(e);\n+\t\tif (affixes.length < 1) return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f22f6632d67f6e6e49aef59651a154532b8d5b"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI0MDI1OnYy", "diffSide": "RIGHT", "path": "src/test/skript/tests/syntaxes/conditions/CondStartsEndsWith.sk", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjoxODo1MFrOHYhNPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjoxODo1MFrOHYhNPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3MTkzNA==", "bodyText": "can you add a newline at the end of the file", "url": "https://github.com/SkriptLang/Skript/pull/3370#discussion_r495471934", "createdAt": "2020-09-26T16:18:50Z", "author": {"login": "APickledWalrus"}, "path": "src/test/skript/tests/syntaxes/conditions/CondStartsEndsWith.sk", "diffHunk": "@@ -0,0 +1,9 @@\n+test \"starts with condition\":\n+\tassert \"hey\" starts with \"he\" or \"hello\" with \"hey doesn't start with he or hello\"\n+\tassert \"hey\" starts with \"hey\" and \"h\" with \"hey doesn't start with hey and h\"\n+\tassert \"hey\" doesn't start with \"hey\" and \"e\" with \"hey starts with hey and e\"\n+\n+test \"ends with condition\":\n+\tassert \"hey\" ends with \"hey\" or \"hello\" with \"hey doesn't end with hey or hello\"\n+\tassert \"hey\" ends with \"hey\" and \"y\" with \"hey doesn't end with hey and y\"\n+\tassert \"hey\" doesn't end with \"hey\" and \"e\" with \"hey ends with hey and e\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f22f6632d67f6e6e49aef59651a154532b8d5b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI1MDc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjozMjo1M1rOHYhSGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNjo0MjoxNlrOHYhVKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3MzE3Nw==", "bodyText": "I think this will improve readability, but it's open to discussion.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t} else if (this.affix.getAnd()) {\n          \n          \n            \n            \t\t\t\t\tfor (String str : affixes) {\n          \n          \n            \n            \t\t\t\t\t\tif (!string.startsWith(str))\n          \n          \n            \n            \t\t\t\t\t\t\treturn false;\n          \n          \n            \n            \t\t\t\t\t}\n          \n          \n            \n            \t\t\t\t\treturn true;\n          \n          \n            \n            \t\t\t\t} else {\n          \n          \n            \n            \t\t\t\t\tfor (String str : affixes) {\n          \n          \n            \n            \t\t\t\t\t\tif (string.startsWith((str)))\n          \n          \n            \n            \t\t\t\t\t\t\treturn true;\n          \n          \n            \n            \t\t\t\t\t}\n          \n          \n            \n            \t\t\t\t}\n          \n          \n            \n            \t\t\t\t} else { // Using 'starts with'\n          \n          \n            \n            \t\t\t\t\tif (this.affix.getAnd()) {\n          \n          \n            \n            \t\t\t\t\t\tfor (String str : affixes) {\n          \n          \n            \n            \t\t\t\t\t\t\tif (!string.startsWith(str))\n          \n          \n            \n            \t\t\t\t\t\t\t\treturn false;\n          \n          \n            \n            \t\t\t\t\t\t}\n          \n          \n            \n            \t\t\t\t\t\treturn true;\n          \n          \n            \n            \t\t\t\t\t} else {\n          \n          \n            \n            \t\t\t\t\t\tfor (String str : affixes) {\n          \n          \n            \n            \t\t\t\t\t\t\tif (string.startsWith((str)))\n          \n          \n            \n            \t\t\t\t\t\t\t\treturn true;\n          \n          \n            \n            \t\t\t\t\t\t}\n          \n          \n            \n            \t\t\t\t\t}\n          \n          \n            \n            \t\t\t\t}", "url": "https://github.com/SkriptLang/Skript/pull/3370#discussion_r495473177", "createdAt": "2020-09-26T16:32:53Z", "author": {"login": "APickledWalrus"}, "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "diffHunk": "@@ -63,15 +63,38 @@ public boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelaye\n \t\n \t@Override\n \tpublic boolean check(Event e) {\n-\t\tString affix = this.affix.getSingle(e);\n-\t\t\n-\t\tif (affix == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n+\t\tString[] affixes = this.affix.getAll(e);\n+\t\tif (affixes.length < 1) return false;\n \t\treturn strings.check(e,\n-\t\t\t\tstring -> usingEnds ? string.endsWith(affix) : string.startsWith(affix),\n-\t\t\t\tisNegated());\n+\t\t\tstring -> {\n+\t\t\t\tif (usingEnds) {\n+\t\t\t\t\tif (this.affix.getAnd()) {\n+\t\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\t\tif (!string.endsWith(str))\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\t\tif (string.endsWith((str)))\n+\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t} else if (this.affix.getAnd()) {\n+\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\tif (!string.startsWith(str))\n+\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn true;\n+\t\t\t\t} else {\n+\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\tif (string.startsWith((str)))\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31f22f6632d67f6e6e49aef59651a154532b8d5b"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3Mzk2MQ==", "bodyText": "Yeah", "url": "https://github.com/SkriptLang/Skript/pull/3370#discussion_r495473961", "createdAt": "2020-09-26T16:42:16Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "diffHunk": "@@ -63,15 +63,38 @@ public boolean init(Expression<?>[] exprs, int matchedPattern, Kleenean isDelaye\n \t\n \t@Override\n \tpublic boolean check(Event e) {\n-\t\tString affix = this.affix.getSingle(e);\n-\t\t\n-\t\tif (affix == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\t\n+\t\tString[] affixes = this.affix.getAll(e);\n+\t\tif (affixes.length < 1) return false;\n \t\treturn strings.check(e,\n-\t\t\t\tstring -> usingEnds ? string.endsWith(affix) : string.startsWith(affix),\n-\t\t\t\tisNegated());\n+\t\t\tstring -> {\n+\t\t\t\tif (usingEnds) {\n+\t\t\t\t\tif (this.affix.getAnd()) {\n+\t\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\t\tif (!string.endsWith(str))\n+\t\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\t\tif (string.endsWith((str)))\n+\t\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t} else if (this.affix.getAnd()) {\n+\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\tif (!string.startsWith(str))\n+\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t}\n+\t\t\t\t\treturn true;\n+\t\t\t\t} else {\n+\t\t\t\t\tfor (String str : affixes) {\n+\t\t\t\t\t\tif (string.startsWith((str)))\n+\t\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3MzE3Nw=="}, "originalCommit": {"oid": "31f22f6632d67f6e6e49aef59651a154532b8d5b"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjk1NDIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODoyMToyOVrOHcSUAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMjoxNTowNVrOHcaT6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMjIxMQ==", "bodyText": "As stated in another PR, please revert this back to the default license header.\nLine changes which do not affect the PR shouldn't be part of the PR.\nyou can find a copy of the default header here:\nhttps://github.com/SkriptLang/Skript/blob/master/licenseheader.txt", "url": "https://github.com/SkriptLang/Skript/pull/3370#discussion_r499422211", "createdAt": "2020-10-05T08:21:29Z", "author": {"login": "ShaneBeee"}, "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "diffHunk": "@@ -1,18 +1,18 @@\n /**\n- *   This file is part of Skript.\n+ * This file is part of Skript.\n  *\n- *  Skript is free software: you can redistribute it and/or modify\n- *  it under the terms of the GNU General Public License as published by\n- *  the Free Software Foundation, either version 3 of the License, or\n- *  (at your option) any later version.\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n  *\n- *  Skript is distributed in the hope that it will be useful,\n- *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- *  GNU General Public License for more details.\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n  *\n- *  You should have received a copy of the GNU General Public License\n- *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1ca7cd491d824d557c37f68a90912c229191b3f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU1MzI1OQ==", "bodyText": "Thanks, I\u2019ll do it when I come home", "url": "https://github.com/SkriptLang/Skript/pull/3370#discussion_r499553259", "createdAt": "2020-10-05T12:15:05Z", "author": {"login": "DeltaRays"}, "path": "src/main/java/ch/njol/skript/conditions/CondStartsEndsWith.java", "diffHunk": "@@ -1,18 +1,18 @@\n /**\n- *   This file is part of Skript.\n+ * This file is part of Skript.\n  *\n- *  Skript is free software: you can redistribute it and/or modify\n- *  it under the terms of the GNU General Public License as published by\n- *  the Free Software Foundation, either version 3 of the License, or\n- *  (at your option) any later version.\n+ * Skript is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n  *\n- *  Skript is distributed in the hope that it will be useful,\n- *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- *  GNU General Public License for more details.\n+ * Skript is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n  *\n- *  You should have received a copy of the GNU General Public License\n- *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.\n+ * You should have received a copy of the GNU General Public License\n+ * along with Skript.  If not, see <http://www.gnu.org/licenses/>.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMjIxMQ=="}, "originalCommit": {"oid": "e1ca7cd491d824d557c37f68a90912c229191b3f"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1016, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}