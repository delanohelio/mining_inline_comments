{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyOTkyMDA3", "number": 8606, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoxNzozOVrOE-urAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0OToxN1rOE_MBWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjExODQzOnYy", "diffSide": "RIGHT", "path": "pulsar-client-cpp/lib/UnAckedMessageTrackerEnabled.h", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoxNzozOVrOH8CoCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoxNzozOVrOH8CoCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxOTYyNw==", "bodyText": "It won't pass the clang-format check here. Please use clang-format 5.0 to reformat your code.", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r532719627", "createdAt": "2020-11-30T16:17:39Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client-cpp/lib/UnAckedMessageTrackerEnabled.h", "diffHunk": "@@ -25,25 +25,27 @@\n namespace pulsar {\n class UnAckedMessageTrackerEnabled : public UnAckedMessageTrackerInterface {\n    public:\n-    ~UnAckedMessageTrackerEnabled();\n+       virtual ~UnAckedMessageTrackerEnabled() { this->close(); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjE0MzY5OnYy", "diffSide": "RIGHT", "path": "pulsar-client-cpp/lib/UnAckedMessageTrackerEnabled.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoyMzowM1rOH8C3mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMTozMjozNlrOH8UnGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMzYxMA==", "bodyText": "Why remove the cancel() here?", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r532723610", "createdAt": "2020-11-30T16:23:03Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client-cpp/lib/UnAckedMessageTrackerEnabled.cc", "diffHunk": "@@ -158,9 +158,15 @@ void UnAckedMessageTrackerEnabled::clear() {\n     }\n }\n \n-UnAckedMessageTrackerEnabled::~UnAckedMessageTrackerEnabled() {\n-    if (timer_) {\n-        timer_->cancel();\n+void UnAckedMessageTrackerEnabled::start() {\n+    this->scheduleTimer();\n+}\n+\n+void UnAckedMessageTrackerEnabled::close() {\n+    std::lock_guard<std::mutex> acquire(mutexTimer_);\n+    if (this->timer_) {\n+        boost::system::error_code ec;\n+        this->timer_.reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAxNDI5Ng==", "bodyText": "sorry, accidentally deleted", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r533014296", "createdAt": "2020-12-01T01:32:36Z", "author": {"login": "saosir"}, "path": "pulsar-client-cpp/lib/UnAckedMessageTrackerEnabled.cc", "diffHunk": "@@ -158,9 +158,15 @@ void UnAckedMessageTrackerEnabled::clear() {\n     }\n }\n \n-UnAckedMessageTrackerEnabled::~UnAckedMessageTrackerEnabled() {\n-    if (timer_) {\n-        timer_->cancel();\n+void UnAckedMessageTrackerEnabled::start() {\n+    this->scheduleTimer();\n+}\n+\n+void UnAckedMessageTrackerEnabled::close() {\n+    std::lock_guard<std::mutex> acquire(mutexTimer_);\n+    if (this->timer_) {\n+        boost::system::error_code ec;\n+        this->timer_.reset();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMzYxMA=="}, "originalCommit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjkyNjk5OnYy", "diffSide": "RIGHT", "path": "pulsar-client-cpp/tests/BasicEndToEndTest.cc", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0OToxN1rOH8wafw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDozNTowMFrOIMpCTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2OTgyMw==", "bodyText": "A typo: testtUnAcked -> testUnAcked", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r533469823", "createdAt": "2020-12-01T14:49:17Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client-cpp/tests/BasicEndToEndTest.cc", "diffHunk": "@@ -3826,3 +3826,208 @@ TEST(BasicEndToEndTest, testAckGroupingTrackerEnabledCumulativeAck) {\n     ret = consumer.receive(msg, 1000);\n     ASSERT_EQ(ResultTimeout, ret) << \"Received redundant message ID: \" << msg.getMessageId();\n }\n+\n+class UnAckedMessageTrackerEnabledMock : public UnAckedMessageTrackerEnabled {\n+   public:\n+    UnAckedMessageTrackerEnabledMock(long timeoutMs, const ClientImplPtr client, ConsumerImplBase &consumer)\n+        : UnAckedMessageTrackerEnabled(timeoutMs, timeoutMs, client, consumer) {}\n+    const long getUnAckedMessagesTimeoutMs() { return this->timeoutMs_; }\n+    const long getTickDurationInMs() { return this->tickDurationInMs_; }\n+    bool isEmpty() { return UnAckedMessageTrackerEnabled::isEmpty(); }\n+    long size() { return UnAckedMessageTrackerEnabled::size(); }\n+};  // class UnAckedMessageTrackerEnabledMock\n+\n+TEST(BasicEndToEndTest, testtUnAckedMessageTrackerDefaultBehavior) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg1MzE2NA==", "bodyText": "Do I need to resubmit the code to fix this problem?How about someone fix it when merge pull request?", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r533853164", "createdAt": "2020-12-02T02:25:48Z", "author": {"login": "saosir"}, "path": "pulsar-client-cpp/tests/BasicEndToEndTest.cc", "diffHunk": "@@ -3826,3 +3826,208 @@ TEST(BasicEndToEndTest, testAckGroupingTrackerEnabledCumulativeAck) {\n     ret = consumer.receive(msg, 1000);\n     ASSERT_EQ(ResultTimeout, ret) << \"Received redundant message ID: \" << msg.getMessageId();\n }\n+\n+class UnAckedMessageTrackerEnabledMock : public UnAckedMessageTrackerEnabled {\n+   public:\n+    UnAckedMessageTrackerEnabledMock(long timeoutMs, const ClientImplPtr client, ConsumerImplBase &consumer)\n+        : UnAckedMessageTrackerEnabled(timeoutMs, timeoutMs, client, consumer) {}\n+    const long getUnAckedMessagesTimeoutMs() { return this->timeoutMs_; }\n+    const long getTickDurationInMs() { return this->tickDurationInMs_; }\n+    bool isEmpty() { return UnAckedMessageTrackerEnabled::isEmpty(); }\n+    long size() { return UnAckedMessageTrackerEnabled::size(); }\n+};  // class UnAckedMessageTrackerEnabledMock\n+\n+TEST(BasicEndToEndTest, testtUnAckedMessageTrackerDefaultBehavior) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2OTgyMw=="}, "originalCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg1NDA5Ng==", "bodyText": "I think a committer could fix it when merge PR. So you needn't any changes. @jiazhai could you help take a look?", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r533854096", "createdAt": "2020-12-02T02:28:56Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client-cpp/tests/BasicEndToEndTest.cc", "diffHunk": "@@ -3826,3 +3826,208 @@ TEST(BasicEndToEndTest, testAckGroupingTrackerEnabledCumulativeAck) {\n     ret = consumer.receive(msg, 1000);\n     ASSERT_EQ(ResultTimeout, ret) << \"Received redundant message ID: \" << msg.getMessageId();\n }\n+\n+class UnAckedMessageTrackerEnabledMock : public UnAckedMessageTrackerEnabled {\n+   public:\n+    UnAckedMessageTrackerEnabledMock(long timeoutMs, const ClientImplPtr client, ConsumerImplBase &consumer)\n+        : UnAckedMessageTrackerEnabled(timeoutMs, timeoutMs, client, consumer) {}\n+    const long getUnAckedMessagesTimeoutMs() { return this->timeoutMs_; }\n+    const long getTickDurationInMs() { return this->tickDurationInMs_; }\n+    bool isEmpty() { return UnAckedMessageTrackerEnabled::isEmpty(); }\n+    long size() { return UnAckedMessageTrackerEnabled::size(); }\n+};  // class UnAckedMessageTrackerEnabledMock\n+\n+TEST(BasicEndToEndTest, testtUnAckedMessageTrackerDefaultBehavior) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2OTgyMw=="}, "originalCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEyNjE1OQ==", "bodyText": "@saosir Can you create a follow-up PR to fix the typo?", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r550126159", "createdAt": "2020-12-30T10:35:00Z", "author": {"login": "sijie"}, "path": "pulsar-client-cpp/tests/BasicEndToEndTest.cc", "diffHunk": "@@ -3826,3 +3826,208 @@ TEST(BasicEndToEndTest, testAckGroupingTrackerEnabledCumulativeAck) {\n     ret = consumer.receive(msg, 1000);\n     ASSERT_EQ(ResultTimeout, ret) << \"Received redundant message ID: \" << msg.getMessageId();\n }\n+\n+class UnAckedMessageTrackerEnabledMock : public UnAckedMessageTrackerEnabled {\n+   public:\n+    UnAckedMessageTrackerEnabledMock(long timeoutMs, const ClientImplPtr client, ConsumerImplBase &consumer)\n+        : UnAckedMessageTrackerEnabled(timeoutMs, timeoutMs, client, consumer) {}\n+    const long getUnAckedMessagesTimeoutMs() { return this->timeoutMs_; }\n+    const long getTickDurationInMs() { return this->tickDurationInMs_; }\n+    bool isEmpty() { return UnAckedMessageTrackerEnabled::isEmpty(); }\n+    long size() { return UnAckedMessageTrackerEnabled::size(); }\n+};  // class UnAckedMessageTrackerEnabledMock\n+\n+TEST(BasicEndToEndTest, testtUnAckedMessageTrackerDefaultBehavior) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2OTgyMw=="}, "originalCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2806, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}