{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NzA1OTg1", "number": 7705, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMzo1MTozM1rOEUO4Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMzo1MTozM1rOEUO4Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjUwNjk4OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ProducerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMzo1MTozM1rOG6ZmVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjo1MzoyMlrOG7LOcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5MDAwNg==", "bodyText": "This will always be the same as producerName. If the client overrides it, the server will use that name, but if a producer with same name is already connected, it will instead error it out", "url": "https://github.com/apache/pulsar/pull/7705#discussion_r463890006", "createdAt": "2020-07-31T23:51:33Z", "author": {"login": "merlimat"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ProducerImpl.java", "diffHunk": "@@ -103,7 +102,15 @@\n     private final BatchMessageContainerBase batchMessageContainer;\n     private CompletableFuture<MessageId> lastSendFuture = CompletableFuture.completedFuture(null);\n \n-    // Globally unique producer name\n+    /**\n+     * Globally unique producer name generated by server. It should be the same as {@link #producerName} unless user\n+     * configures {@link ProducerConfigurationData::setProducerName}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e49954b7f8258edd68aefedb51a2fdeecf0ebeb"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkzNzc5NQ==", "bodyText": "I have changed it but I don't think user_producer_id + sequence_id can create UUID because user_producer_id can be reused by other producer later on and sequence_id can start with 0 again and it will create a duplicate combination which will not be unique across messages on the topic and that can be issue for message chunking.\neg:\nProducer P1 gives name userProducer1 and publish message with sequenceId=0. Now that process died and another process created producer with similar name userProducer1 and started message with sequenceId=0 in which case UUID will not be unique.\nTherefore, using serverProducerName always gives a guarantee for unique producer-id and UUID. Adding new string serverProducerId will not create any overhead as well. So, can you please let me know your thought on it.", "url": "https://github.com/apache/pulsar/pull/7705#discussion_r463937795", "createdAt": "2020-08-01T08:11:49Z", "author": {"login": "rdhabalia"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ProducerImpl.java", "diffHunk": "@@ -103,7 +102,15 @@\n     private final BatchMessageContainerBase batchMessageContainer;\n     private CompletableFuture<MessageId> lastSendFuture = CompletableFuture.completedFuture(null);\n \n-    // Globally unique producer name\n+    /**\n+     * Globally unique producer name generated by server. It should be the same as {@link #producerName} unless user\n+     * configures {@link ProducerConfigurationData::setProducerName}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5MDAwNg=="}, "originalCommit": {"oid": "7e49954b7f8258edd68aefedb51a2fdeecf0ebeb"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDcwMzA4OA==", "bodyText": "@merlimat did you get chance to read my above comment before merging the PR?", "url": "https://github.com/apache/pulsar/pull/7705#discussion_r464703088", "createdAt": "2020-08-03T22:53:22Z", "author": {"login": "rdhabalia"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ProducerImpl.java", "diffHunk": "@@ -103,7 +102,15 @@\n     private final BatchMessageContainerBase batchMessageContainer;\n     private CompletableFuture<MessageId> lastSendFuture = CompletableFuture.completedFuture(null);\n \n-    // Globally unique producer name\n+    /**\n+     * Globally unique producer name generated by server. It should be the same as {@link #producerName} unless user\n+     * configures {@link ProducerConfigurationData::setProducerName}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5MDAwNg=="}, "originalCommit": {"oid": "7e49954b7f8258edd68aefedb51a2fdeecf0ebeb"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2350, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}