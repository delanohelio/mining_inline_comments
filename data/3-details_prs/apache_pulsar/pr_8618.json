{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzcyOTc3", "number": 8618, "title": "[PIP 70][Issue 8617] Introduce lightweight broker entry metadata", "bodyText": "Fixes #8617\nMotivation\nIntroduce lightweight raw Message metadata, details can be found PIP-70\nModifications\n\nwire protocol add RawMessageMetadata and supports_raw_message_meta for FeatureFlags\nchange how produced message is saved in bookkeeper: add raw metadata for message\nchange how message is seek-by-time\nchange how message send back to Consumer: skip metadata if consumer not supprot raw metadata\n\nVerifying this change\n\nAdded tests for parse/skip raw message metadata\nAdded test for how message seek-by broker timestamp for message\n\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nThe wire protocol: (yes / no)", "createdAt": "2020-11-18T18:00:05Z", "url": "https://github.com/apache/pulsar/pull/8618", "merged": true, "mergeCommit": {"oid": "6275297499874e980b4656694f5b90aa5cc23c18"}, "closed": true, "closedAt": "2020-12-12T05:15:50Z", "author": {"login": "aloyszhang"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdd6ojvABqjQwMTM4NTIxMzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlTvv5gFqTU1MDY4NDI2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "276960e3885d849bc57cfad610c50bdbc6786820", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/276960e3885d849bc57cfad610c50bdbc6786820", "committedDate": "2020-11-18T17:48:57Z", "message": "fix cherry-pick problem"}, "afterCommit": {"oid": "0c71eb6da12db83b7f5a9def14316a6daf128349", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/0c71eb6da12db83b7f5a9def14316a6daf128349", "committedDate": "2020-11-19T03:53:04Z", "message": "fix cherry-pick problem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1OTU1NjYz", "url": "https://github.com/apache/pulsar/pull/8618#pullrequestreview-535955663", "createdAt": "2020-11-21T10:10:41Z", "commit": {"oid": "0c71eb6da12db83b7f5a9def14316a6daf128349"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjcyNTY5", "url": "https://github.com/apache/pulsar/pull/8618#pullrequestreview-536272569", "createdAt": "2020-11-23T08:59:02Z", "commit": {"oid": "28c79533e4b49d983e6a717b152315c0924c43c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28c79533e4b49d983e6a717b152315c0924c43c0", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/28c79533e4b49d983e6a717b152315c0924c43c0", "committedDate": "2020-11-23T07:16:03Z", "message": "abstract raw meta enable for ManagedLedgerConfig"}, "afterCommit": {"oid": "a07504d3dbd009c15c53c36370a6b76aa71249aa", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/a07504d3dbd009c15c53c36370a6b76aa71249aa", "committedDate": "2020-11-27T04:18:57Z", "message": "add backwards test for client with version 2.6.0"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0054cc7d88eeab0ee642b7cc7568aa08716473d9", "author": {"user": {"login": "jiazhai", "name": "Jia Zhai"}}, "url": "https://github.com/apache/pulsar/commit/0054cc7d88eeab0ee642b7cc7568aa08716473d9", "committedDate": "2020-12-01T10:17:28Z", "message": "Update broker.conf\n\nremove space in set"}, "afterCommit": {"oid": "f329ac52887a01816a2ae68e77e796459b387728", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/f329ac52887a01816a2ae68e77e796459b387728", "committedDate": "2020-12-02T03:41:53Z", "message": "fix pom error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f329ac52887a01816a2ae68e77e796459b387728", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/f329ac52887a01816a2ae68e77e796459b387728", "committedDate": "2020-12-02T03:41:53Z", "message": "fix pom error"}, "afterCommit": {"oid": "72d4bb6257858c15893e435297d5be52e6af8e52", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/72d4bb6257858c15893e435297d5be52e6af8e52", "committedDate": "2020-12-02T03:44:34Z", "message": "fix pom error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72d4bb6257858c15893e435297d5be52e6af8e52", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/72d4bb6257858c15893e435297d5be52e6af8e52", "committedDate": "2020-12-02T03:44:34Z", "message": "fix pom error"}, "afterCommit": {"oid": "8e4f9abbf0991b045e9dfa870ce6dff863af8b31", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/8e4f9abbf0991b045e9dfa870ce6dff863af8b31", "committedDate": "2020-12-02T06:11:50Z", "message": "add backwards test for client with version 2.6.0"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b39ff3d161247c137c54d9d04d9b8d73762c3b43", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/b39ff3d161247c137c54d9d04d9b8d73762c3b43", "committedDate": "2020-12-03T03:01:57Z", "message": "skip raw meta when skip medtadata"}, "afterCommit": {"oid": "3c19bc63e5e9fcbd48190133dfc0721c5989d22a", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/3c19bc63e5e9fcbd48190133dfc0721c5989d22a", "committedDate": "2020-12-03T03:29:21Z", "message": "skip raw meta when skip medtadata"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0154b87cf2ff2b36bfa546724394fa5182e7e5dd", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/0154b87cf2ff2b36bfa546724394fa5182e7e5dd", "committedDate": "2020-12-03T09:48:12Z", "message": "skip raw metadata before send to consumer"}, "afterCommit": {"oid": "3b3a73e3136b3d72c19bcb5367bf92438c84138e", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/3b3a73e3136b3d72c19bcb5367bf92438c84138e", "committedDate": "2020-12-09T03:23:21Z", "message": "skip raw metadata before send to consumer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTEwMTgy", "url": "https://github.com/apache/pulsar/pull/8618#pullrequestreview-547910182", "createdAt": "2020-12-09T07:42:19Z", "commit": {"oid": "3b3a73e3136b3d72c19bcb5367bf92438c84138e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0MjoxOVrOICGkdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0Nzo1OFrOICGwBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NTcwMw==", "bodyText": "broker timestamp is a concept on pulsar broker. managed ledger isn't aware of any broker features. I am not sure why we need this flag here or the name of this configuration setting is not appropriate.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r539075703", "createdAt": "2020-12-09T07:42:19Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedLedgerConfig.java", "diffHunk": "@@ -75,6 +75,7 @@\n     private LedgerOffloader ledgerOffloader = NullLedgerOffloader.INSTANCE;\n     private int newEntriesCheckDelayInMillis = 10;\n     private Clock clock = Clock.systemUTC();\n+    private boolean brokerTimestampForMessageEnable = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b3a73e3136b3d72c19bcb5367bf92438c84138e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3NjE5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean brokerTimestampForMessageEnable = false;\n          \n          \n            \n                private boolean brokerTimestampForMessageEnabled = false;", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r539076198", "createdAt": "2020-12-09T07:43:21Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -1428,6 +1428,11 @@\n                     + \"Of course, this may degrade consumption throughput. Default is 10ms.\")\n     private int managedLedgerNewEntriesCheckDelayInMillis = 10;\n \n+    @FieldContext(category = CATEGORY_STORAGE_ML,\n+            doc = \"Enable broker side timestamp for message. Default is false.\")\n+    private boolean brokerTimestampForMessageEnable = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b3a73e3136b3d72c19bcb5367bf92438c84138e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3ODY2MQ==", "bodyText": "I think the original idea to introduce RawMessageMetadata is to avoid serialization and deserialization. So broker doesn't need to serialize another protobuf message and create a new entry to store in bookkeeper side. I am not sure why do we need this.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r539078661", "createdAt": "2020-12-09T07:47:58Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/proto/PulsarApi.proto", "diffHunk": "@@ -180,6 +180,11 @@ message SingleMessageMetadata {\n     optional bool null_partition_key = 10 [ default = false];\n }\n \n+// raw metadata for message\n+message RawMessageMetadata {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b3a73e3136b3d72c19bcb5367bf92438c84138e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4613f1e59c2d2bc82ee4e61db1e71a30b6f591d7", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/4613f1e59c2d2bc82ee4e61db1e71a30b6f591d7", "committedDate": "2020-12-10T13:14:09Z", "message": "add RawMessageMetadata for wire protocol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f8f4ce866d5532575548de0bafc1994d68b7578", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/4f8f4ce866d5532575548de0bafc1994d68b7578", "committedDate": "2020-12-10T13:14:09Z", "message": "add brokerTimestampForMessageEnable in configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ea13d3d1b66018cc6cd95e9c6588884b1ec2d73", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/3ea13d3d1b66018cc6cd95e9c6588884b1ec2d73", "committedDate": "2020-12-10T13:14:09Z", "message": "add raw message metadat before send to bookie"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "030306f6f5c6ae03590e4f558991cd6c352a75be", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/030306f6f5c6ae03590e4f558991cd6c352a75be", "committedDate": "2020-12-10T13:14:10Z", "message": "support deserialize raw metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8f08bb978e5ab9dedcbd610199d7eac9886d293", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/b8f08bb978e5ab9dedcbd610199d7eac9886d293", "committedDate": "2020-12-10T13:14:10Z", "message": "increase protocol version to 16 to support raw metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a805586dee8f68c07e5d7f09b59bae48c8f14221", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/a805586dee8f68c07e5d7f09b59bae48c8f14221", "committedDate": "2020-12-10T13:14:10Z", "message": "skip raw message metadata for previous consumer client version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7e5337c524e3ef83fdf5453672fe341db80bf12", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/f7e5337c524e3ef83fdf5453672fe341db80bf12", "committedDate": "2020-12-10T13:14:10Z", "message": "add test for find message based on broker timestamp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28d5d610a5d33377ecb476e59a3943ffee7e6e36", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/28d5d610a5d33377ecb476e59a3943ffee7e6e36", "committedDate": "2020-12-10T13:14:10Z", "message": "fix checkstyle problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "224e1cc9f51f5af94eabc7a1d9880f626af52085", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/224e1cc9f51f5af94eabc7a1d9880f626af52085", "committedDate": "2020-12-10T13:14:10Z", "message": "fix cherry-pick problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "803f70a5ae7980eec5dd6babc8b87c84c298c750", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/803f70a5ae7980eec5dd6babc8b87c84c298c750", "committedDate": "2020-12-10T13:14:10Z", "message": "abstract raw meta enable for ManagedLedgerConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caf714a3bd94c6eb0ea2bd75b074247bdf4a9db6", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/caf714a3bd94c6eb0ea2bd75b074247bdf4a9db6", "committedDate": "2020-12-10T13:14:10Z", "message": "add backwards test for client with version 2.6.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6af2d7567372f233b4b0b417fcefd1bd694c21cf", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/6af2d7567372f233b4b0b417fcefd1bd694c21cf", "committedDate": "2020-12-10T13:14:10Z", "message": "skip raw meta when skip medtadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a91c7718461e27449b662fcca9e1689b600d3e57", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/a91c7718461e27449b662fcca9e1689b600d3e57", "committedDate": "2020-12-10T13:14:10Z", "message": "skip raw metadata before send to consumer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "397939b21b075d65cf3aa78847a0c189b4bb325d", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/397939b21b075d65cf3aa78847a0c189b4bb325d", "committedDate": "2020-12-10T13:14:10Z", "message": "introduce broker entry metadta interceptor for adding broker side metadata"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdff5ab1681a0916f9c6a57056928f7e0cf0b5f4", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/bdff5ab1681a0916f9c6a57056928f7e0cf0b5f4", "committedDate": "2020-12-10T11:18:05Z", "message": "introduce broker entry metadta interceptor for adding broker side metadata"}, "afterCommit": {"oid": "397939b21b075d65cf3aa78847a0c189b4bb325d", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/397939b21b075d65cf3aa78847a0c189b4bb325d", "committedDate": "2020-12-10T13:14:10Z", "message": "introduce broker entry metadta interceptor for adding broker side metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e64b965e2ec4d51a115840a5ed5680c89aba00f", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/4e64b965e2ec4d51a115840a5ed5680c89aba00f", "committedDate": "2020-12-10T13:58:12Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDY5MjI1", "url": "https://github.com/apache/pulsar/pull/8618#pullrequestreview-549469225", "createdAt": "2020-12-10T18:07:10Z", "commit": {"oid": "4e64b965e2ec4d51a115840a5ed5680c89aba00f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODowNzoxMVrOIDWkUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODoyMjo1OVrOIDXMug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM4NjM4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        doc = \"List of interceptors for broker metadata.\")\n          \n          \n            \n                        doc = \"List of interceptors for entry metadata.\")", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r540386384", "createdAt": "2020-12-10T18:07:11Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -865,6 +866,11 @@\n                 \"please enable the system topic first.\")\n     private boolean topicLevelPoliciesEnabled = false;\n \n+    @FieldContext(\n+            category = CATEGORY_SERVER,\n+            doc = \"List of interceptors for broker metadata.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e64b965e2ec4d51a115840a5ed5680c89aba00f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM5MjY0OQ==", "bodyText": "I am still not convinced why do we need to this here. ManagedLedger only handles serialized entry. The entry metadata should be appended at the broker level. I think the right place to add this logic should be done in https://github.com/apache/pulsar/blob/master/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java#L342.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r540392649", "createdAt": "2020-12-10T18:16:42Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/OpAddEntry.java", "diffHunk": "@@ -103,8 +107,13 @@ public void setCloseWhenDone(boolean closeWhenDone) {\n \n     public void initiate() {\n         if (STATE_UPDATER.compareAndSet(OpAddEntry.this, State.OPEN, State.INITIATED)) {\n-            ByteBuf duplicateBuffer = data.retainedDuplicate();\n \n+            ByteBuf duplicateBuffer = data.retainedDuplicate();\n+            if (ml.getConfig().isBrokerEntryMetaEnabled()) {\n+                duplicateBuffer = Commands.addBrokerEntryMetadata(duplicateBuffer,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e64b965e2ec4d51a115840a5ed5680c89aba00f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM5NjczMA==", "bodyText": "We should expose the broker metadata in the Message. So this would avoid using Pair and a lot of if-else logic.\nWe can improve msg.isExpired logic. If entry metadata is present, use broker timestamp; otherwise use client timestamp.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r540396730", "createdAt": "2020-12-10T18:22:59Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentMessageExpiryMonitor.java", "diffHunk": "@@ -68,16 +70,22 @@ public void expireMessages(int messageTTLInSeconds) {\n                     messageTTLInSeconds);\n \n             cursor.asyncFindNewestMatching(ManagedCursor.FindPositionConstraint.SearchActiveEntries, entry -> {\n-                MessageImpl<?> msg = null;\n+                Pair<MessageImpl<byte[]>, PulsarApi.BrokerEntryMetadata> pair = null;\n                 try {\n-                    msg = MessageImpl.deserialize(entry.getDataBuffer());\n-                    return msg.isExpired(messageTTLInSeconds);\n+                    pair = MessageImpl.deserializeWithBrokerEntryMetaData(entry.getDataBuffer());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e64b965e2ec4d51a115840a5ed5680c89aba00f"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ea94a53a8663f3b8a017c3073d915e667886c37", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/6ea94a53a8663f3b8a017c3073d915e667886c37", "committedDate": "2020-12-11T02:32:00Z", "message": "fix config doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48c0b78a3d13795772bdbdf5d141c9c190733247", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/48c0b78a3d13795772bdbdf5d141c9c190733247", "committedDate": "2020-12-11T02:44:41Z", "message": "expose entry meta to MessageImpl and skip deser MessageMeta if has entry meta"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1a981b19d527ce1314947d7dc3a76b493c055aa", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/e1a981b19d527ce1314947d7dc3a76b493c055aa", "committedDate": "2020-12-11T05:28:42Z", "message": "move add entry metadta logic to topic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "931ea7ce8bbcfb602bddde10184e9752b8bc8963", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/931ea7ce8bbcfb602bddde10184e9752b8bc8963", "committedDate": "2020-12-11T05:38:52Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f2a6e8e9e785eb02193db8c6330f1a2d6874b15", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/0f2a6e8e9e785eb02193db8c6330f1a2d6874b15", "committedDate": "2020-12-11T05:47:25Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e", "committedDate": "2020-12-11T08:54:33Z", "message": "fix error in PulsarSplitManager.findPosition by roll back the logic of comparation condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5OTkzOTA4", "url": "https://github.com/apache/pulsar/pull/8618#pullrequestreview-549993908", "createdAt": "2020-12-11T10:52:28Z", "commit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMzcyMzAz", "url": "https://github.com/apache/pulsar/pull/8618#pullrequestreview-550372303", "createdAt": "2020-12-11T17:52:06Z", "commit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzo1MjowNlrOIEDhZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODowMzoxNVrOIED6ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyMjkxNg==", "bodyText": "I don't think we need these imports here. correct?", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541122916", "createdAt": "2020-12-11T17:52:06Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedLedgerConfig.java", "diffHunk": "@@ -23,7 +23,9 @@\n import com.google.common.base.Charsets;\n import java.time.Clock;\n import java.util.Arrays;\n+import java.util.HashSet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyMzA5OA==", "bodyText": "I  don't think we need this import.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541123098", "createdAt": "2020-12-11T17:52:23Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/OpAddEntry.java", "diffHunk": "@@ -35,6 +37,7 @@\n import org.apache.bookkeeper.mledger.ManagedLedgerException;\n import org.apache.bookkeeper.mledger.util.SafeRun;\n import org.apache.bookkeeper.util.SafeRunnable;\n+import org.apache.pulsar.common.protocol.Commands;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyMzg2MQ==", "bodyText": "We don't this method anymore, correct?", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541123861", "createdAt": "2020-12-11T17:53:43Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentMessageExpiryMonitor.java", "diffHunk": "@@ -90,6 +91,11 @@ public void expireMessages(int messageTTLInSeconds) {\n         }\n     }\n \n+    public boolean isExpired(int messageTTLInSeconds, long brokerTimestampForMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNjE0NA==", "bodyText": "Can we add a method in MessageImpl to compare the timestamps?\nboolean publishedEarlierThan(long timestamp)?\n\nLike what you did at https://github.com/apache/pulsar/pull/8618/files#diff-955419b4b0ad976e96f9f7595989e79c391109aeaa304bd286a80fc6eb9360c7R299", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541126144", "createdAt": "2020-12-11T17:57:37Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentMessageFinder.java", "diffHunk": "@@ -61,10 +61,12 @@ public void findMessages(final long timestamp, AsyncCallbacks.FindEntryCallback\n             }\n \n             cursor.asyncFindNewestMatching(ManagedCursor.FindPositionConstraint.SearchAllAvailableEntries, entry -> {\n-                MessageImpl msg = null;\n+                MessageImpl<byte[]> msg = null;\n                 try {\n-                    msg = MessageImpl.deserialize(entry.getDataBuffer());\n-                    return msg.getPublishTime() < timestamp;\n+                    msg = MessageImpl.deserializeBrokerEntryMetaDataFirst(entry.getDataBuffer());\n+                    return msg.getBrokerEntryMetadata() != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNjUyMg==", "bodyText": "Can we use MessageImpl.isExpired?", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541126522", "createdAt": "2020-12-11T17:58:22Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -2145,15 +2155,21 @@ public void terminateFailed(ManagedLedgerException exception, Object ctx) {\n     }\n \n     public boolean isOldestMessageExpired(ManagedCursor cursor, long messageTTLInSeconds) {\n-        MessageImpl msg = null;\n+        MessageImpl<byte[]> msg = null;\n         Entry entry = null;\n         boolean isOldestMessageExpired = false;\n         try {\n             entry = cursor.getNthEntry(1, IndividualDeletedEntries.Include);\n             if (entry != null) {\n-                msg = MessageImpl.deserialize(entry.getDataBuffer());\n-                isOldestMessageExpired = messageTTLInSeconds != 0 && System.currentTimeMillis() > (msg.getPublishTime()\n-                        + TimeUnit.SECONDS.toMillis((long) (messageTTLInSeconds * MESSAGE_EXPIRY_THRESHOLD)));\n+                msg = MessageImpl.deserializeBrokerEntryMetaDataFirst(entry.getDataBuffer());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNjc3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class AppendBrokerTimestampMetadataInterceptor implements BrokerEntryMetadataInterceptor{\n          \n          \n            \n            public class AppendBrokerTimestampMetadataInterceptor implements BrokerEntryMetadataInterceptor {", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541126775", "createdAt": "2020-12-11T17:58:47Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/intercept/AppendBrokerTimestampMetadataInterceptor.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.common.intercept;\n+\n+import org.apache.pulsar.common.api.proto.PulsarApi;\n+\n+/**\n+ * A plugin interface that allows you to intercept the client requests to\n+ *  the Pulsar brokers and add timestamp from broker side metadata for each entry.\n+ */\n+public class AppendBrokerTimestampMetadataInterceptor implements BrokerEntryMetadataInterceptor{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNzY1Ng==", "bodyText": "I think we should throw RuntimeExceptions if we failed to load broker entry metadata interceptors.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541127656", "createdAt": "2020-12-11T18:00:15Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/intercept/BrokerEntryMetadataUtils.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.common.intercept;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.apache.pulsar.common.util.ClassLoaderUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * A tool class for loading BrokerEntryMetadataInterceptor classes.\n+ */\n+public class BrokerEntryMetadataUtils {\n+\n+    private static final Logger log = LoggerFactory.getLogger(BrokerEntryMetadataUtils.class);\n+\n+    public static Set<BrokerEntryMetadataInterceptor> loadBrokerEntryMetadataInterceptors(\n+            Set<String> interceptorNames, ClassLoader classLoader) {\n+        Set<BrokerEntryMetadataInterceptor> interceptors = new HashSet<>();\n+        if (interceptorNames != null && interceptorNames.size() > 0) {\n+            for (String interceptorName : interceptorNames) {\n+                try {\n+                    Class<BrokerEntryMetadataInterceptor> clz = (Class<BrokerEntryMetadataInterceptor>) ClassLoaderUtils\n+                            .loadClass(interceptorName, classLoader);\n+                    try {\n+                        interceptors.add(clz.newInstance());\n+                    } catch (InstantiationException | IllegalAccessException e) {\n+                        log.error(\"Create new BrokerEntryMetadataInterceptor instance for {} falied.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyOTEzNg==", "bodyText": "If we failed to serialize entry metadata into a bytebuf, we should throw an exception. The caller of this method should catch this exception and fail the write requests.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541129136", "createdAt": "2020-12-11T18:02:50Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java", "diffHunk": "@@ -1920,6 +1929,72 @@ private static ByteBufPair serializeCommandSendWithSize(BaseCommand.Builder cmdB\n         return command;\n     }\n \n+    public static ByteBuf addBrokerEntryMetadata(ByteBuf headerAndPayload,\n+                                                 Set<BrokerEntryMetadataInterceptor> interceptors) {\n+        //   | BROKER_ENTRY_METADATA_MAGIC_NUMBER | BROKER_ENTRY_METADATA_SIZE |         BROKER_ENTRY_METADATA         |\n+        //   |         2 bytes                    |       4 bytes              |    BROKER_ENTRY_METADATA_SIZE bytes   |\n+\n+        PulsarApi.BrokerEntryMetadata.Builder brokerMetadataBuilder = PulsarApi.BrokerEntryMetadata.newBuilder();\n+        for (BrokerEntryMetadataInterceptor interceptor : interceptors) {\n+            interceptor.intercept(brokerMetadataBuilder);\n+        }\n+        PulsarApi.BrokerEntryMetadata brokerEntryMetadata = brokerMetadataBuilder.build();\n+        int brokerMetaSize = brokerEntryMetadata.getSerializedSize();\n+        ByteBuf brokerMeta =\n+                PulsarByteBufAllocator.DEFAULT.buffer(brokerMetaSize + 6, brokerMetaSize + 6);\n+        brokerMeta.writeShort(Commands.magicBrokerEntryMetadata);\n+        brokerMeta.writeInt(brokerMetaSize);\n+        ByteBufCodedOutputStream outStream = ByteBufCodedOutputStream.get(brokerMeta);\n+        try {\n+            brokerEntryMetadata.writeTo(outStream);\n+        } catch (IOException e) {\n+            // This is in-memory serialization, should not fail\n+            throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyOTQxMQ==", "bodyText": "Same question here - we should let the caller catch the exception.", "url": "https://github.com/apache/pulsar/pull/8618#discussion_r541129411", "createdAt": "2020-12-11T18:03:15Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/protocol/Commands.java", "diffHunk": "@@ -1920,6 +1929,72 @@ private static ByteBufPair serializeCommandSendWithSize(BaseCommand.Builder cmdB\n         return command;\n     }\n \n+    public static ByteBuf addBrokerEntryMetadata(ByteBuf headerAndPayload,\n+                                                 Set<BrokerEntryMetadataInterceptor> interceptors) {\n+        //   | BROKER_ENTRY_METADATA_MAGIC_NUMBER | BROKER_ENTRY_METADATA_SIZE |         BROKER_ENTRY_METADATA         |\n+        //   |         2 bytes                    |       4 bytes              |    BROKER_ENTRY_METADATA_SIZE bytes   |\n+\n+        PulsarApi.BrokerEntryMetadata.Builder brokerMetadataBuilder = PulsarApi.BrokerEntryMetadata.newBuilder();\n+        for (BrokerEntryMetadataInterceptor interceptor : interceptors) {\n+            interceptor.intercept(brokerMetadataBuilder);\n+        }\n+        PulsarApi.BrokerEntryMetadata brokerEntryMetadata = brokerMetadataBuilder.build();\n+        int brokerMetaSize = brokerEntryMetadata.getSerializedSize();\n+        ByteBuf brokerMeta =\n+                PulsarByteBufAllocator.DEFAULT.buffer(brokerMetaSize + 6, brokerMetaSize + 6);\n+        brokerMeta.writeShort(Commands.magicBrokerEntryMetadata);\n+        brokerMeta.writeInt(brokerMetaSize);\n+        ByteBufCodedOutputStream outStream = ByteBufCodedOutputStream.get(brokerMeta);\n+        try {\n+            brokerEntryMetadata.writeTo(outStream);\n+        } catch (IOException e) {\n+            // This is in-memory serialization, should not fail\n+            throw new RuntimeException(e);\n+        }\n+        outStream.recycle();\n+\n+        CompositeByteBuf compositeByteBuf = PulsarByteBufAllocator.DEFAULT.compositeBuffer();\n+        compositeByteBuf.addComponents(true, brokerMeta, headerAndPayload);\n+        return compositeByteBuf;\n+    }\n+\n+    public static ByteBuf skipBrokerEntryMetadataIfExist(ByteBuf headerAndPayloadWithBrokerEntryMetadata) {\n+        int readerIndex = headerAndPayloadWithBrokerEntryMetadata.readerIndex();\n+        if (headerAndPayloadWithBrokerEntryMetadata.readShort() == magicBrokerEntryMetadata) {\n+            int brokerEntryMetadataSize = headerAndPayloadWithBrokerEntryMetadata.readInt();\n+            headerAndPayloadWithBrokerEntryMetadata.readerIndex(headerAndPayloadWithBrokerEntryMetadata.readerIndex()\n+                    + brokerEntryMetadataSize);\n+        } else {\n+            headerAndPayloadWithBrokerEntryMetadata.readerIndex(readerIndex);\n+        }\n+        return headerAndPayloadWithBrokerEntryMetadata;\n+    }\n+\n+    public static PulsarApi.BrokerEntryMetadata parseBrokerEntryMetadataIfExist(\n+            ByteBuf headerAndPayloadWithBrokerEntryMetadata) {\n+        int readerIndex = headerAndPayloadWithBrokerEntryMetadata.readerIndex();\n+        if (headerAndPayloadWithBrokerEntryMetadata.readShort() == magicBrokerEntryMetadata) {\n+            int brokerEntryMetadataSize = headerAndPayloadWithBrokerEntryMetadata.readInt();\n+            int writerIndex = headerAndPayloadWithBrokerEntryMetadata.writerIndex();\n+            headerAndPayloadWithBrokerEntryMetadata.writerIndex(headerAndPayloadWithBrokerEntryMetadata.readerIndex()\n+                    + brokerEntryMetadataSize);\n+            ByteBufCodedInputStream brokerEntryMetadataInputStream =\n+                    ByteBufCodedInputStream.get(headerAndPayloadWithBrokerEntryMetadata);\n+            PulsarApi.BrokerEntryMetadata.Builder builder =  PulsarApi.BrokerEntryMetadata.newBuilder();\n+            try {\n+                builder.mergeFrom(brokerEntryMetadataInputStream, null).build();\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2d9710f38ac1e1ed16d716bd6537c0b1feeb1e"}, "originalPosition": 116}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23c9c2c9cf8331cc0455f2b625266b0c26e99fc8", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/23c9c2c9cf8331cc0455f2b625266b0c26e99fc8", "committedDate": "2020-12-11T22:53:11Z", "message": "remove un-used import and method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43556cb2b71d0fb6cc6493dd5bf2ad4c375ca73f", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/43556cb2b71d0fb6cc6493dd5bf2ad4c375ca73f", "committedDate": "2020-12-11T23:09:35Z", "message": "make all time comparation happended in Messge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b6f3fce8a7a9ffc186dc68ad7055d72e47e6c8", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/76b6f3fce8a7a9ffc186dc68ad7055d72e47e6c8", "committedDate": "2020-12-11T23:23:00Z", "message": "throw runtime exception if load BrokerEntryMetadataInterceptor failed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e918b542f5497794f36db5a9226449485142e50", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/1e918b542f5497794f36db5a9226449485142e50", "committedDate": "2020-12-12T00:41:33Z", "message": "catch add entry metadata exception and failed write request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e237c4e8d25981df630c3f4f72e4fb310c6abd7", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/5e237c4e8d25981df630c3f4f72e4fb310c6abd7", "committedDate": "2020-12-12T00:57:52Z", "message": "remove un-used import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjg0MjYw", "url": "https://github.com/apache/pulsar/pull/8618#pullrequestreview-550684260", "createdAt": "2020-12-12T03:12:47Z", "commit": {"oid": "5e237c4e8d25981df630c3f4f72e4fb310c6abd7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1100, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}