{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwMjc3MjA3", "number": 7193, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNDowNjo1MVrOEDS2qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo0MDo0MFrOEDWa8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODkwMDg4OnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNDowNjo1MVrOGgOqZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNDowNjo1MVrOGgOqZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0Nzg0Ng==", "bodyText": "Is this related to this PR?", "url": "https://github.com/apache/pulsar/pull/7193#discussion_r436447846", "createdAt": "2020-06-08T04:06:51Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdFunctions.java", "diffHunk": "@@ -233,6 +234,8 @@ void processArguments() throws Exception {\n         protected String customSerdeInputString;\n         @Parameter(names = \"--custom-schema-inputs\", description = \"The map of input topics to Schema class names (as a JSON string)\")\n         protected String customSchemaInputString;\n+        @Parameter(names = \"--input-specs\", description = \"The map of inputs to custom configuration (as a JSON string)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d5b4115706e7f87367189744b4caccfbcfea643"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODkwMDk4OnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSinks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNDowNjo1OFrOGgOqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNDowNjo1OFrOGgOqeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0Nzg2NQ==", "bodyText": "Is this related to this PR?", "url": "https://github.com/apache/pulsar/pull/7193#discussion_r436447865", "createdAt": "2020-06-08T04:06:58Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdSinks.java", "diffHunk": "@@ -276,6 +277,9 @@ protected void validateSinkConfigs(SinkConfig sinkConfig) {\n         @Parameter(names = \"--custom-schema-inputs\", description = \"The map of input topics to Schema types or class names (as a JSON string)\")\n         protected String customSchemaInputString;\n \n+        @Parameter(names = \"--input-specs\", description = \"The map of inputs to custom configuration (as a JSON string)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d5b4115706e7f87367189744b4caccfbcfea643"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTQ4NTI5OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/proto/src/main/proto/Function.proto", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwODo0MDo0MFrOGgURoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzowNzoyN1rOGiREgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzOTgwOA==", "bodyText": "I think a more generic approach is to add a Map<String, String> to the consumer spec. So we can use \n  \n    \n      pulsar/pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBuilderImpl.java\n    \n    \n         Line 86\n      in\n      870a637\n    \n    \n    \n    \n\n        \n          \n           public ConsumerBuilder<T> loadConf(Map<String, Object> config) { \n        \n    \n  \n\n to load the consumer configuration when building the consumers.", "url": "https://github.com/apache/pulsar/pull/7193#discussion_r436539808", "createdAt": "2020-06-08T08:40:40Z", "author": {"login": "sijie"}, "path": "pulsar-functions/proto/src/main/proto/Function.proto", "diffHunk": "@@ -94,6 +94,7 @@ message ConsumerSpec {\n         int32 value = 1;\n     }\n     ReceiverQueueSize receiverQueueSize = 4;\n+    bool readCompacted = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d5b4115706e7f87367189744b4caccfbcfea643"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYxNDI5Mw==", "bodyText": "We already have a ConsumerConfig class:\nhttps://github.com/apache/pulsar/blob/master/pulsar-common/src/main/java/org/apache/pulsar/common/functions/ConsumerConfig.java\nThough I am for refactoring this to be generic Map so we don't have to make code changes for new consumer configs that are added.", "url": "https://github.com/apache/pulsar/pull/7193#discussion_r437614293", "createdAt": "2020-06-09T17:54:28Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/proto/src/main/proto/Function.proto", "diffHunk": "@@ -94,6 +94,7 @@ message ConsumerSpec {\n         int32 value = 1;\n     }\n     ReceiverQueueSize receiverQueueSize = 4;\n+    bool readCompacted = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzOTgwOA=="}, "originalCommit": {"oid": "3d5b4115706e7f87367189744b4caccfbcfea643"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NDQ1MQ==", "bodyText": "We already have a ConsumerConfig class:\nhttps://github.com/apache/pulsar/blob/master/pulsar-common/src/main/java/org/apache/pulsar/common/functions/ConsumerConfig.java\nThough I am for refactoring this to be generic Map so we don't have to make code changes for new consumer configs that are added.\n\nThanks very much. But schemaProperties are properties belonging to the schema. Put the Consumer parameters with them, I don\u2019t think it\u2019s a good way. I think it is necessary to add a new Map to save the general parameters of Consumer.And this make it easier to convert Map to object", "url": "https://github.com/apache/pulsar/pull/7193#discussion_r438584451", "createdAt": "2020-06-11T07:07:27Z", "author": {"login": "315157973"}, "path": "pulsar-functions/proto/src/main/proto/Function.proto", "diffHunk": "@@ -94,6 +94,7 @@ message ConsumerSpec {\n         int32 value = 1;\n     }\n     ReceiverQueueSize receiverQueueSize = 4;\n+    bool readCompacted = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjUzOTgwOA=="}, "originalCommit": {"oid": "3d5b4115706e7f87367189744b4caccfbcfea643"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1731, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}