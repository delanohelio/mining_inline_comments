{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxNTM3MjEy", "number": 7587, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzoyMDoxMlrOEPsxvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzoyMDoxMlrOEPsxvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODk3NzI2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzoyMDoxMlrOGzjfKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMzo0MTowOVrOGzjvqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcxMTk3OQ==", "bodyText": "I think it is better to change the default implementation in the AuthorizationProvider interface instead of here.\n    /**\n     * Grant authorization-action permission on a topic to the given client\n     * @param topic\n     * @param originalRole role not overriden by proxy role if request do pass through proxy\n     * @param role originalRole | proxyRole if the request didn't pass through proxy\n     * @param operation\n     * @param authData\n     * @return CompletableFuture<Boolean>\n     */\n    default CompletableFuture<Boolean> allowTopicOperationAsync(TopicName topic, String originalRole, String role,\n                                                             TopicOperation operation,\n                                                             AuthenticationDataSource authData) {\nswitch (operation) {\n                case PRODUCE:\n                    return canProduceAsync(topicName, role, authData);\n                case CONSUME:\n                    return canConsumeAsync(topicName, role, authData, null);\n                case LOOKUP:\n                    return canLookupAsync(topicName, role, authData);\n                default:\n                     return FutureUtil.failedFuture(new IllegalStateException(\"TopicOperation is not supported by the Authorization provider you are using.\"));\n    }", "url": "https://github.com/apache/pulsar/pull/7587#discussion_r456711979", "createdAt": "2020-07-17T23:20:12Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationService.java", "diffHunk": "@@ -486,7 +486,16 @@ public Boolean allowNamespacePolicyOperation(NamespaceName namespaceName, Policy\n         }\n \n         if (provider != null) {\n-            return provider.allowTopicOperationAsync(topicName, originalRole, role, operation, authData);\n+            switch (operation) {\n+                case PRODUCE:\n+                    return canProduceAsync(topicName, role, authData);\n+                case CONSUME:\n+                    return canConsumeAsync(topicName, role, authData, null);\n+                case LOOKUP:\n+                    return canLookupAsync(topicName, role, authData);\n+                default:\n+                    return provider.allowTopicOperationAsync(topicName, originalRole, role, operation, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2173c64e531e3a783e077f038942c4ec7107b12"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcxNjIwMw==", "bodyText": "@sijie Done. PTAL", "url": "https://github.com/apache/pulsar/pull/7587#discussion_r456716203", "createdAt": "2020-07-17T23:41:09Z", "author": {"login": "srkukarni"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationService.java", "diffHunk": "@@ -486,7 +486,16 @@ public Boolean allowNamespacePolicyOperation(NamespaceName namespaceName, Policy\n         }\n \n         if (provider != null) {\n-            return provider.allowTopicOperationAsync(topicName, originalRole, role, operation, authData);\n+            switch (operation) {\n+                case PRODUCE:\n+                    return canProduceAsync(topicName, role, authData);\n+                case CONSUME:\n+                    return canConsumeAsync(topicName, role, authData, null);\n+                case LOOKUP:\n+                    return canLookupAsync(topicName, role, authData);\n+                default:\n+                    return provider.allowTopicOperationAsync(topicName, originalRole, role, operation, authData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjcxMTk3OQ=="}, "originalCommit": {"oid": "c2173c64e531e3a783e077f038942c4ec7107b12"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2289, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}