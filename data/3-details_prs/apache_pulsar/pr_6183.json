{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzcwNzc5", "number": 6183, "title": "Namespace level offloader", "bodyText": "This work was originally developed by @KannarFr at pull request #4739. This pull request was based on #4739\nFixes: #4547\nMotivation\nCurrently, the offload operation only have the cluster level configuration, can't set the offload configuration at the namespace level, it's inflexible.\nModifications\nAdd the namespace offload policies.\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (yes)\nThe schema: (no)\nThe default values of configurations: (no)\nThe wire protocol: (no)\nThe rest endpoints: (yes)\nThe admin cli options: (yes)\nAnything that affects deployment: (don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes)\nIf yes, how is the feature documented? (docs)", "createdAt": "2020-01-31T21:05:38Z", "url": "https://github.com/apache/pulsar/pull/6183", "merged": true, "mergeCommit": {"oid": "fd03be595505433fc12f94b63f3d713610ccb2f7"}, "closed": true, "closedAt": "2020-02-10T12:46:44Z", "author": {"login": "gaoran10"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_07u-AH2gAyMzY5NzcwNzc5OmE5NWZkZGIwMmFmODE2YzJkZjlhYWQ4NWJmMjgxMzI4YzM0ZDYwMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC6DiGgH2gAyMzY5NzcwNzc5Ojk5OGZjYjUzMGNjMTI5YzNhYTZhY2NkMjc5M2NkZTc5NjE4YzE3MGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a95fddb02af816c2df9aad85bf281328c34d6021", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a95fddb02af816c2df9aad85bf281328c34d6021", "committedDate": "2020-01-31T20:12:28Z", "message": "add namespace offload policies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a76cbee1d0a8a87f46da1857ff61aaf4132e16", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/72a76cbee1d0a8a87f46da1857ff61aaf4132e16", "committedDate": "2020-01-31T20:24:29Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5caac00317de3e111aeaeda01abdc43da38f917", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/e5caac00317de3e111aeaeda01abdc43da38f917", "committedDate": "2020-01-31T20:37:07Z", "message": "add namespace offload policies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f23cd7918191e5bbe8660584e76ac09b92dea2dc", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/f23cd7918191e5bbe8660584e76ac09b92dea2dc", "committedDate": "2020-01-31T20:37:07Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/02215a91d0c36dc0a83cfb2d596d1a17fa674839", "committedDate": "2020-01-31T20:42:12Z", "message": "Merge remote-tracking branch 'origin/namespace-level-offloader' into namespace-level-offloader\n\n# Conflicts:\n#\tpulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java\n#\tpulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODU4MDU1", "url": "https://github.com/apache/pulsar/pull/6183#pullrequestreview-351858055", "createdAt": "2020-02-01T02:04:54Z", "commit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjowNDo1NFrOFkb5aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMzowOTowNlrOFkcHZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MDEyMQ==", "bodyText": "Add license header here.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373750121", "createdAt": "2020-02-01T02:04:54Z", "author": {"login": "codelipenghui"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/OffloadPolicies.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package org.apache.pulsar.common.policies.data;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTI4Nw==", "bodyText": "Broker already have namespace policies caches, don't need to get it by admin client.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751287", "createdAt": "2020-02-01T02:22:21Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTQyMA==", "bodyText": "Since the OffloadPolicies added, i think we can change this method to createManagedLedgerOffloader(OffloadPolicies offloadPolicies). For default offloader, just convert serverConfiguration to the OffloadPolicies.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751420", "createdAt": "2020-02-01T02:24:59Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());\n+            return getManagedLedgerOffloaderByPolicies(offloadPolicies);\n+        } catch (Exception e) {\n+            LOG.error(\"Failed to get ledgerOffloader for namespaceName {}\", namespaceName, e);\n+            return new NullLedgerOffloader();\n+        }\n     }\n \n-    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf)\n+    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf, OffloadPolicies offloadPolicies)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTU2MQ==", "bodyText": "Keep log level to info, we don't need to warn users when they have not enable the offloader.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751561", "createdAt": "2020-02-01T02:27:46Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -785,12 +809,13 @@ public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfigur\n                             LedgerOffloader.METADATA_SOFTWARE_VERSION_KEY.toLowerCase(), PulsarVersion.getVersion(),\n                             LedgerOffloader.METADATA_SOFTWARE_GITSHA_KEY.toLowerCase(), PulsarVersion.getGitSha()\n                         ),\n-                        getOffloaderScheduler(conf));\n+                        getOffloaderScheduler(conf),\n+                        offloadPolicies);\n                 } catch (IOException ioe) {\n                     throw new PulsarServerException(ioe.getMessage(), ioe.getCause());\n                 }\n             } else {\n-                LOG.info(\"No ledger offloader configured, using NULL instance\");\n+                LOG.warn(\"No ledger offloader configured, using NULL instance\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTY5Ng==", "bodyText": "And current method checks the conf.getManagedLedgerOffloadDriver() is not blank, users may disable the default offloader but enable it at namespace level.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751696", "createdAt": "2020-02-01T02:29:51Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());\n+            return getManagedLedgerOffloaderByPolicies(offloadPolicies);\n+        } catch (Exception e) {\n+            LOG.error(\"Failed to get ledgerOffloader for namespaceName {}\", namespaceName, e);\n+            return new NullLedgerOffloader();\n+        }\n     }\n \n-    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf)\n+    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf, OffloadPolicies offloadPolicies)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTQyMA=="}, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTk2Ng==", "bodyText": "Looks duplicated", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751966", "createdAt": "2020-02-01T02:35:11Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -34,6 +34,8 @@\n import org.apache.pulsar.common.policies.data.BundlesData;\n import org.apache.pulsar.common.policies.data.DispatchRate;\n import org.apache.pulsar.common.policies.data.DelayedDeliveryPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTk3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set the offload configuration for all the topics on a namespace.\n          \n          \n            \n                 * Set the offload configuration for all the topics in a namespace.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751979", "createdAt": "2020-02-01T02:35:31Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -1654,4 +1656,74 @@ boolean getIsAllowAutoUpdateSchema(String namespace)\n      */\n     void setIsAllowAutoUpdateSchema(String namespace, boolean isAllowAutoUpdateSchema)\n             throws PulsarAdminException;\n+\n+    /**\n+     * Set the offload configuration for all the topics on a namespace.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjAxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set the offload configuration on a namespace. This operation requires Pulsar super-user access.\n          \n          \n            \n                 * Set the offload configuration in a namespace. This operation requires Pulsar super-user access.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373752014", "createdAt": "2020-02-01T02:36:03Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -1654,4 +1656,74 @@ boolean getIsAllowAutoUpdateSchema(String namespace)\n      */\n     void setIsAllowAutoUpdateSchema(String namespace, boolean isAllowAutoUpdateSchema)\n             throws PulsarAdminException;\n+\n+    /**\n+     * Set the offload configuration for all the topics on a namespace.\n+     * <p/>\n+     * Set the offload configuration on a namespace. This operation requires Pulsar super-user access.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjA5Mg==", "bodyText": "Looks duplicated", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373752092", "createdAt": "2020-02-01T02:37:19Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -41,6 +43,8 @@\n import org.apache.pulsar.common.policies.data.BundlesData;\n import org.apache.pulsar.common.policies.data.DispatchRate;\n import org.apache.pulsar.common.policies.data.DelayedDeliveryPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjkwOA==", "bodyText": "I think not correct here, is the MAX_* is limit the max available value? or a default value. From the logic, it is a default value.\nIf used for default value, it's better named DEFAULT_BLOCK_SIZE_IN_BYTES and DEFAULT_READ_BUFFER_SIZE_IN_BYTES.\nAnd we'd better throw exceptions when the blockSize and readBufferSize user specify is a non-negative value or 0. because offloader can't uses 0 value or a  negative value. If users don't want modify this value, empty maxBlockSizeStr and readBufferSizeStr is fine.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373752908", "createdAt": "2020-02-01T02:53:00Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -1287,6 +1291,106 @@ void run() throws PulsarAdminException {\n         }\n     }\n \n+    @Parameters(commandDescription = \"Set the offload policies for a namespace\")\n+    private class SetOffload extends CliCommand {\n+        @Parameter(description = \"tenant/namespace\", required = true)\n+        private java.util.List<String> params;\n+\n+        @Parameter(\n+                names = {\"--region\", \"-r\"},\n+                description = \"The long term storage region, \" +\n+                        \"default is s3ManagedLedgerOffloadRegion or gcsManagedLedgerOffloadRegion in broker.conf\",\n+                required = false)\n+        private String region;\n+\n+        @Parameter(\n+                names = {\"--bucket\", \"-b\"},\n+                description = \"Bucket to place offloaded ledger into\",\n+                required = true)\n+        private String bucket;\n+\n+        @Parameter(\n+                names = {\"--endpoint\", \"-e\"},\n+                description = \"Alternative endpoint to connect to, \" +\n+                        \"s3 default is s3ManagedLedgerOffloadServiceEndpoint in broker.conf\",\n+                required = false)\n+        private String endpoint;\n+\n+        @Parameter(\n+                names = {\"--maxBlockSize\", \"-mbs\"},\n+                description = \"Max block size (eg: 32M, 64M), default is 64MB\",\n+                required = false)\n+        private String maxBlockSizeStr;\n+\n+        @Parameter(\n+                names = {\"--readBufferSize\", \"-rbs\"},\n+                description = \"Read buffer size (eg: 1M, 5M), default is 1MB\",\n+                required = false)\n+        private String readBufferSizeStr;\n+\n+        private final String[] DRIVER_NAMES = {\"S3\", \"aws-s3\", \"google-cloud-storage\"};\n+\n+        public boolean isS3Driver(String driver) {\n+            if (StringUtils.isEmpty(driver)) {\n+                return false;\n+            }\n+            return driver.equalsIgnoreCase(DRIVER_NAMES[0]) || driver.equalsIgnoreCase(DRIVER_NAMES[1]);\n+        }\n+\n+        @Override\n+        void run() throws PulsarAdminException {\n+            String namespace = validateNamespace(params);\n+\n+            String offloadDriver = admin.brokers().getRuntimeConfigurations().get(\"managedLedgerOffloadDriver\");\n+            if (isS3Driver(offloadDriver) && Strings.isNullOrEmpty(region) && Strings.isNullOrEmpty(endpoint)) {\n+                throw new ParameterException(\n+                        \"Either s3ManagedLedgerOffloadRegion or s3ManagedLedgerOffloadServiceEndpoint must be set\"\n+                                + \" if s3 offload enabled\");\n+            }\n+\n+            long maxBlockSize = 0;\n+            if (StringUtils.isNotEmpty(maxBlockSizeStr)) {\n+                maxBlockSize = validateSizeString(maxBlockSizeStr);\n+            }\n+            long readBufferSize = 0;\n+            if (StringUtils.isNotEmpty(readBufferSizeStr)) {\n+                readBufferSize = validateSizeString(readBufferSizeStr);\n+            }\n+\n+            final int maxBlockSizeInBytes;\n+            if (maxBlockSize > 0 && maxBlockSize <= Integer.MAX_VALUE) {\n+                maxBlockSizeInBytes = new Long(maxBlockSize).intValue();\n+            } else {\n+                maxBlockSizeInBytes = OffloadPolicies.MAX_BLOCK_SIZE_IN_BYTES;\n+            }\n+\n+            final int readBufferSizeInBytes;\n+            if (readBufferSize > 0 && readBufferSize <= Integer.MAX_VALUE) {\n+                readBufferSizeInBytes = new Long(readBufferSize).intValue();\n+            } else {\n+                readBufferSizeInBytes = OffloadPolicies.READ_BUFFER_SIZE_IN_BYTES;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzEzNQ==", "bodyText": "Same as PulsarService, use initManagedLedgerOffloader(OffloadPolicies offloadPolicies). For default offloader, just convert serverConfiguration to the OffloadPolicies.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373753135", "createdAt": "2020-02-01T02:57:16Z", "author": {"login": "codelipenghui"}, "path": "pulsar-sql/presto-pulsar/src/main/java/org/apache/pulsar/sql/presto/PulsarConnectorCache.java", "diffHunk": "@@ -123,7 +132,7 @@ private synchronized OrderedScheduler getOffloaderScheduler(PulsarConnectorConfi\n         return this.offloaderScheduler;\n     }\n \n-    private LedgerOffloader initManagedLedgerOffloader(PulsarConnectorConfig conf) {\n+    private LedgerOffloader initManagedLedgerOffloader(PulsarConnectorConfig conf, OffloadPolicies offloadPolicies) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzcwMw==", "bodyText": "I'm a little worried about uses OffloadPolicies as a key, because is users frequently modified the policy, there will be some invalid Offloader objects here.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373753703", "createdAt": "2020-02-01T03:09:06Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -162,7 +165,8 @@\n     private ScheduledExecutorService compactorExecutor;\n     private OrderedScheduler offloaderScheduler;\n     private Offloaders offloaderManager = new Offloaders();\n-    private LedgerOffloader offloader;\n+    private LedgerOffloader defaultOffloader;\n+    private Map<OffloadPolicies, LedgerOffloader> ledgerOffloaderMap = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b43a5f3c47466e8d06c7b431acc661d455377bf8", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/b43a5f3c47466e8d06c7b431acc661d455377bf8", "committedDate": "2020-02-05T06:05:45Z", "message": "1. Change the LedgerOffloader cache in PulsarService.java;\n2. Add methods for interface LedgerOffloader, add the getOffloadPolicies method, add close method;\n2. Unified the offload policies configuration type, use the OffloadPolicies instead of TieredStorageConfigurationData and FileSystemConfigurationData."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9874009aab24e4d0a5c8dd6bf16cfc82d44f8600", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/9874009aab24e4d0a5c8dd6bf16cfc82d44f8600", "committedDate": "2020-02-05T13:23:46Z", "message": "add licensed header for CredentialsUtil"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNzQ0NDUz", "url": "https://github.com/apache/pulsar/pull/6183#pullrequestreview-353744453", "createdAt": "2020-02-05T14:13:24Z", "commit": {"oid": "9874009aab24e4d0a5c8dd6bf16cfc82d44f8600"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a898f240997d4e2746a2f9d8dbc468149502b3f3", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a898f240997d4e2746a2f9d8dbc468149502b3f3", "committedDate": "2020-02-05T14:29:45Z", "message": "1. modify the `set-offload` to `set-offload-policies`;\n2. modify the `get-offload` to `get-offload-policies`;\n3. add the OffloadPolicies validate in NamespacesBase."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/0a4d81ee6c58551ee6029f9381931eac5fa8646e", "committedDate": "2020-02-06T03:48:45Z", "message": "checkstyle fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODcxNzA2", "url": "https://github.com/apache/pulsar/pull/6183#pullrequestreview-354871706", "createdAt": "2020-02-07T00:49:01Z", "commit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDo0OTowMVrOFmvJkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDo1MTozMlrOFmvMJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MjcwNw==", "bodyText": "nit: ideally we should try to implement this in an asynchronous way.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r376162707", "createdAt": "2020-02-07T00:49:01Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -2188,5 +2189,66 @@ protected void internalSetIsAllowAutoUpdateSchema(boolean isAllowAutoUpdateSchem\n         }\n     }\n \n+    protected void internalSetOffloadPolicies(OffloadPolicies offloadPolicies) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MzM2Nw==", "bodyText": "412 is thrown for the following conditions:\n\ndriver is not supported.\nbucket is not valid.\noffload policies is empty.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r376163367", "createdAt": "2020-02-07T00:51:32Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "diffHunk": "@@ -1076,5 +1077,31 @@ public void setSchemaValidtionEnforced(@PathParam(\"tenant\") String tenant,\n         internalSetSchemaValidationEnforced(schemaValidationEnforced);\n     }\n \n+    @POST\n+    @Path(\"/{tenant}/{namespace}/offloadPolicies\")\n+    @ApiOperation(value = \" Set offload configuration on a namespace.\")\n+    @ApiResponses(value = {\n+            @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Namespace does not exist\"),\n+            @ApiResponse(code = 409, message = \"Concurrent modification\"),\n+            @ApiResponse(code = 412, message = \"Bucket must be specified\") })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b45afe9a2e13540c7db621a331ba0e7b1b20e9fd", "author": {"user": {"login": "sijie", "name": "Sijie Guo"}}, "url": "https://github.com/apache/pulsar/commit/b45afe9a2e13540c7db621a331ba0e7b1b20e9fd", "committedDate": "2020-02-07T00:55:41Z", "message": "Merge remote-tracking branch 'apache/master' into namespace-level-offloader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4300e2242d5ab5260e402c01e2847cd117afeec7", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/4300e2242d5ab5260e402c01e2847cd117afeec7", "committedDate": "2020-02-08T14:59:09Z", "message": "1. modify internalSetOffloadPolicies method to asynchronous;\n2. modify setOffloadPolicies api error message."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b4e55dfbd500dfb1651e30151c13ce98366e5ff", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/1b4e55dfbd500dfb1651e30151c13ce98366e5ff", "committedDate": "2020-02-08T14:59:47Z", "message": "Merge branch 'namespace-level-offloader' of https://github.com/gaoran10/pulsar into namespace-level-offloader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fc437eec73d73d79cc531b511bf7c12c8f04827", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/9fc437eec73d73d79cc531b511bf7c12c8f04827", "committedDate": "2020-02-09T04:04:32Z", "message": "exception process fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1Njc5MjMx", "url": "https://github.com/apache/pulsar/pull/6183#pullrequestreview-355679231", "createdAt": "2020-02-10T03:46:40Z", "commit": {"oid": "9fc437eec73d73d79cc531b511bf7c12c8f04827"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "998fcb530cc129c3aa6accd2793cde79618c170c", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/998fcb530cc129c3aa6accd2793cde79618c170c", "committedDate": "2020-02-10T09:52:17Z", "message": "fix unit test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1363, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}