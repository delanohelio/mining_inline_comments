{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDU0NTY2", "number": 6478, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1ODoyOFrODlpLBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1OTo0NlrODlpNXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzk4NDcxOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1ODoyOFrOFypnsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMTo0OTowNlrOFyqu7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1NTAyNg==", "bodyText": "@codelipenghui why it is globalZk() here?", "url": "https://github.com/apache/pulsar/pull/6478#discussion_r388655026", "createdAt": "2020-03-06T00:58:28Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -707,4 +709,93 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n         partitionedTopics.sort(null);\n         return partitionedTopics;\n     }\n+\n+    protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n+        try {\n+            validateAdminAccessForTenant(topicName.getTenant());\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to create partitioned topic {}\", clientAppId(), topicName, e);\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+            return;\n+        }\n+        if (numPartitions <= 0) {\n+            asyncResponse.resume(new RestException(Status.NOT_ACCEPTABLE, \"Number of partitions should be more than 0\"));\n+            return;\n+        }\n+        checkTopicExistsAsync(topicName).thenAccept(exists -> {\n+            if (exists) {\n+                log.warn(\"[{}] Failed to create already existing topic {}\", clientAppId(), topicName);\n+                asyncResponse.resume(new RestException(Status.CONFLICT, \"This topic already exists\"));\n+            } else {\n+                try {\n+                    String path = ZkAdminPaths.partitionedTopicPath(topicName);\n+                    byte[] data = jsonMapper().writeValueAsBytes(new PartitionedTopicMetadata(numPartitions));\n+                    zkCreateOptimisticAsync(globalZk(), path, data, (rc, s, o, s1) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY3MzI2Mw==", "bodyText": "The partitioned topic metadata is stored in the global zookeeper.", "url": "https://github.com/apache/pulsar/pull/6478#discussion_r388673263", "createdAt": "2020-03-06T01:49:06Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -707,4 +709,93 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n         partitionedTopics.sort(null);\n         return partitionedTopics;\n     }\n+\n+    protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n+        try {\n+            validateAdminAccessForTenant(topicName.getTenant());\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to create partitioned topic {}\", clientAppId(), topicName, e);\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+            return;\n+        }\n+        if (numPartitions <= 0) {\n+            asyncResponse.resume(new RestException(Status.NOT_ACCEPTABLE, \"Number of partitions should be more than 0\"));\n+            return;\n+        }\n+        checkTopicExistsAsync(topicName).thenAccept(exists -> {\n+            if (exists) {\n+                log.warn(\"[{}] Failed to create already existing topic {}\", clientAppId(), topicName);\n+                asyncResponse.resume(new RestException(Status.CONFLICT, \"This topic already exists\"));\n+            } else {\n+                try {\n+                    String path = ZkAdminPaths.partitionedTopicPath(topicName);\n+                    byte[] data = jsonMapper().writeValueAsBytes(new PartitionedTopicMetadata(numPartitions));\n+                    zkCreateOptimisticAsync(globalZk(), path, data, (rc, s, o, s1) -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1NTAyNg=="}, "originalCommit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzk4NTU2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1ODo0MFrOFypoPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1ODo0MFrOFypoPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1NTE2NA==", "bodyText": "same comment as above", "url": "https://github.com/apache/pulsar/pull/6478#discussion_r388655164", "createdAt": "2020-03-06T00:58:40Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -707,4 +709,93 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n         partitionedTopics.sort(null);\n         return partitionedTopics;\n     }\n+\n+    protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n+        try {\n+            validateAdminAccessForTenant(topicName.getTenant());\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to create partitioned topic {}\", clientAppId(), topicName, e);\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+            return;\n+        }\n+        if (numPartitions <= 0) {\n+            asyncResponse.resume(new RestException(Status.NOT_ACCEPTABLE, \"Number of partitions should be more than 0\"));\n+            return;\n+        }\n+        checkTopicExistsAsync(topicName).thenAccept(exists -> {\n+            if (exists) {\n+                log.warn(\"[{}] Failed to create already existing topic {}\", clientAppId(), topicName);\n+                asyncResponse.resume(new RestException(Status.CONFLICT, \"This topic already exists\"));\n+            } else {\n+                try {\n+                    String path = ZkAdminPaths.partitionedTopicPath(topicName);\n+                    byte[] data = jsonMapper().writeValueAsBytes(new PartitionedTopicMetadata(numPartitions));\n+                    zkCreateOptimisticAsync(globalZk(), path, data, (rc, s, o, s1) -> {\n+                        if (KeeperException.Code.OK.intValue() == rc) {\n+                            if (topicName.isPersistent()) {\n+                                tryCreatePartitionsAsync(numPartitions);\n+                            }\n+                            globalZk().sync(path, (rc2, s2, ctx) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzk5MDcwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1OTo0NlrOFyprKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1OTo0NlrOFyprKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1NTkxNA==", "bodyText": "This should happen in the callback of tryCreatePartitionAsync.", "url": "https://github.com/apache/pulsar/pull/6478#discussion_r388655914", "createdAt": "2020-03-06T00:59:46Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -707,4 +709,93 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n         partitionedTopics.sort(null);\n         return partitionedTopics;\n     }\n+\n+    protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n+        try {\n+            validateAdminAccessForTenant(topicName.getTenant());\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to create partitioned topic {}\", clientAppId(), topicName, e);\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+            return;\n+        }\n+        if (numPartitions <= 0) {\n+            asyncResponse.resume(new RestException(Status.NOT_ACCEPTABLE, \"Number of partitions should be more than 0\"));\n+            return;\n+        }\n+        checkTopicExistsAsync(topicName).thenAccept(exists -> {\n+            if (exists) {\n+                log.warn(\"[{}] Failed to create already existing topic {}\", clientAppId(), topicName);\n+                asyncResponse.resume(new RestException(Status.CONFLICT, \"This topic already exists\"));\n+            } else {\n+                try {\n+                    String path = ZkAdminPaths.partitionedTopicPath(topicName);\n+                    byte[] data = jsonMapper().writeValueAsBytes(new PartitionedTopicMetadata(numPartitions));\n+                    zkCreateOptimisticAsync(globalZk(), path, data, (rc, s, o, s1) -> {\n+                        if (KeeperException.Code.OK.intValue() == rc) {\n+                            if (topicName.isPersistent()) {\n+                                tryCreatePartitionsAsync(numPartitions);\n+                            }\n+                            globalZk().sync(path, (rc2, s2, ctx) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1924, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}