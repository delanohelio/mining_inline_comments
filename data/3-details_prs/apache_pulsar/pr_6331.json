{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NjM3NTgx", "number": 6331, "title": "[Issue 2912][pulsar-admin] add get-message-by-id cmd into pulsar-admin", "bodyText": "Fixes #2912\nMotivation\nAdding a new command get-message-by-id to the pulsar-admin which allows user to look at a single message by providing ledger id and entry id.\nModifications\n\npulsar-admin includes the new command get-message-by-id\npulsar-broker v1/v2 apis to handle the get-message-by-id request from pulsar-admin\nmanagedCursor to read from ledgers with given ledger id and entry id\n\nVerifying this change\n\n Make sure that the change passes the CI checks.\n\n(Please pick either of the following options)\nThis change is a trivial rework / code cleanup without any test coverage.\n(or)\nThis change is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end deployment with large payloads (10MB)\nExtended integration test for recovery after broker failure\n\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): no\nThe public API:  no\nThe schema: no\nThe default values of configurations: no\nThe wire protocol: no\nThe rest endpoints: yes\nThe admin cli options: yes\nAnything that affects deployment: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)\nIf a feature is not applicable for documentation, explain why?\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation", "createdAt": "2020-02-15T00:54:30Z", "url": "https://github.com/apache/pulsar/pull/6331", "merged": true, "mergeCommit": {"oid": "d3ac61f1d4861b8a7d842763facf9e1058bcdda2"}, "closed": true, "closedAt": "2020-04-22T09:13:21Z", "author": {"login": "nlu90"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcEZO8sAH2gAyMzc1NjM3NTgxOjI1ZGY5OWUyOTBmZWYwNmFmOGJiMWJkNTIxMWUxNzg3Y2YxYTZkMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaEpKxAFqTM5Nzk5NjE1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "25df99e290fef06af8bb1bd5211e1787cf1a6d19", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/25df99e290fef06af8bb1bd5211e1787cf1a6d19", "committedDate": "2020-02-15T00:45:44Z", "message": "add get-message-by-id cmd into pulsar-admin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/532a76defbb990fabecc037a3a567d322d269c22", "committedDate": "2020-02-15T06:40:27Z", "message": "remove subscription name parameter from request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MzMxNDQ1", "url": "https://github.com/apache/pulsar/pull/6331#pullrequestreview-359331445", "createdAt": "2020-02-15T07:12:24Z", "commit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxMjoyNFrOFqL0Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxNjoyMlrOFqL5vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3ODEzMA==", "bodyText": "According to what we discussed before, We don't need to specify a subscription name for getting a message by ID. So I think we can get a message from ManagedLedger directly by https://github.com/apache/pulsar/blob/master/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java#L1494. So that we don't need to create a one-time subscription.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379778130", "createdAt": "2020-02-15T07:12:24Z", "author": {"login": "codelipenghui"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedCursor.java", "diffHunk": "@@ -131,6 +131,22 @@ Entry getNthEntry(int n, IndividualDeletedEntries deletedEntries)\n     void asyncGetNthEntry(int n, IndividualDeletedEntries deletedEntries, ReadEntryCallback callback,\n             Object ctx);\n \n+\n+    /**\n+     * Asynchronously get a message by its id.\n+     *\n+     * @param ledgerId\n+     *              ledger id\n+     * @param entryId\n+     *              entry id\n+     * @param deletedEntries\n+     *              skip individual deleted entries\n+     * @param callback\n+     * @param ctx\n+     */\n+    void asyncGetMessageById(long ledgerId, long entryId, IndividualDeletedEntries deletedEntries,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3ODQ2Nw==", "bodyText": "Same as comments above", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379778467", "createdAt": "2020-02-15T07:13:22Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1403,21 +1403,47 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n-    protected Response internalPeekNthMessage(String subName, int messagePosition, boolean authoritative) {\n-        if (topicName.isGlobal()) {\n-            validateGlobalNamespaceOwnership(namespaceName);\n-        }\n-        PartitionedTopicMetadata partitionMetadata = getPartitionedTopicMetadata(topicName, authoritative, false);\n-        if (partitionMetadata.partitions > 0) {\n-            throw new RestException(Status.METHOD_NOT_ALLOWED, \"Peek messages on a partitioned topic is not allowed\");\n+    protected Response internalGetMessageById(long ledgerId, long entryId, boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        String subName = \"get-message-id-\" + UUID.randomUUID().toString();\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+\n+        Entry entry = null;\n+        try {\n+            PersistentSubscription subscription =\n+                    (PersistentSubscription) topic.createSubscription(subName, InitialPosition.Earliest, false).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3OTUxOQ==", "bodyText": "If we can use ManagedLedger directly, this method also can be removed.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379779519", "createdAt": "2020-02-15T07:16:22Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/Subscription.java", "diffHunk": "@@ -79,6 +80,8 @@ default long getNumberOfEntriesDelayed() {\n \n     CompletableFuture<Entry> peekNthMessage(int messagePosition);\n \n+    CompletableFuture<Entry> getMessageById(long ledgerId, long entryId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feced5036c8fcb2b743a898ca3d2152ccab6d1b4", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/feced5036c8fcb2b743a898ca3d2152ccab6d1b4", "committedDate": "2020-02-15T19:55:14Z", "message": "use ledger to get entry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7ff07042b02ba426df06bc60d818c7d38399006", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/a7ff07042b02ba426df06bc60d818c7d38399006", "committedDate": "2020-02-17T05:27:33Z", "message": "remove asyncGetMessageById"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTIwOTA0", "url": "https://github.com/apache/pulsar/pull/6331#pullrequestreview-359520904", "createdAt": "2020-02-17T07:03:48Z", "commit": {"oid": "a7ff07042b02ba426df06bc60d818c7d38399006"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzowMzo0OFrOFqaEJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzowMzo0OFrOFqaEJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAxMTU1OA==", "bodyText": "Sorry for being late in reviewing this pull request. I would suggest implementing this using AsyncResponse. We have tried to move away from using sync methods.\nYou can check internalCreateSubscription on how to use AsyncResponse. \n  \n    \n      pulsar/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java\n    \n    \n         Line 1305\n      in\n      df15210\n    \n    \n    \n    \n\n        \n          \n           protected void internalCreateSubscription(AsyncResponse asyncResponse, String subscriptionName,", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380011558", "createdAt": "2020-02-17T07:03:48Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1403,21 +1404,51 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n-    protected Response internalPeekNthMessage(String subName, int messagePosition, boolean authoritative) {\n-        if (topicName.isGlobal()) {\n-            validateGlobalNamespaceOwnership(namespaceName);\n-        }\n-        PartitionedTopicMetadata partitionMetadata = getPartitionedTopicMetadata(topicName, authoritative, false);\n-        if (partitionMetadata.partitions > 0) {\n-            throw new RestException(Status.METHOD_NOT_ALLOWED, \"Peek messages on a partitioned topic is not allowed\");\n+    protected Response internalGetMessageById(long ledgerId, long entryId, boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;\n+        try {\n+            CompletableFuture<Entry> future = new CompletableFuture<>();\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    future.completeExceptionally(exception);\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    future.complete(entry);\n+                }\n+            }, null);\n+\n+            entry = future.get(1000, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ff07042b02ba426df06bc60d818c7d38399006"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec12604f2db0116bfd53ee621d4f8b8b348dbbdd", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/ec12604f2db0116bfd53ee621d4f8b8b348dbbdd", "committedDate": "2020-02-18T01:24:18Z", "message": "use asyncResponse to generate response and add doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f6d4b1dc7bac1df60306696f1f165f96f820bcd", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/7f6d4b1dc7bac1df60306696f1f165f96f820bcd", "committedDate": "2020-02-18T01:30:45Z", "message": "add doc to reference-pulsar-admin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ebd9c969d6e01583829112e443512f75411f852", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/5ebd9c969d6e01583829112e443512f75411f852", "committedDate": "2020-02-18T01:41:13Z", "message": "Merge branch 'master' into neng/add-get-message-by-id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDM3NDMx", "url": "https://github.com/apache/pulsar/pull/6331#pullrequestreview-360037431", "createdAt": "2020-02-18T02:24:20Z", "commit": {"oid": "5ebd9c969d6e01583829112e443512f75411f852"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjoyNDoyMVrOFqzZdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjoyNzoxNlrOFqzbyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNjYxNQ==", "bodyText": "I don't think this is needed any more.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380426615", "createdAt": "2020-02-18T02:24:21Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,43 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ebd9c969d6e01583829112e443512f75411f852"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNzIxMA==", "bodyText": "move this finally block to line 1520", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380427210", "createdAt": "2020-02-18T02:27:16Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,43 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;\n+        try {\n+            CompletableFuture<Entry> future = new CompletableFuture<>();\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    asyncResponse.resume(new RestException(exception));\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    try {\n+                        asyncResponse.resume(generateResponseWithEntry(entry));\n+                    } catch (IOException exception) {\n+                        asyncResponse.resume(new RestException(exception));\n+                    }\n+                }\n+            }, null);\n+        } catch (NullPointerException npe) {\n+            asyncResponse.resume(new RestException(Status.NOT_FOUND, \"Message not found\"));\n+        } catch (Exception exception) {\n+            log.error(\"[{}] Failed to get message with ledgerId {} entryId {} from {}\",\n+                    clientAppId(), ledgerId, entryId, topicName, exception);\n+            asyncResponse.resume(new RestException(exception));\n+        } finally {\n+            if (entry != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ebd9c969d6e01583829112e443512f75411f852"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d1c1e63255a4873a76c019b18be0cd41d1f012b", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/9d1c1e63255a4873a76c019b18be0cd41d1f012b", "committedDate": "2020-02-18T02:32:02Z", "message": "clean up method internalGetMessageById"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "882db05a85ab76bbebbedbcd641f9850a57b73f8", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/882db05a85ab76bbebbedbcd641f9850a57b73f8", "committedDate": "2020-02-18T02:32:36Z", "message": "Merge branch 'neng/add-get-message-by-id' of https://github.com/streamnative/pulsar into neng/add-get-message-by-id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMTA2OTQ5", "url": "https://github.com/apache/pulsar/pull/6331#pullrequestreview-360106949", "createdAt": "2020-02-18T07:04:39Z", "commit": {"oid": "882db05a85ab76bbebbedbcd641f9850a57b73f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNzowNDozOVrOFq3PqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNzowNDozOVrOFq3PqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ4OTY0MA==", "bodyText": "I think we need to release the Entry it after using it.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380489640", "createdAt": "2020-02-18T07:04:39Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,37 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        try {\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    asyncResponse.resume(new RestException(exception));\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    try {\n+                        asyncResponse.resume(generateResponseWithEntry(entry));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "882db05a85ab76bbebbedbcd641f9850a57b73f8"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b475e8fae562cc653c2c552cfba5269fe93fb652", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/b475e8fae562cc653c2c552cfba5269fe93fb652", "committedDate": "2020-02-18T17:36:30Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f77268764ba1a655b3d77ce001ec9728d039e32d", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/f77268764ba1a655b3d77ce001ec9728d039e32d", "committedDate": "2020-04-02T06:58:27Z", "message": "Merge branch 'master' into neng/add-get-message-by-id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTYwODYz", "url": "https://github.com/apache/pulsar/pull/6331#pullrequestreview-386160863", "createdAt": "2020-04-02T07:15:51Z", "commit": {"oid": "f77268764ba1a655b3d77ce001ec9728d039e32d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7e89a32af57e6f17d0b11d885ad9196d0ac6a2e", "author": {"user": {"login": "sijie", "name": "Sijie Guo"}}, "url": "https://github.com/apache/pulsar/commit/b7e89a32af57e6f17d0b11d885ad9196d0ac6a2e", "committedDate": "2020-04-07T17:37:07Z", "message": "Merge remote-tracking branch 'apache/master' into neng/add-get-message-by-id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTk2MTUz", "url": "https://github.com/apache/pulsar/pull/6331#pullrequestreview-397996153", "createdAt": "2020-04-22T09:12:42Z", "commit": {"oid": "b7e89a32af57e6f17d0b11d885ad9196d0ac6a2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 56, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}