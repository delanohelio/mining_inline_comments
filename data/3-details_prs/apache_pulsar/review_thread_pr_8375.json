{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5OTcwODA0", "number": 8375, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyMToxNVrOEyw7lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzozMzo0M1rOEzTLSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY1OTQyOnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyMToxNVrOHplUmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyMToxNVrOHplUmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2NTE0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can view the following statistics of a given non-partitioned topic.\n          \n          \n            \n            You can check the following statistics of a given non-partitioned topic.\n          \n      \n    \n    \n  \n\ncheck through the whole updates", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513365145", "createdAt": "2020-10-28T11:21:15Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -117,137 +112,132 @@ $ pulsar-admin persistent revoke-permission \\\n }\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n String role = \"test-role\";\n-admin.persistentTopics().revokePermissions(topic, role);\n+admin.topics().revokePermissions(topic, role);\n ```\n \n-### Delete topic\n-\n-It deletes a topic. The topic cannot be deleted if there's any active subscription or producers connected to it.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n+### Delete topic\n \n-Topic can be deleted using [`delete`](../../reference/CliTools#delete) command.\n+You can delete a topic in the following ways. You cannot delete a topic if any active subscription or producers is connected to the topic.\n \n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent delete \\\n+$ pulsar-admin topics delete \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic|operation/deleteTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic|operation/deleteTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().delete(topic);\n+admin.topics().delete(topic);\n ```\n \n-### Unload topic\n-\n-It unloads a topic.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n-\n-Topic can be unloaded using [`unload`](../../reference/CliTools#unload) command.\n+### Unload topic\n \n+You can unload a topic in the following ways.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent unload \\\n+$ pulsar-admin topics unload \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|PUT|/admin/v2/persistent/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|PUT|/admin/v2/topics/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().unload(topic);\n+admin.topics().unload(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get stats\n \n-It shows current statistics of a given non-partitioned topic.\n+You can view the following statistics of a given non-partitioned topic.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 245}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY2MzYwOnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyMjoyOFrOHplXIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyMjoyOFrOHplXIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2NTc5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              -   **averageMsgSize**: The average size(in bytes) of messages published within the last interval.\n          \n          \n            \n              -   **averageMsgSize**: The average size (in bytes) of messages published within the last interval.", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513365794", "createdAt": "2020-10-28T11:22:28Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -117,137 +112,132 @@ $ pulsar-admin persistent revoke-permission \\\n }\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n String role = \"test-role\";\n-admin.persistentTopics().revokePermissions(topic, role);\n+admin.topics().revokePermissions(topic, role);\n ```\n \n-### Delete topic\n-\n-It deletes a topic. The topic cannot be deleted if there's any active subscription or producers connected to it.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n+### Delete topic\n \n-Topic can be deleted using [`delete`](../../reference/CliTools#delete) command.\n+You can delete a topic in the following ways. You cannot delete a topic if any active subscription or producers is connected to the topic.\n \n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent delete \\\n+$ pulsar-admin topics delete \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic|operation/deleteTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic|operation/deleteTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().delete(topic);\n+admin.topics().delete(topic);\n ```\n \n-### Unload topic\n-\n-It unloads a topic.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n-\n-Topic can be unloaded using [`unload`](../../reference/CliTools#unload) command.\n+### Unload topic\n \n+You can unload a topic in the following ways.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent unload \\\n+$ pulsar-admin topics unload \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|PUT|/admin/v2/persistent/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|PUT|/admin/v2/topics/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().unload(topic);\n+admin.topics().unload(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get stats\n \n-It shows current statistics of a given non-partitioned topic.\n+You can view the following statistics of a given non-partitioned topic.\n \n-  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second\n+  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second.\n \n-  -   **msgThroughputIn**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputIn**: The sum of all local and replication publishers' publish rates in bytes per second.\n \n-  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second\n+  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second.\n \n-  -   **msgThroughputOut**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputOut**: The sum of all local and replication consumers' dispatch rates in bytes per second.\n \n-  -   **averageMsgSize**: The average size in bytes of messages published within the last interval\n+  -   **averageMsgSize**: The average size(in bytes) of messages published within the last interval.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 260}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY3MjgxOnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyNTowM1rOHplcsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyNTowM1rOHplcsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2NzIxOQ==", "bodyText": "use the same expression: use \"msg/s\" and (bytes/s) or in use \"in messages per second\" \"in bytes per second\"", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513367219", "createdAt": "2020-10-28T11:25:03Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -117,137 +112,132 @@ $ pulsar-admin persistent revoke-permission \\\n }\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n String role = \"test-role\";\n-admin.persistentTopics().revokePermissions(topic, role);\n+admin.topics().revokePermissions(topic, role);\n ```\n \n-### Delete topic\n-\n-It deletes a topic. The topic cannot be deleted if there's any active subscription or producers connected to it.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n+### Delete topic\n \n-Topic can be deleted using [`delete`](../../reference/CliTools#delete) command.\n+You can delete a topic in the following ways. You cannot delete a topic if any active subscription or producers is connected to the topic.\n \n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent delete \\\n+$ pulsar-admin topics delete \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic|operation/deleteTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic|operation/deleteTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().delete(topic);\n+admin.topics().delete(topic);\n ```\n \n-### Unload topic\n-\n-It unloads a topic.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n-\n-Topic can be unloaded using [`unload`](../../reference/CliTools#unload) command.\n+### Unload topic\n \n+You can unload a topic in the following ways.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent unload \\\n+$ pulsar-admin topics unload \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|PUT|/admin/v2/persistent/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|PUT|/admin/v2/topics/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().unload(topic);\n+admin.topics().unload(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get stats\n \n-It shows current statistics of a given non-partitioned topic.\n+You can view the following statistics of a given non-partitioned topic.\n \n-  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second\n+  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second.\n \n-  -   **msgThroughputIn**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputIn**: The sum of all local and replication publishers' publish rates in bytes per second.\n \n-  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second\n+  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second.\n \n-  -   **msgThroughputOut**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputOut**: The sum of all local and replication consumers' dispatch rates in bytes per second.\n \n-  -   **averageMsgSize**: The average size in bytes of messages published within the last interval\n+  -   **averageMsgSize**: The average size(in bytes) of messages published within the last interval.\n \n-  -   **storageSize**: The sum of the ledgers' storage size for this topic. Space used to store the messages for the topic\n+  -   **storageSize**: The sum of the ledgers' storage size for this topic. The space used to store the messages for the topic.\n \n-  -   **publishers**: The list of all local publishers into the topic. There can be zero or thousands\n+  -   **publishers**: The list of all local publishers into the topic. The list ranges from zero to thousands.\n \n-      -   **msgRateIn**: Total rate of messages published by this publisher in messages per second \n+      -   **msgRateIn**: The total rate of messages published by this publisher in messages per second.\n \n-      -   **msgThroughputIn**: Total throughput of the messages published by this publisher in bytes per second\n+      -   **msgThroughputIn**: The total throughput of the messages published by this publisher in bytes per second.\n \n-      -   **averageMsgSize**: Average message size in bytes from this publisher within the last interval\n+      -   **averageMsgSize**: The average message size in bytes from this publisher within the last interval.\n \n-      -   **producerId**: Internal identifier for this producer on this topic\n+      -   **producerId**: The internal identifier for this producer on this topic.\n \n-      -   **producerName**: Internal identifier for this producer, generated by the client library\n+      -   **producerName**: The internal identifier for this producer, generated by the client library.\n \n-      -   **address**: IP address and source port for the connection of this producer\n+      -   **address**: The IP address and source port for the connection of this producer.\n \n-      -   **connectedSince**: Timestamp this producer was created or last reconnected\n+      -   **connectedSince**: The timestamp when this producer is created or reconnected last time.\n \n-  -   **subscriptions**: The list of all local subscriptions to the topic\n+  -   **subscriptions**: The list of all local subscriptions to the topic.\n \n-      -   **my-subscription**: The name of this subscription (client defined)\n+      -   **my-subscription**: The name of this subscription. It is defined by the client.\n \n-          -   **msgRateOut**: Total rate of messages delivered on this subscription (msg/s)\n+          -   **msgRateOut**: The total rate of messages delivered on this subscription (msg/s).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 296}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY3OTA5OnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyNjo0MFrOHplgTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyNjo0MFrOHplgTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2ODE0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            -   **availablePermits**: The number of messages this consumer has space for in the client library's listen queue. `0` means the client library's queue is full and `receive()` isn't being called. A nonzero value means this consumer is ready to be dispatched messages.\n          \n          \n            \n                            -   **availablePermits**: The number of messages that the consumer has space for in the client library's listen queue. `0` means the client library's queue is full and `receive()` isn't being called. A non-zero value means this consumer is ready for dispatched messages.", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513368142", "createdAt": "2020-10-28T11:26:40Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -117,137 +112,132 @@ $ pulsar-admin persistent revoke-permission \\\n }\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n String role = \"test-role\";\n-admin.persistentTopics().revokePermissions(topic, role);\n+admin.topics().revokePermissions(topic, role);\n ```\n \n-### Delete topic\n-\n-It deletes a topic. The topic cannot be deleted if there's any active subscription or producers connected to it.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n+### Delete topic\n \n-Topic can be deleted using [`delete`](../../reference/CliTools#delete) command.\n+You can delete a topic in the following ways. You cannot delete a topic if any active subscription or producers is connected to the topic.\n \n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent delete \\\n+$ pulsar-admin topics delete \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic|operation/deleteTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic|operation/deleteTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().delete(topic);\n+admin.topics().delete(topic);\n ```\n \n-### Unload topic\n-\n-It unloads a topic.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n-\n-Topic can be unloaded using [`unload`](../../reference/CliTools#unload) command.\n+### Unload topic\n \n+You can unload a topic in the following ways.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent unload \\\n+$ pulsar-admin topics unload \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|PUT|/admin/v2/persistent/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|PUT|/admin/v2/topics/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().unload(topic);\n+admin.topics().unload(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get stats\n \n-It shows current statistics of a given non-partitioned topic.\n+You can view the following statistics of a given non-partitioned topic.\n \n-  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second\n+  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second.\n \n-  -   **msgThroughputIn**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputIn**: The sum of all local and replication publishers' publish rates in bytes per second.\n \n-  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second\n+  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second.\n \n-  -   **msgThroughputOut**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputOut**: The sum of all local and replication consumers' dispatch rates in bytes per second.\n \n-  -   **averageMsgSize**: The average size in bytes of messages published within the last interval\n+  -   **averageMsgSize**: The average size(in bytes) of messages published within the last interval.\n \n-  -   **storageSize**: The sum of the ledgers' storage size for this topic. Space used to store the messages for the topic\n+  -   **storageSize**: The sum of the ledgers' storage size for this topic. The space used to store the messages for the topic.\n \n-  -   **publishers**: The list of all local publishers into the topic. There can be zero or thousands\n+  -   **publishers**: The list of all local publishers into the topic. The list ranges from zero to thousands.\n \n-      -   **msgRateIn**: Total rate of messages published by this publisher in messages per second \n+      -   **msgRateIn**: The total rate of messages published by this publisher in messages per second.\n \n-      -   **msgThroughputIn**: Total throughput of the messages published by this publisher in bytes per second\n+      -   **msgThroughputIn**: The total throughput of the messages published by this publisher in bytes per second.\n \n-      -   **averageMsgSize**: Average message size in bytes from this publisher within the last interval\n+      -   **averageMsgSize**: The average message size in bytes from this publisher within the last interval.\n \n-      -   **producerId**: Internal identifier for this producer on this topic\n+      -   **producerId**: The internal identifier for this producer on this topic.\n \n-      -   **producerName**: Internal identifier for this producer, generated by the client library\n+      -   **producerName**: The internal identifier for this producer, generated by the client library.\n \n-      -   **address**: IP address and source port for the connection of this producer\n+      -   **address**: The IP address and source port for the connection of this producer.\n \n-      -   **connectedSince**: Timestamp this producer was created or last reconnected\n+      -   **connectedSince**: The timestamp when this producer is created or reconnected last time.\n \n-  -   **subscriptions**: The list of all local subscriptions to the topic\n+  -   **subscriptions**: The list of all local subscriptions to the topic.\n \n-      -   **my-subscription**: The name of this subscription (client defined)\n+      -   **my-subscription**: The name of this subscription. It is defined by the client.\n \n-          -   **msgRateOut**: Total rate of messages delivered on this subscription (msg/s)\n+          -   **msgRateOut**: The total rate of messages delivered on this subscription (msg/s).\n \n-          -   **msgThroughputOut**: Total throughput delivered on this subscription (bytes/s)\n+          -   **msgThroughputOut**: The total throughput delivered on this subscription (bytes/s).\n \n-          -   **msgBacklog**: Number of messages in the subscription backlog\n+          -   **msgBacklog**: The number of messages in the subscription backlog.\n \n-          -   **type**: This subscription type\n+          -   **type**: The subscription type.\n \n-          -   **msgRateExpired**: The rate at which messages were discarded instead of dispatched from this subscription due to TTL\n+          -   **msgRateExpired**: The rate at which messages were discarded instead of dispatched from this subscription due to TTL.\n           \n-          -   **lastExpireTimestamp**: The last message expire execution timestamp\n+          -   **lastExpireTimestamp**: The timestamp of the last message expire execution.\n           \n-          -   **lastConsumedFlowTimestamp**: The last flow command received timestamp \n+          -   **lastConsumedFlowTimestamp**: The timestamp of the last flow command received. \n           \n-          -   **lastConsumedTimestamp**: The latest timestamp of all the consumed timestamp of the consumers\n+          -   **lastConsumedTimestamp**: The latest timestamp of all the consumed timestamp of the consumers.\n           \n-          -   **lastAckedTimestamp**: The latest timestamp of all the acked timestamp of the consumers\n+          -   **lastAckedTimestamp**: The latest timestamp of all the acked timestamp of the consumers.\n \n-          -   **consumers**: The list of connected consumers for this subscription\n+          -   **consumers**: The list of connected consumers for this subscription.\n \n-                -   **msgRateOut**: Total rate of messages delivered to the consumer (msg/s)\n+                -   **msgRateOut**: The total rate of messages delivered to the consumer (msg/s).\n \n-                -   **msgThroughputOut**: Total throughput delivered to the consumer (bytes/s)\n+                -   **msgThroughputOut**: The total throughput delivered to the consumer (bytes/s).\n \n-                -   **consumerName**: Internal identifier for this consumer, generated by the client library\n+                -   **consumerName**: The internal identifier for this consumer, generated by the client library.\n \n-                -   **availablePermits**: The number of messages this consumer has space for in the client library's listen queue. A value of 0 means the client library's queue is full and receive() isn't being called. A nonzero value means this consumer is ready to be dispatched messages.\n+                -   **availablePermits**: The number of messages this consumer has space for in the client library's listen queue. `0` means the client library's queue is full and `receive()` isn't being called. A nonzero value means this consumer is ready to be dispatched messages.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 335}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY4NDAxOnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyODowM1rOHpljXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyODowM1rOHpljXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2ODkyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            -   **blockedConsumerOnUnackedMsgs**: The flag to verify if the consumer is blocked due to reaching threshold of the unacked messages.\n          \n          \n            \n                            -   **blockedConsumerOnUnackedMsgs**: The flag used to verify if the consumer is blocked due to reaching threshold of the unacknowledged messages.", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513368925", "createdAt": "2020-10-28T11:28:03Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -117,137 +112,132 @@ $ pulsar-admin persistent revoke-permission \\\n }\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n String role = \"test-role\";\n-admin.persistentTopics().revokePermissions(topic, role);\n+admin.topics().revokePermissions(topic, role);\n ```\n \n-### Delete topic\n-\n-It deletes a topic. The topic cannot be deleted if there's any active subscription or producers connected to it.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n+### Delete topic\n \n-Topic can be deleted using [`delete`](../../reference/CliTools#delete) command.\n+You can delete a topic in the following ways. You cannot delete a topic if any active subscription or producers is connected to the topic.\n \n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent delete \\\n+$ pulsar-admin topics delete \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic|operation/deleteTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic|operation/deleteTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().delete(topic);\n+admin.topics().delete(topic);\n ```\n \n-### Unload topic\n-\n-It unloads a topic.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n-\n-Topic can be unloaded using [`unload`](../../reference/CliTools#unload) command.\n+### Unload topic\n \n+You can unload a topic in the following ways.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent unload \\\n+$ pulsar-admin topics unload \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|PUT|/admin/v2/persistent/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|PUT|/admin/v2/topics/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().unload(topic);\n+admin.topics().unload(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get stats\n \n-It shows current statistics of a given non-partitioned topic.\n+You can view the following statistics of a given non-partitioned topic.\n \n-  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second\n+  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second.\n \n-  -   **msgThroughputIn**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputIn**: The sum of all local and replication publishers' publish rates in bytes per second.\n \n-  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second\n+  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second.\n \n-  -   **msgThroughputOut**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputOut**: The sum of all local and replication consumers' dispatch rates in bytes per second.\n \n-  -   **averageMsgSize**: The average size in bytes of messages published within the last interval\n+  -   **averageMsgSize**: The average size(in bytes) of messages published within the last interval.\n \n-  -   **storageSize**: The sum of the ledgers' storage size for this topic. Space used to store the messages for the topic\n+  -   **storageSize**: The sum of the ledgers' storage size for this topic. The space used to store the messages for the topic.\n \n-  -   **publishers**: The list of all local publishers into the topic. There can be zero or thousands\n+  -   **publishers**: The list of all local publishers into the topic. The list ranges from zero to thousands.\n \n-      -   **msgRateIn**: Total rate of messages published by this publisher in messages per second \n+      -   **msgRateIn**: The total rate of messages published by this publisher in messages per second.\n \n-      -   **msgThroughputIn**: Total throughput of the messages published by this publisher in bytes per second\n+      -   **msgThroughputIn**: The total throughput of the messages published by this publisher in bytes per second.\n \n-      -   **averageMsgSize**: Average message size in bytes from this publisher within the last interval\n+      -   **averageMsgSize**: The average message size in bytes from this publisher within the last interval.\n \n-      -   **producerId**: Internal identifier for this producer on this topic\n+      -   **producerId**: The internal identifier for this producer on this topic.\n \n-      -   **producerName**: Internal identifier for this producer, generated by the client library\n+      -   **producerName**: The internal identifier for this producer, generated by the client library.\n \n-      -   **address**: IP address and source port for the connection of this producer\n+      -   **address**: The IP address and source port for the connection of this producer.\n \n-      -   **connectedSince**: Timestamp this producer was created or last reconnected\n+      -   **connectedSince**: The timestamp when this producer is created or reconnected last time.\n \n-  -   **subscriptions**: The list of all local subscriptions to the topic\n+  -   **subscriptions**: The list of all local subscriptions to the topic.\n \n-      -   **my-subscription**: The name of this subscription (client defined)\n+      -   **my-subscription**: The name of this subscription. It is defined by the client.\n \n-          -   **msgRateOut**: Total rate of messages delivered on this subscription (msg/s)\n+          -   **msgRateOut**: The total rate of messages delivered on this subscription (msg/s).\n \n-          -   **msgThroughputOut**: Total throughput delivered on this subscription (bytes/s)\n+          -   **msgThroughputOut**: The total throughput delivered on this subscription (bytes/s).\n \n-          -   **msgBacklog**: Number of messages in the subscription backlog\n+          -   **msgBacklog**: The number of messages in the subscription backlog.\n \n-          -   **type**: This subscription type\n+          -   **type**: The subscription type.\n \n-          -   **msgRateExpired**: The rate at which messages were discarded instead of dispatched from this subscription due to TTL\n+          -   **msgRateExpired**: The rate at which messages were discarded instead of dispatched from this subscription due to TTL.\n           \n-          -   **lastExpireTimestamp**: The last message expire execution timestamp\n+          -   **lastExpireTimestamp**: The timestamp of the last message expire execution.\n           \n-          -   **lastConsumedFlowTimestamp**: The last flow command received timestamp \n+          -   **lastConsumedFlowTimestamp**: The timestamp of the last flow command received. \n           \n-          -   **lastConsumedTimestamp**: The latest timestamp of all the consumed timestamp of the consumers\n+          -   **lastConsumedTimestamp**: The latest timestamp of all the consumed timestamp of the consumers.\n           \n-          -   **lastAckedTimestamp**: The latest timestamp of all the acked timestamp of the consumers\n+          -   **lastAckedTimestamp**: The latest timestamp of all the acked timestamp of the consumers.\n \n-          -   **consumers**: The list of connected consumers for this subscription\n+          -   **consumers**: The list of connected consumers for this subscription.\n \n-                -   **msgRateOut**: Total rate of messages delivered to the consumer (msg/s)\n+                -   **msgRateOut**: The total rate of messages delivered to the consumer (msg/s).\n \n-                -   **msgThroughputOut**: Total throughput delivered to the consumer (bytes/s)\n+                -   **msgThroughputOut**: The total throughput delivered to the consumer (bytes/s).\n \n-                -   **consumerName**: Internal identifier for this consumer, generated by the client library\n+                -   **consumerName**: The internal identifier for this consumer, generated by the client library.\n \n-                -   **availablePermits**: The number of messages this consumer has space for in the client library's listen queue. A value of 0 means the client library's queue is full and receive() isn't being called. A nonzero value means this consumer is ready to be dispatched messages.\n+                -   **availablePermits**: The number of messages this consumer has space for in the client library's listen queue. `0` means the client library's queue is full and `receive()` isn't being called. A nonzero value means this consumer is ready to be dispatched messages.\n \n-                -   **unackedMessages**: Number of unacknowledged messages for the consumer\n+                -   **unackedMessages**: The number of unacknowledged messages for the consumer.\n \n-                -   **blockedConsumerOnUnackedMsgs**: Flag to verify if the consumer is blocked due to reaching threshold of unacked messages\n+                -   **blockedConsumerOnUnackedMsgs**: The flag to verify if the consumer is blocked due to reaching threshold of the unacked messages.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 341}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY4NTc0OnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyODozMlrOHplkcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyODozMlrOHplkcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2OTIwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            -   **lastAckedTimestamp**: The timestamp when the consumer acks a message the last time.\n          \n          \n            \n                            -   **lastAckedTimestamp**: The timestamp when the consumer acknowledges a message the last time.", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513369201", "createdAt": "2020-10-28T11:28:32Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -117,137 +112,132 @@ $ pulsar-admin persistent revoke-permission \\\n }\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic/permissions/:role|operation/revokePermissionsOnTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n String role = \"test-role\";\n-admin.persistentTopics().revokePermissions(topic, role);\n+admin.topics().revokePermissions(topic, role);\n ```\n \n-### Delete topic\n-\n-It deletes a topic. The topic cannot be deleted if there's any active subscription or producers connected to it.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n+### Delete topic\n \n-Topic can be deleted using [`delete`](../../reference/CliTools#delete) command.\n+You can delete a topic in the following ways. You cannot delete a topic if any active subscription or producers is connected to the topic.\n \n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent delete \\\n+$ pulsar-admin topics delete \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|DELETE|/admin/v2/persistent/:tenant/:namespace/:topic|operation/deleteTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|DELETE|/admin/v2/topics/:tenant/:namespace/:topic|operation/deleteTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().delete(topic);\n+admin.topics().delete(topic);\n ```\n \n-### Unload topic\n-\n-It unloads a topic.\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n-#### pulsar-admin\n-\n-Topic can be unloaded using [`unload`](../../reference/CliTools#unload) command.\n+### Unload topic\n \n+You can unload a topic in the following ways.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent unload \\\n+$ pulsar-admin topics unload \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|PUT|/admin/v2/persistent/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|PUT|/admin/v2/topics/:tenant/:namespace/:topic/unload|operation/unloadTopic}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().unload(topic);\n+admin.topics().unload(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get stats\n \n-It shows current statistics of a given non-partitioned topic.\n+You can view the following statistics of a given non-partitioned topic.\n \n-  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second\n+  -   **msgRateIn**: The sum of all local and replication publishers' publish rates in messages per second.\n \n-  -   **msgThroughputIn**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputIn**: The sum of all local and replication publishers' publish rates in bytes per second.\n \n-  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second\n+  -   **msgRateOut**: The sum of all local and replication consumers' dispatch rates in messages per second.\n \n-  -   **msgThroughputOut**: Same as above, but in bytes per second instead of messages per second\n+  -   **msgThroughputOut**: The sum of all local and replication consumers' dispatch rates in bytes per second.\n \n-  -   **averageMsgSize**: The average size in bytes of messages published within the last interval\n+  -   **averageMsgSize**: The average size(in bytes) of messages published within the last interval.\n \n-  -   **storageSize**: The sum of the ledgers' storage size for this topic. Space used to store the messages for the topic\n+  -   **storageSize**: The sum of the ledgers' storage size for this topic. The space used to store the messages for the topic.\n \n-  -   **publishers**: The list of all local publishers into the topic. There can be zero or thousands\n+  -   **publishers**: The list of all local publishers into the topic. The list ranges from zero to thousands.\n \n-      -   **msgRateIn**: Total rate of messages published by this publisher in messages per second \n+      -   **msgRateIn**: The total rate of messages published by this publisher in messages per second.\n \n-      -   **msgThroughputIn**: Total throughput of the messages published by this publisher in bytes per second\n+      -   **msgThroughputIn**: The total throughput of the messages published by this publisher in bytes per second.\n \n-      -   **averageMsgSize**: Average message size in bytes from this publisher within the last interval\n+      -   **averageMsgSize**: The average message size in bytes from this publisher within the last interval.\n \n-      -   **producerId**: Internal identifier for this producer on this topic\n+      -   **producerId**: The internal identifier for this producer on this topic.\n \n-      -   **producerName**: Internal identifier for this producer, generated by the client library\n+      -   **producerName**: The internal identifier for this producer, generated by the client library.\n \n-      -   **address**: IP address and source port for the connection of this producer\n+      -   **address**: The IP address and source port for the connection of this producer.\n \n-      -   **connectedSince**: Timestamp this producer was created or last reconnected\n+      -   **connectedSince**: The timestamp when this producer is created or reconnected last time.\n \n-  -   **subscriptions**: The list of all local subscriptions to the topic\n+  -   **subscriptions**: The list of all local subscriptions to the topic.\n \n-      -   **my-subscription**: The name of this subscription (client defined)\n+      -   **my-subscription**: The name of this subscription. It is defined by the client.\n \n-          -   **msgRateOut**: Total rate of messages delivered on this subscription (msg/s)\n+          -   **msgRateOut**: The total rate of messages delivered on this subscription (msg/s).\n \n-          -   **msgThroughputOut**: Total throughput delivered on this subscription (bytes/s)\n+          -   **msgThroughputOut**: The total throughput delivered on this subscription (bytes/s).\n \n-          -   **msgBacklog**: Number of messages in the subscription backlog\n+          -   **msgBacklog**: The number of messages in the subscription backlog.\n \n-          -   **type**: This subscription type\n+          -   **type**: The subscription type.\n \n-          -   **msgRateExpired**: The rate at which messages were discarded instead of dispatched from this subscription due to TTL\n+          -   **msgRateExpired**: The rate at which messages were discarded instead of dispatched from this subscription due to TTL.\n           \n-          -   **lastExpireTimestamp**: The last message expire execution timestamp\n+          -   **lastExpireTimestamp**: The timestamp of the last message expire execution.\n           \n-          -   **lastConsumedFlowTimestamp**: The last flow command received timestamp \n+          -   **lastConsumedFlowTimestamp**: The timestamp of the last flow command received. \n           \n-          -   **lastConsumedTimestamp**: The latest timestamp of all the consumed timestamp of the consumers\n+          -   **lastConsumedTimestamp**: The latest timestamp of all the consumed timestamp of the consumers.\n           \n-          -   **lastAckedTimestamp**: The latest timestamp of all the acked timestamp of the consumers\n+          -   **lastAckedTimestamp**: The latest timestamp of all the acked timestamp of the consumers.\n \n-          -   **consumers**: The list of connected consumers for this subscription\n+          -   **consumers**: The list of connected consumers for this subscription.\n \n-                -   **msgRateOut**: Total rate of messages delivered to the consumer (msg/s)\n+                -   **msgRateOut**: The total rate of messages delivered to the consumer (msg/s).\n \n-                -   **msgThroughputOut**: Total throughput delivered to the consumer (bytes/s)\n+                -   **msgThroughputOut**: The total throughput delivered to the consumer (bytes/s).\n \n-                -   **consumerName**: Internal identifier for this consumer, generated by the client library\n+                -   **consumerName**: The internal identifier for this consumer, generated by the client library.\n \n-                -   **availablePermits**: The number of messages this consumer has space for in the client library's listen queue. A value of 0 means the client library's queue is full and receive() isn't being called. A nonzero value means this consumer is ready to be dispatched messages.\n+                -   **availablePermits**: The number of messages this consumer has space for in the client library's listen queue. `0` means the client library's queue is full and `receive()` isn't being called. A nonzero value means this consumer is ready to be dispatched messages.\n \n-                -   **unackedMessages**: Number of unacknowledged messages for the consumer\n+                -   **unackedMessages**: The number of unacknowledged messages for the consumer.\n \n-                -   **blockedConsumerOnUnackedMsgs**: Flag to verify if the consumer is blocked due to reaching threshold of unacked messages\n+                -   **blockedConsumerOnUnackedMsgs**: The flag to verify if the consumer is blocked due to reaching threshold of the unacked messages.\n                 \n-                -   **lastConsumedTimestamp**: The timestamp of the consumer last consume a message\n+                -   **lastConsumedTimestamp**: The timestamp when the consumer reads a message the last time. \n           \n-                -   **lastAckedTimestamp**: The timestamp of the consumer last ack a message\n+                -   **lastAckedTimestamp**: The timestamp when the consumer acks a message the last time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 347}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY4OTExOnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyOToyOVrOHplmjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMToyOToyOVrOHplmjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM2OTc0Mg==", "bodyText": "The number of cursors that are ....?", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513369742", "createdAt": "2020-10-28T11:29:29Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -307,94 +299,95 @@ It shows current statistics of a given non-partitioned topic.\n   \"replication\": {}\n }\n ```\n+To get the status of a topic, you can use the following ways.\n \n-#### pulsar-admin\n-\n-Topic stats can be fetched using [`stats`](../../reference/CliTools#stats) command.\n-\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent stats \\\n+$ pulsar-admin topics stats \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|GET|/admin/v2/persistent/:tenant/:namespace/:topic/stats|operation/getStats}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|GET|/admin/v2/topics/:tenant/:namespace/:topic/stats|operation/getStats}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().getStats(topic);\n+admin.topics().getStats(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get internal stats\n \n-It shows detailed statistics of a topic.\n+You can get the detailed statistics of a topic.\n \n-  -   **entriesAddedCounter**: Messages published since this broker loaded this topic\n+  -   **entriesAddedCounter**: Messages published since this broker loaded this topic.\n \n-  -   **numberOfEntries**: Total number of messages being tracked\n+  -   **numberOfEntries**: The total number of messages being tracked.\n \n-  -   **totalSize**: Total storage size in bytes of all messages\n+  -   **totalSize**: The total storage size in bytes of all messages.\n \n-  -   **currentLedgerEntries**: Count of messages written to the ledger currently open for writing\n+  -   **currentLedgerEntries**: The count of messages written to the ledger that is currently open for writing.\n \n-  -   **currentLedgerSize**: Size in bytes of messages written to ledger currently open for writing\n+  -   **currentLedgerSize**: The size in bytes of messages written to the ledger that is currently open for writing.\n \n-  -   **lastLedgerCreatedTimestamp**: time when last ledger was created\n+  -   **lastLedgerCreatedTimestamp**: The time when the last ledger is created.\n \n-  -   **lastLedgerCreationFailureTimestamp:** time when last ledger was failed\n+  -   **lastLedgerCreationFailureTimestamp:** The time when the last ledger failed.\n \n-  -   **waitingCursorsCount**: How many cursors are \"caught up\" and waiting for a new message to be published\n+  -   **waitingCursorsCount**: How many cursors are \"caught up\" and waiting for a new message to be published.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 422}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjY5MzQxOnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTozMDozNFrOHplpGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTozMDozNFrOHplpGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM3MDM5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  -   **ledgerId**: The Id of this ledger.\n          \n          \n            \n                  -   **ledgerId**: The ID of this ledger.", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r513370395", "createdAt": "2020-10-28T11:30:34Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -307,94 +299,95 @@ It shows current statistics of a given non-partitioned topic.\n   \"replication\": {}\n }\n ```\n+To get the status of a topic, you can use the following ways.\n \n-#### pulsar-admin\n-\n-Topic stats can be fetched using [`stats`](../../reference/CliTools#stats) command.\n-\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent stats \\\n+$ pulsar-admin topics stats \\\n   persistent://test-tenant/ns1/tp1 \\\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|GET|/admin/v2/persistent/:tenant/:namespace/:topic/stats|operation/getStats}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|GET|/admin/v2/topics/:tenant/:namespace/:topic/stats|operation/getStats}\n \n+<!--Java-->\n ```java\n String topic = \"persistent://my-tenant/my-namespace/my-topic\";\n-admin.persistentTopics().getStats(topic);\n+admin.topics().getStats(topic);\n ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n ### Get internal stats\n \n-It shows detailed statistics of a topic.\n+You can get the detailed statistics of a topic.\n \n-  -   **entriesAddedCounter**: Messages published since this broker loaded this topic\n+  -   **entriesAddedCounter**: Messages published since this broker loaded this topic.\n \n-  -   **numberOfEntries**: Total number of messages being tracked\n+  -   **numberOfEntries**: The total number of messages being tracked.\n \n-  -   **totalSize**: Total storage size in bytes of all messages\n+  -   **totalSize**: The total storage size in bytes of all messages.\n \n-  -   **currentLedgerEntries**: Count of messages written to the ledger currently open for writing\n+  -   **currentLedgerEntries**: The count of messages written to the ledger that is currently open for writing.\n \n-  -   **currentLedgerSize**: Size in bytes of messages written to ledger currently open for writing\n+  -   **currentLedgerSize**: The size in bytes of messages written to the ledger that is currently open for writing.\n \n-  -   **lastLedgerCreatedTimestamp**: time when last ledger was created\n+  -   **lastLedgerCreatedTimestamp**: The time when the last ledger is created.\n \n-  -   **lastLedgerCreationFailureTimestamp:** time when last ledger was failed\n+  -   **lastLedgerCreationFailureTimestamp:** The time when the last ledger failed.\n \n-  -   **waitingCursorsCount**: How many cursors are \"caught up\" and waiting for a new message to be published\n+  -   **waitingCursorsCount**: How many cursors are \"caught up\" and waiting for a new message to be published.\n \n-  -   **pendingAddEntriesCount**: How many messages have (asynchronous) write requests we are waiting on completion\n+  -   **pendingAddEntriesCount**: The number of messages that complete (asynchronous) write requests.\n \n-  -   **lastConfirmedEntry**: The ledgerid:entryid of the last message successfully written. If the entryid is -1, then the ledger has been opened or is currently being opened but has no entries written yet.\n+  -   **lastConfirmedEntry**: The ledgerid:entryid of the last message that is written successfully. If the entryid is `-1`, then the ledger is open, yet no entries are written.\n \n-  -   **state**: The state of this ledger for writing. LedgerOpened means we have a ledger open for saving published messages.\n+  -   **state**: The state of this ledger for writing. The state `LedgerOpened` means that a ledger is open for saving published messages.\n \n-  -   **ledgers**: The ordered list of all ledgers for this topic holding its messages\n+  -   **ledgers**: The ordered list of all ledgers for this topic holding messages.\n \n-      -   **ledgerId**: Id of this ledger\n+      -   **ledgerId**: Id of this ledger.\n \n-      -   **entries**: Total number of entries belong to this ledger\n+      -   **entries**: The total number of entries belong to this ledger.\n \n-      -   **size**: Size of messages written to this ledger (in bytes)\n+      -   **size**: The size of messages written to this ledger (in bytes).\n \n-      -   **offloaded**: Whether this ledger is offloaded\n+      -   **offloaded**: Whether this ledger is offloaded.\n \n   -   **compactedLedger**: The ledgers holding un-acked messages after topic compaction.\n  \n-      -   **ledgerId**: Id of this ledger\n+      -   **ledgerId**: The Id of this ledger.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb08f19feb87b3a80b897d956d47df7f2b8afafc"}, "originalPosition": 451}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjI0NTI5OnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzoyNzo1N1rOHqbwYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNDowMToyOVrOHufYNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1Njk5Mw==", "bodyText": "I don't think we have the topics endpoint to get all the topics. Actually, there have two steps on the client-side, the client will get the persistent topics and non-persistent topics then combine the result at the client-side.\nI am not sure how to add two REST API endpoints. @tuteng Any ideas?", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r514256993", "createdAt": "2020-10-29T13:27:57Z", "author": {"login": "zymap"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -1,80 +1,78 @@\n ---\n id: admin-api-persistent-topics\n-title: Managing persistent topics\n-sidebar_label: Persistent topics\n+title: Manage topics\n+sidebar_label: Topics\n ---\n \n-Persistent helps to access topic which is a logical endpoint for publishing and consuming messages. Producers publish messages to the topic and consumers subscribe to the topic, to consume messages published to the topic.\n-\n-In all of the instructions and commands below, the topic name structure is:\n-\n+Pulsar has persistent and non-persistent topics. Persistent topic is a logical endpoint for publishing and consuming messages. The topic name structure for persistent topics is:\n \n ```shell\n persistent://tenant/namespace/topic\n ```\n \n-## Persistent topics resources\n+Non-persistent topics are used in applications that only consume real-time published messages and do not need persistent guarantee. In this way, it reduces message-publish latency by removing overhead of persisting messages. The topic name structure for non-persistent topics is:\n \n-### List of topics\n+```shell\n+non-persistent://tenant/namespace/topic\n+```\n+## Manage topic resources\n+Whether it is persistent or non-persistent topic, you can obtain the topic resources through `pulsar-admin` tool, REST API and Java.\n \n-It provides a list of persistent topics exist under a given namespace.\n+### List of topics\n \n-#### pulsar-admin\n+You can get the list of topics under a given namespace in the following ways.\n \n-List of topics can be fetched using [`list`](../../reference/CliTools#list) command.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n \n ```shell\n-$ pulsar-admin persistent list \\\n+$ pulsar-admin topics list \\\n   my-tenant/my-namespace\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|GET|/admin/v2/persistent/:tenant/:namespace|operation/getList}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|GET|/admin/v2/topics/:tenant/:namespace|operation/getList}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c64ea115ed41160f1f7062d60e80d036b807a7f4"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI0MTMzMw==", "bodyText": "Please refer to NON-PERSISTENT TOPIC http://pulsar.apache.org/admin-rest-api/?version=2.6.1&apiversion=v2#operation/getList and PERSISTENT TOPIC http://pulsar.apache.org/admin-rest-api/?version=2.6.1&apiversion=v2#operation/getList", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r517241333", "createdAt": "2020-11-04T10:25:04Z", "author": {"login": "tuteng"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -1,80 +1,78 @@\n ---\n id: admin-api-persistent-topics\n-title: Managing persistent topics\n-sidebar_label: Persistent topics\n+title: Manage topics\n+sidebar_label: Topics\n ---\n \n-Persistent helps to access topic which is a logical endpoint for publishing and consuming messages. Producers publish messages to the topic and consumers subscribe to the topic, to consume messages published to the topic.\n-\n-In all of the instructions and commands below, the topic name structure is:\n-\n+Pulsar has persistent and non-persistent topics. Persistent topic is a logical endpoint for publishing and consuming messages. The topic name structure for persistent topics is:\n \n ```shell\n persistent://tenant/namespace/topic\n ```\n \n-## Persistent topics resources\n+Non-persistent topics are used in applications that only consume real-time published messages and do not need persistent guarantee. In this way, it reduces message-publish latency by removing overhead of persisting messages. The topic name structure for non-persistent topics is:\n \n-### List of topics\n+```shell\n+non-persistent://tenant/namespace/topic\n+```\n+## Manage topic resources\n+Whether it is persistent or non-persistent topic, you can obtain the topic resources through `pulsar-admin` tool, REST API and Java.\n \n-It provides a list of persistent topics exist under a given namespace.\n+### List of topics\n \n-#### pulsar-admin\n+You can get the list of topics under a given namespace in the following ways.\n \n-List of topics can be fetched using [`list`](../../reference/CliTools#list) command.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n \n ```shell\n-$ pulsar-admin persistent list \\\n+$ pulsar-admin topics list \\\n   my-tenant/my-namespace\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|GET|/admin/v2/persistent/:tenant/:namespace|operation/getList}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|GET|/admin/v2/topics/:tenant/:namespace|operation/getList}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1Njk5Mw=="}, "originalCommit": {"oid": "c64ea115ed41160f1f7062d60e80d036b807a7f4"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUxMDY0Nw==", "bodyText": "{@Inject: endpoint|GET|/admin/v2/:schema/:tenant/:namespace|operation/getList}", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r518510647", "createdAt": "2020-11-06T04:01:29Z", "author": {"login": "Jennifer88huang"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -1,80 +1,78 @@\n ---\n id: admin-api-persistent-topics\n-title: Managing persistent topics\n-sidebar_label: Persistent topics\n+title: Manage topics\n+sidebar_label: Topics\n ---\n \n-Persistent helps to access topic which is a logical endpoint for publishing and consuming messages. Producers publish messages to the topic and consumers subscribe to the topic, to consume messages published to the topic.\n-\n-In all of the instructions and commands below, the topic name structure is:\n-\n+Pulsar has persistent and non-persistent topics. Persistent topic is a logical endpoint for publishing and consuming messages. The topic name structure for persistent topics is:\n \n ```shell\n persistent://tenant/namespace/topic\n ```\n \n-## Persistent topics resources\n+Non-persistent topics are used in applications that only consume real-time published messages and do not need persistent guarantee. In this way, it reduces message-publish latency by removing overhead of persisting messages. The topic name structure for non-persistent topics is:\n \n-### List of topics\n+```shell\n+non-persistent://tenant/namespace/topic\n+```\n+## Manage topic resources\n+Whether it is persistent or non-persistent topic, you can obtain the topic resources through `pulsar-admin` tool, REST API and Java.\n \n-It provides a list of persistent topics exist under a given namespace.\n+### List of topics\n \n-#### pulsar-admin\n+You can get the list of topics under a given namespace in the following ways.\n \n-List of topics can be fetched using [`list`](../../reference/CliTools#list) command.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n \n ```shell\n-$ pulsar-admin persistent list \\\n+$ pulsar-admin topics list \\\n   my-tenant/my-namespace\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|GET|/admin/v2/persistent/:tenant/:namespace|operation/getList}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|GET|/admin/v2/topics/:tenant/:namespace|operation/getList}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI1Njk5Mw=="}, "originalCommit": {"oid": "c64ea115ed41160f1f7062d60e80d036b807a7f4"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjI3MDE2OnYy", "diffSide": "RIGHT", "path": "site2/docs/admin-api-persistent-topics.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzozMzo0M1rOHqb_zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzozMzo0M1rOHqb_zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2MDk0Mw==", "bodyText": "similar issue with the previous comments. We don't have the topics endpoint. All the following REST API endpoint has the same issue.", "url": "https://github.com/apache/pulsar/pull/8375#discussion_r514260943", "createdAt": "2020-10-29T13:33:43Z", "author": {"login": "zymap"}, "path": "site2/docs/admin-api-persistent-topics.md", "diffHunk": "@@ -1,80 +1,78 @@\n ---\n id: admin-api-persistent-topics\n-title: Managing persistent topics\n-sidebar_label: Persistent topics\n+title: Manage topics\n+sidebar_label: Topics\n ---\n \n-Persistent helps to access topic which is a logical endpoint for publishing and consuming messages. Producers publish messages to the topic and consumers subscribe to the topic, to consume messages published to the topic.\n-\n-In all of the instructions and commands below, the topic name structure is:\n-\n+Pulsar has persistent and non-persistent topics. Persistent topic is a logical endpoint for publishing and consuming messages. The topic name structure for persistent topics is:\n \n ```shell\n persistent://tenant/namespace/topic\n ```\n \n-## Persistent topics resources\n+Non-persistent topics are used in applications that only consume real-time published messages and do not need persistent guarantee. In this way, it reduces message-publish latency by removing overhead of persisting messages. The topic name structure for non-persistent topics is:\n \n-### List of topics\n+```shell\n+non-persistent://tenant/namespace/topic\n+```\n+## Manage topic resources\n+Whether it is persistent or non-persistent topic, you can obtain the topic resources through `pulsar-admin` tool, REST API and Java.\n \n-It provides a list of persistent topics exist under a given namespace.\n+### List of topics\n \n-#### pulsar-admin\n+You can get the list of topics under a given namespace in the following ways.\n \n-List of topics can be fetched using [`list`](../../reference/CliTools#list) command.\n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n \n ```shell\n-$ pulsar-admin persistent list \\\n+$ pulsar-admin topics list \\\n   my-tenant/my-namespace\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|GET|/admin/v2/persistent/:tenant/:namespace|operation/getList}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|GET|/admin/v2/topics/:tenant/:namespace|operation/getList}\n \n+<!--Java-->\n ```java\n String namespace = \"my-tenant/my-namespace\";\n-admin.persistentTopics().getList(namespace);\n+admin.topics().getList(namespace);\n ```\n+<!--END_DOCUSAURUS_CODE_TABS-->\n \n ### Grant permission\n \n-It grants permissions on a client role to perform specific actions on a given topic.\n-\n-#### pulsar-admin\n-\n-Permission can be granted using [`grant-permission`](../../reference/CliTools#grant-permission) command.\n+You can grant permissions on a client role to perform specific actions on a given topic in the following ways.\n \n+<!--DOCUSAURUS_CODE_TABS-->\n+<!--pulsar-admin-->\n ```shell\n-$ pulsar-admin persistent grant-permission \\\n+$ pulsar-admin topics grant-permission \\\n   --actions produce,consume --role application1 \\\n   persistent://test-tenant/ns1/tp1 \\\n-\n ```\n \n-#### REST API\n-\n-{@inject: endpoint|POST|/admin/v2/persistent/:tenant/:namespace/:topic/permissions/:role|operation/grantPermissionsOnTopic}\n-\n-#### Java\n+<!--REST API-->\n+{@inject: endpoint|POST|/admin/v2/topics/:tenant/:namespace/:topic/permissions/:role|operation/grantPermissionsOnTopic}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c64ea115ed41160f1f7062d60e80d036b807a7f4"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2980, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}