{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwOTQ0NjYy", "number": 6023, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjozNFrOD-UFag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxNDowMlrOD-UHdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3MzcwOnYy", "diffSide": "RIGHT", "path": "pulsar-client-go/pulsar/producer_test.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjozNFrOGYVx_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjozNFrOGYVx_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NTg2OQ==", "bodyText": "Can we replace fmt.Printf with t.Logf()?", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428175869", "createdAt": "2020-05-20T17:12:34Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"\n+\tproducer, err := client.CreateProducer(ProducerOptions{\n+\t\tTopic: topicName,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer producer.Close()\n+\n+\tfailoverConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-failover\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer failoverConsumer.Close()\n+\n+\tsharedConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-shared\",\n+\t\tType:             Shared,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer sharedConsumer.Close()\n+\n+\tctx := context.Background()\n+\n+\tdelay := time.Second*5\n+\tbegin := time.Now()\n+\tfmt.Printf(\"begin %v\\n\", begin)\n+\tfor i := 0; i < 10; i++ {\n+\t\terr := producer.Send(ctx, ProducerMessage{\n+\t\t\tPayload: []byte(fmt.Sprintf(\"hello-%d\", i)),\n+\t\t\tDeliverAfter: delay,\n+\t\t})\n+\t\tfmt.Printf(\"send message %d\\n\", i)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3NDg3OnYy", "diffSide": "RIGHT", "path": "pulsar-client-go/pulsar/producer_test.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjo1M1rOGYVyug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjo1M1rOGYVyug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjA1OA==", "bodyText": "Please replace fmt.Printf with t.Logf().", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428176058", "createdAt": "2020-05-20T17:12:53Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"\n+\tproducer, err := client.CreateProducer(ProducerOptions{\n+\t\tTopic: topicName,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer producer.Close()\n+\n+\tfailoverConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-failover\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer failoverConsumer.Close()\n+\n+\tsharedConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-shared\",\n+\t\tType:             Shared,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer sharedConsumer.Close()\n+\n+\tctx := context.Background()\n+\n+\tdelay := time.Second*5\n+\tbegin := time.Now()\n+\tfmt.Printf(\"begin %v\\n\", begin)\n+\tfor i := 0; i < 10; i++ {\n+\t\terr := producer.Send(ctx, ProducerMessage{\n+\t\t\tPayload: []byte(fmt.Sprintf(\"hello-%d\", i)),\n+\t\t\tDeliverAfter: delay,\n+\t\t})\n+\t\tfmt.Printf(\"send message %d\\n\", i)\n+\t\tassert.Nil(t, err)\n+\t}\n+\n+\t// Failover consumer will receive the messages immediately while\n+    // the shared consumer will get them after the delay\n+\tfor i := 0; i < 10; i++ {\n+\t\tmsg, err := failoverConsumer.Receive(ctx)\n+\t\tassert.Nil(t, err)\n+\t\tfmt.Printf(\"message: %s\\n\",msg.Payload())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3NjA5OnYy", "diffSide": "RIGHT", "path": "pulsar-client-go/pulsar/producer_test.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMzoxNVrOGYVzkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMzoxNVrOGYVzkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjI3NQ==", "bodyText": "Please replace fmt.Printf with t.Logf().", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428176275", "createdAt": "2020-05-20T17:13:15Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"\n+\tproducer, err := client.CreateProducer(ProducerOptions{\n+\t\tTopic: topicName,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer producer.Close()\n+\n+\tfailoverConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-failover\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer failoverConsumer.Close()\n+\n+\tsharedConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-shared\",\n+\t\tType:             Shared,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer sharedConsumer.Close()\n+\n+\tctx := context.Background()\n+\n+\tdelay := time.Second*5\n+\tbegin := time.Now()\n+\tfmt.Printf(\"begin %v\\n\", begin)\n+\tfor i := 0; i < 10; i++ {\n+\t\terr := producer.Send(ctx, ProducerMessage{\n+\t\t\tPayload: []byte(fmt.Sprintf(\"hello-%d\", i)),\n+\t\t\tDeliverAfter: delay,\n+\t\t})\n+\t\tfmt.Printf(\"send message %d\\n\", i)\n+\t\tassert.Nil(t, err)\n+\t}\n+\n+\t// Failover consumer will receive the messages immediately while\n+    // the shared consumer will get them after the delay\n+\tfor i := 0; i < 10; i++ {\n+\t\tmsg, err := failoverConsumer.Receive(ctx)\n+\t\tassert.Nil(t, err)\n+\t\tfmt.Printf(\"message: %s\\n\",msg.Payload())\n+\t\terr = failoverConsumer.Ack(msg)\n+\t\tassert.Nil(t, err)\n+\n+\t\tfmt.Printf(\"after %v\\n\", time.Now())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3NjI5OnYy", "diffSide": "RIGHT", "path": "pulsar-client-go/pulsar/producer_test.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMzoxOVrOGYVztQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMzoxOVrOGYVztQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjMwOQ==", "bodyText": "Please replace fmt.Printf with t.Logf().", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428176309", "createdAt": "2020-05-20T17:13:19Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"\n+\tproducer, err := client.CreateProducer(ProducerOptions{\n+\t\tTopic: topicName,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer producer.Close()\n+\n+\tfailoverConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-failover\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer failoverConsumer.Close()\n+\n+\tsharedConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-shared\",\n+\t\tType:             Shared,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer sharedConsumer.Close()\n+\n+\tctx := context.Background()\n+\n+\tdelay := time.Second*5\n+\tbegin := time.Now()\n+\tfmt.Printf(\"begin %v\\n\", begin)\n+\tfor i := 0; i < 10; i++ {\n+\t\terr := producer.Send(ctx, ProducerMessage{\n+\t\t\tPayload: []byte(fmt.Sprintf(\"hello-%d\", i)),\n+\t\t\tDeliverAfter: delay,\n+\t\t})\n+\t\tfmt.Printf(\"send message %d\\n\", i)\n+\t\tassert.Nil(t, err)\n+\t}\n+\n+\t// Failover consumer will receive the messages immediately while\n+    // the shared consumer will get them after the delay\n+\tfor i := 0; i < 10; i++ {\n+\t\tmsg, err := failoverConsumer.Receive(ctx)\n+\t\tassert.Nil(t, err)\n+\t\tfmt.Printf(\"message: %s\\n\",msg.Payload())\n+\t\terr = failoverConsumer.Ack(msg)\n+\t\tassert.Nil(t, err)\n+\n+\t\tfmt.Printf(\"after %v\\n\", time.Now())\n+\t\tassert.True(t, time.Since(begin) < delay)\n+\t}\n+\n+\tfor i := 0; i < 10; i++ {\n+\t\tmsg, err := sharedConsumer.Receive(ctx)\n+\t\tassert.Nil(t, err)\n+\t\tfmt.Printf(\"message: %s\\n\",msg.Payload())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3NjY1OnYy", "diffSide": "RIGHT", "path": "pulsar-client-go/pulsar/producer_test.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMzoyNFrOGYVz7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMzoyNFrOGYVz7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjM2Nw==", "bodyText": "Please replace fmt.Printf with t.Logf().", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428176367", "createdAt": "2020-05-20T17:13:24Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"\n+\tproducer, err := client.CreateProducer(ProducerOptions{\n+\t\tTopic: topicName,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer producer.Close()\n+\n+\tfailoverConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-failover\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer failoverConsumer.Close()\n+\n+\tsharedConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-shared\",\n+\t\tType:             Shared,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer sharedConsumer.Close()\n+\n+\tctx := context.Background()\n+\n+\tdelay := time.Second*5\n+\tbegin := time.Now()\n+\tfmt.Printf(\"begin %v\\n\", begin)\n+\tfor i := 0; i < 10; i++ {\n+\t\terr := producer.Send(ctx, ProducerMessage{\n+\t\t\tPayload: []byte(fmt.Sprintf(\"hello-%d\", i)),\n+\t\t\tDeliverAfter: delay,\n+\t\t})\n+\t\tfmt.Printf(\"send message %d\\n\", i)\n+\t\tassert.Nil(t, err)\n+\t}\n+\n+\t// Failover consumer will receive the messages immediately while\n+    // the shared consumer will get them after the delay\n+\tfor i := 0; i < 10; i++ {\n+\t\tmsg, err := failoverConsumer.Receive(ctx)\n+\t\tassert.Nil(t, err)\n+\t\tfmt.Printf(\"message: %s\\n\",msg.Payload())\n+\t\terr = failoverConsumer.Ack(msg)\n+\t\tassert.Nil(t, err)\n+\n+\t\tfmt.Printf(\"after %v\\n\", time.Now())\n+\t\tassert.True(t, time.Since(begin) < delay)\n+\t}\n+\n+\tfor i := 0; i < 10; i++ {\n+\t\tmsg, err := sharedConsumer.Receive(ctx)\n+\t\tassert.Nil(t, err)\n+\t\tfmt.Printf(\"message: %s\\n\",msg.Payload())\n+\t\terr = sharedConsumer.Ack(msg)\n+\t\tassert.Nil(t, err)\n+\n+\t\tfmt.Printf(\"after %v\\n\", time.Now())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3NzYzOnYy", "diffSide": "RIGHT", "path": "pulsar-client-go/pulsar/producer_test.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMzozOFrOGYV0gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjo0NToxMlrOGYoDGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjUxMw==", "bodyText": "Please replace fmt.Printf with t.Logf().", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428176513", "createdAt": "2020-05-20T17:13:38Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"\n+\tproducer, err := client.CreateProducer(ProducerOptions{\n+\t\tTopic: topicName,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer producer.Close()\n+\n+\tfailoverConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-failover\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer failoverConsumer.Close()\n+\n+\tsharedConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-shared\",\n+\t\tType:             Shared,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer sharedConsumer.Close()\n+\n+\tctx := context.Background()\n+\n+\tdelay := time.Second*5\n+\tbegin := time.Now()\n+\tfmt.Printf(\"begin %v\\n\", begin)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3NTE2Mw==", "bodyText": "replaced", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428475163", "createdAt": "2020-05-21T06:45:12Z", "author": {"login": "snowcrumble"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"\n+\tproducer, err := client.CreateProducer(ProducerOptions{\n+\t\tTopic: topicName,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer producer.Close()\n+\n+\tfailoverConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-failover\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer failoverConsumer.Close()\n+\n+\tsharedConsumer, err := client.Subscribe(ConsumerOptions{\n+\t\tTopic:            topicName,\n+\t\tSubscriptionName: \"sub-delay-message-shared\",\n+\t\tType:             Shared,\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer sharedConsumer.Close()\n+\n+\tctx := context.Background()\n+\n+\tdelay := time.Second*5\n+\tbegin := time.Now()\n+\tfmt.Printf(\"begin %v\\n\", begin)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NjUxMw=="}, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3ODk1OnYy", "diffSide": "RIGHT", "path": "pulsar-client-go/pulsar/producer_test.go", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxNDowMlrOGYV1ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjo0MTozMFrOGYn-QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3Njc0Ng==", "bodyText": "Can we rename the topic name?", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428176746", "createdAt": "2020-05-20T17:14:02Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NzM3Mg==", "bodyText": "This topic name is the same as the topic name in another test case, in order to avoid test conflicts, please replace it", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428177372", "createdAt": "2020-05-20T17:15:04Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3Njc0Ng=="}, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3Nzg5MQ==", "bodyText": "func newTopicName() string {\n\treturn fmt.Sprintf(\"my-topic-%v\", time.Now().Nanosecond())\n}", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428177891", "createdAt": "2020-05-20T17:15:57Z", "author": {"login": "wolfstudy"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3Njc0Ng=="}, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ3MzkyMA==", "bodyText": "ofcourse", "url": "https://github.com/apache/pulsar/pull/6023#discussion_r428473920", "createdAt": "2020-05-21T06:41:30Z", "author": {"login": "snowcrumble"}, "path": "pulsar-client-go/pulsar/producer_test.go", "diffHunk": "@@ -416,3 +416,71 @@ func TestProducer_SendAndGetMsgID(t *testing.T) {\n \t\tassert.NotNil(t, IsNil(msgID))\n \t}\n }\n+\n+func TestProducer_DelayMessage(t *testing.T) {\n+\tclient, err := NewClient(ClientOptions{\n+\t\tURL: \"pulsar://localhost:6650\",\n+\t})\n+\tassert.Nil(t, err)\n+\tdefer client.Close()\n+\n+\ttopicName := \"test-send-with-message-id\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3Njc0Ng=="}, "originalCommit": {"oid": "9e277bbceea77117cabfddf114b01dd7f70ccd67"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2052, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}