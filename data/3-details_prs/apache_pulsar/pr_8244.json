{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxOTgxMzQz", "number": 8244, "title": "Delete associated ledgers before deleting cluster metadata", "bodyText": "Motivation\n#8169 introduced a command tool to delete a cluster's metadata from ZK. This PR intends to delete the cluster's ledgers from BK.\nModifications\n\nRetrieve ledger ids from related ZK nodes\nAdd an optional argument to specify BK metadata service URI, then delete these ledgers if it's specified\n\nVerifying this change\n\n Make sure that the change passes the CI checks.", "createdAt": "2020-10-13T04:55:29Z", "url": "https://github.com/apache/pulsar/pull/8244", "merged": true, "mergeCommit": {"oid": "99222492ceb8aac8fcdfa72f8abe3f424c928bdb"}, "closed": true, "closedAt": "2020-10-27T03:34:32Z", "author": {"login": "BewareMyPower"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSAW9agH2gAyNTAxOTgxMzQzOmRhNDc0OWUzZTc0MzAyM2E1ZGViMGVhMjRlMDYzM2JmMDhhZmI4OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWWmo0gFqTUxNjkzMzY3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da4749e3e743023a5deb0ea24e0633bf08afb894", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/da4749e3e743023a5deb0ea24e0633bf08afb894", "committedDate": "2020-10-13T03:52:57Z", "message": "Support retrieve ledgers from ZK metadata and delete them"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "519d053ec6424679b3da375aeaf1dce6bb46642b", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/519d053ec6424679b3da375aeaf1dce6bb46642b", "committedDate": "2020-10-13T04:30:50Z", "message": "Refine code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd0513829070cfe1fb707f24a3dc3a4a6219f8a7", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/fd0513829070cfe1fb707f24a3dc3a4a6219f8a7", "committedDate": "2020-10-13T04:51:02Z", "message": "Make bookkeeper-metadata-service-url optional for backward compatibility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3Nzc1Njk1", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-507775695", "createdAt": "2020-10-13T19:50:14Z", "commit": {"oid": "fd0513829070cfe1fb707f24a3dc3a4a6219f8a7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/37e7ff573055e3264c0879cc0bbddb9990f68584", "committedDate": "2020-10-14T02:46:08Z", "message": "Use iterator instead of List to delete ledgers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNjAxMzI4", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-510601328", "createdAt": "2020-10-16T15:57:52Z", "commit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTo1Nzo1MlrOHjGkEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjowMzoyN1rOHjGwwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU2OTc0Nw==", "bodyText": "we wrap log.debug in if (log.isDebugEnabled())", "url": "https://github.com/apache/pulsar/pull/8244#discussion_r506569747", "createdAt": "2020-10-16T15:57:52Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -107,5 +128,86 @@ public static void deleteZkNodeRecursively(ZooKeeper zooKeeper, String path) thr\n         }\n     }\n \n+    private static List<String> getChildren(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getChildren(path, null);\n+        } catch (InterruptedException | KeeperException e) {\n+            log.error(\"Failed to get children of {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static byte[] getData(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getData(path, null, null);\n+        } catch (KeeperException | InterruptedException e) {\n+            log.error(\"Failed to get data from {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void deleteLedger(BookKeeper bookKeeper, long ledgerId) {\n+        try {\n+            bookKeeper.deleteLedger(ledgerId);\n+            log.debug(\"Delete ledger id: {}\", ledgerId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3MTQ4Ng==", "bodyText": "I don't think you should return -1L here. This will trigger deleteLedger(bookkeeper, -1L) in line 183. This is not a good implementation. You should return null and skip deletion if it is null.", "url": "https://github.com/apache/pulsar/pull/8244#discussion_r506571486", "createdAt": "2020-10-16T16:00:46Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -107,5 +128,86 @@ public static void deleteZkNodeRecursively(ZooKeeper zooKeeper, String path) thr\n         }\n     }\n \n+    private static List<String> getChildren(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getChildren(path, null);\n+        } catch (InterruptedException | KeeperException e) {\n+            log.error(\"Failed to get children of {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static byte[] getData(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getData(path, null, null);\n+        } catch (KeeperException | InterruptedException e) {\n+            log.error(\"Failed to get data from {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void deleteLedger(BookKeeper bookKeeper, long ledgerId) {\n+        try {\n+            bookKeeper.deleteLedger(ledgerId);\n+            log.debug(\"Delete ledger id: {}\", ledgerId);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        } catch (BKException e) {\n+            log.warn(\"Failed to delete ledger {}: {}\", ledgerId, e);\n+        }\n+    }\n+\n+    private static void deleteManagedLedgers(ZooKeeper zooKeeper, BookKeeper bookKeeper) {\n+        final String managedLedgersRoot = \"/managed-ledgers\";\n+        getChildren(zooKeeper, managedLedgersRoot).forEach(tenant -> {\n+            final String tenantRoot = managedLedgersRoot + \"/\" + tenant;\n+            getChildren(zooKeeper, tenantRoot).forEach(namespace -> {\n+                final String namespaceRoot = String.join(\"/\", tenantRoot, namespace, \"persistent\");\n+                getChildren(zooKeeper, namespaceRoot).forEach(topic -> {\n+                    final String topicRoot = namespaceRoot + \"/\" + topic;\n+                    byte[] topicData = getData(zooKeeper, topicRoot);\n+                    try {\n+                        ManagedLedgerInfo.parseFrom(topicData).getLedgerInfoList().stream()\n+                                .map(ManagedLedgerInfo.LedgerInfo::getLedgerId)\n+                                .forEach(ledgerId -> deleteLedger(bookKeeper, ledgerId));\n+\n+                        getChildren(zooKeeper, topicRoot).stream().map(subscription -> {\n+                            final String subscriptionRoot = topicRoot + \"/\" + subscription;\n+                            try {\n+                                return ManagedCursorInfo.parseFrom(getData(zooKeeper, subscriptionRoot)).getCursorsLedgerId();\n+                            } catch (InvalidProtocolBufferException e) {\n+                                log.warn(\"Invalid data format from {}: {}\", subscriptionRoot, e);\n+                                return -1L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU3Mjk5NA==", "bodyText": "I think the logic here can be replaced by using ManagedLedgerFactory#delete to delete the ledger, no?", "url": "https://github.com/apache/pulsar/pull/8244#discussion_r506572994", "createdAt": "2020-10-16T16:03:27Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -107,5 +128,86 @@ public static void deleteZkNodeRecursively(ZooKeeper zooKeeper, String path) thr\n         }\n     }\n \n+    private static List<String> getChildren(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getChildren(path, null);\n+        } catch (InterruptedException | KeeperException e) {\n+            log.error(\"Failed to get children of {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static byte[] getData(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getData(path, null, null);\n+        } catch (KeeperException | InterruptedException e) {\n+            log.error(\"Failed to get data from {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void deleteLedger(BookKeeper bookKeeper, long ledgerId) {\n+        try {\n+            bookKeeper.deleteLedger(ledgerId);\n+            log.debug(\"Delete ledger id: {}\", ledgerId);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        } catch (BKException e) {\n+            log.warn(\"Failed to delete ledger {}: {}\", ledgerId, e);\n+        }\n+    }\n+\n+    private static void deleteManagedLedgers(ZooKeeper zooKeeper, BookKeeper bookKeeper) {\n+        final String managedLedgersRoot = \"/managed-ledgers\";\n+        getChildren(zooKeeper, managedLedgersRoot).forEach(tenant -> {\n+            final String tenantRoot = managedLedgersRoot + \"/\" + tenant;\n+            getChildren(zooKeeper, tenantRoot).forEach(namespace -> {\n+                final String namespaceRoot = String.join(\"/\", tenantRoot, namespace, \"persistent\");\n+                getChildren(zooKeeper, namespaceRoot).forEach(topic -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "originalPosition": 103}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d7bca832a8918bd69c523b155c45de564ae600b", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/5d7bca832a8918bd69c523b155c45de564ae600b", "committedDate": "2020-10-17T04:21:00Z", "message": "Add check for ledger id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTU2NjMz", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-510956633", "createdAt": "2020-10-17T06:55:20Z", "commit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwNjo1NToyMFrOHjXDkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwNjo1NToyMFrOHjXDkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjgzOTk1Mw==", "bodyText": "Can we use the org.apache.bookkeeper.client.api.Bookkeeper interface?\nYou are using the old, soon deprecated, API", "url": "https://github.com/apache/pulsar/pull/8244#discussion_r506839953", "createdAt": "2020-10-17T06:55:20Z", "author": {"login": "eolivelli"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -72,6 +84,13 @@ public static void main(String[] args) throws InterruptedException {\n \n         ZooKeeper localZk = initZk(arguments.zookeeper, arguments.zkSessionTimeoutMillis);\n \n+        if (arguments.bkMetadataServiceUri != null) {\n+            BookKeeper bookKeeper = new BookKeeper(new ClientConfiguration().setMetadataServiceUri(arguments.bkMetadataServiceUri));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTc0ODA0", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-510974804", "createdAt": "2020-10-17T10:11:58Z", "commit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMDoxMTo1OFrOHjcQsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMDoxMTo1OFrOHjcQsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkyNTIzMw==", "bodyText": "Isn't there any Pulsar internal API to get this list of ledgers?", "url": "https://github.com/apache/pulsar/pull/8244#discussion_r506925233", "createdAt": "2020-10-17T10:11:58Z", "author": {"login": "eolivelli"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -107,5 +128,86 @@ public static void deleteZkNodeRecursively(ZooKeeper zooKeeper, String path) thr\n         }\n     }\n \n+    private static List<String> getChildren(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getChildren(path, null);\n+        } catch (InterruptedException | KeeperException e) {\n+            log.error(\"Failed to get children of {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static byte[] getData(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getData(path, null, null);\n+        } catch (KeeperException | InterruptedException e) {\n+            log.error(\"Failed to get data from {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void deleteLedger(BookKeeper bookKeeper, long ledgerId) {\n+        try {\n+            bookKeeper.deleteLedger(ledgerId);\n+            log.debug(\"Delete ledger id: {}\", ledgerId);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        } catch (BKException e) {\n+            log.warn(\"Failed to delete ledger {}: {}\", ledgerId, e);\n+        }\n+    }\n+\n+    private static void deleteManagedLedgers(ZooKeeper zooKeeper, BookKeeper bookKeeper) {\n+        final String managedLedgersRoot = \"/managed-ledgers\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34be51bc4452f374f6200503bd03aa290884bf26", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/34be51bc4452f374f6200503bd03aa290884bf26", "committedDate": "2020-10-17T10:42:34Z", "message": "Ignore NoNodeException when a z-node has no children"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2fd68a4f946d2f6c2cd25b59f94bab8a862825c", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/a2fd68a4f946d2f6c2cd25b59f94bab8a862825c", "committedDate": "2020-10-17T11:42:16Z", "message": "Use ManagedLedgerFactory to delete ledgers of topics and cursors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTkyNDI1", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-510992425", "createdAt": "2020-10-17T15:11:26Z", "commit": {"oid": "a2fd68a4f946d2f6c2cd25b59f94bab8a862825c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNToxMToyNlrOHjd7Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNToxMToyNlrOHjd7Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MjUxNQ==", "bodyText": "ok. looking forward for news", "url": "https://github.com/apache/pulsar/pull/8244#discussion_r506952515", "createdAt": "2020-10-17T15:11:26Z", "author": {"login": "eolivelli"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -107,5 +128,86 @@ public static void deleteZkNodeRecursively(ZooKeeper zooKeeper, String path) thr\n         }\n     }\n \n+    private static List<String> getChildren(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getChildren(path, null);\n+        } catch (InterruptedException | KeeperException e) {\n+            log.error(\"Failed to get children of {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static byte[] getData(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getData(path, null, null);\n+        } catch (KeeperException | InterruptedException e) {\n+            log.error(\"Failed to get data from {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void deleteLedger(BookKeeper bookKeeper, long ledgerId) {\n+        try {\n+            bookKeeper.deleteLedger(ledgerId);\n+            log.debug(\"Delete ledger id: {}\", ledgerId);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        } catch (BKException e) {\n+            log.warn(\"Failed to delete ledger {}: {}\", ledgerId, e);\n+        }\n+    }\n+\n+    private static void deleteManagedLedgers(ZooKeeper zooKeeper, BookKeeper bookKeeper) {\n+        final String managedLedgersRoot = \"/managed-ledgers\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjkyNTIzMw=="}, "originalCommit": {"oid": "37e7ff573055e3264c0879cc0bbddb9990f68584"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTk2ODk5", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-510996899", "createdAt": "2020-10-17T16:17:22Z", "commit": {"oid": "a2fd68a4f946d2f6c2cd25b59f94bab8a862825c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNjoxNzoyM1rOHjeTEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNjoxNzoyM1rOHjeTEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1ODYwOA==", "bodyText": "Probably all of this direct access to Zookeeper is to be moved inside ManagedLedgerFactory.\nWdyt @sijie?", "url": "https://github.com/apache/pulsar/pull/8244#discussion_r506958608", "createdAt": "2020-10-17T16:17:23Z", "author": {"login": "eolivelli"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataTeardown.java", "diffHunk": "@@ -107,5 +135,77 @@ public static void deleteZkNodeRecursively(ZooKeeper zooKeeper, String path) thr\n         }\n     }\n \n+    private static List<String> getChildren(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getChildren(path, null);\n+        } catch (InterruptedException | KeeperException e) {\n+            if (e instanceof KeeperException.NoNodeException) {\n+                return new ArrayList<>();\n+            }\n+            log.error(\"Failed to get children of {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static byte[] getData(ZooKeeper zooKeeper, String path) {\n+        try {\n+            return zooKeeper.getData(path, null, null);\n+        } catch (KeeperException | InterruptedException e) {\n+            log.error(\"Failed to get data from {}: {}\", path, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void deleteLedger(BookKeeper bookKeeper, long ledgerId) {\n+        try {\n+            bookKeeper.deleteLedger(ledgerId);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Delete ledger id: {}\", ledgerId);\n+            }\n+        } catch (InterruptedException | BKException e) {\n+            log.error(\"Failed to delete ledger {}: {}\", ledgerId, e);\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void deleteManagedLedgers(ZooKeeper zooKeeper, ManagedLedgerFactory managedLedgerFactory) {\n+        final String managedLedgersRoot = \"/managed-ledgers\";\n+        getChildren(zooKeeper, managedLedgersRoot).forEach(tenant -> {\n+            final String tenantRoot = managedLedgersRoot + \"/\" + tenant;\n+            getChildren(zooKeeper, tenantRoot).forEach(namespace -> {\n+                final String namespaceRoot = String.join(\"/\", tenantRoot, namespace, \"persistent\");\n+                getChildren(zooKeeper, namespaceRoot).forEach(topic -> {\n+                    final TopicName topicName = TopicName.get(String.join(\"/\", tenant, namespace, topic));\n+                    try {\n+                        managedLedgerFactory.delete(topicName.getPersistenceNamingEncoding());\n+                    } catch (InterruptedException | ManagedLedgerException e) {\n+                        log.error(\"Failed to delete ledgers of {}: {}\", topicName, e);\n+                        throw new RuntimeException(e);\n+                    }\n+                });\n+            });\n+        });\n+    }\n+\n+    private static void deleteSchemaLedgers(ZooKeeper zooKeeper, BookKeeper bookKeeper) {\n+        final String schemaLedgersRoot = \"/schemas\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2fd68a4f946d2f6c2cd25b59f94bab8a862825c"}, "originalPosition": 128}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMzE4MzI3", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-513318327", "createdAt": "2020-10-21T05:32:51Z", "commit": {"oid": "a2fd68a4f946d2f6c2cd25b59f94bab8a862825c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce6f99205b491064ece6254dc72a9c67e6db16e5", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/ce6f99205b491064ece6254dc72a9c67e6db16e5", "committedDate": "2020-10-21T08:27:23Z", "message": "Add integration test for PulsarClusterMetadataTeardown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d318dc2a234744f4938fe576dcea4fa102ebc15", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/2d318dc2a234744f4938fe576dcea4fa102ebc15", "committedDate": "2020-10-21T13:12:26Z", "message": "Fix CI test error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "676319b91f6009d22f206e06705855faf84c256a", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/676319b91f6009d22f206e06705855faf84c256a", "committedDate": "2020-10-21T16:37:04Z", "message": "Change tests suites order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48655ede35a23716fcdd0aefa1af6096bf4514cf", "author": {"user": {"login": "BewareMyPower", "name": "Yunze Xu"}}, "url": "https://github.com/apache/pulsar/commit/48655ede35a23716fcdd0aefa1af6096bf4514cf", "committedDate": "2020-10-22T02:45:49Z", "message": "Use dependent PulsarCluster to avoid NullPointerException in CI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTMzNjcx", "url": "https://github.com/apache/pulsar/pull/8244#pullrequestreview-516933671", "createdAt": "2020-10-26T16:03:41Z", "commit": {"oid": "48655ede35a23716fcdd0aefa1af6096bf4514cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1215, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}