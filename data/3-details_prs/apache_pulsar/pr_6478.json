{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDU0NTY2", "number": 6478, "title": "Fix create partitioned topic with a substring of an existing topic name.", "bodyText": "Fixes #6468\nMotivation\nFix create a partitioned topic with a substring of an existing topic name. And make create partitioned topic async.\nVerifying this change\nAdded unit test for this change.\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (no)\nThe schema: (no)\nThe default values of configurations: (no)\nThe wire protocol: (no)\nThe rest endpoints: (no)\nThe admin cli options: (no)\nAnything that affects deployment: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-03-05T04:01:44Z", "url": "https://github.com/apache/pulsar/pull/6478", "merged": true, "mergeCommit": {"oid": "19ccfd5c60020a32bceeca128a9846ca006f0dc7"}, "closed": true, "closedAt": "2020-03-06T08:50:12Z", "author": {"login": "codelipenghui"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKjV6OAH2gAyMzg0MDU0NTY2OjgzMGFjOWI5NGJjZWYyYTVlMzQxZWMyYWYyZDg5ZjJmY2VhMWZjNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcK6KTEAFqTM3MDEwNjE5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "830ac9b94bcef2a5e341ec2af2d89f2fcea1fc6f", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/830ac9b94bcef2a5e341ec2af2d89f2fcea1fc6f", "committedDate": "2020-03-05T03:55:56Z", "message": "Fix create partitioned topic with a substring of an existing topic name."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d49e6800e09bbb7ed7414350ade86d4ba50619e3", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/d49e6800e09bbb7ed7414350ade86d4ba50619e3", "committedDate": "2020-03-05T11:04:48Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2495e5cea3721feb9358c8e2ccb32fda51d0dea2", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/2495e5cea3721feb9358c8e2ccb32fda51d0dea2", "committedDate": "2020-03-05T15:02:25Z", "message": "handling resume async response exceptionally"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12825ba9f93e53b15e690d6e4790e6f2f9638cda", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/12825ba9f93e53b15e690d6e4790e6f2f9638cda", "committedDate": "2020-03-05T15:07:23Z", "message": "Add more logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/99f5486f2577571ec6ae1ba281c6b52553e737c1", "committedDate": "2020-03-05T15:15:02Z", "message": "Fix log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5OTk0NTQx", "url": "https://github.com/apache/pulsar/pull/6478#pullrequestreview-369994541", "createdAt": "2020-03-05T23:55:32Z", "commit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMDIwMjkw", "url": "https://github.com/apache/pulsar/pull/6478#pullrequestreview-370020290", "createdAt": "2020-03-06T00:58:28Z", "commit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1ODoyOFrOFypnsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMDo1OTo0NlrOFyprKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1NTAyNg==", "bodyText": "@codelipenghui why it is globalZk() here?", "url": "https://github.com/apache/pulsar/pull/6478#discussion_r388655026", "createdAt": "2020-03-06T00:58:28Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -707,4 +709,93 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n         partitionedTopics.sort(null);\n         return partitionedTopics;\n     }\n+\n+    protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n+        try {\n+            validateAdminAccessForTenant(topicName.getTenant());\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to create partitioned topic {}\", clientAppId(), topicName, e);\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+            return;\n+        }\n+        if (numPartitions <= 0) {\n+            asyncResponse.resume(new RestException(Status.NOT_ACCEPTABLE, \"Number of partitions should be more than 0\"));\n+            return;\n+        }\n+        checkTopicExistsAsync(topicName).thenAccept(exists -> {\n+            if (exists) {\n+                log.warn(\"[{}] Failed to create already existing topic {}\", clientAppId(), topicName);\n+                asyncResponse.resume(new RestException(Status.CONFLICT, \"This topic already exists\"));\n+            } else {\n+                try {\n+                    String path = ZkAdminPaths.partitionedTopicPath(topicName);\n+                    byte[] data = jsonMapper().writeValueAsBytes(new PartitionedTopicMetadata(numPartitions));\n+                    zkCreateOptimisticAsync(globalZk(), path, data, (rc, s, o, s1) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1NTE2NA==", "bodyText": "same comment as above", "url": "https://github.com/apache/pulsar/pull/6478#discussion_r388655164", "createdAt": "2020-03-06T00:58:40Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -707,4 +709,93 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n         partitionedTopics.sort(null);\n         return partitionedTopics;\n     }\n+\n+    protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n+        try {\n+            validateAdminAccessForTenant(topicName.getTenant());\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to create partitioned topic {}\", clientAppId(), topicName, e);\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+            return;\n+        }\n+        if (numPartitions <= 0) {\n+            asyncResponse.resume(new RestException(Status.NOT_ACCEPTABLE, \"Number of partitions should be more than 0\"));\n+            return;\n+        }\n+        checkTopicExistsAsync(topicName).thenAccept(exists -> {\n+            if (exists) {\n+                log.warn(\"[{}] Failed to create already existing topic {}\", clientAppId(), topicName);\n+                asyncResponse.resume(new RestException(Status.CONFLICT, \"This topic already exists\"));\n+            } else {\n+                try {\n+                    String path = ZkAdminPaths.partitionedTopicPath(topicName);\n+                    byte[] data = jsonMapper().writeValueAsBytes(new PartitionedTopicMetadata(numPartitions));\n+                    zkCreateOptimisticAsync(globalZk(), path, data, (rc, s, o, s1) -> {\n+                        if (KeeperException.Code.OK.intValue() == rc) {\n+                            if (topicName.isPersistent()) {\n+                                tryCreatePartitionsAsync(numPartitions);\n+                            }\n+                            globalZk().sync(path, (rc2, s2, ctx) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY1NTkxNA==", "bodyText": "This should happen in the callback of tryCreatePartitionAsync.", "url": "https://github.com/apache/pulsar/pull/6478#discussion_r388655914", "createdAt": "2020-03-06T00:59:46Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -707,4 +709,93 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n         partitionedTopics.sort(null);\n         return partitionedTopics;\n     }\n+\n+    protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n+        try {\n+            validateAdminAccessForTenant(topicName.getTenant());\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to create partitioned topic {}\", clientAppId(), topicName, e);\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+            return;\n+        }\n+        if (numPartitions <= 0) {\n+            asyncResponse.resume(new RestException(Status.NOT_ACCEPTABLE, \"Number of partitions should be more than 0\"));\n+            return;\n+        }\n+        checkTopicExistsAsync(topicName).thenAccept(exists -> {\n+            if (exists) {\n+                log.warn(\"[{}] Failed to create already existing topic {}\", clientAppId(), topicName);\n+                asyncResponse.resume(new RestException(Status.CONFLICT, \"This topic already exists\"));\n+            } else {\n+                try {\n+                    String path = ZkAdminPaths.partitionedTopicPath(topicName);\n+                    byte[] data = jsonMapper().writeValueAsBytes(new PartitionedTopicMetadata(numPartitions));\n+                    zkCreateOptimisticAsync(globalZk(), path, data, (rc, s, o, s1) -> {\n+                        if (KeeperException.Code.OK.intValue() == rc) {\n+                            if (topicName.isPersistent()) {\n+                                tryCreatePartitionsAsync(numPartitions);\n+                            }\n+                            globalZk().sync(path, (rc2, s2, ctx) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f5486f2577571ec6ae1ba281c6b52553e737c1"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd0077c44bdb5544e33e1b2dbddb525290dfcf8a", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/dd0077c44bdb5544e33e1b2dbddb525290dfcf8a", "committedDate": "2020-03-06T02:39:27Z", "message": "Fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3f4470502ade725a03526662062147c0cd3a7d8", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/a3f4470502ade725a03526662062147c0cd3a7d8", "committedDate": "2020-03-06T02:43:44Z", "message": "sync global zk first"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMTA2MTkz", "url": "https://github.com/apache/pulsar/pull/6478#pullrequestreview-370106193", "createdAt": "2020-03-06T06:31:04Z", "commit": {"oid": "a3f4470502ade725a03526662062147c0cd3a7d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4984, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}