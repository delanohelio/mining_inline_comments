{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMzkzMjYy", "number": 6287, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0MDo0OVrODeqCKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0MTo0MlrODeqCwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDcyNTUyOnYy", "diffSide": "RIGHT", "path": "pulsar-client-cpp/lib/ClientConnection.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0MDo0OVrOFn6oQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMjo1OTozN1rOFn8Y5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTM2Mg==", "bodyText": "Not sure if we need this, since the operations are done under a lock.", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377399362", "createdAt": "2020-02-11T00:40:49Z", "author": {"login": "jai1"}, "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -284,10 +285,14 @@ void ClientConnection::startConsumerStatsTimer(std::vector<uint64_t> consumerSta\n          it != pendingConsumerStatsMap_.end(); ++it) {\n         consumerStatsRequests.push_back(it->first);\n     }\n-    consumerStatsRequestTimer_->expires_from_now(operationsTimeout_);\n-    consumerStatsRequestTimer_->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout,\n-                                                     shared_from_this(), std::placeholders::_1,\n-                                                     consumerStatsRequests));\n+\n+    DeadlineTimerPtr timer = consumerStatsRequestTimer_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "902a4ba06ebff5a9a9a6b5137afb512a829969a5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQyODE5Nw==", "bodyText": "The timer is not destroyed under a lock", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377428197", "createdAt": "2020-02-11T02:59:37Z", "author": {"login": "merlimat"}, "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -284,10 +285,14 @@ void ClientConnection::startConsumerStatsTimer(std::vector<uint64_t> consumerSta\n          it != pendingConsumerStatsMap_.end(); ++it) {\n         consumerStatsRequests.push_back(it->first);\n     }\n-    consumerStatsRequestTimer_->expires_from_now(operationsTimeout_);\n-    consumerStatsRequestTimer_->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout,\n-                                                     shared_from_this(), std::placeholders::_1,\n-                                                     consumerStatsRequests));\n+\n+    DeadlineTimerPtr timer = consumerStatsRequestTimer_;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTM2Mg=="}, "originalCommit": {"oid": "902a4ba06ebff5a9a9a6b5137afb512a829969a5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDcyNjQ4OnYy", "diffSide": "RIGHT", "path": "pulsar-client-cpp/lib/ClientConnection.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0MToyMlrOFn6o0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzowMTowNFrOFn8ZzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTUwNg==", "bodyText": "Don't we need\nconsumerStatsRequestTimer_  = timer here?", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377399506", "createdAt": "2020-02-11T00:41:22Z", "author": {"login": "jai1"}, "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -284,10 +285,14 @@ void ClientConnection::startConsumerStatsTimer(std::vector<uint64_t> consumerSta\n          it != pendingConsumerStatsMap_.end(); ++it) {\n         consumerStatsRequests.push_back(it->first);\n     }\n-    consumerStatsRequestTimer_->expires_from_now(operationsTimeout_);\n-    consumerStatsRequestTimer_->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout,\n-                                                     shared_from_this(), std::placeholders::_1,\n-                                                     consumerStatsRequests));\n+\n+    DeadlineTimerPtr timer = consumerStatsRequestTimer_;\n+    if (timer) {\n+        timer->expires_from_now(operationsTimeout_);\n+        timer->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout, shared_from_this(),\n+                                    std::placeholders::_1, consumerStatsRequests));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "902a4ba06ebff5a9a9a6b5137afb512a829969a5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQyODQyOA==", "bodyText": "No, it's already sharing a reference to the same object. The local copy is just to keep it alive while we're using it.", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377428428", "createdAt": "2020-02-11T03:01:04Z", "author": {"login": "merlimat"}, "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -284,10 +285,14 @@ void ClientConnection::startConsumerStatsTimer(std::vector<uint64_t> consumerSta\n          it != pendingConsumerStatsMap_.end(); ++it) {\n         consumerStatsRequests.push_back(it->first);\n     }\n-    consumerStatsRequestTimer_->expires_from_now(operationsTimeout_);\n-    consumerStatsRequestTimer_->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout,\n-                                                     shared_from_this(), std::placeholders::_1,\n-                                                     consumerStatsRequests));\n+\n+    DeadlineTimerPtr timer = consumerStatsRequestTimer_;\n+    if (timer) {\n+        timer->expires_from_now(operationsTimeout_);\n+        timer->async_wait(std::bind(&ClientConnection::handleConsumerStatsTimeout, shared_from_this(),\n+                                    std::placeholders::_1, consumerStatsRequests));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTUwNg=="}, "originalCommit": {"oid": "902a4ba06ebff5a9a9a6b5137afb512a829969a5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDcyNzA0OnYy", "diffSide": "RIGHT", "path": "pulsar-client-cpp/lib/ClientConnection.cc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0MTo0MlrOFn6pKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0MTo0MlrOFn6pKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM5OTU5NA==", "bodyText": "nit: Can you create a separate function for this?", "url": "https://github.com/apache/pulsar/pull/6287#discussion_r377399594", "createdAt": "2020-02-11T00:41:42Z", "author": {"login": "jai1"}, "path": "pulsar-client-cpp/lib/ClientConnection.cc", "diffHunk": "@@ -253,9 +253,10 @@ void ClientConnection::handlePulsarConnected(const CommandConnected& cmdConnecte\n \n     if (serverProtocolVersion_ >= v1) {\n         // Only send keep-alive probes if the broker supports it\n-        keepAliveTimer_ = executor_->createDeadlineTimer();\n-        keepAliveTimer_->expires_from_now(boost::posix_time::seconds(KeepAliveIntervalInSeconds));\n-        keepAliveTimer_->async_wait(std::bind(&ClientConnection::handleKeepAliveTimeout, shared_from_this()));\n+        DeadlineTimerPtr keepAliveTimer = executor_->createDeadlineTimer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "902a4ba06ebff5a9a9a6b5137afb512a829969a5"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1955, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}