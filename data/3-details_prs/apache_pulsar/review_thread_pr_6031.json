{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjg0NTY3", "number": 6031, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNDoyOVrODYNw0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0NDoyOFrODYN_zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzE3OTA0OnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pb/doc.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNDoyOVrOFd8bHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNDoyOVrOFd8bHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0MzAwNA==", "bodyText": "please don't remove the comments", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366943004", "createdAt": "2020-01-15T15:34:29Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pb/doc.go", "diffHunk": "@@ -17,18 +17,4 @@\n // under the License.\n //\n \n-// Package api provides the protocol buffer messages that Pulsar\n-// uses for the client/broker wire protocol.\n-// See \"Pulsar binary protocol specification\" for more information.\n-// https://pulsar.incubator.apache.org/docs/latest/project/BinaryProtocol/\n-//\n-// The protocol definition files are part of the main Pulsar source,\n-// located within the Pulsar repository at:\n-// https://github.com/apache/incubator-pulsar/tree/master/pulsar-common/src/main/proto\n-//\n-// The generated Go code was created from the source Pulsar files at git:\n-//    tag:      v1.18-2614-g548c726b8\n-//    revision: 548c726b8e7f0e163b1132c9ada6ba83d6bec572\n-//\n-// Files generated by the protoc-gen-go program should not be modified.\n-package pb\n+package api", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzE4MTMyOnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/context.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNTowNVrOFd8cfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNTowNVrOFd8cfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0MzM1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tmyMap := c.instanceConf.funcDetails.GetSource().InputSpecs\n          \n          \n            \n            \tinputMap := c.instanceConf.funcDetails.GetSource().InputSpecs", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366943358", "createdAt": "2020-01-15T15:35:05Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/context.go", "diffHunk": "@@ -43,7 +43,15 @@ func (c *FunctionContext) GetInstanceID() int {\n }\n \n func (c *FunctionContext) GetInputTopics() []string {\n-\treturn c.inputTopics\n+\tmyMap := c.instanceConf.funcDetails.GetSource().InputSpecs", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzE4Mjc3OnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/context.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNToyOVrOFd8dbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNToyOVrOFd8dbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0MzU5OQ==", "bodyText": "please remove the comments", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366943599", "createdAt": "2020-01-15T15:35:29Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/context.go", "diffHunk": "@@ -43,7 +43,15 @@ func (c *FunctionContext) GetInstanceID() int {\n }\n \n func (c *FunctionContext) GetInputTopics() []string {\n-\treturn c.inputTopics\n+\tmyMap := c.instanceConf.funcDetails.GetSource().InputSpecs\n+\tinputTopics := make([]string, len(myMap))\n+\ti := 0\n+\tfor k := range myMap {\n+\t\tinputTopics[i] = k\n+\t\ti++\n+\t}\n+\treturn inputTopics\n+\t//return c.inputTopics", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzE4NDg1OnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instance.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNjowMFrOFd8euQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODoxMDowMVrOFeBlWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0MzkyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"\n          \n          \n            \n            \t\"github.com/apache/pulsar/pulsar-function-go/pb\"", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366943929", "createdAt": "2020-01-15T15:36:00Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instance.go", "diffHunk": "@@ -21,12 +21,13 @@ package pf\n \n import (\n \t\"context\"\n+\t\"github.com/golang/protobuf/ptypes/empty\"\n \t\"math\"\n \t\"time\"\n \n \t\"github.com/apache/pulsar/pulsar-client-go/pulsar\"\n \tlog \"github.com/apache/pulsar/pulsar-function-go/logutil\"\n-\t\"github.com/apache/pulsar/pulsar-function-go/pb\"\n+\tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAyNzU0Nw==", "bodyText": "When I make this change, I can't get it to build. I get unresolved variables, even if I remove pb from the references in the code.", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r367027547", "createdAt": "2020-01-15T18:10:01Z", "author": {"login": "devinbost"}, "path": "pulsar-function-go/pf/instance.go", "diffHunk": "@@ -21,12 +21,13 @@ package pf\n \n import (\n \t\"context\"\n+\t\"github.com/golang/protobuf/ptypes/empty\"\n \t\"math\"\n \t\"time\"\n \n \t\"github.com/apache/pulsar/pulsar-client-go/pulsar\"\n \tlog \"github.com/apache/pulsar/pulsar-function-go/logutil\"\n-\t\"github.com/apache/pulsar/pulsar-function-go/pb\"\n+\tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0MzkyOQ=="}, "originalCommit": null, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzE5MDgzOnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instance.go", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNzozNVrOFd8idQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozNzozNVrOFd8idQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NDg4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tlog.Errorf(\"Haven't received health check from spawner in a while. Stopping instance...\")\n          \n          \n            \n            \t\tlog.Error(\"Haven't received health check from spawner in a while. Stopping instance...\")", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366944885", "createdAt": "2020-01-15T15:37:35Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instance.go", "diffHunk": "@@ -35,19 +36,57 @@ type goInstance struct {\n \tproducer  pulsar.Producer\n \tconsumers map[string]pulsar.Consumer\n \tclient    pulsar.Client\n+\tlastHealthCheckTs int64\n }\n \n+\n // newGoInstance init goInstance and init function context\n func newGoInstance() *goInstance {\n \tgoInstance := &goInstance{\n \t\tcontext:   NewFuncContext(),\n \t\tconsumers: make(map[string]pulsar.Consumer),\n \t}\n+\tnow := time.Now()\n+\tgoInstance.lastHealthCheckTs = now.UnixNano()\n \treturn goInstance\n }\n \n+func (gi *goInstance) processSpawnerHealthCheckTimer(tkr *time.Ticker){\n+\tlog.Info(\"Starting processSpawnerHealthCheckTimer\")\n+\tnow := time.Now()\n+\tmaxIdleTime := gi.context.GetMaxIdleTime()\n+\ttimeSinceLastCheck := now.UnixNano() - gi.lastHealthCheckTs\n+\tif (timeSinceLastCheck) > (maxIdleTime)  {\n+\t\tlog.Errorf(\"Haven't received health check from spawner in a while. Stopping instance...\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzE5MzkzOnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instance.go", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozODoyMFrOFd8kVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozODoyMFrOFd8kVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NTM2NA==", "bodyText": "please remove the commets", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366945364", "createdAt": "2020-01-15T15:38:20Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instance.go", "diffHunk": "@@ -35,19 +36,57 @@ type goInstance struct {\n \tproducer  pulsar.Producer\n \tconsumers map[string]pulsar.Consumer\n \tclient    pulsar.Client\n+\tlastHealthCheckTs int64\n }\n \n+\n // newGoInstance init goInstance and init function context\n func newGoInstance() *goInstance {\n \tgoInstance := &goInstance{\n \t\tcontext:   NewFuncContext(),\n \t\tconsumers: make(map[string]pulsar.Consumer),\n \t}\n+\tnow := time.Now()\n+\tgoInstance.lastHealthCheckTs = now.UnixNano()\n \treturn goInstance\n }\n \n+func (gi *goInstance) processSpawnerHealthCheckTimer(tkr *time.Ticker){\n+\tlog.Info(\"Starting processSpawnerHealthCheckTimer\")\n+\tnow := time.Now()\n+\tmaxIdleTime := gi.context.GetMaxIdleTime()\n+\ttimeSinceLastCheck := now.UnixNano() - gi.lastHealthCheckTs\n+\tif (timeSinceLastCheck) > (maxIdleTime)  {\n+\t\tlog.Errorf(\"Haven't received health check from spawner in a while. Stopping instance...\")\n+\t\tgi.close()\n+\t\t// os.Exit(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzIwMTcwOnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instanceConf.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0MDozMFrOFd8pXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODoxMjo1NVrOFeBqVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NjY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"\n          \n          \n            \n            \t\"github.com/apache/pulsar/pulsar-function-go/pb\"", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366946654", "createdAt": "2020-01-15T15:40:30Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instanceConf.go", "diffHunk": "@@ -24,7 +24,7 @@ import (\n \t\"time\"\n \n \t\"github.com/apache/pulsar/pulsar-function-go/conf\"\n-\t\"github.com/apache/pulsar/pulsar-function-go/pb\"\n+\tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAyODgyMw==", "bodyText": "Again, when I make this change, I can't get it to build.", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r367028823", "createdAt": "2020-01-15T18:12:55Z", "author": {"login": "devinbost"}, "path": "pulsar-function-go/pf/instanceConf.go", "diffHunk": "@@ -24,7 +24,7 @@ import (\n \t\"time\"\n \n \t\"github.com/apache/pulsar/pulsar-function-go/conf\"\n-\t\"github.com/apache/pulsar/pulsar-function-go/pb\"\n+\tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NjY1NA=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzIwMzM5OnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instanceControlServicer.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0MDo1N1rOFd8qfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODoxMzoxMFrOFeBq1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0Njk0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"\n          \n          \n            \n            \t\"github.com/apache/pulsar/pulsar-function-go/pb\"", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366946940", "createdAt": "2020-01-15T15:40:57Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instanceControlServicer.go", "diffHunk": "@@ -0,0 +1,71 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"github.com/golang/protobuf/ptypes/empty\"\n+\t\"net\"\n+\t\"google.golang.org/grpc\"\n+\tlog \"github.com/apache/pulsar/pulsar-function-go/logutil\"\n+\tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAyODk0OA==", "bodyText": "Again, when I make this change, I can't get it to build.", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r367028948", "createdAt": "2020-01-15T18:13:10Z", "author": {"login": "devinbost"}, "path": "pulsar-function-go/pf/instanceControlServicer.go", "diffHunk": "@@ -0,0 +1,71 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"github.com/golang/protobuf/ptypes/empty\"\n+\t\"net\"\n+\t\"google.golang.org/grpc\"\n+\tlog \"github.com/apache/pulsar/pulsar-function-go/logutil\"\n+\tpb \"github.com/apache/pulsar/pulsar-function-go/pb\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0Njk0MA=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzIwOTI4OnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instance_test.go", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0MjoxOFrOFd8t_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0MzoyNVrOFd8wrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NzgzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprintln(\"Starting processSpawnerHealthCheckTimer\")\n          \n          \n            \n            \tfmt.Println(\"Starting processSpawnerHealthCheckTimer\")", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366947839", "createdAt": "2020-01-15T15:42:18Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instance_test.go", "diffHunk": "@@ -0,0 +1,93 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"strconv\"\n+\t\"testing\"\n+\t\"time\"\n+)\n+\n+\n+func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter *int ){\n+\tprintln(\"Starting processSpawnerHealthCheckTimer\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0ODUyNw==", "bodyText": "@devinbost please replace println() with fmt.Println()", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366948527", "createdAt": "2020-01-15T15:43:25Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instance_test.go", "diffHunk": "@@ -0,0 +1,93 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"strconv\"\n+\t\"testing\"\n+\t\"time\"\n+)\n+\n+\n+func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter *int ){\n+\tprintln(\"Starting processSpawnerHealthCheckTimer\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NzgzOQ=="}, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzIxNjI0OnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instance_test.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0NDowNlrOFd8yWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODoxODoxM1rOFeB0Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0ODk1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter *int ){\n          \n          \n            \n            func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter int ){", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366948954", "createdAt": "2020-01-15T15:44:06Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instance_test.go", "diffHunk": "@@ -0,0 +1,93 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"strconv\"\n+\t\"testing\"\n+\t\"time\"\n+)\n+\n+\n+func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter *int ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzMTM4Nw==", "bodyText": "This change breaks the test because the counter variable doesn't propagate as needed for the assertion.", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r367031387", "createdAt": "2020-01-15T18:18:13Z", "author": {"login": "devinbost"}, "path": "pulsar-function-go/pf/instance_test.go", "diffHunk": "@@ -0,0 +1,93 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"strconv\"\n+\t\"testing\"\n+\t\"time\"\n+)\n+\n+\n+func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter *int ){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0ODk1NA=="}, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzIxNzQyOnYy", "diffSide": "RIGHT", "path": "pulsar-function-go/pf/instance_test.go", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0NDoyOFrOFd8zIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODozMDozNFrOFeCLjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0OTE1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            func testStartScheduler(counter *int){\n          \n          \n            \n            func testStartScheduler(counter int){", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r366949152", "createdAt": "2020-01-15T15:44:28Z", "author": {"login": "wolfstudy"}, "path": "pulsar-function-go/pf/instance_test.go", "diffHunk": "@@ -0,0 +1,93 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"strconv\"\n+\t\"testing\"\n+\t\"time\"\n+)\n+\n+\n+func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter *int ){\n+\tprintln(\"Starting processSpawnerHealthCheckTimer\")\n+\tnow := time.Now()\n+\tmaxIdleTime := int64(time.Duration(expectedHealthCheckInterval) * 3 * time.Second)\n+\tprintln(\"maxIdleTime is: \" + strconv.FormatInt(maxIdleTime, 10))\n+\ttimeSinceLastCheck := now.UnixNano() - lastHealthCheckTs\n+\tprintln(\"timeSinceLastCheck is: \" + strconv.FormatInt(timeSinceLastCheck, 10))\n+\tif (timeSinceLastCheck) > (maxIdleTime)  {\n+\t\tprintln(\"Haven't received health check from spawner in a while. Stopping instance...\")\n+\t\t// os.Exit(1)\n+\t\ttkr.Stop()\n+\t} else {\n+\t\tprintln(\"Continuing to check\")\n+\t\t*counter++\n+\t}\n+}\n+\n+func testStartScheduler(counter *int){", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAzNzMyNw==", "bodyText": "Again, this change breaks the test because the counter variable doesn't propagate as needed for the assertion.", "url": "https://github.com/apache/pulsar/pull/6031#discussion_r367037327", "createdAt": "2020-01-15T18:30:34Z", "author": {"login": "devinbost"}, "path": "pulsar-function-go/pf/instance_test.go", "diffHunk": "@@ -0,0 +1,93 @@\n+//\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+package pf\n+\n+import (\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"strconv\"\n+\t\"testing\"\n+\t\"time\"\n+)\n+\n+\n+func testProcessSpawnerHealthCheckTimer(tkr *time.Ticker, lastHealthCheckTs int64, expectedHealthCheckInterval int32, counter *int ){\n+\tprintln(\"Starting processSpawnerHealthCheckTimer\")\n+\tnow := time.Now()\n+\tmaxIdleTime := int64(time.Duration(expectedHealthCheckInterval) * 3 * time.Second)\n+\tprintln(\"maxIdleTime is: \" + strconv.FormatInt(maxIdleTime, 10))\n+\ttimeSinceLastCheck := now.UnixNano() - lastHealthCheckTs\n+\tprintln(\"timeSinceLastCheck is: \" + strconv.FormatInt(timeSinceLastCheck, 10))\n+\tif (timeSinceLastCheck) > (maxIdleTime)  {\n+\t\tprintln(\"Haven't received health check from spawner in a while. Stopping instance...\")\n+\t\t// os.Exit(1)\n+\t\ttkr.Stop()\n+\t} else {\n+\t\tprintln(\"Continuing to check\")\n+\t\t*counter++\n+\t}\n+}\n+\n+func testStartScheduler(counter *int){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0OTE1Mg=="}, "originalCommit": null, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2063, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}