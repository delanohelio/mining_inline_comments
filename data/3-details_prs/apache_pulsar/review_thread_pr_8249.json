{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNjA4NTQz", "number": 8249, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyMDowNlrOEuih7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxMzozODo0MVrOFQ4VxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjM1NjkyOnYy", "diffSide": "RIGHT", "path": "site2/website/versioned_docs/version-2.2.0/client-libraries-websocket.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyMDowNlrOHjA6Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyMDowNlrOHjA6Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ3NzA3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #### Negative acknowledging the message\n          \n          \n            \n            #### Negatively acknowledging messages", "url": "https://github.com/apache/pulsar/pull/8249#discussion_r506477078", "createdAt": "2020-10-16T14:20:06Z", "author": {"login": "Huanli-Meng"}, "path": "site2/website/versioned_docs/version-2.2.0/client-libraries-websocket.md", "diffHunk": "@@ -180,6 +181,17 @@ Key | Type | Required? | Explanation\n :---|:-----|:----------|:-----------\n `messageId`| string | yes | Message ID of the processed message\n \n+#### Negative acknowledging the message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "909fac3ca6e056c4d60f209e58e33dcc2db03b67"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Njc4NDcwOnYy", "diffSide": "RIGHT", "path": "site2/docs/client-libraries-websocket.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMzo0ODo1NVrOHjqWpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNToxNToyN1rOHjrh-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NjEzNQ==", "bodyText": "Change this sentence \"When a negative acked message will be redelivered to DLQ.\" to \"A negatively-acknowledged message will be redelivered to the DLQ.\" or \"When a message is negatively acknowledged, it will be redelivered to the DLQ.\" Does this make sense? Thanks", "url": "https://github.com/apache/pulsar/pull/8249#discussion_r507156135", "createdAt": "2020-10-18T13:48:55Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/client-libraries-websocket.md", "diffHunk": "@@ -145,6 +145,8 @@ Key | Type | Required? | Explanation\n `maxRedeliverCount` | int | no | Define a [maxRedeliverCount](http://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ConsumerBuilder.html#deadLetterPolicy-org.apache.pulsar.client.api.DeadLetterPolicy-) for the consumer (default: 0). Activates [Dead Letter Topic](https://github.com/apache/pulsar/wiki/PIP-22%3A-Pulsar-Dead-Letter-Topic) feature.\n `deadLetterTopic` | string | no | Define a [deadLetterTopic](http://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ConsumerBuilder.html#deadLetterPolicy-org.apache.pulsar.client.api.DeadLetterPolicy-) for the consumer (default: {topic}-{subscription}-DLQ). Activates [Dead Letter Topic](https://github.com/apache/pulsar/wiki/PIP-22%3A-Pulsar-Dead-Letter-Topic) feature.\n `pullMode` | boolean | no | Enable pull mode (default: false). See \"Flow Control\" below.\n+`negativeAckRedeliveryDelay` | int | no | When a negative acked message will be redelivered to DLQ.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be74ad6f5c10098ccebb67fcc92d68947eb0d378"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NTQxNw==", "bodyText": "Done.", "url": "https://github.com/apache/pulsar/pull/8249#discussion_r507175417", "createdAt": "2020-10-18T15:15:27Z", "author": {"login": "yrsh"}, "path": "site2/docs/client-libraries-websocket.md", "diffHunk": "@@ -145,6 +145,8 @@ Key | Type | Required? | Explanation\n `maxRedeliverCount` | int | no | Define a [maxRedeliverCount](http://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ConsumerBuilder.html#deadLetterPolicy-org.apache.pulsar.client.api.DeadLetterPolicy-) for the consumer (default: 0). Activates [Dead Letter Topic](https://github.com/apache/pulsar/wiki/PIP-22%3A-Pulsar-Dead-Letter-Topic) feature.\n `deadLetterTopic` | string | no | Define a [deadLetterTopic](http://pulsar.apache.org/api/client/org/apache/pulsar/client/api/ConsumerBuilder.html#deadLetterPolicy-org.apache.pulsar.client.api.DeadLetterPolicy-) for the consumer (default: {topic}-{subscription}-DLQ). Activates [Dead Letter Topic](https://github.com/apache/pulsar/wiki/PIP-22%3A-Pulsar-Dead-Letter-Topic) feature.\n `pullMode` | boolean | no | Enable pull mode (default: false). See \"Flow Control\" below.\n+`negativeAckRedeliveryDelay` | int | no | When a negative acked message will be redelivered to DLQ.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NjEzNQ=="}, "originalCommit": {"oid": "be74ad6f5c10098ccebb67fcc92d68947eb0d378"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDc3MTgyOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/ProxyPublishConsumeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzoxNjowMVrOH0iy9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzoxNjowMVrOH0iy9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg1ODEwMw==", "bodyText": "I think you can refine the test as #8557 does. Sleep also introduces too much flaky tests.", "url": "https://github.com/apache/pulsar/pull/8249#discussion_r524858103", "createdAt": "2020-11-17T03:16:01Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/ProxyPublishConsumeTest.java", "diffHunk": "@@ -564,6 +566,76 @@ public void socketPullModeTest() throws Exception {\n         }\n     }\n \n+    @Test(timeOut = 10000)\n+    public void nackMessageTest() throws Exception {\n+        final String subscription = \"my-sub\";\n+        final String dlqTopic = \"my-property/my-ns/my-topic10\";\n+        final String consumerTopic = \"my-property/my-ns/my-topic9\";\n+\n+        final String dlqUri = \"ws://localhost:\" + proxyServer.getListenPortHTTP().get() +\n+          \"/ws/v2/consumer/persistent/\" +\n+          dlqTopic + \"/\" + subscription +\n+          \"?subscriptionType=Shared\";\n+\n+        final String consumerUri = \"ws://localhost:\" + proxyServer.getListenPortHTTP().get() +\n+          \"/ws/v2/consumer/persistent/\" +\n+          consumerTopic + \"/\" + subscription +\n+          \"?deadLetterTopic=\" + dlqTopic +\n+          \"&maxRedeliverCount=0&subscriptionType=Shared&ackTimeoutMillis=1000&negativeAckRedeliveryDelay=1000\";\n+\n+        final String producerUri = \"ws://localhost:\" + proxyServer.getListenPortHTTP().get() +\n+          \"/ws/v2/producer/persistent/\" + consumerTopic;\n+\n+        WebSocketClient consumeClient1 = new WebSocketClient();\n+        SimpleConsumerSocket consumeSocket1 = new SimpleConsumerSocket();\n+        WebSocketClient consumeClient2 = new WebSocketClient();\n+        SimpleConsumerSocket consumeSocket2 = new SimpleConsumerSocket();\n+        WebSocketClient produceClient = new WebSocketClient();\n+        SimpleProducerSocket produceSocket = new SimpleProducerSocket();\n+\n+        consumeSocket1.setMessageHandler((id, data) -> {\n+            JsonObject nack = new JsonObject();\n+            nack.add(\"messageId\", new JsonPrimitive(id));\n+            nack.add(\"type\", new JsonPrimitive(\"negativeAcknowledge\"));\n+            return nack.toString();\n+        });\n+\n+        try {\n+            consumeClient1.start();\n+            consumeClient2.start();\n+            ClientUpgradeRequest consumeRequest1 = new ClientUpgradeRequest();\n+            ClientUpgradeRequest consumeRequest2 = new ClientUpgradeRequest();\n+            Future<Session> consumerFuture1 = consumeClient1.connect(consumeSocket1, URI.create(consumerUri), consumeRequest1);\n+            Future<Session> consumerFuture2 = consumeClient2.connect(consumeSocket2, URI.create(dlqUri), consumeRequest2);\n+\n+            assertTrue(consumerFuture1.get().isOpen());\n+            assertTrue(consumerFuture2.get().isOpen());\n+\n+            ClientUpgradeRequest produceRequest = new ClientUpgradeRequest();\n+            produceClient.start();\n+            Future<Session> producerFuture = produceClient.connect(produceSocket, URI.create(producerUri), produceRequest);\n+            assertTrue(producerFuture.get().isOpen());\n+\n+            assertEquals(consumeSocket1.getReceivedMessagesCount(), 0);\n+            assertEquals(consumeSocket2.getReceivedMessagesCount(), 0);\n+\n+            produceSocket.sendMessage(1);\n+\n+            Thread.sleep(500);\n+\n+            //assertEquals(consumeSocket1.getReceivedMessagesCount(), 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8320463788b55c03e1999865520221fab30ec04"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMjQ0NjEzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/SimpleConsumerMessageHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxMzozODo0MVrOIW-nIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxMzozODo0MVrOIW-nIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDk2NTQwOQ==", "bodyText": "Miss license header here.", "url": "https://github.com/apache/pulsar/pull/8249#discussion_r560965409", "createdAt": "2021-01-20T13:38:41Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/websocket/proxy/SimpleConsumerMessageHandler.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package org.apache.pulsar.websocket.proxy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8320463788b55c03e1999865520221fab30ec04"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2913, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}