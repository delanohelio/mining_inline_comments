{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MTY1Njc2", "number": 8446, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyODoyOFrOE1P6Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0OTo0NVrOE1Qgjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjcwNjg2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyODoyOFrOHtakIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyODoyOFrOHtakIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4MzIwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                \"[%s] Failed to update offload configuration for namespace %s\",\n          \n          \n            \n                                                \"[%s] Failed to remove offload configuration for namespace %s\",", "url": "https://github.com/apache/pulsar/pull/8446#discussion_r517383201", "createdAt": "2020-11-04T14:28:28Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -3000,6 +3001,47 @@ protected void internalSetOffloadPolicies(AsyncResponse asyncResponse, OffloadPo\n         }\n     }\n \n+    protected void internalRemoveOffloadPolicies(AsyncResponse asyncResponse) {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.OFFLOAD, PolicyOperation.WRITE);\n+        validatePoliciesReadOnlyAccess();\n+\n+        try {\n+            Stat nodeStat = new Stat();\n+            final String path = path(POLICIES, namespaceName.toString());\n+            byte[] content = globalZk().getData(path, null, nodeStat);\n+            Policies policies = jsonMapper().readValue(content, Policies.class);\n+\n+            policies.offload_policies = null;\n+            String updatedOffloadPolicies = jsonMapper().writeValueAsString(policies.offload_policies);\n+            globalZk().setData(path, jsonMapper().writeValueAsBytes(policies), nodeStat.getVersion(),\n+                    (rc, path1, ctx, stat) -> {\n+                        if (rc == KeeperException.Code.OK.intValue()) {\n+                            policiesCache().invalidate(path(POLICIES, namespaceName.toString()));\n+                            log.info(\"[{}] Successfully updated offload configuration: namespace={}, map={}\", clientAppId(),\n+                                    namespaceName, updatedOffloadPolicies);\n+                            asyncResponse.resume(Response.noContent().build());\n+                        } else {\n+                            String errorMsg = String.format(\n+                                    \"[%s] Failed to update offload configuration for namespace %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb32ff25f0b46f59975882ec396a5b0375b209"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjcwODEzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyODo0NlrOHtak7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyODo0NlrOHtak7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4MzQwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.error(\"[{}] Failed to update offload configuration for namespace {}\", clientAppId(), namespaceName,\n          \n          \n            \n                        log.error(\"[{}] Failed to remove offload configuration for namespace {}\", clientAppId(), namespaceName,", "url": "https://github.com/apache/pulsar/pull/8446#discussion_r517383406", "createdAt": "2020-11-04T14:28:46Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -3000,6 +3001,47 @@ protected void internalSetOffloadPolicies(AsyncResponse asyncResponse, OffloadPo\n         }\n     }\n \n+    protected void internalRemoveOffloadPolicies(AsyncResponse asyncResponse) {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.OFFLOAD, PolicyOperation.WRITE);\n+        validatePoliciesReadOnlyAccess();\n+\n+        try {\n+            Stat nodeStat = new Stat();\n+            final String path = path(POLICIES, namespaceName.toString());\n+            byte[] content = globalZk().getData(path, null, nodeStat);\n+            Policies policies = jsonMapper().readValue(content, Policies.class);\n+\n+            policies.offload_policies = null;\n+            String updatedOffloadPolicies = jsonMapper().writeValueAsString(policies.offload_policies);\n+            globalZk().setData(path, jsonMapper().writeValueAsBytes(policies), nodeStat.getVersion(),\n+                    (rc, path1, ctx, stat) -> {\n+                        if (rc == KeeperException.Code.OK.intValue()) {\n+                            policiesCache().invalidate(path(POLICIES, namespaceName.toString()));\n+                            log.info(\"[{}] Successfully updated offload configuration: namespace={}, map={}\", clientAppId(),\n+                                    namespaceName, updatedOffloadPolicies);\n+                            asyncResponse.resume(Response.noContent().build());\n+                        } else {\n+                            String errorMsg = String.format(\n+                                    \"[%s] Failed to update offload configuration for namespace %s\",\n+                                    clientAppId(), namespaceName);\n+                            if (rc == KeeperException.Code.NONODE.intValue()) {\n+                                log.warn(\"{} : does not exist\", errorMsg);\n+                                asyncResponse.resume(new RestException(Status.NOT_FOUND, \"Namespace does not exist\"));\n+                            } else if (rc == KeeperException.Code.BADVERSION.intValue()) {\n+                                log.warn(\"{} : concurrent modification\", errorMsg);\n+                                asyncResponse.resume(new RestException(Status.CONFLICT, \"Concurrent modification\"));\n+                            } else {\n+                                asyncResponse.resume(KeeperException.create(KeeperException.Code.get(rc), errorMsg));\n+                            }\n+                        }\n+                    }, null);\n+        } catch (Exception e) {\n+            log.error(\"[{}] Failed to update offload configuration for namespace {}\", clientAppId(), namespaceName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb32ff25f0b46f59975882ec396a5b0375b209"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0Mjc0MzcyOnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDozNjozOFrOHta7XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDozNjozOFrOHta7XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4OTE0OA==", "bodyText": "Maybe this is not exactly. Removing the namespace offload policies not represents to remove the topic offload policies, if the topic has its own offload policies, it will not be affected.", "url": "https://github.com/apache/pulsar/pull/8446#discussion_r517389148", "createdAt": "2020-11-04T14:36:38Z", "author": {"login": "gaoran10"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -3263,6 +3263,20 @@ void setIsAllowAutoUpdateSchema(String namespace, boolean isAllowAutoUpdateSchem\n      */\n     void setOffloadPolicies(String namespace, OffloadPolicies offloadPolicies) throws PulsarAdminException;\n \n+    /**\n+     * Remove the offload configuration for all the topics in a namespace.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb32ff25f0b46f59975882ec396a5b0375b209"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0Mjc1Njg4OnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDozOToyM1rOHtbDeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDozOToyM1rOHtbDeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5MTIyNQ==", "bodyText": "Same as above.", "url": "https://github.com/apache/pulsar/pull/8446#discussion_r517391225", "createdAt": "2020-11-04T14:39:23Z", "author": {"login": "gaoran10"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -3290,6 +3304,20 @@ void setIsAllowAutoUpdateSchema(String namespace, boolean isAllowAutoUpdateSchem\n      */\n     CompletableFuture<Void> setOffloadPoliciesAsync(String namespace, OffloadPolicies offloadPolicies);\n \n+    /**\n+     * Remove the offload configuration for all the topics in a namespace asynchronously.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb32ff25f0b46f59975882ec396a5b0375b209"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0Mjc3Mjk3OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0Mjo1MlrOHtbNbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0Mjo1MlrOHtbNbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5Mzc3Mw==", "bodyText": "It's better to use the DELETE method.", "url": "https://github.com/apache/pulsar/pull/8446#discussion_r517393773", "createdAt": "2020-11-04T14:42:52Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "diffHunk": "@@ -1335,14 +1334,34 @@ public void setOffloadPolicies(@PathParam(\"tenant\") String tenant, @PathParam(\"n\n         }\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb32ff25f0b46f59975882ec396a5b0375b209"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjgwNDYyOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0OTo0NVrOHtbhIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0OTo0NVrOHtbhIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5ODgxNw==", "bodyText": "String updatedOffloadPolicies = jsonMapper().writeValueAsString(policies.offload_policies);\nMaybe this is not necessary? The log could be just like Successfully remove the namespace offload policies.", "url": "https://github.com/apache/pulsar/pull/8446#discussion_r517398817", "createdAt": "2020-11-04T14:49:45Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -3000,6 +3001,47 @@ protected void internalSetOffloadPolicies(AsyncResponse asyncResponse, OffloadPo\n         }\n     }\n \n+    protected void internalRemoveOffloadPolicies(AsyncResponse asyncResponse) {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.OFFLOAD, PolicyOperation.WRITE);\n+        validatePoliciesReadOnlyAccess();\n+\n+        try {\n+            Stat nodeStat = new Stat();\n+            final String path = path(POLICIES, namespaceName.toString());\n+            byte[] content = globalZk().getData(path, null, nodeStat);\n+            Policies policies = jsonMapper().readValue(content, Policies.class);\n+\n+            policies.offload_policies = null;\n+            String updatedOffloadPolicies = jsonMapper().writeValueAsString(policies.offload_policies);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccbb32ff25f0b46f59975882ec396a5b0375b209"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2868, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}