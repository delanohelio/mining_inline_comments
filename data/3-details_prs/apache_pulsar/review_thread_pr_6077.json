{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDQ4NDAx", "number": 6077, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxMzoyMlrODY2RNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxOToyMlrODY2ZLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzgxNTU4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxMzoyMlrOFe8DKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxMzoyMlrOFe8DKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NTQ1MA==", "bodyText": "I like the idea of introducing brokerDeleteInactiveTopicsMaxInactiveDurationSeconds. However, I think we need to keep backward compatibility here since it was using brokerDeleteInactiveTopicsFrequencySeconds. So what you can do here are the followings:\n\nuse boxed type not primitive type. so it is null when this setting is not specified.\n\nprivate Integer brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = null\n\n\nimplementing the getter for this field.\n\nint getBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds() {\n     if (brokerDeleteInactiveTopicsMaxInactiveDurationSeconds == null) {\n         return brokerDeleteInactiveTopicsFrequencySeconds;\n     } else {\n         return brokerDeleteInactiveTopicsMaxInactiveDurationSeconds;\n     }\n}", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367985450", "createdAt": "2020-01-17T15:13:22Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -254,6 +255,23 @@\n         doc = \"How often to check for inactive topics\"\n     )\n     private int brokerDeleteInactiveTopicsFrequencySeconds = 60;\n+\n+    @FieldContext(\n+        category = CATEGORY_POLICIES,\n+        doc = \"Set the inactive topic delete mode. Default is delete_when_no_subscriptions\\n\"\n+        + \"'delete_when_no_subscriptions' mode only delete the topic which has no subscriptions and no active producers\\n\"\n+        + \"'delete_when_subscriptions_caught_up' mode only delete the topic that all subscriptions has no backlogs(caught up)\"\n+        + \"and no active producers/consumers\"\n+    )\n+    private InactiveTopicDeleteMode brokerDeleteInactiveTopicsMode = InactiveTopicDeleteMode.delete_when_no_subscriptions;\n+\n+    @FieldContext(\n+        category = CATEGORY_POLICIES,\n+        doc = \"Max duration of topic inactivity in seconds, default is 60s\\n\"\n+        + \"Topics that are inactive for longer than this value will be deleted\"\n+    )\n+    private int brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzgzMTUwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxODowNlrOFe8NDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxODowNlrOFe8NDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4Nzk4Mw==", "bodyText": "break here?", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367987983", "createdAt": "2020-01-17T15:18:06Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -1586,19 +1594,34 @@ public long getBacklogSize() {\n         return ledger.getEstimatedBacklogSize();\n     }\n \n-    public boolean isActive() {\n+    public boolean isActive(InactiveTopicDeleteMode deleteMode) {\n+        switch (deleteMode) {\n+            case delete_when_no_subscriptions:\n+                if (!subscriptions.isEmpty()) {\n+                    return true;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MzgzNTk4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxOToyMlrOFe8PwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxOToyMlrOFe8PwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4ODY3Mw==", "bodyText": "I think in delete_when_subscriptions_caught_up mode, we just need to check if the backlog is empty or not. we don't need to check if there are consumers connected.", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367988673", "createdAt": "2020-01-17T15:19:22Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -1586,19 +1594,34 @@ public long getBacklogSize() {\n         return ledger.getEstimatedBacklogSize();\n     }\n \n-    public boolean isActive() {\n+    public boolean isActive(InactiveTopicDeleteMode deleteMode) {\n+        switch (deleteMode) {\n+            case delete_when_no_subscriptions:\n+                if (!subscriptions.isEmpty()) {\n+                    return true;\n+                }\n+            case delete_when_subscriptions_caught_up:\n+                if (hasLocalConsumers() || hasBacklogs()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2093, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}