{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODk5MDUz", "number": 7518, "title": "Support partitioned topics in the Reader", "bodyText": "Fixes #3643 #7265\nMotivation\nSupport partitioned topics in the Reader\nModifications\nclass relationship\uff1a\nPulsarClientImpl -> MultiTopicsReaderImpl -> MultiTopicsConsumerImpl -> ConsumerImpl\nPulsarClientImpl support build MultiTopicsReader\nMultiTopicsReader wraps one MultiTopicsConsumerImpl\nMultiTopicsConsumerImpl contains multiple consumerImpl\nMake MultiTopicsConsumerImpl support seek by messageId\nseek by time:\nAll consumerImpl seek by time, Reader can get all the messages returned by each partition\nseek by message\uff1a\n1\uff09When seek by latest/earliest,all partitions seek by latest/earliest,Reader can get all the messages returned by each partition\n2\uff09When the messageId contains explicit partition information, it will only receive messages from this partition, and will not receive messages from other partitions.To avoid other partitions returning messages in inclusive mode, I make other consumer seek to latest and add a ignoredConsumersSet to ignore messages from other partitions .\nVerifying this change\nunit tests:\nTopicReaderTest\nMultiTopicsReaderTest\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API: (yes / no)\nThe schema: (yes / no / don't know)\nThe default values of configurations: (yes / no)\nThe wire protocol: (yes / no)\nThe rest endpoints: (yes / no)\nThe admin cli options: (yes / no)\nAnything that affects deployment: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)\nIf a feature is not applicable for documentation, explain why?\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation", "createdAt": "2020-07-12T13:16:27Z", "url": "https://github.com/apache/pulsar/pull/7518", "merged": true, "mergeCommit": {"oid": "12ef7c9b7ce698e6a8181700a2e8a2b030bcfa60"}, "closed": true, "closedAt": "2020-11-17T02:11:01Z", "author": {"login": "315157973"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwXG_dAH2gAyNDQ3ODk5MDUzOjU0YTExZjYwMGEyMGE3YWE4NDI2NjU1ZmFlM2FhZGZiMjIzOWY1NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcEMIRgH2gAyNDQ3ODk5MDUzOjFmYjM0NWI3MTBiNDg2NDg3ZTYzNmNiYmRmYmY4NjNmYjQyMjMyMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "54a11f600a20a7aa8426655fae3aadfb2239f565", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/54a11f600a20a7aa8426655fae3aadfb2239f565", "committedDate": "2020-06-30T15:09:54Z", "message": "support multiTopicsReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac6cb83d533de513a1b42d4a1635b59fe41d1baf", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/ac6cb83d533de513a1b42d4a1635b59fe41d1baf", "committedDate": "2020-07-06T03:19:59Z", "message": "Merge branch 'master' into reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b97c9d43f84e0a9c86d78c563919610214d6d659", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/b97c9d43f84e0a9c86d78c563919610214d6d659", "committedDate": "2020-07-12T12:55:07Z", "message": "support seek by message id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a9f4f6ceebf1d8b4659d272253651cc1629cfec", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/1a9f4f6ceebf1d8b4659d272253651cc1629cfec", "committedDate": "2020-07-12T15:48:32Z", "message": "fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75efab9e63655750ab6a48e1e2c125f0d31977b1", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/75efab9e63655750ab6a48e1e2c125f0d31977b1", "committedDate": "2020-09-21T08:06:18Z", "message": "Merge branch 'master' into reader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMzU3NzE1", "url": "https://github.com/apache/pulsar/pull/7518#pullrequestreview-492357715", "createdAt": "2020-09-21T08:03:32Z", "commit": {"oid": "1a9f4f6ceebf1d8b4659d272253651cc1629cfec"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODowMzozMlrOHVEgQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODoxNToyOVrOHVE4gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg1NTkzNw==", "bodyText": "Why need a set for storing ignored consumers here? I noticed if a consumer is added to this set, the message will be acked and users will miss messages of this consumer. Is it an expected behavior?", "url": "https://github.com/apache/pulsar/pull/7518#discussion_r491855937", "createdAt": "2020-09-21T08:03:32Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -81,6 +83,9 @@\n     // shared incoming queue was full\n     private final ConcurrentLinkedQueue<ConsumerImpl<T>> pausedConsumers;\n \n+    //When consumerImpl is added to the set, its messages will be ignored\n+    private final ConcurrentOpenHashSet<ConsumerImpl<T>> ignoredConsumers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a9f4f6ceebf1d8b4659d272253651cc1629cfec"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MTA1MA==", "bodyText": "If the internal topics of the multiple topics consumer  with the same partition index but different topic name, it will introduce some problems here?", "url": "https://github.com/apache/pulsar/pull/7518#discussion_r491861050", "createdAt": "2020-09-21T08:13:37Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -681,12 +713,45 @@ public void seek(long timestamp) throws PulsarClientException {\n         try {\n             seekAsync(timestamp).get();\n         } catch (Exception e) {\n+            throw PulsarClientException.unwrap(e);\n         }\n     }\n \n     @Override\n     public CompletableFuture<Void> seekAsync(MessageId messageId) {\n-        return FutureUtil.failedFuture(new PulsarClientException(\"Seek operation not supported on topics consumer\"));\n+        CompletableFuture<Void> resultFuture = new CompletableFuture<>();\n+        MessageIdImpl targetMessageId = MessageIdImpl.convertToMessageIdImpl(messageId);\n+        if (targetMessageId == null || isIllegalMultiTopicsMessageId(messageId)) {\n+            resultFuture.completeExceptionally(\n+                    new PulsarClientException(\"Illegal messageId, messageId can only be earliest\u3001latest or determine partition\"));\n+            return resultFuture;\n+        }\n+\n+        List<CompletableFuture<Void>> futures = new ArrayList<>(consumers.size());\n+        consumers.values().forEach(consumerImpl -> {\n+            if (MessageId.latest.equals(messageId) || MessageId.earliest.equals(messageId)\n+                    || consumerImpl.getPartitionIndex() == targetMessageId.getPartitionIndex()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75efab9e63655750ab6a48e1e2c125f0d31977b1"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2MjE0Ng==", "bodyText": "I think here also assume that all topics of the multiple topics consumer are under a partitioned topic?", "url": "https://github.com/apache/pulsar/pull/7518#discussion_r491862146", "createdAt": "2020-09-21T08:15:29Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -1272,4 +1389,35 @@ public Timeout getPartitionsAutoUpdateTimeout() {\n     }\n \n     private static final Logger log = LoggerFactory.getLogger(MultiTopicsConsumerImpl.class);\n+\n+    public boolean addIgnoreConsumer(ConsumerImpl<T> consumer) {\n+        return ignoredConsumers.add(consumer);\n+    }\n+\n+    public boolean removeIgnoreConsumer(ConsumerImpl<T> consumer) {\n+        return ignoredConsumers.remove(consumer);\n+    }\n+\n+    public static boolean isIllegalMultiTopicsMessageId(MessageId messageId) {\n+        //only support earliest/latest and messageId contains certain partition info\n+        if (MessageId.earliest.equals(messageId) || MessageId.latest.equals(messageId)) {\n+            return false;\n+        }\n+        MessageIdImpl messageIdImpl = MessageIdImpl.convertToMessageIdImpl(messageId);\n+        if (messageIdImpl != null && messageIdImpl.getPartitionIndex() >= 0 && messageIdImpl.getLedgerId() >= 0\n+                && messageIdImpl.getEntryId() >= 0) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    public void tryAcknowledgeMessage(Message<T> msg) {\n+        if (msg != null) {\n+            BatchMessageIdImpl batchMessageId = new BatchMessageIdImpl(MessageIdImpl.convertToMessageIdImpl(msg.getMessageId()));\n+            //Non-batching messages ack every time, batchMessage only need to ack the last one to avoid multi recycle\n+            if (batchMessageId.getBatchIndex() < 0 || batchMessageId.getBatchSize() - 1 == batchMessageId.getBatchIndex()) {\n+                acknowledgeCumulativeAsync(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75efab9e63655750ab6a48e1e2c125f0d31977b1"}, "originalPosition": 284}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f9caaabe35269ddebd1f7d99d43214b64fdb64", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/47f9caaabe35269ddebd1f7d99d43214b64fdb64", "committedDate": "2020-09-25T07:01:13Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcb719894f2369b5a3a723a8de5b23cdaeee03d9", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/dcb719894f2369b5a3a723a8de5b23cdaeee03d9", "committedDate": "2020-09-25T07:03:58Z", "message": "remove the ability to seek msgId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e96809130d27ac0e021a351327d95f59fb3f8a1", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/6e96809130d27ac0e021a351327d95f59fb3f8a1", "committedDate": "2020-09-25T07:21:48Z", "message": "change name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03667931486ef6118ab4514f984f1b1346e6273b", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/03667931486ef6118ab4514f984f1b1346e6273b", "committedDate": "2020-09-27T14:31:39Z", "message": "Merge branch 'master' into reader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjAxNDEw", "url": "https://github.com/apache/pulsar/pull/7518#pullrequestreview-528201410", "createdAt": "2020-11-11T14:07:05Z", "commit": {"oid": "03667931486ef6118ab4514f984f1b1346e6273b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NTY2NDg4", "url": "https://github.com/apache/pulsar/pull/7518#pullrequestreview-529566488", "createdAt": "2020-11-12T22:52:41Z", "commit": {"oid": "03667931486ef6118ab4514f984f1b1346e6273b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fb345b710b486487e636cbbdfbf863fb4223213", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/1fb345b710b486487e636cbbdfbf863fb4223213", "committedDate": "2020-11-13T09:59:59Z", "message": "merge master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 583, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}