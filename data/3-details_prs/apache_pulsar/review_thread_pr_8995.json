{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjAxNTI5", "number": 8995, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODozOTo0N1rOFHE2CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODo0MTowM1rOFHE5bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTYzNzIwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODozOTo0N1rOIIYZ3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoyOTo1OFrOIIlAjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1OTM1Nw==", "bodyText": "I think this block has intention issue.", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545659357", "createdAt": "2020-12-18T08:39:47Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1OTc0Mw==", "bodyText": "We don't use tabs in the code.", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545659743", "createdAt": "2020-12-18T08:40:09Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1OTM1Nw=="}, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg2NTg2OA==", "bodyText": "Removed the tab. The code block is to catch any issues with duplicated definition of metrics TYPE and also ensures the metric name matches the ones defined in the type definition header.", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545865868", "createdAt": "2020-12-18T14:29:58Z", "author": {"login": "zzzming"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1OTM1Nw=="}, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTY0NTg4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODo0MTowM1rOIIYfCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoyNzoyNFrOIIk5zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY2MDY4Mw==", "bodyText": "I am not sure why do we need this line if it will fail before this line.", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545660683", "createdAt": "2020-12-18T08:41:03Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {\n+            if (line.isEmpty()) {\n+                return;\n+            }\n+            if (line.startsWith(\"#\")) {\n+                // Check for duplicate type definitions\n+                Matcher typeMatcher = typePattern.matcher(line);\n+                checkArgument(typeMatcher.matches());\n+                String metricName = typeMatcher.group(1);\n+                String type = typeMatcher.group(2);\n+\n+                // From https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md\n+                // \"Only one TYPE line may exist for a given metric name.\"\n+                if (!typeDefs.containsKey(metricName)) {\n+                    typeDefs.put(metricName, type);\n+                } else {\n+                    fail(\"Duplicate type definition found for TYPE definition \" + metricName);\n+                    System.out.println(metricsStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg2NDE0Mg==", "bodyText": "removed", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545864142", "createdAt": "2020-12-18T14:27:24Z", "author": {"login": "zzzming"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {\n+            if (line.isEmpty()) {\n+                return;\n+            }\n+            if (line.startsWith(\"#\")) {\n+                // Check for duplicate type definitions\n+                Matcher typeMatcher = typePattern.matcher(line);\n+                checkArgument(typeMatcher.matches());\n+                String metricName = typeMatcher.group(1);\n+                String type = typeMatcher.group(2);\n+\n+                // From https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md\n+                // \"Only one TYPE line may exist for a given metric name.\"\n+                if (!typeDefs.containsKey(metricName)) {\n+                    typeDefs.put(metricName, type);\n+                } else {\n+                    fail(\"Duplicate type definition found for TYPE definition \" + metricName);\n+                    System.out.println(metricsStr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY2MDY4Mw=="}, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2588, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}