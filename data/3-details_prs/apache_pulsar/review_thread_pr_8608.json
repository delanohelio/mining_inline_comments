{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMDEzMzgy", "number": 8608, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTozMDozNFrOE6uzmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTozMDozNFrOE6uzmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDE5NzM4OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/source/batch/BatchSourceExecutor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTozMDozNFrOH1-sdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTozNjoxN1rOH1-6cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2Mzc2Ng==", "bodyText": "Maybe unrelated, but it would be better to also use awaitTermination() in the shutdown, to ensure all pending tasks are gone before we close the classloader.", "url": "https://github.com/apache/pulsar/pull/8608#discussion_r526363766", "createdAt": "2020-11-18T19:30:34Z", "author": {"login": "merlimat"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/source/batch/BatchSourceExecutor.java", "diffHunk": "@@ -69,14 +69,19 @@\n   private String intermediateTopicName;\n   private volatile Exception currentError = null;\n   private volatile boolean isRunning = false;\n-  private ExecutorService discoveryThread = Executors.newSingleThreadExecutor(new DefaultThreadFactory(\"batch-source-discovery\"));\n+  private ExecutorService discoveryThread;\n \n   @Override\n   public void open(Map<String, Object> config, SourceContext sourceContext) throws Exception {\n     this.config = config;\n     this.sourceContext = sourceContext;\n     this.intermediateTopicName = SourceConfigUtils.computeBatchSourceIntermediateTopicName(sourceContext.getTenant(),\n       sourceContext.getNamespace(), sourceContext.getSourceName()).toString();\n+    this.discoveryThread = Executors.newSingleThreadExecutor(\n+      new DefaultThreadFactory(\n+        String.format(\"%s-batch-source-discovery\",\n+          FunctionCommon.getFullyQualifiedName(\n+            sourceContext.getTenant(), sourceContext.getNamespace(), sourceContext.getSourceName()))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6675827e3128bcdb7cd31766f935ab329786ab3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2NTE1Mg==", "bodyText": "@merlimat that is what we are doing today:\nhttps://github.com/apache/pulsar/blob/master/pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/source/batch/BatchSourceExecutor.java#L223", "url": "https://github.com/apache/pulsar/pull/8608#discussion_r526365152", "createdAt": "2020-11-18T19:32:52Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/source/batch/BatchSourceExecutor.java", "diffHunk": "@@ -69,14 +69,19 @@\n   private String intermediateTopicName;\n   private volatile Exception currentError = null;\n   private volatile boolean isRunning = false;\n-  private ExecutorService discoveryThread = Executors.newSingleThreadExecutor(new DefaultThreadFactory(\"batch-source-discovery\"));\n+  private ExecutorService discoveryThread;\n \n   @Override\n   public void open(Map<String, Object> config, SourceContext sourceContext) throws Exception {\n     this.config = config;\n     this.sourceContext = sourceContext;\n     this.intermediateTopicName = SourceConfigUtils.computeBatchSourceIntermediateTopicName(sourceContext.getTenant(),\n       sourceContext.getNamespace(), sourceContext.getSourceName()).toString();\n+    this.discoveryThread = Executors.newSingleThreadExecutor(\n+      new DefaultThreadFactory(\n+        String.format(\"%s-batch-source-discovery\",\n+          FunctionCommon.getFullyQualifiedName(\n+            sourceContext.getTenant(), sourceContext.getNamespace(), sourceContext.getSourceName()))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2Mzc2Ng=="}, "originalCommit": {"oid": "e6675827e3128bcdb7cd31766f935ab329786ab3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2NzM0Ng==", "bodyText": "Gotcha. I missed that", "url": "https://github.com/apache/pulsar/pull/8608#discussion_r526367346", "createdAt": "2020-11-18T19:36:17Z", "author": {"login": "merlimat"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/source/batch/BatchSourceExecutor.java", "diffHunk": "@@ -69,14 +69,19 @@\n   private String intermediateTopicName;\n   private volatile Exception currentError = null;\n   private volatile boolean isRunning = false;\n-  private ExecutorService discoveryThread = Executors.newSingleThreadExecutor(new DefaultThreadFactory(\"batch-source-discovery\"));\n+  private ExecutorService discoveryThread;\n \n   @Override\n   public void open(Map<String, Object> config, SourceContext sourceContext) throws Exception {\n     this.config = config;\n     this.sourceContext = sourceContext;\n     this.intermediateTopicName = SourceConfigUtils.computeBatchSourceIntermediateTopicName(sourceContext.getTenant(),\n       sourceContext.getNamespace(), sourceContext.getSourceName()).toString();\n+    this.discoveryThread = Executors.newSingleThreadExecutor(\n+      new DefaultThreadFactory(\n+        String.format(\"%s-batch-source-discovery\",\n+          FunctionCommon.getFullyQualifiedName(\n+            sourceContext.getTenant(), sourceContext.getNamespace(), sourceContext.getSourceName()))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2Mzc2Ng=="}, "originalCommit": {"oid": "e6675827e3128bcdb7cd31766f935ab329786ab3"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2807, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}