{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4OTM4MjM4", "number": 8518, "title": "Fixed handling errors for client requests", "bodyText": "Motivation\nClientCnx is maintaining different maps for different types of requests. The problem is that on handleError() it's only checking on the main map, the one containing requests for creating producers and consumers, but it's ignoring the error on other kind of requests.\nFor example, an error returned by broker on the GetLastMessageId request, will result in calls to hasMessageAvailable() to get stuck, since the error is ignored and the future never completed:\n18:11:09.083 [pulsar-client-io-1-1:org.apache.pulsar.client.impl.ClientCnx@602] WARN  org.apache.pulsar.client.impl.ClientCnx - [id: 0xa378924b, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:6650] Received error from server: XXX \n18:11:09.084 [pulsar-client-io-1-1:org.apache.pulsar.client.impl.ClientCnx@612] WARN  org.apache.pulsar.client.impl.ClientCnx - [id: 0xa378924b, L:/127.0.0.1:58267 - R:localhost/127.0.0.1:6650] Received unknown request id from server: 3\n\nModifications\nThere's no good reason to keep 1 map per kind of request. Instead, we should use a single map.", "createdAt": "2020-11-11T04:34:47Z", "url": "https://github.com/apache/pulsar/pull/8518", "merged": true, "mergeCommit": {"oid": "bb45b8c080fde51b759e06b58e036664361cb73b"}, "closed": true, "closedAt": "2020-11-11T06:45:42Z", "author": {"login": "merlimat"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbWQ48gH2gAyNTE4OTM4MjM4OmVjYzViZGNhMGMyYWI3ZmQ0MGEwZmViNTEzYzI5MzYxNTQwNzExNGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbYNR4gFqTUyNzkwMjk2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ecc5bdca0c2ab7fd40a0feb513c293615407114a", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/ecc5bdca0c2ab7fd40a0feb513c293615407114a", "committedDate": "2020-11-11T04:29:33Z", "message": "Fixed handling errors for client requests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODg2NTYx", "url": "https://github.com/apache/pulsar/pull/8518#pullrequestreview-527886561", "createdAt": "2020-11-11T06:11:02Z", "commit": {"oid": "ecc5bdca0c2ab7fd40a0feb513c293615407114a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjoxMTowMlrOHw_d9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjoxMTowMlrOHw_d9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEzMzU1Ng==", "bodyText": "if there is a cast exception, shouldn't we handle it?  If the client somehow is returned a wrong request id that is for a different request type, a cast exception may happen here. If it does, the requestFuture will never get completed and may cause the client api call to block forever.", "url": "https://github.com/apache/pulsar/pull/8518#discussion_r521133556", "createdAt": "2020-11-11T06:11:02Z", "author": {"login": "jerrypeng"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ClientCnx.java", "diffHunk": "@@ -465,7 +443,7 @@ protected void handleGetLastMessageIdSuccess(CommandGetLastMessageIdResponse suc\n             log.debug(\"{} Received success GetLastMessageId response from server: {}\", ctx.channel(), success.getRequestId());\n         }\n         long requestId = success.getRequestId();\n-        CompletableFuture<MessageIdData> requestFuture = pendingGetLastMessageIdRequests.remove(requestId);\n+        CompletableFuture<MessageIdData> requestFuture = (CompletableFuture<MessageIdData>) pendingRequests.remove(requestId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc5bdca0c2ab7fd40a0feb513c293615407114a"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODk0MzY1", "url": "https://github.com/apache/pulsar/pull/8518#pullrequestreview-527894365", "createdAt": "2020-11-11T06:31:45Z", "commit": {"oid": "ecc5bdca0c2ab7fd40a0feb513c293615407114a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTAyOTY0", "url": "https://github.com/apache/pulsar/pull/8518#pullrequestreview-527902964", "createdAt": "2020-11-11T06:45:25Z", "commit": {"oid": "ecc5bdca0c2ab7fd40a0feb513c293615407114a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1205, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}