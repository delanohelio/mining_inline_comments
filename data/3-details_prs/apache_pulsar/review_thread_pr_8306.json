{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NTM5MjUw", "number": 8306, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoyMzoyNlrOEvv6dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDo1MDoyM1rOEwSvvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTAzNTQzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjoyMzoyNlrOHk5ncw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMTo0MDoyNlrOHlXILw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1NDc3MQ==", "bodyText": "exclude? I think exclude is more reasonable here.", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r508454771", "createdAt": "2020-10-20T12:23:26Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -2006,7 +2006,7 @@ private void internalCreateSubscriptionForNonPartitionedTopic(AsyncResponse asyn\n     }\n \n     protected void internalResetCursorOnPosition(AsyncResponse asyncResponse, String subName, boolean authoritative,\n-            MessageIdImpl messageId) {\n+            MessageIdImpl messageId, boolean isExclusive) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382a64400ec93cace0cb24e3a10b0fc07a9bd568"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkzODI4Nw==", "bodyText": "I think it might be more appropriate to change to isExclued.I am modifying it.", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r508938287", "createdAt": "2020-10-21T01:40:26Z", "author": {"login": "315157973"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -2006,7 +2006,7 @@ private void internalCreateSubscriptionForNonPartitionedTopic(AsyncResponse asyn\n     }\n \n     protected void internalResetCursorOnPosition(AsyncResponse asyncResponse, String subName, boolean authoritative,\n-            MessageIdImpl messageId) {\n+            MessageIdImpl messageId, boolean isExclusive) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ1NDc3MQ=="}, "originalCommit": {"oid": "382a64400ec93cace0cb24e3a10b0fc07a9bd568"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODA5MDM3OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMTo0NjoxMlrOHlXOLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMTo0NjoxMlrOHlXOLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkzOTgyMw==", "bodyText": "I think we'd better do not introduce a new endpoint since we also should support reset to a batchIndex. So it's better to introduce a new construct for the cursor reset request such as ResetCursorData and we and add the isExcluded into the new construct, it looks like\nclass ResetCursorData {\n    ledgerId,\n    entryId,\n    isExcluded\n}\n\nSince we are using the json encoder and decode, I think this will not introduce compatibility issues.", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r508939823", "createdAt": "2020-10-21T01:46:12Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -1219,7 +1219,43 @@ public void resetCursorOnPosition(\n             MessageIdImpl messageId) {\n         try {\n             validateTopicName(tenant, namespace, encodedTopic);\n-            internalResetCursorOnPosition(asyncResponse, decode(encodedSubName), authoritative, messageId);\n+            internalResetCursorOnPosition(asyncResponse, decode(encodedSubName), authoritative, messageId, false);\n+        } catch (Exception e) {\n+            resumeAsyncResponseExceptionally(asyncResponse, e);\n+        }\n+    }\n+    \n+    @POST\n+    @Path(\"/{tenant}/{namespace}/{topic}/subscription/{subName}/resetCursorExclusive\")\n+    @ApiOperation(value = \"Reset subscription to message position closest to given position, \" +\n+            \"and start consume messages from the next position of the reset position.\", notes = \"It fence cursor and disconnects all active consumers before reseting cursor.\")\n+    @ApiResponses(value = {\n+            @ApiResponse(code = 307, message = \"Current broker doesn't serve the namespace of this topic\"),\n+            @ApiResponse(code = 401, message = \"Don't have permission to administrate resources on this tenant or\" +\n+                    \"subscriber is not authorized to access this operation\"),\n+            @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Topic/Subscription does not exist\"),\n+            @ApiResponse(code = 405, message = \"Not supported for partitioned topics\"),\n+            @ApiResponse(code = 412, message = \"Unable to find position for position specified\"),\n+            @ApiResponse(code = 500, message = \"Internal server error\"),\n+            @ApiResponse(code = 503, message = \"Failed to validate global cluster configuration\") })\n+    public void resetCursorOnPositionExclusive(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382a64400ec93cace0cb24e3a10b0fc07a9bd568"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODA5MjA4OnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Topics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMTo0NzowN1rOHlXPJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMTo0NzowN1rOHlXPJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk0MDA3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CompletableFuture<Void> resetCursorExclusiveAsync(String topic, String subName, MessageId messageId);\n          \n          \n            \n                CompletableFuture<Void> resetCursorAsync(String topic, String subName, MessageId messageId, boolean isExcluded);", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r508940070", "createdAt": "2020-10-21T01:47:07Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Topics.java", "diffHunk": "@@ -1314,6 +1325,17 @@ void createSubscription(String topic, String subscriptionName, MessageId message\n      */\n     CompletableFuture<Void> resetCursorAsync(String topic, String subName, long timestamp);\n \n+    /**\n+     * Reset cursor position on a topic subscription.\n+     * <p/>\n+     * and start consume messages from the next position of the reset position.\n+     * @param topic\n+     * @param subName\n+     * @param messageId\n+     * @return\n+     */\n+    CompletableFuture<Void> resetCursorExclusiveAsync(String topic, String subName, MessageId messageId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382a64400ec93cace0cb24e3a10b0fc07a9bd568"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODA5MjYzOnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Topics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMTo0NzoyOVrOHlXPfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMTo0NzoyOVrOHlXPfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk0MDE1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void resetCursorExclusive(String topic, String subName, MessageId messageId) throws PulsarAdminException;\n          \n          \n            \n                void resetCursor(String topic, String subName, MessageId messageId, boolean isExcluded) throws PulsarAdminException;", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r508940158", "createdAt": "2020-10-21T01:47:29Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Topics.java", "diffHunk": "@@ -1302,6 +1302,17 @@ void createSubscription(String topic, String subscriptionName, MessageId message\n      */\n     void resetCursor(String topic, String subName, long timestamp) throws PulsarAdminException;\n \n+    /**\n+     * Reset cursor position on a topic subscription.\n+     * <p/>\n+     * and start consume messages from the next position of the reset position.\n+     * @param topic\n+     * @param subName\n+     * @param messageId\n+     * @throws PulsarAdminException\n+     */\n+    void resetCursorExclusive(String topic, String subName, MessageId messageId) throws PulsarAdminException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "382a64400ec93cace0cb24e3a10b0fc07a9bd568"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODQ4MzU5OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNToyODozMlrOHlazYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo1ODoxOFrOHlbYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk5ODQ5OQ==", "bodyText": "How did you maintain backward compatibility on this endpoint?", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r508998499", "createdAt": "2020-10-21T05:28:32Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -1216,15 +1217,17 @@ public void resetCursorOnPosition(\n             @ApiParam(value = \"Is authentication required to perform this operation\")\n             @QueryParam(\"authoritative\") @DefaultValue(\"false\") boolean authoritative,\n             @ApiParam(name = \"messageId\", value = \"messageId to reset back to (ledgerId:entryId)\")\n-            MessageIdImpl messageId) {\n+                    ResetCursorData resetCursorData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e6c596afac1a7a8b686f8e0b2904ebc3c07e4bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk5OTM1MA==", "bodyText": "How did you maintain backward compatibility on this endpoint?\n\nNow the properties of this object are consistent with the previous MessageId, and there is no problem with Json deserialization.", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r508999350", "createdAt": "2020-10-21T05:31:23Z", "author": {"login": "315157973"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -1216,15 +1217,17 @@ public void resetCursorOnPosition(\n             @ApiParam(value = \"Is authentication required to perform this operation\")\n             @QueryParam(\"authoritative\") @DefaultValue(\"false\") boolean authoritative,\n             @ApiParam(name = \"messageId\", value = \"messageId to reset back to (ledgerId:entryId)\")\n-            MessageIdImpl messageId) {\n+                    ResetCursorData resetCursorData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk5ODQ5OQ=="}, "originalCommit": {"oid": "3e6c596afac1a7a8b686f8e0b2904ebc3c07e4bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwMzY0MA==", "bodyText": "Can you add an integration test for that?", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r509003640", "createdAt": "2020-10-21T05:45:10Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -1216,15 +1217,17 @@ public void resetCursorOnPosition(\n             @ApiParam(value = \"Is authentication required to perform this operation\")\n             @QueryParam(\"authoritative\") @DefaultValue(\"false\") boolean authoritative,\n             @ApiParam(name = \"messageId\", value = \"messageId to reset back to (ledgerId:entryId)\")\n-            MessageIdImpl messageId) {\n+                    ResetCursorData resetCursorData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk5ODQ5OQ=="}, "originalCommit": {"oid": "3e6c596afac1a7a8b686f8e0b2904ebc3c07e4bb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwODAzNw==", "bodyText": "Can you add an integration test for that?\n\nOK", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r509008037", "createdAt": "2020-10-21T05:58:18Z", "author": {"login": "315157973"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -1216,15 +1217,17 @@ public void resetCursorOnPosition(\n             @ApiParam(value = \"Is authentication required to perform this operation\")\n             @QueryParam(\"authoritative\") @DefaultValue(\"false\") boolean authoritative,\n             @ApiParam(name = \"messageId\", value = \"messageId to reset back to (ledgerId:entryId)\")\n-            MessageIdImpl messageId) {\n+                    ResetCursorData resetCursorData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk5ODQ5OQ=="}, "originalCommit": {"oid": "3e6c596afac1a7a8b686f8e0b2904ebc3c07e4bb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODkyODY0OnYy", "diffSide": "RIGHT", "path": "tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/PersistentTopicMessagingTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzo1NzowNVrOHle9JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzo1NzowNVrOHle9JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA2NjUzMw==", "bodyText": "resetCursorCompatibility is a new method and you are only calling it with 'true' parameter.\nis it expected ?\nwhat about calling also resetCursorCompatibility(serviceUrl, false); ?", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r509066533", "createdAt": "2020-10-21T07:57:05Z", "author": {"login": "eolivelli"}, "path": "tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/PersistentTopicMessagingTest.java", "diffHunk": "@@ -63,4 +63,9 @@ public void testNonPartitionedTopicMessagingWithKeyShared(String serviceUrl) thr\n     public void testPartitionedTopicMessagingWithKeyShared(String serviceUrl) throws Exception {\n         partitionedTopicSendAndReceiveWithKeyShared(serviceUrl, true);\n     }\n+\n+    @Test(dataProvider = \"ServiceUrls\")\n+    public void testResetCursorCompatibility(String serviceUrl) throws Exception {\n+        resetCursorCompatibility(serviceUrl, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9ba56d5d1e74c67bb6d36792736fa5033722fda"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTgyNTA1OnYy", "diffSide": "RIGHT", "path": "tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/PersistentTopicMessagingTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTo0MzowN1rOHlnoBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTo0MzowN1rOHlnoBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIwODU4Mw==", "bodyText": "It's need to move the test under the package org.apache.pulsar.tests.integration.backwardscompatibility Otherwise the the test is using the latest broker and latest client, so it can't check the compatibility.", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r509208583", "createdAt": "2020-10-21T11:43:07Z", "author": {"login": "codelipenghui"}, "path": "tests/integration/src/test/java/org/apache/pulsar/tests/integration/messaging/PersistentTopicMessagingTest.java", "diffHunk": "@@ -63,4 +63,9 @@ public void testNonPartitionedTopicMessagingWithKeyShared(String serviceUrl) thr\n     public void testPartitionedTopicMessagingWithKeyShared(String serviceUrl) throws Exception {\n         partitionedTopicSendAndReceiveWithKeyShared(serviceUrl, true);\n     }\n+\n+    @Test(dataProvider = \"ServiceUrls\")\n+    public void testResetCursorCompatibility(String serviceUrl) throws Exception {\n+        resetCursorCompatibility(serviceUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e6cfd76fdafcab72edd9cedaba54855584bc0b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDc0MjM5OnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/internal/TopicsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDo1MDoyM1rOHlwk8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDo1MDoyM1rOHlwk8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM1NTI0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        resetCursorAsync(topic, subName, messageId, true).get(this.readTimeoutMs, TimeUnit.MILLISECONDS);\n          \n          \n            \n                        resetCursorAsync(topic, subName, messageId, isExcluded).get(this.readTimeoutMs, TimeUnit.MILLISECONDS);", "url": "https://github.com/apache/pulsar/pull/8306#discussion_r509355248", "createdAt": "2020-10-21T14:50:23Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/internal/TopicsImpl.java", "diffHunk": "@@ -1132,22 +1133,50 @@ public void resetCursor(String topic, String subName, long timestamp) throws Pul\n     @Override\n     public void resetCursor(String topic, String subName, MessageId messageId) throws PulsarAdminException {\n         try {\n-            TopicName tn = validateTopic(topic);\n-            String encodedSubName = Codec.encode(subName);\n-            WebTarget path = topicPath(tn, \"subscription\", encodedSubName, \"resetcursor\");\n-            request(path).post(Entity.entity(messageId, MediaType.APPLICATION_JSON),\n-                            ErrorData.class);\n+            resetCursorAsync(topic, subName, messageId).get(this.readTimeoutMs, TimeUnit.MILLISECONDS);\n+        } catch (ExecutionException e) {\n+            throw (PulsarAdminException) e.getCause();\n+        } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n+            throw new PulsarAdminException(e);\n+        } catch (TimeoutException e) {\n+            throw new PulsarAdminException.TimeoutException(e);\n+        } catch (Exception e) {\n+            throw getApiException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void resetCursor(String topic, String subName, MessageId messageId\n+            , boolean isExcluded) throws PulsarAdminException {\n+        try {\n+            resetCursorAsync(topic, subName, messageId, true).get(this.readTimeoutMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81aac22068606d4a10d145e564b46cea643cb869"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2939, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}