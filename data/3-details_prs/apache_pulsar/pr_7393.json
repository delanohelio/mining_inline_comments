{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTI5NjA3", "number": 7393, "title": "Update docs for tiered storage", "bodyText": "Currently, the docs for tiered storage is not clear and incomplete.\nThis PR adds and reorganize contents for tiered storage.\nOld structure:\n\nNew structure:", "createdAt": "2020-06-30T10:19:22Z", "url": "https://github.com/apache/pulsar/pull/7393", "merged": true, "mergeCommit": {"oid": "9423abfe32bfa83cb1bae568d8250c663e6f2738"}, "closed": true, "closedAt": "2020-07-02T00:57:36Z", "author": {"login": "Anonymitaet"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwRu0HAH2gAyNDQxOTI5NjA3Ojg2MGE1Y2MzYzhlMGQzYzY5M2YyM2RiOTdiMTEzZWZmNDA2Y2ViYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwkN29AFqTQ0MDU3NzE1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "860a5cc3c8e0d3c693f23db97b113eff406ceba2", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/860a5cc3c8e0d3c693f23db97b113eff406ceba2", "committedDate": "2020-06-30T08:53:58Z", "message": "Update docs for tiered storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64", "committedDate": "2020-06-30T09:37:28Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDg2NDg4", "url": "https://github.com/apache/pulsar/pull/7393#pullrequestreview-440486488", "createdAt": "2020-07-01T01:19:38Z", "commit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMToxOTozOFrOGrTqMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMTozOTozM1rOGrT9Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NDA0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * download from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz)\n          \n          \n            \n               * Download the Pulsar tarball from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz).\n          \n      \n    \n    \n  \n\nsame comments for the next bullet", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448064049", "createdAt": "2020-07-01T01:19:38Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-aws.md", "diffHunk": "@@ -0,0 +1,283 @@\n+---\n+id: tiered-storage-aws\n+title: Use AWS S3 offloader with Pulsar\n+sidebar_label: AWS S3 offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the AWS S3 offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the AWS S3 offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+  \n+- Apache jclouds: 2.2.0 or later versions\n+\n+### Step\n+\n+This example uses Pulsar 2.5.1.\n+\n+1. Download Pulsar tarball using one of the following ways:\n+\n+   * download from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NDEyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Download Pulsar tarball using one of the following ways:\n          \n          \n            \n            1. Download the Pulsar tarball using one of the following ways:", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448064126", "createdAt": "2020-07-01T01:19:55Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-aws.md", "diffHunk": "@@ -0,0 +1,283 @@\n+---\n+id: tiered-storage-aws\n+title: Use AWS S3 offloader with Pulsar\n+sidebar_label: AWS S3 offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the AWS S3 offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the AWS S3 offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+  \n+- Apache jclouds: 2.2.0 or later versions\n+\n+### Step\n+\n+This example uses Pulsar 2.5.1.\n+\n+1. Download Pulsar tarball using one of the following ways:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NjA1MA==", "bodyText": "offload or offloader?", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448066050", "createdAt": "2020-07-01T01:28:10Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-aws.md", "diffHunk": "@@ -0,0 +1,283 @@\n+---\n+id: tiered-storage-aws\n+title: Use AWS S3 offloader with Pulsar\n+sidebar_label: AWS S3 offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the AWS S3 offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the AWS S3 offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+  \n+- Apache jclouds: 2.2.0 or later versions\n+\n+### Step\n+\n+This example uses Pulsar 2.5.1.\n+\n+1. Download Pulsar tarball using one of the following ways:\n+\n+   * download from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz)\n+\n+   * download from the Pulsar [downloads page](https://pulsar.apache.org/download)\n+\n+   * use [wget](https://www.gnu.org/software/wget):\n+\n+     ```shell\n+     wget https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz\n+     ```\n+\n+2. Download and untar the Pulsar offloaders package. \n+\n+    ```bash\n+    wget https://downloads.apache.org/pulsar/pulsar-2.5.1/apache-pulsar-offloaders-2.5.1-bin.tar.gz\n+    tar xvfz apache-pulsar-offloaders-2.5.1-bin.tar.gz\n+    ```\n+\n+3. Copy the Pulsar offloaders as `offloaders` in the Pulsar directory.\n+\n+    ```\n+    mv apache-pulsar-offloaders-2.5.1/offloaders apache-pulsar-2.5.1/offloaders\n+\n+    ls offloaders\n+    ```\n+\n+    **Output**\n+\n+    As shown from the output, Pulsar uses [Apache jclouds](https://jclouds.apache.org) to support [AWS S3](https://aws.amazon.com/s3/) and [GCS](https://cloud.google.com/storage/) for long term storage. \n+\n+\n+    ```\n+    tiered-storage-file-system-2.5.1.nar\n+    tiered-storage-jcloud-2.5.1.nar\n+    ```\n+\n+    > #### Note\n+    >\n+    > * If you are running Pulsar in a bare metal cluster, make sure that `offloaders` tarball is unzipped in every broker's Pulsar directory.\n+    > \n+    > * If you are running Pulsar in Docker or deploying Pulsar using a Docker image (such as K8s and DCOS), you can use the `apachepulsar/pulsar-all` image instead of the `apachepulsar/pulsar` image. `apachepulsar/pulsar-all` image has already bundled tiered storage offloaders.\n+\n+## Configuration\n+\n+> #### Note\n+> \n+> Before offloading data from BookKeeper to AWS S3, you need to configure some properties of the AWS S3 offload driver.\n+\n+Besides, you can also configure the AWS S3 offloader to run it automatically or trigger it manually.\n+\n+### Configure AWS S3 offloader driver\n+\n+You can configure the AWS S3 offloader driver in the configuration file `broker.conf` or `standalone.conf`.\n+\n+- **Required** configurations are as below.\n+  \n+    Required configuration | Description | Example value\n+    |---|---|---\n+    `managedLedgerOffloadDriver` | Offloader driver name, which is case-insensitive. <br><br>**Note**: there is a third driver type, S3, which is identical to AWS S3, though S3 requires that you specify an endpoint URL using `s3ManagedLedgerOffloadServiceEndpoint`. This is useful if using an S3 compatible data store other than AWS S3. | aws-s3\n+    `offloadersDirectory` | Offloader directory | offloaders\n+    `s3ManagedLedgerOffloadBucket` | Bucket | pulsar-topic-offload\n+\n+- **Optional** configurations are as below.\n+\n+    Optional | Description | Example value\n+    |---|---|---\n+    `s3ManagedLedgerOffloadRegion` | Bucket region | eu-west-3\n+    `s3ManagedLedgerOffloadReadBufferSizeInBytes`|Size of block read|1 MB\n+    `s3ManagedLedgerOffloadMaxBlockSizeInBytes`|Size of block write|64 MB\n+    `managedLedgerMinLedgerRolloverTimeMinutes`|Minimum time between ledger rollover for a topic<br><br>**Note**: it is not recommended that you set this configuration in the production environment.|2\n+    `managedLedgerMaxEntriesPerLedger`|Maximum number of entries to append to a ledger before triggering a rollover.<br><br>**Note**: it is not recommended that you set this configuration in the production environment.|5000\n+\n+#### Bucket (required)\n+\n+A bucket is a basic container that holds your data. Everything you store in AWS S3 must be contained in a bucket. You can use a bucket to organize your data and control access to your data, but unlike directory and folder, you cannot nest a bucket.\n+\n+##### Example\n+\n+This example names the bucket as _pulsar-topic-offload_.\n+\n+```conf\n+s3ManagedLedgerOffloadBucket=pulsar-topic-offload\n+```\n+\n+#### Bucket region \n+\n+A bucket region is a region where a bucket is located. If a bucket region is not specified, the **default** region (`US East (N. Virginia)`) is used.\n+\n+> #### Tip\n+>\n+> For more information about AWS regions and endpoints, see [here](https://docs.aws.amazon.com/general/latest/gr/rande.html).\n+ \n+##### Example\n+\n+This example sets the bucket region as _europe-west-3_.\n+\n+```\n+s3ManagedLedgerOffloadRegion=eu-west-3\n+```\n+\n+#### Authentication (required)\n+\n+To be able to access AWS S3, you need to authenticate with AWS S3.\n+\n+Pulsar does not provide any direct methods of configuring authentication for AWS S3,\n+but relies on the mechanisms supported by the\n+[DefaultAWSCredentialsProviderChain](https://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/DefaultAWSCredentialsProviderChain.html).\n+\n+Once you have created a set of credentials in the AWS IAM console, you can configure credentials using one of the following methods.\n+\n+* Use EC2 instance metadata credentials.\n+\n+    If you are on AWS instance with an instance profile that provides credentials, Pulsar uses these credentials if no other mechanism is provided.\n+\n+* Set the environment variables `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` in `conf/pulsar_env.sh`.\n+\n+    \"export\" is important so that the variables are made available in the environment of spawned processes.\n+\n+    ```bash\n+    export AWS_ACCESS_KEY_ID=ABC123456789\n+    export AWS_SECRET_ACCESS_KEY=ded7db27a4558e2ea8bbf0bf37ae0e8521618f366c\n+    ```\n+\n+* Add the Java system properties `aws.accessKeyId` and `aws.secretKey` to `PULSAR_EXTRA_OPTS` in `conf/pulsar_env.sh`.\n+\n+    ```bash\n+    PULSAR_EXTRA_OPTS=\"${PULSAR_EXTRA_OPTS} ${PULSAR_MEM} ${PULSAR_GC} -Daws.accessKeyId=ABC123456789 -Daws.secretKey=ded7db27a4558e2ea8bbf0bf37ae0e8521618f366c -Dio.netty.leakDetectionLevel=disabled -Dio.netty.recycler.maxCapacity.default=1000 -Dio.netty.recycler.linkCapacity=1024\"\n+    ```\n+\n+* Set the access credentials in `~/.aws/credentials`.\n+\n+    ```conf\n+    [default]\n+    aws_access_key_id=ABC123456789\n+    aws_secret_access_key=ded7db27a4558e2ea8bbf0bf37ae0e8521618f366c\n+    ```\n+\n+* Assume an IAM role.\n+\n+    This example uses the `DefaultAWSCredentialsProviderChain` for assuming this role.\n+\n+    The broker must be rebooted for credentials specified in `pulsar_env` to take effect.\n+\n+    ```conf\n+    s3ManagedLedgerOffloadRole=<aws role arn>\n+    s3ManagedLedgerOffloadRoleSessionName=pulsar-s3-offload\n+    ```\n+\n+#### Size of block read/write\n+\n+You can configure the size of a request sent to or read from AWS S3 in the configuration file `broker.conf` or `standalone.conf`. \n+\n+Configuration|Description|Default value\n+|---|---|---\n+`s3ManagedLedgerOffloadReadBufferSizeInBytes`|Block size for each individual read when reading back data from AWS S3.|1 MB\n+`s3ManagedLedgerOffloadMaxBlockSizeInBytes`|Maximum size of a \"part\" sent during a multipart upload to GCS. It **cannot** be smaller than 5 MB. |64 MB\n+\n+### Configure AWS S3 offloader to run automatically\n+\n+Namespace policy can be configured to offload data automatically once a threshold is reached. The threshold is based on the size of data that a topic has stored on a Pulsar cluster. Once the topic reaches the threshold, an offloading operation is triggered automatically. \n+\n+Threshold value|Action\n+|---|---\n+> 0 | It triggers the offloading operation if the topic storage reaches its threshold.\n+= 0|It causes a broker to offload data as soon as possible.\n+< 0 |It disables automatic offloading operation.\n+\n+Automatic offloading runs when a new segment is added to a topic log. If you set the threshold on a namespace, but few messages are being produced to the topic, offload does not work until the current segment is full.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NzA2OQ==", "bodyText": "same comments as that in the AWS doc.", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448067069", "createdAt": "2020-07-01T01:32:18Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-filesystem.md", "diffHunk": "@@ -0,0 +1,268 @@\n+---\n+id: tiered-storage-filesystem\n+title: Use filesystem offloader with Pulsar\n+sidebar_label: Filesystem offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the filesystem offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the filesystem offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+\n+- Hadoop: 3.x.x\n+\n+### Step\n+\n+This example uses Pulsar 2.5.1.\n+\n+1. Download Pulsar tarball using one of the following ways:\n+\n+   * download the Pulsar tarball from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2NzI4Ng==", "bodyText": "same comments", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448067286", "createdAt": "2020-07-01T01:33:12Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-gcs.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+id: tiered-storage-gcs\n+title: Use GCS offloader with Pulsar\n+sidebar_label: GCS offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the GCS offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the GCS offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+  \n+- Apache jclouds: 2.2.0 or later versions\n+\n+### Step\n+\n+This example uses Pulsar 2.5.1.\n+\n+1. Download Pulsar tarball using one of the following ways:\n+\n+   * download the Pulsar tarball from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2Nzg0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Use REST endpoint \n          \n          \n            \n            - Use REST endpoint.", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448067843", "createdAt": "2020-07-01T01:35:22Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-gcs.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+id: tiered-storage-gcs\n+title: Use GCS offloader with Pulsar\n+sidebar_label: GCS offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the GCS offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the GCS offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+  \n+- Apache jclouds: 2.2.0 or later versions\n+\n+### Step\n+\n+This example uses Pulsar 2.5.1.\n+\n+1. Download Pulsar tarball using one of the following ways:\n+\n+   * download the Pulsar tarball from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz)\n+\n+   * download from the Pulsar [download page](https://pulsar.apache.org/download)\n+\n+   * use [wget](https://www.gnu.org/software/wget)\n+\n+     ```shell\n+     wget https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz\n+     ```\n+\n+2. Download and untar the Pulsar offloaders package. \n+\n+    ```bash\n+    wget https://downloads.apache.org/pulsar/pulsar-2.5.1/apache-pulsar-offloaders-2.5.1-bin.tar.gz\n+\n+    tar xvfz apache-pulsar-offloaders-2.5.1-bin.tar.gz\n+    ```\n+\n+    > #### Note\n+    >\n+    > * If you are running Pulsar in a bare metal cluster, make sure that `offloaders` tarball is unzipped in every broker's Pulsar directory.\n+    > \n+    > * If you are running Pulsar in Docker or deploying Pulsar using a Docker image (such as K8S and DCOS), you can use the `apachepulsar/pulsar-all` image instead of the `apachepulsar/pulsar` image. `apachepulsar/pulsar-all` image has already bundled tiered storage offloaders.\n+\n+3. Copy the Pulsar offloaders as `offloaders` in the Pulsar directory.\n+\n+    ```\n+    mv apache-pulsar-offloaders-2.5.1/offloaders apache-pulsar-2.5.1/offloaders\n+\n+    ls offloaders\n+    ```\n+\n+    **Output**\n+\n+    As shown in the output, Pulsar uses [Apache jclouds](https://jclouds.apache.org) to support GCS and AWS S3 for long term storage. \n+\n+\n+    ```\n+    tiered-storage-file-system-2.5.1.nar\n+    tiered-storage-jcloud-2.5.1.nar\n+    ```\n+\n+## Configuration\n+\n+> #### Note\n+> \n+> Before offloading data from BookKeeper to GCS, you need to configure some properties of the GCS offloader driver. \n+\n+Besides, you can also configure the GCS offloader to run it automatically or trigger it manually.\n+\n+### Configure GCS offloader driver\n+\n+You can configure GCS offloader driver in the configuration file `broker.conf` or `standalone.conf`.\n+\n+- **Required** configurations are as below.\n+\n+    **Required** configuration | Description | Example value\n+    |---|---|---\n+    `managedLedgerOffloadDriver`|Offloader driver name, which is case-insensitive.|google-cloud-storage\n+    `offloadersDirectory`|Offloader directory|offloaders\n+    `gcsManagedLedgerOffloadBucket`|Bucket|pulsar-topic-offload\n+    `gcsManagedLedgerOffloadRegion`|Bucket region|europe-west3\n+    `gcsManagedLedgerOffloadServiceAccountKeyFile`|Authentication |/Users/user-name/Downloads/project-804d5e6a6f33.json\n+\n+- **Optional** configurations are as below.\n+\n+    Optional configuration|Description|Example value\n+    |---|---|---\n+    `gcsManagedLedgerOffloadReadBufferSizeInBytes`|Size of block read|1 MB\n+    `gcsManagedLedgerOffloadMaxBlockSizeInBytes`|Size of block write|64 MB\n+    `managedLedgerMinLedgerRolloverTimeMinutes`|Minimum time between ledger rollover for a topic.|2\n+    `managedLedgerMaxEntriesPerLedger`|Max number of entries to append to a ledger before triggering a rollover.|5000\n+\n+#### Bucket (required)\n+\n+A bucket is a basic container that holds your data. Everything you store in GCS **must** be contained in a bucket. You can use a bucket to organize your data and control access to your data, but unlike directory and folder, you can not nest a bucket.\n+\n+##### Example\n+\n+This example names the bucket as _pulsar-topic-offload_.\n+\n+```conf\n+gcsManagedLedgerOffloadBucket=pulsar-topic-offload\n+```\n+\n+#### Bucket region (required)\n+\n+Bucket region is the region where a bucket is located. If a bucket region is not specified, the **default** region (`us multi-regional location`) is used.\n+\n+> #### Tip\n+>\n+> For more information about bucket location, see [here](https://cloud.google.com/storage/docs/bucket-locations).\n+\n+##### Example\n+\n+This example sets the bucket region as _europe-west3_.\n+\n+```\n+gcsManagedLedgerOffloadRegion=europe-west3\n+```\n+\n+#### Authentication (required)\n+\n+To enable a broker access GCS, you need to configure `gcsManagedLedgerOffloadServiceAccountKeyFile` in the configuration file `broker.conf`. \n+\n+`gcsManagedLedgerOffloadServiceAccountKeyFile` is\n+a JSON file, containing GCS credentials of a service account.\n+\n+##### Example\n+\n+To generate service account credentials or view the public credentials that you've already generated, follow the following steps.\n+\n+1. Navigate to the [Service accounts page](https://console.developers.google.com/iam-admin/serviceaccounts).\n+\n+2. Select a project or create a new one.\n+\n+3. Click **Create service account**.\n+\n+4. In the **Create service account** window, type a name for the service account and select **Furnish a new private key**. \n+\n+    If you want to [grant G Suite domain-wide authority](https://developers.google.com/identity/protocols/OAuth2ServiceAccount#delegatingauthority) to the service account, select **Enable G Suite Domain-wide Delegation**.\n+\n+5. Click **Create**.\n+\n+    > #### Note\n+    >\n+    > Make sure the service account you create has permission to operate GCS, you need to assign **Storage Admin** permission to your service account [here](https://cloud.google.com/storage/docs/access-control/iam).\n+\n+6. You can get the following information and set this in `broker.conf`.\n+   \n+    ```conf\n+    gcsManagedLedgerOffloadServiceAccountKeyFile=\"/Users/user-name/Downloads/project-804d5e6a6f33.json\"\n+    ```\n+\n+    > #### Tip\n+    >\n+    > - For more information about how to create `gcsManagedLedgerOffloadServiceAccountKeyFile`, see [here](https://support.google.com/googleapi/answer/6158849).\n+    >\n+    > - For more information about Google Cloud IAM, see [here](https://cloud.google.com/storage/docs/access-control/iam).\n+\n+#### Size of block read/write\n+\n+You can configure the size of a request sent to or read from GCS in the configuration file `broker.conf`. \n+\n+Configuration|Description\n+|---|---\n+`gcsManagedLedgerOffloadReadBufferSizeInBytes`|Block size for each individual read when reading back data from GCS.<br><br>The **default** value is 1 MB.\n+`gcsManagedLedgerOffloadMaxBlockSizeInBytes`|Maximum size of a \"part\" sent during a multipart upload to GCS. <br><br>It **can not** be smaller than 5 MB. <br><br>The **default** value is 64 MB.\n+\n+### Configure GCS offloader to run automatically\n+\n+Namespace policy can be configured to offload data automatically once a threshold is reached. The threshold is based on the size of data that a topic has stored on a Pulsar cluster. Once the topic reaches the threshold, an offload operation is triggered automatically. \n+\n+Threshold value|Action\n+|---|---\n+> 0 | It triggers the offloading operation if the topic storage reaches its threshold.\n+= 0|It causes a broker to offload data as soon as possible.\n+< 0 |It disables automatic offloading operation.\n+\n+Automatic offloading runs when a new segment is added to a topic log. If you set the threshold on a namespace, but few messages are being produced to the topic, offload does not work until the current segment is full.\n+\n+You can configure the threshold size using CLI tools, such as [pulsarctl](https://streamnative.io/docs/v1.0.0/manage-and-monitor/pulsarctl/overview/) or pulsar-admin.\n+\n+The offload configurations in `broker.conf` and `standalone.conf` are used for the namespaces that do not have namespace level offload policies. Each namespace can have its own offload policy. If you want to set offload policy for each namespace, use the command [`pulsar-admin namespaces set-offload-policies options`](http://pulsar.apache.org/tools/pulsar-admin/2.6.0-SNAPSHOT/#-em-set-offload-policies-em-) command.\n+\n+#### Example\n+\n+This example sets the GCS offloader threshold size to 10 MB using pulsarctl.\n+\n+```bash\n+bin/pulsarctl namespaces set-offload-threshold --size 10M my-tenant/my-namespace\n+```\n+\n+> #### Tip\n+>\n+> For more information about the `pulsarctl namespaces set-offload-threshold options` command, including flags, descriptions, default values, and shorthands, see [here](https://streamnative.io/docs/pulsarctl/v0.4.0/#-em-set-offload-threshold-em-). \n+\n+### Configure GCS offloader to run manually\n+\n+For individual topics, you can trigger GCS offloader manually using one of the following methods:\n+\n+- Use REST endpoint ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2ODI3NA==", "bodyText": "how about change the title to \"when to use tiered storage?\"", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448068274", "createdAt": "2020-07-01T01:37:04Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-overview.md", "diffHunk": "@@ -0,0 +1,49 @@\n+---\n+id: tiered-storage-overview\n+title: Overview of tiered storage\n+sidebar_label: Overview\n+---\n+\n+Pulsar's **Tiered Storage** feature allows older backlog data to be moved from BookKeeper to long term and cheaper storage, while still allowing clients to access the backlog as if nothing has changed. \n+\n+* Tiered storage uses [Apache jclouds](https://jclouds.apache.org) to support\n+[Amazon S3](https://aws.amazon.com/s3/) and [GCS (Google Cloud Storage)](https://cloud.google.com/storage/) for long term storage. \n+\n+    With jclouds, it is easy to add support for more\n+[cloud storage providers](https://jclouds.apache.org/reference/providers/#blobstore-providers) in the future.\n+\n+    > #### Tip\n+    > \n+    > For more information about how to use the AWS S3 offloader with Pulsar, see [here](tiered-storage-aws.md).\n+    > \n+    > For more information about how to use the GCS offloader with Pulsar, see [here](tiered-storage-gcs.md).\n+\n+* Tiered storage uses [Apache Hadoop](http://hadoop.apache.org/) to support filesystems for long term storage. \n+\n+    With Hadoop, it is easy to add support for more filesystems in the future.\n+\n+    > #### Tip\n+    > \n+    > For more information about how to use the filesystem offloader with Pulsar, see [here](tiered-storage-filesystem.md).\n+\n+## When should I use tiered storage?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2ODY2NA==", "bodyText": "how about to change it to \"Tiered storage should be used when you want to keep a very long backlog for a topic.\"", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448068664", "createdAt": "2020-07-01T01:38:44Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-overview.md", "diffHunk": "@@ -0,0 +1,49 @@\n+---\n+id: tiered-storage-overview\n+title: Overview of tiered storage\n+sidebar_label: Overview\n+---\n+\n+Pulsar's **Tiered Storage** feature allows older backlog data to be moved from BookKeeper to long term and cheaper storage, while still allowing clients to access the backlog as if nothing has changed. \n+\n+* Tiered storage uses [Apache jclouds](https://jclouds.apache.org) to support\n+[Amazon S3](https://aws.amazon.com/s3/) and [GCS (Google Cloud Storage)](https://cloud.google.com/storage/) for long term storage. \n+\n+    With jclouds, it is easy to add support for more\n+[cloud storage providers](https://jclouds.apache.org/reference/providers/#blobstore-providers) in the future.\n+\n+    > #### Tip\n+    > \n+    > For more information about how to use the AWS S3 offloader with Pulsar, see [here](tiered-storage-aws.md).\n+    > \n+    > For more information about how to use the GCS offloader with Pulsar, see [here](tiered-storage-gcs.md).\n+\n+* Tiered storage uses [Apache Hadoop](http://hadoop.apache.org/) to support filesystems for long term storage. \n+\n+    With Hadoop, it is easy to add support for more filesystems in the future.\n+\n+    > #### Tip\n+    > \n+    > For more information about how to use the filesystem offloader with Pulsar, see [here](tiered-storage-filesystem.md).\n+\n+## When should I use tiered storage?\n+\n+Tiered storage should be used when you have a topic for which you want to keep a very long backlog for a long time. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA2ODg2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A topic in Pulsar is backed by a **log**, known as a **managed ledger**. This log is composed of an ordered list of segments. Pulsar only writes to the final segment of the log. All previous segments are sealed. The data within the segment is immutable. This is known as a **segment oriented architecture**.\n          \n          \n            \n            A topic in Pulsar is backed by a **log**, known as a **managed ledger**. This log consists of an ordered list of segments. Pulsar only writes to the final segment of the log. All previous segments are sealed. The data within the segment is immutable. This is known as a **segment oriented architecture**.", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448068867", "createdAt": "2020-07-01T01:39:33Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/tiered-storage-overview.md", "diffHunk": "@@ -0,0 +1,49 @@\n+---\n+id: tiered-storage-overview\n+title: Overview of tiered storage\n+sidebar_label: Overview\n+---\n+\n+Pulsar's **Tiered Storage** feature allows older backlog data to be moved from BookKeeper to long term and cheaper storage, while still allowing clients to access the backlog as if nothing has changed. \n+\n+* Tiered storage uses [Apache jclouds](https://jclouds.apache.org) to support\n+[Amazon S3](https://aws.amazon.com/s3/) and [GCS (Google Cloud Storage)](https://cloud.google.com/storage/) for long term storage. \n+\n+    With jclouds, it is easy to add support for more\n+[cloud storage providers](https://jclouds.apache.org/reference/providers/#blobstore-providers) in the future.\n+\n+    > #### Tip\n+    > \n+    > For more information about how to use the AWS S3 offloader with Pulsar, see [here](tiered-storage-aws.md).\n+    > \n+    > For more information about how to use the GCS offloader with Pulsar, see [here](tiered-storage-gcs.md).\n+\n+* Tiered storage uses [Apache Hadoop](http://hadoop.apache.org/) to support filesystems for long term storage. \n+\n+    With Hadoop, it is easy to add support for more filesystems in the future.\n+\n+    > #### Tip\n+    > \n+    > For more information about how to use the filesystem offloader with Pulsar, see [here](tiered-storage-filesystem.md).\n+\n+## When should I use tiered storage?\n+\n+Tiered storage should be used when you have a topic for which you want to keep a very long backlog for a long time. \n+\n+For example, if you have a topic containing user actions which you use to train your recommendation systems, you may want to keep that data for a long time, so that if you change your recommendation algorithm, you can rerun it against your full user history.\n+\n+## How does tiered storage work?\n+\n+A topic in Pulsar is backed by a **log**, known as a **managed ledger**. This log is composed of an ordered list of segments. Pulsar only writes to the final segment of the log. All previous segments are sealed. The data within the segment is immutable. This is known as a **segment oriented architecture**.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTAyMTEw", "url": "https://github.com/apache/pulsar/pull/7393#pullrequestreview-440502110", "createdAt": "2020-07-01T02:13:51Z", "commit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxMzo1MVrOGrUeDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxMzo1MVrOGrUeDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NzMyNw==", "bodyText": "Which version of JClouds to use up to the Pulsar, so users could don't care about it. For example, in Pulsar 2.5.1, the JClouds version is 2.1.1.", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448077327", "createdAt": "2020-07-01T02:13:51Z", "author": {"login": "gaoran10"}, "path": "site2/docs/tiered-storage-aws.md", "diffHunk": "@@ -0,0 +1,283 @@\n+---\n+id: tiered-storage-aws\n+title: Use AWS S3 offloader with Pulsar\n+sidebar_label: AWS S3 offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the AWS S3 offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the AWS S3 offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+  \n+- Apache jclouds: 2.2.0 or later versions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTA4NzY3", "url": "https://github.com/apache/pulsar/pull/7393#pullrequestreview-440508767", "createdAt": "2020-07-01T02:37:30Z", "commit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjozNzozMFrOGrU06w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjozNzozMFrOGrU06w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA4MzE3OQ==", "bodyText": "Same as tiered-storage-aws.", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448083179", "createdAt": "2020-07-01T02:37:30Z", "author": {"login": "gaoran10"}, "path": "site2/docs/tiered-storage-gcs.md", "diffHunk": "@@ -0,0 +1,275 @@\n+---\n+id: tiered-storage-gcs\n+title: Use GCS offloader with Pulsar\n+sidebar_label: GCS offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the GCS offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the GCS offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+  \n+- Apache jclouds: 2.2.0 or later versions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20352ec7891baf6a3f8f88b6413d0b9f4ce7a64"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec6d620f5a81d2809d68812f210e92b8ed7829c4", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/ec6d620f5a81d2809d68812f210e92b8ed7829c4", "committedDate": "2020-07-01T03:23:46Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTcwNjM0", "url": "https://github.com/apache/pulsar/pull/7393#pullrequestreview-440570634", "createdAt": "2020-07-01T06:11:28Z", "commit": {"oid": "ec6d620f5a81d2809d68812f210e92b8ed7829c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTc1MTM5", "url": "https://github.com/apache/pulsar/pull/7393#pullrequestreview-440575139", "createdAt": "2020-07-01T06:21:55Z", "commit": {"oid": "ec6d620f5a81d2809d68812f210e92b8ed7829c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjoyMTo1NlrOGrYRrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjoyMTo1NlrOGrYRrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzOTY5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                `offloadersDirectory` | Hadoop profile path | ../conf/filesystem_offload_core_site.xml\n          \n          \n            \n                `fileSystemProfilePath ` | Hadoop profile path | ../conf/filesystem_offload_core_site.xml\n          \n          \n            \n                `offloadersDirectory` | Offloader directory | offloaders", "url": "https://github.com/apache/pulsar/pull/7393#discussion_r448139695", "createdAt": "2020-07-01T06:21:56Z", "author": {"login": "gaoran10"}, "path": "site2/docs/tiered-storage-filesystem.md", "diffHunk": "@@ -0,0 +1,268 @@\n+---\n+id: tiered-storage-filesystem\n+title: Use filesystem offloader with Pulsar\n+sidebar_label: Filesystem offloader\n+---\n+\n+This chapter guides you through every step of installing and configuring the filesystem offloader and using it with Pulsar.\n+\n+## Installation\n+\n+Follow the steps below to install the filesystem offloader.\n+\n+### Prerequisite\n+\n+- Pulsar: 2.4.2 or later versions\n+\n+- Hadoop: 3.x.x\n+\n+### Step\n+\n+This example uses Pulsar 2.5.1.\n+\n+1. Download the Pulsar tarball using one of the following ways:\n+\n+   * Download from the [Apache mirror](https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz)\n+\n+   * Download from the Pulsar [download page](https://pulsar.apache.org/download)\n+\n+   * Use [wget](https://www.gnu.org/software/wget)\n+\n+     ```shell\n+     wget https://archive.apache.org/dist/pulsar/pulsar-2.5.1/apache-pulsar-2.5.1-bin.tar.gz\n+     ```\n+\n+2. Download and untar the Pulsar offloaders package. \n+\n+    ```bash\n+    wget https://downloads.apache.org/pulsar/pulsar-2.5.1/apache-pulsar-offloaders-2.5.1-bin.tar.gz\n+\n+    tar xvfz apache-pulsar-offloaders-2.5.1-bin.tar.gz\n+    ```\n+\n+    > #### Note\n+    >\n+    > * If you are running Pulsar in a bare metal cluster, make sure that `offloaders` tarball is unzipped in every broker's Pulsar directory.\n+    > \n+    > * If you are running Pulsar in Docker or deploying Pulsar using a Docker image (such as K8S and DCOS), you can use the `apachepulsar/pulsar-all` image instead of the `apachepulsar/pulsar` image. `apachepulsar/pulsar-all` image has already bundled tiered storage offloaders.\n+\n+3. Copy the Pulsar offloaders as `offloaders` in the Pulsar directory.\n+\n+    ```\n+    mv apache-pulsar-offloaders-2.5.1/offloaders apache-pulsar-2.5.1/offloaders\n+\n+    ls offloaders\n+    ```\n+\n+    **Output**\n+\n+    ```\n+    tiered-storage-file-system-2.5.1.nar\n+    tiered-storage-jcloud-2.5.1.nar\n+    ```\n+\n+    > #### Note\n+    >\n+    > * If you are running Pulsar in a bare metal cluster, make sure that `offloaders` tarball is unzipped in every broker's Pulsar directory.\n+    > \n+    > * If you are running Pulsar in Docker or deploying Pulsar using a Docker image (such as K8s and DCOS), you can use the `apachepulsar/pulsar-all` image instead of the `apachepulsar/pulsar` image. `apachepulsar/pulsar-all` image has already bundled tiered storage offloaders.\n+\n+## Configuration\n+\n+> #### Note\n+> \n+> Before offloading data from BookKeeper to filesystem, you need to configure some properties of the filesystem offloader driver. \n+\n+Besides, you can also configure the filesystem offloader to run it automatically or trigger it manually.\n+\n+### Configure filesystem offloader driver\n+\n+You can configure filesystem offloader driver in the configuration file `broker.conf` or `standalone.conf`.\n+\n+- **Required** configurations are as below.\n+  \n+    Required configuration | Description | Example value\n+    |---|---|---\n+    `managedLedgerOffloadDriver` | Offloader driver name, which is case-insensitive. | filesystem\n+    `fileSystemURI` | Connection address | hdfs://127.0.0.1:9000\n+    `offloadersDirectory` | Hadoop profile path | ../conf/filesystem_offload_core_site.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec6d620f5a81d2809d68812f210e92b8ed7829c4"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTc3MTU5", "url": "https://github.com/apache/pulsar/pull/7393#pullrequestreview-440577159", "createdAt": "2020-07-01T06:26:11Z", "commit": {"oid": "ec6d620f5a81d2809d68812f210e92b8ed7829c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 771, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}