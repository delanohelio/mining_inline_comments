{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NDgyNjM0", "number": 7823, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMToyOTo1OFrOEY3Puw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMTo0NDoxM1rOEY3Wuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTA2NDI3OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMToyOTo1OFrOHBXJxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODoyNTo1OFrOHBfJBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4OTk1OA==", "bodyText": "Why remove !topicNameValid(topicName) ? I think we should return Topic name not valid when the topic name does not valid and return Already subscribe to {} for the duplicate topic name.", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471189958", "createdAt": "2020-08-17T01:29:58Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -720,16 +720,36 @@ private void removeExpiredMessagesFromQueue(Set<MessageId> messageIds) {\n         }\n     }\n \n-    private boolean topicNameValid(String topicName) {\n-        return TopicName.isValid(topicName) && !topics.containsKey(topicName);\n+    private TopicName getTopicName(String topic) {\n+        try {\n+            return TopicName.get(topic);\n+        } catch (Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    private String getFullTopicName(String topic) {\n+        TopicName topicName = getTopicName(topic);\n+        return (topicName != null) ? topicName.toString() : null;\n+    }\n+\n+    private void removeTopic(String topic) {\n+        String fullTopicName = getFullTopicName(topic);\n+        if (fullTopicName != null) {\n+            topics.remove(topic);\n+        }\n     }\n \n     // subscribe one more given topic\n     public CompletableFuture<Void> subscribeAsync(String topicName, boolean createTopicIfDoesNotExist) {\n-        if (!topicNameValid(topicName)) {\n+        TopicName topicNameInstance = getTopicName(topicName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d5c2b61a61168d387056cad8cafc2cb59ca10d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5NzE0NA==", "bodyText": "I validate it in line 746 to 748. Because TopicName could be reused, if I wrap the validation in topicNameValid, I have to create TopicName to get full topic name and partitioned topic name again. I can't think an elegant way to do it so I create a TopicName instance at first of subscribeAsync and do checks", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471197144", "createdAt": "2020-08-17T02:06:23Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -720,16 +720,36 @@ private void removeExpiredMessagesFromQueue(Set<MessageId> messageIds) {\n         }\n     }\n \n-    private boolean topicNameValid(String topicName) {\n-        return TopicName.isValid(topicName) && !topics.containsKey(topicName);\n+    private TopicName getTopicName(String topic) {\n+        try {\n+            return TopicName.get(topic);\n+        } catch (Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    private String getFullTopicName(String topic) {\n+        TopicName topicName = getTopicName(topic);\n+        return (topicName != null) ? topicName.toString() : null;\n+    }\n+\n+    private void removeTopic(String topic) {\n+        String fullTopicName = getFullTopicName(topic);\n+        if (fullTopicName != null) {\n+            topics.remove(topic);\n+        }\n     }\n \n     // subscribe one more given topic\n     public CompletableFuture<Void> subscribeAsync(String topicName, boolean createTopicIfDoesNotExist) {\n-        if (!topicNameValid(topicName)) {\n+        TopicName topicNameInstance = getTopicName(topicName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4OTk1OA=="}, "originalCommit": {"oid": "30d5c2b61a61168d387056cad8cafc2cb59ca10d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyMDgzNw==", "bodyText": "@codelipenghui Sorry I haven't noticed the later part of your review before. I didn't change the original behavior in this PR because it needs relative changes with unit tests. I'll do it soon.", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471320837", "createdAt": "2020-08-17T08:25:58Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -720,16 +720,36 @@ private void removeExpiredMessagesFromQueue(Set<MessageId> messageIds) {\n         }\n     }\n \n-    private boolean topicNameValid(String topicName) {\n-        return TopicName.isValid(topicName) && !topics.containsKey(topicName);\n+    private TopicName getTopicName(String topic) {\n+        try {\n+            return TopicName.get(topic);\n+        } catch (Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    private String getFullTopicName(String topic) {\n+        TopicName topicName = getTopicName(topic);\n+        return (topicName != null) ? topicName.toString() : null;\n+    }\n+\n+    private void removeTopic(String topic) {\n+        String fullTopicName = getFullTopicName(topic);\n+        if (fullTopicName != null) {\n+            topics.remove(topic);\n+        }\n     }\n \n     // subscribe one more given topic\n     public CompletableFuture<Void> subscribeAsync(String topicName, boolean createTopicIfDoesNotExist) {\n-        if (!topicNameValid(topicName)) {\n+        TopicName topicNameInstance = getTopicName(topicName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4OTk1OA=="}, "originalCommit": {"oid": "30d5c2b61a61168d387056cad8cafc2cb59ca10d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTA4MjE5OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMTo0NDoxM1rOHBXT3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMjoxMDo1NlrOHBXpBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MjU0MQ==", "bodyText": "It seems that we do not need to add these methods?", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471192541", "createdAt": "2020-08-17T01:44:13Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -720,16 +720,36 @@ private void removeExpiredMessagesFromQueue(Set<MessageId> messageIds) {\n         }\n     }\n \n-    private boolean topicNameValid(String topicName) {\n-        return TopicName.isValid(topicName) && !topics.containsKey(topicName);\n+    private TopicName getTopicName(String topic) {\n+        try {\n+            return TopicName.get(topic);\n+        } catch (Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    private String getFullTopicName(String topic) {\n+        TopicName topicName = getTopicName(topic);\n+        return (topicName != null) ? topicName.toString() : null;\n+    }\n+\n+    private void removeTopic(String topic) {\n+        String fullTopicName = getFullTopicName(topic);\n+        if (fullTopicName != null) {\n+            topics.remove(topic);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30d5c2b61a61168d387056cad8cafc2cb59ca10d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5Nzk1OQ==", "bodyText": "getTopicName and getFullTopicName are just for ignoring the exceptions because we will throw a PulsarClientException later. removeTopic is to ensure that the key to remove is a full topic name.", "url": "https://github.com/apache/pulsar/pull/7823#discussion_r471197959", "createdAt": "2020-08-17T02:10:56Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImpl.java", "diffHunk": "@@ -720,16 +720,36 @@ private void removeExpiredMessagesFromQueue(Set<MessageId> messageIds) {\n         }\n     }\n \n-    private boolean topicNameValid(String topicName) {\n-        return TopicName.isValid(topicName) && !topics.containsKey(topicName);\n+    private TopicName getTopicName(String topic) {\n+        try {\n+            return TopicName.get(topic);\n+        } catch (Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    private String getFullTopicName(String topic) {\n+        TopicName topicName = getTopicName(topic);\n+        return (topicName != null) ? topicName.toString() : null;\n+    }\n+\n+    private void removeTopic(String topic) {\n+        String fullTopicName = getFullTopicName(topic);\n+        if (fullTopicName != null) {\n+            topics.remove(topic);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE5MjU0MQ=="}, "originalCommit": {"oid": "30d5c2b61a61168d387056cad8cafc2cb59ca10d"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2250, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}