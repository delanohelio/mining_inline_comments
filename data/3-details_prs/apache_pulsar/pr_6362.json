{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MDExMjQ2", "number": 6362, "title": "[ClientAPI]Fix hasMessageAvailable()", "bodyText": "Fixes #6333\nPreviously, hasMoreMessages is test against:\nreturn lastMessageIdInBroker.compareTo(lastDequeuedMessage) == 0\n                && incomingMessages.size() > 0;\n\nHowever, the incomingMessages could be 0 when the consumer/reader has just started and hasn't received any messages yet.\nIn this PR, the last entry is retrieved and decoded to get message metadata. for the batchIndex field population.", "createdAt": "2020-02-19T07:38:44Z", "url": "https://github.com/apache/pulsar/pull/6362", "merged": true, "mergeCommit": {"oid": "baf155f4a41de959145841e4cd922e89363e9292"}, "closed": true, "closedAt": "2020-03-03T07:04:51Z", "author": {"login": "yjshen"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFxhP1AH2gAyMzc3MDExMjQ2OmMyMTBiMzFiYmM5ODEzNzAwNWU3YmViNmJjOTk3NTMzYzA4MjFlYTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJzX8rgFqTM2NzQ4ODIxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c210b31bbc98137005e7beb6bc997533c0821ea8", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/c210b31bbc98137005e7beb6bc997533c0821ea8", "committedDate": "2020-02-19T07:37:22Z", "message": "fix hasMessageAvailable for reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "095f932eb55ec247ee6d1a878e7130137dfc8fd2", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/095f932eb55ec247ee6d1a878e7130137dfc8fd2", "committedDate": "2020-02-19T09:46:50Z", "message": "add test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55fd071c8e1420aa70df4d78ad02ef3da95c71dc", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/55fd071c8e1420aa70df4d78ad02ef3da95c71dc", "committedDate": "2020-02-19T09:52:10Z", "message": "sort id to make test deterministic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTgzMjIz", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-361183223", "createdAt": "2020-02-19T14:59:12Z", "commit": {"oid": "55fd071c8e1420aa70df4d78ad02ef3da95c71dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1OToyNlrOFrrjHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1OToyNlrOFrrjHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0NjU5MQ==", "bodyText": "I think you can useCommands.parseMessageMetadata(entry.getDataBuffer()) to get the MessageMetadata.  The batch size maintained in MessageMetadata.", "url": "https://github.com/apache/pulsar/pull/6362#discussion_r381346591", "createdAt": "2020-02-19T14:59:26Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -1412,6 +1424,51 @@ protected void handleGetLastMessageId(CommandGetLastMessageId getLastMessageId)\n         }\n     }\n \n+    private int getLargestBatchIndex(Topic topic, PositionImpl position, long requestId) {\n+        PersistentTopic persistentTopic = (PersistentTopic) topic;\n+        ManagedLedgerImpl ml = (ManagedLedgerImpl) persistentTopic.getManagedLedger();\n+\n+        CompletableFuture<Entry> entryFuture = new CompletableFuture<>();\n+        ml.asyncReadEntry(position, new AsyncCallbacks.ReadEntryCallback() {\n+            @Override\n+            public void readEntryComplete(Entry entry, Object ctx) {\n+                entryFuture.complete(entry);\n+            }\n+\n+            @Override\n+            public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                entryFuture.completeExceptionally(exception);\n+            }\n+        }, null);\n+\n+        CompletableFuture<Integer> batchSizeFuture = entryFuture.thenApply(entry -> {\n+            int[] sizeHolder = new int[1];\n+            try {\n+                MessageParser.parseMessage(TopicName.get(topic.getName()), entry.getLedgerId(), entry.getEntryId(),\n+                        entry.getDataBuffer(), (message) -> {\n+                            sizeHolder[0] = ((RawMessageImpl) message).getBatchSize();\n+                            message.release();\n+                        }, Commands.DEFAULT_MAX_MESSAGE_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55fd071c8e1420aa70df4d78ad02ef3da95c71dc"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11102e0abefb2393f381fbfe97ecce1c2b588418", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/11102e0abefb2393f381fbfe97ecce1c2b588418", "committedDate": "2020-02-19T16:08:03Z", "message": "fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMzgzNzU3", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-361383757", "createdAt": "2020-02-19T19:42:40Z", "commit": {"oid": "11102e0abefb2393f381fbfe97ecce1c2b588418"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo0Mjo0MFrOFr1FHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo0Mjo0MFrOFr1FHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwMjc1MQ==", "bodyText": "This is being called within an IO thread. We cannot block on the future", "url": "https://github.com/apache/pulsar/pull/6362#discussion_r381502751", "createdAt": "2020-02-19T19:42:40Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -1412,6 +1424,43 @@ protected void handleGetLastMessageId(CommandGetLastMessageId getLastMessageId)\n         }\n     }\n \n+    private int getLargestBatchIndex(Topic topic, PositionImpl position, long requestId) {\n+        PersistentTopic persistentTopic = (PersistentTopic) topic;\n+        ManagedLedgerImpl ml = (ManagedLedgerImpl) persistentTopic.getManagedLedger();\n+\n+        CompletableFuture<Entry> entryFuture = new CompletableFuture<>();\n+        ml.asyncReadEntry(position, new AsyncCallbacks.ReadEntryCallback() {\n+            @Override\n+            public void readEntryComplete(Entry entry, Object ctx) {\n+                entryFuture.complete(entry);\n+            }\n+\n+            @Override\n+            public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                entryFuture.completeExceptionally(exception);\n+            }\n+        }, null);\n+\n+        CompletableFuture<Integer> batchSizeFuture = entryFuture.thenApply(entry -> {\n+            MessageMetadata metadata = Commands.parseMessageMetadata(entry.getDataBuffer());\n+            int batchSize = metadata.getNumMessagesInBatch();\n+            entry.release();\n+            return batchSize;\n+        });\n+\n+        try {\n+            int batchSize =  batchSizeFuture.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11102e0abefb2393f381fbfe97ecce1c2b588418"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b6e600f28d3fa5faf16543a2e02b855705b511a", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/9b6e600f28d3fa5faf16543a2e02b855705b511a", "committedDate": "2020-02-20T04:10:55Z", "message": "get batch size async"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDEyODM0", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-363012834", "createdAt": "2020-02-22T06:12:12Z", "commit": {"oid": "d86526e574a6091f05328cedfcd4275a5eb0c9ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDEzNjYx", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-363013661", "createdAt": "2020-02-22T06:33:05Z", "commit": {"oid": "d86526e574a6091f05328cedfcd4275a5eb0c9ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172b638200ade5bc61adf3c6b5e2609261866429", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/172b638200ade5bc61adf3c6b5e2609261866429", "committedDate": "2020-02-24T14:21:02Z", "message": "Merge remote-tracking branch 'apache/master' into has_msg_avalilable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d86526e574a6091f05328cedfcd4275a5eb0c9ab", "author": {"user": {"login": "sijie", "name": "Sijie Guo"}}, "url": "https://github.com/apache/pulsar/commit/d86526e574a6091f05328cedfcd4275a5eb0c9ab", "committedDate": "2020-02-22T06:10:53Z", "message": "Merge remote-tracking branch 'apache/master' into has_msg_avalilable"}, "afterCommit": {"oid": "172b638200ade5bc61adf3c6b5e2609261866429", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/172b638200ade5bc61adf3c6b5e2609261866429", "committedDate": "2020-02-24T14:21:02Z", "message": "Merge remote-tracking branch 'apache/master' into has_msg_avalilable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjQxODU2", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-363641856", "createdAt": "2020-02-24T19:28:02Z", "commit": {"oid": "172b638200ade5bc61adf3c6b5e2609261866429"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2278a9b9cf4d4a7aaaae7fa110170095e5622afa", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/2278a9b9cf4d4a7aaaae7fa110170095e5622afa", "committedDate": "2020-02-25T05:36:40Z", "message": "move logic to async"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f7d4d5a3b003cc11423b35484fc1c7c01a4e2eb", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/8f7d4d5a3b003cc11423b35484fc1c7c01a4e2eb", "committedDate": "2020-02-25T05:54:31Z", "message": "reset lastDequeue to earliest when seek"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODg0NzY5", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-363884769", "createdAt": "2020-02-25T05:51:14Z", "commit": {"oid": "2278a9b9cf4d4a7aaaae7fa110170095e5622afa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNTo1MToxNFrOFt5apQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNTo1MToxNFrOFt5apQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3MDk0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    CountDownLatch latch = new CountDownLatch(100);\n          \n          \n            \n                    CountDownLatch latch = new CountDownLatch(numOfMessage);", "url": "https://github.com/apache/pulsar/pull/6362#discussion_r383670949", "createdAt": "2020-02-25T05:51:14Z", "author": {"login": "zymap"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/TopicReaderTest.java", "diffHunk": "@@ -531,6 +542,68 @@ public void testMessageAvailableAfterRestart() throws Exception {\n \n     }\n \n+    @Test(dataProvider = \"variationsForHasMessageAvailable\")\n+    public void testHasMessageAvailable(boolean enableBatch, boolean startInclusive) throws Exception {\n+        final String topicName = \"persistent://my-property/my-ns/HasMessageAvailable\";\n+        final int numOfMessage = 100;\n+\n+        ProducerBuilder<byte[]> producerBuilder = pulsarClient.newProducer()\n+                .topic(topicName);\n+\n+        if (enableBatch) {\n+            producerBuilder\n+                    .enableBatching(true)\n+                    .batchingMaxMessages(10);\n+        } else {\n+            producerBuilder\n+                    .enableBatching(false);\n+        }\n+\n+        Producer<byte[]> producer = producerBuilder.create();\n+\n+        CountDownLatch latch = new CountDownLatch(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2278a9b9cf4d4a7aaaae7fa110170095e5622afa"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c895f17677fa7cff68b499efdd154754cee2d1b", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/8c895f17677fa7cff68b499efdd154754cee2d1b", "committedDate": "2020-02-25T06:21:28Z", "message": "resolve comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3724b449bbf0295c14fa38026bd5a2e7e7460211", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/3724b449bbf0295c14fa38026bd5a2e7e7460211", "committedDate": "2020-02-26T01:48:12Z", "message": "fix compactor test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5af7a1252ab272bee50f257d5830486aa84f99a1", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/5af7a1252ab272bee50f257d5830486aa84f99a1", "committedDate": "2020-02-26T03:01:31Z", "message": "retrigger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3a94e2d831e40f524ddc0d32e47e0c5b6f50a1b", "author": {"user": {"login": "yjshen", "name": "Yijie Shen"}}, "url": "https://github.com/apache/pulsar/commit/c3a94e2d831e40f524ddc0d32e47e0c5b6f50a1b", "committedDate": "2020-02-26T03:48:32Z", "message": "rerun tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NzMwOTIx", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-364730921", "createdAt": "2020-02-26T09:15:39Z", "commit": {"oid": "c3a94e2d831e40f524ddc0d32e47e0c5b6f50a1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDg4MjE0", "url": "https://github.com/apache/pulsar/pull/6362#pullrequestreview-367488214", "createdAt": "2020-03-02T20:02:36Z", "commit": {"oid": "c3a94e2d831e40f524ddc0d32e47e0c5b6f50a1b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDowMjozN1rOFwtYXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDowMjozN1rOFwtYXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxOTQ4Nw==", "bodyText": "Ideally we should be avoiding this read by just recording the number of messages in the last batch, along with the current position.", "url": "https://github.com/apache/pulsar/pull/6362#discussion_r386619487", "createdAt": "2020-03-02T20:02:37Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -1396,22 +1401,83 @@ protected void handleGetLastMessageId(CommandGetLastMessageId getLastMessageId)\n             Topic topic = consumer.getSubscription().getTopic();\n             Position position = topic.getLastMessageId();\n             int partitionIndex = TopicName.getPartitionIndex(topic.getName());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"[{}] [{}][{}] Get LastMessageId {} partitionIndex {}\", remoteAddress,\n-                    topic.getName(), consumer.getSubscription().getName(), position, partitionIndex);\n-            }\n-            MessageIdData messageId = MessageIdData.newBuilder()\n-                .setLedgerId(((PositionImpl)position).getLedgerId())\n-                .setEntryId(((PositionImpl)position).getEntryId())\n-                .setPartition(partitionIndex)\n-                .build();\n \n-            ctx.writeAndFlush(Commands.newGetLastMessageIdResponse(requestId, messageId));\n+            getLargestBatchIndexWhenPossible(\n+                    topic,\n+                    (PositionImpl) position,\n+                    partitionIndex,\n+                    requestId,\n+                    consumer.getSubscription().getName());\n+\n         } else {\n             ctx.writeAndFlush(Commands.newError(getLastMessageId.getRequestId(), ServerError.MetadataError, \"Consumer not found\"));\n         }\n     }\n \n+    private void getLargestBatchIndexWhenPossible(\n+            Topic topic,\n+            PositionImpl position,\n+            int partitionIndex,\n+            long requestId,\n+            String subscriptionName) {\n+\n+        PersistentTopic persistentTopic = (PersistentTopic) topic;\n+        ManagedLedgerImpl ml = (ManagedLedgerImpl) persistentTopic.getManagedLedger();\n+\n+        // If it's not pointing to a valid entry, respond messageId of the current position.\n+        if (position.getEntryId() == -1) {\n+            MessageIdData messageId = MessageIdData.newBuilder()\n+                    .setLedgerId(position.getLedgerId())\n+                    .setEntryId(position.getEntryId())\n+                    .setPartition(partitionIndex).build();\n+\n+            ctx.writeAndFlush(Commands.newGetLastMessageIdResponse(requestId, messageId));\n+        }\n+\n+        // For a valid position, we read the entry out and parse the batch size from its metadata.\n+        CompletableFuture<Entry> entryFuture = new CompletableFuture<>();\n+        ml.asyncReadEntry(position, new AsyncCallbacks.ReadEntryCallback() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3a94e2d831e40f524ddc0d32e47e0c5b6f50a1b"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 71, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}