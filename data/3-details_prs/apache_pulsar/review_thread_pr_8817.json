{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNzI4ODQx", "number": 8817, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyNzo1NVrOFAtS_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyOTo1OFrOFAtWWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mjg2NDYyOnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyNzo1NlrOH_IOvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMTo0ODoxMVrOIAi_rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1NzE4MQ==", "bodyText": "AFAIK we are not used to adding this kind of \"sections\", please remove", "url": "https://github.com/apache/pulsar/pull/8817#discussion_r535957181", "createdAt": "2020-12-04T09:27:56Z", "author": {"login": "eolivelli"}, "path": "pulsar-client-admin/pom.xml", "diffHunk": "@@ -95,6 +95,14 @@\n       <groupId>com.google.code.gson</groupId>\n       <artifactId>gson</artifactId>\n     </dependency>\n+\n+    <!-- packages management service related dependencies (begin) -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62d5004b9072dcce18db28a753af74ae9252967"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ0NDI3MA==", "bodyText": "sure", "url": "https://github.com/apache/pulsar/pull/8817#discussion_r537444270", "createdAt": "2020-12-07T11:48:11Z", "author": {"login": "zymap"}, "path": "pulsar-client-admin/pom.xml", "diffHunk": "@@ -95,6 +95,14 @@\n       <groupId>com.google.code.gson</groupId>\n       <artifactId>gson</artifactId>\n     </dependency>\n+\n+    <!-- packages management service related dependencies (begin) -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1NzE4MQ=="}, "originalCommit": {"oid": "d62d5004b9072dcce18db28a753af74ae9252967"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Mjg3MzIyOnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Packages.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwOToyOTo1OFrOH_IT-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMTo0ODoxNFrOIAi_zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1ODUyMA==", "bodyText": "can you please tell what is this path ?\nis it an absolute location on disk ?\nin this case we should use the Java NIO Path object and not a raw String", "url": "https://github.com/apache/pulsar/pull/8817#discussion_r535958520", "createdAt": "2020-12-04T09:29:58Z", "author": {"login": "eolivelli"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Packages.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.admin;\n+\n+import org.apache.pulsar.packages.management.core.common.PackageMetadata;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Administration operations of the packages management service.\n+ */\n+public interface Packages {\n+    /**\n+     * Get a package metadata information.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to find\n+     * @return the package metadata information\n+     */\n+    PackageMetadata getMetadata(String packageName) throws PulsarAdminException;\n+\n+    /**\n+     * Get a package metadata information asynchronously.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to find\n+     * @return  the package metadata information\n+     */\n+    CompletableFuture<PackageMetadata> getMetadataAsync(String packageName);\n+\n+    /**\n+     * Update a package metadata information.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to update\n+     * @param metadata\n+     *          the updated metadata information\n+     */\n+    void updateMetadata(String packageName, PackageMetadata metadata) throws PulsarAdminException;\n+\n+    /**\n+     * Update a package metadata information asynchronously.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to update\n+     * @param metadata\n+     *          the updated metadata information\n+     * @return nothing\n+     */\n+    CompletableFuture<Void> updateMetadataAsync(String packageName, PackageMetadata metadata);\n+\n+    /**\n+     * Upload a package to the package management service.\n+     *\n+     * @param packageName\n+     *          the package name of the upload file\n+     * @param path\n+     *          the upload file path\n+     */\n+    void upload(PackageMetadata metadata, String packageName, String path) throws PulsarAdminException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62d5004b9072dcce18db28a753af74ae9252967"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ0NDMwMQ==", "bodyText": "Yes. It should be an absolute location.\nI will change that with another PR. Because that is another PR that has been merged.", "url": "https://github.com/apache/pulsar/pull/8817#discussion_r537444301", "createdAt": "2020-12-07T11:48:14Z", "author": {"login": "zymap"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Packages.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.admin;\n+\n+import org.apache.pulsar.packages.management.core.common.PackageMetadata;\n+\n+import java.util.List;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Administration operations of the packages management service.\n+ */\n+public interface Packages {\n+    /**\n+     * Get a package metadata information.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to find\n+     * @return the package metadata information\n+     */\n+    PackageMetadata getMetadata(String packageName) throws PulsarAdminException;\n+\n+    /**\n+     * Get a package metadata information asynchronously.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to find\n+     * @return  the package metadata information\n+     */\n+    CompletableFuture<PackageMetadata> getMetadataAsync(String packageName);\n+\n+    /**\n+     * Update a package metadata information.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to update\n+     * @param metadata\n+     *          the updated metadata information\n+     */\n+    void updateMetadata(String packageName, PackageMetadata metadata) throws PulsarAdminException;\n+\n+    /**\n+     * Update a package metadata information asynchronously.\n+     *\n+     * @param packageName\n+     *          the package name of the package metadata you want to update\n+     * @param metadata\n+     *          the updated metadata information\n+     * @return nothing\n+     */\n+    CompletableFuture<Void> updateMetadataAsync(String packageName, PackageMetadata metadata);\n+\n+    /**\n+     * Upload a package to the package management service.\n+     *\n+     * @param packageName\n+     *          the package name of the upload file\n+     * @param path\n+     *          the upload file path\n+     */\n+    void upload(PackageMetadata metadata, String packageName, String path) throws PulsarAdminException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk1ODUyMA=="}, "originalCommit": {"oid": "d62d5004b9072dcce18db28a753af74ae9252967"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2767, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}