{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2ODc4NzQ0", "number": 6787, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDoxMToxNFrOD0anCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjozMjoyN1rOD02b7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Mjg4NTIxOnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDoxMToxNFrOGJWeJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo0MDoxNVrOGJl1wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1ODUzMg==", "bodyText": "nit: the section below should get indented.", "url": "https://github.com/apache/pulsar/pull/6787#discussion_r412458532", "createdAt": "2020-04-21T20:11:14Z", "author": {"login": "merlimat"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "diffHunk": "@@ -124,6 +130,8 @@ public void removeCursor(String name) {\n \n             PositionImpl previousSlowestConsumer = heap.get(0).position;\n \n+            if (item.cursor.isDurable()) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce2886d98a3a5bebfcad139cb441cada0118851"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxMDMzNg==", "bodyText": "fixed", "url": "https://github.com/apache/pulsar/pull/6787#discussion_r412710336", "createdAt": "2020-04-22T06:40:15Z", "author": {"login": "jerrypeng"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "diffHunk": "@@ -124,6 +130,8 @@ public void removeCursor(String name) {\n \n             PositionImpl previousSlowestConsumer = heap.get(0).position;\n \n+            if (item.cursor.isDurable()) {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1ODUzMg=="}, "originalCommit": {"oid": "8ce2886d98a3a5bebfcad139cb441cada0118851"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzQzOTg3OnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjozMToyN1rOGJ_pQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjozMToyN1rOGJ_pQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzMzEyMw==", "bodyText": "It's becoming a bit confusing now to understand the meaning of hasCursors() and isEmpty(). We should be use a more unambiguous/explicit naming here.\nMy suggestion:\n\nhasCursors() --> isEmtpy() // Since we're talking about a cursors container\nisEmpty() --> hasDurableCursors()\n\n(and fix the reversal of the boolean logic)", "url": "https://github.com/apache/pulsar/pull/6787#discussion_r413133123", "createdAt": "2020-04-22T16:31:27Z", "author": {"login": "merlimat"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "diffHunk": "@@ -164,6 +175,22 @@ public ManagedCursor getSlowestReader() {\n         }\n     }\n \n+    public boolean hasCursors() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0132221ecc371c1229573a76ad325841f0d92e"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzQ0NDI4OnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjozMjoyN1rOGJ_sCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzozNDo0OVrOGKCj_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzMzgzNA==", "bodyText": "Wouldn't the logic be the reverse here? We're checking isEmpty but the method should return true if it's not empty, no?", "url": "https://github.com/apache/pulsar/pull/6787#discussion_r413133834", "createdAt": "2020-04-22T16:32:27Z", "author": {"login": "merlimat"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "diffHunk": "@@ -164,6 +175,22 @@ public ManagedCursor getSlowestReader() {\n         }\n     }\n \n+    public boolean hasCursors() {\n+        long stamp = rwLock.tryOptimisticRead();\n+        boolean isEmpty = cursors.isEmpty();\n+        if (!rwLock.validate(stamp)) {\n+            // Fallback to read lock\n+            stamp = rwLock.readLock();\n+            try {\n+                isEmpty = cursors.isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0132221ecc371c1229573a76ad325841f0d92e"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE4MDkyNA==", "bodyText": "Ya just used the same logic as \"isEmpty\" but the name of the method hints at a different semantic meaning.", "url": "https://github.com/apache/pulsar/pull/6787#discussion_r413180924", "createdAt": "2020-04-22T17:34:49Z", "author": {"login": "jerrypeng"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedCursorContainer.java", "diffHunk": "@@ -164,6 +175,22 @@ public ManagedCursor getSlowestReader() {\n         }\n     }\n \n+    public boolean hasCursors() {\n+        long stamp = rwLock.tryOptimisticRead();\n+        boolean isEmpty = cursors.isEmpty();\n+        if (!rwLock.validate(stamp)) {\n+            // Fallback to read lock\n+            stamp = rwLock.readLock();\n+            try {\n+                isEmpty = cursors.isEmpty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzEzMzgzNA=="}, "originalCommit": {"oid": "3d0132221ecc371c1229573a76ad325841f0d92e"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1813, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}