{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MTQ5MjU4", "number": 5989, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQxMjoyMTo1OVrODVzIuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQxMjoyMTo1OVrODVzIuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MTg0NTA0OnYy", "diffSide": "RIGHT", "path": "site2/docs/concepts-messaging.md", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNFQxMjoyMjowMFrOFaNvug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxMDoxNjoyOFrOFa1NJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMjUwNg==", "bodyText": "I think just noting is not enough, it should be pointed out that this is a buggy behavior and should be fixed in future releases.", "url": "https://github.com/apache/pulsar/pull/5989#discussion_r363032506", "createdAt": "2020-01-04T12:22:00Z", "author": {"login": "Lanayx"}, "path": "site2/docs/concepts-messaging.md", "diffHunk": "@@ -49,7 +49,14 @@ Messages published by producers can be compressed during transportation in order\n \n ### Batching\n \n-If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batching size is defined by the maximum number of messages and maximum publish latency.\n+If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batch size is defined by the maximum number of messages and maximum publish latency.\n+\n+Batches are tracked and stored by Pulsar as batches rather than as individual messages. Under the hood the consumer unbundles these batches into individual messages. Since the messages are stored as batches, the backlog size will also represent the total number of batches rather than the total number of messages.\n+\n+Scheduled messages (using `deliverAt` or `deliverAfter`) are always sent as individual messages even when batching is enabled.\n+\n+> Note\n+> Since batches are tracked as single units, a batch will only be considered acknowledged when all its messages are acknowledged by the consumer. This means unexpected failures, negative acknowledgements, and acknowledgement timeouts can result in redelivery of all messages in the batch, even if some of the messages have already been acknowledged.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15492d7a3a8262516601b3d9657d946c3a1757d6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzNjcxOQ==", "bodyText": "See  #5990 for a fix for this from @zzzming.", "url": "https://github.com/apache/pulsar/pull/5989#discussion_r363036719", "createdAt": "2020-01-04T13:57:31Z", "author": {"login": "cdbartholomew"}, "path": "site2/docs/concepts-messaging.md", "diffHunk": "@@ -49,7 +49,14 @@ Messages published by producers can be compressed during transportation in order\n \n ### Batching\n \n-If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batching size is defined by the maximum number of messages and maximum publish latency.\n+If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batch size is defined by the maximum number of messages and maximum publish latency.\n+\n+Batches are tracked and stored by Pulsar as batches rather than as individual messages. Under the hood the consumer unbundles these batches into individual messages. Since the messages are stored as batches, the backlog size will also represent the total number of batches rather than the total number of messages.\n+\n+Scheduled messages (using `deliverAt` or `deliverAfter`) are always sent as individual messages even when batching is enabled.\n+\n+> Note\n+> Since batches are tracked as single units, a batch will only be considered acknowledged when all its messages are acknowledged by the consumer. This means unexpected failures, negative acknowledgements, and acknowledgement timeouts can result in redelivery of all messages in the batch, even if some of the messages have already been acknowledged.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMjUwNg=="}, "originalCommit": {"oid": "15492d7a3a8262516601b3d9657d946c3a1757d6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODAzNQ==", "bodyText": "That fix is only on the client side, so batches may still be fully redelivered if the consumer crashes or restarts, though.", "url": "https://github.com/apache/pulsar/pull/5989#discussion_r363118035", "createdAt": "2020-01-05T21:26:03Z", "author": {"login": "gmethvin"}, "path": "site2/docs/concepts-messaging.md", "diffHunk": "@@ -49,7 +49,14 @@ Messages published by producers can be compressed during transportation in order\n \n ### Batching\n \n-If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batching size is defined by the maximum number of messages and maximum publish latency.\n+If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batch size is defined by the maximum number of messages and maximum publish latency.\n+\n+Batches are tracked and stored by Pulsar as batches rather than as individual messages. Under the hood the consumer unbundles these batches into individual messages. Since the messages are stored as batches, the backlog size will also represent the total number of batches rather than the total number of messages.\n+\n+Scheduled messages (using `deliverAt` or `deliverAfter`) are always sent as individual messages even when batching is enabled.\n+\n+> Note\n+> Since batches are tracked as single units, a batch will only be considered acknowledged when all its messages are acknowledged by the consumer. This means unexpected failures, negative acknowledgements, and acknowledgement timeouts can result in redelivery of all messages in the batch, even if some of the messages have already been acknowledged.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMjUwNg=="}, "originalCommit": {"oid": "15492d7a3a8262516601b3d9657d946c3a1757d6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMjE2Ng==", "bodyText": "True. That fix improves the situation, but doesn't resolve it entirely.", "url": "https://github.com/apache/pulsar/pull/5989#discussion_r363122166", "createdAt": "2020-01-05T22:39:57Z", "author": {"login": "cdbartholomew"}, "path": "site2/docs/concepts-messaging.md", "diffHunk": "@@ -49,7 +49,14 @@ Messages published by producers can be compressed during transportation in order\n \n ### Batching\n \n-If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batching size is defined by the maximum number of messages and maximum publish latency.\n+If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batch size is defined by the maximum number of messages and maximum publish latency.\n+\n+Batches are tracked and stored by Pulsar as batches rather than as individual messages. Under the hood the consumer unbundles these batches into individual messages. Since the messages are stored as batches, the backlog size will also represent the total number of batches rather than the total number of messages.\n+\n+Scheduled messages (using `deliverAt` or `deliverAfter`) are always sent as individual messages even when batching is enabled.\n+\n+> Note\n+> Since batches are tracked as single units, a batch will only be considered acknowledged when all its messages are acknowledged by the consumer. This means unexpected failures, negative acknowledgements, and acknowledgement timeouts can result in redelivery of all messages in the batch, even if some of the messages have already been acknowledged.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMjUwNg=="}, "originalCommit": {"oid": "15492d7a3a8262516601b3d9657d946c3a1757d6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY1MzI2MA==", "bodyText": "If we agree it's definitely a bug, then let's get the fix and this documentation update in the next release, and I'll remove the part about negative acks.", "url": "https://github.com/apache/pulsar/pull/5989#discussion_r363653260", "createdAt": "2020-01-07T09:14:33Z", "author": {"login": "gmethvin"}, "path": "site2/docs/concepts-messaging.md", "diffHunk": "@@ -49,7 +49,14 @@ Messages published by producers can be compressed during transportation in order\n \n ### Batching\n \n-If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batching size is defined by the maximum number of messages and maximum publish latency.\n+If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batch size is defined by the maximum number of messages and maximum publish latency.\n+\n+Batches are tracked and stored by Pulsar as batches rather than as individual messages. Under the hood the consumer unbundles these batches into individual messages. Since the messages are stored as batches, the backlog size will also represent the total number of batches rather than the total number of messages.\n+\n+Scheduled messages (using `deliverAt` or `deliverAfter`) are always sent as individual messages even when batching is enabled.\n+\n+> Note\n+> Since batches are tracked as single units, a batch will only be considered acknowledged when all its messages are acknowledged by the consumer. This means unexpected failures, negative acknowledgements, and acknowledgement timeouts can result in redelivery of all messages in the batch, even if some of the messages have already been acknowledged.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMjUwNg=="}, "originalCommit": {"oid": "15492d7a3a8262516601b3d9657d946c3a1757d6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY3OTAxMw==", "bodyText": "Agreed. This is a bug and fixes at the client side are not enough. Just fixing this at the client side is actually making the behavior much more confused. We need to get this documentation merged first and then fix the behavior fundamentally in the next release.", "url": "https://github.com/apache/pulsar/pull/5989#discussion_r363679013", "createdAt": "2020-01-07T10:16:28Z", "author": {"login": "sijie"}, "path": "site2/docs/concepts-messaging.md", "diffHunk": "@@ -49,7 +49,14 @@ Messages published by producers can be compressed during transportation in order\n \n ### Batching\n \n-If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batching size is defined by the maximum number of messages and maximum publish latency.\n+If batching is enabled, the producer will accumulate and send a batch of messages in a single request. Batch size is defined by the maximum number of messages and maximum publish latency.\n+\n+Batches are tracked and stored by Pulsar as batches rather than as individual messages. Under the hood the consumer unbundles these batches into individual messages. Since the messages are stored as batches, the backlog size will also represent the total number of batches rather than the total number of messages.\n+\n+Scheduled messages (using `deliverAt` or `deliverAfter`) are always sent as individual messages even when batching is enabled.\n+\n+> Note\n+> Since batches are tracked as single units, a batch will only be considered acknowledged when all its messages are acknowledged by the consumer. This means unexpected failures, negative acknowledgements, and acknowledgement timeouts can result in redelivery of all messages in the batch, even if some of the messages have already been acknowledged.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAzMjUwNg=="}, "originalCommit": {"oid": "15492d7a3a8262516601b3d9657d946c3a1757d6"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2042, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}