{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1ODkyMzE1", "number": 7647, "title": "Allow ability to specify retain key ordering in functions", "bodyText": "(If this PR fixes a github issue, please add Fixes #<xyz>.)\nFixes #\n(or if this PR is one task of a github issue, please add Master Issue: #<xyz> to link to the master issue.)\nMaster Issue: #\nMotivation\nJust like retainOrdering, sometimes applications want to retain ordering over the message keys. This pr adds support to that.\nModifications\nDescribe the modifications you've done.\nVerifying this change\n\n Make sure that the change passes the CI checks.\n\n(Please pick either of the following options)\nThis change is a trivial rework / code cleanup without any test coverage.\n(or)\nThis change is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end deployment with large payloads (10MB)\nExtended integration test for recovery after broker failure\n\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API: (yes / no)\nThe schema: (yes / no / don't know)\nThe default values of configurations: (yes / no)\nThe wire protocol: (yes / no)\nThe rest endpoints: (yes / no)\nThe admin cli options: (yes / no)\nAnything that affects deployment: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)\nIf a feature is not applicable for documentation, explain why?\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation", "createdAt": "2020-07-23T18:49:59Z", "url": "https://github.com/apache/pulsar/pull/7647", "merged": true, "mergeCommit": {"oid": "ff4c3f65367526d3bdbcd51a55c7be675ed10de3"}, "closed": true, "closedAt": "2020-07-24T20:31:05Z", "author": {"login": "srkukarni"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc30BJbAH2gAyNDU1ODkyMzE1OjQ3OGEyZDFlNTE5NzRhNGVlMzM3MzQ1ZTY3ZWQ5ZTRlMmFkOTQ3YjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4J0OlAFqTQ1NTE1ODA4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/478a2d1e51974a4ee337345e67ed9e4e2ad947b4", "committedDate": "2020-07-23T18:48:14Z", "message": "Allow ability to specify retain key ordering in functions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDYxNDI4", "url": "https://github.com/apache/pulsar/pull/7647#pullrequestreview-454461428", "createdAt": "2020-07-23T20:13:05Z", "commit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMzowNlrOG2Z7lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMzowNlrOG2Z7lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTE0MA==", "bodyText": "We also need to do this in SinkConfigUtils", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459701140", "createdAt": "2020-07-23T20:13:06Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDczMTYx", "url": "https://github.com/apache/pulsar/pull/7647#pullrequestreview-454473161", "createdAt": "2020-07-23T20:31:12Z", "commit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozMToxMlrOG2afyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozMToxMlrOG2afyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMDQxMQ==", "bodyText": "Why are we assuming ATLEAST_ONCE here?  A user can set the processing guarantee to be at most once and still set the retain ordering to be true", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459710411", "createdAt": "2020-07-23T20:31:12Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {\n+            functionConfig.setRetainOrdering(false);\n+            functionConfig.setRetainKeyOrdering(true);\n+            functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.ATLEAST_ONCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDc1Njky", "url": "https://github.com/apache/pulsar/pull/7647#pullrequestreview-454475692", "createdAt": "2020-07-23T20:35:06Z", "commit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozNTowN1rOG2aoFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozNTowN1rOG2aoFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMjUzNA==", "bodyText": "Can we re-organize this giant conditional statement to be more readable?\nif (effectively-once) {\nsubType = Failover\n} else if (retain order) {\nsubType = failover\n} else if (retain key order) {\nsubType = shared_key\n} else {\nsubType = shared\n}", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459712534", "createdAt": "2020-07-23T20:35:07Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -142,6 +142,8 @@ public static FunctionDetails convert(FunctionConfig functionConfig, ClassLoader\n         Function.SubscriptionType subType = ((functionConfig.getRetainOrdering() != null && functionConfig.getRetainOrdering())\n                 || FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE.equals(functionConfig.getProcessingGuarantees()))\n                 ? Function.SubscriptionType.FAILOVER\n+                : (functionConfig.getRetainKeyOrdering() != null && functionConfig.getRetainKeyOrdering())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDc4ODk2", "url": "https://github.com/apache/pulsar/pull/7647#pullrequestreview-454478896", "createdAt": "2020-07-23T20:40:10Z", "commit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0MDoxMFrOG2ayDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0MDoxMFrOG2ayDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTA4NA==", "bodyText": "I would remove this stanza.  We should return an error if the retain order or retain key ordering is set at all", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459715084", "createdAt": "2020-07-23T20:40:10Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -639,6 +655,16 @@ private static void doCommonChecks(FunctionConfig functionConfig) {\n         if ((functionConfig.getMaxMessageRetries() == null || functionConfig.getMaxMessageRetries() < 0) && !org.apache.commons.lang3.StringUtils.isEmpty(functionConfig.getDeadLetterTopic())) {\n             throw new IllegalArgumentException(\"Dead Letter Topic specified, however max retries is set to infinity\");\n         }\n+        if (functionConfig.getRetainKeyOrdering() != null\n+                && functionConfig.getRetainKeyOrdering()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDgwMjUx", "url": "https://github.com/apache/pulsar/pull/7647#pullrequestreview-454480251", "createdAt": "2020-07-23T20:42:21Z", "commit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0MjoyMVrOG2a2eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0MjoyMVrOG2a2eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNjIxOA==", "bodyText": "Can we add some comments here for retainOrdering and retainKeyOrdering so people understand what they do and what the difference between the two is?", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459716218", "createdAt": "2020-07-23T20:42:21Z", "author": {"login": "jerrypeng"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/functions/FunctionConfig.java", "diffHunk": "@@ -87,6 +87,7 @@\n     private String logTopic;\n     private ProcessingGuarantees processingGuarantees;\n     private Boolean retainOrdering;\n+    private Boolean retainKeyOrdering;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDgzMzM5", "url": "https://github.com/apache/pulsar/pull/7647#pullrequestreview-454483339", "createdAt": "2020-07-23T20:47:17Z", "commit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0NzoxN1rOG2bACA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0NzoxN1rOG2bACA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxODY2NA==", "bodyText": "This whole conditional statement doesn't seem right to me.  Why are se setting the processing guarantee by looking at what the subscription is?  We already setting the processing guarantee in a previous line:\nhttps://github.com/apache/pulsar/pull/7647/files#diff-239e167c18ea8591c85432948ab5040aL297", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459718664", "createdAt": "2020-07-23T20:47:17Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1b692868685d4a5d10068dfbeb0b2a1b886c40b", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/b1b692868685d4a5d10068dfbeb0b2a1b886c40b", "committedDate": "2020-07-24T07:00:32Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd2e1ef38fe00b2b8ccd233f7037c5f26ad89f35", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/bd2e1ef38fe00b2b8ccd233f7037c5f26ad89f35", "committedDate": "2020-07-24T16:30:24Z", "message": "Merge branch 'master' into key_shared_function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTU4MDg3", "url": "https://github.com/apache/pulsar/pull/7647#pullrequestreview-455158087", "createdAt": "2020-07-24T20:12:02Z", "commit": {"oid": "bd2e1ef38fe00b2b8ccd233f7037c5f26ad89f35"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 408, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}