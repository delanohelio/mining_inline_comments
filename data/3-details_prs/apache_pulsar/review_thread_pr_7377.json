{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwOTQ0NDc5", "number": 7377, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODoxMDo0OVrOEJxe1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjozODozN1rOEKTOpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NjgzMzUxOnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxODoxMDo0OVrOGqcbJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMjo1MzoxOVrOGqpv4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1OTA3OA==", "bodyText": "Or should we just check if the message has a data or not?", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447159078", "createdAt": "2020-06-29T18:10:49Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +307,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getCompactMetadataTopic()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE2MDUwNw==", "bodyText": "actually prefer explicit setting.\nPlus with this change, key is being set for whether you are compacting the topic or not", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447160507", "createdAt": "2020-06-29T18:13:30Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +307,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getCompactMetadataTopic()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1OTA3OA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE2MTI2MA==", "bodyText": "Is there a way for a user to that is already using functions to be able to turn compaction on? Is there a path of migration for these users?", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447161260", "createdAt": "2020-06-29T18:14:55Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +307,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getCompactMetadataTopic()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1OTA3OA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE2NDc0Mw==", "bodyText": "The simplest thing maybe to change this check from\nif (workerConfig.getCompactMetadataTopic()\nto\nif (messsage.getdata() == null)\nSo old messages can get processed correctly as well as the the new messages in the new format", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447164743", "createdAt": "2020-06-29T18:21:27Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +307,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getCompactMetadataTopic()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1OTA3OA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE2ODUxNA==", "bodyText": "The format of the messages are now different.", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447168514", "createdAt": "2020-06-29T18:27:39Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +307,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getCompactMetadataTopic()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1OTA3OA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0MjkwOQ==", "bodyText": "Just the version is added as part of properties right?  We can still process the messages differently based on whether the data == null or not", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447342909", "createdAt": "2020-06-30T00:51:37Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +307,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getCompactMetadataTopic()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1OTA3OA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3NzM3OA==", "bodyText": "Not just the version. We actually write function metadata when compaction is turned on. In case when it\u2019s not compacted, we write the service request for backwards compatibility.", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447377378", "createdAt": "2020-06-30T02:53:19Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +307,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getCompactMetadataTopic()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE1OTA3OA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODA0MDA0OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/runtime/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMDo1NToxM1rOGqntfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMzo1ODo0NlrOGrSX3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0Mzk5OQ==", "bodyText": "Given the current approach, this is a dangerous flag. If a user mistakenly flips the flag on.  It could render their cluster corrupt. We should perhaps add more warnings for what this config with do.  Instead of \"compactMetadataTopic\" maybe we can rename it to \"useCompactedMetadataTopic\"?  So that what it does is more clear.", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447343999", "createdAt": "2020-06-30T00:55:13Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/runtime/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java", "diffHunk": "@@ -168,6 +168,11 @@\n         doc = \"The pulsar topic used for storing function metadata\"\n     )\n     private String functionMetadataTopicName;\n+    @FieldContext(\n+            category = CATEGORY_FUNC_METADATA_MNG,\n+            doc = \"Should the metadata topic be compacted?\"\n+    )\n+    private Boolean compactMetadataTopic = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3ODA0MQ==", "bodyText": "Will change the name. Although the possibility of corruption is low. Because before a leader can actually start writing, it needs to read all existing messages and the messages will not deserialize either way.", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447378041", "createdAt": "2020-06-30T02:55:47Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/runtime/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java", "diffHunk": "@@ -168,6 +168,11 @@\n         doc = \"The pulsar topic used for storing function metadata\"\n     )\n     private String functionMetadataTopicName;\n+    @FieldContext(\n+            category = CATEGORY_FUNC_METADATA_MNG,\n+            doc = \"Should the metadata topic be compacted?\"\n+    )\n+    private Boolean compactMetadataTopic = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0Mzk5OQ=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwMTE3OA==", "bodyText": "Changed", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447401178", "createdAt": "2020-06-30T04:25:52Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/runtime/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java", "diffHunk": "@@ -168,6 +168,11 @@\n         doc = \"The pulsar topic used for storing function metadata\"\n     )\n     private String functionMetadataTopicName;\n+    @FieldContext(\n+            category = CATEGORY_FUNC_METADATA_MNG,\n+            doc = \"Should the metadata topic be compacted?\"\n+    )\n+    private Boolean compactMetadataTopic = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0Mzk5OQ=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA0Mjk3NA==", "bodyText": "I would suggest to add some more content to the doc annotation on what the impact of flipping the flag is.", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r448042974", "createdAt": "2020-06-30T23:58:46Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/runtime/src/main/java/org/apache/pulsar/functions/worker/WorkerConfig.java", "diffHunk": "@@ -168,6 +168,11 @@\n         doc = \"The pulsar topic used for storing function metadata\"\n     )\n     private String functionMetadataTopicName;\n+    @FieldContext(\n+            category = CATEGORY_FUNC_METADATA_MNG,\n+            doc = \"Should the metadata topic be compacted?\"\n+    )\n+    private Boolean compactMetadataTopic = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0Mzk5OQ=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODA0ODg3OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwMDo1OTo0OFrOGqnysA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDoyNTo0NVrOGqrMuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0NTMyOA==", "bodyText": "lets use a\nprivate const final String\n\nvariable for \"version\"", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447345328", "createdAt": "2020-06-30T00:59:48Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -206,14 +208,29 @@ public synchronized void updateFunctionOnLeader(FunctionMetaData functionMetaDat\n         } else {\n             needsScheduling = processUpdate(functionMetaData);\n         }\n-        Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n-                .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n-                .setFunctionMetaData(functionMetaData)\n-                .setWorkerId(workerConfig.getWorkerId())\n-                .setRequestId(UUID.randomUUID().toString())\n-                .build();\n+        String key = FunctionCommon.getFullyQualifiedName(functionMetaData.getFunctionDetails());\n+        byte[] toWrite;\n+        if (workerConfig.getCompactMetadataTopic()) {\n+            if (delete) {\n+                toWrite = \"\".getBytes();\n+            } else {\n+                toWrite = functionMetaData.toByteArray();\n+            }\n+        } else {\n+            Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n+                    .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n+                    .setFunctionMetaData(functionMetaData)\n+                    .setWorkerId(workerConfig.getWorkerId())\n+                    .setRequestId(UUID.randomUUID().toString())\n+                    .build();\n+            toWrite = serviceRequest.toByteArray();\n+        }\n         try {\n-            lastMessageSeen = exclusiveLeaderProducer.send(serviceRequest.toByteArray());\n+            lastMessageSeen = exclusiveLeaderProducer.newMessage()\n+                    .key(key)\n+                    .value(toWrite)\n+                    .property(\"version\", Long.toString(functionMetaData.getVersion()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM3ODExNg==", "bodyText": "Ok", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447378116", "createdAt": "2020-06-30T02:56:06Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -206,14 +208,29 @@ public synchronized void updateFunctionOnLeader(FunctionMetaData functionMetaDat\n         } else {\n             needsScheduling = processUpdate(functionMetaData);\n         }\n-        Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n-                .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n-                .setFunctionMetaData(functionMetaData)\n-                .setWorkerId(workerConfig.getWorkerId())\n-                .setRequestId(UUID.randomUUID().toString())\n-                .build();\n+        String key = FunctionCommon.getFullyQualifiedName(functionMetaData.getFunctionDetails());\n+        byte[] toWrite;\n+        if (workerConfig.getCompactMetadataTopic()) {\n+            if (delete) {\n+                toWrite = \"\".getBytes();\n+            } else {\n+                toWrite = functionMetaData.toByteArray();\n+            }\n+        } else {\n+            Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n+                    .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n+                    .setFunctionMetaData(functionMetaData)\n+                    .setWorkerId(workerConfig.getWorkerId())\n+                    .setRequestId(UUID.randomUUID().toString())\n+                    .build();\n+            toWrite = serviceRequest.toByteArray();\n+        }\n         try {\n-            lastMessageSeen = exclusiveLeaderProducer.send(serviceRequest.toByteArray());\n+            lastMessageSeen = exclusiveLeaderProducer.newMessage()\n+                    .key(key)\n+                    .value(toWrite)\n+                    .property(\"version\", Long.toString(functionMetaData.getVersion()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0NTMyOA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwMTE0NA==", "bodyText": "Changed", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447401144", "createdAt": "2020-06-30T04:25:45Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -206,14 +208,29 @@ public synchronized void updateFunctionOnLeader(FunctionMetaData functionMetaDat\n         } else {\n             needsScheduling = processUpdate(functionMetaData);\n         }\n-        Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n-                .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n-                .setFunctionMetaData(functionMetaData)\n-                .setWorkerId(workerConfig.getWorkerId())\n-                .setRequestId(UUID.randomUUID().toString())\n-                .build();\n+        String key = FunctionCommon.getFullyQualifiedName(functionMetaData.getFunctionDetails());\n+        byte[] toWrite;\n+        if (workerConfig.getCompactMetadataTopic()) {\n+            if (delete) {\n+                toWrite = \"\".getBytes();\n+            } else {\n+                toWrite = functionMetaData.toByteArray();\n+            }\n+        } else {\n+            Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n+                    .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n+                    .setFunctionMetaData(functionMetaData)\n+                    .setWorkerId(workerConfig.getWorkerId())\n+                    .setRequestId(UUID.randomUUID().toString())\n+                    .build();\n+            toWrite = serviceRequest.toByteArray();\n+        }\n         try {\n-            lastMessageSeen = exclusiveLeaderProducer.send(serviceRequest.toByteArray());\n+            lastMessageSeen = exclusiveLeaderProducer.newMessage()\n+                    .key(key)\n+                    .value(toWrite)\n+                    .property(\"version\", Long.toString(functionMetaData.getVersion()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM0NTMyOA=="}, "originalCommit": {"oid": "198aca273e4c12011ca3b9d749692789361c7aed"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTI2MzQ5OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzowNzozN1rOGrGRhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToxODoxMVrOGrLBPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0NDc0MA==", "bodyText": "This will add a key for both the old format and new format right? Not sure we should add a key for the old format.  Perhaps, whether checking whether the message has a key or not can be used to determine whether its the old format or new format.", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447844740", "createdAt": "2020-06-30T17:07:37Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -206,14 +210,29 @@ public synchronized void updateFunctionOnLeader(FunctionMetaData functionMetaDat\n         } else {\n             needsScheduling = processUpdate(functionMetaData);\n         }\n-        Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n-                .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n-                .setFunctionMetaData(functionMetaData)\n-                .setWorkerId(workerConfig.getWorkerId())\n-                .setRequestId(UUID.randomUUID().toString())\n-                .build();\n+        String key = FunctionCommon.getFullyQualifiedName(functionMetaData.getFunctionDetails());\n+        byte[] toWrite;\n+        if (workerConfig.getUseCompactedMetadataTopic()) {\n+            if (delete) {\n+                toWrite = \"\".getBytes();\n+            } else {\n+                toWrite = functionMetaData.toByteArray();\n+            }\n+        } else {\n+            Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n+                    .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n+                    .setFunctionMetaData(functionMetaData)\n+                    .setWorkerId(workerConfig.getWorkerId())\n+                    .setRequestId(UUID.randomUUID().toString())\n+                    .build();\n+            toWrite = serviceRequest.toByteArray();\n+        }\n         try {\n-            lastMessageSeen = exclusiveLeaderProducer.send(serviceRequest.toByteArray());\n+            lastMessageSeen = exclusiveLeaderProducer.newMessage()\n+                    .key(key)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a84866db5e7669dfe97432b8145ce45cf4b5e742"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyMjQ5Mw==", "bodyText": "Changed", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r447922493", "createdAt": "2020-06-30T19:18:11Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -206,14 +210,29 @@ public synchronized void updateFunctionOnLeader(FunctionMetaData functionMetaDat\n         } else {\n             needsScheduling = processUpdate(functionMetaData);\n         }\n-        Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n-                .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n-                .setFunctionMetaData(functionMetaData)\n-                .setWorkerId(workerConfig.getWorkerId())\n-                .setRequestId(UUID.randomUUID().toString())\n-                .build();\n+        String key = FunctionCommon.getFullyQualifiedName(functionMetaData.getFunctionDetails());\n+        byte[] toWrite;\n+        if (workerConfig.getUseCompactedMetadataTopic()) {\n+            if (delete) {\n+                toWrite = \"\".getBytes();\n+            } else {\n+                toWrite = functionMetaData.toByteArray();\n+            }\n+        } else {\n+            Request.ServiceRequest serviceRequest = Request.ServiceRequest.newBuilder()\n+                    .setServiceRequestType(delete ? Request.ServiceRequest.ServiceRequestType.DELETE : Request.ServiceRequest.ServiceRequestType.UPDATE)\n+                    .setFunctionMetaData(functionMetaData)\n+                    .setWorkerId(workerConfig.getWorkerId())\n+                    .setRequestId(UUID.randomUUID().toString())\n+                    .build();\n+            toWrite = serviceRequest.toByteArray();\n+        }\n         try {\n-            lastMessageSeen = exclusiveLeaderProducer.send(serviceRequest.toByteArray());\n+            lastMessageSeen = exclusiveLeaderProducer.newMessage()\n+                    .key(key)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg0NDc0MA=="}, "originalCommit": {"oid": "a84866db5e7669dfe97432b8145ce45cf4b5e742"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjM2MjYxOnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjozODozN1rOGrQ2nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjo0MjoxMVrOGrQ7Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxODA3OQ==", "bodyText": "Should we change this check to if a key exists or not?  This creates an avenue in which a existing cluster can transition to use a compacted metadata topic", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r448018079", "createdAt": "2020-06-30T22:38:37Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +310,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getUseCompactedMetadataTopic()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0936f17df99a92c3b33964a094700e2d3553ea"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxOTI5OQ==", "bodyText": "I don't think thats a good idea. I would rather have worker fail here unless specifically configured to have compaction enabled or disabled.", "url": "https://github.com/apache/pulsar/pull/7377#discussion_r448019299", "createdAt": "2020-06-30T22:42:11Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/FunctionMetaDataManager.java", "diffHunk": "@@ -290,26 +310,48 @@ public synchronized void giveupLeadership() {\n      */\n     public void processMetaDataTopicMessage(Message<byte[]> message) throws IOException {\n         try {\n-            Request.ServiceRequest serviceRequest = Request.ServiceRequest.parseFrom(message.getData());\n-            if (log.isDebugEnabled()) {\n-                log.debug(\"Received Service Request: {}\", serviceRequest);\n-            }\n-            switch (serviceRequest.getServiceRequestType()) {\n-                case UPDATE:\n-                    this.processUpdate(serviceRequest.getFunctionMetaData());\n-                    break;\n-                case DELETE:\n-                    this.proccessDeregister(serviceRequest.getFunctionMetaData());\n-                    break;\n-                default:\n-                    log.warn(\"Received request with unrecognized type: {}\", serviceRequest);\n+            if (workerConfig.getUseCompactedMetadataTopic()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxODA3OQ=="}, "originalCommit": {"oid": "be0936f17df99a92c3b33964a094700e2d3553ea"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2555, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}