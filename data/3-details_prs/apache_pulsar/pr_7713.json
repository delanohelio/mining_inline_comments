{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMzg0NTEz", "number": 7713, "title": "implement python logger wrapper", "bodyText": "Fixes #4234\nMotivation\nLogging in the python client is not configurable, so the stdout was spammed. This PR revives the #6113 but tries to resolve the bugs that resulted the last time.\nModifications\nImplemented a python logger wrapper. You can pass a python logger as an argument to the client.\nVerifying this change\n\n Make sure that the change passes the CI checks.\n\nNot sure how to unit-test this. I tested it manually by building the client and trying it out with python scripts. It works as expected both with the logger forwarded and without. Also, configuring the logger also configures the log level so this fixes the problem.\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): no\nThe public API: yes (?)\nThe schema: no\nThe default values of configurations: no\nThe wire protocol: no\nThe rest endpoints: no\nThe admin cli options: no\nAnything that affects deployment: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? yes\nIf yes, how is the feature documented? inline function docs", "createdAt": "2020-07-31T18:24:08Z", "url": "https://github.com/apache/pulsar/pull/7713", "merged": true, "mergeCommit": {"oid": "b6247fd83bbb1420eed7f371ab4837bb51eb650a"}, "closed": true, "closedAt": "2021-05-20T07:47:11Z", "author": {"login": "lbenc135"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdF1q_dgBqjM3MzI3MzUyNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeYNUv8AH2gAyNDYwMzg0NTEzOjNkYTY2ZjFiNmQyMjlhYzQyMzE2YzQ3ZDFiN2FkOGRiYTJmZDRhMGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f173965d8ae56595bd2632b2e7fcb7304108420", "author": {"user": {"login": "wolfstudy", "name": "xiaolong ran"}}, "url": "https://github.com/apache/pulsar/commit/5f173965d8ae56595bd2632b2e7fcb7304108420", "committedDate": "2020-09-05T08:32:46Z", "message": "Add docs of package Pulsar Functions (#7904)\n\n* Add docs of package Pulsar Functions\r\n\r\nSigned-off-by: xiaolong.ran <rxl@apache.org>"}, "afterCommit": {"oid": "deebbe88a8ca77c9e49858f10fb8da6b0a4f38bc", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/deebbe88a8ca77c9e49858f10fb8da6b0a4f38bc", "committedDate": "2020-09-05T08:37:55Z", "message": "rerun tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMTkzNTIx", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-491193521", "createdAt": "2020-09-18T06:50:47Z", "commit": {"oid": "deebbe88a8ca77c9e49858f10fb8da6b0a4f38bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNjo1MDo0N1rOHUARWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNjo1MDo0N1rOHUARWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczODAxMA==", "bodyText": "This equiation for log level conversion is used at multiple places, consider wrap it into function or somethink like that.", "url": "https://github.com/apache/pulsar/pull/7713#discussion_r490738010", "createdAt": "2020-09-18T06:50:47Z", "author": {"login": "pinkavaj"}, "path": "pulsar-client-cpp/python/src/config.cc", "diffHunk": "@@ -74,6 +74,103 @@ static ClientConfiguration& ClientConfiguration_setAuthentication(ClientConfigur\n     return conf;\n }\n \n+class LoggerWrapper: public Logger {\n+    std::string _logger;\n+    PyObject* _pyLogger;\n+    int _currentPythonLogLevel = 10 + (Logger::LEVEL_INFO*10);\n+\n+    void _updateCurrentPythonLogLevel() {\n+        PyGILState_STATE state = PyGILState_Ensure();\n+\n+        try {\n+            _currentPythonLogLevel = py::call_method<int>(_pyLogger, \"getEffectiveLevel\");\n+        } catch (py::error_already_set e) {\n+            PyErr_Print();\n+        }\n+\n+        PyGILState_Release(state);\n+    };\n+\n+   public:\n+\n+    LoggerWrapper(const std::string &logger, PyObject* pyLogger) : _logger(logger) {\n+        _pyLogger = pyLogger;\n+        Py_XINCREF(_pyLogger);\n+\n+        _updateCurrentPythonLogLevel();\n+    }\n+\n+    LoggerWrapper(const LoggerWrapper& other) {\n+        _pyLogger = other._pyLogger;\n+        Py_XINCREF(_pyLogger);\n+    }\n+\n+    LoggerWrapper& operator=(const LoggerWrapper& other) {\n+        _pyLogger = other._pyLogger;\n+        Py_XINCREF(_pyLogger);\n+        return *this;\n+    }\n+\n+    virtual ~LoggerWrapper() {\n+        Py_XDECREF(_pyLogger);\n+    }\n+\n+    bool isEnabled(Level level) {\n+        return 10 + (level*10) >= _currentPythonLogLevel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "deebbe88a8ca77c9e49858f10fb8da6b0a4f38bc"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c09e10c47df1295579702c09fa0829e6d1bb112", "author": {"user": {"login": "massakam", "name": "Masahiro Sakamoto"}}, "url": "https://github.com/apache/pulsar/commit/0c09e10c47df1295579702c09fa0829e6d1bb112", "committedDate": "2020-10-03T07:44:18Z", "message": "Fix issue where paused consumer receives new message when reconnecting (#8165)\n\n### Motivation\r\n\r\nConsumers whose `pause()` method is called are expected not to fetch any more new messages from the broker until `resume()` is called. However, when the topic is unloaded or the broker is restarted, the consumer receives new messages.\r\n\r\nWhile the consumer is paused, no flow permits are sent to the broker when the `increaseAvailablePermits()` method is called.\r\nhttps://github.com/apache/pulsar/blob/dea574b3c6af7ea8eaa4904d8d6ed1044df00642/pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java#L1527-L1538\r\n\r\nHowever, if the `sendFlowPermitsToBroker()` method is called directly, flow permits will be sent even while the consumer is paused. When a reconnection occurs, `sendFlowPermitsToBroker()` is called instead of `increaseAvailablePermits()`.\r\nhttps://github.com/apache/pulsar/blob/dea574b3c6af7ea8eaa4904d8d6ed1044df00642/pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java#L850-L856\r\n\r\n### Modifications\r\n\r\nFixed consumer classes to always use `increaseAvailablePermits()` instead of `sendFlowPermitsToBroker()`."}, "afterCommit": {"oid": "6fcf18fad7e8c5200e4e018daea510f482f9b156", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/6fcf18fad7e8c5200e4e018daea510f482f9b156", "committedDate": "2020-10-03T07:47:33Z", "message": "rerun tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a16be7eb77520130d6ad0257f677339ca50a842", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/9a16be7eb77520130d6ad0257f677339ca50a842", "committedDate": "2020-10-03T10:23:27Z", "message": "add python logger test"}, "afterCommit": {"oid": "11be0b3a72e148b7db3ff7174210855ff272efc8", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/11be0b3a72e148b7db3ff7174210855ff272efc8", "committedDate": "2020-12-28T08:33:22Z", "message": "add python logger test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNjkxMjQ4", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-573691248", "createdAt": "2021-01-21T20:02:31Z", "commit": {"oid": "11be0b3a72e148b7db3ff7174210855ff272efc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMDowMjozMlrOIYHoxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMDowMjozMlrOIYHoxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE2MTg2Mw==", "bodyText": "The file and line information is not logged, but I'm not familiar with the code enought to decide what is more appropriate. From the point of developer I would preffer the file and line information in the log message.\nProbably someone more familiar with this code should speek his opinion.\nOtherwise looks good.", "url": "https://github.com/apache/pulsar/pull/7713#discussion_r562161863", "createdAt": "2021-01-21T20:02:32Z", "author": {"login": "pinkavaj"}, "path": "pulsar-client-cpp/python/src/config.cc", "diffHunk": "@@ -74,6 +74,107 @@ static ClientConfiguration& ClientConfiguration_setAuthentication(ClientConfigur\n     return conf;\n }\n \n+class LoggerWrapper: public Logger {\n+    std::string _logger;\n+    PyObject* _pyLogger;\n+    int _currentPythonLogLevel = _getLogLevelValue(Logger::LEVEL_INFO);\n+\n+    void _updateCurrentPythonLogLevel() {\n+        PyGILState_STATE state = PyGILState_Ensure();\n+\n+        try {\n+            _currentPythonLogLevel = py::call_method<int>(_pyLogger, \"getEffectiveLevel\");\n+        } catch (py::error_already_set e) {\n+            PyErr_Print();\n+        }\n+\n+        PyGILState_Release(state);\n+    };\n+\n+    int _getLogLevelValue(Level level) {\n+        return 10 + (level * 10);\n+    }\n+\n+   public:\n+\n+    LoggerWrapper(const std::string &logger, PyObject* pyLogger) : _logger(logger) {\n+        _pyLogger = pyLogger;\n+        Py_XINCREF(_pyLogger);\n+\n+        _updateCurrentPythonLogLevel();\n+    }\n+\n+    LoggerWrapper(const LoggerWrapper& other) {\n+        _pyLogger = other._pyLogger;\n+        Py_XINCREF(_pyLogger);\n+    }\n+\n+    LoggerWrapper& operator=(const LoggerWrapper& other) {\n+        _pyLogger = other._pyLogger;\n+        Py_XINCREF(_pyLogger);\n+        return *this;\n+    }\n+\n+    virtual ~LoggerWrapper() {\n+        Py_XDECREF(_pyLogger);\n+    }\n+\n+    bool isEnabled(Level level) {\n+        return _getLogLevelValue(level) >= _currentPythonLogLevel;\n+    }\n+\n+    void log(Level level, int line, const std::string& message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11be0b3a72e148b7db3ff7174210855ff272efc8"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11be0b3a72e148b7db3ff7174210855ff272efc8", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/11be0b3a72e148b7db3ff7174210855ff272efc8", "committedDate": "2020-12-28T08:33:22Z", "message": "add python logger test"}, "afterCommit": {"oid": "54ebbdb06f61b1ae9ea854530d7a3c7a806a095d", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/54ebbdb06f61b1ae9ea854530d7a3c7a806a095d", "committedDate": "2021-03-20T08:08:23Z", "message": "add python logger test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3NjU5NzQ3", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-617659747", "createdAt": "2021-03-22T15:25:58Z", "commit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQxNToyNTo1OFrOI7E-Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQxNToyNTo1OFrOI7E-Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODgxODMyMw==", "bodyText": "Perhaps spell out explicitly that this must be an instance of logging.Logger?", "url": "https://github.com/apache/pulsar/pull/7713#discussion_r598818323", "createdAt": "2021-03-22T15:25:58Z", "author": {"login": "Bklyn"}, "path": "pulsar-client-cpp/python/pulsar/__init__.py", "diffHunk": "@@ -403,6 +405,8 @@ def __init__(self, service_url,\n           Configure whether the Pulsar client validates that the hostname of the\n           endpoint, matches the common name on the TLS certificate presented by\n           the endpoint.\n+        * `logger`:\n+          Set a Python logger for this Pulsar client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3NjY0ODk2", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-617664896", "createdAt": "2021-03-22T15:30:10Z", "commit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQxNTozMDoxMFrOI7FSzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQxNTozMDoxMFrOI7FSzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODgyMzYyOQ==", "bodyText": "Initialize _logger from other._logger", "url": "https://github.com/apache/pulsar/pull/7713#discussion_r598823629", "createdAt": "2021-03-22T15:30:10Z", "author": {"login": "Bklyn"}, "path": "pulsar-client-cpp/python/src/config.cc", "diffHunk": "@@ -88,6 +88,107 @@ static ProducerConfiguration& ProducerConfiguration_setCryptoKeyReader(ProducerC\n     return conf;\n }\n \n+class LoggerWrapper: public Logger {\n+    std::string _logger;\n+    PyObject* _pyLogger;\n+    int _currentPythonLogLevel = _getLogLevelValue(Logger::LEVEL_INFO);\n+\n+    void _updateCurrentPythonLogLevel() {\n+        PyGILState_STATE state = PyGILState_Ensure();\n+\n+        try {\n+            _currentPythonLogLevel = py::call_method<int>(_pyLogger, \"getEffectiveLevel\");\n+        } catch (py::error_already_set e) {\n+            PyErr_Print();\n+        }\n+\n+        PyGILState_Release(state);\n+    };\n+\n+    int _getLogLevelValue(Level level) {\n+        return 10 + (level * 10);\n+    }\n+\n+   public:\n+\n+    LoggerWrapper(const std::string &logger, PyObject* pyLogger) : _logger(logger) {\n+        _pyLogger = pyLogger;\n+        Py_XINCREF(_pyLogger);\n+\n+        _updateCurrentPythonLogLevel();\n+    }\n+\n+    LoggerWrapper(const LoggerWrapper& other) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3NjY2Mjg4", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-617666288", "createdAt": "2021-03-22T15:31:17Z", "commit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQxNTozMToxN1rOI7FY6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQxNTozMToxN1rOI7FY6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODgyNTE5NA==", "bodyText": "As above, but is the _logger member even used?  Maybe you should drop it.", "url": "https://github.com/apache/pulsar/pull/7713#discussion_r598825194", "createdAt": "2021-03-22T15:31:17Z", "author": {"login": "Bklyn"}, "path": "pulsar-client-cpp/python/src/config.cc", "diffHunk": "@@ -88,6 +88,107 @@ static ProducerConfiguration& ProducerConfiguration_setCryptoKeyReader(ProducerC\n     return conf;\n }\n \n+class LoggerWrapper: public Logger {\n+    std::string _logger;\n+    PyObject* _pyLogger;\n+    int _currentPythonLogLevel = _getLogLevelValue(Logger::LEVEL_INFO);\n+\n+    void _updateCurrentPythonLogLevel() {\n+        PyGILState_STATE state = PyGILState_Ensure();\n+\n+        try {\n+            _currentPythonLogLevel = py::call_method<int>(_pyLogger, \"getEffectiveLevel\");\n+        } catch (py::error_already_set e) {\n+            PyErr_Print();\n+        }\n+\n+        PyGILState_Release(state);\n+    };\n+\n+    int _getLogLevelValue(Level level) {\n+        return 10 + (level * 10);\n+    }\n+\n+   public:\n+\n+    LoggerWrapper(const std::string &logger, PyObject* pyLogger) : _logger(logger) {\n+        _pyLogger = pyLogger;\n+        Py_XINCREF(_pyLogger);\n+\n+        _updateCurrentPythonLogLevel();\n+    }\n+\n+    LoggerWrapper(const LoggerWrapper& other) {\n+        _pyLogger = other._pyLogger;\n+        Py_XINCREF(_pyLogger);\n+    }\n+\n+    LoggerWrapper& operator=(const LoggerWrapper& other) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE3NjY4OTM2", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-617668936", "createdAt": "2021-03-22T15:33:39Z", "commit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f49f2816da31d391d40b9b140ccb0016f3c557aa", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/f49f2816da31d391d40b9b140ccb0016f3c557aa", "committedDate": "2021-03-20T08:42:59Z", "message": "try to fix the license error"}, "afterCommit": {"oid": "7048f590f3e180ed2f5664921d6f335faf1afa38", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/7048f590f3e180ed2f5664921d6f335faf1afa38", "committedDate": "2021-03-23T10:04:36Z", "message": "remove redundant code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE4Njk1NTM4", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-618695538", "createdAt": "2021-03-23T14:56:16Z", "commit": {"oid": "7048f590f3e180ed2f5664921d6f335faf1afa38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe775afc650f79cd3a96424be0589edba3666c38", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/fe775afc650f79cd3a96424be0589edba3666c38", "committedDate": "2021-03-25T14:40:21Z", "message": "implement python logger wrapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838d6ae815b2117a0e28289e629f866fe3c6744d", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/838d6ae815b2117a0e28289e629f866fe3c6744d", "committedDate": "2021-03-25T14:40:21Z", "message": "rerun tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffe130bba8927454c67cc12480bfaabea7acb6bb", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/ffe130bba8927454c67cc12480bfaabea7acb6bb", "committedDate": "2021-03-25T14:40:21Z", "message": "revert accidental merge change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aa9c0279b3703904291f96ee53284008509d27f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/2aa9c0279b3703904291f96ee53284008509d27f", "committedDate": "2021-03-25T14:40:21Z", "message": "extract log level equation to a function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cb86276d5e1792eb68b24a3897233f9291baab5", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/4cb86276d5e1792eb68b24a3897233f9291baab5", "committedDate": "2021-03-25T14:40:21Z", "message": "add python logger test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20852310c62d14d1b792b9740cf1b7a7676bf01f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/20852310c62d14d1b792b9740cf1b7a7676bf01f", "committedDate": "2021-03-25T14:40:21Z", "message": "try to fix the license error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dd8f746c85189296cb202d3f64339f6099584e9", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/2dd8f746c85189296cb202d3f64339f6099584e9", "committedDate": "2021-03-25T14:40:21Z", "message": "update documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e82dab9c0ac4a569ff80db60949ca0f49d3057ce", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/e82dab9c0ac4a569ff80db60949ca0f49d3057ce", "committedDate": "2021-03-25T14:40:21Z", "message": "remove redundant code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7048f590f3e180ed2f5664921d6f335faf1afa38", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/7048f590f3e180ed2f5664921d6f335faf1afa38", "committedDate": "2021-03-23T10:04:36Z", "message": "remove redundant code"}, "afterCommit": {"oid": "e82dab9c0ac4a569ff80db60949ca0f49d3057ce", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/e82dab9c0ac4a569ff80db60949ca0f49d3057ce", "committedDate": "2021-03-25T14:40:21Z", "message": "remove redundant code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIxNjU2ODY4", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-621656868", "createdAt": "2021-03-25T23:29:40Z", "commit": {"oid": "e82dab9c0ac4a569ff80db60949ca0f49d3057ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjAyMjAx", "url": "https://github.com/apache/pulsar/pull/7713#pullrequestreview-622602201", "createdAt": "2021-03-27T00:49:00Z", "commit": {"oid": "e82dab9c0ac4a569ff80db60949ca0f49d3057ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3da66f1b6d229ac42316c47d1b7ad8dba2fd4a0a", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/3da66f1b6d229ac42316c47d1b7ad8dba2fd4a0a", "committedDate": "2021-05-19T06:34:00Z", "message": "Merge branch 'master' into feature/python_logger"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 456, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}