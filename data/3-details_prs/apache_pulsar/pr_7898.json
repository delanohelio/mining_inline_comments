{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjAyMjI0", "number": 7898, "title": "[Pulsar SQL] Fix Pulsar SQL CI test", "bodyText": "Motivation\nCurrently, the Pulsar SQL CI test is blocked.\nError Logs\n2020-08-24T13:40:30.6842242Z 2020-08-24T13:40:26.114Z\tERROR\tmain\tio.prestosql.server.PrestoServer\tjava.lang.IllegalArgumentException: java.lang.reflect.InvocationTargetException\n2020-08-24T13:40:30.6843112Z javax.validation.ValidationException: java.lang.IllegalArgumentException: java.lang.reflect.InvocationTargetException\n2020-08-24T13:40:30.6843378Z \tat org.apache.bval.jsr.descriptor.PropertyD.read(PropertyD.java:107)\n2020-08-24T13:40:30.6843612Z \tat org.apache.bval.jsr.job.ValidationJob$BeanFrame.lambda$propertyFrames$8(ValidationJob.java:299)\n2020-08-24T13:40:30.6843924Z \tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:269)\n2020-08-24T13:40:30.6844161Z \tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n2020-08-24T13:40:30.6844380Z \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n2020-08-24T13:40:30.6844600Z \tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n2020-08-24T13:40:30.6844821Z \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n2020-08-24T13:40:30.6845052Z \tat java.util.stream.Streams$StreamBuilderImpl.forEachRemaining(Streams.java:419)\n2020-08-24T13:40:30.6845274Z \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n2020-08-24T13:40:30.6845702Z \tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n2020-08-24T13:40:30.6845915Z \tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n2020-08-24T13:40:30.6846138Z \tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n2020-08-24T13:40:30.6846361Z \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n2020-08-24T13:40:30.6846578Z \tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)\n2020-08-24T13:40:30.6846797Z \tat java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)\n2020-08-24T13:40:30.6847018Z \tat java.util.Iterator.forEachRemaining(Iterator.java:116)\n2020-08-24T13:40:30.6847240Z \tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n2020-08-24T13:40:30.6847465Z \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n2020-08-24T13:40:30.6847684Z \tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n2020-08-24T13:40:30.6847911Z \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n2020-08-24T13:40:30.6848368Z \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n2020-08-24T13:40:30.6848593Z \tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)\n2020-08-24T13:40:30.6848930Z \tat org.apache.bval.jsr.job.ValidationJob$BeanFrame.propertyFrames(ValidationJob.java:300)\n2020-08-24T13:40:30.6849618Z \tat org.apache.bval.util.Lazy.get(Lazy.java:53)\n2020-08-24T13:40:30.6850070Z \tat org.apache.bval.jsr.job.ValidationJob$BeanFrame.lambda$process$1(ValidationJob.java:260)\n2020-08-24T13:40:30.6850329Z \tat org.apache.bval.jsr.job.ValidationJob.lambda$noViolations$2(ValidationJob.java:605)\n2020-08-24T13:40:30.6850764Z \tat org.apache.bval.jsr.groups.Group.applyTo(Group.java:181)\n2020-08-24T13:40:30.6850989Z \tat org.apache.bval.jsr.job.ValidationJob$BeanFrame.process(ValidationJob.java:258)\n2020-08-24T13:40:30.6851220Z \tat org.apache.bval.jsr.job.ValidationJob.getResults(ValidationJob.java:563)\n2020-08-24T13:40:30.6851428Z \tat org.apache.bval.jsr.ValidatorImpl.validate(ValidatorImpl.java:53)\n2020-08-24T13:40:30.6851677Z \tat io.airlift.configuration.ConfigurationFactory.validate(ConfigurationFactory.java:419)\n2020-08-24T13:40:30.6851905Z \tat io.airlift.configuration.ConfigurationFactory.build(ConfigurationFactory.java:392)\n2020-08-24T13:40:30.6852131Z \tat io.airlift.configuration.ConfigurationFactory.build(ConfigurationFactory.java:317)\n2020-08-24T13:40:30.6852354Z \tat io.airlift.configuration.ConfigurationProvider.get(ConfigurationProvider.java:67)\n2020-08-24T13:40:30.6852589Z \tat io.airlift.configuration.ConfigurationFactory.validateRegisteredConfigurationProvider(ConfigurationFactory.java:230)\n2020-08-24T13:40:30.6852825Z \tat io.airlift.bootstrap.Bootstrap.initialize(Bootstrap.java:225)\n2020-08-24T13:40:30.6853049Z \tat org.apache.pulsar.sql.presto.PulsarConnectorFactory.create(PulsarConnectorFactory.java:68)\n2020-08-24T13:40:30.6853278Z \tat io.prestosql.connector.ConnectorManager.createConnector(ConnectorManager.java:349)\n2020-08-24T13:40:30.6853504Z \tat io.prestosql.connector.ConnectorManager.createCatalog(ConnectorManager.java:208)\n2020-08-24T13:40:30.6853726Z \tat io.prestosql.connector.ConnectorManager.createCatalog(ConnectorManager.java:200)\n2020-08-24T13:40:30.6853949Z \tat io.prestosql.connector.ConnectorManager.createCatalog(ConnectorManager.java:186)\n2020-08-24T13:40:30.6854171Z \tat io.prestosql.metadata.StaticCatalogStore.loadCatalog(StaticCatalogStore.java:88)\n2020-08-24T13:40:30.6854576Z \tat io.prestosql.metadata.StaticCatalogStore.loadCatalogs(StaticCatalogStore.java:68)\n2020-08-24T13:40:30.6854804Z \tat io.prestosql.server.PrestoServer.run(PrestoServer.java:118)\n2020-08-24T13:40:30.6855027Z \tat io.prestosql.$gen.Presto_332____20200824_134014_1.run(Unknown Source)\n2020-08-24T13:40:30.6855256Z \tat io.prestosql.server.PrestoServer.main(PrestoServer.java:72)\n2020-08-24T13:40:30.6855600Z Caused by: java.lang.IllegalArgumentException: java.lang.reflect.InvocationTargetException\n2020-08-24T13:40:30.6855837Z \tat org.apache.bval.jsr.descriptor.PropertyD$ForMethod.getValue(PropertyD.java:83)\n2020-08-24T13:40:30.6856069Z \tat org.apache.bval.jsr.descriptor.PropertyD.read(PropertyD.java:102)\n2020-08-24T13:40:30.6856266Z \t... 45 more\n2020-08-24T13:40:30.6856480Z Caused by: java.lang.reflect.InvocationTargetException\n2020-08-24T13:40:30.6856699Z \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n2020-08-24T13:40:30.6856925Z \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n2020-08-24T13:40:30.6857160Z \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n2020-08-24T13:40:30.6857391Z \tat java.lang.reflect.Method.invoke(Method.java:498)\n2020-08-24T13:40:30.6857702Z \tat org.apache.bval.jsr.descriptor.PropertyD$ForMethod.getValue(PropertyD.java:81)\n2020-08-24T13:40:30.6857928Z \t... 46 more\n2020-08-24T13:40:30.6858997Z Caused by: java.lang.LinkageError: ClassCastException: attempting to castjar:file:/pulsar/lib/presto/lib/javax.ws.rs-api-2.1.jar!/javax/ws/rs/client/ClientBuilder.class to jar:file:/pulsar/lib/presto/plugin/pulsar-presto-connector/jakarta.ws.rs-api-2.1.6.jar!/javax/ws/rs/client/ClientBuilder.class\n2020-08-24T13:40:30.6859315Z \tat javax.ws.rs.client.ClientBuilder.newBuilder(ClientBuilder.java:78)\n2020-08-24T13:40:30.6859541Z \tat org.apache.pulsar.client.admin.PulsarAdmin.<init>(PulsarAdmin.java:174)\n2020-08-24T13:40:30.6859793Z \tat org.apache.pulsar.client.admin.internal.PulsarAdminBuilderImpl.build(PulsarAdminBuilderImpl.java:45)\n2020-08-24T13:40:30.6860028Z \tat org.apache.pulsar.sql.presto.PulsarConnectorConfig.getPulsarAdmin(PulsarConnectorConfig.java:399)\n2020-08-24T13:40:30.6860241Z \t... 51 more\n2020-08-24T13:40:30.6860385Z \n\nModifications\n\nBuild a new docker image before CI test to make sure the latest changes are covered.\nRemove the config distributed-joins-enabled in the $PULSAR_HOME/conf/presto/config.properties, this config was discarded in presto version 332.\nAdd the config -Dpresto-temporarily-allow-java8=true in $PULSAR_HOME/conf/presto/jvm.config, this config is needed if use Java 8 environment.\nThe ClientBuilder will be loaded by two different ClassLoaders, in the Pulsar SQL CI test the ClientBuilder will be created by unexpected ClassLoader, we need to specify the ClassLoader for it.\n\nVerifying this change\n\n Make sure that the change passes the CI checks.\n\nThis change is already covered by existing tests.\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (yes)\nThe schema: (no)\nThe default values of configurations: (yes)\nThe wire protocol: (no)\nThe rest endpoints: (no)\nThe admin cli options: (no)\nAnything that affects deployment: (yes)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-08-26T02:20:48Z", "url": "https://github.com/apache/pulsar/pull/7898", "merged": true, "mergeCommit": {"oid": "656b1306918478e70211ef396745d83569712d8d"}, "closed": true, "closedAt": "2020-08-27T05:02:06Z", "author": {"login": "gaoran10"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCiMmSgH2gAyNDczNjAyMjI0OjA0Yjg2MjZkMjk0ZmM0YTk5YmZlNDI5ODhiODNmZDFjYTEzYTY4MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdC4vcFgFqTQ3NjM3NzU1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04b8626d294fc4a99bfe42988b83fd1ca13a681a", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/04b8626d294fc4a99bfe42988b83fd1ca13a681a", "committedDate": "2020-08-26T02:15:37Z", "message": "Set ClassLoader for creating ClientBuilder if specify the ClassLoader."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ff874bb654de9405b44e4c15242c59ee0816b41", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/2ff874bb654de9405b44e4c15242c59ee0816b41", "committedDate": "2020-08-26T02:16:37Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b8048c82cd9f46a4888ab32a822d6fd5279ae90", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/6b8048c82cd9f46a4888ab32a822d6fd5279ae90", "committedDate": "2020-08-26T02:32:56Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa0abccf753c709ad33791f09696be9f97c52a41", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/aa0abccf753c709ad33791f09696be9f97c52a41", "committedDate": "2020-08-26T02:37:15Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77bb1e20921ff9807feaad65a00f9e2d4eb32a81", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/77bb1e20921ff9807feaad65a00f9e2d4eb32a81", "committedDate": "2020-08-26T03:59:33Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e98c186f6ed117110b3405663aa08a9d89cac9f", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/0e98c186f6ed117110b3405663aa08a9d89cac9f", "committedDate": "2020-08-26T05:22:19Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be5a5776d74a3fbb04859ae19f4afd10c04b8d83", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/be5a5776d74a3fbb04859ae19f4afd10c04b8d83", "committedDate": "2020-08-26T08:03:17Z", "message": "the `joda-time` is not included in the `io.airlift:bootstrap:0.199`, so we need to add it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c6880b90ba390edd9d663ac8b26ad33b760ba2e", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/8c6880b90ba390edd9d663ac8b26ad33b760ba2e", "committedDate": "2020-08-26T10:08:28Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "642c4d9df823b56316852b0ac13e2bcbe203923a", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/642c4d9df823b56316852b0ac13e2bcbe203923a", "committedDate": "2020-08-26T10:52:59Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODQxNDE0", "url": "https://github.com/apache/pulsar/pull/7898#pullrequestreview-475841414", "createdAt": "2020-08-26T20:38:56Z", "commit": {"oid": "642c4d9df823b56316852b0ac13e2bcbe203923a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDozODo1NlrOHHc4Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDozODo1NlrOHHc4Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU3NTIxNA==", "bodyText": "I don't think this is the best way to get the logs of containers as they will be sprinkled across the whole test log.  We should just upload relevant log artifacts.  All the containers already dump its logs in compressed format (please reference: https://github.com/apache/pulsar/blob/master/tests/integration/src/test/java/org/apache/pulsar/tests/integration/utils/DockerUtils.java#L117) .  We just need to upload the logs as artifacts at when the test is done running so that users can download all the logs to view/debug.  This is what was done when we were on Jenkins.", "url": "https://github.com/apache/pulsar/pull/7898#discussion_r477575214", "createdAt": "2020-08-26T20:38:56Z", "author": {"login": "jerrypeng"}, "path": "tests/integration/src/test/java/org/apache/pulsar/tests/integration/containers/PulsarContainer.java", "diffHunk": "@@ -146,6 +146,26 @@ public void start() {\n \n         beforeStart();\n         super.start();\n+        if (this.getContainerName().contains(\"presto-worker\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "642c4d9df823b56316852b0ac13e2bcbe203923a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MTMyNDcw", "url": "https://github.com/apache/pulsar/pull/7898#pullrequestreview-476132470", "createdAt": "2020-08-26T23:42:53Z", "commit": {"oid": "642c4d9df823b56316852b0ac13e2bcbe203923a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f75a4e362932db8334289d11bb5ae15deb513d7", "author": {"user": {"login": "gaoran10", "name": "ran"}}, "url": "https://github.com/apache/pulsar/commit/8f75a4e362932db8334289d11bb5ae15deb513d7", "committedDate": "2020-08-27T02:30:45Z", "message": "remove test log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MzQ5MDA2", "url": "https://github.com/apache/pulsar/pull/7898#pullrequestreview-476349006", "createdAt": "2020-08-27T02:49:36Z", "commit": {"oid": "8f75a4e362932db8334289d11bb5ae15deb513d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2Mzc3NTU3", "url": "https://github.com/apache/pulsar/pull/7898#pullrequestreview-476377557", "createdAt": "2020-08-27T04:31:35Z", "commit": {"oid": "8f75a4e362932db8334289d11bb5ae15deb513d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 348, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}