{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NjMzOTEw", "number": 9039, "title": "[Feature] Introduce continuous offset for pulsar", "bodyText": "Fixes #9038\nMotivation\nAs described in PIP-70.\nOne of the use case for Broker entry metadata is  providing continuous message sequence-Id for messages in one topic-partition which is useful for Protocol Hanlder like KOP.\nThis PR enable Pulsar to support continuous offset for message based on Broker entry metadata.\nModifications\nIntroduce a new field for broker entry metadta named offset;\nIntroduce a new interceptor type ManagedLedgerInterceptor which intercept entry in ManagedLedger\uff1b\nEach partition will be assigned a ManagedLedgerInterceptor when ManagedLedger created;\nEach Entry will be intercept for adding a  monotone increasing offset in Broker entry metadata and the offet is added by batchSize of entry;\nSupport find position by a given offset.", "createdAt": "2020-12-23T07:59:21Z", "url": "https://github.com/apache/pulsar/pull/9039", "merged": true, "mergeCommit": {"oid": "d85a5e23c408eb3243c434909588324455aa94a5"}, "closed": true, "closedAt": "2020-12-24T12:52:41Z", "author": {"login": "aloyszhang"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoSgABgH2gAyNTQ0NjMzOTEwOjE5MThlMDBlYWJmNmRhYTZhOGE0OGE2NTE0NjViODY4ZWE5MWIzMzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpTOmAAFqTU1ODQ5NTU3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1918e00eabf6daa6a8a48a651465b868ea91b331", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/1918e00eabf6daa6a8a48a651465b868ea91b331", "committedDate": "2020-12-21T09:27:27Z", "message": "add offset for broker entry metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74a9a083cf4bc59fcd4ab498f9e2b395c50bffdb", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/74a9a083cf4bc59fcd4ab498f9e2b395c50bffdb", "committedDate": "2020-12-22T02:50:54Z", "message": "add managedledger interceptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c38bba15f646654783fd7a27c8bf0ec498cb2384", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/c38bba15f646654783fd7a27c8bf0ec498cb2384", "committedDate": "2020-12-22T03:09:01Z", "message": "initialize intercptor for ML"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "483cee9faa435addb5c127b2996f73bb4e4e58da", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/483cee9faa435addb5c127b2996f73bb4e4e58da", "committedDate": "2020-12-22T03:37:00Z", "message": "interceptor entry before add to bookie to generator offset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01da511fbfefecf2411d9038ae98e3dab4b6e569", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/01da511fbfefecf2411d9038ae98e3dab4b6e569", "committedDate": "2020-12-22T08:50:02Z", "message": "add asyncFindPosition method for ManagedLedger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d1dfb397de9e156dec579d4aba8ad57b3bfa86f", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/4d1dfb397de9e156dec579d4aba8ad57b3bfa86f", "committedDate": "2020-12-22T11:15:01Z", "message": "support append offset in  managedInterceptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8cbd22610081e0683896641c6627971589c4907", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/d8cbd22610081e0683896641c6627971589c4907", "committedDate": "2020-12-22T11:29:15Z", "message": "interceptor pending write request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5137d6f42409a7943d8986ee0fb3c817a6ae8f01", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/5137d6f42409a7943d8986ee0fb3c817a6ae8f01", "committedDate": "2020-12-22T11:36:19Z", "message": "add offet to ManagedLedgerInfo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4205436ad809dcee2e19539744e2019f63ef43b1", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/4205436ad809dcee2e19539744e2019f63ef43b1", "committedDate": "2020-12-22T11:59:12Z", "message": "add test for offset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/a52038b0eaf234175b9803e4f7c63e51eaecc2c4", "committedDate": "2020-12-22T13:06:04Z", "message": "add test for ManagedLedgerInterceptor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MTc3NDI0", "url": "https://github.com/apache/pulsar/pull/9039#pullrequestreview-558177424", "createdAt": "2020-12-23T19:00:07Z", "commit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOTowMDowN1rOIKwB6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDo0NToyMlrOIK02Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0MzU5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CompletableFuture<PositionImpl> asyncFindPosition(com.google.common.base.Predicate<Entry> predicate);\n          \n          \n            \n                CompletableFuture<Position> asyncFindPosition(com.google.common.base.Predicate<Entry> predicate);", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548143593", "createdAt": "2020-12-23T19:00:07Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedLedger.java", "diffHunk": "@@ -520,4 +587,14 @@ void asyncSetProperties(Map<String, String> properties, final AsyncCallbacks.Upd\n      * Roll current ledger if it is full\n      */\n     void rollCurrentLedgerIfFull();\n+\n+    /**\n+     * Find position by sequenceId.\n+     * */\n+    CompletableFuture<PositionImpl> asyncFindPosition(com.google.common.base.Predicate<Entry> predicate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0NDA0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CompletableFuture<PositionImpl> asyncFindPosition(com.google.common.base.Predicate<Entry> predicate);\n          \n          \n            \n                CompletableFuture<PositionImpl> asyncFindPosition(com.google.common.base.Predicate<Entry> predicate);\n          \n      \n    \n    \n  \n\nCan we use the java.util.Predicate?", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548144042", "createdAt": "2020-12-23T19:00:42Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedLedger.java", "diffHunk": "@@ -520,4 +587,14 @@ void asyncSetProperties(Map<String, String> properties, final AsyncCallbacks.Upd\n      * Roll current ledger if it is full\n      */\n     void rollCurrentLedgerIfFull();\n+\n+    /**\n+     * Find position by sequenceId.\n+     * */\n+    CompletableFuture<PositionImpl> asyncFindPosition(com.google.common.base.Predicate<Entry> predicate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIxMTA3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return addEntry(data, batchSize,0, data.length);\n          \n          \n            \n                    return addEntry(data, batchSize, 0, data.length);", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548211077", "createdAt": "2020-12-23T20:30:25Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -550,6 +566,11 @@ public Position addEntry(byte[] data) throws InterruptedException, ManagedLedger\n         return addEntry(data, 0, data.length);\n     }\n \n+    @Override\n+    public Position addEntry(byte[] data, int batchSize) throws InterruptedException, ManagedLedgerException {\n+        return addEntry(data, batchSize,0, data.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIxMjU4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.error(\"[{}] Failed to interceptor entry before add to bookie.\", name, e);\n          \n          \n            \n                        log.error(\"[{}] Failed to intercept adding an entry to bookie.\", name, e);", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548212589", "createdAt": "2020-12-23T20:32:29Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -672,8 +747,27 @@ private synchronized void internalAsyncAddEntry(OpAddEntry addOperation) {\n                 addOperation.setCloseWhenDone(true);\n                 STATE_UPDATER.set(this, State.ClosingLedger);\n             }\n+            // interceptor entry before add to bookie\n+            if (beforeAddEntry(addOperation)) {\n+                addOperation.initiate();\n+            }\n+        }\n+    }\n \n-            addOperation.initiate();\n+    private boolean beforeAddEntry(OpAddEntry addOperation) {\n+        // if no interceptor, just return true to make sure addOperation will be initiate()\n+        if (managedLedgerInterceptor == null) {\n+            return true;\n+        }\n+        try {\n+            managedLedgerInterceptor.beforeAddEntry(addOperation, addOperation.getBatchSize());\n+            return true;\n+        } catch (Exception e) {\n+            addOperation.failed(\n+                    new ManagedLedgerInterceptException(\"Interceptor managed ledger before add to bookie failed.\"));\n+            ReferenceCountUtil.release(addOperation.data);\n+            log.error(\"[{}] Failed to interceptor entry before add to bookie.\", name, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 183}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIxNDI0NQ==", "bodyText": "Can you add the interface annotations to the new interface? See https://github.com/apache/pulsar/wiki/PIP-72%3A-Introduce-Pulsar-Interface-Taxonomy%3A-Audience-and-Stability-Classification", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548214245", "createdAt": "2020-12-23T20:34:37Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/interceptor/ManagedLedgerInterceptor.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.bookkeeper.mledger.interceptor;\n+\n+import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.bookkeeper.mledger.impl.OpAddEntry;\n+\n+import java.util.Map;\n+\n+/**\n+ * Interceptor for ManagedLedger.\n+ * */\n+public interface ManagedLedgerInterceptor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIxNDQxMQ==", "bodyText": "Can you add javadoc to the methods?", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548214411", "createdAt": "2020-12-23T20:34:49Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/interceptor/ManagedLedgerInterceptor.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.bookkeeper.mledger.interceptor;\n+\n+import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.bookkeeper.mledger.impl.OpAddEntry;\n+\n+import java.util.Map;\n+\n+/**\n+ * Interceptor for ManagedLedger.\n+ * */\n+public interface ManagedLedgerInterceptor {\n+    OpAddEntry beforeAddEntry(OpAddEntry op, int batchSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIxNjU1Mg==", "bodyText": "kafka offset is not a very good term to be used for describing the index of a message within a log stream. Instead, I would suggest calling it index or logIndex similar to the term used in the Raft algorithm (https://cs.stackexchange.com/questions/97542/raft-algorithm-whats-the-meaning-of-concept-index).", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548216552", "createdAt": "2020-12-23T20:37:28Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/intercept/ManagedLedgerInterceptorImpl.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.intercept;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.bookkeeper.client.api.LedgerEntries;\n+import org.apache.bookkeeper.client.api.LedgerEntry;\n+import org.apache.bookkeeper.mledger.impl.OpAddEntry;\n+import org.apache.bookkeeper.mledger.interceptor.ManagedLedgerInterceptor;\n+import org.apache.pulsar.common.api.proto.PulsarApi;\n+import org.apache.pulsar.common.intercept.AppendOffsetMetadataInterceptor;\n+import org.apache.pulsar.common.intercept.BrokerEntryMetadataInterceptor;\n+import org.apache.pulsar.common.protocol.Commands;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class ManagedLedgerInterceptorImpl implements ManagedLedgerInterceptor {\n+    private static final Logger log = LoggerFactory.getLogger(ManagedLedgerInterceptorImpl.class);\n+    private static final String OFFSET = \"offset\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODIyMjQ5OQ==", "bodyText": "How is the batchSize passed to asyncAddEntry? I failed to see how did you do that in this pull request.\nAt the same time, I think batchSize is not a good term. If I understand this correctly, it should be numberOfMessages, correct?", "url": "https://github.com/apache/pulsar/pull/9039#discussion_r548222499", "createdAt": "2020-12-23T20:45:22Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -357,10 +357,7 @@ public void publishMessage(ByteBuf headersAndPayload, PublishContext publishCont\n                 messageDeduplication.isDuplicate(publishContext, headersAndPayload);\n         switch (status) {\n             case NotDup:\n-                // intercept headersAndPayload and add entry metadata\n-                if (appendBrokerEntryMetadata(headersAndPayload, publishContext)) {\n-                    ledger.asyncAddEntry(headersAndPayload, this, publishContext);\n-                }\n+                ledger.asyncAddEntry(headersAndPayload, this, publishContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52038b0eaf234175b9803e4f7c63e51eaecc2c4"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b98e9f5cacd873802ac1df30e0ae2398fd0e8ee", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/3b98e9f5cacd873802ac1df30e0ae2398fd0e8ee", "committedDate": "2020-12-24T02:09:47Z", "message": "apply comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4fd5c813bb0b621c70f0877ac6dcf932335ffdd", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/d4fd5c813bb0b621c70f0877ac6dcf932335ffdd", "committedDate": "2020-12-24T03:20:38Z", "message": "fix send error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4Mzc4ODQ4", "url": "https://github.com/apache/pulsar/pull/9039#pullrequestreview-558378848", "createdAt": "2020-12-24T07:05:16Z", "commit": {"oid": "d4fd5c813bb0b621c70f0877ac6dcf932335ffdd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NDk1NTc5", "url": "https://github.com/apache/pulsar/pull/9039#pullrequestreview-558495579", "createdAt": "2020-12-24T12:52:16Z", "commit": {"oid": "d4fd5c813bb0b621c70f0877ac6dcf932335ffdd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 825, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}