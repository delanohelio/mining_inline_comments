{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTIzMzgw", "number": 6684, "title": "Support function with format: Function<I, CompletableFuture<O>>", "bodyText": "Fixes #6519\nMotivation\nCurrently, Pulsar Functions not support Async mode, e.g. user passed in a Function in format :\nFunction<I, CompletableFuture<O>>\n\nThis kind of function is useful if the function might use RPCs to call external systems.\ne.g.\npublic class AsyncFunction implements Function<String, CompletableFuture<O>> {\n    CompletableFuture<O> apply (String input) {\n        CompletableFuture future = new CompletableFuture();\n        ...function compute...\n        future.whenComplete(() -> {\n            ...  call external system  ...\n        });\n        return future;\n    }\nModifications\n\nadd support for Async Functions support.\n\nVerifying this change\ncurrent ut passed.", "createdAt": "2020-04-07T08:37:49Z", "url": "https://github.com/apache/pulsar/pull/6684", "merged": true, "mergeCommit": {"oid": "7cd28b9d5cc862fe239f5e8fa1ca616237764607"}, "closed": true, "closedAt": "2020-05-08T03:04:10Z", "author": {"login": "jiazhai"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVWkxVAFqTM4OTMyNzYzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABce1Y1JAFqTQwNzEzNzk1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzI3NjMz", "url": "https://github.com/apache/pulsar/pull/6684#pullrequestreview-389327633", "createdAt": "2020-04-07T17:16:34Z", "commit": {"oid": "7966d4609897fa4877b19aa15bdf1c06de37465a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoxNjozNFrOGCN7pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzoxNjozNFrOGCN7pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3ODU5Nw==", "bodyText": "This is not applying any backpressure on the consumer. If the function doesn't have a mechanism to self-throttle, it will just blow up the memory.", "url": "https://github.com/apache/pulsar/pull/6684#discussion_r404978597", "createdAt": "2020-04-07T17:16:34Z", "author": {"login": "merlimat"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstance.java", "diffHunk": "@@ -52,23 +53,49 @@ public JavaInstance(ContextImpl contextImpl, Object userClassObject) {\n         }\n     }\n \n-    public JavaExecutionResult handleMessage(Record<?> record, Object input) {\n+    public CompletableFuture<JavaExecutionResult> handleMessage(Record<?> record, Object input) {\n         if (context != null) {\n             context.setCurrentMessageContext(record);\n         }\n+\n+        final CompletableFuture<JavaExecutionResult> future = new CompletableFuture<>();\n         JavaExecutionResult executionResult = new JavaExecutionResult();\n+\n         try {\n             Object output;\n             if (function != null) {\n                 output = function.process(input, context);\n             } else {\n                 output = javaUtilFunction.apply(input);\n             }\n-            executionResult.setResult(output);\n+\n+            if (output instanceof CompletableFuture) {\n+                // Function is in format: Function<I, CompletableFuture<O>>\n+                ((CompletableFuture) output).whenComplete((obj, throwable) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7966d4609897fa4877b19aa15bdf1c06de37465a"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cd02634eaad0c8fc5c96ff84a9855267c06a2bc", "author": {"user": {"login": "jiazhai", "name": "Jia Zhai"}}, "url": "https://github.com/apache/pulsar/commit/2cd02634eaad0c8fc5c96ff84a9855267c06a2bc", "committedDate": "2020-05-06T12:58:10Z", "message": "support func: Function<I, CompletableFuture<O>>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae811a60514bd46df4cb6038adec4981fdaf9c33", "author": {"user": {"login": "jiazhai", "name": "Jia Zhai"}}, "url": "https://github.com/apache/pulsar/commit/ae811a60514bd46df4cb6038adec4981fdaf9c33", "committedDate": "2020-05-06T12:58:10Z", "message": "add 2 examples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbed6065b1434f96498d80696b622fc1faec5388", "author": {"user": {"login": "jiazhai", "name": "Jia Zhai"}}, "url": "https://github.com/apache/pulsar/commit/cbed6065b1434f96498d80696b622fc1faec5388", "committedDate": "2020-05-06T16:14:41Z", "message": "add limit to the max outstanding items"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7966d4609897fa4877b19aa15bdf1c06de37465a", "author": {"user": {"login": "jiazhai", "name": "Jia Zhai"}}, "url": "https://github.com/apache/pulsar/commit/7966d4609897fa4877b19aa15bdf1c06de37465a", "committedDate": "2020-04-07T08:58:27Z", "message": "add 2 examples"}, "afterCommit": {"oid": "cbed6065b1434f96498d80696b622fc1faec5388", "author": {"user": {"login": "jiazhai", "name": "Jia Zhai"}}, "url": "https://github.com/apache/pulsar/commit/cbed6065b1434f96498d80696b622fc1faec5388", "committedDate": "2020-05-06T16:14:41Z", "message": "add limit to the max outstanding items"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTM3OTU2", "url": "https://github.com/apache/pulsar/pull/6684#pullrequestreview-407137956", "createdAt": "2020-05-07T04:15:47Z", "commit": {"oid": "cbed6065b1434f96498d80696b622fc1faec5388"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDoxNTo0N1rOGRtxbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDoxNTo0N1rOGRtxbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyODkxMQ==", "bodyText": "Looks the blocking queue can be simplified by a semaphore", "url": "https://github.com/apache/pulsar/pull/6684#discussion_r421228911", "createdAt": "2020-05-07T04:15:47Z", "author": {"login": "codelipenghui"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstance.java", "diffHunk": "@@ -40,9 +45,18 @@\n     private Function function;\n     private java.util.function.Function javaUtilFunction;\n \n-    public JavaInstance(ContextImpl contextImpl, Object userClassObject) {\n+    // for Async function max out standing items\n+    private final InstanceConfig instanceConfig;\n+    private final Executor executor;\n+    @Getter\n+    private final LinkedBlockingQueue<CompletableFuture<Void>> pendingAsyncRequests;\n+\n+    public JavaInstance(ContextImpl contextImpl, Object userClassObject, InstanceConfig instanceConfig) {\n \n         this.context = contextImpl;\n+        this.instanceConfig = instanceConfig;\n+        this.executor = Executors.newSingleThreadExecutor();\n+        this.pendingAsyncRequests = new LinkedBlockingQueue<>(this.instanceConfig.getMaxPendingAsyncRequests());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbed6065b1434f96498d80696b622fc1faec5388"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4903, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}