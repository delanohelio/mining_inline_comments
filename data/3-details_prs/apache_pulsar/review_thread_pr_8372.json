{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5ODQwMjg2", "number": 8372, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoxMjoxOVrOE3mWOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjo0NDo0OFrOE39niQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzM1NDE2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/ProtobufNativeSchemaCompatibilityCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoxMjoxOVrOHxCnSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNzowNDoxNlrOHyfbqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4NTA5OQ==", "bodyText": "why there is \"RootRoot\" in the method name CheckRootRootMessageChange?\nAlso, we need to make the first character low case.", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r521185099", "createdAt": "2020-11-11T08:12:19Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/ProtobufNativeSchemaCompatibilityCheck.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.schema;\n+\n+import org.apache.pulsar.broker.service.schema.exceptions.IncompatibleSchemaException;\n+import org.apache.pulsar.client.impl.schema.ProtobufNativeSchemaUtils;\n+import org.apache.pulsar.common.policies.data.SchemaCompatibilityStrategy;\n+import org.apache.pulsar.common.protocol.schema.SchemaData;\n+import org.apache.pulsar.common.schema.SchemaType;\n+\n+import static com.google.protobuf.Descriptors.Descriptor;\n+\n+/**\n+ * The {@link SchemaCompatibilityCheck} implementation for {@link SchemaType#PROTOBUF_NATIVE}.\n+ */\n+public class ProtobufNativeSchemaCompatibilityCheck implements SchemaCompatibilityCheck {\n+\n+    @Override\n+    public SchemaType getSchemaType() {\n+        return SchemaType.PROTOBUF_NATIVE;\n+    }\n+\n+    @Override\n+    public void checkCompatible(SchemaData from, SchemaData to, SchemaCompatibilityStrategy strategy) throws IncompatibleSchemaException {\n+        Descriptor fromDescriptor = ProtobufNativeSchemaUtils.deserialize(from.getData());\n+        Descriptor toDescriptor = ProtobufNativeSchemaUtils.deserialize(to.getData());\n+        switch (strategy) {\n+            case BACKWARD_TRANSITIVE:\n+            case BACKWARD:\n+            case FORWARD_TRANSITIVE:\n+            case FORWARD:\n+            case FULL_TRANSITIVE:\n+            case FULL:\n+                CheckRootRootMessageChange(fromDescriptor, toDescriptor, strategy);\n+                return;\n+            case ALWAYS_COMPATIBLE:\n+                return;\n+            default:\n+                throw new IncompatibleSchemaException(\"Unknown SchemaCompatibilityStrategy\");\n+        }\n+    }\n+\n+    @Override\n+    public void checkCompatible(Iterable<SchemaData> from, SchemaData to, SchemaCompatibilityStrategy strategy) throws IncompatibleSchemaException {\n+        for (SchemaData schemaData : from) {\n+            checkCompatible(schemaData, to, strategy);\n+        }\n+    }\n+\n+    private void CheckRootRootMessageChange(Descriptor fromDescriptor, Descriptor toDescriptor, SchemaCompatibilityStrategy strategy) throws IncompatibleSchemaException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjcwNTgzMw==", "bodyText": "@sijie thanks for the reminders , it due to my carelessness . this shoud be CheckRootMessageChange , I may need recheck my code details carefully", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r522705833", "createdAt": "2020-11-13T07:04:16Z", "author": {"login": "hnail"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/ProtobufNativeSchemaCompatibilityCheck.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.schema;\n+\n+import org.apache.pulsar.broker.service.schema.exceptions.IncompatibleSchemaException;\n+import org.apache.pulsar.client.impl.schema.ProtobufNativeSchemaUtils;\n+import org.apache.pulsar.common.policies.data.SchemaCompatibilityStrategy;\n+import org.apache.pulsar.common.protocol.schema.SchemaData;\n+import org.apache.pulsar.common.schema.SchemaType;\n+\n+import static com.google.protobuf.Descriptors.Descriptor;\n+\n+/**\n+ * The {@link SchemaCompatibilityCheck} implementation for {@link SchemaType#PROTOBUF_NATIVE}.\n+ */\n+public class ProtobufNativeSchemaCompatibilityCheck implements SchemaCompatibilityCheck {\n+\n+    @Override\n+    public SchemaType getSchemaType() {\n+        return SchemaType.PROTOBUF_NATIVE;\n+    }\n+\n+    @Override\n+    public void checkCompatible(SchemaData from, SchemaData to, SchemaCompatibilityStrategy strategy) throws IncompatibleSchemaException {\n+        Descriptor fromDescriptor = ProtobufNativeSchemaUtils.deserialize(from.getData());\n+        Descriptor toDescriptor = ProtobufNativeSchemaUtils.deserialize(to.getData());\n+        switch (strategy) {\n+            case BACKWARD_TRANSITIVE:\n+            case BACKWARD:\n+            case FORWARD_TRANSITIVE:\n+            case FORWARD:\n+            case FULL_TRANSITIVE:\n+            case FULL:\n+                CheckRootRootMessageChange(fromDescriptor, toDescriptor, strategy);\n+                return;\n+            case ALWAYS_COMPATIBLE:\n+                return;\n+            default:\n+                throw new IncompatibleSchemaException(\"Unknown SchemaCompatibilityStrategy\");\n+        }\n+    }\n+\n+    @Override\n+    public void checkCompatible(Iterable<SchemaData> from, SchemaData to, SchemaCompatibilityStrategy strategy) throws IncompatibleSchemaException {\n+        for (SchemaData schemaData : from) {\n+            checkCompatible(schemaData, to, strategy);\n+        }\n+    }\n+\n+    private void CheckRootRootMessageChange(Descriptor fromDescriptor, Descriptor toDescriptor, SchemaCompatibilityStrategy strategy) throws IncompatibleSchemaException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4NTA5OQ=="}, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzM1ODc3OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/validator/ProtobufNativeSchemaDataValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoxMzo1NFrOHxCqEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoxMzo1NFrOHxCqEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4NTgxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new InvalidSchemaDataException(\"deserialize  ProtobufNative Schema failed\", e);\n          \n          \n            \n                        throw new InvalidSchemaDataException(\"deserialize ProtobufNative Schema failed\", e);", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r521185810", "createdAt": "2020-11-11T08:13:54Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/validator/ProtobufNativeSchemaDataValidator.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.schema.validator;\n+\n+import com.google.protobuf.Descriptors;\n+import org.apache.pulsar.broker.service.schema.exceptions.InvalidSchemaDataException;\n+import org.apache.pulsar.client.impl.schema.ProtobufNativeSchemaUtils;\n+import org.apache.pulsar.common.protocol.schema.SchemaData;\n+\n+public class ProtobufNativeSchemaDataValidator implements SchemaDataValidator {\n+\n+    @Override\n+    public void validate(SchemaData schemaData) throws InvalidSchemaDataException {\n+        Descriptors.Descriptor descriptor;\n+        try {\n+            descriptor = ProtobufNativeSchemaUtils.deserialize(schemaData.getData());\n+        } catch (Exception e) {\n+            throw new InvalidSchemaDataException(\"deserialize  ProtobufNative Schema failed\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzM1OTkyOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/validator/ProtobufNativeSchemaDataValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoxNDoxOFrOHxCq3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODoxNDoxOFrOHxCq3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4NjAxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new InvalidSchemaDataException(\"protobuf root message Descriptor is null , please recheck rootMessageTypeName or rootFileDescriptorName conf. \");\n          \n          \n            \n                        throw new InvalidSchemaDataException(\"protobuf root message descriptor is null , please recheck rootMessageTypeName or rootFileDescriptorName conf. \");", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r521186012", "createdAt": "2020-11-11T08:14:18Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/validator/ProtobufNativeSchemaDataValidator.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service.schema.validator;\n+\n+import com.google.protobuf.Descriptors;\n+import org.apache.pulsar.broker.service.schema.exceptions.InvalidSchemaDataException;\n+import org.apache.pulsar.client.impl.schema.ProtobufNativeSchemaUtils;\n+import org.apache.pulsar.common.protocol.schema.SchemaData;\n+\n+public class ProtobufNativeSchemaDataValidator implements SchemaDataValidator {\n+\n+    @Override\n+    public void validate(SchemaData schemaData) throws InvalidSchemaDataException {\n+        Descriptors.Descriptor descriptor;\n+        try {\n+            descriptor = ProtobufNativeSchemaUtils.deserialize(schemaData.getData());\n+        } catch (Exception e) {\n+            throw new InvalidSchemaDataException(\"deserialize  ProtobufNative Schema failed\", e);\n+        }\n+        if (descriptor == null) {\n+            throw new InvalidSchemaDataException(\"protobuf root message Descriptor is null , please recheck rootMessageTypeName or rootFileDescriptorName conf. \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODUwMzI5OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/ProtobufNativeSchemaUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzo0MDoxNFrOHxNj3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTowMTozMFrOHymCzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NDQ0Ng==", "bodyText": "Avoid use import.* here", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r521364446", "createdAt": "2020-11-11T13:40:14Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/ProtobufNativeSchemaUtils.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.impl.schema;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.pulsar.client.api.SchemaSerializationException;\n+import org.apache.pulsar.common.protocol.schema.ProtobufNativeSchemaData;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.google.protobuf.DescriptorProtos.FileDescriptorProto;\n+import static com.google.protobuf.DescriptorProtos.FileDescriptorSet;\n+import static com.google.protobuf.Descriptors.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgxNDE1Nw==", "bodyText": "@codelipenghui thanks for review , fixed as Suggestion\u3002", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r522814157", "createdAt": "2020-11-13T09:01:30Z", "author": {"login": "hnail"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/ProtobufNativeSchemaUtils.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.impl.schema;\n+\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.pulsar.client.api.SchemaSerializationException;\n+import org.apache.pulsar.common.protocol.schema.ProtobufNativeSchemaData;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.google.protobuf.DescriptorProtos.FileDescriptorProto;\n+import static com.google.protobuf.DescriptorProtos.FileDescriptorSet;\n+import static com.google.protobuf.Descriptors.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NDQ0Ng=="}, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODUwODQxOnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/generic/GenericProtobufNativeSchema.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzo0MToyNlrOHxNm1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzo0MToyNlrOHxNm1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NTIwNw==", "bodyText": "Avoid use import.* here", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r521365207", "createdAt": "2020-11-11T13:41:26Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/generic/GenericProtobufNativeSchema.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.impl.schema.generic;\n+\n+import com.google.protobuf.Descriptors;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.pulsar.client.api.schema.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTE2NjIzOnYy", "diffSide": "RIGHT", "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjo0NDozMVrOHxnFMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjo0NDozMVrOHxnFMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc4MjU3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static <T extends com.google.protobuf.GeneratedMessageV3> Schema<T> PROTOBUFNATIVE(Class<T> clazz) {\n          \n          \n            \n                static <T extends com.google.protobuf.GeneratedMessageV3> Schema<T> PROTOBUF_NATIVE(Class<T> clazz) {", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r521782576", "createdAt": "2020-11-12T02:44:31Z", "author": {"login": "congbobo184"}, "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "diffHunk": "@@ -251,6 +251,27 @@ default void configureSchemaInfo(String topic, String componentName,\n         return DefaultImplementation.newProtobufSchema(schemaDefinition);\n     }\n \n+    /**\n+     * Create a Protobuf-Native schema type by extracting the fields of the specified class.\n+     *\n+     * @param clazz the Protobuf generated class to be used to extract the schema\n+     * @return a Schema instance\n+     */\n+    static <T extends com.google.protobuf.GeneratedMessageV3> Schema<T> PROTOBUFNATIVE(Class<T> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTE2NjgxOnYy", "diffSide": "RIGHT", "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjo0NDo0OFrOHxnFhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjo0NDo0OFrOHxnFhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc4MjY2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static <T extends com.google.protobuf.GeneratedMessageV3> Schema<T> PROTOBUFNATIVE(\n          \n          \n            \n                static <T extends com.google.protobuf.GeneratedMessageV3> Schema<T> PROTOBUF_NATIVE(", "url": "https://github.com/apache/pulsar/pull/8372#discussion_r521782662", "createdAt": "2020-11-12T02:44:48Z", "author": {"login": "congbobo184"}, "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "diffHunk": "@@ -251,6 +251,27 @@ default void configureSchemaInfo(String topic, String componentName,\n         return DefaultImplementation.newProtobufSchema(schemaDefinition);\n     }\n \n+    /**\n+     * Create a Protobuf-Native schema type by extracting the fields of the specified class.\n+     *\n+     * @param clazz the Protobuf generated class to be used to extract the schema\n+     * @return a Schema instance\n+     */\n+    static <T extends com.google.protobuf.GeneratedMessageV3> Schema<T> PROTOBUFNATIVE(Class<T> clazz) {\n+        return DefaultImplementation.newProtobufNativeSchema(SchemaDefinition.builder().withPojo(clazz).build());\n+    }\n+\n+    /**\n+     * Create a Protobuf-Native schema type with schema definition.\n+     *\n+     * @param schemaDefinition schemaDefinition the definition of the schema\n+     * @return a Schema instance\n+     */\n+    static <T extends com.google.protobuf.GeneratedMessageV3> Schema<T> PROTOBUFNATIVE(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f98f5977ad040743e9d9a9838a0f6d090594ad5"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2977, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}