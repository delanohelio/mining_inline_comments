{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MjQyODgy", "number": 8432, "title": "[Issue 8382][Pulsar Function] Enable e2e encryption for Pulsar Function", "bodyText": "(If this PR fixes a github issue, please add Fixes #<xyz>.)\nFixes #8382\nMotivation\nAdd the e2e encryption support for Pulsar Functions\nModifications\n\nAdd CryptoConfig the encapsulate all the crypto related configs set by user\nAdd CryptoSpec to Function protobuf to container crypto information internally\nAdd CryptoUtils to help create instance, convert between CryptoConfig and CryptoSpec\nAdd crypto validation method in ValidatorUtils to ensure the provided CryptoKeyReader Class has a ctor with Map arg\nUpdated the cli to allow user set crypto for consumer/producer when submitting the function\nUpdate PulsarSource, PulsarSink to use the crypto config if provided\n\nVerifying this change\n\n Make sure that the change passes the CI checks.\n\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end deployment with large payloads (10MB)\nExtended integration test for recovery after broker failure\n\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): Added pulsar-client-messagecrypto-bc into puslar-function instance\nThe admin cli options: Added --producer-config to allow setting crypto related configs.\n\nDocumentation\n\nDoes this pull request introduce a new feature? Yes\nIf yes, how is the feature documented? not documented\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation: #8431\n\nNow user can enable e2e encryption as follows:\n./bin/pulsar-admin functions create --jar pulsar-functions/java-examples/target/pulsar-functions-api-examples.jar \\\n--classname org.apache.pulsar.functions.api.examples.ExclamationFunction  \\\n--inputs \"persistent://public/default/input\" --output persistent://public/default/output --producer-config '{\"cryptoConfig\": {\"cryptoKeyReaderClassName\": \"org.apache.pulsar.functions.api.examples.RawFileKeyReader\", \"cryptoKeyReaderConfig\": {\"PUBLIC\": \"/Users/nlu/workspace/stream-native/pulsar/keys/test_ecdsa_pubkey.pem\", \"PRIVATE\":\"/Users/nlu/workspace/stream-native/pulsar/keys/test_ecdsa_privkey.pem\"}, \"producerCryptoFailureAction\": \"FAIL\", \"encryptionKeys\":[\"myapp1\"]}}'\n./bin/pulsar-admin functions create --jar pulsar-functions/java-examples/target/pulsar-functions-api-examples.jar \\\n--classname org.apache.pulsar.functions.api.examples.ExclamationFunction  \\\n--input-specs '{\"persistent://public/default/output\": {\"cryptoConfig\": {\"cryptoKeyReaderClassName\": \"org.apache.pulsar.functions.api.examples.RawFileKeyReader\", \"cryptoKeyReaderConfig\": {\"PUBLIC\": \"/Users/nlu/workspace/stream-native/pulsar/keys/test_ecdsa_pubkey.pem\", \"PRIVATE\":\"/Users/nlu/workspace/stream-native/pulsar/keys/test_ecdsa_privkey_2.pem\"}, \"consumerCryptoFailureAction\": \"FAIL\"}}}' \\\n--output persistent://public/default/output-2 \nOne requirement is the provided cryptoKeyReaderClass must has a constructor with Map<String, Object> parameter for initialization. And the argument is provided via cryptoKeyReaderConfig in the cli", "createdAt": "2020-11-02T18:29:05Z", "url": "https://github.com/apache/pulsar/pull/8432", "merged": true, "mergeCommit": {"oid": "2c9fe27038768b0b2747a712646c5a6556b6f7e6"}, "closed": true, "closedAt": "2020-11-08T08:45:13Z", "author": {"login": "nlu90"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXdASJgH2gAyNTE0MjQyODgyOjk5NmE3NjFmZjA4ZDAzNzA2ZjdlOGUyZDg3N2ZkODg4OTgwZWMyMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZxeAgAFqTUyNDg5Nzg1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "996a761ff08d03706f7e8e2d877fd888980ec233", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/996a761ff08d03706f7e8e2d877fd888980ec233", "committedDate": "2020-10-30T02:05:03Z", "message": "add e2d encryption support for pulsar functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63e012c27d9514d48ffea463efa0dc5c7c211df0", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/63e012c27d9514d48ffea463efa0dc5c7c211df0", "committedDate": "2020-11-02T18:14:11Z", "message": "setup provider in PulsarSource/Sink"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTQwMzA0", "url": "https://github.com/apache/pulsar/pull/8432#pullrequestreview-522140304", "createdAt": "2020-11-03T01:21:20Z", "commit": {"oid": "63e012c27d9514d48ffea463efa0dc5c7c211df0"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMToyMToyMFrOHsdbrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMToyNjoyNVrOHsdgfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4MTYxMg==", "bodyText": "Please add license header for new file.", "url": "https://github.com/apache/pulsar/pull/8432#discussion_r516381612", "createdAt": "2020-11-03T01:21:20Z", "author": {"login": "wolfstudy"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/functions/CryptoConfig.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.apache.pulsar.common.functions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e012c27d9514d48ffea463efa0dc5c7c211df0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4MjA0NQ==", "bodyText": "Please add the license header for new file.", "url": "https://github.com/apache/pulsar/pull/8432#discussion_r516382045", "createdAt": "2020-11-03T01:23:14Z", "author": {"login": "wolfstudy"}, "path": "pulsar-functions/java-examples/src/main/java/org/apache/pulsar/functions/api/examples/RawFileKeyReader.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.apache.pulsar.functions.api.examples;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e012c27d9514d48ffea463efa0dc5c7c211df0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4MjM4OQ==", "bodyText": "Please add license header fr new file.", "url": "https://github.com/apache/pulsar/pull/8432#discussion_r516382389", "createdAt": "2020-11-03T01:24:33Z", "author": {"login": "wolfstudy"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/CryptoUtils.java", "diffHunk": "@@ -0,0 +1,135 @@\n+package org.apache.pulsar.functions.utils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e012c27d9514d48ffea463efa0dc5c7c211df0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4MjY1Mg==", "bodyText": "Why the SEND command value is 10, Is there any special meaning here? We still reserve the middle value?", "url": "https://github.com/apache/pulsar/pull/8432#discussion_r516382652", "createdAt": "2020-11-03T01:25:33Z", "author": {"login": "wolfstudy"}, "path": "pulsar-functions/proto/src/main/proto/Function.proto", "diffHunk": "@@ -100,12 +100,38 @@ message ConsumerSpec {\n     ReceiverQueueSize receiverQueueSize = 4;\n     map<string, string> schemaProperties = 5;\n     map<string, string> consumerProperties = 6;\n+    CryptoSpec cryptoSpec = 7;\n }\n \n message ProducerSpec {\n     int32 maxPendingMessages = 1;\n     int32 maxPendingMessagesAcrossPartitions = 2;\n     bool useThreadLocalProducers = 3;\n+    CryptoSpec cryptoSpec = 4;\n+}\n+\n+message CryptoSpec {\n+    enum FailureAction {\n+        FAIL = 0;\n+\n+        DISCARD = 1;\n+        CONSUME = 2;\n+\n+        SEND = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e012c27d9514d48ffea463efa0dc5c7c211df0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM4Mjg0Ng==", "bodyText": "Maybe we need to add comments to the newly created class, otherwise the check of ci may fail.", "url": "https://github.com/apache/pulsar/pull/8432#discussion_r516382846", "createdAt": "2020-11-03T01:26:25Z", "author": {"login": "wolfstudy"}, "path": "pulsar-functions/java-examples/src/main/java/org/apache/pulsar/functions/api/examples/RawFileKeyReader.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.apache.pulsar.functions.api.examples;\n+\n+import lombok.Data;\n+import org.apache.pulsar.client.api.CryptoKeyReader;\n+import org.apache.pulsar.client.api.EncryptionKeyInfo;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.Map;\n+\n+@Data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63e012c27d9514d48ffea463efa0dc5c7c211df0"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fca6352f13c0ce1e549ca935892e73bae45bee21", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/fca6352f13c0ce1e549ca935892e73bae45bee21", "committedDate": "2020-11-03T19:33:57Z", "message": "fix header and unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b758265f07f9dac4da8c5573fa656f66dbe4afa1", "author": {"user": {"login": "nlu90", "name": "Neng Lu"}}, "url": "https://github.com/apache/pulsar/commit/b758265f07f9dac4da8c5573fa656f66dbe4afa1", "committedDate": "2020-11-04T22:57:07Z", "message": "fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODk3ODUy", "url": "https://github.com/apache/pulsar/pull/8432#pullrequestreview-524897852", "createdAt": "2020-11-06T07:03:28Z", "commit": {"oid": "b758265f07f9dac4da8c5573fa656f66dbe4afa1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1156, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}