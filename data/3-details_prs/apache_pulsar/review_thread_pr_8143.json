{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNzI5NTU3", "number": 8143, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjowMjowOFrOEpU1ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNjoyNjoxNFrOEsQRBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNzY4NDIxOnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/internal/FunctionsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjowMjowOFrOHa7j-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjowMjowOFrOHa7j-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAwMDg5MQ==", "bodyText": "Can you abstract this into one common function?", "url": "https://github.com/apache/pulsar/pull/8143#discussion_r498000891", "createdAt": "2020-10-01T06:02:08Z", "author": {"login": "sijie"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/internal/FunctionsImpl.java", "diffHunk": "@@ -801,7 +859,10 @@ private void downloadFile(String destinationPath, WebTarget target) throws Pulsa\n         try {\n             downloadFileAsync(destinationPath, target).get(this.readTimeoutMs, TimeUnit.MILLISECONDS);\n         } catch (ExecutionException e) {\n-            throw (PulsarAdminException) e.getCause();\n+            if (e.getCause() instanceof PulsarAdminException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e943d1b2f637a402b302ff79b78bba091d40481d"}, "originalPosition": 240}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODM5MzAxOnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/PulsarAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNjoyNjoxNFrOHfdpUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwNjo1MDoyOFrOHfdxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MzYxNg==", "bodyText": "I have a little doubt. Is this fixed the problem that the pulsar function does not support multi-service URLs?", "url": "https://github.com/apache/pulsar/pull/8143#discussion_r502753616", "createdAt": "2020-10-10T06:26:14Z", "author": {"login": "jianyun8023"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/PulsarAdmin.java", "diffHunk": "@@ -189,7 +191,11 @@ public PulsarAdmin(String serviceUrl,\n         this.client = clientBuilder.build();\n \n         this.serviceUrl = serviceUrl;\n-        root = client.target(serviceUrl);\n+        ServiceURI serviceUri = ServiceURI.create(serviceUrl);\n+        root = client.target(String.format(\"%s://%s\"\n+                , serviceUri.getServiceScheme()\n+                , serviceUri.getServiceHosts()[ThreadLocalRandom.current()\n+                        .nextInt(serviceUri.getServiceHosts().length)]));\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd80a72a2ae84a6ca16edf03ef0a4c57b140bc5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1NTYzMg==", "bodyText": "I have a little doubt. Is this fixed the problem that the pulsar function does not support multi-service URLs?\n\nYes, when we create a Function, the Client initiates a request. Since multi-service URLs are not supported here, a NumberFormatException will be thrown.\nWhen you restore this code, then update the jar to the lib, create a Function with cli, you can reproduce the previous bug.", "url": "https://github.com/apache/pulsar/pull/8143#discussion_r502755632", "createdAt": "2020-10-10T06:50:28Z", "author": {"login": "315157973"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/PulsarAdmin.java", "diffHunk": "@@ -189,7 +191,11 @@ public PulsarAdmin(String serviceUrl,\n         this.client = clientBuilder.build();\n \n         this.serviceUrl = serviceUrl;\n-        root = client.target(serviceUrl);\n+        ServiceURI serviceUri = ServiceURI.create(serviceUrl);\n+        root = client.target(String.format(\"%s://%s\"\n+                , serviceUri.getServiceScheme()\n+                , serviceUri.getServiceHosts()[ThreadLocalRandom.current()\n+                        .nextInt(serviceUri.getServiceHosts().length)]));\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc1MzYxNg=="}, "originalCommit": {"oid": "2dd80a72a2ae84a6ca16edf03ef0a4c57b140bc5"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2120, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}