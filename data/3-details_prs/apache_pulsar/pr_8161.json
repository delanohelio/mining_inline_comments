{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0ODczMDE4", "number": 8161, "title": "Ack response implement", "bodyText": "Motivation\nNow acknowledge messages will not get response, but acknowledge messages with transaction will check the acknowledge whether conflict with other transaction in pendingack. We can commit or abort the transaction after we get the response.\nModification\n\nWe add requestId field in ack protocol and it type is optional.\nServer handle the ack command, if the command carry the requestId, server will return the response.\nIn normal, we don't need to get response. Unless we ack with transaction.\n\nCompatibility\nThis PR is for transaction, and don't change any client api, so we don't need to think about the compatibility question.\nVerifying this change\nAdd the tests for it\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (no)\nThe schema: (no)\nThe default values of configurations: (no)\nThe wire protocol: (yes)\nThe rest endpoints: (no)\nThe admin cli options: (no)\nAnything that affects deployment: (no)", "createdAt": "2020-09-29T14:27:14Z", "url": "https://github.com/apache/pulsar/pull/8161", "merged": true, "mergeCommit": {"oid": "59e0cfb580e4e6d22e1ea8284f5866c1c5a6fd07"}, "closed": true, "closedAt": "2020-10-14T07:40:09Z", "author": {"login": "congbobo184"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNpMjOAH2gAyNDk0ODczMDE4OmNmOGJhY2U3NzljZTUxODY4OTBlMGUxMGRmNTViOGUxMjdkMTNhODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSVSUKgH2gAyNDk0ODczMDE4OjY2NmY0YTU4YTFmMTEyZjFhZDVmNzc3ZTk4YmQwY2U5NmUzZjM1ODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cf8bace779ce5186890e0e10df55b8e127d13a81", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/cf8bace779ce5186890e0e10df55b8e127d13a81", "committedDate": "2020-09-29T14:38:04Z", "message": "no message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f312c0560caea23a7ae438e73dea8d535aabc402", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/f312c0560caea23a7ae438e73dea8d535aabc402", "committedDate": "2020-09-29T14:38:04Z", "message": "Revert \"no message\"\n\nThis reverts commit cdf77353a30615e756d45f695411a539e7505780."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9977e95224d6464535bdfd04015ebc6d720ddfaa", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/9977e95224d6464535bdfd04015ebc6d720ddfaa", "committedDate": "2020-09-29T14:38:04Z", "message": "no message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3c7eb319bf86d2feef6397996b9398cd5932bc3", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/d3c7eb319bf86d2feef6397996b9398cd5932bc3", "committedDate": "2020-09-29T14:38:05Z", "message": "Revert \"no message\"\n\nThis reverts commit c665fe5fc70909858a15e22d9c8fa0965ffc114a."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04d8da138bce5293644c6cb3c0881bb70e35914d", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/04d8da138bce5293644c6cb3c0881bb70e35914d", "committedDate": "2020-09-29T14:38:05Z", "message": "subscrip_response_implement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c51e098c4d0131df085567da1a202bbbc4854b5f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c51e098c4d0131df085567da1a202bbbc4854b5f", "committedDate": "2020-09-29T14:38:05Z", "message": "solve the conflic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fdaff6f476e638e672ca9d3b66e0300f1cd665f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/9fdaff6f476e638e672ca9d3b66e0300f1cd665f", "committedDate": "2020-09-29T14:46:01Z", "message": "modify the request time out class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a852774f55fa116c8575eed394afd2b9bd53b632", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a852774f55fa116c8575eed394afd2b9bd53b632", "committedDate": "2020-09-29T14:51:23Z", "message": "rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f7b80cdc39e52a5fd2551e2b4cc75729ef2f612", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/8f7b80cdc39e52a5fd2551e2b4cc75729ef2f612", "committedDate": "2020-09-29T15:03:42Z", "message": "rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e64e5573f6be24a5aecce32007c3ef998243141", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/7e64e5573f6be24a5aecce32007c3ef998243141", "committedDate": "2020-09-29T15:12:03Z", "message": "Modifty the unchange file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dbec4a9e895238bcdc5e0674f5963a50e7f6097", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/4dbec4a9e895238bcdc5e0674f5963a50e7f6097", "committedDate": "2020-09-29T15:13:51Z", "message": "Modifyt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "237458d2f6db29261d61577008037f81840dc4a6", "author": {"user": {"login": "congbobo184", "name": "congbo"}}, "url": "https://github.com/apache/pulsar/commit/237458d2f6db29261d61577008037f81840dc4a6", "committedDate": "2020-09-29T15:15:31Z", "message": "Update OwnerShipForCurrentServerTestBase.java\n\nmodify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "407c38ce4a2443a8490ad49530b71a66e3e968f7", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/407c38ce4a2443a8490ad49530b71a66e3e968f7", "committedDate": "2020-09-30T01:31:03Z", "message": "Close timer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7c17dad92e8a69e6d6152f4b781a8d0da321122", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a7c17dad92e8a69e6d6152f4b781a8d0da321122", "committedDate": "2020-09-30T01:33:15Z", "message": "Merge remote-tracking branch 'apache/master' into subscription_response_implement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f140f0eabd6e1f59ae37522af2a1cabf88ab8bf1", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/f140f0eabd6e1f59ae37522af2a1cabf88ab8bf1", "committedDate": "2020-09-30T01:44:30Z", "message": "Merge remote-tracking branch 'origin/subscription_response_implement' into subscription_response_implement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8faf6ad680a092dc2850336cd3a15785cff777ce", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/8faf6ad680a092dc2850336cd3a15785cff777ce", "committedDate": "2020-09-30T03:41:13Z", "message": "Add the individual"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cdec8f7251ed6204aeccd95b10ff8a0bc13c79c", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/5cdec8f7251ed6204aeccd95b10ff8a0bc13c79c", "committedDate": "2020-09-30T03:42:52Z", "message": "Add the licence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddbed2742464f1a5c71aa98aaf4b909facf08c4f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/ddbed2742464f1a5c71aa98aaf4b909facf08c4f", "committedDate": "2020-09-30T03:44:22Z", "message": "Modify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1c723c159bb0207aa98c9a711b983cff244ffa7", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/e1c723c159bb0207aa98c9a711b983cff244ffa7", "committedDate": "2020-09-30T12:58:26Z", "message": "Modifty the c++ protoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a43ab565ce6d194ee8779da3b8c46cd28662cbdd", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a43ab565ce6d194ee8779da3b8c46cd28662cbdd", "committedDate": "2020-10-11T03:16:33Z", "message": "Delete ack timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "730671c23db8caf7e2a4a457fa02d4155c188913", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/730671c23db8caf7e2a4a457fa02d4155c188913", "committedDate": "2020-10-11T03:51:33Z", "message": "delete format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05bb5ce91ed06f72189af9176fea7945490250d8", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/05bb5ce91ed06f72189af9176fea7945490250d8", "committedDate": "2020-10-11T03:53:07Z", "message": "delete command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a9d2e9d92b3d1d06a5cf8afc04ba4622d03de2c", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/8a9d2e9d92b3d1d06a5cf8afc04ba4622d03de2c", "committedDate": "2020-10-11T03:55:44Z", "message": "Merge remote-tracking branch 'apache/master' into subscription_response_implement\n\n# Conflicts:\n#\tpulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f343688151d2c292053ad9c58ad93897ca27161d", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/f343688151d2c292053ad9c58ad93897ca27161d", "committedDate": "2020-10-11T03:56:52Z", "message": "Delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a448ac532e20aba24c6f3f5a875b4eb5ba23b43c", "committedDate": "2020-10-11T04:10:40Z", "message": "Clear ackrequest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTUxOTIx", "url": "https://github.com/apache/pulsar/pull/8161#pullrequestreview-506151921", "createdAt": "2020-10-11T07:30:55Z", "commit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNzozMDo1NlrOHflPlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNzo0MzozNFrOHflUXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODEwMg==", "bodyText": "The transaction message is a couple of batch messages, make sure can handle this well, @gaoran10 Please help double-check.", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878102", "createdAt": "2020-10-11T07:30:56Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODEzMA==", "bodyText": "Same as above comment.", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878130", "createdAt": "2020-10-11T07:31:17Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(0, batchMessageId.getBatchIndex() + 1);\n+            } else {\n+                batchMessageId.ackIndividual();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODQxNQ==", "bodyText": "The TransactionConflictException does not make sense here. It's better to add a MessageAcknowledgeException.", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878415", "createdAt": "2020-10-11T07:34:25Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -1037,6 +1049,12 @@ private void closeConsumerTasks() {\n             possibleSendToDeadLetterTopicMessages.clear();\n         }\n \n+        if (!ackRequests.isEmpty()) {\n+            ackRequests.forEach((key, value) -> value.callback\n+                    .completeExceptionally(new TransactionConflictException(\"Consumer has closed!\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODY4Ng==", "bodyText": "Use info log level here", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878686", "createdAt": "2020-10-11T07:37:12Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(0, batchMessageId.getBatchIndex() + 1);\n+            } else {\n+                batchMessageId.ackIndividual();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(batchMessageId.getBatchIndex());\n+            }\n+        } else {\n+            MessageIdImpl singleMessage = (MessageIdImpl) messageId;\n+            ledgerId = singleMessage.getLedgerId();\n+            entryId = singleMessage.getEntryId();\n+        }\n+        long requestId = client.newRequestId();\n+        ByteBuf cmd = Commands.newAck(consumerId, ledgerId, entryId,\n+                bitSetRecyclable, ackType,\n+                validationError, properties, txnID.getLeastSigBits(), txnID.getMostSigBits(), requestId);\n+        OpForAckCallBack op = OpForAckCallBack.create(cmd, callBack, messageId,\n+                new TxnID(txnID.getMostSigBits(), txnID.getLeastSigBits()));\n+        ackRequests.put(requestId, op);\n+        unAckedMessageTracker.remove(messageId);\n+        cmd.retain();\n+        cnx().ctx().writeAndFlush(cmd, cnx().ctx().voidPromise());\n+        return callBack;\n+    }\n+\n+    protected void ackResponse(CommandAckResponse ackResponse) {\n+        checkArgument(ackResponse.getRequestId() >= 0);\n+        OpForAckCallBack callBackOp = ackRequests.remove(ackResponse.getRequestId());\n+        if (callBackOp == null || callBackOp.callback.isDone()) {\n+            log.error(\"Ack request has been handled requestId : {}\", ackResponse.getRequestId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODg2Mw==", "bodyText": "We should get the specific exception from the serverError, should not be throw TransactionConflictException for all errors.", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878863", "createdAt": "2020-10-11T07:39:12Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerImpl.java", "diffHunk": "@@ -2343,6 +2361,102 @@ private void removeChunkMessage(String msgUUID, ChunkedMessageCtx chunkedMsgCtx,\n         pendingChunckedMessageCount--;\n     }\n \n+    private CompletableFuture<Void> doAcknowledgeForResponse(MessageId messageId, AckType ackType,\n+                                                             ValidationError validationError,\n+                                                             Map<String, Long> properties, TxnID txnID) {\n+        CompletableFuture<Void> callBack = new CompletableFuture<>();\n+        BitSetRecyclable bitSetRecyclable = null;\n+        long ledgerId;\n+        long entryId;\n+        if (messageId instanceof BatchMessageIdImpl) {\n+            BatchMessageIdImpl batchMessageId = (BatchMessageIdImpl) messageId;\n+            bitSetRecyclable = BitSetRecyclable.create();\n+            ledgerId = batchMessageId.getLedgerId();\n+            entryId = batchMessageId.getEntryId();\n+            if (ackType == AckType.Cumulative) {\n+                batchMessageId.ackCumulative();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(0, batchMessageId.getBatchIndex() + 1);\n+            } else {\n+                batchMessageId.ackIndividual();\n+                bitSetRecyclable.set(0, batchMessageId.getAcker().getBatchSize());\n+                bitSetRecyclable.clear(batchMessageId.getBatchIndex());\n+            }\n+        } else {\n+            MessageIdImpl singleMessage = (MessageIdImpl) messageId;\n+            ledgerId = singleMessage.getLedgerId();\n+            entryId = singleMessage.getEntryId();\n+        }\n+        long requestId = client.newRequestId();\n+        ByteBuf cmd = Commands.newAck(consumerId, ledgerId, entryId,\n+                bitSetRecyclable, ackType,\n+                validationError, properties, txnID.getLeastSigBits(), txnID.getMostSigBits(), requestId);\n+        OpForAckCallBack op = OpForAckCallBack.create(cmd, callBack, messageId,\n+                new TxnID(txnID.getMostSigBits(), txnID.getLeastSigBits()));\n+        ackRequests.put(requestId, op);\n+        unAckedMessageTracker.remove(messageId);\n+        cmd.retain();\n+        cnx().ctx().writeAndFlush(cmd, cnx().ctx().voidPromise());\n+        return callBack;\n+    }\n+\n+    protected void ackResponse(CommandAckResponse ackResponse) {\n+        checkArgument(ackResponse.getRequestId() >= 0);\n+        OpForAckCallBack callBackOp = ackRequests.remove(ackResponse.getRequestId());\n+        if (callBackOp == null || callBackOp.callback.isDone()) {\n+            log.error(\"Ack request has been handled requestId : {}\", ackResponse.getRequestId());\n+        } else if (!ackResponse.hasError()) {\n+            callBackOp.callback.complete(null);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"MessageId : {} has ack by TxnId : {}\", callBackOp.messageId.getLedgerId() + \":\"\n+                        + callBackOp.messageId.getEntryId(), callBackOp.txnID.toString());\n+            }\n+            callBackOp.recycle();\n+        } else {\n+            callBackOp.callback.completeExceptionally(new TransactionConflictException(ackResponse.getMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3ODk5Nw==", "bodyText": "Avoid use import .*", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502878997", "createdAt": "2020-10-11T07:40:14Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/impl/ConsumerAckResponseTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.impl;\n+\n+import lombok.Cleanup;\n+\n+import org.apache.pulsar.client.api.Message;\n+import org.apache.pulsar.client.api.MessageId;\n+import org.apache.pulsar.client.api.Producer;\n+import org.apache.pulsar.client.api.ProducerConsumerBase;\n+import org.apache.pulsar.client.api.PulsarClientException;\n+import org.apache.pulsar.client.api.Schema;\n+import org.apache.pulsar.client.api.SubscriptionType;\n+import org.apache.pulsar.client.impl.transaction.TransactionImpl;\n+\n+import org.apache.pulsar.transaction.common.exception.TransactionConflictException;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.mockito.Mockito.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3OTMyNw==", "bodyText": "Why message id (1,1,1) conflict?", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r502879327", "createdAt": "2020-10-11T07:43:34Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/impl/ConsumerAckResponseTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.impl;\n+\n+import lombok.Cleanup;\n+\n+import org.apache.pulsar.client.api.Message;\n+import org.apache.pulsar.client.api.MessageId;\n+import org.apache.pulsar.client.api.Producer;\n+import org.apache.pulsar.client.api.ProducerConsumerBase;\n+import org.apache.pulsar.client.api.PulsarClientException;\n+import org.apache.pulsar.client.api.Schema;\n+import org.apache.pulsar.client.api.SubscriptionType;\n+import org.apache.pulsar.client.impl.transaction.TransactionImpl;\n+\n+import org.apache.pulsar.transaction.common.exception.TransactionConflictException;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.mockito.Mockito.*;\n+\n+public class ConsumerAckResponseTest extends ProducerConsumerBase {\n+\n+    private final static TransactionImpl transaction = mock(TransactionImpl.class);\n+\n+    @BeforeClass\n+    public void setup() throws Exception {\n+        super.internalSetup();\n+        super.producerBaseSetup();\n+        doReturn(1L).when(transaction).getTxnIdLeastBits();\n+        doReturn(1L).when(transaction).getTxnIdMostBits();\n+        CompletableFuture<Void> completableFuture = new CompletableFuture<>();\n+        doReturn(completableFuture).when(transaction).registerAckOp(any());\n+        doNothing().when(transaction).registerAckedTopic(any(), any());\n+\n+        Thread.sleep(1000 * 3);\n+    }\n+\n+    @AfterClass\n+    public void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void testAckResponse() throws PulsarClientException, InterruptedException, ExecutionException {\n+        String topic = \"testAckResponse\";\n+        @Cleanup\n+        Producer<Integer> producer = pulsarClient.newProducer(Schema.INT32)\n+                .topic(topic)\n+                .enableBatching(false)\n+                .create();\n+        @Cleanup\n+        ConsumerImpl<Integer> consumer = (ConsumerImpl<Integer>) pulsarClient.newConsumer(Schema.INT32)\n+                .topic(topic)\n+                .subscriptionName(\"sub\")\n+                .subscriptionType(SubscriptionType.Shared)\n+                .ackTimeout(1, TimeUnit.SECONDS)\n+                .subscribe();\n+        producer.send(1);\n+        producer.send(2);\n+        try {\n+            consumer.acknowledgeAsync(new MessageIdImpl(1, 1, 1), transaction).get();\n+        } catch (InterruptedException | ExecutionException e) {\n+            Assert.assertTrue(e.getCause() instanceof TransactionConflictException);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTU1NDg1", "url": "https://github.com/apache/pulsar/pull/8161#pullrequestreview-506155485", "createdAt": "2020-10-11T08:18:07Z", "commit": {"oid": "a448ac532e20aba24c6f3f5a875b4eb5ba23b43c"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53a5b440015dbcec3c2c83baa79c8f48676e40c0", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/53a5b440015dbcec3c2c83baa79c8f48676e40c0", "committedDate": "2020-10-11T11:55:25Z", "message": "fix some comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cb670fe85235bf5d3b2fef36bb7bc975cc3b447", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/6cb670fe85235bf5d3b2fef36bb7bc975cc3b447", "committedDate": "2020-10-11T12:41:45Z", "message": "Realse buf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe9306dce33ff9068a1f8eda84deaf8e6c5a9f7b", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/fe9306dce33ff9068a1f8eda84deaf8e6c5a9f7b", "committedDate": "2020-10-11T14:04:18Z", "message": "Delete exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef62e20a4a8ac03af2e2886b845b95f02572450d", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/ef62e20a4a8ac03af2e2886b845b95f02572450d", "committedDate": "2020-10-12T01:36:11Z", "message": "Revover the protoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c50e66c30d44b49700cfd34282282030154a01fa", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c50e66c30d44b49700cfd34282282030154a01fa", "committedDate": "2020-10-12T01:48:15Z", "message": "Modify the batch ack bitSet size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cf4be85d633ef5fe326148cfda2ac6c415f86af", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/7cf4be85d633ef5fe326148cfda2ac6c415f86af", "committedDate": "2020-10-12T01:56:59Z", "message": "Modify the pulsarApi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc4f9d337e41a84deae8bb773e325dcea2fa1e82", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/fc4f9d337e41a84deae8bb773e325dcea2fa1e82", "committedDate": "2020-10-12T03:09:24Z", "message": "modify c++ protoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90d989e372513b76105b517fe78ee1535716ac0d", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/90d989e372513b76105b517fe78ee1535716ac0d", "committedDate": "2020-10-12T03:40:30Z", "message": "Modify the c++ protoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzcwNzMx", "url": "https://github.com/apache/pulsar/pull/8161#pullrequestreview-506370731", "createdAt": "2020-10-12T07:48:19Z", "commit": {"oid": "90d989e372513b76105b517fe78ee1535716ac0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8f18b5d064abb9d1768bd0c2abf3844c255de47", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c8f18b5d064abb9d1768bd0c2abf3844c255de47", "committedDate": "2020-10-12T09:19:40Z", "message": "Merge remote-tracking branch 'apache/master' into subscription_response_implement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2829eb9a65d9bc940b2a3bf07fe304ab30715fc8", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/2829eb9a65d9bc940b2a3bf07fe304ab30715fc8", "committedDate": "2020-10-12T09:27:12Z", "message": "Modify the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8074af5ee4a2c45eeff2264b69a1aa6a265a098", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/f8074af5ee4a2c45eeff2264b69a1aa6a265a098", "committedDate": "2020-10-14T02:23:30Z", "message": "handle the exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73eb345b25f540a28d47df1c48870759685dc328", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/73eb345b25f540a28d47df1c48870759685dc328", "committedDate": "2020-10-14T02:38:27Z", "message": "Modify the exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec29a62db1f826d82d0e4338bb8f4938a4809f56", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/ec29a62db1f826d82d0e4338bb8f4938a4809f56", "committedDate": "2020-10-14T02:41:46Z", "message": "Delete the exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTU1NTkw", "url": "https://github.com/apache/pulsar/pull/8161#pullrequestreview-507955590", "createdAt": "2020-10-14T02:44:22Z", "commit": {"oid": "ec29a62db1f826d82d0e4338bb8f4938a4809f56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjo0NDoyMlrOHhAIZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMjo0NDoyMlrOHhAIZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2NzIwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                TransactionConflictException = 23; // Ack with transaction conflict\n          \n          \n            \n                TransactionConflict = 23; // Transaction conflict", "url": "https://github.com/apache/pulsar/pull/8161#discussion_r504367205", "createdAt": "2020-10-14T02:44:22Z", "author": {"login": "codelipenghui"}, "path": "pulsar-common/src/main/proto/PulsarApi.proto", "diffHunk": "@@ -201,6 +201,8 @@ enum ServerError {\n     TransactionCoordinatorNotFound = 20; // Transaction coordinator not found error\n     InvalidTxnStatus = 21; // Invalid txn status error\n     NotAllowedError = 22; // Not allowed error\n+\n+    TransactionConflictException = 23; // Ack with transaction conflict", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec29a62db1f826d82d0e4338bb8f4938a4809f56"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27a9ecce5e4719f70ceb3a6d93d3cb05bb82a9a4", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/27a9ecce5e4719f70ceb3a6d93d3cb05bb82a9a4", "committedDate": "2020-10-14T03:34:14Z", "message": "Modify the exception"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTc5NzE1", "url": "https://github.com/apache/pulsar/pull/8161#pullrequestreview-507979715", "createdAt": "2020-10-14T04:06:09Z", "commit": {"oid": "27a9ecce5e4719f70ceb3a6d93d3cb05bb82a9a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666f4a58a1f112f1ad5f777e98bd0ce96e3f3588", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/666f4a58a1f112f1ad5f777e98bd0ce96e3f3588", "committedDate": "2020-10-14T04:15:53Z", "message": "Modify the test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 121, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}