{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzcwNzc5", "number": 6183, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjowNDo1NFrODcZb9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDo1MTozMlrODd4VKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTAzNDc4OnYy", "diffSide": "RIGHT", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/OffloadPolicies.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjowNDo1NFrOFkb5aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNDo0NTowM1rOFkcXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MDEyMQ==", "bodyText": "Add license header here.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373750121", "createdAt": "2020-02-01T02:04:54Z", "author": {"login": "codelipenghui"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/OffloadPolicies.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package org.apache.pulsar.common.policies.data;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1Nzc4Ng==", "bodyText": "ok, i'll fix it.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373757786", "createdAt": "2020-02-01T04:45:03Z", "author": {"login": "gaoran10"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/OffloadPolicies.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package org.apache.pulsar.common.policies.data;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MDEyMQ=="}, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA0MzQ5OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjoyMjoyMVrOFkb99w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwNDo0NTozMlrOFkcXdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTI4Nw==", "bodyText": "Broker already have namespace policies caches, don't need to get it by admin client.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751287", "createdAt": "2020-02-01T02:22:21Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1NzgxNA==", "bodyText": "ok, i'll fix it.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373757814", "createdAt": "2020-02-01T04:45:32Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTI4Nw=="}, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA0NDQ2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjoyNDo1OVrOFkb-fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwOTo1NjowNVrOFkdK3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTQyMA==", "bodyText": "Since the OffloadPolicies added, i think we can change this method to createManagedLedgerOffloader(OffloadPolicies offloadPolicies). For default offloader, just convert serverConfiguration to the OffloadPolicies.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751420", "createdAt": "2020-02-01T02:24:59Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());\n+            return getManagedLedgerOffloaderByPolicies(offloadPolicies);\n+        } catch (Exception e) {\n+            LOG.error(\"Failed to get ledgerOffloader for namespaceName {}\", namespaceName, e);\n+            return new NullLedgerOffloader();\n+        }\n     }\n \n-    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf)\n+    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf, OffloadPolicies offloadPolicies)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTY5Ng==", "bodyText": "And current method checks the conf.getManagedLedgerOffloadDriver() is not blank, users may disable the default offloader but enable it at namespace level.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751696", "createdAt": "2020-02-01T02:29:51Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());\n+            return getManagedLedgerOffloaderByPolicies(offloadPolicies);\n+        } catch (Exception e) {\n+            LOG.error(\"Failed to get ledgerOffloader for namespaceName {}\", namespaceName, e);\n+            return new NullLedgerOffloader();\n+        }\n     }\n \n-    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf)\n+    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf, OffloadPolicies offloadPolicies)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTQyMA=="}, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc3MDk3NA==", "bodyText": "good idea!", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373770974", "createdAt": "2020-02-01T09:56:05Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -764,11 +768,31 @@ public ManagedLedgerClientFactory getManagedLedgerClientFactory() {\n         return managedLedgerClientFactory;\n     }\n \n-    public LedgerOffloader getManagedLedgerOffloader() {\n-        return offloader;\n+    public LedgerOffloader getManagedLedgerOffloaderByPolicies(OffloadPolicies offloadPolicies) {\n+        if (offloadPolicies == null) {\n+            return getDefaultOffloader();\n+        }\n+        return ledgerOffloaderMap.computeIfAbsent(offloadPolicies, op -> {\n+            try {\n+                return createManagedLedgerOffloader(getConfiguration(), offloadPolicies);\n+            } catch (PulsarServerException e) {\n+                LOG.error(\"create ledgerOffloader failed for {}\", offloadPolicies.toString(), e);\n+                return new NullLedgerOffloader();\n+            }\n+        });\n+    }\n+\n+    public LedgerOffloader getManagedLedgerOffloader(NamespaceName namespaceName) {\n+        try {\n+            OffloadPolicies offloadPolicies = getAdminClient().namespaces().getOffload(namespaceName.toString());\n+            return getManagedLedgerOffloaderByPolicies(offloadPolicies);\n+        } catch (Exception e) {\n+            LOG.error(\"Failed to get ledgerOffloader for namespaceName {}\", namespaceName, e);\n+            return new NullLedgerOffloader();\n+        }\n     }\n \n-    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf)\n+    public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfiguration conf, OffloadPolicies offloadPolicies)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTQyMA=="}, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA0NTQ4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjoyNzo0NlrOFkb_CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjoyNzo0NlrOFkb_CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTU2MQ==", "bodyText": "Keep log level to info, we don't need to warn users when they have not enable the offloader.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751561", "createdAt": "2020-02-01T02:27:46Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -785,12 +809,13 @@ public synchronized LedgerOffloader createManagedLedgerOffloader(ServiceConfigur\n                             LedgerOffloader.METADATA_SOFTWARE_VERSION_KEY.toLowerCase(), PulsarVersion.getVersion(),\n                             LedgerOffloader.METADATA_SOFTWARE_GITSHA_KEY.toLowerCase(), PulsarVersion.getGitSha()\n                         ),\n-                        getOffloaderScheduler(conf));\n+                        getOffloaderScheduler(conf),\n+                        offloadPolicies);\n                 } catch (IOException ioe) {\n                     throw new PulsarServerException(ioe.getMessage(), ioe.getCause());\n                 }\n             } else {\n-                LOG.info(\"No ledger offloader configured, using NULL instance\");\n+                LOG.warn(\"No ledger offloader configured, using NULL instance\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA0ODQyOnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNToxMVrOFkcAng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNToxMVrOFkcAng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTk2Ng==", "bodyText": "Looks duplicated", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751966", "createdAt": "2020-02-01T02:35:11Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -34,6 +34,8 @@\n import org.apache.pulsar.common.policies.data.BundlesData;\n import org.apache.pulsar.common.policies.data.DispatchRate;\n import org.apache.pulsar.common.policies.data.DelayedDeliveryPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA0ODQ5OnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNTozMVrOFkcAqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNTozMVrOFkcAqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MTk3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set the offload configuration for all the topics on a namespace.\n          \n          \n            \n                 * Set the offload configuration for all the topics in a namespace.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373751979", "createdAt": "2020-02-01T02:35:31Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -1654,4 +1656,74 @@ boolean getIsAllowAutoUpdateSchema(String namespace)\n      */\n     void setIsAllowAutoUpdateSchema(String namespace, boolean isAllowAutoUpdateSchema)\n             throws PulsarAdminException;\n+\n+    /**\n+     * Set the offload configuration for all the topics on a namespace.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA0ODc3OnYy", "diffSide": "RIGHT", "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNjowM1rOFkcAzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNjowM1rOFkcAzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjAxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set the offload configuration on a namespace. This operation requires Pulsar super-user access.\n          \n          \n            \n                 * Set the offload configuration in a namespace. This operation requires Pulsar super-user access.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373752014", "createdAt": "2020-02-01T02:36:03Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/Namespaces.java", "diffHunk": "@@ -1654,4 +1656,74 @@ boolean getIsAllowAutoUpdateSchema(String namespace)\n      */\n     void setIsAllowAutoUpdateSchema(String namespace, boolean isAllowAutoUpdateSchema)\n             throws PulsarAdminException;\n+\n+    /**\n+     * Set the offload configuration for all the topics on a namespace.\n+     * <p/>\n+     * Set the offload configuration on a namespace. This operation requires Pulsar super-user access.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA0OTMzOnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNzoxOVrOFkcBHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNzoxOVrOFkcBHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjA5Mg==", "bodyText": "Looks duplicated", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373752092", "createdAt": "2020-02-01T02:37:19Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -41,6 +43,8 @@\n import org.apache.pulsar.common.policies.data.BundlesData;\n import org.apache.pulsar.common.policies.data.DispatchRate;\n import org.apache.pulsar.common.policies.data.DelayedDeliveryPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;\n+import org.apache.pulsar.common.policies.data.OffloadPolicies;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA1NTI0OnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjo1MzowMFrOFkcETA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjo1MzowMFrOFkcETA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjkwOA==", "bodyText": "I think not correct here, is the MAX_* is limit the max available value? or a default value. From the logic, it is a default value.\nIf used for default value, it's better named DEFAULT_BLOCK_SIZE_IN_BYTES and DEFAULT_READ_BUFFER_SIZE_IN_BYTES.\nAnd we'd better throw exceptions when the blockSize and readBufferSize user specify is a non-negative value or 0. because offloader can't uses 0 value or a  negative value. If users don't want modify this value, empty maxBlockSizeStr and readBufferSizeStr is fine.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373752908", "createdAt": "2020-02-01T02:53:00Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -1287,6 +1291,106 @@ void run() throws PulsarAdminException {\n         }\n     }\n \n+    @Parameters(commandDescription = \"Set the offload policies for a namespace\")\n+    private class SetOffload extends CliCommand {\n+        @Parameter(description = \"tenant/namespace\", required = true)\n+        private java.util.List<String> params;\n+\n+        @Parameter(\n+                names = {\"--region\", \"-r\"},\n+                description = \"The long term storage region, \" +\n+                        \"default is s3ManagedLedgerOffloadRegion or gcsManagedLedgerOffloadRegion in broker.conf\",\n+                required = false)\n+        private String region;\n+\n+        @Parameter(\n+                names = {\"--bucket\", \"-b\"},\n+                description = \"Bucket to place offloaded ledger into\",\n+                required = true)\n+        private String bucket;\n+\n+        @Parameter(\n+                names = {\"--endpoint\", \"-e\"},\n+                description = \"Alternative endpoint to connect to, \" +\n+                        \"s3 default is s3ManagedLedgerOffloadServiceEndpoint in broker.conf\",\n+                required = false)\n+        private String endpoint;\n+\n+        @Parameter(\n+                names = {\"--maxBlockSize\", \"-mbs\"},\n+                description = \"Max block size (eg: 32M, 64M), default is 64MB\",\n+                required = false)\n+        private String maxBlockSizeStr;\n+\n+        @Parameter(\n+                names = {\"--readBufferSize\", \"-rbs\"},\n+                description = \"Read buffer size (eg: 1M, 5M), default is 1MB\",\n+                required = false)\n+        private String readBufferSizeStr;\n+\n+        private final String[] DRIVER_NAMES = {\"S3\", \"aws-s3\", \"google-cloud-storage\"};\n+\n+        public boolean isS3Driver(String driver) {\n+            if (StringUtils.isEmpty(driver)) {\n+                return false;\n+            }\n+            return driver.equalsIgnoreCase(DRIVER_NAMES[0]) || driver.equalsIgnoreCase(DRIVER_NAMES[1]);\n+        }\n+\n+        @Override\n+        void run() throws PulsarAdminException {\n+            String namespace = validateNamespace(params);\n+\n+            String offloadDriver = admin.brokers().getRuntimeConfigurations().get(\"managedLedgerOffloadDriver\");\n+            if (isS3Driver(offloadDriver) && Strings.isNullOrEmpty(region) && Strings.isNullOrEmpty(endpoint)) {\n+                throw new ParameterException(\n+                        \"Either s3ManagedLedgerOffloadRegion or s3ManagedLedgerOffloadServiceEndpoint must be set\"\n+                                + \" if s3 offload enabled\");\n+            }\n+\n+            long maxBlockSize = 0;\n+            if (StringUtils.isNotEmpty(maxBlockSizeStr)) {\n+                maxBlockSize = validateSizeString(maxBlockSizeStr);\n+            }\n+            long readBufferSize = 0;\n+            if (StringUtils.isNotEmpty(readBufferSizeStr)) {\n+                readBufferSize = validateSizeString(readBufferSizeStr);\n+            }\n+\n+            final int maxBlockSizeInBytes;\n+            if (maxBlockSize > 0 && maxBlockSize <= Integer.MAX_VALUE) {\n+                maxBlockSizeInBytes = new Long(maxBlockSize).intValue();\n+            } else {\n+                maxBlockSizeInBytes = OffloadPolicies.MAX_BLOCK_SIZE_IN_BYTES;\n+            }\n+\n+            final int readBufferSizeInBytes;\n+            if (readBufferSize > 0 && readBufferSize <= Integer.MAX_VALUE) {\n+                readBufferSizeInBytes = new Long(readBufferSize).intValue();\n+            } else {\n+                readBufferSizeInBytes = OffloadPolicies.READ_BUFFER_SIZE_IN_BYTES;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA1Njk2OnYy", "diffSide": "RIGHT", "path": "pulsar-sql/presto-pulsar/src/main/java/org/apache/pulsar/sql/presto/PulsarConnectorCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjo1NzoxNlrOFkcFLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjo1NzoxNlrOFkcFLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzEzNQ==", "bodyText": "Same as PulsarService, use initManagedLedgerOffloader(OffloadPolicies offloadPolicies). For default offloader, just convert serverConfiguration to the OffloadPolicies.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373753135", "createdAt": "2020-02-01T02:57:16Z", "author": {"login": "codelipenghui"}, "path": "pulsar-sql/presto-pulsar/src/main/java/org/apache/pulsar/sql/presto/PulsarConnectorCache.java", "diffHunk": "@@ -123,7 +132,7 @@ private synchronized OrderedScheduler getOffloaderScheduler(PulsarConnectorConfi\n         return this.offloaderScheduler;\n     }\n \n-    private LedgerOffloader initManagedLedgerOffloader(PulsarConnectorConfig conf) {\n+    private LedgerOffloader initManagedLedgerOffloader(PulsarConnectorConfig conf, OffloadPolicies offloadPolicies) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA2MTEyOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMzowOTowNlrOFkcHZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMzowOTowNlrOFkcHZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzcwMw==", "bodyText": "I'm a little worried about uses OffloadPolicies as a key, because is users frequently modified the policy, there will be some invalid Offloader objects here.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r373753703", "createdAt": "2020-02-01T03:09:06Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -162,7 +165,8 @@\n     private ScheduledExecutorService compactorExecutor;\n     private OrderedScheduler offloaderScheduler;\n     private Offloaders offloaderManager = new Offloaders();\n-    private LedgerOffloader offloader;\n+    private LedgerOffloader defaultOffloader;\n+    private Map<OffloadPolicies, LedgerOffloader> ledgerOffloaderMap = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02215a91d0c36dc0a83cfb2d596d1a17fa674839"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjU3ODEyOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDo0OTowMVrOFmvJkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMTozNToxNFrOFm6YUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MjcwNw==", "bodyText": "nit: ideally we should try to implement this in an asynchronous way.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r376162707", "createdAt": "2020-02-07T00:49:01Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -2188,5 +2189,66 @@ protected void internalSetIsAllowAutoUpdateSchema(boolean isAllowAutoUpdateSchem\n         }\n     }\n \n+    protected void internalSetOffloadPolicies(OffloadPolicies offloadPolicies) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0NjcwNQ==", "bodyText": "ok, I'll fix it.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r376346705", "createdAt": "2020-02-07T11:35:14Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -2188,5 +2189,66 @@ protected void internalSetIsAllowAutoUpdateSchema(boolean isAllowAutoUpdateSchem\n         }\n     }\n \n+    protected void internalSetOffloadPolicies(OffloadPolicies offloadPolicies) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MjcwNw=="}, "originalCommit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjU4MjE4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwMDo1MTozMlrOFmvMJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMTozNjozNVrOFm6aTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MzM2Nw==", "bodyText": "412 is thrown for the following conditions:\n\ndriver is not supported.\nbucket is not valid.\noffload policies is empty.", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r376163367", "createdAt": "2020-02-07T00:51:32Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "diffHunk": "@@ -1076,5 +1077,31 @@ public void setSchemaValidtionEnforced(@PathParam(\"tenant\") String tenant,\n         internalSetSchemaValidationEnforced(schemaValidationEnforced);\n     }\n \n+    @POST\n+    @Path(\"/{tenant}/{namespace}/offloadPolicies\")\n+    @ApiOperation(value = \" Set offload configuration on a namespace.\")\n+    @ApiResponses(value = {\n+            @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Namespace does not exist\"),\n+            @ApiResponse(code = 409, message = \"Concurrent modification\"),\n+            @ApiResponse(code = 412, message = \"Bucket must be specified\") })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0NzIxNA==", "bodyText": "I was so careless", "url": "https://github.com/apache/pulsar/pull/6183#discussion_r376347214", "createdAt": "2020-02-07T11:36:35Z", "author": {"login": "gaoran10"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "diffHunk": "@@ -1076,5 +1077,31 @@ public void setSchemaValidtionEnforced(@PathParam(\"tenant\") String tenant,\n         internalSetSchemaValidationEnforced(schemaValidationEnforced);\n     }\n \n+    @POST\n+    @Path(\"/{tenant}/{namespace}/offloadPolicies\")\n+    @ApiOperation(value = \" Set offload configuration on a namespace.\")\n+    @ApiResponses(value = {\n+            @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Namespace does not exist\"),\n+            @ApiResponse(code = 409, message = \"Concurrent modification\"),\n+            @ApiResponse(code = 412, message = \"Bucket must be specified\") })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2MzM2Nw=="}, "originalCommit": {"oid": "0a4d81ee6c58551ee6029f9381931eac5fa8646e"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2019, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}