{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2Mzk4MDc5", "number": 9079, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMToxNzo1OFrOFJv3hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMToxOTo0NFrOFJv44Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzY1NzY1OnYy", "diffSide": "RIGHT", "path": "site2/docs/schema-understand.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMToxNzo1OFrOIMNCIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMToxNzo1OFrOIMNCIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY2NzM2MQ==", "bodyText": "... to use the same tools...", "url": "https://github.com/apache/pulsar/pull/9079#discussion_r549667361", "createdAt": "2020-12-29T11:17:58Z", "author": {"login": "Jennifer88huang"}, "path": "site2/docs/schema-understand.md", "diffHunk": "@@ -287,25 +289,36 @@ This example shows how to construct a key/value schema and then use it to produc\n     KeyValue<Integer, String> kv = msg.getValue();\n     ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n #### struct\n \n-Pulsar uses [Avro Specification](http://avro.apache.org/docs/current/spec.html) to declare the schema definition for `struct` schema. \n+This section describes the details of type and usage of the `struct` schema.\n \n-This allows Pulsar:\n+##### Type\n \n-* to use same tools to manage schema definitions\n+`struct` schema supports `AvroBaseStructSchema` and `ProtobufNativeSchema`.\n \n-* to use different serialization/deserialization methods to handle data\n+|Type|Description|\n+---|---|\n+`AvroBaseStructSchema`|Pulsar uses [Avro Specification](http://avro.apache.org/docs/current/spec.html) to declare the schema definition for `AvroBaseStructSchema`, which supports  `AvroSchema`, `JsonSchema`, and `ProtobufSchema`. <br><br>This allows Pulsar:<br>- to use same tools to manage schema definitions<br>- to use different serialization or deserialization methods to handle data|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37cb984954b906c2ff3cdfcce99960d11e1d2209"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzY2MTEzOnYy", "diffSide": "RIGHT", "path": "site2/docs/schema-understand.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMToxOTo0NFrOIMNEDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMToxOTo0NFrOIMNEDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY2Nzg1Mg==", "bodyText": "Technically, it's 100% correct.\nI suggest that we use \"Pulsar provides the following methods to ....\"\nWhen people add more methods below, they usually forget to update the specific number.", "url": "https://github.com/apache/pulsar/pull/9079#discussion_r549667852", "createdAt": "2020-12-29T11:19:44Z", "author": {"login": "Jennifer88huang"}, "path": "site2/docs/schema-understand.md", "diffHunk": "@@ -287,25 +289,36 @@ This example shows how to construct a key/value schema and then use it to produc\n     KeyValue<Integer, String> kv = msg.getValue();\n     ```\n \n+<!--END_DOCUSAURUS_CODE_TABS-->\n+\n #### struct\n \n-Pulsar uses [Avro Specification](http://avro.apache.org/docs/current/spec.html) to declare the schema definition for `struct` schema. \n+This section describes the details of type and usage of the `struct` schema.\n \n-This allows Pulsar:\n+##### Type\n \n-* to use same tools to manage schema definitions\n+`struct` schema supports `AvroBaseStructSchema` and `ProtobufNativeSchema`.\n \n-* to use different serialization/deserialization methods to handle data\n+|Type|Description|\n+---|---|\n+`AvroBaseStructSchema`|Pulsar uses [Avro Specification](http://avro.apache.org/docs/current/spec.html) to declare the schema definition for `AvroBaseStructSchema`, which supports  `AvroSchema`, `JsonSchema`, and `ProtobufSchema`. <br><br>This allows Pulsar:<br>- to use same tools to manage schema definitions<br>- to use different serialization or deserialization methods to handle data|\n+`ProtobufNativeSchema`|`ProtobufNativeSchema` is based on protobuf native Descriptor. <br><br>This allows Pulsar:<br>- to use native protobuf-v3 to serialize or deserialize data<br>- to use `AutoConsume` to deserialize data.\n \n-There are two methods to use `struct` schema\uff1a\n+##### Usage\n+\n+Pulsar provides three methods to use the `struct` schema:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37cb984954b906c2ff3cdfcce99960d11e1d2209"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2636, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}