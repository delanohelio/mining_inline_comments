{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzODQ4Mjgy", "number": 6471, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwMzozNzo0M1rODl_gtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwOTo0ODoyNlrODoGrcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY0NDcwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwMzozNzo0M1rOFzMW6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwMzozNzo0M1rOFzMW6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyNDE2OA==", "bodyText": "It's better to leverage with AsyncResponse, you can take a look https://github.com/apache/pulsar/blob/master/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java#L198.", "url": "https://github.com/apache/pulsar/pull/6471#discussion_r389224168", "createdAt": "2020-03-07T03:37:43Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "diffHunk": "@@ -298,6 +299,28 @@ public void modifyDeduplication(@PathParam(\"tenant\") String tenant, @PathParam(\"\n         internalModifyDeduplication(enableDeduplication);\n     }\n \n+    @POST\n+    @Path(\"/{tenant}/{namespace}/allowAutoTopicCreationOverride\")\n+    @ApiOperation(value = \"Override broker's allowAutoTopicCreation setting for a namespace\")\n+    @ApiResponses(value = { @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Tenant or cluster or namespace doesn't exist\"),\n+            @ApiResponse(code = 400, message = \"Invalid autoTopicCreation override\") })\n+    public void setAllowAutoTopicCreationOverride(@PathParam(\"tenant\") String tenant, @PathParam(\"namespace\") String namespace,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5aa45f870d879e80240be50b0775bbec892d6de"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY0NDg0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwMzozODowMFrOFzMW9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwMzozODowMFrOFzMW9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyNDE4Mw==", "bodyText": "Same as above comment.", "url": "https://github.com/apache/pulsar/pull/6471#discussion_r389224183", "createdAt": "2020-03-07T03:38:00Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/Namespaces.java", "diffHunk": "@@ -298,6 +299,28 @@ public void modifyDeduplication(@PathParam(\"tenant\") String tenant, @PathParam(\"\n         internalModifyDeduplication(enableDeduplication);\n     }\n \n+    @POST\n+    @Path(\"/{tenant}/{namespace}/allowAutoTopicCreationOverride\")\n+    @ApiOperation(value = \"Override broker's allowAutoTopicCreation setting for a namespace\")\n+    @ApiResponses(value = { @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Tenant or cluster or namespace doesn't exist\"),\n+            @ApiResponse(code = 400, message = \"Invalid autoTopicCreation override\") })\n+    public void setAllowAutoTopicCreationOverride(@PathParam(\"tenant\") String tenant, @PathParam(\"namespace\") String namespace,\n+                                                  AutoTopicCreationOverride autoTopicCreationOverride) {\n+        validateNamespaceName(tenant, namespace);\n+        internalSetAllowAutoTopicCreationOverride(autoTopicCreationOverride);\n+    }\n+\n+    @DELETE\n+    @Path(\"/{tenant}/{namespace}/allowAutoTopicCreationOverride\")\n+    @ApiOperation(value = \"Remove override of broker's allowAutoTopicCreation in a namespace\")\n+    @ApiResponses(value = { @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Tenant or cluster or namespace doesn't exist\") })\n+    public void removeAllowAutoTopicCreationOverride(@PathParam(\"tenant\") String tenant, @PathParam(\"namespace\") String namespace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5aa45f870d879e80240be50b0775bbec892d6de"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzc5MDQwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwOTo0ODowOVrOF2d6gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwOTo0ODowOVrOF2d6gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY1NzUzNg==", "bodyText": "We'd better complete the asyncResponse when there are RunTimeException occurs. Otherwise, the client just can get a 500 response but can't get any error messages.", "url": "https://github.com/apache/pulsar/pull/6471#discussion_r392657536", "createdAt": "2020-03-15T09:48:09Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -554,6 +555,105 @@ protected void internalSetNamespaceMessageTTL(int messageTTL) {\n         }\n     }\n \n+    protected void internalSetAutoTopicCreationOverride(AsyncResponse asyncResponse, AutoTopicCreationOverride autoTopicCreationOverride) {\n+        validateAdminAccessForTenant(namespaceName.getTenant());\n+        validatePoliciesReadOnlyAccess();\n+\n+        if (!AutoTopicCreationOverride.isValidOverride(autoTopicCreationOverride)) {\n+            throw new RestException(Status.PRECONDITION_FAILED, \"Invalid configuration for autoTopicCreationOverride\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "423562b873fd7370756e01c94553311db282646b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzc5MDU2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwOTo0ODoyNlrOF2d6lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQwOTo0ODoyNlrOF2d6lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY1NzU1Nw==", "bodyText": "Same as above comment.", "url": "https://github.com/apache/pulsar/pull/6471#discussion_r392657557", "createdAt": "2020-03-15T09:48:26Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -554,6 +555,105 @@ protected void internalSetNamespaceMessageTTL(int messageTTL) {\n         }\n     }\n \n+    protected void internalSetAutoTopicCreationOverride(AsyncResponse asyncResponse, AutoTopicCreationOverride autoTopicCreationOverride) {\n+        validateAdminAccessForTenant(namespaceName.getTenant());\n+        validatePoliciesReadOnlyAccess();\n+\n+        if (!AutoTopicCreationOverride.isValidOverride(autoTopicCreationOverride)) {\n+            throw new RestException(Status.PRECONDITION_FAILED, \"Invalid configuration for autoTopicCreationOverride\");\n+        }\n+\n+        // Force to read the data s.t. the watch to the cache content is setup.\n+        policiesCache().getWithStatAsync(path(POLICIES, namespaceName.toString())).thenApply(\n+                policies -> {\n+                    if (policies.isPresent()) {\n+                        Entry<Policies, Stat> policiesNode = policies.get();\n+                        policiesNode.getKey().autoTopicCreationOverride = autoTopicCreationOverride;\n+                        try {\n+                            // Write back the new policies into zookeeper\n+                            globalZk().setData(path(POLICIES, namespaceName.toString()),\n+                                    jsonMapper().writeValueAsBytes(policiesNode.getKey()), policiesNode.getValue().getVersion());\n+                            policiesCache().invalidate(path(POLICIES, namespaceName.toString()));\n+                            asyncResponse.resume(Response.noContent().build());\n+                            log.info(\"[{}] Successfully {} on namespace {}\", clientAppId(),\n+                                    autoTopicCreationOverride.allowAutoTopicCreation ? \"enabled\" : \"disabled\", namespaceName);\n+                            return null;\n+                        } catch (KeeperException.NoNodeException e) {\n+                            log.error(\"[{}] Failed to modify autoTopicCreation status for namespace {}: does not exist\", clientAppId(),\n+                                    namespaceName);\n+                            asyncResponse.resume(new RestException(Status.NOT_FOUND, \"Namespace does not exist\"));\n+                            return null;\n+                        } catch (KeeperException.BadVersionException e) {\n+                            log.error(\n+                                    \"[{}] Failed to modify autoTopicCreation status on namespace {} expected policy node version={} : concurrent modification\",\n+                                    clientAppId(), namespaceName, policiesNode.getValue().getVersion());\n+\n+                            asyncResponse.resume(new RestException(Status.CONFLICT, \"Concurrent modification\"));\n+                            return null;\n+                        } catch (Exception e) {\n+                            log.error(\"[{}] Failed to modify autoTopicCreation status on namespace {}\", clientAppId(), namespaceName, e);\n+                            asyncResponse.resume(new RestException(e));\n+                            return null;\n+                        }\n+                    } else {\n+                        asyncResponse.resume(new RestException(Status.NOT_FOUND, \"Namespace \" + namespaceName + \" does not exist\"));\n+                        return null;\n+                    }\n+                }\n+        ).exceptionally(e -> {\n+            log.error(\"[{}] Failed to modify autoTopicCreation status on namespace {}\", clientAppId(), namespaceName, e);\n+            asyncResponse.resume(new RestException(e));\n+            return null;\n+        });\n+    }\n+\n+    protected void internalRemoveAutoTopicCreationOverride(AsyncResponse asyncResponse) {\n+        validateAdminAccessForTenant(namespaceName.getTenant());\n+        validatePoliciesReadOnlyAccess();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "423562b873fd7370756e01c94553311db282646b"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1922, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}