{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Nzc2ODA0", "number": 7473, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDoyNTowNFrOEMg4KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDoyNTowNFrOEMg4KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTU3MDMzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentReplicator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDoyNTowNFrOGuqpbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDozNTo0NVrOGu4T2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4NjQxMg==", "bodyText": "Since we're treating it as a \"success\" case here, another option would be to have the close request to return \"ok\" when closing a non-existing producer. what do you think?", "url": "https://github.com/apache/pulsar/pull/7473#discussion_r451586412", "createdAt": "2020-07-08T14:25:04Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentReplicator.java", "diffHunk": "@@ -760,11 +761,13 @@ private void checkReplicatedSubscriptionMarker(Position position, MessageImpl<?>\n         final CompletableFuture<Void> future = new CompletableFuture<>();\n \n         super.disconnect(failIfHasBacklog).thenRun(() -> {\n-            dispatchRateLimiter.ifPresent(DispatchRateLimiter::close);\n-            future.complete(null);\n+            cleanAfterDisconnect(future);\n         }).exceptionally(ex -> {\n             Throwable t = (ex instanceof CompletionException ? ex.getCause() : ex);\n-            if (t instanceof TopicBusyException == false) {\n+            if (t instanceof AlreadyClosedException) {\n+                cleanAfterDisconnect(future);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "972ae3e1d179ad491506302a230dddceaa9651f6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxMDI2NA==", "bodyText": "@merlimat Yes, I don't see any issue by returning success on non-existing producer or consumer. I made that change. Can you please review it again.", "url": "https://github.com/apache/pulsar/pull/7473#discussion_r451810264", "createdAt": "2020-07-08T20:35:45Z", "author": {"login": "rdhabalia"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentReplicator.java", "diffHunk": "@@ -760,11 +761,13 @@ private void checkReplicatedSubscriptionMarker(Position position, MessageImpl<?>\n         final CompletableFuture<Void> future = new CompletableFuture<>();\n \n         super.disconnect(failIfHasBacklog).thenRun(() -> {\n-            dispatchRateLimiter.ifPresent(DispatchRateLimiter::close);\n-            future.complete(null);\n+            cleanAfterDisconnect(future);\n         }).exceptionally(ex -> {\n             Throwable t = (ex instanceof CompletionException ? ex.getCause() : ex);\n-            if (t instanceof TopicBusyException == false) {\n+            if (t instanceof AlreadyClosedException) {\n+                cleanAfterDisconnect(future);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4NjQxMg=="}, "originalCommit": {"oid": "972ae3e1d179ad491506302a230dddceaa9651f6"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2434, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}