{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzOTY1OTg2", "number": 6074, "title": "PIP-55: Refresh Authentication Credentials", "bodyText": "Motivation\nImplemented the authentication refreshing functionality.\nNotes:\n\nWorks with mutual auth providers\nWorks through Pulsar proxy (when client credentials are forwarded to broker)", "createdAt": "2020-01-17T05:06:34Z", "url": "https://github.com/apache/pulsar/pull/6074", "merged": true, "mergeCommit": {"oid": "4af5223f4a101f40d45263c5b7aac7728f93f684"}, "closed": true, "closedAt": "2020-02-10T16:59:19Z", "author": {"login": "merlimat"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7HiJxAH2gAyMzYzOTY1OTg2OjBjMzU2ZDY2NjcyYTlmMjBlM2E1MjUzMDk4MDdiOTJkNDFiMjRlYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBPrhNgH2gAyMzYzOTY1OTg2OmUxMGIwMzhmMzJiMWYzMDdiYjlkMjI3ODlkNzU1MmNhNmE2MzIxNWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0c356d66672a9f20e3a525309807b92d41b24ea7", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/0c356d66672a9f20e3a525309807b92d41b24ea7", "committedDate": "2020-01-17T05:03:06Z", "message": "PIP-55: Refresh Authentication Credentials"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MzY3MzA1", "url": "https://github.com/apache/pulsar/pull/6074#pullrequestreview-344367305", "createdAt": "2020-01-17T05:14:46Z", "commit": {"oid": "0c356d66672a9f20e3a525309807b92d41b24ea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNToxNDo0NlrOFevCvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNToxNDo0NlrOFevCvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MjM1MA==", "bodyText": "I think this needs to be marked volatile?", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r367772350", "createdAt": "2020-01-17T05:14:46Z", "author": {"login": "jerrypeng"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -127,6 +127,10 @@\n     AuthenticationDataSource authenticationData;\n     AuthenticationProvider authenticationProvider;\n     AuthenticationState authState;\n+    // In case of proxy, if the authentication credentials are forwardable,\n+    // it will hold the credentials of the original client\n+    AuthenticationState originalAuthState;\n+    private boolean pendingAuthChallengeResponse = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c356d66672a9f20e3a525309807b92d41b24ea7"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c19830825e187c3e2907cd6538e5951a98bf1b96", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/c19830825e187c3e2907cd6538e5951a98bf1b96", "committedDate": "2020-01-17T05:39:10Z", "message": "Fixed import order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd0fb7b0ff3989b74bd8cc6dddce87c8fdbcbcd", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/1dd0fb7b0ff3989b74bd8cc6dddce87c8fdbcbcd", "committedDate": "2020-01-17T06:06:13Z", "message": "Do not check for original client credential if it's not coming through proxy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "d07a9266226639388672d87cca42ca2fbfe53cb8", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/d07a9266226639388672d87cca42ca2fbfe53cb8", "committedDate": "2020-01-17T19:29:04Z", "message": "Fixed import order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "d07a9266226639388672d87cca42ca2fbfe53cb8", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/d07a9266226639388672d87cca42ca2fbfe53cb8", "committedDate": "2020-01-17T19:29:04Z", "message": "Fixed import order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/e5e1fbba000b4327e14c8365b2fffecd8d803f35", "committedDate": "2020-01-17T20:09:35Z", "message": "Fixed mocked test assumption"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MzkwOTA5", "url": "https://github.com/apache/pulsar/pull/6074#pullrequestreview-346390909", "createdAt": "2020-01-22T07:41:55Z", "commit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTE1Mzc2", "url": "https://github.com/apache/pulsar/pull/6074#pullrequestreview-347115376", "createdAt": "2020-01-23T08:11:33Z", "commit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODoxMTozNFrOFg1mBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwODozNTo1NlrOFg2Jug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3NjgzOA==", "bodyText": "nit: Why not set to Long.MAX_VALUE and make the check simpler?", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r369976838", "createdAt": "2020-01-23T08:11:34Z", "author": {"login": "ivankelly"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationProviderToken.java", "diffHunk": "@@ -166,4 +179,61 @@ private SignatureAlgorithm getPublicKeyAlgType(ServiceConfiguration conf) throws\n             return SignatureAlgorithm.RS256;\n         }\n     }\n+\n+    private static final class TokenAuthenticationState implements AuthenticationState {\n+        private final AuthenticationProviderToken provider;\n+        private AuthenticationDataSource authenticationDataSource;\n+        private Jwt<?, Claims> jwt;\n+        private final SocketAddress remoteAddress;\n+        private final SSLSession sslSession;\n+        private long expiration;\n+\n+        TokenAuthenticationState(\n+                AuthenticationProviderToken provider,\n+                AuthData authData,\n+                SocketAddress remoteAddress,\n+                SSLSession sslSession) throws AuthenticationException {\n+            this.provider = provider;\n+            this.remoteAddress = remoteAddress;\n+            this.sslSession = sslSession;\n+            this.authenticate(authData);\n+        }\n+\n+        @Override\n+        public String getAuthRole() throws AuthenticationException {\n+            return provider.getPrincipal(jwt);\n+        }\n+\n+        @Override\n+        public AuthData authenticate(AuthData authData) throws AuthenticationException {\n+            String token = new String(authData.getBytes(), UTF_8);\n+\n+            this.jwt = provider.authenticateToken(token);\n+            this.authenticationDataSource = new AuthenticationDataCommand(token, remoteAddress, sslSession);\n+            if (jwt.getBody().getExpiration() != null) {\n+                this.expiration = jwt.getBody().getExpiration().getTime();\n+            } else {\n+                this.expiration = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk3ODgwMg==", "bodyText": "nit: Why not Cache<ServerCnx, ServerCnx> and avoid possibly allocating the SocketAddress? We don't care about the keys in any case. Maybe add a comment that the you're using Cache to avoid having to clean stuff up.", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r369978802", "createdAt": "2020-01-23T08:17:20Z", "author": {"login": "ivankelly"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PulsarChannelInitializer.java", "diffHunk": "@@ -38,6 +48,11 @@\n     private final NettySslContextBuilder sslCtxRefresher;\n     private final ServiceConfiguration brokerConf;\n \n+    private final Cache<SocketAddress, ServerCnx> connections = Caffeine.newBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MDAyMA==", "bodyText": "Since you're using Cache to hold the connections, and the lifetime of the entry in connections is based on whether it's been GC'd, this will likely spam the logs. Maybe only log if after throwing, the cnx is still in connected state.", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r369980020", "createdAt": "2020-01-23T08:20:53Z", "author": {"login": "ivankelly"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PulsarChannelInitializer.java", "diffHunk": "@@ -78,6 +97,19 @@ protected void initChannel(SocketChannel ch) throws Exception {\n         // ServerCnx ends up reading higher number of messages and broker can not throttle the messages by disabling\n         // auto-read.\n         ch.pipeline().addLast(\"flowController\", new FlowControlHandler());\n-        ch.pipeline().addLast(\"handler\", new ServerCnx(pulsar));\n+        ServerCnx cnx = new ServerCnx(pulsar);\n+        ch.pipeline().addLast(\"handler\", cnx);\n+\n+        connections.put(ch.remoteAddress(), cnx);\n+    }\n+\n+    private void refreshAuthenticationCredentials() {\n+        connections.asMap().values().forEach(cnx -> {\n+            try {\n+                cnx.refreshAuthenticationCredentials();\n+            } catch (Throwable t) {\n+                log.warn(\"[{}] Failed to refresh auth credentials\", cnx.getRemoteAddress());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4MjQyNg==", "bodyText": "This comment is now wrong. I think the flow should change a little here, to only call completeConnect if it's the initial auth. There seems to be enough difference in the flows to have them completely separate.", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r369982426", "createdAt": "2020-01-23T08:27:14Z", "author": {"login": "ivankelly"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -476,19 +473,42 @@ private void completeConnect(int clientProtoVersion, String clientVersion) {\n     }\n \n     // According to auth result, send newConnected or newAuthChallenge command.\n-    private void doAuthentication(AuthData clientData,\n-                                  int clientProtocolVersion,\n-                                  String clientVersion) throws Exception {\n+    private State doAuthentication(AuthData clientData,\n+                                   int clientProtocolVersion,\n+                                   String clientVersion) throws Exception {\n+\n+        // The original auth state can only be set on subsequent auth attempts (and only\n+        // in presence of a proxy and if the proxy is forwarding the credentials).\n+        // In this case, the re-validation needs to be done against the original client\n+        // credentials.\n+        boolean useOriginalAuthState = (originalAuthState != null);\n+        AuthenticationState authState =  useOriginalAuthState ? originalAuthState : this.authState;\n+        String authRole = useOriginalAuthState ? originalPrincipal : this.authRole;\n         AuthData brokerData = authState.authenticate(clientData);\n+\n         // authentication has completed, will send newConnected command.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4Mzc1OQ==", "bodyText": "not for this patch, but it seems strange that this is a synchronous call, given that authentication could be calling out to a remote system.", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r369983759", "createdAt": "2020-01-23T08:30:22Z", "author": {"login": "ivankelly"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -551,29 +624,46 @@ protected void handleConnect(CommandConnect connect) {\n             if (sslHandler != null) {\n                 sslSession = ((SslHandler) sslHandler).engine().getSession();\n             }\n-            originalPrincipal = getOriginalPrincipal(\n-                connect.hasOriginalAuthData() ? connect.getOriginalAuthData() : null,\n-                connect.hasOriginalAuthMethod() ? connect.getOriginalAuthMethod() : null,\n-                connect.hasOriginalPrincipal() ? connect.getOriginalPrincipal() : null,\n-                sslSession);\n \n             authState = authenticationProvider.newAuthState(clientData, remoteAddress, sslSession);\n             authenticationData = authState.getAuthDataSource();\n-            doAuthentication(clientData, clientProtocolVersion, clientVersion);\n+            state = doAuthentication(clientData, clientProtocolVersion, clientVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4NTk3OA==", "bodyText": "why a feature flag rather than bumping the version? Because some auth will not support reauth?", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r369985978", "createdAt": "2020-01-23T08:35:56Z", "author": {"login": "ivankelly"}, "path": "pulsar-common/src/main/proto/PulsarApi.proto", "diffHunk": "@@ -235,6 +235,12 @@ message CommandConnect {\n     optional string original_auth_data = 8;\n     optional string original_auth_method = 9;\n \n+    // Feature flags\n+    optional FeatureFlags feature_flags = 10;\n+}\n+\n+message FeatureFlags {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8e885404799d0fc637fef63c94fecae864075d4", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/d8e885404799d0fc637fef63c94fecae864075d4", "committedDate": "2020-01-24T21:29:33Z", "message": "Addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQzMTAz", "url": "https://github.com/apache/pulsar/pull/6074#pullrequestreview-348243103", "createdAt": "2020-01-24T21:46:23Z", "commit": {"oid": "d8e885404799d0fc637fef63c94fecae864075d4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0NjoyNFrOFhrTEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowNzo1N1rOFhrwGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NjcyMA==", "bodyText": "we should disable it by default.", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r370856720", "createdAt": "2020-01-24T21:46:24Z", "author": {"login": "rdhabalia"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -660,6 +660,12 @@\n     )\n     private Set<String> authenticationProviders = Sets.newTreeSet();\n \n+    @FieldContext(\n+        category = CATEGORY_AUTHENTICATION,\n+        doc = \"Interval of time for checking for expired authentication credentials\"\n+    )\n+    private int authenticationRefreshCheckSeconds = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e885404799d0fc637fef63c94fecae864075d4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MTc2NA==", "bodyText": "adding FeatureFlags makes sense. \ud83d\udc4d", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r370861764", "createdAt": "2020-01-24T22:00:51Z", "author": {"login": "rdhabalia"}, "path": "pulsar-common/src/main/proto/PulsarApi.proto", "diffHunk": "@@ -235,6 +235,12 @@ message CommandConnect {\n     optional string original_auth_data = 8;\n     optional string original_auth_method = 9;\n \n+    // Feature flags\n+    optional FeatureFlags feature_flags = 10;\n+}\n+\n+message FeatureFlags {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk4NTk3OA=="}, "originalCommit": {"oid": "e5e1fbba000b4327e14c8365b2fffecd8d803f35"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2NDE1Mg==", "bodyText": "if client doesn't support then let's not change the behavior and don't close the connection, because closing connection will interrupt the client side processing and it requires them to upgrade client lib immediately if client wants to fix auto disconnect. So, we don't want our client to complain for such changed behavior which requires them to upgrade client lib.", "url": "https://github.com/apache/pulsar/pull/6074#discussion_r370864152", "createdAt": "2020-01-24T22:07:57Z", "author": {"login": "rdhabalia"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java", "diffHunk": "@@ -497,8 +523,60 @@ private void doAuthentication(AuthData clientData,\n             log.debug(\"[{}] Authentication in progress client by method {}.\",\n                 remoteAddress, authMethod);\n         }\n-        state = State.Connecting;\n-        return;\n+        return State.Connecting;\n+    }\n+\n+    public void refreshAuthenticationCredentials() {\n+        if (getState() != State.Connected || !isActive) {\n+            // Connection is either still being established or already closed.\n+            return;\n+        }\n+\n+        AuthenticationState authState = this.originalAuthState != null ? originalAuthState : this.authState;\n+        if (authState != null && !authState.isExpired()) {\n+            // Credentials are still valid. Nothing to do at this point\n+            return;\n+        }\n+\n+        if (originalPrincipal != null && originalAuthState == null) {\n+            log.info(\n+                    \"[{}] Cannot revalidate user credential when using proxy and not forwarding the credentials. Closing connection\",\n+                    remoteAddress);\n+            return;\n+        }\n+\n+        ctx.executor().execute(SafeRun.safeRun(() -> {\n+            log.info(\"[{}] Refreshing authentication credentials\", remoteAddress);\n+\n+            if (!supportsAuthenticationRefresh()) {\n+                log.warn(\"[{}] Closing connection because client doesn't support auth credentials refresh\", remoteAddress);\n+                ctx.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e885404799d0fc637fef63c94fecae864075d4"}, "originalPosition": 154}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NzYwMTU2", "url": "https://github.com/apache/pulsar/pull/6074#pullrequestreview-348760156", "createdAt": "2020-01-27T15:40:43Z", "commit": {"oid": "d8e885404799d0fc637fef63c94fecae864075d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNDgwNDgz", "url": "https://github.com/apache/pulsar/pull/6074#pullrequestreview-353480483", "createdAt": "2020-02-05T05:55:05Z", "commit": {"oid": "d8e885404799d0fc637fef63c94fecae864075d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e10b038f32b1f307bb9d22789d7552ca6a63215a", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/e10b038f32b1f307bb9d22789d7552ca6a63215a", "committedDate": "2020-02-05T05:56:07Z", "message": "Avoid to print NPE on auth refresh check if auth is disabled"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1476, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}