{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjAxOTc4", "number": 7236, "title": "Fixed readers backlog stats after data is skipped", "bodyText": "Motivation\nThe metrics for the reader backlog keep increasing when data is dropped because the reader cursor only moves on the next read attempt.\nInstead we should proactively move the cursor forward on the first valid ledger.", "createdAt": "2020-06-10T17:33:11Z", "url": "https://github.com/apache/pulsar/pull/7236", "merged": true, "mergeCommit": {"oid": "6b9c90ff89f541e84662292d450f628597c4b95a"}, "closed": true, "closedAt": "2020-06-16T01:25:47Z", "author": {"login": "merlimat"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp9I_CAH2gAyNDMyNjAxOTc4OmM3YjcxNDAwZTIxN2U0NzE1NzAyM2ViMzllYzFmZGFkZTQyYTQ2NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrXNCcgFqTQzMDI4NzM3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c7b71400e217e47157023eb39ec1fdade42a4663", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/c7b71400e217e47157023eb39ec1fdade42a4663", "committedDate": "2020-06-10T17:31:00Z", "message": "Fixed readers backlog after data is skipped"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fee69014fdce3d6fb3eddb89a4f7fb9a792481d2", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/fee69014fdce3d6fb3eddb89a4f7fb9a792481d2", "committedDate": "2020-06-10T17:50:42Z", "message": "Fixed merge error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTA2NzEz", "url": "https://github.com/apache/pulsar/pull/7236#pullrequestreview-428506713", "createdAt": "2020-06-11T00:02:16Z", "commit": {"oid": "fee69014fdce3d6fb3eddb89a4f7fb9a792481d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTI5MTI5", "url": "https://github.com/apache/pulsar/pull/7236#pullrequestreview-428529129", "createdAt": "2020-06-11T01:16:12Z", "commit": {"oid": "fee69014fdce3d6fb3eddb89a4f7fb9a792481d2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMToxNjoxMlrOGiLUyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMToyMTo1NlrOGiLaVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5MDMxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    long firstNonDeletedLedger = ledgers\n          \n          \n            \n                            .ceilingKey(ledgersToDelete.get(ledgersToDelete.size() - 1).getLedgerId() + 1);\n          \n          \n            \n                    long firstNonDeletedLedger = ledgers\n          \n          \n            \n                            .higherKey(ledgersToDelete.get(ledgersToDelete.size() - 1).getLedgerId());", "url": "https://github.com/apache/pulsar/pull/7236#discussion_r438490315", "createdAt": "2020-06-11T01:16:12Z", "author": {"login": "codelipenghui"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -2125,6 +2128,37 @@ public void operationFailed(MetaStoreException e) {\n         }\n     }\n \n+    /**\n+     * Non-durable cursors have to be moved forward when data is trimmed since they are not retain that data.\n+     * This is to make sure that the `consumedEntries` counter is correctly updated with the number of skipped\n+     * entries and the stats are reported correctly.\n+     */\n+    private void advanceNonDurableCursors(List<LedgerInfo> ledgersToDelete) {\n+        if (ledgersToDelete.isEmpty()) {\n+            return;\n+        }\n+\n+        long firstNonDeletedLedger = ledgers\n+                .ceilingKey(ledgersToDelete.get(ledgersToDelete.size() - 1).getLedgerId() + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee69014fdce3d6fb3eddb89a4f7fb9a792481d2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5MDU3Ng==", "bodyText": "Shall we need to add check for non-durable cursor?", "url": "https://github.com/apache/pulsar/pull/7236#discussion_r438490576", "createdAt": "2020-06-11T01:17:14Z", "author": {"login": "codelipenghui"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -2125,6 +2128,37 @@ public void operationFailed(MetaStoreException e) {\n         }\n     }\n \n+    /**\n+     * Non-durable cursors have to be moved forward when data is trimmed since they are not retain that data.\n+     * This is to make sure that the `consumedEntries` counter is correctly updated with the number of skipped\n+     * entries and the stats are reported correctly.\n+     */\n+    private void advanceNonDurableCursors(List<LedgerInfo> ledgersToDelete) {\n+        if (ledgersToDelete.isEmpty()) {\n+            return;\n+        }\n+\n+        long firstNonDeletedLedger = ledgers\n+                .ceilingKey(ledgersToDelete.get(ledgersToDelete.size() - 1).getLedgerId() + 1);\n+        PositionImpl highestPositionToDelete = new PositionImpl(firstNonDeletedLedger, -1);\n+\n+        cursors.forEach(cursor -> {\n+            if (highestPositionToDelete.compareTo((PositionImpl) cursor.getMarkDeletedPosition()) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee69014fdce3d6fb3eddb89a4f7fb9a792481d2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5MTczNQ==", "bodyText": "Why durable cursor has 5 backlogs, non-durable cursor has 6 backlogs? Shouldn't they be the same?", "url": "https://github.com/apache/pulsar/pull/7236#discussion_r438491735", "createdAt": "2020-06-11T01:21:56Z", "author": {"login": "codelipenghui"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/NonDurableCursorTest.java", "diffHunk": "@@ -678,6 +681,48 @@ public void testGetSlowestConsumer() throws Exception {\n         ledger.close();\n     }\n \n+    @Test\n+    public void testBacklogStatsWhenDroppingData() throws Exception {\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) factory.open(\"testBacklogStatsWhenDroppingData\",\n+                new ManagedLedgerConfig().setMaxEntriesPerLedger(1));\n+        ManagedCursor c1 = ledger.openCursor(\"c1\");\n+        ManagedCursor nonDurableCursor = ledger.newNonDurableCursor(PositionImpl.earliest);\n+\n+        assertEquals(nonDurableCursor.getNumberOfEntries(), 0);\n+        assertEquals(nonDurableCursor.getNumberOfEntriesInBacklog(true), 0);\n+\n+        List<Position> positions = Lists.newArrayList();\n+        for (int i = 0; i < 10; i++) {\n+            positions.add(ledger.addEntry((\"entry-\" + i).getBytes(UTF_8)));\n+        }\n+\n+        assertEquals(nonDurableCursor.getNumberOfEntries(), 10);\n+        assertEquals(nonDurableCursor.getNumberOfEntriesInBacklog(true), 10);\n+\n+        c1.markDelete(positions.get(4));\n+        assertEquals(c1.getNumberOfEntries(), 5);\n+        assertEquals(c1.getNumberOfEntriesInBacklog(true), 5);\n+\n+        // Since the durable cursor has moved, the data will be trimmed\n+        CompletableFuture<Void> promise = new CompletableFuture<>();\n+        ledger.internalTrimConsumedLedgers(promise);\n+        promise.join();\n+\n+        assertEquals(nonDurableCursor.getNumberOfEntries(), 6);\n+        assertEquals(nonDurableCursor.getNumberOfEntriesInBacklog(true), 6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fee69014fdce3d6fb3eddb89a4f7fb9a792481d2"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff5b1d4162dcf285d78dbe7366fe5d14170cdcf8", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/ff5b1d4162dcf285d78dbe7366fe5d14170cdcf8", "committedDate": "2020-06-11T19:19:10Z", "message": "Update managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java\n\nCo-authored-by: lipenghui <penghui@apache.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjU2MjIz", "url": "https://github.com/apache/pulsar/pull/7236#pullrequestreview-429656223", "createdAt": "2020-06-12T11:08:07Z", "commit": {"oid": "ff5b1d4162dcf285d78dbe7366fe5d14170cdcf8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTY3MjAy", "url": "https://github.com/apache/pulsar/pull/7236#pullrequestreview-429967202", "createdAt": "2020-06-12T18:50:10Z", "commit": {"oid": "ff5b1d4162dcf285d78dbe7366fe5d14170cdcf8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMjg3Mzc3", "url": "https://github.com/apache/pulsar/pull/7236#pullrequestreview-430287377", "createdAt": "2020-06-15T02:26:53Z", "commit": {"oid": "ff5b1d4162dcf285d78dbe7366fe5d14170cdcf8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 655, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}