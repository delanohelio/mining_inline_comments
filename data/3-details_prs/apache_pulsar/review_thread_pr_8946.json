{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MDY1NzU5", "number": 8946, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMzoyMjowNVrOFEyGUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDowOTo1NlrOFIuFBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTU5NDQyOnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMzoyMjowNVrOIE-Rdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzoyMDoxNVrOIFQEfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4NTQ5NA==", "bodyText": "I think it would be better to separate the timing task of checking that current ledger is full from scheduleTimeoutTask and put it in the ledger initialize method.", "url": "https://github.com/apache/pulsar/pull/8946#discussion_r542085494", "createdAt": "2020-12-14T03:22:05Z", "author": {"login": "wuzhanpeng"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -3300,6 +3305,13 @@ private void scheduleTimeoutTask() {\n                 checkReadTimeout();\n             }), timeoutSec, timeoutSec, TimeUnit.SECONDS);\n         }\n+\n+        if (config.getMaximumRolloverTimeMs() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4b411912691e8e9dc54493a01d0df483a810251"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM3NzA4NA==", "bodyText": "Ok, I move it into individual method.", "url": "https://github.com/apache/pulsar/pull/8946#discussion_r542377084", "createdAt": "2020-12-14T13:20:15Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -3300,6 +3305,13 @@ private void scheduleTimeoutTask() {\n                 checkReadTimeout();\n             }), timeoutSec, timeoutSec, TimeUnit.SECONDS);\n         }\n+\n+        if (config.getMaximumRolloverTimeMs() > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4NTQ5NA=="}, "originalCommit": {"oid": "c4b411912691e8e9dc54493a01d0df483a810251"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0Njg3ODc4OnYy", "diffSide": "LEFT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedLedger.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMDowOTo1NlrOIKzRPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMToyMjowN1rOIK8ELQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE5NjY2OQ==", "bodyText": "@hangc0276 we shouldn't remove a method from an interface directly. we should keep the method and mark it as deprecated.", "url": "https://github.com/apache/pulsar/pull/8946#discussion_r548196669", "createdAt": "2020-12-23T20:09:56Z", "author": {"login": "sijie"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedLedger.java", "diffHunk": "@@ -515,9 +515,4 @@ void asyncSetProperties(Map<String, String> properties, final AsyncCallbacks.Upd\n      * @param promise\n      */\n     void trimConsumedLedgersInBackground(CompletableFuture<?> promise);\n-\n-    /**\n-     * Roll current ledger if it is full\n-     */\n-    void rollCurrentLedgerIfFull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fce8e3b33b01f07da65fc424b080004756e3890"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM0MDc4MQ==", "bodyText": "Ok, i move it back.", "url": "https://github.com/apache/pulsar/pull/8946#discussion_r548340781", "createdAt": "2020-12-24T01:22:07Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedLedger.java", "diffHunk": "@@ -515,9 +515,4 @@ void asyncSetProperties(Map<String, String> properties, final AsyncCallbacks.Upd\n      * @param promise\n      */\n     void trimConsumedLedgersInBackground(CompletableFuture<?> promise);\n-\n-    /**\n-     * Roll current ledger if it is full\n-     */\n-    void rollCurrentLedgerIfFull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE5NjY2OQ=="}, "originalCommit": {"oid": "7fce8e3b33b01f07da65fc424b080004756e3890"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2691, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}