{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Njc2Njk4", "number": 6178, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0NDo0MVrODcVuYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowOTozM1rODfuqjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDQyNjU3OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxOTo0NDo0MVrOFkWBSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwMjo0OToyMlrOFkf3SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MzgzNQ==", "bodyText": "This would become a contention point across all the threads in the broker", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r373653835", "createdAt": "2020-01-31T19:44:41Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -2009,4 +2025,49 @@ public ConfigField(Field field) {\n             return Optional.empty();\n         }\n     }\n+\n+    private void enableTopicsAutoRead() {\n+        topics.values().forEach(future -> {\n+            if (future.isDone() && !future.isCompletedExceptionally()) {\n+                try {\n+                    future.get().ifPresent(Topic::enableProducerRead);\n+                } catch (InterruptedException | ExecutionException e) {\n+                   // no-op\n+                }\n+            }\n+        });\n+    }\n+\n+    @VisibleForTesting\n+    boolean increasePublishBufferSizeAndCheckStopRead(int msgSize) {\n+        if (maxMessagePublishBufferSize < 0) {\n+            return false;\n+        }\n+        if (currentMessagePublishBufferSize.addAndGet(msgSize) >= maxMessagePublishBufferSize &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ce1f44ccfdca31ef473aaac5a09484d2caeeeac"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxNTExMw==", "bodyText": "@merlimat Yes, this does increase competition, how about move currentMessagePublishBufferSize to ServerCnx and periodically sync them to totalMessagePublishBufferSize in BrokerService by a single thread?\nOf course this will cause delays, but it will reduce competition.", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r373815113", "createdAt": "2020-02-02T02:49:22Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -2009,4 +2025,49 @@ public ConfigField(Field field) {\n             return Optional.empty();\n         }\n     }\n+\n+    private void enableTopicsAutoRead() {\n+        topics.values().forEach(future -> {\n+            if (future.isDone() && !future.isCompletedExceptionally()) {\n+                try {\n+                    future.get().ifPresent(Topic::enableProducerRead);\n+                } catch (InterruptedException | ExecutionException e) {\n+                   // no-op\n+                }\n+            }\n+        });\n+    }\n+\n+    @VisibleForTesting\n+    boolean increasePublishBufferSizeAndCheckStopRead(int msgSize) {\n+        if (maxMessagePublishBufferSize < 0) {\n+            return false;\n+        }\n+        if (currentMessagePublishBufferSize.addAndGet(msgSize) >= maxMessagePublishBufferSize &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY1MzgzNQ=="}, "originalCommit": {"oid": "7ce1f44ccfdca31ef473aaac5a09484d2caeeeac"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk0NzQ2OnYy", "diffSide": "RIGHT", "path": "conf/broker.conf", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1ODozMVrOFpmfTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1ODozMVrOFpmfTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NjU0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            messagePublishBufferCheckIntervalInMills=100\n          \n          \n            \n            messagePublishBufferCheckIntervalInMillis=100", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379166541", "createdAt": "2020-02-13T22:58:31Z", "author": {"login": "sijie"}, "path": "conf/broker.conf", "diffHunk": "@@ -324,6 +324,18 @@ replicatedSubscriptionsSnapshotTimeoutSeconds=30\n # Max number of snapshot to be cached per subscription.\n replicatedSubscriptionsSnapshotMaxCachedPerSubscription=10\n \n+# Max memory size for broker handling messages sending from producers.\n+# If the processing message size exceed this value, broker will stop read data\n+# from the connection. The processing messages means messages are sends to broker\n+# but broker have not send response to client, usually waiting to write to bookies.\n+# It's shared across all the topics running in the same broker.\n+# Use -1 to disable the memory limitation. Default is 1/5 of direct memory.\n+maxMessagePublishBufferSizeInMB=\n+\n+# Interval between checks to see if message publish buffer size is exceed the max message publish buffer size\n+# Use 0 or negative number to disable the max publish buffer limiting.\n+messagePublishBufferCheckIntervalInMills=100", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk1NDgwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMTo1OFrOFpmj8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwMzoxMjozOFrOFqRh2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NzczMQ==", "bodyText": "The default value should be a value that makes the broker behave as close to the behavior without this code change. I understand we want to enable the rate-limiting feature. So we should try to make the default value as 60% and 70% of max direct memory? Otherwise, people might experience unexpected performance issues when they upgrade a broker from an old version to a newer version.", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379167731", "createdAt": "2020-02-13T23:01:58Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -603,6 +603,23 @@\n             doc = \"Max number of snapshot to be cached per subscription.\")\n     private int replicatedSubscriptionsSnapshotMaxCachedPerSubscription = 10;\n \n+    @FieldContext(\n+        category = CATEGORY_SERVER,\n+        doc = \"Max memory size for broker handling messages sending from producers.\\n\\n\"\n+            + \" If the processing message size exceed this value, broker will stop read data\"\n+            + \" from the connection. The processing messages means messages are sends to broker\"\n+            + \" but broker have not send response to client, usually waiting to write to bookies.\\n\\n\"\n+            + \" It's shared across all the topics running in the same broker.\\n\\n\"\n+            + \" Use -1 to disable the memory limitation. Default is 1/5 of direct memory.\\n\\n\")\n+    private int maxMessagePublishBufferSizeInMB = Math.max(64,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMjk1NA==", "bodyText": "Maybe we'd better keep the default value to -1.", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379402954", "createdAt": "2020-02-14T12:22:26Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -603,6 +603,23 @@\n             doc = \"Max number of snapshot to be cached per subscription.\")\n     private int replicatedSubscriptionsSnapshotMaxCachedPerSubscription = 10;\n \n+    @FieldContext(\n+        category = CATEGORY_SERVER,\n+        doc = \"Max memory size for broker handling messages sending from producers.\\n\\n\"\n+            + \" If the processing message size exceed this value, broker will stop read data\"\n+            + \" from the connection. The processing messages means messages are sends to broker\"\n+            + \" but broker have not send response to client, usually waiting to write to bookies.\\n\\n\"\n+            + \" It's shared across all the topics running in the same broker.\\n\\n\"\n+            + \" Use -1 to disable the memory limitation. Default is 1/5 of direct memory.\\n\\n\")\n+    private int maxMessagePublishBufferSizeInMB = Math.max(64,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NzczMQ=="}, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3MTcwNA==", "bodyText": "Changed the default buffer size to half of the direct memory.", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379871704", "createdAt": "2020-02-16T03:12:38Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -603,6 +603,23 @@\n             doc = \"Max number of snapshot to be cached per subscription.\")\n     private int replicatedSubscriptionsSnapshotMaxCachedPerSubscription = 10;\n \n+    @FieldContext(\n+        category = CATEGORY_SERVER,\n+        doc = \"Max memory size for broker handling messages sending from producers.\\n\\n\"\n+            + \" If the processing message size exceed this value, broker will stop read data\"\n+            + \" from the connection. The processing messages means messages are sends to broker\"\n+            + \" but broker have not send response to client, usually waiting to write to bookies.\\n\\n\"\n+            + \" It's shared across all the topics running in the same broker.\\n\\n\"\n+            + \" Use -1 to disable the memory limitation. Default is 1/5 of direct memory.\\n\\n\")\n+    private int maxMessagePublishBufferSizeInMB = Math.max(64,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NzczMQ=="}, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk1ODgxOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMzo1OVrOFpmmZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoyMzozNlrOFp08bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2ODM1Ng==", "bodyText": "We should create this executor only when the feature is enabled.\nAlso I see we are creating more and more schedulers. Can we consider reusing some of the executors?", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379168356", "createdAt": "2020-02-13T23:03:59Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -257,6 +268,8 @@ public BrokerService(PulsarService pulsar) throws Exception {\n                 .newSingleThreadScheduledExecutor(new DefaultThreadFactory(\"pulsar-msg-expiry-monitor\"));\n         this.compactionMonitor =\n             Executors.newSingleThreadScheduledExecutor(new DefaultThreadFactory(\"pulsar-compaction-monitor\"));\n+        this.messagePublishBufferMonitor =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMzM3NQ==", "bodyText": "Hmm, I think we need a different thread name. It's better for jstack analysis.", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379403375", "createdAt": "2020-02-14T12:23:36Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -257,6 +268,8 @@ public BrokerService(PulsarService pulsar) throws Exception {\n                 .newSingleThreadScheduledExecutor(new DefaultThreadFactory(\"pulsar-msg-expiry-monitor\"));\n         this.compactionMonitor =\n             Executors.newSingleThreadScheduledExecutor(new DefaultThreadFactory(\"pulsar-compaction-monitor\"));\n+        this.messagePublishBufferMonitor =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2ODM1Ng=="}, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk2NDY5OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowNjo1M1rOFpmqAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMjoyNDoyMVrOFp09og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2OTI4Mg==", "bodyText": "It seems to me that this variable doesn't have to be a class variable of BrokerService. It can just be a local variable, right?", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379169282", "createdAt": "2020-02-13T23:06:53Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -2011,4 +2033,34 @@ public ConfigField(Field field) {\n             return Optional.empty();\n         }\n     }\n+\n+    private void checkMessagePublishBuffer() {\n+        currentMessagePublishBufferSize = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMzY4Mg==", "bodyText": "Yes, it is.", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379403682", "createdAt": "2020-02-14T12:24:21Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -2011,4 +2033,34 @@ public ConfigField(Field field) {\n             return Optional.empty();\n         }\n     }\n+\n+    private void checkMessagePublishBuffer() {\n+        currentMessagePublishBufferSize = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2OTI4Mg=="}, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk2OTIxOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowOTowN1rOFpms1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowOTowN1rOFpms1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MDAwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private volatile boolean isMessagePublishBufferThreshold;\n          \n          \n            \n                private volatile boolean reachMessagePublishBufferThreshold;", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379170006", "createdAt": "2020-02-13T23:09:07Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -216,8 +218,17 @@\n     private Channel listenChannel;\n     private Channel listenChannelTls;\n \n+    private final long maxMessagePublishBufferSize;\n+    private final long resumeProducerReadMessagePublishBufferSize;\n+    private volatile long currentMessagePublishBufferSize;\n+    private volatile boolean isMessagePublishBufferThreshold;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk3MDA0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowOTozM1rOFpmtXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowOTozM1rOFpmtXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MDE0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private volatile long currentMessagePublishBufferSize;\n          \n          \n            \n                private volatile long currentMessagePublishBufferBytes;\n          \n      \n    \n    \n  \n\nI prefer using bytes rather than size to make the unit more explicit.", "url": "https://github.com/apache/pulsar/pull/6178#discussion_r379170140", "createdAt": "2020-02-13T23:09:33Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -216,8 +218,17 @@\n     private Channel listenChannel;\n     private Channel listenChannelTls;\n \n+    private final long maxMessagePublishBufferSize;\n+    private final long resumeProducerReadMessagePublishBufferSize;\n+    private volatile long currentMessagePublishBufferSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4be922c38e62054ae0c4270bdc09df1df579d3e"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2012, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}