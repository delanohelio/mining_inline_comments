{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMjk2MTc0", "number": 8552, "title": "Support topic-level DeduplicationSnapshotInterval", "bodyText": "Master Issue: #8237\nMotivation\nCurrently we take de-duplication snapshots based on size. If the topic has relatively low traffic, the de-duplication cursor will not move. This can cause messages that are not able to be deleted based on the retention policy. We should add a policy to take de-duplication snapshots based on time.\nModifications\nadd api get/set/remove topic-level DeduplicationSnapshotInterval\nVerifying this change\nTopicDuplicationTest.java", "createdAt": "2020-11-13T03:27:57Z", "url": "https://github.com/apache/pulsar/pull/8552", "merged": true, "mergeCommit": {"oid": "f8848c83656c25e27eaf5b2df2fa9d8626302227"}, "closed": true, "closedAt": "2020-11-16T18:19:12Z", "author": {"login": "315157973"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb-RopAH2gAyNTIwMjk2MTc0OmUyNTI0N2ZjMDgzMzM0MmQxMGZhYWEwYTg5ZjE4NGIwZTlkZThmMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddJH7vgFqTUzMTU4NTkyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e25247fc0833342d10faaa0a89f184b0e9de8f06", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/e25247fc0833342d10faaa0a89f184b0e9de8f06", "committedDate": "2020-11-13T03:06:34Z", "message": "support topic-level DeduplicationSnapshotInterval"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMDMxNTQ4", "url": "https://github.com/apache/pulsar/pull/8552#pullrequestreview-530031548", "createdAt": "2020-11-13T12:45:14Z", "commit": {"oid": "e25247fc0833342d10faaa0a89f184b0e9de8f06"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjo0NToxNFrOHys97Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjo0NToxNFrOHys97Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkyNzU5Nw==", "bodyText": "I have added awaitility dependency so that we can avoid use sleep in the test, for more details you can see #8557", "url": "https://github.com/apache/pulsar/pull/8552#discussion_r522927597", "createdAt": "2020-11-13T12:45:14Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/persistent/TopicDuplicationTest.java", "diffHunk": "@@ -92,6 +92,98 @@ public void testDuplicationApi() throws Exception {\n         assertNull(admin.topics().getDeduplicationEnabled(topicName));\n     }\n \n+    @Test(timeOut = 10000)\n+    public void testDuplicationSnapshotApi() throws Exception {\n+        final String topicName = testTopic + UUID.randomUUID().toString();\n+        admin.topics().createPartitionedTopic(topicName, 3);\n+        waitCacheInit(topicName);\n+        Integer interval = admin.topics().getDeduplicationSnapshotInterval(topicName);\n+        assertNull(interval);\n+\n+        admin.topics().setDeduplicationSnapshotInterval(topicName, 1024);\n+        for (int i = 0; i < 50; i++) {\n+            if (admin.topics().getDeduplicationSnapshotInterval(topicName) != null) {\n+                break;\n+            }\n+            Thread.sleep(100);\n+        }\n+        Assert.assertEquals(admin.topics().getDeduplicationSnapshotInterval(topicName).intValue(), 1024);\n+        admin.topics().removeDeduplicationSnapshotInterval(topicName);\n+        for (int i = 0; i < 50; i++) {\n+            if (admin.topics().getDeduplicationSnapshotInterval(topicName) == null) {\n+                break;\n+            }\n+            Thread.sleep(100);\n+        }\n+        assertNull(admin.topics().getDeduplicationSnapshotInterval(topicName));\n+    }\n+\n+    @Test(timeOut = 30000)\n+    private void testTopicPolicyTakeSnapshot() throws Exception {\n+        resetConfig();\n+        conf.setSystemTopicEnabled(true);\n+        conf.setTopicLevelPoliciesEnabled(true);\n+        conf.setBrokerDeduplicationEnabled(true);\n+        conf.setBrokerDeduplicationSnapshotFrequencyInSeconds(1);\n+        conf.setBrokerDeduplicationSnapshotIntervalSeconds(4);\n+        conf.setBrokerDeduplicationEntriesInterval(20000);\n+        super.internalCleanup();\n+        super.internalSetup();\n+        super.producerBaseSetup();\n+\n+        final String topicName = testTopic + UUID.randomUUID().toString();\n+        final String producerName = \"my-producer\";\n+        @Cleanup\n+        Producer<String> producer = pulsarClient\n+                .newProducer(Schema.STRING).topic(topicName).enableBatching(false).producerName(producerName).create();\n+        waitCacheInit(topicName);\n+        admin.topics().setDeduplicationSnapshotInterval(topicName, 1);\n+        admin.namespaces().setDeduplicationSnapshotInterval(myNamespace, 2);\n+\n+        int msgNum = 50;\n+        CountDownLatch countDownLatch = new CountDownLatch(msgNum);\n+        for (int i = 0; i < msgNum; i++) {\n+            producer.newMessage().value(\"msg\" + i).sendAsync().whenComplete((res, e) -> countDownLatch.countDown());\n+        }\n+        countDownLatch.await();\n+        PersistentTopic persistentTopic = (PersistentTopic) pulsar.getBrokerService().getTopicIfExists(topicName).get().get();\n+        long seqId = persistentTopic.getMessageDeduplication().highestSequencedPersisted.get(producerName);\n+        PositionImpl position = (PositionImpl) persistentTopic.getMessageDeduplication().getManagedCursor()\n+                .getManagedLedger().getLastConfirmedEntry();\n+        assertEquals(seqId, msgNum - 1);\n+        assertEquals(position.getEntryId(), msgNum - 1);\n+        //The first time, use topic-leve policies, 1 second delay + 1 second interval\n+        Thread.sleep(2000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e25247fc0833342d10faaa0a89f184b0e9de8f06"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fd175a768b041dc8967562879f0cc121484e474", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/4fd175a768b041dc8967562879f0cc121484e474", "committedDate": "2020-11-13T14:22:23Z", "message": "Merge branch 'master' into deduplication-topic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e56300d4a92637e00a5906b4088ddf92f7e0ab96", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/e56300d4a92637e00a5906b4088ddf92f7e0ab96", "committedDate": "2020-11-14T07:06:09Z", "message": "use Awaitility in unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8459b16812c1274652108bdceb3077cb56bd5585", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/8459b16812c1274652108bdceb3077cb56bd5585", "committedDate": "2020-11-14T07:19:05Z", "message": "fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTg1OTI2", "url": "https://github.com/apache/pulsar/pull/8552#pullrequestreview-531585926", "createdAt": "2020-11-16T18:18:51Z", "commit": {"oid": "8459b16812c1274652108bdceb3077cb56bd5585"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1055, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}