{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNjg0MTkw", "number": 8850, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyOToxNFrOFCKojQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyOToxNFrOFCKojQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODE1NjkzOnYy", "diffSide": "RIGHT", "path": "tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNzoyOToxNFrOIBKzlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoyNjoxNFrOICILMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5NjUzNA==", "bodyText": "Shall we dispose this object?", "url": "https://github.com/apache/pulsar/pull/8850#discussion_r538096534", "createdAt": "2020-12-08T07:29:14Z", "author": {"login": "eolivelli"}, "path": "tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java", "diffHunk": "@@ -0,0 +1,572 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.tests.integration;\n+\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+import lombok.Cleanup;\n+import org.apache.pulsar.client.admin.PulsarAdmin;\n+import org.apache.pulsar.client.admin.PulsarAdminException;\n+import org.apache.pulsar.client.api.*;\n+import org.apache.pulsar.client.impl.MessageImpl;\n+import org.apache.pulsar.client.impl.TopicMessageImpl;\n+import org.apache.pulsar.client.impl.crypto.MessageCryptoBc;\n+import org.apache.pulsar.common.api.EncryptionContext;\n+import org.apache.pulsar.common.api.proto.PulsarApi;\n+import org.apache.pulsar.common.compression.CompressionCodec;\n+import org.apache.pulsar.common.compression.CompressionCodecProvider;\n+import org.apache.pulsar.common.policies.data.TenantInfo;\n+import org.apache.pulsar.common.protocol.Commands;\n+import org.apache.pulsar.shaded.com.google.protobuf.v241.ByteString;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.testng.Assert.*;\n+import static org.testng.Assert.assertEquals;\n+\n+public class SimpleProducerConsumerTest {\n+    private static final Logger log = LoggerFactory.getLogger(SimpleProducerConsumerTest.class);\n+\n+    private PulsarContainer pulsarContainer;\n+    private URI lookupUrl;\n+    private PulsarClient pulsarClient;\n+\n+    @BeforeClass\n+    public void setup() throws PulsarClientException, URISyntaxException, PulsarAdminException {\n+        pulsarContainer = new PulsarContainer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb45da987f1a72ad4760b08c30012f78a3bfc1b2"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwMjAwMQ==", "bodyText": "Yes. Thanks.", "url": "https://github.com/apache/pulsar/pull/8850#discussion_r539102001", "createdAt": "2020-12-09T08:26:14Z", "author": {"login": "RobertIndie"}, "path": "tests/pulsar-client-all-shade-test/src/test/java/org/apache/pulsar/tests/integration/SimpleProducerConsumerTest.java", "diffHunk": "@@ -0,0 +1,572 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.tests.integration;\n+\n+import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+import lombok.Cleanup;\n+import org.apache.pulsar.client.admin.PulsarAdmin;\n+import org.apache.pulsar.client.admin.PulsarAdminException;\n+import org.apache.pulsar.client.api.*;\n+import org.apache.pulsar.client.impl.MessageImpl;\n+import org.apache.pulsar.client.impl.TopicMessageImpl;\n+import org.apache.pulsar.client.impl.crypto.MessageCryptoBc;\n+import org.apache.pulsar.common.api.EncryptionContext;\n+import org.apache.pulsar.common.api.proto.PulsarApi;\n+import org.apache.pulsar.common.compression.CompressionCodec;\n+import org.apache.pulsar.common.compression.CompressionCodecProvider;\n+import org.apache.pulsar.common.policies.data.TenantInfo;\n+import org.apache.pulsar.common.protocol.Commands;\n+import org.apache.pulsar.shaded.com.google.protobuf.v241.ByteString;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.Assert;\n+import org.testng.annotations.AfterClass;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.testng.Assert.*;\n+import static org.testng.Assert.assertEquals;\n+\n+public class SimpleProducerConsumerTest {\n+    private static final Logger log = LoggerFactory.getLogger(SimpleProducerConsumerTest.class);\n+\n+    private PulsarContainer pulsarContainer;\n+    private URI lookupUrl;\n+    private PulsarClient pulsarClient;\n+\n+    @BeforeClass\n+    public void setup() throws PulsarClientException, URISyntaxException, PulsarAdminException {\n+        pulsarContainer = new PulsarContainer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5NjUzNA=="}, "originalCommit": {"oid": "fb45da987f1a72ad4760b08c30012f78a3bfc1b2"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2661, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}