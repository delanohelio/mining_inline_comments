{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMTQ4MTcz", "number": 6717, "title": "Avoid prefetch too much data when offloading data to HDFS", "bodyText": "Fixes #6692\nMotivation\navoid prefetch too much data when offloading, which may lead to OOM;\nfix object not close issue, which is also mentioned by congbobo184 #6697\nExplain here the context, and why you're making that change. What is the problem you're trying to solve.\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (no)\nThe schema: (no)\nThe default values of configurations: (no)\nThe wire protocol: (no)\nThe rest endpoints: (no)\nThe admin cli options: (no)\nAnything that affects deployment: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-04-11T06:28:36Z", "url": "https://github.com/apache/pulsar/pull/6717", "merged": true, "mergeCommit": {"oid": "514b6af7586633424739cfc3c6131b0d0afec9e4"}, "closed": true, "closedAt": "2020-04-22T09:06:24Z", "author": {"login": "pheecian"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWflIlAH2gAyNDAyMTQ4MTczOmRlZjRhOTRhZDNlMDNjZjBkMDMyNjM0ZmI5MTAwNGJiOGM1YTVmMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ5cgjgFqTM5NzYzODA2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "def4a94ad3e03cf0d032634fb91004bb8c5a5f38", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/def4a94ad3e03cf0d032634fb91004bb8c5a5f38", "committedDate": "2020-04-11T06:20:02Z", "message": "fix filesystem offload oom based on https://github.com/apache/pulsar/pull/6697"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzQ0NDUz", "url": "https://github.com/apache/pulsar/pull/6717#pullrequestreview-391744453", "createdAt": "2020-04-11T07:31:33Z", "commit": {"oid": "def4a94ad3e03cf0d032634fb91004bb8c5a5f38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzozMTozM1rOGELLFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwNzozMTozM1rOGELLFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMDU1MA==", "bodyText": "chooseTread(leaderId) make sure the second time write will not be executed, so the task meaningless. I don't think it is a good idea to fix the issue.", "url": "https://github.com/apache/pulsar/pull/6717#discussion_r407030550", "createdAt": "2020-04-11T07:31:33Z", "author": {"login": "congbobo184"}, "path": "tiered-storage/file-system/src/main/java/org/apache/bookkeeper/mledger/offload/filesystem/impl/FileSystemManagedLedgerOffloader.java", "diffHunk": "@@ -188,12 +191,15 @@ public void run() {\n                 AtomicLong haveOffloadEntryNumber = new AtomicLong(0);\n                 long needToOffloadFirstEntryNumber = 0;\n                 CountDownLatch countDownLatch;\n+                //avoid prefetch too much data into memory\n+                ArrayBlockingQueue<Boolean> tasks = new ArrayBlockingQueue<>(PREFETCH_ROUNDS);\n                 do {\n                     long end = Math.min(needToOffloadFirstEntryNumber + ENTRIES_PER_READ - 1, readHandle.getLastAddConfirmed());\n                     log.debug(\"read ledger entries. start: {}, end: {}\", needToOffloadFirstEntryNumber, end);\n                     LedgerEntries ledgerEntriesOnce = readHandle.readAsync(needToOffloadFirstEntryNumber, end).get();\n+                    tasks.put(true);\n                     countDownLatch = new CountDownLatch(1);\n-                    assignmentScheduler.chooseThread(ledgerId).submit(new FileSystemWriter(ledgerEntriesOnce, dataWriter,\n+                    assignmentScheduler.chooseThread(ledgerId).submit(FileSystemWriter.create(ledgerEntriesOnce, dataWriter, tasks,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "def4a94ad3e03cf0d032634fb91004bb8c5a5f38"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzU1NTQ2", "url": "https://github.com/apache/pulsar/pull/6717#pullrequestreview-391755546", "createdAt": "2020-04-11T10:36:16Z", "commit": {"oid": "def4a94ad3e03cf0d032634fb91004bb8c5a5f38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMDozNjoxNlrOGEMNeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMDozNjoxNlrOGEMNeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NzU0NQ==", "bodyText": "the blockingQueue is to block the whole do while loop(to be precisely, the read and submit) Here, not try to limit fileSystemWriter. I understand that the FileSystemWriter will be executed orderly. My intention is to limit the whole do while loop because the do while loop((readAsync().get()) read data from ledger in advance too much too quickly(and lead to consume much memory), more than  FileSystemWriter Threads can handle timely. So read in advance, or put in other words, prefetch, should be controlled to some degree. So I introduce a blocking queue and hence a producer-consumer mock-up. the do while loop(read and submit) acts like a producer, the FileSystemWriter acts as a consumer. @congbobo184", "url": "https://github.com/apache/pulsar/pull/6717#discussion_r407047545", "createdAt": "2020-04-11T10:36:16Z", "author": {"login": "pheecian"}, "path": "tiered-storage/file-system/src/main/java/org/apache/bookkeeper/mledger/offload/filesystem/impl/FileSystemManagedLedgerOffloader.java", "diffHunk": "@@ -188,12 +191,15 @@ public void run() {\n                 AtomicLong haveOffloadEntryNumber = new AtomicLong(0);\n                 long needToOffloadFirstEntryNumber = 0;\n                 CountDownLatch countDownLatch;\n+                //avoid prefetch too much data into memory\n+                ArrayBlockingQueue<Boolean> tasks = new ArrayBlockingQueue<>(PREFETCH_ROUNDS);\n                 do {\n                     long end = Math.min(needToOffloadFirstEntryNumber + ENTRIES_PER_READ - 1, readHandle.getLastAddConfirmed());\n                     log.debug(\"read ledger entries. start: {}, end: {}\", needToOffloadFirstEntryNumber, end);\n                     LedgerEntries ledgerEntriesOnce = readHandle.readAsync(needToOffloadFirstEntryNumber, end).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "def4a94ad3e03cf0d032634fb91004bb8c5a5f38"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5295836f8c8914a60a05fa059546021f469d94f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c5295836f8c8914a60a05fa059546021f469d94f", "committedDate": "2020-04-12T07:42:08Z", "message": "use semaphore instead of blockqueue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc7294cf0b3525090e38d7175d4f03a7f0963026", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/bc7294cf0b3525090e38d7175d4f03a7f0963026", "committedDate": "2020-04-12T07:47:38Z", "message": "fix format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODU4NTcz", "url": "https://github.com/apache/pulsar/pull/6717#pullrequestreview-391858573", "createdAt": "2020-04-12T13:41:38Z", "commit": {"oid": "bc7294cf0b3525090e38d7175d4f03a7f0963026"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxMzo0MTozOFrOGEVg1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxMzo0MzoxNFrOGEVhuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzE5OTk1Ng==", "bodyText": "One per reading is ok, the PREFETCH_ROUNDS unnecessary to big.", "url": "https://github.com/apache/pulsar/pull/6717#discussion_r407199956", "createdAt": "2020-04-12T13:41:38Z", "author": {"login": "congbobo184"}, "path": "tiered-storage/file-system/src/main/java/org/apache/bookkeeper/mledger/offload/filesystem/impl/FileSystemManagedLedgerOffloader.java", "diffHunk": "@@ -62,12 +65,14 @@\n     private final FileSystem fileSystem;\n     private OrderedScheduler scheduler;\n     private static final long ENTRIES_PER_READ = 100;\n+    private static final int PREFETCH_ROUNDS = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7294cf0b3525090e38d7175d4f03a7f0963026"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwMDE4Nw==", "bodyText": "this format should not be modified", "url": "https://github.com/apache/pulsar/pull/6717#discussion_r407200187", "createdAt": "2020-04-12T13:43:14Z", "author": {"login": "congbobo184"}, "path": "tiered-storage/file-system/src/main/java/org/apache/bookkeeper/mledger/offload/filesystem/impl/FileSystemManagedLedgerOffloader.java", "diffHunk": "@@ -132,8 +138,8 @@ public FileSystemManagedLedgerOffloader(OffloadPolicies conf, OrderedScheduler s\n     }\n \n     /*\n-    * ledgerMetadata stored in an index of -1\n-    * */\n+     * ledgerMetadata stored in an index of -1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7294cf0b3525090e38d7175d4f03a7f0963026"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ae3bca7a1b7fd2629fccb06391822a31cb1e8e", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/01ae3bca7a1b7fd2629fccb06391822a31cb1e8e", "committedDate": "2020-04-12T14:45:29Z", "message": "more conservative prefetch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e3a7929de7415d2ac3c1a870087b3440e7156a3", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/4e3a7929de7415d2ac3c1a870087b3440e7156a3", "committedDate": "2020-04-12T14:50:06Z", "message": "fix format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxOTMzNTIw", "url": "https://github.com/apache/pulsar/pull/6717#pullrequestreview-391933520", "createdAt": "2020-04-13T03:10:12Z", "commit": {"oid": "4e3a7929de7415d2ac3c1a870087b3440e7156a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMDI4ODUy", "url": "https://github.com/apache/pulsar/pull/6717#pullrequestreview-392028852", "createdAt": "2020-04-13T08:43:25Z", "commit": {"oid": "4e3a7929de7415d2ac3c1a870087b3440e7156a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzI2MzAz", "url": "https://github.com/apache/pulsar/pull/6717#pullrequestreview-392726303", "createdAt": "2020-04-14T08:49:45Z", "commit": {"oid": "4e3a7929de7415d2ac3c1a870087b3440e7156a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwODo0OTo0NVrOGFEilQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwODo0OTo0NVrOGFEilQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3MDQ1Mw==", "bodyText": "Can we make this configurable? I am worried about this will cause performance problems.", "url": "https://github.com/apache/pulsar/pull/6717#discussion_r407970453", "createdAt": "2020-04-14T08:49:45Z", "author": {"login": "sijie"}, "path": "tiered-storage/file-system/src/main/java/org/apache/bookkeeper/mledger/offload/filesystem/impl/FileSystemManagedLedgerOffloader.java", "diffHunk": "@@ -188,13 +192,17 @@ public void run() {\n                 AtomicLong haveOffloadEntryNumber = new AtomicLong(0);\n                 long needToOffloadFirstEntryNumber = 0;\n                 CountDownLatch countDownLatch;\n+                //avoid prefetch too much data into memory\n+                Semaphore semaphore = new Semaphore(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e3a7929de7415d2ac3c1a870087b3440e7156a3"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "532bf5d5e5cc4c4541dbc474de261e0419954db3", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/532bf5d5e5cc4c4541dbc474de261e0419954db3", "committedDate": "2020-04-14T12:33:59Z", "message": "make prefetch for offload configurable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ac1c38909a1c2a598b4518098a05f557c110b31", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/2ac1c38909a1c2a598b4518098a05f557c110b31", "committedDate": "2020-04-14T13:00:20Z", "message": "fix format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjM4MDY5", "url": "https://github.com/apache/pulsar/pull/6717#pullrequestreview-397638069", "createdAt": "2020-04-21T20:09:55Z", "commit": {"oid": "2ac1c38909a1c2a598b4518098a05f557c110b31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4925, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}