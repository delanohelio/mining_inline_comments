{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyOTkyMDA3", "number": 8606, "title": "[C++] fix cpp client do AcknowledgeCumulative not clean up previous message", "bodyText": "pulsar-client-cpp Consumer UnAckedMessageTrackerEnabled::removeMessagesTill should erase message whose id <= msgId in messageIdPartitionMap\n\nMotivation\npulsar-client-cpp Consumer do AcknowledgeCumulative just clean up msgId, not <= msgId in  UnAckedMessageTrackerEnabled::removeMessagesTill\nModifications\n\nWhen do AcknowledgeCumulative from application, earse <= msgId in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\nadd unit test for UnAckedMessageTrackerEnabled\n\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (no)\nThe schema: (no)\nThe default values of configurations: (no)\nThe wire protocol: (no)\nThe rest endpoints: (no)\nThe admin cli options: (no)\nAnything that affects deployment: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-11-18T07:53:53Z", "url": "https://github.com/apache/pulsar/pull/8606", "merged": true, "mergeCommit": {"oid": "e75de488679ccee30a6cf99edc8e7779112fb786"}, "closed": true, "closedAt": "2020-12-30T10:35:59Z", "author": {"login": "saosir"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdggI1_ABqjQwNDQ1NjAxODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrM3N0gFqTU1OTk5MzU4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e501753f04fbd97813f53da208f3b970da307cd", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/0e501753f04fbd97813f53da208f3b970da307cd", "committedDate": "2020-11-20T08:14:34Z", "message": "Update UnAckedMessageTrackerEnabled.cc"}, "afterCommit": {"oid": "8e74000e435df27912cafc3783b5062dbabf5925", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/8e74000e435df27912cafc3783b5062dbabf5925", "committedDate": "2020-11-27T04:47:38Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e74000e435df27912cafc3783b5062dbabf5925", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/8e74000e435df27912cafc3783b5062dbabf5925", "committedDate": "2020-11-27T04:47:38Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}, "afterCommit": {"oid": "24b447e6859c46f13e4e57c69cfe81be10c67af3", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/24b447e6859c46f13e4e57c69cfe81be10c67af3", "committedDate": "2020-11-27T04:57:53Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24b447e6859c46f13e4e57c69cfe81be10c67af3", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/24b447e6859c46f13e4e57c69cfe81be10c67af3", "committedDate": "2020-11-27T04:57:53Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}, "afterCommit": {"oid": "a8336f7e14be9f112503e249d40c29b7e2d674e1", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a8336f7e14be9f112503e249d40c29b7e2d674e1", "committedDate": "2020-11-27T05:00:18Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8336f7e14be9f112503e249d40c29b7e2d674e1", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a8336f7e14be9f112503e249d40c29b7e2d674e1", "committedDate": "2020-11-27T05:00:18Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}, "afterCommit": {"oid": "e98394a8bfefbda44d79bc070a68c8897337b482", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/e98394a8bfefbda44d79bc070a68c8897337b482", "committedDate": "2020-11-27T05:03:10Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e98394a8bfefbda44d79bc070a68c8897337b482", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/e98394a8bfefbda44d79bc070a68c8897337b482", "committedDate": "2020-11-27T05:03:10Z", "message": "Fix cpp client do AcknowledgeCumulative not clean up previous message"}, "afterCommit": {"oid": "0f4cb785017cdbfaa0e60698fd83f18a0d4c2a5f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/0f4cb785017cdbfaa0e60698fd83f18a0d4c2a5f", "committedDate": "2020-11-30T13:00:50Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n### Motivation\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n### Modifications\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f4cb785017cdbfaa0e60698fd83f18a0d4c2a5f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/0f4cb785017cdbfaa0e60698fd83f18a0d4c2a5f", "committedDate": "2020-11-30T13:00:50Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n### Motivation\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n### Modifications\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}, "afterCommit": {"oid": "dfc46604428c7994999f3bc80ca419999bcadd3f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/dfc46604428c7994999f3bc80ca419999bcadd3f", "committedDate": "2020-11-30T14:38:15Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dfc46604428c7994999f3bc80ca419999bcadd3f", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/dfc46604428c7994999f3bc80ca419999bcadd3f", "committedDate": "2020-11-30T14:38:15Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}, "afterCommit": {"oid": "f846daa37b2fd4664d6241bb396fbe06fd30974e", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/f846daa37b2fd4664d6241bb396fbe06fd30974e", "committedDate": "2020-11-30T14:45:38Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f846daa37b2fd4664d6241bb396fbe06fd30974e", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/f846daa37b2fd4664d6241bb396fbe06fd30974e", "committedDate": "2020-11-30T14:45:38Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}, "afterCommit": {"oid": "ed3704ceba3c8e5e4b0052414208d6547ac17b61", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/ed3704ceba3c8e5e4b0052414208d6547ac17b61", "committedDate": "2020-11-30T14:56:22Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed3704ceba3c8e5e4b0052414208d6547ac17b61", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/ed3704ceba3c8e5e4b0052414208d6547ac17b61", "committedDate": "2020-11-30T14:56:22Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}, "afterCommit": {"oid": "6f4ff1b817c7670a15d8659ff4f5d9faf818b708", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/6f4ff1b817c7670a15d8659ff4f5d9faf818b708", "committedDate": "2020-11-30T15:16:22Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f4ff1b817c7670a15d8659ff4f5d9faf818b708", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/6f4ff1b817c7670a15d8659ff4f5d9faf818b708", "committedDate": "2020-11-30T15:16:22Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}, "afterCommit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/5a93aed0673782fb83af06d452af15197c6e0aa3", "committedDate": "2020-11-30T15:35:37Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMDY2OTM2", "url": "https://github.com/apache/pulsar/pull/8606#pullrequestreview-541066936", "createdAt": "2020-11-30T16:17:39Z", "commit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoxNzozOVrOH8CoCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoxNzozOVrOH8CoCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxOTYyNw==", "bodyText": "It won't pass the clang-format check here. Please use clang-format 5.0 to reformat your code.", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r532719627", "createdAt": "2020-11-30T16:17:39Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client-cpp/lib/UnAckedMessageTrackerEnabled.h", "diffHunk": "@@ -25,25 +25,27 @@\n namespace pulsar {\n class UnAckedMessageTrackerEnabled : public UnAckedMessageTrackerInterface {\n    public:\n-    ~UnAckedMessageTrackerEnabled();\n+       virtual ~UnAckedMessageTrackerEnabled() { this->close(); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMDcyMzIw", "url": "https://github.com/apache/pulsar/pull/8606#pullrequestreview-541072320", "createdAt": "2020-11-30T16:23:02Z", "commit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoyMzowM1rOH8C3mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoyMzowM1rOH8C3mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMzYxMA==", "bodyText": "Why remove the cancel() here?", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r532723610", "createdAt": "2020-11-30T16:23:03Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client-cpp/lib/UnAckedMessageTrackerEnabled.cc", "diffHunk": "@@ -158,9 +158,15 @@ void UnAckedMessageTrackerEnabled::clear() {\n     }\n }\n \n-UnAckedMessageTrackerEnabled::~UnAckedMessageTrackerEnabled() {\n-    if (timer_) {\n-        timer_->cancel();\n+void UnAckedMessageTrackerEnabled::start() {\n+    this->scheduleTimer();\n+}\n+\n+void UnAckedMessageTrackerEnabled::close() {\n+    std::lock_guard<std::mutex> acquire(mutexTimer_);\n+    if (this->timer_) {\n+        boost::system::error_code ec;\n+        this->timer_.reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3"}, "originalPosition": 95}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a93aed0673782fb83af06d452af15197c6e0aa3", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/5a93aed0673782fb83af06d452af15197c6e0aa3", "committedDate": "2020-11-30T15:35:37Z", "message": "[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`\n[C++] Fix potential crash caused by UnAckedMessageTrackerEnabled's timer(issue like ##8519)\n\n- pulsar-client-cpp Consumer do AcknowledgeCumulative just clean up `msgId`, not <= `msgId` in  `UnAckedMessageTrackerEnabled::removeMessagesTill`\n- potential crash caused by UnAckedMessageTrackerEnabled's timer(see issue like #8519)\n\n- When do AcknowledgeCumulative from application, earse <= `msgId` in UnAckedMessageTrackerEnabled, avoid redeliver unnecessary unacknowledged messages to Broker\n- Use std::shared_ptr instead of std::unique_ptr for UnAckedMessageTrackerEnabled\n- add `start()`, `close()` method to `UnAckedMessageTrackerEnabled` solve same issue see #8519\n- add `isEmpty()`, `size()` method to `UnAckedMessageTrackerEnabled` for checking of test case\n- when close `UnAckedMessageTrackerEnabled` and `AckGroupingTrackerEnabled`, reset shared_ptr `timer_`\n- add unit test for `UnAckedMessageTrackerEnabled`"}, "afterCommit": {"oid": "c3217efde6617f2737fef3b9eec290cc78492387", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/c3217efde6617f2737fef3b9eec290cc78492387", "committedDate": "2020-11-27T11:03:23Z", "message": "[C++] Fix cpp client do AcknowledgeCumulative not clean up previous message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "661dacade99645c01d340788be84adab4e82fe9b", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/661dacade99645c01d340788be84adab4e82fe9b", "committedDate": "2020-12-01T02:18:25Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}, "afterCommit": {"oid": "9d212cf2e1055e12caa3bebc4492489ca11e8783", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/9d212cf2e1055e12caa3bebc4492489ca11e8783", "committedDate": "2020-12-01T08:04:08Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d212cf2e1055e12caa3bebc4492489ca11e8783", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/9d212cf2e1055e12caa3bebc4492489ca11e8783", "committedDate": "2020-12-01T08:04:08Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}, "afterCommit": {"oid": "ba8125cb998cab833547644e47d7fa1525a0f295", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/ba8125cb998cab833547644e47d7fa1525a0f295", "committedDate": "2020-12-01T09:02:17Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba8125cb998cab833547644e47d7fa1525a0f295", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/ba8125cb998cab833547644e47d7fa1525a0f295", "committedDate": "2020-12-01T09:02:17Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}, "afterCommit": {"oid": "8ed9502e0101e7f1aa3b8823ef2a01a0667eefc0", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/8ed9502e0101e7f1aa3b8823ef2a01a0667eefc0", "committedDate": "2020-12-01T09:05:05Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ed9502e0101e7f1aa3b8823ef2a01a0667eefc0", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/8ed9502e0101e7f1aa3b8823ef2a01a0667eefc0", "committedDate": "2020-12-01T09:05:05Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}, "afterCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061", "committedDate": "2020-12-01T11:10:04Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxOTc0NjA0", "url": "https://github.com/apache/pulsar/pull/8606#pullrequestreview-541974604", "createdAt": "2020-12-01T14:49:17Z", "commit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0OToxN1rOH8wafw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNDo0OToxN1rOH8wafw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2OTgyMw==", "bodyText": "A typo: testtUnAcked -> testUnAcked", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r533469823", "createdAt": "2020-12-01T14:49:17Z", "author": {"login": "BewareMyPower"}, "path": "pulsar-client-cpp/tests/BasicEndToEndTest.cc", "diffHunk": "@@ -3826,3 +3826,208 @@ TEST(BasicEndToEndTest, testAckGroupingTrackerEnabledCumulativeAck) {\n     ret = consumer.receive(msg, 1000);\n     ASSERT_EQ(ResultTimeout, ret) << \"Received redundant message ID: \" << msg.getMessageId();\n }\n+\n+class UnAckedMessageTrackerEnabledMock : public UnAckedMessageTrackerEnabled {\n+   public:\n+    UnAckedMessageTrackerEnabledMock(long timeoutMs, const ClientImplPtr client, ConsumerImplBase &consumer)\n+        : UnAckedMessageTrackerEnabled(timeoutMs, timeoutMs, client, consumer) {}\n+    const long getUnAckedMessagesTimeoutMs() { return this->timeoutMs_; }\n+    const long getTickDurationInMs() { return this->tickDurationInMs_; }\n+    bool isEmpty() { return UnAckedMessageTrackerEnabled::isEmpty(); }\n+    long size() { return UnAckedMessageTrackerEnabled::size(); }\n+};  // class UnAckedMessageTrackerEnabledMock\n+\n+TEST(BasicEndToEndTest, testtUnAckedMessageTrackerDefaultBehavior) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxOTc4MDcz", "url": "https://github.com/apache/pulsar/pull/8606#pullrequestreview-541978073", "createdAt": "2020-12-01T14:52:34Z", "commit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061", "committedDate": "2020-12-01T11:10:04Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}, "afterCommit": {"oid": "2b3d2a7d407b27d3341fcc4403040163aafccea2", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/2b3d2a7d407b27d3341fcc4403040163aafccea2", "committedDate": "2020-12-26T06:38:18Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19f7c6ed5bcc1cc65614a77b36876601f5a4c31d", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/19f7c6ed5bcc1cc65614a77b36876601f5a4c31d", "committedDate": "2020-12-26T14:03:45Z", "message": "[C++] Fix cpp client do AcknowledgeCumulative not clean up previous message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b3d2a7d407b27d3341fcc4403040163aafccea2", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/2b3d2a7d407b27d3341fcc4403040163aafccea2", "committedDate": "2020-12-26T06:38:18Z", "message": "[C++] add UnAckedMessageTrackerEnabled unit test"}, "afterCommit": {"oid": "19f7c6ed5bcc1cc65614a77b36876601f5a4c31d", "author": {"user": {"login": "saosir", "name": "sijianliang"}}, "url": "https://github.com/apache/pulsar/commit/19f7c6ed5bcc1cc65614a77b36876601f5a4c31d", "committedDate": "2020-12-26T14:03:45Z", "message": "[C++] Fix cpp client do AcknowledgeCumulative not clean up previous message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5OTkzNTg3", "url": "https://github.com/apache/pulsar/pull/8606#pullrequestreview-559993587", "createdAt": "2020-12-30T10:35:00Z", "commit": {"oid": "19f7c6ed5bcc1cc65614a77b36876601f5a4c31d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDozNTowMFrOIMpCTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMDozNTowMFrOIMpCTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEyNjE1OQ==", "bodyText": "@saosir Can you create a follow-up PR to fix the typo?", "url": "https://github.com/apache/pulsar/pull/8606#discussion_r550126159", "createdAt": "2020-12-30T10:35:00Z", "author": {"login": "sijie"}, "path": "pulsar-client-cpp/tests/BasicEndToEndTest.cc", "diffHunk": "@@ -3826,3 +3826,208 @@ TEST(BasicEndToEndTest, testAckGroupingTrackerEnabledCumulativeAck) {\n     ret = consumer.receive(msg, 1000);\n     ASSERT_EQ(ResultTimeout, ret) << \"Received redundant message ID: \" << msg.getMessageId();\n }\n+\n+class UnAckedMessageTrackerEnabledMock : public UnAckedMessageTrackerEnabled {\n+   public:\n+    UnAckedMessageTrackerEnabledMock(long timeoutMs, const ClientImplPtr client, ConsumerImplBase &consumer)\n+        : UnAckedMessageTrackerEnabled(timeoutMs, timeoutMs, client, consumer) {}\n+    const long getUnAckedMessagesTimeoutMs() { return this->timeoutMs_; }\n+    const long getTickDurationInMs() { return this->tickDurationInMs_; }\n+    bool isEmpty() { return UnAckedMessageTrackerEnabled::isEmpty(); }\n+    long size() { return UnAckedMessageTrackerEnabled::size(); }\n+};  // class UnAckedMessageTrackerEnabledMock\n+\n+TEST(BasicEndToEndTest, testtUnAckedMessageTrackerDefaultBehavior) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQ2OTgyMw=="}, "originalCommit": {"oid": "d3f76e5eb8fa0b116a8a916c84f6bb3c8f108061"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1085, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}