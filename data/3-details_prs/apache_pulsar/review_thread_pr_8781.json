{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwODYxMjUx", "number": 8781, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMTo0MlrOE_hUXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjowMjoyNVrOFCv4vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDQxNjMwOnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMTo0MlrOH9RGIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDoyMDowOVrOH9T__g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwNTI4MA==", "bodyText": "Don't remove the code immediately. Please add a flag in Function worker config to control whether do we need to initialize dlog namespace or not. By default, we can make it true (to initialize dlog namespace) for backward compatibility consideration and allow people to turn it off.", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r534005280", "createdAt": "2020-12-02T09:11:42Z", "author": {"login": "sijie"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -150,15 +150,8 @@ private static URI initialize(WorkerConfig workerConfig)\n             admin.close();\n         }\n \n-        // initialize the dlog namespace\n-        // TODO: move this as part of pulsar cluster initialization later\n-        try {\n-            return WorkerUtils.initializeDlogNamespace(internalConf);\n-        } catch (IOException ioe) {\n-            log.error(\"Failed to initialize dlog namespace with zookeeper {} at metadata service uri {} for storing function packages\",\n-                internalConf.getZookeeperServers(), internalConf.getBookkeeperMetadataServiceUri(), ioe);\n-            throw ioe;\n-        }\n+        // get the dlog namespace\n+        return WorkerUtils.getDlogNamespaceURI(internalConf.getZookeeperServers());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6423e6ab350d2fb7fb2098a043b5542b3adb2909"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1Mjg2Mg==", "bodyText": "I update my code, and I'm not sure if I'm doing the right thing, please let me know if have any problems.", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r534052862", "createdAt": "2020-12-02T10:20:09Z", "author": {"login": "nodece"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -150,15 +150,8 @@ private static URI initialize(WorkerConfig workerConfig)\n             admin.close();\n         }\n \n-        // initialize the dlog namespace\n-        // TODO: move this as part of pulsar cluster initialization later\n-        try {\n-            return WorkerUtils.initializeDlogNamespace(internalConf);\n-        } catch (IOException ioe) {\n-            log.error(\"Failed to initialize dlog namespace with zookeeper {} at metadata service uri {} for storing function packages\",\n-                internalConf.getZookeeperServers(), internalConf.getBookkeeperMetadataServiceUri(), ioe);\n-            throw ioe;\n-        }\n+        // get the dlog namespace\n+        return WorkerUtils.getDlogNamespaceURI(internalConf.getZookeeperServers());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwNTI4MA=="}, "originalCommit": {"oid": "6423e6ab350d2fb7fb2098a043b5542b3adb2909"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDQyMjMzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarInitialDlogNamespaceMetadataSetup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMzoxM1rOH9RJ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOToxMzoxM1rOH9RJ8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwNjI1OQ==", "bodyText": "Also initialize the dlog namespace as part of initialize-cluster-metadata command.", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r534006259", "createdAt": "2020-12-02T09:13:13Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarInitialDlogNamespaceMetadataSetup.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar;\n+\n+import com.beust.jcommander.JCommander;\n+import com.beust.jcommander.Parameter;\n+import org.apache.pulsar.common.conf.InternalConfigurationData;\n+import org.apache.pulsar.functions.worker.WorkerUtils;\n+\n+public class PulsarInitialDlogNamespaceMetadataSetup {\n+    private static class Arguments {\n+        @Parameter(names = {\"-cs\",\n+                \"--configuration-store\"}, description = \"Configuration Store connection string\", required = true)\n+        private String configurationStore;\n+\n+        @Parameter(names = {\"--bookkeeper-metadata-service-uri\"}, description = \"Metadata service uri of BookKeeper\", required = true)\n+        private String bkMetadataServiceUri;\n+\n+        @Parameter(names = {\"-h\", \"--help\"}, description = \"Show this help message\")\n+        private boolean help = false;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        PulsarInitialDlogNamespaceMetadataSetup.Arguments arguments = new PulsarInitialDlogNamespaceMetadataSetup.Arguments();\n+        JCommander jcommander = new JCommander();\n+        try {\n+            jcommander.addObject(arguments);\n+            jcommander.parse(args);\n+            if (arguments.help) {\n+                jcommander.usage();\n+                return;\n+            }\n+        } catch (Exception e) {\n+            jcommander.usage();\n+            throw e;\n+        }\n+\n+        if (arguments.configurationStore == null) {\n+            System.err.println(\"Configuration store address argument is required (--configuration-store)\");\n+            jcommander.usage();\n+            System.exit(1);\n+        }\n+        if (arguments.bkMetadataServiceUri == null) {\n+            System.err.println(\"Metadata service uri of BookKeeper argument is required (--bookkeeper-metadata-service-uri)\");\n+            jcommander.usage();\n+            System.exit(1);\n+        }\n+\n+        InternalConfigurationData internalConf = new InternalConfigurationData(arguments.configurationStore, arguments.configurationStore, null, arguments.bkMetadataServiceUri, null);\n+        WorkerUtils.initializeDlogNamespace(internalConf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6423e6ab350d2fb7fb2098a043b5542b3adb2909"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDI1OTkzOnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjowMjoxM1rOICD86Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMjowODoxMVrOIDl2Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMjgwOQ==", "bodyText": "How is this flag set?", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r539032809", "createdAt": "2020-12-09T06:02:13Z", "author": {"login": "sijie"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -59,6 +59,7 @@\n     private GlobalZooKeeperCache globalZkCache;\n     private ConfigurationCacheService configurationCacheService;\n     private final ErrorNotifier errorNotifier;\n+    private static boolean isInitialDlogMetadataByPulsarTool = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5d8d5ce69a2b8f0efa2f4a72a39d5ca3cbc62a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE1Mjk4Mg==", "bodyText": "@sijie Do you mean add a flag to config file?", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r540152982", "createdAt": "2020-12-10T13:06:09Z", "author": {"login": "nodece"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -59,6 +59,7 @@\n     private GlobalZooKeeperCache globalZkCache;\n     private ConfigurationCacheService configurationCacheService;\n     private final ErrorNotifier errorNotifier;\n+    private static boolean isInitialDlogMetadataByPulsarTool = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMjgwOQ=="}, "originalCommit": {"oid": "4f5d8d5ce69a2b8f0efa2f4a72a39d5ca3cbc62a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwODMxMw==", "bodyText": "I mean how this flag is used. I don't see which method set the flag.", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r540408313", "createdAt": "2020-12-10T18:40:48Z", "author": {"login": "sijie"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -59,6 +59,7 @@\n     private GlobalZooKeeperCache globalZkCache;\n     private ConfigurationCacheService configurationCacheService;\n     private final ErrorNotifier errorNotifier;\n+    private static boolean isInitialDlogMetadataByPulsarTool = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMjgwOQ=="}, "originalCommit": {"oid": "4f5d8d5ce69a2b8f0efa2f4a72a39d5ca3cbc62a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYzNjY5NA==", "bodyText": "https://github.com/apache/pulsar/pull/8781/files/4f5d8d5ce69a2b8f0efa2f4a72a39d5ca3cbc62a#diff-6ea96d1db19eb1c438ee988cc295057393319e0c0714771538e4ae9c7391cb86R87", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r540636694", "createdAt": "2020-12-11T02:08:11Z", "author": {"login": "nodece"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -59,6 +59,7 @@\n     private GlobalZooKeeperCache globalZkCache;\n     private ConfigurationCacheService configurationCacheService;\n     private final ErrorNotifier errorNotifier;\n+    private static boolean isInitialDlogMetadataByPulsarTool = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMjgwOQ=="}, "originalCommit": {"oid": "4f5d8d5ce69a2b8f0efa2f4a72a39d5ca3cbc62a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDI2MDQ3OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjowMjoyNVrOICD9Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMjowOToxOVrOIDl3ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMjg4Ng==", "bodyText": "How is this method used?", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r539032886", "createdAt": "2020-12-09T06:02:25Z", "author": {"login": "sijie"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -82,7 +83,11 @@ protected void start() throws Exception {\n         }\n     }\n \n-    private static URI initialize(WorkerConfig workerConfig)\n+    public static void setEnableInitialDlogMetadataByPulsarTool(boolean enable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5d8d5ce69a2b8f0efa2f4a72a39d5ca3cbc62a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYzNzAzNA==", "bodyText": "User can call Worker. setEnableInitialDlogMetadataByPulsarTool(true) or Worker.setEnableInitialDlogMetadataByPulsarTool(false).", "url": "https://github.com/apache/pulsar/pull/8781#discussion_r540637034", "createdAt": "2020-12-11T02:09:19Z", "author": {"login": "nodece"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/Worker.java", "diffHunk": "@@ -82,7 +83,11 @@ protected void start() throws Exception {\n         }\n     }\n \n-    private static URI initialize(WorkerConfig workerConfig)\n+    public static void setEnableInitialDlogMetadataByPulsarTool(boolean enable) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzMjg4Ng=="}, "originalCommit": {"oid": "4f5d8d5ce69a2b8f0efa2f4a72a39d5ca3cbc62a"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2755, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}