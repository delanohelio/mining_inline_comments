{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MjUxOTA1", "number": 7078, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTozMjoyOVrOEAwr6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTozMjoyOVrOEAwr6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjMzMTMwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PublishRateLimiter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNTozMjoyOVrOGcPTIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo1OToyNVrOGcZyDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2Mzk2OA==", "bodyText": "I'd say in general to avoid volatile in all cases in which the exact semantic of read after write consistency is required. In this case we can probably just rely on dirty reads", "url": "https://github.com/apache/pulsar/pull/7078#discussion_r432263968", "createdAt": "2020-05-29T05:32:29Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PublishRateLimiter.java", "diffHunk": "@@ -66,6 +69,83 @@\n      * @param clusterName\n      */\n     void update(PublishRate maxPublishRate);\n+\n+    /**\n+     * try to acquire permit\n+     * @param numbers\n+     * @param bytes\n+     * */\n+    boolean tryAcquire(int numbers, long bytes);\n+}\n+\n+class PrecisPublishLimiter implements PublishRateLimiter {\n+    protected volatile int publishMaxMessageRate = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e124a91c83004085e2e616722f04a509234c1752"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQzNTcyNQ==", "bodyText": "@merlimat  There will be barely concurrent update of these fields, so I think volatile here is ok.  Do you suggest to remove it ?", "url": "https://github.com/apache/pulsar/pull/7078#discussion_r432435725", "createdAt": "2020-05-29T11:59:25Z", "author": {"login": "aloyszhang"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PublishRateLimiter.java", "diffHunk": "@@ -66,6 +69,83 @@\n      * @param clusterName\n      */\n     void update(PublishRate maxPublishRate);\n+\n+    /**\n+     * try to acquire permit\n+     * @param numbers\n+     * @param bytes\n+     * */\n+    boolean tryAcquire(int numbers, long bytes);\n+}\n+\n+class PrecisPublishLimiter implements PublishRateLimiter {\n+    protected volatile int publishMaxMessageRate = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2Mzk2OA=="}, "originalCommit": {"oid": "e124a91c83004085e2e616722f04a509234c1752"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1689, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}