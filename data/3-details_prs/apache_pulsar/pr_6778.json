{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTUyNTYz", "number": 6778, "title": "Ensure that all dangling consumers are cleaned up during failures", "bodyText": "(If this PR fixes a github issue, please add Fixes #<xyz>.)\nFixes #\n(or if this PR is one task of a github issue, please add Master Issue: #<xyz> to link to the master issue.)\nMaster Issue: #\nMotivation\nIn PulsarSource::open, if the sourcespec has multiple topics and if there is an exception creating a consumer for any one of them, the inputConsumers list is not initialized with those consumers who were successful. This means that subsequent close method doesn't cleanup those consumers leaving dangling consumers. This mr fixes that logic\nModifications\nDescribe the modifications you've done.\nVerifying this change\n\n Make sure that the change passes the CI checks.\n\n(Please pick either of the following options)\nThis change is a trivial rework / code cleanup without any test coverage.\n(or)\nThis change is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end deployment with large payloads (10MB)\nExtended integration test for recovery after broker failure\n\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API: (yes / no)\nThe schema: (yes / no / don't know)\nThe default values of configurations: (yes / no)\nThe wire protocol: (yes / no)\nThe rest endpoints: (yes / no)\nThe admin cli options: (yes / no)\nAnything that affects deployment: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)\nIf a feature is not applicable for documentation, explain why?\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation", "createdAt": "2020-04-20T16:00:27Z", "url": "https://github.com/apache/pulsar/pull/6778", "merged": true, "mergeCommit": {"oid": "98b818b5fa63ee2e4a67887cf96330ae652dafa2"}, "closed": true, "closedAt": "2020-04-22T00:21:41Z", "author": {"login": "srkukarni"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZhQSngH2gAyNDA2MTUyNTYzOmM0NTRkNjI4N2U2MzFiNDQ2ZGE4NWMzYWQ4NjI5YjA2YTNhNTU1YzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ5BWRgFqTM5NzYxNzY4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c454d6287e631b446da85c3ad8629b06a3a555c6", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c454d6287e631b446da85c3ad8629b06a3a555c6", "committedDate": "2020-04-20T15:58:51Z", "message": "Ensure that all dangling consumers are cleaned up during failures"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjAzMDMz", "url": "https://github.com/apache/pulsar/pull/6778#pullrequestreview-396603033", "createdAt": "2020-04-20T16:11:31Z", "commit": {"oid": "c454d6287e631b446da85c3ad8629b06a3a555c6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoxMTozMVrOGIcV-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoxMjo1OFrOGIcaJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNjE3MA==", "bodyText": "The assignment is not needed, the builder would update in-place", "url": "https://github.com/apache/pulsar/pull/6778#discussion_r411506170", "createdAt": "2020-04-20T16:11:31Z", "author": {"login": "merlimat"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/source/PulsarSource.java", "diffHunk": "@@ -80,17 +80,17 @@ public void open(Map<String, Object> config, SourceContext sourceContext) throws\n                     .messageListener(this);\n \n             if (conf.isRegexPattern) {\n-                cb.topicsPattern(topic);\n+                cb = cb.topicsPattern(topic);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c454d6287e631b446da85c3ad8629b06a3a555c6"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNzIzOQ==", "bodyText": "This could be simplified into:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Consumer<T> consumer = cb.subscribeAsync().join();\n          \n          \n            \n                        Consumer<T> consumer = cb.subscribe();\n          \n      \n    \n    \n  \n\nIn any case, I think we should be catching any exception thrown over the loop and close down all the consumers that were already created and added to the list.", "url": "https://github.com/apache/pulsar/pull/6778#discussion_r411507239", "createdAt": "2020-04-20T16:12:58Z", "author": {"login": "merlimat"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/source/PulsarSource.java", "diffHunk": "@@ -99,11 +99,12 @@ public void open(Map<String, Object> config, SourceContext sourceContext) throws\n                 if (pulsarSourceConfig.getDeadLetterTopic() != null && !pulsarSourceConfig.getDeadLetterTopic().isEmpty()) {\n                     deadLetterPolicyBuilder.deadLetterTopic(pulsarSourceConfig.getDeadLetterTopic());\n                 }\n-                cb.deadLetterPolicy(deadLetterPolicyBuilder.build());\n+                cb = cb.deadLetterPolicy(deadLetterPolicyBuilder.build());\n             }\n \n-            return cb.subscribeAsync();\n-        }).collect(Collectors.toList()).stream().map(CompletableFuture::join).collect(Collectors.toList());\n+            Consumer<T> consumer = cb.subscribeAsync().join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c454d6287e631b446da85c3ad8629b06a3a555c6"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjE3Njgy", "url": "https://github.com/apache/pulsar/pull/6778#pullrequestreview-397617682", "createdAt": "2020-04-21T19:40:15Z", "commit": {"oid": "c454d6287e631b446da85c3ad8629b06a3a555c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3593, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}