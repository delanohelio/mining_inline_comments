{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3ODYyNTMz", "number": 8717, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo1Mjo0MVrOFB2WBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNjoxNzo1N1rOFLkALw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDgzMjcwOnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo1Mjo0MVrOIAtclg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwOToyNDo1MlrOIBPcPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxNTUxMA==", "bodyText": "The OffloadPolicies you get from config may not be updated as namespace or topic policy update.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r537615510", "createdAt": "2020-12-07T15:52:41Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -1536,7 +1537,18 @@ void asyncReadEntries(OpReadEntry opReadEntry) {\n \n             LedgerInfo info = ledgers.get(ledgerId);\n             CompletableFuture<ReadHandle> openFuture = new CompletableFuture<>();\n-            if (info != null && info.hasOffloadContext() && info.getOffloadContext().getComplete()) {\n+\n+            if (config.getLedgerOffloader() != null\n+                    && config.getLedgerOffloader().getOffloadPolicies() != null\n+                    && config.getLedgerOffloader().getOffloadPolicies()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52db96e167fb9bf676affd94c157037b01c66432"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3MDA4Ng==", "bodyText": "The OffloadPolicies you get from config may not be updated as namespace or topic policy update.\n\nGood question, I will try to figure it out", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r537970086", "createdAt": "2020-12-08T01:50:00Z", "author": {"login": "Renkai"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -1536,7 +1537,18 @@ void asyncReadEntries(OpReadEntry opReadEntry) {\n \n             LedgerInfo info = ledgers.get(ledgerId);\n             CompletableFuture<ReadHandle> openFuture = new CompletableFuture<>();\n-            if (info != null && info.hasOffloadContext() && info.getOffloadContext().getComplete()) {\n+\n+            if (config.getLedgerOffloader() != null\n+                    && config.getLedgerOffloader().getOffloadPolicies() != null\n+                    && config.getLedgerOffloader().getOffloadPolicies()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxNTUxMA=="}, "originalCommit": {"oid": "52db96e167fb9bf676affd94c157037b01c66432"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE3MjQ3OA==", "bodyText": "@hangc0276\nI think\norg.apache.pulsar.broker.admin.v2.PersistentTopics#setOffloadPolicies\norg.apache.pulsar.broker.admin.impl.PersistentTopicsBase#internalSetOffloadPolicies\norg.apache.pulsar.broker.admin.impl.PersistentTopicsBase#internalUpdateOffloadPolicies\norg.apache.bookkeeper.mledger.impl.ManagedLedgerImpl#setConfig\nand\norg.apache.pulsar.zookeeper.ZooKeeperCache#process(org.apache.zookeeper.WatchedEvent, org.apache.pulsar.zookeeper.ZooKeeperCache.CacheUpdater<T>)\norg.apache.pulsar.zookeeper.ZooKeeperChildrenCache#reloadCache\norg.apache.pulsar.broker.service.BrokerService#onUpdate\norg.apache.pulsar.broker.service.persistent.PersistentTopic#onPoliciesUpdate\norg.apache.pulsar.broker.service.persistent.PersistentTopic#checkPersistencePolicies\norg.apache.bookkeeper.mledger.impl.ManagedLedgerImpl#setConfig\nare assurable chains to keep config up to date", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r538172478", "createdAt": "2020-12-08T09:24:52Z", "author": {"login": "Renkai"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -1536,7 +1537,18 @@ void asyncReadEntries(OpReadEntry opReadEntry) {\n \n             LedgerInfo info = ledgers.get(ledgerId);\n             CompletableFuture<ReadHandle> openFuture = new CompletableFuture<>();\n-            if (info != null && info.hasOffloadContext() && info.getOffloadContext().getComplete()) {\n+\n+            if (config.getLedgerOffloader() != null\n+                    && config.getLedgerOffloader().getOffloadPolicies() != null\n+                    && config.getLedgerOffloader().getOffloadPolicies()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxNTUxMA=="}, "originalCommit": {"oid": "52db96e167fb9bf676affd94c157037b01c66432"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDgzNjM1OnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo1MzoyOFrOIAtezQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDozODoyOVrOIBGrzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxNjA3Nw==", "bodyText": "not suggest to use var", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r537616077", "createdAt": "2020-12-07T15:53:28Z", "author": {"login": "hangc0276"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "diffHunk": "@@ -1336,11 +1335,35 @@ void run() throws PulsarAdminException {\n                 , description = \"ManagedLedger offload deletion lag in bytes\")\n         private Long offloadDeletionLagInMillis;\n \n+        @Parameter(\n+                names = {\"--offloadedReadPriority\", \"-orp\"},\n+                description = \"read priority for offloaded messages\",\n+                required = false\n+        )\n+        private String offloadReadPriorityStr;\n+\n         @Override\n         void run() throws PulsarAdminException {\n             String persistentTopic = validatePersistentTopic(params);\n+\n+            var offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52db96e167fb9bf676affd94c157037b01c66432"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3MzM4Nw==", "bodyText": "@hangc0276\nThe official support of type inference in Java began at Java 10, I think it's a good feature to keep code base concise, before Java 10, we can use the Lombok version first, just like we use JodaTime before Java8.\nhttps://openjdk.java.net/jeps/286", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r537973387", "createdAt": "2020-12-08T01:56:58Z", "author": {"login": "Renkai"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "diffHunk": "@@ -1336,11 +1335,35 @@ void run() throws PulsarAdminException {\n                 , description = \"ManagedLedger offload deletion lag in bytes\")\n         private Long offloadDeletionLagInMillis;\n \n+        @Parameter(\n+                names = {\"--offloadedReadPriority\", \"-orp\"},\n+                description = \"read priority for offloaded messages\",\n+                required = false\n+        )\n+        private String offloadReadPriorityStr;\n+\n         @Override\n         void run() throws PulsarAdminException {\n             String persistentTopic = validatePersistentTopic(params);\n+\n+            var offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxNjA3Nw=="}, "originalCommit": {"oid": "52db96e167fb9bf676affd94c157037b01c66432"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyOTAwNQ==", "bodyText": "Let's avoid using var now.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r538029005", "createdAt": "2020-12-08T04:38:29Z", "author": {"login": "sijie"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "diffHunk": "@@ -1336,11 +1335,35 @@ void run() throws PulsarAdminException {\n                 , description = \"ManagedLedger offload deletion lag in bytes\")\n         private Long offloadDeletionLagInMillis;\n \n+        @Parameter(\n+                names = {\"--offloadedReadPriority\", \"-orp\"},\n+                description = \"read priority for offloaded messages\",\n+                required = false\n+        )\n+        private String offloadReadPriorityStr;\n+\n         @Override\n         void run() throws PulsarAdminException {\n             String persistentTopic = validatePersistentTopic(params);\n+\n+            var offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxNjA3Nw=="}, "originalCommit": {"oid": "52db96e167fb9bf676affd94c157037b01c66432"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI0MDE1OnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixReadTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0MzowN1rOILIvcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0MzowN1rOILIvcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0ODQ2Nw==", "bodyText": "please remove this import", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548548467", "createdAt": "2020-12-24T14:43:07Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixReadTest.java", "diffHunk": "@@ -39,7 +40,7 @@\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.TimeUnit;\n-\n+import lombok.val;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI0MTM2OnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixReadTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0Mzo0OFrOILIwGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0Mzo0OFrOILIwGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0ODYzNA==", "bodyText": "Assert.assertTrue may sync with assertEquals", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548548634", "createdAt": "2020-12-24T14:43:48Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixReadTest.java", "diffHunk": "@@ -69,53 +71,140 @@ public void testOffloadRead() throws Exception {\n         config.setRetentionTime(10, TimeUnit.MINUTES);\n         config.setRetentionSizeInMB(10);\n         config.setLedgerOffloader(offloader);\n-        ManagedLedgerImpl ledger = (ManagedLedgerImpl)factory.open(\"my_test_ledger\", config);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) factory.open(\"my_test_ledger\", config);\n \n         for (int i = 0; i < 25; i++) {\n             String content = \"entry-\" + i;\n             ledger.addEntry(content.getBytes());\n         }\n-        Assert.assertEquals(ledger.getLedgersInfoAsList().size(), 3);\n+        assertEquals(ledger.getLedgersInfoAsList().size(), 3);\n \n         ledger.offloadPrefix(ledger.getLastConfirmedEntry());\n \n-        Assert.assertEquals(ledger.getLedgersInfoAsList().size(), 3);\n-        Assert.assertEquals(ledger.getLedgersInfoAsList().stream()\n-                            .filter(e -> e.getOffloadContext().getComplete()).count(), 2);\n+        assertEquals(ledger.getLedgersInfoAsList().size(), 3);\n+        assertEquals(ledger.getLedgersInfoAsList().stream()\n+                .filter(e -> e.getOffloadContext().getComplete()).count(), 2);\n         Assert.assertTrue(ledger.getLedgersInfoAsList().get(0).getOffloadContext().getComplete());\n         Assert.assertTrue(ledger.getLedgersInfoAsList().get(1).getOffloadContext().getComplete());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI0MzM2OnYy", "diffSide": "LEFT", "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NTowNFrOILIxMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QwNzo0ODoxNFrOILpHEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0ODkxMw==", "bodyText": "the blank line may not delete.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548548913", "createdAt": "2020-12-24T14:45:04Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "diffHunk": "@@ -23,22 +23,19 @@\n import static org.testng.Assert.assertNotEquals;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA3ODgwMQ==", "bodyText": "The checkstyle https://github.com/apache/pulsar/blob/cc64889abe94d47f048e2f8e8fb10d6c37e695ec/buildtools/src/main/resources/pulsar/checkstyle.xml need us to leave no blank line between imports, though it's not enabled in all modules yet, but it will. So I think it's better to remove blank lines here.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r549078801", "createdAt": "2020-12-27T07:48:14Z", "author": {"login": "Renkai"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "diffHunk": "@@ -23,22 +23,19 @@\n import static org.testng.Assert.assertNotEquals;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0ODkxMw=="}, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI0NDE1OnYy", "diffSide": "LEFT", "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NToxOVrOILIxlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QwNzo0ODozMVrOILpHLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTAxNQ==", "bodyText": "the blank line may not delete.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548549015", "createdAt": "2020-12-24T14:45:19Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "diffHunk": "@@ -23,22 +23,19 @@\n import static org.testng.Assert.assertNotEquals;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n-\n import com.google.common.collect.ImmutableSet;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA3ODgyOA==", "bodyText": "ditto", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r549078828", "createdAt": "2020-12-27T07:48:31Z", "author": {"login": "Renkai"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "diffHunk": "@@ -23,22 +23,19 @@\n import static org.testng.Assert.assertNotEquals;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n-\n import com.google.common.collect.ImmutableSet;\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTAxNQ=="}, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI0NTY4OnYy", "diffSide": "LEFT", "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NTo1NFrOILIyWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NTo1NFrOILIyWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTIwOQ==", "bodyText": "same with upper.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548549209", "createdAt": "2020-12-24T14:45:54Z", "author": {"login": "hangc0276"}, "path": "managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/OffloadPrefixTest.java", "diffHunk": "@@ -23,22 +23,19 @@\n import static org.testng.Assert.assertNotEquals;\n import static org.testng.Assert.assertTrue;\n import static org.testng.Assert.fail;\n-\n import com.google.common.collect.ImmutableSet;\n-\n import java.lang.reflect.Field;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Set;\n import java.util.UUID;\n-import java.util.concurrent.CompletionException;\n import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionException;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n import java.util.function.BooleanSupplier;\n import java.util.stream.Collectors;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI0NzAxOnYy", "diffSide": "LEFT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NjoyOVrOILIzCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NjoyOVrOILIzCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTM4NQ==", "bodyText": "may not delete the new line.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548549385", "createdAt": "2020-12-24T14:46:29Z", "author": {"login": "hangc0276"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -21,9 +21,7 @@\n \n import com.google.common.collect.Lists;\n import com.google.common.collect.Sets;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI0OTMwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NzozOFrOILI0RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo0NzozOFrOILI0RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTcwMA==", "bodyText": "no blank", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548549700", "createdAt": "2020-12-24T14:47:38Z", "author": {"login": "hangc0276"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -1434,15 +1433,19 @@\n                     + \"Of course, this may degrade consumption throughput. Default is 10ms.\")\n     private int managedLedgerNewEntriesCheckDelayInMillis = 10;\n \n+    @FieldContext(category = CATEGORY_STORAGE_ML,\n+            doc = \"Read priority when ledgers exists in both bookkeeper and the second layer storage.\")\n+    private String managedLedgerDataReadPriority = OffloadPolicies.OffloadedReadPriority.OFFLOADED_FIRST.getValue();\n+\n     /*** --- Load balancer --- ****/\n     @FieldContext(\n-        category = CATEGORY_LOAD_BALANCER,\n-        doc = \"Enable load balancer\"\n+            category = CATEGORY_LOAD_BALANCER,\n+            doc = \"Enable load balancer\"\n     )\n     private boolean loadBalancerEnabled = true;\n     @Deprecated\n     @FieldContext(\n-        category = CATEGORY_LOAD_BALANCER,\n+            category = CATEGORY_LOAD_BALANCER,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI1ODI0OnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo1MzowOFrOILI5Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNDo1MzowOFrOILI5Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MDkzNQ==", "bodyText": "add new blank", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548550935", "createdAt": "2020-12-24T14:53:08Z", "author": {"login": "hangc0276"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -25,13 +25,12 @@\n import com.google.common.base.Strings;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Sets;\n-\n import java.io.IOException;\n import java.util.Arrays;\n import java.util.HashSet;\n import java.util.List;\n import java.util.concurrent.TimeUnit;\n-\n+import java.util.stream.Collectors;\n import org.apache.commons.lang3.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0OTI3NTkwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxNTowMzo0MVrOILJCdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QwODowMzowM1rOILpMMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MzMzMg==", "bodyText": "Maybe we should check whether offloadPolicies already have ManagedLedgerOffloadedReadPriority value.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r548553332", "createdAt": "2020-12-24T15:03:41Z", "author": {"login": "hangc0276"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -1262,6 +1263,12 @@ public void openLedgerFailed(ManagedLedgerException exception, Object ctx) {\n                     topicLevelOffloadPolicies,\n                     OffloadPolicies.oldPoliciesCompatible(nsLevelOffloadPolicies, policies.orElse(null)),\n                     getPulsar().getConfig().getProperties());\n+\n+            if (offloadPolicies != null && serviceConfig.getManagedLedgerDataReadPriority() != null) {\n+                offloadPolicies.setManagedLedgerOffloadedReadPriority(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA4MDExMw==", "bodyText": "I removed these lines since the initialize progress should already be finished by  OffloadPolicies.mergeConfiguration.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r549080113", "createdAt": "2020-12-27T08:03:03Z", "author": {"login": "Renkai"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -1262,6 +1263,12 @@ public void openLedgerFailed(ManagedLedgerException exception, Object ctx) {\n                     topicLevelOffloadPolicies,\n                     OffloadPolicies.oldPoliciesCompatible(nsLevelOffloadPolicies, policies.orElse(null)),\n                     getPulsar().getConfig().getProperties());\n+\n+            if (offloadPolicies != null && serviceConfig.getManagedLedgerDataReadPriority() != null) {\n+                offloadPolicies.setManagedLedgerOffloadedReadPriority(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MzMzMg=="}, "originalCommit": {"oid": "d9f08b2a286de4f915fa12fa7d96815d20f21473"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjY4MzY1OnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNjoxNzowMlrOIOzOPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwODozOToxNVrOIO2Ihg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIwNw==", "bodyText": "@Renkai Can we avoid using System.out.println?", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552390207", "createdAt": "2021-01-06T06:17:02Z", "author": {"login": "sijie"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "diffHunk": "@@ -1336,11 +1338,35 @@ void run() throws PulsarAdminException {\n                 , description = \"ManagedLedger offload deletion lag in bytes\")\n         private Long offloadDeletionLagInMillis;\n \n+        @Parameter(\n+                names = {\"--offloadedReadPriority\", \"-orp\"},\n+                description = \"read priority for offloaded messages\",\n+                required = false\n+        )\n+        private String offloadReadPriorityStr;\n+\n         @Override\n         void run() throws PulsarAdminException {\n             String persistentTopic = validatePersistentTopic(params);\n+\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwOTU0Nw==", "bodyText": "@sijie This code is in a command-line tool, I think stdout is a good choice for users to get information", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552409547", "createdAt": "2021-01-06T07:23:27Z", "author": {"login": "Renkai"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "diffHunk": "@@ -1336,11 +1338,35 @@ void run() throws PulsarAdminException {\n                 , description = \"ManagedLedger offload deletion lag in bytes\")\n         private Long offloadDeletionLagInMillis;\n \n+        @Parameter(\n+                names = {\"--offloadedReadPriority\", \"-orp\"},\n+                description = \"read priority for offloaded messages\",\n+                required = false\n+        )\n+        private String offloadReadPriorityStr;\n+\n         @Override\n         void run() throws PulsarAdminException {\n             String persistentTopic = validatePersistentTopic(params);\n+\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIwNw=="}, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQxNzAxOA==", "bodyText": "This is a set command, no?", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552417018", "createdAt": "2021-01-06T07:45:54Z", "author": {"login": "sijie"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "diffHunk": "@@ -1336,11 +1338,35 @@ void run() throws PulsarAdminException {\n                 , description = \"ManagedLedger offload deletion lag in bytes\")\n         private Long offloadDeletionLagInMillis;\n \n+        @Parameter(\n+                names = {\"--offloadedReadPriority\", \"-orp\"},\n+                description = \"read priority for offloaded messages\",\n+                required = false\n+        )\n+        private String offloadReadPriorityStr;\n+\n         @Override\n         void run() throws PulsarAdminException {\n             String persistentTopic = validatePersistentTopic(params);\n+\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIwNw=="}, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQzNzg5NA==", "bodyText": "@sijie I check the code again, I think it's ok to remove println so we can use mute as success information, if the value which user set is an invalid value, the tool will throw a exception. The println was removed.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552437894", "createdAt": "2021-01-06T08:39:15Z", "author": {"login": "Renkai"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdTopics.java", "diffHunk": "@@ -1336,11 +1338,35 @@ void run() throws PulsarAdminException {\n                 , description = \"ManagedLedger offload deletion lag in bytes\")\n         private Long offloadDeletionLagInMillis;\n \n+        @Parameter(\n+                names = {\"--offloadedReadPriority\", \"-orp\"},\n+                description = \"read priority for offloaded messages\",\n+                required = false\n+        )\n+        private String offloadReadPriorityStr;\n+\n         @Override\n         void run() throws PulsarAdminException {\n             String persistentTopic = validatePersistentTopic(params);\n+\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIwNw=="}, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjY4MzcyOnYy", "diffSide": "RIGHT", "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNjoxNzowNlrOIOzOSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwODo0MDoyOFrOIO2Khg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIxOQ==", "bodyText": "@Renkai Can we avoid using System.out.println?", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552390219", "createdAt": "2021-01-06T06:17:06Z", "author": {"login": "sijie"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -1788,10 +1796,25 @@ void run() throws PulsarAdminException {\n                     offloadAfterThresholdInBytes = offloadAfterThreshold;\n                 }\n             }\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwOTU5NA==", "bodyText": "ditto", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552409594", "createdAt": "2021-01-06T07:23:33Z", "author": {"login": "Renkai"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -1788,10 +1796,25 @@ void run() throws PulsarAdminException {\n                     offloadAfterThresholdInBytes = offloadAfterThreshold;\n                 }\n             }\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIxOQ=="}, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQxNjk1MQ==", "bodyText": "But this is a set command, no? Why people need this information when setting the offloaded priority?", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552416951", "createdAt": "2021-01-06T07:45:43Z", "author": {"login": "sijie"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -1788,10 +1796,25 @@ void run() throws PulsarAdminException {\n                     offloadAfterThresholdInBytes = offloadAfterThreshold;\n                 }\n             }\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIxOQ=="}, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQzODQwNg==", "bodyText": "ditto", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552438406", "createdAt": "2021-01-06T08:40:28Z", "author": {"login": "Renkai"}, "path": "pulsar-client-tools/src/main/java/org/apache/pulsar/admin/cli/CmdNamespaces.java", "diffHunk": "@@ -1788,10 +1796,25 @@ void run() throws PulsarAdminException {\n                     offloadAfterThresholdInBytes = offloadAfterThreshold;\n                 }\n             }\n+            OffloadedReadPriority offloadedReadPriority = OffloadPolicies.DEFAULT_OFFLOADED_READ_PRIORITY;\n+\n+            if (this.offloadReadPriorityStr != null) {\n+                try {\n+                    offloadedReadPriority = OffloadedReadPriority.fromString(this.offloadReadPriorityStr);\n+                    System.out.println(\"offloadedReadPriority = \" + offloadedReadPriority);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDIxOQ=="}, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjY4NTI3OnYy", "diffSide": "RIGHT", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/OffloadPolicies.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNjoxNzo1N1rOIOzPQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNjoxNzo1N1rOIOzPQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MDQ2Ng==", "bodyText": "I would suggest renaming OFFLOADED_FIRST to TIERED_STORAGE_FIRST.", "url": "https://github.com/apache/pulsar/pull/8717#discussion_r552390466", "createdAt": "2021-01-06T06:17:57Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/OffloadPolicies.java", "diffHunk": "@@ -42,9 +46,58 @@\n @Data\n public class OffloadPolicies implements Serializable {\n \n+    @InterfaceAudience.Public\n+    @InterfaceStability.Stable\n+    public enum OffloadedReadPriority {\n+        /**\n+         * For offloaded messages, readers will try to read from bookkeeper at first,\n+         * if messages not exist at bookkeeper then read from offloaded storage.\n+         */\n+        BOOKKEEPER_FIRST(\"bookkeeper-first\"),\n+        /**\n+         * For offloaded messages, readers will try to read from offloaded storage first,\n+         * even they are still exist in bookkeeper.\n+         */\n+        OFFLOADED_FIRST(\"offloaded-first\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abf10abbc8b44ea63364c023c3e6a99b95a6df94"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2733, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}