{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDY3Njg3", "number": 6862, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwNzo1OTozMlrOD4vjng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOToxMzozOFrOD4zdtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODI2MDE0OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwNzo1OTozMlrOGPptVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzozODo0MFrOGPsJZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA2NTE3NA==", "bodyText": "We also need to add a check for DEFAULT_POLICY since users may specify the queue size that lower that maxNumMessages of the DEFAULT_POLICY.", "url": "https://github.com/apache/pulsar/pull/6862#discussion_r419065174", "createdAt": "2020-05-03T07:59:32Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "diffHunk": "@@ -95,7 +95,16 @@ protected ConsumerBase(PulsarClientImpl client, String topic, ConsumerConfigurat\n         this.schema = schema;\n         this.interceptors = interceptors;\n         if (conf.getBatchReceivePolicy() != null) {\n-            this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            if (conf.getBatchReceivePolicy().getMaxNumMessages() > this.maxReceiverQueueSize) {\n+                BatchReceivePolicy batchReceivePolicy = conf.getBatchReceivePolicy();\n+                this.batchReceivePolicy = BatchReceivePolicy.builder()\n+                        .maxNumMessages(this.maxReceiverQueueSize)\n+                        .maxNumBytes(batchReceivePolicy.getMaxNumBytes())\n+                        .timeout((int)batchReceivePolicy.getTimeoutMs()/1000, TimeUnit.SECONDS)\n+                        .build();\n+            } else {\n+                this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            }\n         } else {\n             this.batchReceivePolicy = BatchReceivePolicy.DEFAULT_POLICY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb43fc6f3300e7844b900954bfcee52a0b1523ab"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwMjkxNw==", "bodyText": "The above solution is correct but users can get confused seeing their batchRecieve policy configuration has changed\nWhy not changing the function hasEnoughMessagesForBatchReceive to return true when\nincomingMessages.size() >= maxReceiverQueueSize ?\nprotected boolean hasEnoughMessagesForBatchReceive() {\nif (batchReceivePolicy.getMaxNumMessages() <= 0 && batchReceivePolicy.getMaxNumBytes() <= 0) {\nreturn false;\n}\nreturn (batchReceivePolicy.getMaxNumMessages() > 0 && incomingMessages.size() >= batchReceivePolicy.getMaxNumMessages())\n|| (batchReceivePolicy.getMaxNumBytes() > 0 && INCOMING_MESSAGES_SIZE_UPDATER.get(this) >= batchReceivePolicy.getMaxNumBytes()) || (incomingMessages.size() >= maxReceiverQueueSize);\n}\nWhat do you think ?", "url": "https://github.com/apache/pulsar/pull/6862#discussion_r419102917", "createdAt": "2020-05-03T13:20:36Z", "author": {"login": "avimas"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "diffHunk": "@@ -95,7 +95,16 @@ protected ConsumerBase(PulsarClientImpl client, String topic, ConsumerConfigurat\n         this.schema = schema;\n         this.interceptors = interceptors;\n         if (conf.getBatchReceivePolicy() != null) {\n-            this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            if (conf.getBatchReceivePolicy().getMaxNumMessages() > this.maxReceiverQueueSize) {\n+                BatchReceivePolicy batchReceivePolicy = conf.getBatchReceivePolicy();\n+                this.batchReceivePolicy = BatchReceivePolicy.builder()\n+                        .maxNumMessages(this.maxReceiverQueueSize)\n+                        .maxNumBytes(batchReceivePolicy.getMaxNumBytes())\n+                        .timeout((int)batchReceivePolicy.getTimeoutMs()/1000, TimeUnit.SECONDS)\n+                        .build();\n+            } else {\n+                this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            }\n         } else {\n             this.batchReceivePolicy = BatchReceivePolicy.DEFAULT_POLICY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA2NTE3NA=="}, "originalCommit": {"oid": "bb43fc6f3300e7844b900954bfcee52a0b1523ab"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNDQ3OA==", "bodyText": "This will cause batch message return to the user earlier right? This will introduce another problem, users will get the batch message before reaching maxNumMessage. It's better to tell users the receiver queue size needs to greater than the maxNumMessage of the batch receive policy.", "url": "https://github.com/apache/pulsar/pull/6862#discussion_r419104478", "createdAt": "2020-05-03T13:33:05Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "diffHunk": "@@ -95,7 +95,16 @@ protected ConsumerBase(PulsarClientImpl client, String topic, ConsumerConfigurat\n         this.schema = schema;\n         this.interceptors = interceptors;\n         if (conf.getBatchReceivePolicy() != null) {\n-            this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            if (conf.getBatchReceivePolicy().getMaxNumMessages() > this.maxReceiverQueueSize) {\n+                BatchReceivePolicy batchReceivePolicy = conf.getBatchReceivePolicy();\n+                this.batchReceivePolicy = BatchReceivePolicy.builder()\n+                        .maxNumMessages(this.maxReceiverQueueSize)\n+                        .maxNumBytes(batchReceivePolicy.getMaxNumBytes())\n+                        .timeout((int)batchReceivePolicy.getTimeoutMs()/1000, TimeUnit.SECONDS)\n+                        .build();\n+            } else {\n+                this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            }\n         } else {\n             this.batchReceivePolicy = BatchReceivePolicy.DEFAULT_POLICY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA2NTE3NA=="}, "originalCommit": {"oid": "bb43fc6f3300e7844b900954bfcee52a0b1523ab"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTEyNA==", "bodyText": "I completely agree that throwing an exception is a better choice", "url": "https://github.com/apache/pulsar/pull/6862#discussion_r419105124", "createdAt": "2020-05-03T13:38:40Z", "author": {"login": "avimas"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "diffHunk": "@@ -95,7 +95,16 @@ protected ConsumerBase(PulsarClientImpl client, String topic, ConsumerConfigurat\n         this.schema = schema;\n         this.interceptors = interceptors;\n         if (conf.getBatchReceivePolicy() != null) {\n-            this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            if (conf.getBatchReceivePolicy().getMaxNumMessages() > this.maxReceiverQueueSize) {\n+                BatchReceivePolicy batchReceivePolicy = conf.getBatchReceivePolicy();\n+                this.batchReceivePolicy = BatchReceivePolicy.builder()\n+                        .maxNumMessages(this.maxReceiverQueueSize)\n+                        .maxNumBytes(batchReceivePolicy.getMaxNumBytes())\n+                        .timeout((int)batchReceivePolicy.getTimeoutMs()/1000, TimeUnit.SECONDS)\n+                        .build();\n+            } else {\n+                this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            }\n         } else {\n             this.batchReceivePolicy = BatchReceivePolicy.DEFAULT_POLICY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA2NTE3NA=="}, "originalCommit": {"oid": "bb43fc6f3300e7844b900954bfcee52a0b1523ab"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODkwMDM3OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxOToxMzozOFrOGPuq3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDoyMzo0OFrOGSBDpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0NjQ2MQ==", "bodyText": "can we also add unit tests with the desired behaviour ?", "url": "https://github.com/apache/pulsar/pull/6862#discussion_r419146461", "createdAt": "2020-05-03T19:13:38Z", "author": {"login": "psilos"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "diffHunk": "@@ -95,7 +95,16 @@ protected ConsumerBase(PulsarClientImpl client, String topic, ConsumerConfigurat\n         this.schema = schema;\n         this.interceptors = interceptors;\n         if (conf.getBatchReceivePolicy() != null) {\n-            this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            if (conf.getBatchReceivePolicy().getMaxNumMessages() > this.maxReceiverQueueSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb43fc6f3300e7844b900954bfcee52a0b1523ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU0NDg2OQ==", "bodyText": "Thanks for your feedback, I have add the unit tests for all kinds of exception case, please take a look.", "url": "https://github.com/apache/pulsar/pull/6862#discussion_r421544869", "createdAt": "2020-05-07T14:23:48Z", "author": {"login": "hangc0276"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/ConsumerBase.java", "diffHunk": "@@ -95,7 +95,16 @@ protected ConsumerBase(PulsarClientImpl client, String topic, ConsumerConfigurat\n         this.schema = schema;\n         this.interceptors = interceptors;\n         if (conf.getBatchReceivePolicy() != null) {\n-            this.batchReceivePolicy = conf.getBatchReceivePolicy();\n+            if (conf.getBatchReceivePolicy().getMaxNumMessages() > this.maxReceiverQueueSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0NjQ2MQ=="}, "originalCommit": {"oid": "bb43fc6f3300e7844b900954bfcee52a0b1523ab"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1835, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}