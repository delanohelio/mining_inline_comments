{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MzgwNTY1", "number": 7690, "title": "[proxy] Fix deadlock in pulsar proxy", "bodyText": "Motivation\nWhen a broker server is restarted, the Pulsar proxy outputs the following warning:\n15:09:01.486 [main-EventThread] INFO  o.a.p.z.ZooKeeperChildrenCache       - reloadCache called in zookeeperChildrenCache for path /loadbalance/brokers\n15:09:31.487 [main-EventThread] WARN  o.a.p.p.s.util.ZookeeperCacheLoader  - Error updating broker info after broker list changed.\njava.util.concurrent.TimeoutException: null\n        at java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1784)\n        at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1928)\n        at org.apache.pulsar.zookeeper.ZooKeeperDataCache.get(ZooKeeperDataCache.java:97)\n        at org.apache.pulsar.proxy.server.util.ZookeeperCacheLoader.updateBrokerList(ZookeeperCacheLoader.java:118)\n        at org.apache.pulsar.proxy.server.util.ZookeeperCacheLoader.lambda$new$0(ZookeeperCacheLoader.java:82)\n        at org.apache.pulsar.zookeeper.ZooKeeperChildrenCache.lambda$0(ZooKeeperChildrenCache.java:89)\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:670)\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:646)\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1975)\n        at org.apache.pulsar.zookeeper.ZooKeeperCache.lambda$22(ZooKeeperCache.java:415)\n        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:592)\n        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:508)\n\nThis is due to a deadlock occurring in the proxy. While this deadlock occurs, main-EventThread is stopped in the following states:\n\"main-EventThread\" #26 daemon prio=5 os_prio=0 tid=0x00007fa9b55ff000 nid=0x3d98 waiting on condition [0x00007fa923dfc000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n        at sun.misc.Unsafe.park(Native Method)\n        - parking to wait for  <0x00000000eef2ad80> (a java.util.concurrent.CompletableFuture$Signaller)\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n        at java.util.concurrent.CompletableFuture$Signaller.block(CompletableFuture.java:1709)\n        at java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3323)\n        at java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1788)\n        at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1928)\n        at org.apache.pulsar.zookeeper.ZooKeeperDataCache.get(ZooKeeperDataCache.java:97)\n        at org.apache.pulsar.proxy.server.util.ZookeeperCacheLoader.updateBrokerList(ZookeeperCacheLoader.java:123)\n        at org.apache.pulsar.proxy.server.util.ZookeeperCacheLoader.lambda$new$0(ZookeeperCacheLoader.java:84)\n        at org.apache.pulsar.proxy.server.util.ZookeeperCacheLoader$$Lambda$40/1450652220.onUpdate(Unknown Source)\n        at org.apache.pulsar.zookeeper.ZooKeeperChildrenCache.lambda$0(ZooKeeperChildrenCache.java:89)\n        at org.apache.pulsar.zookeeper.ZooKeeperChildrenCache$$Lambda$365/191748085.accept(Unknown Source)\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:670)\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:646)\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:488)\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1975)\n        at org.apache.pulsar.zookeeper.ZooKeeperCache.lambda$22(ZooKeeperCache.java:415)\n        at org.apache.pulsar.zookeeper.ZooKeeperCache$$Lambda$46/1819738265.processResult(Unknown Source)\n        at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:592)\n        at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:508)\n\nZookeeperCacheLoader will try to get load information for all available brokers from ZK or its cache if there is a change in the znode /loadbalance/brokers.\nThe problem is that it is main-EventThread that performs the above process, and it is also main-EventThread that gets the data from ZK.\nmain-EventThread is blocked at the following line, so deadlock occurs.\n\n  \n    \n      pulsar/pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZooKeeperDataCache.java\n    \n    \n         Line 97\n      in\n      9d3ab60\n    \n    \n    \n    \n\n        \n          \n           return getAsync(path).get(zkOperationTimeoutSeconds, TimeUnit.SECONDS);     \n        \n    \n  \n\n\nModifications\nMake the method ZookeeperCacheLoader#updateBrokerList run on a thread separate from main-EventThread.\nMade updateBrokerList() method asynchronous so that main-EventThread is not blocked.", "createdAt": "2020-07-29T11:35:12Z", "url": "https://github.com/apache/pulsar/pull/7690", "merged": true, "mergeCommit": {"oid": "d7c1cfa36305d86f2b2bee13ca401832f089e48e"}, "closed": true, "closedAt": "2020-08-06T09:56:31Z", "author": {"login": "massakam"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5o81egH2gAyNDU4MzgwNTY1OmVkNjMwYjlkNjc0NzQ5OTBjZjU1NzVhZTE2ZWRkZTJiZWU1Njk3NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8MzDpAFqTQ2MjM3NjE0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed630b9d67474990cf5575ae16edde2bee569742", "author": {"user": {"login": "massakam", "name": "Masahiro Sakamoto"}}, "url": "https://github.com/apache/pulsar/commit/ed630b9d67474990cf5575ae16edde2bee569742", "committedDate": "2020-07-29T11:02:25Z", "message": "Fix deadlock in pulsar proxy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NTQ2Mjg3", "url": "https://github.com/apache/pulsar/pull/7690#pullrequestreview-457546287", "createdAt": "2020-07-29T13:55:44Z", "commit": {"oid": "ed630b9d67474990cf5575ae16edde2bee569742"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjQ5MjU1", "url": "https://github.com/apache/pulsar/pull/7690#pullrequestreview-457649255", "createdAt": "2020-07-29T15:40:54Z", "commit": {"oid": "ed630b9d67474990cf5575ae16edde2bee569742"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTo0MDo1NFrOG4-fyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTo0MDo1NFrOG4-fyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM5NzM4NQ==", "bodyText": "Do we need a blocking call here? Why can't we just make this method async? So we don't need to introduce another thread.", "url": "https://github.com/apache/pulsar/pull/7690#discussion_r462397385", "createdAt": "2020-07-29T15:40:54Z", "author": {"login": "sijie"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/util/ZookeeperCacheLoader.java", "diffHunk": "@@ -78,11 +84,14 @@ public LoadManagerReport deserialize(String key, byte[] content) throws Exceptio\n \n         this.availableBrokersCache = new ZooKeeperChildrenCache(getLocalZkCache(), LOADBALANCE_BROKERS_ROOT);\n         this.availableBrokersCache.registerListener((path, brokerNodes, stat) -> {\n-            try {\n-                updateBrokerList(brokerNodes);\n-            } catch (Exception e) {\n-                log.warn(\"Error updating broker info after broker list changed.\", e);\n-            }\n+            // Run in a separate thread to avoid deadlocks\n+            brokerListUpdater.execute(() -> {\n+                try {\n+                    updateBrokerList(brokerNodes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed630b9d67474990cf5575ae16edde2bee569742"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c5475c10882fdadf687ad3322558bb5b8b2742", "author": {"user": {"login": "massakam", "name": "Masahiro Sakamoto"}}, "url": "https://github.com/apache/pulsar/commit/f2c5475c10882fdadf687ad3322558bb5b8b2742", "committedDate": "2020-07-30T07:55:53Z", "message": "Update broker info asynchronously"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzEzNTc5", "url": "https://github.com/apache/pulsar/pull/7690#pullrequestreview-458313579", "createdAt": "2020-07-30T11:28:06Z", "commit": {"oid": "f2c5475c10882fdadf687ad3322558bb5b8b2742"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "361512f30fdb2d003f0b17838c966f4e17f33877", "author": {"user": {"login": "massakam", "name": "Masahiro Sakamoto"}}, "url": "https://github.com/apache/pulsar/commit/361512f30fdb2d003f0b17838c966f4e17f33877", "committedDate": "2020-08-04T12:17:12Z", "message": "Make loadReport Optional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTQ5MzIw", "url": "https://github.com/apache/pulsar/pull/7690#pullrequestreview-461149320", "createdAt": "2020-08-04T20:28:39Z", "commit": {"oid": "361512f30fdb2d003f0b17838c966f4e17f33877"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMzc2MTQ1", "url": "https://github.com/apache/pulsar/pull/7690#pullrequestreview-462376145", "createdAt": "2020-08-06T09:56:10Z", "commit": {"oid": "361512f30fdb2d003f0b17838c966f4e17f33877"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 429, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}