{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0Mzg2ODY5", "number": 7914, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMjo1OToyN1rOEeI5qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMjo1OToyN1rOEeI5qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDM4NTcwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMjo1OToyN1rOHJokXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDowODo0MVrOHLw7vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2MzkwMA==", "bodyText": "Please return CompletableFuture< Integer > instead of passing in AsyncResponse.", "url": "https://github.com/apache/pulsar/pull/7914#discussion_r479863900", "createdAt": "2020-08-31T02:59:27Z", "author": {"login": "jianyun8023"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -2368,6 +2371,53 @@ protected void internalGetPersistence(AsyncResponse asyncResponse){\n         return pulsar().getTopicPoliciesService().updateTopicPoliciesAsync(topicName, topicPolicies.get());\n     }\n \n+    protected void internalGetMaxProducers(AsyncResponse asyncResponse) {\n+        validateAdminAccessForTenant(namespaceName.getTenant());\n+        validatePoliciesReadOnlyAccess();\n+        if (topicName.isGlobal()) {\n+            validateGlobalNamespaceOwnership(namespaceName);\n+        }\n+        checkTopicLevelPolicyEnable();\n+        Optional<Integer> maxProducers = getTopicPolicies(topicName)\n+                .map(TopicPolicies::getMaxProducerPerTopic);\n+        if (!maxProducers.isPresent()) {\n+            asyncResponse.resume(Response.noContent().build());\n+        } else {\n+            asyncResponse.resume(maxProducers.get());\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b5f07578d1dcfe34832c2063b65226847ac25fe"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2NDE1MA==", "bodyText": "Or directly return Integer.", "url": "https://github.com/apache/pulsar/pull/7914#discussion_r479864150", "createdAt": "2020-08-31T03:00:25Z", "author": {"login": "jianyun8023"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -2368,6 +2371,53 @@ protected void internalGetPersistence(AsyncResponse asyncResponse){\n         return pulsar().getTopicPoliciesService().updateTopicPoliciesAsync(topicName, topicPolicies.get());\n     }\n \n+    protected void internalGetMaxProducers(AsyncResponse asyncResponse) {\n+        validateAdminAccessForTenant(namespaceName.getTenant());\n+        validatePoliciesReadOnlyAccess();\n+        if (topicName.isGlobal()) {\n+            validateGlobalNamespaceOwnership(namespaceName);\n+        }\n+        checkTopicLevelPolicyEnable();\n+        Optional<Integer> maxProducers = getTopicPolicies(topicName)\n+                .map(TopicPolicies::getMaxProducerPerTopic);\n+        if (!maxProducers.isPresent()) {\n+            asyncResponse.resume(Response.noContent().build());\n+        } else {\n+            asyncResponse.resume(maxProducers.get());\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2MzkwMA=="}, "originalCommit": {"oid": "2b5f07578d1dcfe34832c2063b65226847ac25fe"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA5ODExMA==", "bodyText": "It seems some methods similar to this also need to modify, can we modify it all?", "url": "https://github.com/apache/pulsar/pull/7914#discussion_r482098110", "createdAt": "2020-09-02T14:08:41Z", "author": {"login": "zhanghaou"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -2368,6 +2371,53 @@ protected void internalGetPersistence(AsyncResponse asyncResponse){\n         return pulsar().getTopicPoliciesService().updateTopicPoliciesAsync(topicName, topicPolicies.get());\n     }\n \n+    protected void internalGetMaxProducers(AsyncResponse asyncResponse) {\n+        validateAdminAccessForTenant(namespaceName.getTenant());\n+        validatePoliciesReadOnlyAccess();\n+        if (topicName.isGlobal()) {\n+            validateGlobalNamespaceOwnership(namespaceName);\n+        }\n+        checkTopicLevelPolicyEnable();\n+        Optional<Integer> maxProducers = getTopicPolicies(topicName)\n+                .map(TopicPolicies::getMaxProducerPerTopic);\n+        if (!maxProducers.isPresent()) {\n+            asyncResponse.resume(Response.noContent().build());\n+        } else {\n+            asyncResponse.resume(maxProducers.get());\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2MzkwMA=="}, "originalCommit": {"oid": "2b5f07578d1dcfe34832c2063b65226847ac25fe"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2146, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}