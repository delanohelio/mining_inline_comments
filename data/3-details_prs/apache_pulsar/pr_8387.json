{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNTU4MzYy", "number": 8387, "title": "fix pause does not work for new created consumer ", "bodyText": "Fixes #8214\nMotivation\nfix pause does not work for new created consumer in case of multi topics consumer\nModifications\nadd a flag for MultiTopicsConsumerImpl  which indicates wheter MultiTopicsConsumerImpl has been paused or not. If the flag is true, we should pause the new added consumers for new topic partition.", "createdAt": "2020-10-27T08:06:03Z", "url": "https://github.com/apache/pulsar/pull/8387", "merged": true, "mergeCommit": {"oid": "b2c0f5932d2354c0cad142071d55f5a157c2a588"}, "closed": true, "closedAt": "2020-10-30T07:46:26Z", "author": {"login": "aloyszhang"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW6X4igH2gAyNTEwNTU4MzYyOjA5ZTMxNDI5NDIyY2RmYjk4Y2JiYWI2MDZmNjAzNWU1MDQ1MDEyMmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXh4YwgFqTUyMDQzNDU0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "09e31429422cdfb98cbbab606f6035e50450122e", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/09e31429422cdfb98cbbab606f6035e50450122e", "committedDate": "2020-10-28T09:44:09Z", "message": "fix pause does not work for new created consumer in case of multi topics consumers after update topic partitions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3684a0f970124325daeea74e0c89d1245767d9c6", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/3684a0f970124325daeea74e0c89d1245767d9c6", "committedDate": "2020-10-27T07:56:05Z", "message": "fix pause does not work for new created consumer in case of multi topics consumers after update topic partitions"}, "afterCommit": {"oid": "09e31429422cdfb98cbbab606f6035e50450122e", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/09e31429422cdfb98cbbab606f6035e50450122e", "committedDate": "2020-10-28T09:44:09Z", "message": "fix pause does not work for new created consumer in case of multi topics consumers after update topic partitions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NTY4MTQ1", "url": "https://github.com/apache/pulsar/pull/8387#pullrequestreview-518568145", "createdAt": "2020-10-28T11:35:52Z", "commit": {"oid": "09e31429422cdfb98cbbab606f6035e50450122e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NjQ1MjUy", "url": "https://github.com/apache/pulsar/pull/8387#pullrequestreview-518645252", "createdAt": "2020-10-28T13:15:04Z", "commit": {"oid": "09e31429422cdfb98cbbab606f6035e50450122e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzoxNTowNFrOHppZAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzoxNzowNFrOHppeTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzMTgxMQ==", "bodyText": "The message count is always 5, it's better to only receive 5 messages to avoid the 3 sec block, we should reduce the test time occupied", "url": "https://github.com/apache/pulsar/pull/8387#discussion_r513431811", "createdAt": "2020-10-28T13:15:04Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/SimpleProducerConsumerTest.java", "diffHunk": "@@ -3037,6 +3037,74 @@ public void testConsumerSubscriptionInitialize() throws Exception {\n         log.info(\"-- Exiting {} test --\", methodName);\n     }\n \n+    @Test\n+    public void testMultiTopicsConsumerImplPause() throws Exception {\n+        log.info(\"-- Starting {} test --\", methodName);\n+        String topicName = \"persistent://my-property/my-ns/partition-topic\";\n+\n+        admin.topics().createPartitionedTopic(topicName, 1);\n+\n+\n+        Producer<byte[]> producer = pulsarClient.newProducer()\n+                .topic(topicName)\n+                .enableBatching(false)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .create();\n+\n+        // 1. produce 5 messages\n+        for (int i = 0; i < 5; i++) {\n+            final String message = \"my-message-\" + i;\n+            producer.send(message.getBytes(UTF_8));\n+        }\n+\n+        Consumer<byte[]> consumer = pulsarClient.newConsumer().topic(topicName)\n+                .subscriptionInitialPosition(SubscriptionInitialPosition.Earliest)\n+                .receiverQueueSize(1)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .subscriptionName(\"test-multi-topic-consumer\").subscribe();\n+\n+        int counter = 0;\n+        Message<byte[]> consumedMessage = consumer.receive(3, TimeUnit.SECONDS);\n+        while(consumedMessage != null) {\n+            assertEquals(consumedMessage.getData(), (\"my-message-\" + counter++ ).getBytes());\n+            consumedMessage = consumer.receive(3, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e31429422cdfb98cbbab606f6035e50450122e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzMzE2NQ==", "bodyText": "Is there any way to check the partitioned updated? such as check the internal consumers of the multiple-consumer. Maybe this can reduce the test time occupied", "url": "https://github.com/apache/pulsar/pull/8387#discussion_r513433165", "createdAt": "2020-10-28T13:17:04Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/SimpleProducerConsumerTest.java", "diffHunk": "@@ -3037,6 +3037,74 @@ public void testConsumerSubscriptionInitialize() throws Exception {\n         log.info(\"-- Exiting {} test --\", methodName);\n     }\n \n+    @Test\n+    public void testMultiTopicsConsumerImplPause() throws Exception {\n+        log.info(\"-- Starting {} test --\", methodName);\n+        String topicName = \"persistent://my-property/my-ns/partition-topic\";\n+\n+        admin.topics().createPartitionedTopic(topicName, 1);\n+\n+\n+        Producer<byte[]> producer = pulsarClient.newProducer()\n+                .topic(topicName)\n+                .enableBatching(false)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .create();\n+\n+        // 1. produce 5 messages\n+        for (int i = 0; i < 5; i++) {\n+            final String message = \"my-message-\" + i;\n+            producer.send(message.getBytes(UTF_8));\n+        }\n+\n+        Consumer<byte[]> consumer = pulsarClient.newConsumer().topic(topicName)\n+                .subscriptionInitialPosition(SubscriptionInitialPosition.Earliest)\n+                .receiverQueueSize(1)\n+                .autoUpdatePartitionsInterval(2 ,TimeUnit.SECONDS)\n+                .subscriptionName(\"test-multi-topic-consumer\").subscribe();\n+\n+        int counter = 0;\n+        Message<byte[]> consumedMessage = consumer.receive(3, TimeUnit.SECONDS);\n+        while(consumedMessage != null) {\n+            assertEquals(consumedMessage.getData(), (\"my-message-\" + counter++ ).getBytes());\n+            consumedMessage = consumer.receive(3, TimeUnit.SECONDS);\n+        }\n+        assertEquals(counter, 5);\n+\n+        // 2. pause multi-topic consumer\n+        consumer.pause();\n+\n+        // 3. update partition\n+        admin.topics().updatePartitionedTopic(topicName, 3);\n+\n+        // 4. wait for client to update partitions\n+        Thread.sleep(5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e31429422cdfb98cbbab606f6035e50450122e"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c70a3424d26056ac1b6da3d632e8b681d8bf61b9", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/c70a3424d26056ac1b6da3d632e8b681d8bf61b9", "committedDate": "2020-10-28T17:51:43Z", "message": "optimize ut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecd56db42debf27922f94f710722c4a1eea31e22", "author": {"user": {"login": "aloyszhang", "name": "Aloys"}}, "url": "https://github.com/apache/pulsar/commit/ecd56db42debf27922f94f710722c4a1eea31e22", "committedDate": "2020-10-29T00:53:23Z", "message": "fix test error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MjYwOTEy", "url": "https://github.com/apache/pulsar/pull/8387#pullrequestreview-519260912", "createdAt": "2020-10-29T01:10:44Z", "commit": {"oid": "ecd56db42debf27922f94f710722c4a1eea31e22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNDM0NTQ2", "url": "https://github.com/apache/pulsar/pull/8387#pullrequestreview-520434546", "createdAt": "2020-10-30T07:45:57Z", "commit": {"oid": "ecd56db42debf27922f94f710722c4a1eea31e22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1125, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}