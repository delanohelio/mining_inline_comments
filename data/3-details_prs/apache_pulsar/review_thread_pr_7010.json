{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMTgxNzMw", "number": 7010, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNToyOToyN1rOD-pGKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMToyNzoxMlrOD-waXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDExNjI3OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNToyOToyN1rOGY3hKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOTowMTowMlrOGY_C_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyODYxNw==", "bodyText": "We should synchronize this method as well?\nAlso line 241 (run() method) accesses the stats variable and the close() method does too. Difference threads access these methods and change the stats variable. It's the same for other variables in this class.", "url": "https://github.com/apache/pulsar/pull/7010#discussion_r428728617", "createdAt": "2020-05-21T15:29:27Z", "author": {"login": "cckellogg"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "diffHunk": "@@ -801,4 +810,12 @@ public void setupOutput(ContextImpl contextImpl) throws Exception {\n             Thread.currentThread().setContextClassLoader(this.instanceClassLoader);\n         }\n     }\n+\n+    public String getStatsAsString() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8828accf43c48c42f229fcb326bc76b9e69c1e37"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczMjI0Nw==", "bodyText": "yes. Done", "url": "https://github.com/apache/pulsar/pull/7010#discussion_r428732247", "createdAt": "2020-05-21T15:35:21Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "diffHunk": "@@ -801,4 +810,12 @@ public void setupOutput(ContextImpl contextImpl) throws Exception {\n             Thread.currentThread().setContextClassLoader(this.instanceClassLoader);\n         }\n     }\n+\n+    public String getStatsAsString() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyODYxNw=="}, "originalCommit": {"oid": "8828accf43c48c42f229fcb326bc76b9e69c1e37"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNzY3NA==", "bodyText": "There is a follow up change coming up that makes stats class threadsafe.", "url": "https://github.com/apache/pulsar/pull/7010#discussion_r428737674", "createdAt": "2020-05-21T15:43:08Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "diffHunk": "@@ -801,4 +810,12 @@ public void setupOutput(ContextImpl contextImpl) throws Exception {\n             Thread.currentThread().setContextClassLoader(this.instanceClassLoader);\n         }\n     }\n+\n+    public String getStatsAsString() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyODYxNw=="}, "originalCommit": {"oid": "8828accf43c48c42f229fcb326bc76b9e69c1e37"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg1MTk2NQ==", "bodyText": "Actually I've made the stats class synchronized to ensure that it becomes threadsafe.\nAlso have moved the setup syncronized, so that it and close won't be able to run together", "url": "https://github.com/apache/pulsar/pull/7010#discussion_r428851965", "createdAt": "2020-05-21T19:01:02Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "diffHunk": "@@ -801,4 +810,12 @@ public void setupOutput(ContextImpl contextImpl) throws Exception {\n             Thread.currentThread().setContextClassLoader(this.instanceClassLoader);\n         }\n     }\n+\n+    public String getStatsAsString() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyODYxNw=="}, "originalCommit": {"oid": "8828accf43c48c42f229fcb326bc76b9e69c1e37"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTMxNDg1OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMToyNzoxMlrOGZDeUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozMjowOVrOGZGKPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyNDQ5OQ==", "bodyText": "Even though synchronized methods are re-entrant in Java, it still appears a little weird that a synchronized getMetrics() be called inside another synchronized method \"getAndResetMetrics()\".  Maybe have another \"base\" private method that gets called by both that is not synchronized?\nA side note, I think in the future, we might want to define more interfaces for \"modules\" in functions, so that it is more clear on what methods should be exposed.", "url": "https://github.com/apache/pulsar/pull/7010#discussion_r428924499", "createdAt": "2020-05-21T21:27:12Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "diffHunk": "@@ -546,13 +547,17 @@ synchronized public void close() {\n         }\n     }\n \n-    public InstanceCommunication.MetricsData getAndResetMetrics() {\n+    // This method is synchronized because it is using the stats variable\n+    synchronized public InstanceCommunication.MetricsData getAndResetMetrics() {\n         InstanceCommunication.MetricsData metricsData = getMetrics();\n-        stats.reset();\n+        if (stats != null) {\n+            stats.reset();\n+        }\n         return metricsData;\n     }\n \n-    public InstanceCommunication.MetricsData getMetrics() {\n+    // This method is synchronized because it is using the stats and javaInstance variables\n+    synchronized public InstanceCommunication.MetricsData getMetrics() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf04dc78f73951c993d289786d166496b17a51f8"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODUwOA==", "bodyText": "Changed it", "url": "https://github.com/apache/pulsar/pull/7010#discussion_r428968508", "createdAt": "2020-05-21T23:32:09Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/JavaInstanceRunnable.java", "diffHunk": "@@ -546,13 +547,17 @@ synchronized public void close() {\n         }\n     }\n \n-    public InstanceCommunication.MetricsData getAndResetMetrics() {\n+    // This method is synchronized because it is using the stats variable\n+    synchronized public InstanceCommunication.MetricsData getAndResetMetrics() {\n         InstanceCommunication.MetricsData metricsData = getMetrics();\n-        stats.reset();\n+        if (stats != null) {\n+            stats.reset();\n+        }\n         return metricsData;\n     }\n \n-    public InstanceCommunication.MetricsData getMetrics() {\n+    // This method is synchronized because it is using the stats and javaInstance variables\n+    synchronized public InstanceCommunication.MetricsData getMetrics() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkyNDQ5OQ=="}, "originalCommit": {"oid": "bf04dc78f73951c993d289786d166496b17a51f8"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1772, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}