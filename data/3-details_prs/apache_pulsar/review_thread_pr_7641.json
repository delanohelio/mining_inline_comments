{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NTE1NzY0", "number": 7641, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1Njo0M1rOERk2uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1Njo0M1rOERk2uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODY1MDgzOnYy", "diffSide": "RIGHT", "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/WorkerStatsManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1Njo0M1rOG2Xh1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoyMToyOFrOG2aMmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2MTc4Mw==", "bodyText": "Do we also want to measure number of function instances started/stopped/terminated.\nWhat about differentiating between sources/sinks/functions?", "url": "https://github.com/apache/pulsar/pull/7641#discussion_r459661783", "createdAt": "2020-07-23T18:56:43Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/WorkerStatsManager.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.pulsar.functions.worker;\n+\n+import io.prometheus.client.CollectorRegistry;\n+import io.prometheus.client.Gauge;\n+import io.prometheus.client.Summary;\n+import lombok.Setter;\n+import org.apache.pulsar.functions.instance.stats.PrometheusTextFormat;\n+\n+import java.io.IOException;\n+import java.io.StringWriter;\n+\n+public class WorkerStatsManager {\n+\n+  private static final String PULSAR_FUNCTION_WORKER_METRICS_PREFIX = \"pulsar_function_worker_\";\n+  private static final String START_UP_TIME = \"start_up_time_ms\";\n+  private static final String INSTANCE_COUNT = \"instance_count\";\n+  private static final String SCHEDULE_TOTAL_EXEC_TIME = \"schedule_execution_time_total_ms\";\n+  private static final String SCHEDULE_STRATEGY_EXEC_TIME = \"schedule_strategy_execution_time_ms\";\n+  private static final String REBALANCE_TOTAL_EXEC_TIME = \"rebalance_execution_time_total_ms\";\n+  private static final String REBALANCE_STRATEGY_EXEC_TIME = \"rebalance_strategy_execution_time_ms\";\n+  private static final String STOPPING_INSTANCE_PROCESS_TIME = \"stop_instance_process_time_ms\";\n+  private static final String UPDATING_INSTANCE_PROCESS_TIME = \"update_instance_process_time_ms\";\n+  private static final String STARTING_INSTANCE_PROCESS_TIME = \"start_instance_process_time_ms\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c1e49300995c05afe30156ee04e00cc90a9dbf5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwNTQ5Nw==", "bodyText": "Do we also want to measure number of function instances started/stopped/terminated.\nA count is already include e.g.\n\npulsar_function_worker_stop_instance_process_time_ms_count 10\n\nWhat about differentiating between sources/sinks/functions?\n\nLet me think more on that.  The thing is this is more of a backend metric (Assignment processing workflow).  We don't really differentiate between sources/sinks/functions at that level.", "url": "https://github.com/apache/pulsar/pull/7641#discussion_r459705497", "createdAt": "2020-07-23T20:21:28Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/worker/src/main/java/org/apache/pulsar/functions/worker/WorkerStatsManager.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.pulsar.functions.worker;\n+\n+import io.prometheus.client.CollectorRegistry;\n+import io.prometheus.client.Gauge;\n+import io.prometheus.client.Summary;\n+import lombok.Setter;\n+import org.apache.pulsar.functions.instance.stats.PrometheusTextFormat;\n+\n+import java.io.IOException;\n+import java.io.StringWriter;\n+\n+public class WorkerStatsManager {\n+\n+  private static final String PULSAR_FUNCTION_WORKER_METRICS_PREFIX = \"pulsar_function_worker_\";\n+  private static final String START_UP_TIME = \"start_up_time_ms\";\n+  private static final String INSTANCE_COUNT = \"instance_count\";\n+  private static final String SCHEDULE_TOTAL_EXEC_TIME = \"schedule_execution_time_total_ms\";\n+  private static final String SCHEDULE_STRATEGY_EXEC_TIME = \"schedule_strategy_execution_time_ms\";\n+  private static final String REBALANCE_TOTAL_EXEC_TIME = \"rebalance_execution_time_total_ms\";\n+  private static final String REBALANCE_STRATEGY_EXEC_TIME = \"rebalance_strategy_execution_time_ms\";\n+  private static final String STOPPING_INSTANCE_PROCESS_TIME = \"stop_instance_process_time_ms\";\n+  private static final String UPDATING_INSTANCE_PROCESS_TIME = \"update_instance_process_time_ms\";\n+  private static final String STARTING_INSTANCE_PROCESS_TIME = \"start_instance_process_time_ms\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY2MTc4Mw=="}, "originalCommit": {"oid": "2c1e49300995c05afe30156ee04e00cc90a9dbf5"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2318, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}