{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MTk4NTUz", "number": 8318, "title": "[Transaction]Delete transaction marker implement", "bodyText": "Motivation\ndelete transaction marker for topic.\nModifications\nwhen cursor sign the markDeletePosition, we will check the next position is transaction marker. if it is we will delete the position.\nVerifying this change\nadd the test for it :\norg.apache.bookkeeper.mledger.impl.ManagedCursorIndividualDeletedMessagesTest\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (no)\nThe schema: (no)\nThe default values of configurations: (no)\nThe wire protocol: (no)\nThe rest endpoints: (no)\nThe admin cli options: (no)\nAnything that affects deployment: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)\nIf a feature is not applicable for documentation, explain why?\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation", "createdAt": "2020-10-21T02:08:31Z", "url": "https://github.com/apache/pulsar/pull/8318", "merged": true, "mergeCommit": {"oid": "9575cb0dc63775ab773577466237330c60cd212c"}, "closed": true, "closedAt": "2020-10-28T08:55:19Z", "author": {"login": "congbobo184"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVsTf_AFqTUxNjI4MjczNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW3QUFAH2gAyNTA3MTk4NTUzOjI5ZTYzMzY4NTUxZmUyNzMyZWE5MTMzODNhMmJjOGZiYWE2OWUxOGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MjgyNzM3", "url": "https://github.com/apache/pulsar/pull/8318#pullrequestreview-516282737", "createdAt": "2020-10-24T14:43:31Z", "commit": {"oid": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNDo0MzozMVrOHnx9MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNDo0NjozN1rOHnyAAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NDk5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void TransactionMarkerDeleteTest() throws Exception {\n          \n          \n            \n                public void testTransactionMarkerDelete() throws Exception {", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511474993", "createdAt": "2020-10-24T14:43:31Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NTUzMQ==", "bodyText": "I did not understand this test, looks not related to the changes that the PR introduced. At least you need to write one Transaction Marker into the managed ledger?", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511475531", "createdAt": "2020-10-24T14:45:50Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {\n+        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n+        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n+        managedLedger.addEntry(\"test\".getBytes());\n+        Position position3 = managedLedger.addEntry(\"test\".getBytes());\n+        PersistentTopic topic = mock(PersistentTopic.class);\n+        doReturn(managedLedger).when(topic).getManagedLedger();\n+        managedLedger.openCursor(\"test\");\n+        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n+                managedLedger.openCursor(\"test\"), false);\n+        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n+                AckType.Individual, Collections.emptyMap());\n+        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n+                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ3NTcxMg==", "bodyText": "I think we should delete all transaction markers right? not only the commit marker.", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511475712", "createdAt": "2020-10-24T14:46:37Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java", "diffHunk": "@@ -393,6 +398,27 @@ public void acknowledgeMessage(List<Position> positions, AckType ackType, Map<St\n         }\n     }\n \n+    private void deleteTransactionMarker(PositionImpl position, AckType ackType, Map<String,Long> properties) {\n+        if (position != null) {\n+            ManagedLedgerImpl managedLedger = ((ManagedLedgerImpl) cursor.getManagedLedger());\n+            managedLedger.asyncReadEntry(position, new ReadEntryCallback() {\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    MessageMetadata messageMetadata = Commands.parseMessageMetadata(entry.getDataBuffer());\n+                    if (Markers.isTxnCommitMarker(messageMetadata)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjg0Njc0", "url": "https://github.com/apache/pulsar/pull/8318#pullrequestreview-516284674", "createdAt": "2020-10-24T15:12:39Z", "commit": {"oid": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNToxMjozOVrOHnyYOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNToxMjozOVrOHnyYOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4MTkxMw==", "bodyText": "The mark delete position of the cursor may be modified, it's better to avoid to all cursor.getMarkDeletedPosition()  twice, it might return a different position. So you can use a local variable to maintain the currentMarkDeletePosition.", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511481913", "createdAt": "2020-10-24T15:12:39Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentSubscription.java", "diffHunk": "@@ -368,6 +372,7 @@ public void acknowledgeMessage(List<Position> positions, AckType ackType, Map<St\n         }\n \n         if (!cursor.getMarkDeletedPosition().equals(previousMarkDeletePosition)) {\n+            deleteTransactionMarker((PositionImpl) cursor.getMarkDeletedPosition(), ackType, properties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1633c9e8dc6e13171c79f9cb87adfc785800fc"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDQ5OTcw", "url": "https://github.com/apache/pulsar/pull/8318#pullrequestreview-516449970", "createdAt": "2020-10-26T03:30:52Z", "commit": {"oid": "9689235a9204c880be37590b4f62eb6338d07a58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzozMDo1MlrOHn_5qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzozMDo1MlrOHn_5qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwMzQ2NQ==", "bodyText": "Please release the ledger and cursor resources after the test.", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511703465", "createdAt": "2020-10-26T03:30:52Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.apache.pulsar.common.api.proto.PulsarMarkers.MessageIdData;\n+import org.apache.pulsar.common.protocol.Markers;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {\n+        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n+        PersistentTopic topic = mock(PersistentTopic.class);\n+        doReturn(managedLedger).when(topic).getManagedLedger();\n+        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n+                managedLedger.openCursor(\"test\"), false);\n+        MessageIdData messageIdData = MessageIdData.newBuilder()\n+                .setLedgerId(1)\n+                .setEntryId(1)\n+                .build();\n+        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n+        managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n+        Position position3 = managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n+        managedLedger.openCursor(\"test\");\n+        persistentSubscription.acknowledgeMessage(Collections.singletonList(position1),\n+                AckType.Individual, Collections.emptyMap());\n+        Thread.sleep(1000L);\n+        assertEquals(0, ((PositionImpl) persistentSubscription.getCursor()\n+                .getMarkDeletedPosition()).compareTo((PositionImpl) position3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9689235a9204c880be37590b4f62eb6338d07a58"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDU1MTA0", "url": "https://github.com/apache/pulsar/pull/8318#pullrequestreview-516455104", "createdAt": "2020-10-26T03:55:22Z", "commit": {"oid": "9689235a9204c880be37590b4f62eb6338d07a58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1NToyMlrOHoAK6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMzo1NToyMlrOHoAK6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTcwNzg4MA==", "bodyText": "// check backlog", "url": "https://github.com/apache/pulsar/pull/8318#discussion_r511707880", "createdAt": "2020-10-26T03:55:22Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.broker.service;\n+\n+import org.apache.bookkeeper.mledger.ManagedLedger;\n+import org.apache.bookkeeper.mledger.Position;\n+import org.apache.bookkeeper.mledger.impl.PositionImpl;\n+import org.apache.pulsar.broker.service.persistent.PersistentSubscription;\n+import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n+import org.apache.pulsar.common.api.proto.PulsarApi.CommandAck.AckType;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+import org.apache.pulsar.common.api.proto.PulsarMarkers.MessageIdData;\n+import org.apache.pulsar.common.protocol.Markers;\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n+import org.testng.annotations.Test;\n+\n+import java.util.Collections;\n+\n+public class TransactionMarkerDeleteTest extends BrokerTestBase{\n+\n+    @BeforeMethod\n+    @Override\n+    protected void setup() throws Exception {\n+        super.baseSetup();\n+    }\n+\n+    @AfterMethod\n+    @Override\n+    protected void cleanup() throws Exception {\n+        super.internalCleanup();\n+    }\n+\n+    @Test\n+    public void TransactionMarkerDeleteTest() throws Exception {\n+        ManagedLedger managedLedger = pulsar.getManagedLedgerFactory().open(\"test\");\n+        PersistentTopic topic = mock(PersistentTopic.class);\n+        doReturn(managedLedger).when(topic).getManagedLedger();\n+        PersistentSubscription persistentSubscription = new PersistentSubscription(topic, \"test\",\n+                managedLedger.openCursor(\"test\"), false);\n+        MessageIdData messageIdData = MessageIdData.newBuilder()\n+                .setLedgerId(1)\n+                .setEntryId(1)\n+                .build();\n+        Position position1 = managedLedger.addEntry(\"test\".getBytes());\n+        managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());\n+        Position position3 = managedLedger.addEntry(Markers\n+                .newTxnCommitMarker(1, 1, 1, messageIdData).array());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9689235a9204c880be37590b4f62eb6338d07a58"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NzQzODg1", "url": "https://github.com/apache/pulsar/pull/8318#pullrequestreview-516743885", "createdAt": "2020-10-26T12:52:12Z", "commit": {"oid": "e18fae475a0944b63362ea8d05c6ecdc46144d82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/973c5e851eeb3723dbb44ba3fee8b22aced47fc7", "committedDate": "2020-10-27T13:14:28Z", "message": "no message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a218d86d01cd8fb7adc3d7eff66344e68cfff2b9", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/a218d86d01cd8fb7adc3d7eff66344e68cfff2b9", "committedDate": "2020-10-27T13:14:28Z", "message": "Revert \"no message\"\n\nThis reverts commit cdf77353a30615e756d45f695411a539e7505780."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41661798fdb16b90df8184a169c8be2c42946f53", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/41661798fdb16b90df8184a169c8be2c42946f53", "committedDate": "2020-10-27T13:14:28Z", "message": "no message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd987a6d7bcb9477d52d484f8747d363c88122ef", "author": {"user": {"login": "congbobo", "name": null}}, "url": "https://github.com/apache/pulsar/commit/dd987a6d7bcb9477d52d484f8747d363c88122ef", "committedDate": "2020-10-27T13:14:28Z", "message": "Revert \"no message\"\n\nThis reverts commit c665fe5fc70909858a15e22d9c8fa0965ffc114a."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a40d26dc83fda15310a290d7d933a80cdcd14699", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/a40d26dc83fda15310a290d7d933a80cdcd14699", "committedDate": "2020-10-27T13:14:28Z", "message": "Transaction marker delete implement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39068c142c64000a8d5c63354f0f8c391d6bce0a", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/39068c142c64000a8d5c63354f0f8c391d6bce0a", "committedDate": "2020-10-27T13:14:28Z", "message": "Delete the conflict class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e47c038bf7844cc7e8388e7a80f9a9634683305", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/6e47c038bf7844cc7e8388e7a80f9a9634683305", "committedDate": "2020-10-27T13:14:28Z", "message": "Delete the conflict class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7c1810755a4410e60106031b972ffc7d2207318", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/d7c1810755a4410e60106031b972ffc7d2207318", "committedDate": "2020-10-27T13:14:28Z", "message": "Compare newDeletePosition and markdeletePosition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e07951698a77cf2df92f18875215d9c8b4c7e1", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/22e07951698a77cf2df92f18875215d9c8b4c7e1", "committedDate": "2020-10-27T13:14:28Z", "message": "change the logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d8df3897bca110496e6a91e9c01d5a0217703ee", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/6d8df3897bca110496e6a91e9c01d5a0217703ee", "committedDate": "2020-10-27T13:14:28Z", "message": "Add the test and delete test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "242385458f84ff4ff80a9d99158bc309e671157a", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/242385458f84ff4ff80a9d99158bc309e671157a", "committedDate": "2020-10-27T13:14:28Z", "message": "Delete test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57dd53f0da20479d913501379144e5c3003735c4", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/57dd53f0da20479d913501379144e5c3003735c4", "committedDate": "2020-10-27T13:14:28Z", "message": "Modify the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "760063fff7c229da7c629f8f4f7cdc1d2c678393", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/760063fff7c229da7c629f8f4f7cdc1d2c678393", "committedDate": "2020-10-27T13:14:28Z", "message": "Add the logical for transaction marker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36948d4ec86068cf3ab09be1f4843c03e038b97a", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/36948d4ec86068cf3ab09be1f4843c03e038b97a", "committedDate": "2020-10-27T13:14:28Z", "message": " modify the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c01fbbb835403ad30524c354efe04b9a99017aab", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c01fbbb835403ad30524c354efe04b9a99017aab", "committedDate": "2020-10-27T13:14:28Z", "message": "Delete"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0bfa2fdf4f00c5bc1218628f13681d40a1c582e", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c0bfa2fdf4f00c5bc1218628f13681d40a1c582e", "committedDate": "2020-10-27T13:14:28Z", "message": "add the lastMarkDeleteForTransactionMarker = position"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1c0531789e6174f092e885a71469d9881413852", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/c1c0531789e6174f092e885a71469d9881413852", "committedDate": "2020-10-27T13:14:29Z", "message": "delete annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65cd22e4939b2d5333b7a62af5e4dd40c410062e", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/65cd22e4939b2d5333b7a62af5e4dd40c410062e", "committedDate": "2020-10-27T13:14:29Z", "message": "Update pulsar-broker/src/test/java/org/apache/pulsar/broker/service/TransactionMarkerDeleteTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a7691733618eb5a70a1bcd13e288c63b700c641", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/7a7691733618eb5a70a1bcd13e288c63b700c641", "committedDate": "2020-10-27T13:14:29Z", "message": "Modify the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d939e902b478c83014016a78d0ac519f4e2b759", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/7d939e902b478c83014016a78d0ac519f4e2b759", "committedDate": "2020-10-27T13:18:09Z", "message": "Recover the class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa247cd240eb99482895ef0af0f598fa47b59b74", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/aa247cd240eb99482895ef0af0f598fa47b59b74", "committedDate": "2020-10-27T13:23:27Z", "message": "Recover the class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17cc339dd4e11d2cc5e8f284d4abbd2523d47bd3", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/17cc339dd4e11d2cc5e8f284d4abbd2523d47bd3", "committedDate": "2020-10-27T13:25:33Z", "message": "Recover the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29e63368551fe2732ea913383a2bc8fbaa69e18a", "author": {"user": null}, "url": "https://github.com/apache/pulsar/commit/29e63368551fe2732ea913383a2bc8fbaa69e18a", "committedDate": "2020-10-28T06:06:10Z", "message": "Merge remote-tracking branch 'apache/master' into delete_transaction_marker_implement"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1267, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}