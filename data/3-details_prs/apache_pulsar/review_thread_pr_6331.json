{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NjM3NTgx", "number": 6331, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxMjoyNFrODgHaRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNzowNDozOVrODglVBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDAyNDM5OnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedCursor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxMjoyNFrOFqL0Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxMjoyNFrOFqL0Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3ODEzMA==", "bodyText": "According to what we discussed before, We don't need to specify a subscription name for getting a message by ID. So I think we can get a message from ManagedLedger directly by https://github.com/apache/pulsar/blob/master/managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java#L1494. So that we don't need to create a one-time subscription.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379778130", "createdAt": "2020-02-15T07:12:24Z", "author": {"login": "codelipenghui"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/ManagedCursor.java", "diffHunk": "@@ -131,6 +131,22 @@ Entry getNthEntry(int n, IndividualDeletedEntries deletedEntries)\n     void asyncGetNthEntry(int n, IndividualDeletedEntries deletedEntries, ReadEntryCallback callback,\n             Object ctx);\n \n+\n+    /**\n+     * Asynchronously get a message by its id.\n+     *\n+     * @param ledgerId\n+     *              ledger id\n+     * @param entryId\n+     *              entry id\n+     * @param deletedEntries\n+     *              skip individual deleted entries\n+     * @param callback\n+     * @param ctx\n+     */\n+    void asyncGetMessageById(long ledgerId, long entryId, IndividualDeletedEntries deletedEntries,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDAyNzYwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxMzoyMlrOFqL1ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxMzoyMlrOFqL1ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3ODQ2Nw==", "bodyText": "Same as comments above", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379778467", "createdAt": "2020-02-15T07:13:22Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1403,21 +1403,47 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n-    protected Response internalPeekNthMessage(String subName, int messagePosition, boolean authoritative) {\n-        if (topicName.isGlobal()) {\n-            validateGlobalNamespaceOwnership(namespaceName);\n-        }\n-        PartitionedTopicMetadata partitionMetadata = getPartitionedTopicMetadata(topicName, authoritative, false);\n-        if (partitionMetadata.partitions > 0) {\n-            throw new RestException(Status.METHOD_NOT_ALLOWED, \"Peek messages on a partitioned topic is not allowed\");\n+    protected Response internalGetMessageById(long ledgerId, long entryId, boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        String subName = \"get-message-id-\" + UUID.randomUUID().toString();\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+\n+        Entry entry = null;\n+        try {\n+            PersistentSubscription subscription =\n+                    (PersistentSubscription) topic.createSubscription(subName, InitialPosition.Earliest, false).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDAzNzE3OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/Subscription.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwNzoxNjoyMlrOFqL5vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQxOTo1NTo0NVrOFqQWyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3OTUxOQ==", "bodyText": "If we can use ManagedLedger directly, this method also can be removed.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379779519", "createdAt": "2020-02-15T07:16:22Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/Subscription.java", "diffHunk": "@@ -79,6 +80,8 @@ default long getNumberOfEntriesDelayed() {\n \n     CompletableFuture<Entry> peekNthMessage(int messagePosition);\n \n+    CompletableFuture<Entry> getMessageById(long ledgerId, long entryId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg1MjQ5MA==", "bodyText": "Good suggestion. Fixed them in the following update.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r379852490", "createdAt": "2020-02-15T19:55:45Z", "author": {"login": "nlu90"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/Subscription.java", "diffHunk": "@@ -79,6 +80,8 @@ default long getNumberOfEntriesDelayed() {\n \n     CompletableFuture<Entry> peekNthMessage(int messagePosition);\n \n+    CompletableFuture<Entry> getMessageById(long ledgerId, long entryId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTc3OTUxOQ=="}, "originalCommit": {"oid": "532a76defbb990fabecc037a3a567d322d269c22"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTc5NzA4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzowMzo0OFrOFqaEJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNzowMzo0OFrOFqaEJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAxMTU1OA==", "bodyText": "Sorry for being late in reviewing this pull request. I would suggest implementing this using AsyncResponse. We have tried to move away from using sync methods.\nYou can check internalCreateSubscription on how to use AsyncResponse. \n  \n    \n      pulsar/pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java\n    \n    \n         Line 1305\n      in\n      df15210\n    \n    \n    \n    \n\n        \n          \n           protected void internalCreateSubscription(AsyncResponse asyncResponse, String subscriptionName,", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380011558", "createdAt": "2020-02-17T07:03:48Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1403,21 +1404,51 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n-    protected Response internalPeekNthMessage(String subName, int messagePosition, boolean authoritative) {\n-        if (topicName.isGlobal()) {\n-            validateGlobalNamespaceOwnership(namespaceName);\n-        }\n-        PartitionedTopicMetadata partitionMetadata = getPartitionedTopicMetadata(topicName, authoritative, false);\n-        if (partitionMetadata.partitions > 0) {\n-            throw new RestException(Status.METHOD_NOT_ALLOWED, \"Peek messages on a partitioned topic is not allowed\");\n+    protected Response internalGetMessageById(long ledgerId, long entryId, boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;\n+        try {\n+            CompletableFuture<Entry> future = new CompletableFuture<>();\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    future.completeExceptionally(exception);\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    future.complete(entry);\n+                }\n+            }, null);\n+\n+            entry = future.get(1000, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7ff07042b02ba426df06bc60d818c7d38399006"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDUwNTYyOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjoyNDoyMVrOFqzZdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjoyNDoyMVrOFqzZdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNjYxNQ==", "bodyText": "I don't think this is needed any more.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380426615", "createdAt": "2020-02-18T02:24:21Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,43 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ebd9c969d6e01583829112e443512f75411f852"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDUwOTQ2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjoyNzoxNlrOFqzbyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjoyNzoxNlrOFqzbyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNzIxMA==", "bodyText": "move this finally block to line 1520", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380427210", "createdAt": "2020-02-18T02:27:16Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,43 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        Entry entry = null;\n+        try {\n+            CompletableFuture<Entry> future = new CompletableFuture<>();\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    asyncResponse.resume(new RestException(exception));\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    try {\n+                        asyncResponse.resume(generateResponseWithEntry(entry));\n+                    } catch (IOException exception) {\n+                        asyncResponse.resume(new RestException(exception));\n+                    }\n+                }\n+            }, null);\n+        } catch (NullPointerException npe) {\n+            asyncResponse.resume(new RestException(Status.NOT_FOUND, \"Message not found\"));\n+        } catch (Exception exception) {\n+            log.error(\"[{}] Failed to get message with ledgerId {} entryId {} from {}\",\n+                    clientAppId(), ledgerId, entryId, topicName, exception);\n+            asyncResponse.resume(new RestException(exception));\n+        } finally {\n+            if (entry != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ebd9c969d6e01583829112e443512f75411f852"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDkyNjE1OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNzowNDozOVrOFq3PqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNzowNDozOVrOFq3PqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ4OTY0MA==", "bodyText": "I think we need to release the Entry it after using it.", "url": "https://github.com/apache/pulsar/pull/6331#discussion_r380489640", "createdAt": "2020-02-18T07:04:39Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -1495,6 +1496,37 @@ protected void internalResetCursorOnPosition(String subName, boolean authoritati\n         }\n     }\n \n+    protected void internalGetMessageById(AsyncResponse asyncResponse, long ledgerId, long entryId,\n+                                              boolean authoritative) {\n+        verifyReadOperation(authoritative);\n+\n+        PersistentTopic topic = (PersistentTopic) getTopicReference(topicName);\n+        ManagedLedgerImpl ledger = (ManagedLedgerImpl) topic.getManagedLedger();\n+        try {\n+            ledger.asyncReadEntry(new PositionImpl(ledgerId, entryId), new AsyncCallbacks.ReadEntryCallback() {\n+                @Override\n+                public void readEntryFailed(ManagedLedgerException exception, Object ctx) {\n+                    asyncResponse.resume(new RestException(exception));\n+                }\n+\n+                @Override\n+                public void readEntryComplete(Entry entry, Object ctx) {\n+                    try {\n+                        asyncResponse.resume(generateResponseWithEntry(entry));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "882db05a85ab76bbebbedbcd641f9850a57b73f8"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1966, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}