{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMDU4Njk5", "number": 8961, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDowMjozNlrOFFgHGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODo0Nzo0OVrOFJt46Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzEzMzA2OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDowMjozNlrOIGCs3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoxMTowNFrOIGDEyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIwNjYyMA==", "bodyText": "for auto recovery case, here should be a clear and add; only add is not enough", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543206620", "createdAt": "2020-12-15T10:02:36Z", "author": {"login": "jiazhai"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -74,23 +78,26 @@ public RackawareEnsemblePlacementPolicyImpl initialize(ClientConfiguration conf,\n         if (conf.getProperty(ISOLATION_BOOKIE_GROUPS) != null) {\n             String isolationGroupsString = castToString(conf.getProperty(ISOLATION_BOOKIE_GROUPS));\n             if (!isolationGroupsString.isEmpty()) {\n-                for (String isolationGroup : isolationGroupsString.split(\",\")) {\n-                    primaryIsolationGroups.add(isolationGroup);\n-                }\n+                fillIsolationGroup(isolationGroupsString, \"\");\n                 bookieMappingCache = getAndSetZkCache(conf);\n             }\n         }\n         if (conf.getProperty(SECONDARY_ISOLATION_BOOKIE_GROUPS) != null) {\n             String secondaryIsolationGroupsString = castToString(conf.getProperty(SECONDARY_ISOLATION_BOOKIE_GROUPS));\n-            if (!secondaryIsolationGroupsString.isEmpty()) {\n-                for (String isolationGroup : secondaryIsolationGroupsString.split(\",\")) {\n-                    secondaryIsolationGroups.add(isolationGroup);\n-                }\n-            }\n+            fillIsolationGroup(\"\", secondaryIsolationGroupsString);\n         }\n         return super.initialize(conf, optionalDnsResolver, timer, featureProvider, statsLogger, bookieAddressResolver);\n     }\n \n+    private void fillIsolationGroup(String isolationBookieGroups, String secondaryIsolationBookieGroups) {\n+        if (!isolationBookieGroups.isEmpty()) {\n+            primaryIsolationGroups.addAll(Arrays.asList(isolationBookieGroups.split(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f08483c8392f34579f90ebf144130abf6d311a3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIxMjc0NA==", "bodyText": "okay. I will fix it.\nI wonder if it called from auto-recovery, the primaryIsolationGroups should be empty, right? Because the auto-recovery hasn't filled the list.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543212744", "createdAt": "2020-12-15T10:11:04Z", "author": {"login": "zymap"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -74,23 +78,26 @@ public RackawareEnsemblePlacementPolicyImpl initialize(ClientConfiguration conf,\n         if (conf.getProperty(ISOLATION_BOOKIE_GROUPS) != null) {\n             String isolationGroupsString = castToString(conf.getProperty(ISOLATION_BOOKIE_GROUPS));\n             if (!isolationGroupsString.isEmpty()) {\n-                for (String isolationGroup : isolationGroupsString.split(\",\")) {\n-                    primaryIsolationGroups.add(isolationGroup);\n-                }\n+                fillIsolationGroup(isolationGroupsString, \"\");\n                 bookieMappingCache = getAndSetZkCache(conf);\n             }\n         }\n         if (conf.getProperty(SECONDARY_ISOLATION_BOOKIE_GROUPS) != null) {\n             String secondaryIsolationGroupsString = castToString(conf.getProperty(SECONDARY_ISOLATION_BOOKIE_GROUPS));\n-            if (!secondaryIsolationGroupsString.isEmpty()) {\n-                for (String isolationGroup : secondaryIsolationGroupsString.split(\",\")) {\n-                    secondaryIsolationGroups.add(isolationGroup);\n-                }\n-            }\n+            fillIsolationGroup(\"\", secondaryIsolationGroupsString);\n         }\n         return super.initialize(conf, optionalDnsResolver, timer, featureProvider, statsLogger, bookieAddressResolver);\n     }\n \n+    private void fillIsolationGroup(String isolationBookieGroups, String secondaryIsolationBookieGroups) {\n+        if (!isolationBookieGroups.isEmpty()) {\n+            primaryIsolationGroups.addAll(Arrays.asList(isolationBookieGroups.split(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIwNjYyMA=="}, "originalCommit": {"oid": "8f08483c8392f34579f90ebf144130abf6d311a3"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDM3MDAyOnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNToxNVrOIGN7fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNToxNVrOIGN7fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MDU5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n          \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it's present, we will apply it to", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543390591", "createdAt": "2020-12-15T14:25:15Z", "author": {"login": "jbampton"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -134,6 +141,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f08483c8392f34579f90ebf144130abf6d311a3"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDM3NjI2OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNjowN1rOIGN-3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNjowN1rOIGN-3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MTQ1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // the isolation groups for filter the bookies.\n          \n          \n            \n                    // the isolation groups for filtering the bookies.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543391455", "createdAt": "2020-12-15T14:26:07Z", "author": {"login": "jbampton"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -134,6 +141,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n+        // the isolation groups for filter the bookies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f08483c8392f34579f90ebf144130abf6d311a3"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDM3OTA2OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNjozN1rOIGOAig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNjozN1rOIGOAig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5MTg4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n          \n          \n            \n                    // parse the ensemble placement policy from the custom metadata, if it's present, we will apply it to", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543391882", "createdAt": "2020-12-15T14:26:37Z", "author": {"login": "jbampton"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +159,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f08483c8392f34579f90ebf144130abf6d311a3"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDM4NTY5OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNzo0M1rOIGOETw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoyNzo0M1rOIGOETw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM5Mjg0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // the isolation groups for filter the bookies.\n          \n          \n            \n                    // the isolation groups for filtering the bookies.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r543392847", "createdAt": "2020-12-15T14:27:43Z", "author": {"login": "jbampton"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +159,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to\n+        // the isolation groups for filter the bookies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f08483c8392f34579f90ebf144130abf6d311a3"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODk5MzQ1OnYy", "diffSide": "RIGHT", "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMzoxMVrOIG42xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMDoxMDozMFrOIG9oSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Mzg5Mg==", "bodyText": "it's better to move the placement policy ledger metadata to the LedgerMetadataUtils.java. Currently, all of the different types of ledger metadata is generated from the LedgerMetadataUtils.java", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544093892", "createdAt": "2020-12-16T08:13:11Z", "author": {"login": "codelipenghui"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -3239,6 +3250,21 @@ protected void asyncCreateLedger(BookKeeper bookKeeper, ManagedLedgerConfig conf\n         Map<String, byte[]> finalMetadata = new HashMap<>();\n         finalMetadata.putAll(ledgerMetadata);\n         finalMetadata.putAll(metadata);\n+        if (config.getBookKeeperEnsemblePlacementPolicyClassName() != null) {\n+            EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig = new EnsemblePlacementPolicyConfig(\n+                config.getBookKeeperEnsemblePlacementPolicyClassName(),\n+                config.getBookKeeperEnsemblePlacementPolicyProperties()\n+            );\n+            try {\n+                finalMetadata.put(EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG,\n+                    ensemblePlacementPolicyConfig.encode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e788dee5d34dce0278e53e41af8bf65b49bec7cf"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE3MjEwNw==", "bodyText": "Fixed it.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544172107", "createdAt": "2020-12-16T10:10:30Z", "author": {"login": "zymap"}, "path": "managed-ledger/src/main/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerImpl.java", "diffHunk": "@@ -3239,6 +3250,21 @@ protected void asyncCreateLedger(BookKeeper bookKeeper, ManagedLedgerConfig conf\n         Map<String, byte[]> finalMetadata = new HashMap<>();\n         finalMetadata.putAll(ledgerMetadata);\n         finalMetadata.putAll(metadata);\n+        if (config.getBookKeeperEnsemblePlacementPolicyClassName() != null) {\n+            EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig = new EnsemblePlacementPolicyConfig(\n+                config.getBookKeeperEnsemblePlacementPolicyClassName(),\n+                config.getBookKeeperEnsemblePlacementPolicyProperties()\n+            );\n+            try {\n+                finalMetadata.put(EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG,\n+                    ensemblePlacementPolicyConfig.encode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Mzg5Mg=="}, "originalCommit": {"oid": "e788dee5d34dce0278e53e41af8bf65b49bec7cf"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMDY4ODg1OnYy", "diffSide": "LEFT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNDozMjo0OVrOIHIL8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDo1NDo0OVrOIHfusA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0NTA3Mw==", "bodyText": "so this is the fix.\ncan you please remove all unnecessary code formatting ?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544345073", "createdAt": "2020-12-16T14:32:49Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -142,11 +141,6 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e788dee5d34dce0278e53e41af8bf65b49bec7cf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDczMDgwMA==", "bodyText": "I am sorry. Could you please tell me more? It seems that the line you comment already outdated.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544730800", "createdAt": "2020-12-17T00:54:49Z", "author": {"login": "zymap"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -142,11 +141,6 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n     public PlacementResult<List<BookieId>> newEnsemble(int ensembleSize, int writeQuorumSize, int ackQuorumSize,\n             Map<String, byte[]> customMetadata, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n-        // parse the ensemble placement policy from the custom metadata, if it present, we will apply it to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM0NTA3Mw=="}, "originalCommit": {"oid": "e788dee5d34dce0278e53e41af8bf65b49bec7cf"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzk4NDQ4OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNTo0Nzo1OFrOIHltGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwOTo1NDoxN1rOILELNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA==", "bodyText": "The change here has concurrent access issues. Because it resets the primary and secondary isolation groups. It will cause replacing bookies using the wrong group.\nAlso, I don't think the logic here is correct.\nI think we should record the group information in the custom metadata. when replacing a bookie, we need to lookup the bookies in the same group. If it is not an easy change to make here, we should try to build a new bookie ensemble placement policy to achieve this goal and can be used for autorecovery.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544828698", "createdAt": "2020-12-17T05:47:58Z", "author": {"login": "sijie"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +157,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it is present, we will apply it to\n+        // the isolation groups for filtering the bookies.\n+        Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n+            getEnsemblePlacementPolicyConfig(customMetadata);\n+        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5NDc0MA==", "bodyText": "I save the group information in the custom metadata.\nCurrently, the replaceBookie will get all the bookies that are not in the primary group and secondary group and add them to the blacklist.\nDo you mean I should not fill the primary and secondary isolation groups with the ensemble placement policy config which read from the custom metadata rather that I should directly use the placement policy config to get a blacklist?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r544894740", "createdAt": "2020-12-17T08:21:01Z", "author": {"login": "zymap"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +157,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it is present, we will apply it to\n+        // the isolation groups for filtering the bookies.\n+        Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n+            getEnsemblePlacementPolicyConfig(customMetadata);\n+        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA=="}, "originalCommit": {"oid": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQ3ODEyMg==", "bodyText": "@sijie Please take a look, thanks.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r546478122", "createdAt": "2020-12-21T02:23:01Z", "author": {"login": "zymap"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +157,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it is present, we will apply it to\n+        // the isolation groups for filtering the bookies.\n+        Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n+            getEnsemblePlacementPolicyConfig(customMetadata);\n+        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA=="}, "originalCommit": {"oid": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3MzY1Mw==", "bodyText": "@zymap a local var should be enough", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r548473653", "createdAt": "2020-12-24T09:54:17Z", "author": {"login": "jiazhai"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -147,6 +157,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n             Map<String, byte[]> customMetadata, List<BookieId> currentEnsemble,\n             BookieId bookieToReplace, Set<BookieId> excludeBookies)\n             throws BKNotEnoughBookiesException {\n+        // parse the ensemble placement policy from the custom metadata, if it is present, we will apply it to\n+        // the isolation groups for filtering the bookies.\n+        Optional<EnsemblePlacementPolicyConfig> ensemblePlacementPolicyConfig =\n+            getEnsemblePlacementPolicyConfig(customMetadata);\n+        ensemblePlacementPolicyConfig.ifPresent(this::fillIsolationGroupWithEnsemblePlacementPolicyConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDgyODY5OA=="}, "originalCommit": {"oid": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTk2MzE2OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjozMDozNFrOIJNn8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMDo1ODo1MlrOIJUW2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTMxMw==", "bodyText": "Here we are modification shared data structures.\nI think this is the problem that @sijie is pointing out", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r546531313", "createdAt": "2020-12-21T06:30:34Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,6 +171,38 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private void fillIsolationGroupWithEnsemblePlacementPolicyConfig(\n+        EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+\n+        String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n+        if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n+            Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n+            // Because of we may have different ensemblePolicyConfig from different ledgers, so clear\n+            // the isolation groups before refilling it.\n+            primaryIsolationGroups.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY0MTYyNg==", "bodyText": "Yes. I think this is one of the questions.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r546641626", "createdAt": "2020-12-21T10:58:52Z", "author": {"login": "zymap"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,6 +171,38 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private void fillIsolationGroupWithEnsemblePlacementPolicyConfig(\n+        EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+\n+        String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n+        if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n+            Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n+            // Because of we may have different ensemblePolicyConfig from different ledgers, so clear\n+            // the isolation groups before refilling it.\n+            primaryIsolationGroups.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTMxMw=="}, "originalCommit": {"oid": "6e69713c91493d723a921aca7e9ecb0f3d92f6cc"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDU3Njk3OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzoxNjozN1rOILzADA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzoxNjozN1rOILzADA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MDg0NA==", "bodyText": "static ?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549240844", "createdAt": "2020-12-28T07:16:37Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -174,8 +168,11 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(Map<String, byte[]> customMetadata) {\n-        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e788dee5d34dce0278e53e41af8bf65b49bec7cf"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDU4MTUwOnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzoxOTowMVrOILzCag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODo1Njo1MVrOIMkhPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTQ1MA==", "bodyText": "static ?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549241450", "createdAt": "2020-12-28T07:19:01Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUzMjE3NQ==", "bodyText": "This method will use an instance variable.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549532175", "createdAt": "2020-12-29T00:59:57Z", "author": {"login": "zymap"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTQ1MA=="}, "originalCommit": {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA1MjE1Nw==", "bodyText": "you can pass the instance variable to the method, this way it is clearer that the method has not side effects", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r550052157", "createdAt": "2020-12-30T08:56:51Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTQ1MA=="}, "originalCommit": {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDU4MjExOnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzoxOToxNFrOILzCvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzoxOToxNFrOILzCvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MTUzNA==", "bodyText": "static ?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549241534", "createdAt": "2020-12-28T07:19:14Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDU4NzEzOnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNzoyMjozMlrOILzFmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQwODo1Njo1NlrOIMkhfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MjI2Ng==", "bodyText": "can we make this method 'static' ?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549242266", "createdAt": "2020-12-28T07:22:32Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+        Map<String, List<String>> groups = new HashMap<>();\n+        String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n+        if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n+            Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n+            String primaryIsolationGroupString = castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\"));\n+            String secondaryIsolationGroupString = castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\"));\n+            if (!primaryIsolationGroupString.isEmpty()) {\n+                List<String> primaryGroup = Arrays.asList(primaryIsolationGroupString.split(\",\"));\n+                groups.put(ISOLATION_BOOKIE_GROUPS, primaryGroup);\n+            }\n+            if (!secondaryIsolationGroupString.isEmpty()) {\n+                List<String> secondaryGroup = Arrays.asList(secondaryIsolationGroupString.split(\",\"));\n+                groups.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryGroup);\n+            }\n+        }\n+        return groups;\n+    }\n+\n+    private Set<BookieId> getBlacklistedBookiesWithIsolationGroups(int ensembleSize,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUzMjE4OA==", "bodyText": "This method will use an instance variable.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549532188", "createdAt": "2020-12-29T01:00:04Z", "author": {"login": "zymap"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+        Map<String, List<String>> groups = new HashMap<>();\n+        String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n+        if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n+            Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n+            String primaryIsolationGroupString = castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\"));\n+            String secondaryIsolationGroupString = castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\"));\n+            if (!primaryIsolationGroupString.isEmpty()) {\n+                List<String> primaryGroup = Arrays.asList(primaryIsolationGroupString.split(\",\"));\n+                groups.put(ISOLATION_BOOKIE_GROUPS, primaryGroup);\n+            }\n+            if (!secondaryIsolationGroupString.isEmpty()) {\n+                List<String> secondaryGroup = Arrays.asList(secondaryIsolationGroupString.split(\",\"));\n+                groups.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryGroup);\n+            }\n+        }\n+        return groups;\n+    }\n+\n+    private Set<BookieId> getBlacklistedBookiesWithIsolationGroups(int ensembleSize,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MjI2Ng=="}, "originalCommit": {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDA1MjIyMQ==", "bodyText": "you can pass the instance variable to the method, this way it is clearer that the method has not side effects", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r550052221", "createdAt": "2020-12-30T08:56:56Z", "author": {"login": "eolivelli"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {\n+        Map<String, List<String>> groups = new HashMap<>();\n+        String className = ZkIsolatedBookieEnsemblePlacementPolicy.class.getName();\n+        if (ensemblePlacementPolicyConfig.getPolicyClass().getName().equals(className)) {\n+            Map<String, Object> properties = ensemblePlacementPolicyConfig.getProperties();\n+            String primaryIsolationGroupString = castToString(properties.getOrDefault(ISOLATION_BOOKIE_GROUPS, \"\"));\n+            String secondaryIsolationGroupString = castToString(properties.getOrDefault(SECONDARY_ISOLATION_BOOKIE_GROUPS, \"\"));\n+            if (!primaryIsolationGroupString.isEmpty()) {\n+                List<String> primaryGroup = Arrays.asList(primaryIsolationGroupString.split(\",\"));\n+                groups.put(ISOLATION_BOOKIE_GROUPS, primaryGroup);\n+            }\n+            if (!secondaryIsolationGroupString.isEmpty()) {\n+                List<String> secondaryGroup = Arrays.asList(secondaryIsolationGroupString.split(\",\"));\n+                groups.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryGroup);\n+            }\n+        }\n+        return groups;\n+    }\n+\n+    private Set<BookieId> getBlacklistedBookiesWithIsolationGroups(int ensembleSize,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0MjI2Ng=="}, "originalCommit": {"oid": "5523613f99fd4fe377d449a5bec1cfd580f6778d"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzE0NjU3OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzoxMTo0OFrOIMImCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzoxODo0M1rOIMIscg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5NDYzNQ==", "bodyText": "Can we avoid introducing manager-ledger as the dependency of pulsar-zookeeper-utils?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549594635", "createdAt": "2020-12-29T07:11:48Z", "author": {"login": "sijie"}, "path": "pulsar-zookeeper-utils/pom.xml", "diffHunk": "@@ -106,6 +106,13 @@\n       <artifactId>simpleclient_caffeine</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>${project.groupId}</groupId>\n+      <artifactId>managed-ledger</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5NjI3NA==", "bodyText": "I'd suggest moving EnsemblePlacementPolicyConfig to pulsar-common. So it can be used in both pulsar-zookeeper-utils and managed-ledger.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549596274", "createdAt": "2020-12-29T07:18:43Z", "author": {"login": "sijie"}, "path": "pulsar-zookeeper-utils/pom.xml", "diffHunk": "@@ -106,6 +106,13 @@\n       <artifactId>simpleclient_caffeine</artifactId>\n     </dependency>\n \n+    <dependency>\n+      <groupId>${project.groupId}</groupId>\n+      <artifactId>managed-ledger</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5NDYzNQ=="}, "originalCommit": {"oid": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzE2MjIzOnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzoxOTo1N1rOIMIuQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzoxOTo1N1rOIMIuQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5NjczOQ==", "bodyText": "I think you can use Pair<Set<String>, Set<String>> instead of a HashMap. Because you only have two sets of groups, one is the primary group and the other one is a secondary group. A HashHamp introduces a lot of overheads.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549596739", "createdAt": "2020-12-29T07:19:57Z", "author": {"login": "sijie"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();\n+        isolationGroup.put(ISOLATION_BOOKIE_GROUPS, primaryIsolationGroups);\n+        isolationGroup.put(SECONDARY_ISOLATION_BOOKIE_GROUPS, secondaryIsolationGroups);\n+        return isolationGroup;\n+    }\n+\n+    private static Map<String, List<String>> getIsolationGroup(EnsemblePlacementPolicyConfig ensemblePlacementPolicyConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzE2NDg5OnYy", "diffSide": "RIGHT", "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzoyMTozNlrOIMIv2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzoyMTozNlrOIMIv2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU5NzE0NQ==", "bodyText": "Can you create the defaultIsolationGroups when creating the ensemble placement policy? Because the default isolation groups don't change after creations, correct?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549597145", "createdAt": "2020-12-29T07:21:36Z", "author": {"login": "sijie"}, "path": "pulsar-zookeeper-utils/src/main/java/org/apache/pulsar/zookeeper/ZkIsolatedBookieEnsemblePlacementPolicy.java", "diffHunk": "@@ -156,34 +177,79 @@ private ZooKeeperCache getAndSetZkCache(Configuration conf) {\n                 bookieToReplace, excludeBookies);\n     }\n \n-    private Set<BookieId> getBlacklistedBookies(int ensembleSize) {\n-        Set<BookieId> blacklistedBookies = new HashSet<BookieId>();\n+    private static Optional<EnsemblePlacementPolicyConfig> getEnsemblePlacementPolicyConfig(\n+        Map<String, byte[]> customMetadata) {\n+\n+        byte[] ensemblePlacementPolicyConfigData = customMetadata.get(\n+            EnsemblePlacementPolicyConfig.ENSEMBLE_PLACEMENT_POLICY_CONFIG);\n+        if (ensemblePlacementPolicyConfigData != null) {\n+            try {\n+                return Optional.ofNullable(EnsemblePlacementPolicyConfig.decode(ensemblePlacementPolicyConfigData));\n+            } catch (JsonUtil.ParseJsonException e) {\n+                LOG.error(\"Failed to parse the ensemble placement policy config from the custom metadata\", e);\n+                return Optional.empty();\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n+    private Map<String, List<String>> getDefaultIsolationGroups() {\n+        Map<String, List<String>> isolationGroup = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6d1c0cd25ea109d3f7908d7d8b0855c51470b1c"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzMzMzUzOnYy", "diffSide": "RIGHT", "path": "pulsar-common/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODo0Nzo0OVrOIMKMSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwOTo1NjoyN1rOIMLglg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyMDgxMQ==", "bodyText": "@sijie Is it ok to introduce the bookkeeper-server into the pulsar-common?", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549620811", "createdAt": "2020-12-29T08:47:49Z", "author": {"login": "zymap"}, "path": "pulsar-common/pom.xml", "diffHunk": "@@ -101,6 +101,16 @@\n       </exclusions>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.bookkeeper</groupId>\n+      <artifactId>bookkeeper-common</artifactId>\n+    </dependency>\n+\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56ec9dda7106b61d9c55055bda68bb268aa2bea9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyMjE2MA==", "bodyText": "Why do you need to introduce the bookkeeper-server module? We just need EnsemblePlacementPolicyConfig, no? This class just need a class and a map of properties.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549622160", "createdAt": "2020-12-29T08:52:38Z", "author": {"login": "sijie"}, "path": "pulsar-common/pom.xml", "diffHunk": "@@ -101,6 +101,16 @@\n       </exclusions>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.bookkeeper</groupId>\n+      <artifactId>bookkeeper-common</artifactId>\n+    </dependency>\n+\n+    <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyMDgxMQ=="}, "originalCommit": {"oid": "56ec9dda7106b61d9c55055bda68bb268aa2bea9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY0MjM5MA==", "bodyText": "Removed the bookkeeper-server.", "url": "https://github.com/apache/pulsar/pull/8961#discussion_r549642390", "createdAt": "2020-12-29T09:56:27Z", "author": {"login": "zymap"}, "path": "pulsar-common/pom.xml", "diffHunk": "@@ -101,6 +101,16 @@\n       </exclusions>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.apache.bookkeeper</groupId>\n+      <artifactId>bookkeeper-common</artifactId>\n+    </dependency>\n+\n+    <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyMDgxMQ=="}, "originalCommit": {"oid": "56ec9dda7106b61d9c55055bda68bb268aa2bea9"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2705, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}