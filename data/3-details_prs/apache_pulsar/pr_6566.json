{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMjkyNzY5", "number": 6566, "title": "[PIP-60] [Proxy-Server] Support SNI routing to support various proxy-server in pulsar", "bodyText": "Motivation\nImplementation of PIP-60\nA proxy server is a go\u2011between or intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server can act as a \u201ctraffic cop,\u201d in both forward and reverse proxy scenarios, and adds various benefits in your system such as load balancing, performance, security, auto-scaling, etc.. There are already many proxy servers already available in the market which are fast, scalable and more importantly covers various essential security aspects that are needed by the large organization to securely share their confidential data over the network. Pulsar already provides proxy implementation PIP-1 which acts as a reverse proxy and creates a gateway in front of brokers. However, pulsar doesn\u2019t provide support to use other proxies such as Apache traffic server (ATS), HAProxy, Nginx, Envoy those are more scalable and secured. Most of these proxy-servers support SNI ROUTING which can route traffic to a destination without having to terminate the SSL connection. Routing at layer 4 gives greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\nNetty supports sending SNI header on TLS handshake and this PR uses that Netty feature to send SNI header while connecting to proxy.\nModification\nhttps://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing#changes\nNote: we have fully tested this changes with ATS proxy for both forward and reverse proxy scenarios. And I have also shared e2e example in PIP to use ATS proxy for client and broker integration.", "createdAt": "2020-03-20T00:04:14Z", "url": "https://github.com/apache/pulsar/pull/6566", "merged": true, "mergeCommit": {"oid": "fb4a627151c939a4af984c231b5891dde8c10cc6"}, "closed": true, "closedAt": "2020-06-04T02:10:46Z", "author": {"login": "rdhabalia"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVscjRAFqTM5MDIyNjk1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnrEu8gH2gAyMzkxMjkyNzY5OmI1ZTI3YmJiYmE1NWU3N2FhZGRlNDdiZjdjZGRmNGQyOTMwZTIwMWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjI2OTU1", "url": "https://github.com/apache/pulsar/pull/6566#pullrequestreview-390226955", "createdAt": "2020-04-08T18:29:47Z", "commit": {"oid": "db8d58bae2fd4826fce4544570e4a921b28ee353"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoyOTo0N1rOGC7t7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODo0NDo1N1rOGC8RqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyODc0OA==", "bodyText": "Should we close the client or add @Cleanup annotation?", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r405728748", "createdAt": "2020-04-08T18:29:47Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.api;\n+\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+import java.net.UnknownHostException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.pulsar.client.impl.auth.AuthenticationTls;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.annotations.Test;\n+\n+public class ProxyProtocolTest extends TlsProducerConsumerBase {\n+    private static final Logger log = LoggerFactory.getLogger(ProxyProtocolTest.class);\n+\n+    @Test\n+    public void testSniProxyProtocol() throws Exception {\n+\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String proxyUrl = pulsar.getBrokerServiceUrlTls();\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).enableTls(true).allowTlsInsecureConnection(false)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+        Map<String, String> authParams = new HashMap<>();\n+        authParams.put(\"tlsCertFile\", TLS_CLIENT_CERT_FILE_PATH);\n+        authParams.put(\"tlsKeyFile\", TLS_CLIENT_KEY_FILE_PATH);\n+        clientBuilder.authentication(AuthenticationTls.class.getName(), authParams);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db8d58bae2fd4826fce4544570e4a921b28ee353"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTQ0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        fail(\"should have failed due to invalid url\");\n          \n          \n            \n                        fail(\"should have failed due to non-tls url\");", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r405729449", "createdAt": "2020-04-08T18:30:58Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/ProxyProtocolTest.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.pulsar.client.api;\n+\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.fail;\n+\n+import java.net.UnknownHostException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.pulsar.client.impl.auth.AuthenticationTls;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testng.annotations.Test;\n+\n+public class ProxyProtocolTest extends TlsProducerConsumerBase {\n+    private static final Logger log = LoggerFactory.getLogger(ProxyProtocolTest.class);\n+\n+    @Test\n+    public void testSniProxyProtocol() throws Exception {\n+\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String proxyUrl = pulsar.getBrokerServiceUrlTls();\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).enableTls(true).allowTlsInsecureConnection(false)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+        Map<String, String> authParams = new HashMap<>();\n+        authParams.put(\"tlsCertFile\", TLS_CLIENT_CERT_FILE_PATH);\n+        authParams.put(\"tlsKeyFile\", TLS_CLIENT_KEY_FILE_PATH);\n+        clientBuilder.authentication(AuthenticationTls.class.getName(), authParams);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();\n+\n+        // should be able to create producer successfully\n+        pulsarClient.newProducer().topic(topicName).create();\n+    }\n+\n+    @Test\n+    public void testSniProxyProtocolWithInvalidProxyUrl() throws Exception {\n+\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String proxyHost = \"invalid-url\";\n+        String proxyUrl = \"pulsar+ssl://\" + proxyHost + \":5555\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .tlsTrustCertsFilePath(TLS_TRUST_CERT_FILE_PATH).enableTls(true).allowTlsInsecureConnection(false)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+        Map<String, String> authParams = new HashMap<>();\n+        authParams.put(\"tlsCertFile\", TLS_CLIENT_CERT_FILE_PATH);\n+        authParams.put(\"tlsKeyFile\", TLS_CLIENT_KEY_FILE_PATH);\n+        clientBuilder.authentication(AuthenticationTls.class.getName(), authParams);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();\n+\n+        try {\n+            pulsarClient.newProducer().topic(topicName).create();\n+            fail(\"should have failed due to invalid url\");\n+        } catch (PulsarClientException e) {\n+            assertTrue(e.getMessage().contains(proxyHost));\n+        }\n+    }\n+\n+    @Test\n+    public void testSniProxyProtocolWithoutTls() throws Exception {\n+        // Client should try to connect to proxy and pass broker-url as SNI header\n+        String proxyUrl = pulsar.getBrokerServiceUrl();\n+        String brokerServiceUrl = \"pulsar+ssl://1.1.1.1:6651\";\n+        String topicName = \"persistent://my-property/use/my-ns/my-topic1\";\n+\n+        ClientBuilder clientBuilder = PulsarClient.builder().serviceUrl(brokerServiceUrl)\n+                .proxyServiceUrl(proxyUrl, ProxyProtocol.SNI).operationTimeout(1000, TimeUnit.MILLISECONDS);\n+\n+        PulsarClient pulsarClient = clientBuilder.build();\n+\n+        try {\n+            pulsarClient.newProducer().topic(topicName).create();\n+            fail(\"should have failed due to invalid url\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db8d58bae2fd4826fce4544570e4a921b28ee353"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNzg5Nw==", "bodyText": "based on my understanding, this service URL here can only be the binary protocol service URL correct? We can't use the HTTP-protocol service URL. If that's the case, can you document this setting in ClusterData and the related command-line tools? It might be good to add a validation to throw exceptions if it is not a binary protocol service url.", "url": "https://github.com/apache/pulsar/pull/6566#discussion_r405737897", "createdAt": "2020-04-08T18:44:57Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/ClusterData.java", "diffHunk": "@@ -58,6 +60,20 @@\n         example = \"pulsar+ssl://pulsar.example.com:6651\"\n     )\n     private String brokerServiceUrlTls;\n+    @ApiModelProperty(\n+        name = \"proxyServiceUrl\",\n+        value = \"Proxy-service url when client would like to connect to broker via proxy.\",\n+        example = \"pulsar+ssl://ats-proxy.example.com:4443 or \"\n+                    + \"pulsar://ats-proxy.example.com:4080\"\n+    )\n+    private String proxyServiceUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db8d58bae2fd4826fce4544570e4a921b28ee353"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "542429b1da560135fb8a866d3e5c9b600a3e909b", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/542429b1da560135fb8a866d3e5c9b600a3e909b", "committedDate": "2020-04-15T02:17:49Z", "message": "addressed comments"}, "afterCommit": {"oid": "ca8db7886e38075121c210e85f36106ce0178b04", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/ca8db7886e38075121c210e85f36106ce0178b04", "committedDate": "2020-04-15T02:18:40Z", "message": "addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjM5ODU4", "url": "https://github.com/apache/pulsar/pull/6566#pullrequestreview-397639858", "createdAt": "2020-04-21T20:12:27Z", "commit": {"oid": "ca8db7886e38075121c210e85f36106ce0178b04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDMwNjQ0", "url": "https://github.com/apache/pulsar/pull/6566#pullrequestreview-414430644", "createdAt": "2020-05-19T13:13:38Z", "commit": {"oid": "ca8db7886e38075121c210e85f36106ce0178b04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca8db7886e38075121c210e85f36106ce0178b04", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/ca8db7886e38075121c210e85f36106ce0178b04", "committedDate": "2020-04-15T02:18:40Z", "message": "addressed comments"}, "afterCommit": {"oid": "f98139d66550ef1d25202a65e2eeda2972455234", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/f98139d66550ef1d25202a65e2eeda2972455234", "committedDate": "2020-05-22T20:27:28Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f98139d66550ef1d25202a65e2eeda2972455234", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/f98139d66550ef1d25202a65e2eeda2972455234", "committedDate": "2020-05-22T20:27:28Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments"}, "afterCommit": {"oid": "7f4602a12e6b3b819ca5e0befddfb1c58f055ecb", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/7f4602a12e6b3b819ca5e0befddfb1c58f055ecb", "committedDate": "2020-05-22T20:37:32Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e320656b990683431427bcfc88d4c2b12a13f50f", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/e320656b990683431427bcfc88d4c2b12a13f50f", "committedDate": "2020-06-01T20:53:59Z", "message": "fix tls handler"}, "afterCommit": {"oid": "0bb290d381a5260c077d8311a002882ec71fef1b", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/0bb290d381a5260c077d8311a002882ec71fef1b", "committedDate": "2020-06-02T03:05:46Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0bb290d381a5260c077d8311a002882ec71fef1b", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/0bb290d381a5260c077d8311a002882ec71fef1b", "committedDate": "2020-06-02T03:05:46Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler"}, "afterCommit": {"oid": "2a6628a50706092368f314a7e97f781a2cdc4ab0", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/2a6628a50706092368f314a7e97f781a2cdc4ab0", "committedDate": "2020-06-02T03:06:09Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32232228fec9ee7f335b877f7b7bec34fb39bb66", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/32232228fec9ee7f335b877f7b7bec34fb39bb66", "committedDate": "2020-06-02T19:03:51Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a6628a50706092368f314a7e97f781a2cdc4ab0", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/2a6628a50706092368f314a7e97f781a2cdc4ab0", "committedDate": "2020-06-02T03:06:09Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler"}, "afterCommit": {"oid": "32232228fec9ee7f335b877f7b7bec34fb39bb66", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/32232228fec9ee7f335b877f7b7bec34fb39bb66", "committedDate": "2020-06-02T19:03:51Z", "message": "[Proxy-Server] Support SNI routing to support various proxy-server in pulsar\n\naddressed comments\n\nfix tls handler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc30bee6e8840395e6b46ee4292b01629fe6c946", "author": {"user": {"login": "rdhabalia", "name": "Rajan Dhabalia"}}, "url": "https://github.com/apache/pulsar/commit/fc30bee6e8840395e6b46ee4292b01629fe6c946", "committedDate": "2020-06-02T20:14:27Z", "message": "fix typo in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ad4bb0af47d2b8c4be647e7b76b5d7322949a84", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/4ad4bb0af47d2b8c4be647e7b76b5d7322949a84", "committedDate": "2020-06-03T11:30:42Z", "message": "Merge remote-tracking branch 'apache/master' into proxy_sni"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5e27bbbba55e77aadde47bf7cddf4d2930e201e", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/b5e27bbbba55e77aadde47bf7cddf4d2930e201e", "committedDate": "2020-06-03T15:20:13Z", "message": "Merge remote-tracking branch 'apache/master' into proxy_sni"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 31, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}