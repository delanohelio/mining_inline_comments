{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjUzNDA0", "number": 8686, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODowMjozOFrOE8280Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTowNjoxM1rOE9IMOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjUwMzIxOnYy", "diffSide": "RIGHT", "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/ProxyConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODowMjozOFrOH5O53w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODowMjozOFrOH5O53w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NTA3MQ==", "bodyText": "remove this?", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r529775071", "createdAt": "2020-11-24T18:02:38Z", "author": {"login": "sijie"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/ProxyConnection.java", "diffHunk": "@@ -169,6 +171,11 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws E\n \n     @Override\n     public void channelRead(final ChannelHandlerContext ctx, Object msg) throws Exception {\n+        System.out.println(haProxyMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a47b3ca535b4cc41ed6f97e98fd0fbc4f59d8fb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDI5NjgzOnYy", "diffSide": "RIGHT", "path": "conf/broker.conf", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMTo1MTozMlrOH5gEsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNjo1NDo0M1rOH5lYOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1NjM2OQ==", "bodyText": "This naming can be confusing since we already have a \"proxy\" for Pulsar protocol", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530056369", "createdAt": "2020-11-25T01:51:32Z", "author": {"login": "merlimat"}, "path": "conf/broker.conf", "diffHunk": "@@ -55,6 +55,9 @@ advertisedAddress=\n # The Default value is absent, the broker uses the first listener as the internal listener.\n # internalListenerName=\n \n+# Enable or disable the proxy protocol.\n+proxyProtocolEnabled=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89532cd2735ead88f180d60c80c47369d9065719"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2MTUxOA==", "bodyText": "How about change to haProxyProtocolEnabled?", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530061518", "createdAt": "2020-11-25T02:08:37Z", "author": {"login": "codelipenghui"}, "path": "conf/broker.conf", "diffHunk": "@@ -55,6 +55,9 @@ advertisedAddress=\n # The Default value is absent, the broker uses the first listener as the internal listener.\n # internalListenerName=\n \n+# Enable or disable the proxy protocol.\n+proxyProtocolEnabled=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1NjM2OQ=="}, "originalCommit": {"oid": "89532cd2735ead88f180d60c80c47369d9065719"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDExODM4MA==", "bodyText": "haProxyProtocol looks much better than proxyProtocol.", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530118380", "createdAt": "2020-11-25T05:35:37Z", "author": {"login": "sijie"}, "path": "conf/broker.conf", "diffHunk": "@@ -55,6 +55,9 @@ advertisedAddress=\n # The Default value is absent, the broker uses the first listener as the internal listener.\n # internalListenerName=\n \n+# Enable or disable the proxy protocol.\n+proxyProtocolEnabled=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1NjM2OQ=="}, "originalCommit": {"oid": "89532cd2735ead88f180d60c80c47369d9065719"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE0MzI4OA==", "bodyText": "Ok, sounds good.", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530143288", "createdAt": "2020-11-25T06:54:43Z", "author": {"login": "codelipenghui"}, "path": "conf/broker.conf", "diffHunk": "@@ -55,6 +55,9 @@ advertisedAddress=\n # The Default value is absent, the broker uses the first listener as the internal listener.\n # internalListenerName=\n \n+# Enable or disable the proxy protocol.\n+proxyProtocolEnabled=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA1NjM2OQ=="}, "originalCommit": {"oid": "89532cd2735ead88f180d60c80c47369d9065719"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTIzNDc1OnYy", "diffSide": "RIGHT", "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0MzozNVrOH5ojnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTo0Mzo1MFrOH5vrEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5NTM1Ng==", "bodyText": "Actually maximum record size is 107 by spec:\n\n\nworst case (optional fields set to 0xff) :```\n\"PROXY UNKNOWN ffff:f...f:ffff ffff:f...f:ffff 65535 65535\\r\\n\"\n=> 5 + 1 + 7 + 1 + 39 + 1 + 39 + 1 + 5 + 1 + 5 + 2 = 107 chars\n\n\n[...]\nThe receiver must wait for the CRLF sequence before starting to decode the\naddresses in order to ensure they are complete and properly parsed. If the CRLF\nsequence is not found in the first 107 characters, the receiver should declare\nthe line invalid.", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530195356", "createdAt": "2020-11-25T08:43:35Z", "author": {"login": "diegosalvi"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "diffHunk": "@@ -143,10 +150,56 @@ protected void initChannel(SocketChannel ch) throws Exception {\n                 inboundOutboundChannelMap.put(outboundChannel.id() , inboundChannel.id());\n             }\n \n-\n+            if (config.isHaProxyProtocolEnabled()) {\n+                if (proxyConnection.hasHAProxyMessage()) {\n+                    outboundChannel.writeAndFlush(encodeProxyProtocolMessage(proxyConnection.getHAProxyMessage()));\n+                } else {\n+                    if (inboundChannel.remoteAddress() instanceof InetSocketAddress) {\n+                        InetSocketAddress clientAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                        String sourceAddress = clientAddress.getAddress().getHostAddress();\n+                        int sourcePort = clientAddress.getPort();\n+                        if (outboundChannel.localAddress() instanceof InetSocketAddress) {\n+                            InetSocketAddress proxyAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                            String destinationAddress = proxyAddress.getAddress().getHostAddress();\n+                            int destinationPort = proxyAddress.getPort();\n+                            HAProxyMessage msg = new HAProxyMessage(HAProxyProtocolVersion.V1, HAProxyCommand.PROXY,\n+                                    HAProxyProxiedProtocol.TCP4, sourceAddress, destinationAddress, sourcePort, destinationPort);\n+                            outboundChannel.writeAndFlush(encodeProxyProtocolMessage(msg));\n+                            msg.release();\n+                        }\n+                    }\n+                }\n+            }\n         });\n     }\n \n+    private ByteBuf encodeProxyProtocolMessage(HAProxyMessage msg) {\n+        // Max length of v1 version proxy protocol message is 108\n+        ByteBuf out = Unpooled.buffer(108);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMwNzAxMw==", "bodyText": "I'm using the netty-haproxy-codec directly. I think netty codec already handled this?", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530307013", "createdAt": "2020-11-25T11:35:04Z", "author": {"login": "codelipenghui"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "diffHunk": "@@ -143,10 +150,56 @@ protected void initChannel(SocketChannel ch) throws Exception {\n                 inboundOutboundChannelMap.put(outboundChannel.id() , inboundChannel.id());\n             }\n \n-\n+            if (config.isHaProxyProtocolEnabled()) {\n+                if (proxyConnection.hasHAProxyMessage()) {\n+                    outboundChannel.writeAndFlush(encodeProxyProtocolMessage(proxyConnection.getHAProxyMessage()));\n+                } else {\n+                    if (inboundChannel.remoteAddress() instanceof InetSocketAddress) {\n+                        InetSocketAddress clientAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                        String sourceAddress = clientAddress.getAddress().getHostAddress();\n+                        int sourcePort = clientAddress.getPort();\n+                        if (outboundChannel.localAddress() instanceof InetSocketAddress) {\n+                            InetSocketAddress proxyAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                            String destinationAddress = proxyAddress.getAddress().getHostAddress();\n+                            int destinationPort = proxyAddress.getPort();\n+                            HAProxyMessage msg = new HAProxyMessage(HAProxyProtocolVersion.V1, HAProxyCommand.PROXY,\n+                                    HAProxyProxiedProtocol.TCP4, sourceAddress, destinationAddress, sourcePort, destinationPort);\n+                            outboundChannel.writeAndFlush(encodeProxyProtocolMessage(msg));\n+                            msg.release();\n+                        }\n+                    }\n+                }\n+            }\n         });\n     }\n \n+    private ByteBuf encodeProxyProtocolMessage(HAProxyMessage msg) {\n+        // Max length of v1 version proxy protocol message is 108\n+        ByteBuf out = Unpooled.buffer(108);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5NTM1Ng=="}, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxMTk1Mw==", "bodyText": "I just noticed the max length for v1 is 108 https://github.com/netty/netty/blob/4.1/codec-haproxy/src/main/java/io/netty/handler/codec/haproxy/HAProxyMessageDecoder.java#L37", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530311953", "createdAt": "2020-11-25T11:43:50Z", "author": {"login": "codelipenghui"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "diffHunk": "@@ -143,10 +150,56 @@ protected void initChannel(SocketChannel ch) throws Exception {\n                 inboundOutboundChannelMap.put(outboundChannel.id() , inboundChannel.id());\n             }\n \n-\n+            if (config.isHaProxyProtocolEnabled()) {\n+                if (proxyConnection.hasHAProxyMessage()) {\n+                    outboundChannel.writeAndFlush(encodeProxyProtocolMessage(proxyConnection.getHAProxyMessage()));\n+                } else {\n+                    if (inboundChannel.remoteAddress() instanceof InetSocketAddress) {\n+                        InetSocketAddress clientAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                        String sourceAddress = clientAddress.getAddress().getHostAddress();\n+                        int sourcePort = clientAddress.getPort();\n+                        if (outboundChannel.localAddress() instanceof InetSocketAddress) {\n+                            InetSocketAddress proxyAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                            String destinationAddress = proxyAddress.getAddress().getHostAddress();\n+                            int destinationPort = proxyAddress.getPort();\n+                            HAProxyMessage msg = new HAProxyMessage(HAProxyProtocolVersion.V1, HAProxyCommand.PROXY,\n+                                    HAProxyProxiedProtocol.TCP4, sourceAddress, destinationAddress, sourcePort, destinationPort);\n+                            outboundChannel.writeAndFlush(encodeProxyProtocolMessage(msg));\n+                            msg.release();\n+                        }\n+                    }\n+                }\n+            }\n         });\n     }\n \n+    private ByteBuf encodeProxyProtocolMessage(HAProxyMessage msg) {\n+        // Max length of v1 version proxy protocol message is 108\n+        ByteBuf out = Unpooled.buffer(108);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5NTM1Ng=="}, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTI1Mzg2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PulsarChannelInitializer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0ODoyOVrOH5ovOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNzowMTo1OFrOH6i3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5ODMzMQ==", "bodyText": "I think we should have the possibilitiy to require proxy headers instead of handle them as optional.\nSpecification itself states:\nThe receiver MUST be configured to only receive the protocol described in this\nspecification and MUST not try to guess whether the protocol header is present\nor not. This means that the protocol explicitly prevents port sharing between\npublic and private access.", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530198331", "createdAt": "2020-11-25T08:48:29Z", "author": {"login": "diegosalvi"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PulsarChannelInitializer.java", "diffHunk": "@@ -118,6 +119,9 @@ protected void initChannel(SocketChannel ch) throws Exception {\n             ch.pipeline().addLast(\"ByteBufPairEncoder\", ByteBufPair.ENCODER);\n         }\n \n+        if (pulsar.getConfiguration().isHaProxyProtocolEnabled()) {\n+            ch.pipeline().addLast(OptionalProxyProtocolDecoder.NAME, new OptionalProxyProtocolDecoder());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMwODg1OQ==", "bodyText": "This is a flag to control if users want to enable the haproxy protocol support. We must provide a way to disable this feature.", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530308859", "createdAt": "2020-11-25T11:38:12Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PulsarChannelInitializer.java", "diffHunk": "@@ -118,6 +119,9 @@ protected void initChannel(SocketChannel ch) throws Exception {\n             ch.pipeline().addLast(\"ByteBufPairEncoder\", ByteBufPair.ENCODER);\n         }\n \n+        if (pulsar.getConfiguration().isHaProxyProtocolEnabled()) {\n+            ch.pipeline().addLast(OptionalProxyProtocolDecoder.NAME, new OptionalProxyProtocolDecoder());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5ODMzMQ=="}, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1MDY0OQ==", "bodyText": "Sure! What I was saying is that there isn't a way to REQUIRE proxy header if pulsar.getConfiguration().isHaProxyProtocolEnabled(). Specs states that is MUST expect a proxy header, it isn't optional. There could be another option to handle optional/mandatory", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r531150649", "createdAt": "2020-11-26T17:01:58Z", "author": {"login": "diegosalvi"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/PulsarChannelInitializer.java", "diffHunk": "@@ -118,6 +119,9 @@ protected void initChannel(SocketChannel ch) throws Exception {\n             ch.pipeline().addLast(\"ByteBufPairEncoder\", ByteBufPair.ENCODER);\n         }\n \n+        if (pulsar.getConfiguration().isHaProxyProtocolEnabled()) {\n+            ch.pipeline().addLast(OptionalProxyProtocolDecoder.NAME, new OptionalProxyProtocolDecoder());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5ODMzMQ=="}, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTMyNzkyOnYy", "diffSide": "RIGHT", "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOTowNjoxM1rOH5pcBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjo1OTo1MlrOH6izdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIwOTc5OA==", "bodyText": "netty-haproxy can decode binary v2 version too (but doesn't implements encoding).\nWe could add another encoding method for v2 protocol and let the configurer choose which use.\nFor the encoding implementation I've done one for subethamail if you want take a peek. It has been done for testing purposes (so it permits some strange behaviour to check various edge cases and \"wrong\" headers and can surely be simplified): https://github.com/davidmoten/subethasmtp/blob/master/src/test/java/org/subethamail/smtp/internal/proxy/ProxyProtocolV2HandlerTest.java", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530209798", "createdAt": "2020-11-25T09:06:13Z", "author": {"login": "diegosalvi"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "diffHunk": "@@ -143,10 +150,56 @@ protected void initChannel(SocketChannel ch) throws Exception {\n                 inboundOutboundChannelMap.put(outboundChannel.id() , inboundChannel.id());\n             }\n \n-\n+            if (config.isHaProxyProtocolEnabled()) {\n+                if (proxyConnection.hasHAProxyMessage()) {\n+                    outboundChannel.writeAndFlush(encodeProxyProtocolMessage(proxyConnection.getHAProxyMessage()));\n+                } else {\n+                    if (inboundChannel.remoteAddress() instanceof InetSocketAddress) {\n+                        InetSocketAddress clientAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                        String sourceAddress = clientAddress.getAddress().getHostAddress();\n+                        int sourcePort = clientAddress.getPort();\n+                        if (outboundChannel.localAddress() instanceof InetSocketAddress) {\n+                            InetSocketAddress proxyAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                            String destinationAddress = proxyAddress.getAddress().getHostAddress();\n+                            int destinationPort = proxyAddress.getPort();\n+                            HAProxyMessage msg = new HAProxyMessage(HAProxyProtocolVersion.V1, HAProxyCommand.PROXY,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMxMDI2Mg==", "bodyText": "It's not a required for this PR, we can support the proxy set the different protocol version in the following PRs.", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r530310262", "createdAt": "2020-11-25T11:40:38Z", "author": {"login": "codelipenghui"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "diffHunk": "@@ -143,10 +150,56 @@ protected void initChannel(SocketChannel ch) throws Exception {\n                 inboundOutboundChannelMap.put(outboundChannel.id() , inboundChannel.id());\n             }\n \n-\n+            if (config.isHaProxyProtocolEnabled()) {\n+                if (proxyConnection.hasHAProxyMessage()) {\n+                    outboundChannel.writeAndFlush(encodeProxyProtocolMessage(proxyConnection.getHAProxyMessage()));\n+                } else {\n+                    if (inboundChannel.remoteAddress() instanceof InetSocketAddress) {\n+                        InetSocketAddress clientAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                        String sourceAddress = clientAddress.getAddress().getHostAddress();\n+                        int sourcePort = clientAddress.getPort();\n+                        if (outboundChannel.localAddress() instanceof InetSocketAddress) {\n+                            InetSocketAddress proxyAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                            String destinationAddress = proxyAddress.getAddress().getHostAddress();\n+                            int destinationPort = proxyAddress.getPort();\n+                            HAProxyMessage msg = new HAProxyMessage(HAProxyProtocolVersion.V1, HAProxyCommand.PROXY,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIwOTc5OA=="}, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0OTY4NA==", "bodyText": "Sounds good", "url": "https://github.com/apache/pulsar/pull/8686#discussion_r531149684", "createdAt": "2020-11-26T16:59:52Z", "author": {"login": "diegosalvi"}, "path": "pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java", "diffHunk": "@@ -143,10 +150,56 @@ protected void initChannel(SocketChannel ch) throws Exception {\n                 inboundOutboundChannelMap.put(outboundChannel.id() , inboundChannel.id());\n             }\n \n-\n+            if (config.isHaProxyProtocolEnabled()) {\n+                if (proxyConnection.hasHAProxyMessage()) {\n+                    outboundChannel.writeAndFlush(encodeProxyProtocolMessage(proxyConnection.getHAProxyMessage()));\n+                } else {\n+                    if (inboundChannel.remoteAddress() instanceof InetSocketAddress) {\n+                        InetSocketAddress clientAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                        String sourceAddress = clientAddress.getAddress().getHostAddress();\n+                        int sourcePort = clientAddress.getPort();\n+                        if (outboundChannel.localAddress() instanceof InetSocketAddress) {\n+                            InetSocketAddress proxyAddress = (InetSocketAddress) inboundChannel.remoteAddress();\n+                            String destinationAddress = proxyAddress.getAddress().getHostAddress();\n+                            int destinationPort = proxyAddress.getPort();\n+                            HAProxyMessage msg = new HAProxyMessage(HAProxyProtocolVersion.V1, HAProxyCommand.PROXY,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIwOTc5OA=="}, "originalCommit": {"oid": "0dfdfe0bd99ef521744fe535e284729eae65aaf0"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2724, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}