{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjcxMTcz", "number": 7416, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0OTozMlrOEKf0SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0OTozMlrOEKf0SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDQyNTA1OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/AbstractBaseDispatcher.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0OTozMlrOGrkfBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODoyNzo0N1rOGsCtwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTcxOQ==", "bodyText": "We should avoid decompressing in the broker in any case. This is very dangerous from a CPU usage point of view.", "url": "https://github.com/apache/pulsar/pull/7416#discussion_r448339719", "createdAt": "2020-07-01T12:49:32Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/AbstractBaseDispatcher.java", "diffHunk": "@@ -153,13 +155,18 @@ public void resetCloseFuture() {\n         PulsarApi.MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n \n         try {\n-            if (metadata.hasNumMessagesInBatch()) {\n+            if (!metadata.hasOrderingKey() && !metadata.hasPartitionKey() && metadata.hasNumMessagesInBatch()) {\n                 // If the message was part of a batch (eg: a batch of 1 message), we need\n                 // to read the key from the first single-message-metadata entry\n+                PulsarApi.CompressionType compressionType = metadata.getCompression();\n+                CompressionCodec codec = CompressionCodecProvider.getCompressionCodec(compressionType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f853896be924a063ba8b6d5482804d222e0ac8a1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM0NDUzNQ==", "bodyText": "I'm not sure how to handle #7107 that fixed. Maybe we can use the first single message key as the batch message key, but this requires all clients catchup.\nSo, I think we can onboard this PR first ensure correctness, and I will create an issue for the clients catchup work.\nAnd I have add check if (!metadata.hasOrderingKey() && !metadata.hasPartitionKey() && metadata.hasNumMessagesInBatch()), if the clients set the key of the batch message to the key of the first message, it can reduce overhead.\nI have test with the KeyBasedBatcher. It already set the batch message key.", "url": "https://github.com/apache/pulsar/pull/7416#discussion_r448344535", "createdAt": "2020-07-01T12:58:07Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/AbstractBaseDispatcher.java", "diffHunk": "@@ -153,13 +155,18 @@ public void resetCloseFuture() {\n         PulsarApi.MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n \n         try {\n-            if (metadata.hasNumMessagesInBatch()) {\n+            if (!metadata.hasOrderingKey() && !metadata.hasPartitionKey() && metadata.hasNumMessagesInBatch()) {\n                 // If the message was part of a batch (eg: a batch of 1 message), we need\n                 // to read the key from the first single-message-metadata entry\n+                PulsarApi.CompressionType compressionType = metadata.getCompression();\n+                CompressionCodec codec = CompressionCodecProvider.getCompressionCodec(compressionType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTcxOQ=="}, "originalCommit": {"oid": "f853896be924a063ba8b6d5482804d222e0ac8a1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM1MDY1Mw==", "bodyText": "A better way would be to ensure that producers (in every lang) are attaching the routing key on the message metadata protobuf (at the batch level). That is not compressed so we should always be safe.", "url": "https://github.com/apache/pulsar/pull/7416#discussion_r448350653", "createdAt": "2020-07-01T13:08:57Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/AbstractBaseDispatcher.java", "diffHunk": "@@ -153,13 +155,18 @@ public void resetCloseFuture() {\n         PulsarApi.MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n \n         try {\n-            if (metadata.hasNumMessagesInBatch()) {\n+            if (!metadata.hasOrderingKey() && !metadata.hasPartitionKey() && metadata.hasNumMessagesInBatch()) {\n                 // If the message was part of a batch (eg: a batch of 1 message), we need\n                 // to read the key from the first single-message-metadata entry\n+                PulsarApi.CompressionType compressionType = metadata.getCompression();\n+                CompressionCodec codec = CompressionCodecProvider.getCompressionCodec(compressionType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTcxOQ=="}, "originalCommit": {"oid": "f853896be924a063ba8b6d5482804d222e0ac8a1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2MzAwNg==", "bodyText": "Make sense, so it's better to revert #7107 and other lang clients should attach the routing key on the message metadata.", "url": "https://github.com/apache/pulsar/pull/7416#discussion_r448363006", "createdAt": "2020-07-01T13:28:35Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/AbstractBaseDispatcher.java", "diffHunk": "@@ -153,13 +155,18 @@ public void resetCloseFuture() {\n         PulsarApi.MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n \n         try {\n-            if (metadata.hasNumMessagesInBatch()) {\n+            if (!metadata.hasOrderingKey() && !metadata.hasPartitionKey() && metadata.hasNumMessagesInBatch()) {\n                 // If the message was part of a batch (eg: a batch of 1 message), we need\n                 // to read the key from the first single-message-metadata entry\n+                PulsarApi.CompressionType compressionType = metadata.getCompression();\n+                CompressionCodec codec = CompressionCodecProvider.getCompressionCodec(compressionType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTcxOQ=="}, "originalCommit": {"oid": "f853896be924a063ba8b6d5482804d222e0ac8a1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgzNTAwOA==", "bodyText": "@merlimat I have addressed your comment, please take a look, thanks.", "url": "https://github.com/apache/pulsar/pull/7416#discussion_r448835008", "createdAt": "2020-07-02T08:27:47Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/AbstractBaseDispatcher.java", "diffHunk": "@@ -153,13 +155,18 @@ public void resetCloseFuture() {\n         PulsarApi.MessageMetadata metadata = Commands.parseMessageMetadata(metadataAndPayload);\n \n         try {\n-            if (metadata.hasNumMessagesInBatch()) {\n+            if (!metadata.hasOrderingKey() && !metadata.hasPartitionKey() && metadata.hasNumMessagesInBatch()) {\n                 // If the message was part of a batch (eg: a batch of 1 message), we need\n                 // to read the key from the first single-message-metadata entry\n+                PulsarApi.CompressionType compressionType = metadata.getCompression();\n+                CompressionCodec codec = CompressionCodecProvider.getCompressionCodec(compressionType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTcxOQ=="}, "originalCommit": {"oid": "f853896be924a063ba8b6d5482804d222e0ac8a1"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2398, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}