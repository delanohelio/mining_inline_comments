{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjczNTU5", "number": 7523, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyMTo1M1rOEd_DSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQyMToxNTowMlrOF7UfWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODc3MTk1OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/web/PulsarWebResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyMTo1M1rOHJcc0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDowNToxOFrOHNHwpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTM2MQ==", "bodyText": "Probably should return Status.UNAUTHORIZED rather than Status.FORBIDDEN to avoid confusion?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r479665361", "createdAt": "2020-08-29T16:21:53Z", "author": {"login": "frankjkelly"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/web/PulsarWebResource.java", "diffHunk": "@@ -846,4 +847,36 @@ public void validateNamespacePolicyOperation(NamespaceName namespaceName,\n             }\n         }\n     }\n+\n+    public void validateTopicPolicyOperation(TopicName topicName, PolicyName policy, PolicyOperation operation) {\n+        if (pulsar().getConfiguration().isAuthenticationEnabled() && pulsar().getBrokerService().isAuthorizationEnabled()) {\n+            if (!isClientAuthenticated(clientAppId())) {\n+                throw new RestException(Status.FORBIDDEN, \"Need to authenticate to perform the request\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyMDY3Nw==", "bodyText": "Probably but the rest of this stuff content is using forbidden today.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483520677", "createdAt": "2020-09-04T10:05:18Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/web/PulsarWebResource.java", "diffHunk": "@@ -846,4 +847,36 @@ public void validateNamespacePolicyOperation(NamespaceName namespaceName,\n             }\n         }\n     }\n+\n+    public void validateTopicPolicyOperation(TopicName topicName, PolicyName policy, PolicyOperation operation) {\n+        if (pulsar().getConfiguration().isAuthenticationEnabled() && pulsar().getBrokerService().isAuthorizationEnabled()) {\n+            if (!isClientAuthenticated(clientAppId())) {\n+                throw new RestException(Status.FORBIDDEN, \"Need to authenticate to perform the request\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTM2MQ=="}, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODc3MjAyOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/web/PulsarWebResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyMjowNFrOHJcc3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDowNToyM1rOHNHw1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTM3Mw==", "bodyText": "Same as above?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r479665373", "createdAt": "2020-08-29T16:22:04Z", "author": {"login": "frankjkelly"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/web/PulsarWebResource.java", "diffHunk": "@@ -846,4 +847,36 @@ public void validateNamespacePolicyOperation(NamespaceName namespaceName,\n             }\n         }\n     }\n+\n+    public void validateTopicPolicyOperation(TopicName topicName, PolicyName policy, PolicyOperation operation) {\n+        if (pulsar().getConfiguration().isAuthenticationEnabled() && pulsar().getBrokerService().isAuthorizationEnabled()) {\n+            if (!isClientAuthenticated(clientAppId())) {\n+                throw new RestException(Status.FORBIDDEN, \"Need to authenticate to perform the request\");\n+            }\n+\n+            Boolean isAuthorized = pulsar().getBrokerService().getAuthorizationService()\n+                    .allowTopicPolicyOperation(topicName, policy, operation, originalPrincipal(), clientAppId(), clientAuthData());\n+\n+            if (!isAuthorized) {\n+                throw new RestException(Status.FORBIDDEN, String.format(\"Unauthorized to validateTopicPolicyOperation for\" +\n+                        \" operation [%s] on topic [%s] on policy [%s]\", operation.toString(), topicName, policy.toString()));\n+            }\n+        }\n+    }\n+\n+    public void validateTopicOperation(TopicName topicName, TopicOperation operation) {\n+        if (pulsar().getConfiguration().isAuthenticationEnabled() && pulsar().getBrokerService().isAuthorizationEnabled()) {\n+            if (!isClientAuthenticated(clientAppId())) {\n+                throw new RestException(Status.UNAUTHORIZED, \"Need to authenticate to perform the request\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyMDcyNw==", "bodyText": "Same as above.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483520727", "createdAt": "2020-09-04T10:05:23Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/web/PulsarWebResource.java", "diffHunk": "@@ -846,4 +847,36 @@ public void validateNamespacePolicyOperation(NamespaceName namespaceName,\n             }\n         }\n     }\n+\n+    public void validateTopicPolicyOperation(TopicName topicName, PolicyName policy, PolicyOperation operation) {\n+        if (pulsar().getConfiguration().isAuthenticationEnabled() && pulsar().getBrokerService().isAuthorizationEnabled()) {\n+            if (!isClientAuthenticated(clientAppId())) {\n+                throw new RestException(Status.FORBIDDEN, \"Need to authenticate to perform the request\");\n+            }\n+\n+            Boolean isAuthorized = pulsar().getBrokerService().getAuthorizationService()\n+                    .allowTopicPolicyOperation(topicName, policy, operation, originalPrincipal(), clientAppId(), clientAuthData());\n+\n+            if (!isAuthorized) {\n+                throw new RestException(Status.FORBIDDEN, String.format(\"Unauthorized to validateTopicPolicyOperation for\" +\n+                        \" operation [%s] on topic [%s] on policy [%s]\", operation.toString(), topicName, policy.toString()));\n+            }\n+        }\n+    }\n+\n+    public void validateTopicOperation(TopicName topicName, TopicOperation operation) {\n+        if (pulsar().getConfiguration().isAuthenticationEnabled() && pulsar().getBrokerService().isAuthorizationEnabled()) {\n+            if (!isClientAuthenticated(clientAppId())) {\n+                throw new RestException(Status.UNAUTHORIZED, \"Need to authenticate to perform the request\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTM3Mw=="}, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM1NjMzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMDo0NlrOHM-_uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxNDo0NDozM1rOIeUGHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzA4MQ==", "bodyText": "Can you make the default implementation to use the existing method? If people wrote its own plugin, it will fail all the topic policy operations when it upgrades to a newer version of Pulsar.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377081", "createdAt": "2020-09-04T04:20:46Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationProvider.java", "diffHunk": "@@ -489,4 +490,36 @@ default Boolean allowTopicOperation(TopicName topicName,\n             throw new RestException(e.getCause());\n         }\n     }\n+\n+    /**\n+     * Check if a given <tt>role</tt> is allowed to execute a given topic <tt>operation</tt> on topic's <tt>policy</tt>.\n+     *\n+     * @param topic topic name\n+     * @param role role name\n+     * @param operation topic operation\n+     * @param authData authenticated data\n+     * @return CompletableFuture<Boolean>\n+     */\n+    default CompletableFuture<Boolean> allowTopicPolicyOperationAsync(TopicName topic,\n+                                                                      String role,\n+                                                                      PolicyName policy,\n+                                                                      PolicyOperation operation,\n+                                                                      AuthenticationDataSource authData) {\n+        return FutureUtil.failedFuture(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUxODUzNw==", "bodyText": "So call return isTenantAdmin(topic.getTenant(), role, tenantInfo , authData);, correct? How to get tenantInfo from here?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483518537", "createdAt": "2020-09-04T10:00:48Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationProvider.java", "diffHunk": "@@ -489,4 +490,36 @@ default Boolean allowTopicOperation(TopicName topicName,\n             throw new RestException(e.getCause());\n         }\n     }\n+\n+    /**\n+     * Check if a given <tt>role</tt> is allowed to execute a given topic <tt>operation</tt> on topic's <tt>policy</tt>.\n+     *\n+     * @param topic topic name\n+     * @param role role name\n+     * @param operation topic operation\n+     * @param authData authenticated data\n+     * @return CompletableFuture<Boolean>\n+     */\n+    default CompletableFuture<Boolean> allowTopicPolicyOperationAsync(TopicName topic,\n+                                                                      String role,\n+                                                                      PolicyName policy,\n+                                                                      PolicyOperation operation,\n+                                                                      AuthenticationDataSource authData) {\n+        return FutureUtil.failedFuture(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzA4MQ=="}, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMjgxNw==", "bodyText": "@sijie", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r484122817", "createdAt": "2020-09-06T22:47:19Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationProvider.java", "diffHunk": "@@ -489,4 +490,36 @@ default Boolean allowTopicOperation(TopicName topicName,\n             throw new RestException(e.getCause());\n         }\n     }\n+\n+    /**\n+     * Check if a given <tt>role</tt> is allowed to execute a given topic <tt>operation</tt> on topic's <tt>policy</tt>.\n+     *\n+     * @param topic topic name\n+     * @param role role name\n+     * @param operation topic operation\n+     * @param authData authenticated data\n+     * @return CompletableFuture<Boolean>\n+     */\n+    default CompletableFuture<Boolean> allowTopicPolicyOperationAsync(TopicName topic,\n+                                                                      String role,\n+                                                                      PolicyName policy,\n+                                                                      PolicyOperation operation,\n+                                                                      AuthenticationDataSource authData) {\n+        return FutureUtil.failedFuture(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzA4MQ=="}, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc1NzQ0Mg==", "bodyText": "@zymap is working on some authorization changes. @zymap Can you take a look at this pull request?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r556757442", "createdAt": "2021-01-13T18:57:25Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationProvider.java", "diffHunk": "@@ -489,4 +490,36 @@ default Boolean allowTopicOperation(TopicName topicName,\n             throw new RestException(e.getCause());\n         }\n     }\n+\n+    /**\n+     * Check if a given <tt>role</tt> is allowed to execute a given topic <tt>operation</tt> on topic's <tt>policy</tt>.\n+     *\n+     * @param topic topic name\n+     * @param role role name\n+     * @param operation topic operation\n+     * @param authData authenticated data\n+     * @return CompletableFuture<Boolean>\n+     */\n+    default CompletableFuture<Boolean> allowTopicPolicyOperationAsync(TopicName topic,\n+                                                                      String role,\n+                                                                      PolicyName policy,\n+                                                                      PolicyOperation operation,\n+                                                                      AuthenticationDataSource authData) {\n+        return FutureUtil.failedFuture(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzA4MQ=="}, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI5NDY5OA==", "bodyText": "Overall looks good. This PR looks like only add the validation for the topic level authorization.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r559294698", "createdAt": "2021-01-18T03:10:38Z", "author": {"login": "zymap"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationProvider.java", "diffHunk": "@@ -489,4 +490,36 @@ default Boolean allowTopicOperation(TopicName topicName,\n             throw new RestException(e.getCause());\n         }\n     }\n+\n+    /**\n+     * Check if a given <tt>role</tt> is allowed to execute a given topic <tt>operation</tt> on topic's <tt>policy</tt>.\n+     *\n+     * @param topic topic name\n+     * @param role role name\n+     * @param operation topic operation\n+     * @param authData authenticated data\n+     * @return CompletableFuture<Boolean>\n+     */\n+    default CompletableFuture<Boolean> allowTopicPolicyOperationAsync(TopicName topic,\n+                                                                      String role,\n+                                                                      PolicyName policy,\n+                                                                      PolicyOperation operation,\n+                                                                      AuthenticationDataSource authData) {\n+        return FutureUtil.failedFuture(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzA4MQ=="}, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODY1NzQzNg==", "bodyText": "It does.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r568657436", "createdAt": "2021-02-02T14:44:33Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationProvider.java", "diffHunk": "@@ -489,4 +490,36 @@ default Boolean allowTopicOperation(TopicName topicName,\n             throw new RestException(e.getCause());\n         }\n     }\n+\n+    /**\n+     * Check if a given <tt>role</tt> is allowed to execute a given topic <tt>operation</tt> on topic's <tt>policy</tt>.\n+     *\n+     * @param topic topic name\n+     * @param role role name\n+     * @param operation topic operation\n+     * @param authData authenticated data\n+     * @return CompletableFuture<Boolean>\n+     */\n+    default CompletableFuture<Boolean> allowTopicPolicyOperationAsync(TopicName topic,\n+                                                                      String role,\n+                                                                      PolicyName policy,\n+                                                                      PolicyOperation operation,\n+                                                                      AuthenticationDataSource authData) {\n+        return FutureUtil.failedFuture(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzA4MQ=="}, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM1NzY4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMTo0NlrOHM_AlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMTo0NlrOHM_AlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzMwMQ==", "bodyText": "Can you avoid formatting the file with other changes?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377301", "createdAt": "2020-09-04T04:21:46Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/AuthorizationService.java", "diffHunk": "@@ -364,13 +353,11 @@ private boolean isProxyRole(String role) {\n      * Grant authorization-action permission on a tenant to the given client\n      *\n      * @param tenantName tenant name\n-     * @param operation tenant operation\n-     * @param role role name\n-     * @param authData\n-     *            additional authdata in json for targeted authorization provider\n+     * @param operation  tenant operation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM1OTM0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMjo1OFrOHM_BmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMjo1OFrOHM_BmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzU2MQ==", "bodyText": "expire messages is a consume operation, correct?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377561", "createdAt": "2020-09-04T04:22:58Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case EXPIRE_MESSAGES: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM1OTk0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMzoyNVrOHM_B-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMzoyNVrOHM_B-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzY1OA==", "bodyText": "compact should be an admin operation, correct?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377658", "createdAt": "2020-09-04T04:23:25Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM2MDEwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMzozM1rOHM_CFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyMzozM1rOHM_CFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzY4NQ==", "bodyText": "admin?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377685", "createdAt": "2020-09-04T04:23:33Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case EXPIRE_MESSAGES: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case OFFLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM2MTQwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDozNFrOHM_C3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDozNFrOHM_C3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3Nzg4NQ==", "bodyText": "consume?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377885", "createdAt": "2020-09-04T04:24:34Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case EXPIRE_MESSAGES: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case OFFLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case PEEK_MESSAGES: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case RESET_CURSOR: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM2MTU4OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDo0MlrOHM_C-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDo0MlrOHM_C-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3NzkxNA==", "bodyText": "admin?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377914", "createdAt": "2020-09-04T04:24:42Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case EXPIRE_MESSAGES: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case OFFLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case PEEK_MESSAGES: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case RESET_CURSOR: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case SKIP: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case TERMINATE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case UNLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM2MTg0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDo0OFrOHM_DGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDo0OFrOHM_DGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3Nzk0NQ==", "bodyText": "admin?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377945", "createdAt": "2020-09-04T04:24:48Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case EXPIRE_MESSAGES: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case OFFLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case PEEK_MESSAGES: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case RESET_CURSOR: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case SKIP: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case TERMINATE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case UNLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case ADD_BUNDLE_RANGE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM2MjEzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDo1NVrOHM_DTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNDo1NVrOHM_DTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3Nzk5Ng==", "bodyText": "admin?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483377996", "createdAt": "2020-09-04T04:24:55Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case EXPIRE_MESSAGES: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case OFFLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case PEEK_MESSAGES: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case RESET_CURSOR: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case SKIP: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case TERMINATE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case UNLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case ADD_BUNDLE_RANGE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case GET_BUNDLE_RANGE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjM2Mjc2OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNTowOVrOHM_DmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNDoyNTowOVrOHM_DmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM3ODA3Mw==", "bodyText": "admin?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r483378073", "createdAt": "2020-09-04T04:25:09Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -564,6 +564,36 @@ private void validatePoliciesReadOnlyAccess() {\n                 break;\n             case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n                 break;\n+            case COMPACT: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case EXPIRE_MESSAGES: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case OFFLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case PEEK_MESSAGES: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case RESET_CURSOR: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case SKIP: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n+                break;\n+            case TERMINATE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case UNLOAD: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case ADD_BUNDLE_RANGE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case GET_BUNDLE_RANGE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case DELETE_BUNDLE_RANGE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39303fe260bf8458188706fc109aa8e6c150a81"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMTQ5NjA5OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMzoxMDoxMFrOIVYopw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMzoxMDoxMFrOIVYopw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI5NDYzMQ==", "bodyText": "Can we merge some operations like this? For example:\ncase CONSUME:\ncase EXPIRE_MESAGES:\n...\ncase SKIP:\n    isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n    break;", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r559294631", "createdAt": "2021-01-18T03:10:10Z", "author": {"login": "zymap"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -557,28 +557,65 @@ private void validatePoliciesReadOnlyAccess() {\n                                                                AuthenticationDataSource authData) {\n         CompletableFuture<Boolean> isAuthorizedFuture;\n \n-        switch (operation) {\n-            case LOOKUP: isAuthorizedFuture = canLookupAsync(topicName, role, authData);\n-                break;\n-            case PRODUCE: isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n-                break;\n-            case CONSUME: isAuthorizedFuture = canConsumeAsync(topicName, role, authData, authData.getSubscription());\n-                break;\n-            default: isAuthorizedFuture = FutureUtil.failedFuture(\n-                    new IllegalStateException(\"TopicOperation is not supported.\"));\n-        }\n+        try {\n+            TenantInfo tenantInfo = configCache.propertiesCache().get(path(POLICIES, topicName.getTenant())).get();\n+\n+            switch (operation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17dab993bdd8100982a84679934e28d4ce04dc2"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzczNTk1ODMwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQxNjo1NDoxM1rOI0SRYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQxNjo1NDoxM1rOI0SRYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTY5NjIyNg==", "bodyText": "for LOOKUP, the original behavior is checking canLookupAsync. Why do we need to check validateTenantAdminAccess?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r591696226", "createdAt": "2021-03-10T16:54:13Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -545,29 +546,88 @@ private void validatePoliciesReadOnlyAccess() {\n         CompletableFuture<Boolean> isAuthorizedFuture;\n \n         switch (operation) {\n-            case LOOKUP: isAuthorizedFuture = canLookupAsync(topicName, role, authData);\n+            case LOOKUP:\n+            case GET_STATS:\n+            case GET_SUBSCRIPTIONS:\n+                isAuthorizedFuture = canLookupAsync(topicName, role, authData)\n+                        .thenCombine(validateTenantAdminAccess(topicName.getTenant(), role, authData),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538ce78b25aeb97ebca547a5680c006dbf898f9e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzczNTk2MTM0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQxNjo1NDo1MlrOI0STbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMFQxNjo1NDo1MlrOI0STbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTY5Njc0OA==", "bodyText": "why do we need to check canProduceAsync for TERMINATE?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r591696748", "createdAt": "2021-03-10T16:54:52Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -545,29 +546,88 @@ private void validatePoliciesReadOnlyAccess() {\n         CompletableFuture<Boolean> isAuthorizedFuture;\n \n         switch (operation) {\n-            case LOOKUP: isAuthorizedFuture = canLookupAsync(topicName, role, authData);\n+            case LOOKUP:\n+            case GET_STATS:\n+            case GET_SUBSCRIPTIONS:\n+                isAuthorizedFuture = canLookupAsync(topicName, role, authData)\n+                        .thenCombine(validateTenantAdminAccess(topicName.getTenant(), role, authData),\n+                            (isTenantAdmin, isAuthorized) -> {\n+                                if (log.isDebugEnabled()) {\n+                                    log.debug(\"Verify if role {} is allowed to {} to topic {}:\"\n+                                                    + \" isSuperUser={}, isTenantAdmin={}\",\n+                                            role, operation, topicName, isTenantAdmin, isAuthorized);\n+                                }\n+                                return isTenantAdmin || isAuthorized;\n+                            });\n+                break;\n+            case PRODUCE:\n+                isAuthorizedFuture = canProduceAsync(topicName, role, authData);\n+                break;\n+            case TERMINATE:\n+                isAuthorizedFuture = canProduceAsync(topicName, role, authData)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538ce78b25aeb97ebca547a5680c006dbf898f9e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1ODMzNDk1OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/AuthenticatedProducerConsumerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQxMTowNDowMlrOI3f7aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQxMTowNDowMlrOI3f7aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTA2NTcwNw==", "bodyText": "@sijie can you confirm that this change is correct regarding the test anonymousUser has all rights to the topics so this new consumer should pass. Correct?", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r595065707", "createdAt": "2021-03-16T11:04:02Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/api/AuthenticatedProducerConsumerTest.java", "diffHunk": "@@ -245,15 +245,8 @@ public void testAnonymousSyncProducerAndConsumer(int batchMessageDelayMs) throws\n         replacePulsarClient(PulsarClient.builder().serviceUrl(pulsar.getBrokerServiceUrl())\n                 .operationTimeout(1, TimeUnit.SECONDS));\n \n-        // unauthorized topic test\n-        Exception pulsarClientException = null;\n-        try {\n-            pulsarClient.newConsumer().topic(\"persistent://my-property/my-ns/other-topic\")\n-                    .subscriptionName(\"my-subscriber-name\").subscribe();\n-        } catch (Exception e) {\n-            pulsarClientException = e;\n-        }\n-        Assert.assertTrue(pulsarClientException instanceof PulsarClientException);\n+        pulsarClient.newConsumer().topic(\"persistent://my-property/my-ns/other-topic\")\n+                .subscriptionName(\"my-subscriber-name\").subscribe();\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc93828fe04fdfed0beb9494766c0cd3cf0a1fa7"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgzNTE1NTE1OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wM1QxMjoyMzozMFrOJCjgaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wNlQxMjoxNDo0M1rOJDoz6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjY1ODY2NA==", "bodyText": "I checked the get subscriptions API, originally, it uses validationReadOperationOnTopic which requires a tenant admin permission or a consume permission. After this change, it will also request produce permission.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r606658664", "createdAt": "2021-04-03T12:23:30Z", "author": {"login": "zymap"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -542,30 +543,56 @@ private void validatePoliciesReadOnlyAccess() {\n                                                                String role,\n                                                                TopicOperation operation,\n                                                                AuthenticationDataSource authData) {\n+        log.debug(\"Check allowTopicOperationAsync [\" + operation.name() + \"] on [\" + topicName.toString() + \"].\");\n+\n         CompletableFuture<Boolean> isAuthorizedFuture;\n \n         switch (operation) {\n-            case LOOKUP: isAuthorizedFuture = canLookupAsync(topicName, role, authData);\n+            case LOOKUP:\n+            case GET_STATS:\n+            case GET_SUBSCRIPTIONS:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "058ed63a0a27dd88f3987e55c131fe66a8bcdf0f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzcxNTA5MQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r607715091", "createdAt": "2021-04-06T10:04:04Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -542,30 +543,56 @@ private void validatePoliciesReadOnlyAccess() {\n                                                                String role,\n                                                                TopicOperation operation,\n                                                                AuthenticationDataSource authData) {\n+        log.debug(\"Check allowTopicOperationAsync [\" + operation.name() + \"] on [\" + topicName.toString() + \"].\");\n+\n         CompletableFuture<Boolean> isAuthorizedFuture;\n \n         switch (operation) {\n-            case LOOKUP: isAuthorizedFuture = canLookupAsync(topicName, role, authData);\n+            case LOOKUP:\n+            case GET_STATS:\n+            case GET_SUBSCRIPTIONS:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjY1ODY2NA=="}, "originalCommit": {"oid": "058ed63a0a27dd88f3987e55c131fe66a8bcdf0f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzc5NDE1Mw==", "bodyText": "@zymap", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r607794153", "createdAt": "2021-04-06T12:14:43Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authorization/PulsarAuthorizationProvider.java", "diffHunk": "@@ -542,30 +543,56 @@ private void validatePoliciesReadOnlyAccess() {\n                                                                String role,\n                                                                TopicOperation operation,\n                                                                AuthenticationDataSource authData) {\n+        log.debug(\"Check allowTopicOperationAsync [\" + operation.name() + \"] on [\" + topicName.toString() + \"].\");\n+\n         CompletableFuture<Boolean> isAuthorizedFuture;\n \n         switch (operation) {\n-            case LOOKUP: isAuthorizedFuture = canLookupAsync(topicName, role, authData);\n+            case LOOKUP:\n+            case GET_STATS:\n+            case GET_SUBSCRIPTIONS:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjY1ODY2NA=="}, "originalCommit": {"oid": "058ed63a0a27dd88f3987e55c131fe66a8bcdf0f"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk3NzQ2MDA5OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/lookup/TopicLookupBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQyMToxNTowMlrOJWr_kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNlQyMTozMDo0MlrOJWshHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzc2OTIzNA==", "bodyText": "Do we need to log here? The exception would be expected if the client is not authorized and since it's already bubbled up, we would end up logging that twice.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r627769234", "createdAt": "2021-05-06T21:15:02Z", "author": {"login": "merlimat"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/lookup/TopicLookupBase.java", "diffHunk": "@@ -126,14 +128,17 @@ protected void internalLookupTopicAsync(TopicName topicName, boolean authoritati\n \n     private void validateAdminAndClientPermission(TopicName topic) throws RestException, Exception {\n         try {\n-            validateAdminAccessForTenant(topic.getTenant());\n+            validateTopicOperation(topic, TopicOperation.LOOKUP);\n         } catch (Exception e) {\n-            checkConnect(topic);\n+            // unknown error marked as internal server error\n+            log.warn(\"Unexpected error while authorizing TopicOperation.LOOKUP. topic={}, role={}. Error: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf33f043989bdd2c8946cd38e2e9d35b95c35289"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzc3NzgyMw==", "bodyText": "Dropped in 596d85f.\nPR rebased due to a recent conflict.", "url": "https://github.com/apache/pulsar/pull/7523#discussion_r627777823", "createdAt": "2021-05-06T21:30:42Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/lookup/TopicLookupBase.java", "diffHunk": "@@ -126,14 +128,17 @@ protected void internalLookupTopicAsync(TopicName topicName, boolean authoritati\n \n     private void validateAdminAndClientPermission(TopicName topic) throws RestException, Exception {\n         try {\n-            validateAdminAccessForTenant(topic.getTenant());\n+            validateTopicOperation(topic, TopicOperation.LOOKUP);\n         } catch (Exception e) {\n-            checkConnect(topic);\n+            // unknown error marked as internal server error\n+            log.warn(\"Unexpected error while authorizing TopicOperation.LOOKUP. topic={}, role={}. Error: {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzc2OTIzNA=="}, "originalCommit": {"oid": "bf33f043989bdd2c8946cd38e2e9d35b95c35289"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2457, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}