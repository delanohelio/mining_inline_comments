{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDQ4NDAx", "number": 6077, "title": "Support delete inactive topic when subscriptions caught up", "bodyText": "Motivation\nCurrently, pulsar support delete inactive topic which has no active producers and no subscriptions. This pull request is support to delete inactive topics that all subscriptions of the topic are caught up and no active producers/consumer.\nModifications\nExpose inactive topic delete mode in broker.conf, future more we can support namespace level configuration for the inactive topic delete mode.\nVerifying this change\nNew unit tests added for each inactive topic delete mode.\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API: (no)\nThe schema: (no)\nThe default values of configurations: (no)\nThe wire protocol: (no)\nThe rest endpoints: (no)\nThe admin cli options: (no)\nAnything that affects deployment: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-01-17T09:29:44Z", "url": "https://github.com/apache/pulsar/pull/6077", "merged": true, "mergeCommit": {"oid": "dc7abd8e4a2358866301ee59fecfa4572f79f0a1"}, "closed": true, "closedAt": "2020-01-19T02:43:22Z", "author": {"login": "codelipenghui"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7LPjIAH2gAyMzY0MDQ4NDAxOjgzNDRkOGY0NjM2NjhiMDQ0ZWM4MTAxMTAyYjkxYjQyNDcyNjNjMGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7qgQDAFqTM0NDk2NDIwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8344d8f463668b044ec8101102b91b4247263c0a", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/8344d8f463668b044ec8101102b91b4247263c0a", "committedDate": "2020-01-17T09:22:24Z", "message": "Support delete inactive topic when subscriptions caught up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e06beb9143de16106eb01ba1e2c8ef20fd40347", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/6e06beb9143de16106eb01ba1e2c8ef20fd40347", "committedDate": "2020-01-17T09:33:51Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72743ed3516700319777508359a41df5001495c4", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/72743ed3516700319777508359a41df5001495c4", "committedDate": "2020-01-17T12:08:24Z", "message": "Add maxInactiveDuration for broker delete inactive topics."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9", "committedDate": "2020-01-17T14:10:24Z", "message": "Fix unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjQzODgz", "url": "https://github.com/apache/pulsar/pull/6077#pullrequestreview-344643883", "createdAt": "2020-01-17T15:13:22Z", "commit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxMzoyMlrOFe8DKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxOToyMlrOFe8PwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NTQ1MA==", "bodyText": "I like the idea of introducing brokerDeleteInactiveTopicsMaxInactiveDurationSeconds. However, I think we need to keep backward compatibility here since it was using brokerDeleteInactiveTopicsFrequencySeconds. So what you can do here are the followings:\n\nuse boxed type not primitive type. so it is null when this setting is not specified.\n\nprivate Integer brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = null\n\n\nimplementing the getter for this field.\n\nint getBrokerDeleteInactiveTopicsMaxInactiveDurationSeconds() {\n     if (brokerDeleteInactiveTopicsMaxInactiveDurationSeconds == null) {\n         return brokerDeleteInactiveTopicsFrequencySeconds;\n     } else {\n         return brokerDeleteInactiveTopicsMaxInactiveDurationSeconds;\n     }\n}", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367985450", "createdAt": "2020-01-17T15:13:22Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -254,6 +255,23 @@\n         doc = \"How often to check for inactive topics\"\n     )\n     private int brokerDeleteInactiveTopicsFrequencySeconds = 60;\n+\n+    @FieldContext(\n+        category = CATEGORY_POLICIES,\n+        doc = \"Set the inactive topic delete mode. Default is delete_when_no_subscriptions\\n\"\n+        + \"'delete_when_no_subscriptions' mode only delete the topic which has no subscriptions and no active producers\\n\"\n+        + \"'delete_when_subscriptions_caught_up' mode only delete the topic that all subscriptions has no backlogs(caught up)\"\n+        + \"and no active producers/consumers\"\n+    )\n+    private InactiveTopicDeleteMode brokerDeleteInactiveTopicsMode = InactiveTopicDeleteMode.delete_when_no_subscriptions;\n+\n+    @FieldContext(\n+        category = CATEGORY_POLICIES,\n+        doc = \"Max duration of topic inactivity in seconds, default is 60s\\n\"\n+        + \"Topics that are inactive for longer than this value will be deleted\"\n+    )\n+    private int brokerDeleteInactiveTopicsMaxInactiveDurationSeconds = 60;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4Nzk4Mw==", "bodyText": "break here?", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367987983", "createdAt": "2020-01-17T15:18:06Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -1586,19 +1594,34 @@ public long getBacklogSize() {\n         return ledger.getEstimatedBacklogSize();\n     }\n \n-    public boolean isActive() {\n+    public boolean isActive(InactiveTopicDeleteMode deleteMode) {\n+        switch (deleteMode) {\n+            case delete_when_no_subscriptions:\n+                if (!subscriptions.isEmpty()) {\n+                    return true;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4ODY3Mw==", "bodyText": "I think in delete_when_subscriptions_caught_up mode, we just need to check if the backlog is empty or not. we don't need to check if there are consumers connected.", "url": "https://github.com/apache/pulsar/pull/6077#discussion_r367988673", "createdAt": "2020-01-17T15:19:22Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/persistent/PersistentTopic.java", "diffHunk": "@@ -1586,19 +1594,34 @@ public long getBacklogSize() {\n         return ledger.getEstimatedBacklogSize();\n     }\n \n-    public boolean isActive() {\n+    public boolean isActive(InactiveTopicDeleteMode deleteMode) {\n+        switch (deleteMode) {\n+            case delete_when_no_subscriptions:\n+                if (!subscriptions.isEmpty()) {\n+                    return true;\n+                }\n+            case delete_when_subscriptions_caught_up:\n+                if (hasLocalConsumers() || hasBacklogs()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ee5908bb56b5eb5f71dacd735fc98fc0ef873a9"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d51368156d040b51693236f20e5a62674967cb16", "author": {"user": {"login": "codelipenghui", "name": "lipenghui"}}, "url": "https://github.com/apache/pulsar/commit/d51368156d040b51693236f20e5a62674967cb16", "committedDate": "2020-01-18T00:47:48Z", "message": "Apply comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTY0MjAx", "url": "https://github.com/apache/pulsar/pull/6077#pullrequestreview-344964201", "createdAt": "2020-01-18T21:47:42Z", "commit": {"oid": "d51368156d040b51693236f20e5a62674967cb16"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1482, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}