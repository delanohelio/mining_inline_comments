{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NzYzOTU0", "number": 9042, "title": "support namespace policy for maxTopicsPerNamespace limit", "bodyText": "Related to #8225\nChanges\n\nSupport namespace policy for maxTopicsPerNamespace limit\nAdd the tests for this feature", "createdAt": "2020-12-23T12:58:27Z", "url": "https://github.com/apache/pulsar/pull/9042", "merged": true, "mergeCommit": {"oid": "2442071d36a4141101dd00c8666ffbdcbe3bbbe2"}, "closed": true, "closedAt": "2021-01-04T17:42:11Z", "author": {"login": "hangc0276"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdo-oyKAH2gAyNTQ0NzYzOTU0OmI2NjkwNWQ1M2JiOWFmYzFmZDVhMjY5N2RlOWI2Nzc1ZWFkZTEwNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABds59gCAFqTU2MTIxNDMyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b66905d53bb9afc1fd5a2697de9b6775eade1073", "author": {"user": {"login": "hangc0276", "name": "Hang Chen"}}, "url": "https://github.com/apache/pulsar/commit/b66905d53bb9afc1fd5a2697de9b6775eade1073", "committedDate": "2020-12-23T12:52:52Z", "message": "support namespace policy for maxTopicsPerNamespace limit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODkwODc0", "url": "https://github.com/apache/pulsar/pull/9042#pullrequestreview-557890874", "createdAt": "2020-12-23T14:11:00Z", "commit": {"oid": "b66905d53bb9afc1fd5a2697de9b6775eade1073"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoxMTowMFrOIKl2sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoxMTo1NlrOIKl4VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3Njg4Mg==", "bodyText": "When setting the value, it must be greater than or equal to 0, so there should be no case of <0.", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r547976882", "createdAt": "2020-12-23T14:11:00Z", "author": {"login": "315157973"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/AdminResource.java", "diffHunk": "@@ -811,9 +811,14 @@ protected boolean isNamespaceReplicated(NamespaceName namespaceName) {\n     }\n \n     protected void internalCreatePartitionedTopic(AsyncResponse asyncResponse, int numPartitions) {\n-        final int maxTopicsPerNamespace = pulsar().getConfig().getMaxTopicsPerNamespace();\n-        if (maxTopicsPerNamespace > 0) {\n-            try {\n+        Integer maxTopicsPerNamespace;\n+        try {\n+            maxTopicsPerNamespace = getNamespacePolicies(namespaceName).max_topics_per_namespace;\n+            if (maxTopicsPerNamespace == null || maxTopicsPerNamespace < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b66905d53bb9afc1fd5a2697de9b6775eade1073"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3Njk1NA==", "bodyText": "When setting the value, it must be greater than or equal to 0, so there should be no case of <0.", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r547976954", "createdAt": "2020-12-23T14:11:10Z", "author": {"login": "315157973"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/NamespacesBase.java", "diffHunk": "@@ -3182,5 +3182,26 @@ protected OffloadPolicies internalGetOffloadPolicies() {\n         return policies.offload_policies;\n     }\n \n-    private static final Logger log = LoggerFactory.getLogger(NamespacesBase.class);\n+    protected int internalGetMaxTopicsPerNamespace() {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.MAX_TOPICS, PolicyOperation.READ);\n+        return getNamespacePolicies(namespaceName).max_topics_per_namespace;\n+    }\n+\n+   protected void internalRemoveMaxTopicsPerNamespace() {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.MAX_TOPICS, PolicyOperation.WRITE);\n+        internalSetMaxTopicsPerNamespace(null);\n+   }\n+\n+   protected void internalSetMaxTopicsPerNamespace(Integer maxTopicsPerNamespace) {\n+        validateNamespacePolicyOperation(namespaceName, PolicyName.MAX_TOPICS, PolicyOperation.WRITE);\n+        validatePoliciesReadOnlyAccess();\n+\n+        if (maxTopicsPerNamespace != null && maxTopicsPerNamespace < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b66905d53bb9afc1fd5a2697de9b6775eade1073"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3NzMwMQ==", "bodyText": "Will there be a problem if the created producer is not closed?", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r547977301", "createdAt": "2020-12-23T14:11:56Z", "author": {"login": "315157973"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/admin/NamespacesTest.java", "diffHunk": "@@ -1413,6 +1414,132 @@ public void testRetentionPolicyValidation() throws Exception {\n         admin.namespaces().deleteNamespace(namespace);\n     }\n \n+    @Test(timeOut = 30000)\n+    public void testMaxTopicsPerNamespace() throws Exception {\n+        super.internalCleanup();\n+        conf.setMaxTopicsPerNamespace(15);\n+        super.internalSetup();\n+\n+        String namespace = \"testTenant/ns1\";\n+        admin.clusters().createCluster(\"use\", new ClusterData(brokerUrl.toString()));\n+        TenantInfo tenantInfo = new TenantInfo(Sets.newHashSet(\"role1\", \"role2\"),\n+                Sets.newHashSet(\"use\"));\n+        admin.tenants().createTenant(\"testTenant\", tenantInfo);\n+        admin.namespaces().createNamespace(namespace, Sets.newHashSet(\"use\"));\n+\n+        admin.namespaces().setMaxTopicsPerNamespace(namespace, 10);\n+        assertEquals(10, admin.namespaces().getMaxTopicsPerNamespace(namespace));\n+\n+        // check create partitioned/non-partitioned topics using namespace policy\n+        String topic = \"persistent://testTenant/ns1/test_create_topic_v\";\n+        admin.topics().createPartitionedTopic(topic + \"1\", 2);\n+        admin.topics().createPartitionedTopic(topic + \"2\", 3);\n+        admin.topics().createPartitionedTopic(topic + \"3\", 4);\n+        admin.topics().createNonPartitionedTopic(topic + \"4\");\n+\n+        try {\n+            admin.topics().createPartitionedTopic(topic + \"5\", 2);\n+            fail();\n+        } catch (PulsarAdminException e) {\n+            assertEquals(e.getStatusCode(), 412);\n+            assertEquals(e.getHttpError(), \"Exceed maximum number of topics in namespace.\");\n+        }\n+\n+        // remove namespace policy limit, use broker configuration instead.\n+        admin.namespaces().removeMaxTopicsPerNamespace(namespace);\n+        admin.topics().createPartitionedTopic(topic + \"6\", 4);\n+        try {\n+            admin.topics().createPartitionedTopic(topic + \"7\", 3);\n+            fail();\n+        } catch (PulsarAdminException e) {\n+            assertEquals(e.getStatusCode(), 412);\n+            assertEquals(e.getHttpError(), \"Exceed maximum number of topics in namespace.\");\n+        }\n+\n+        admin.namespaces().setMaxTopicsPerNamespace(namespace, 0);\n+        // set namespace policy to no limit\n+        for (int i = 0; i< 10; ++i) {\n+            admin.topics().createPartitionedTopic(topic + \"_v\" + i, 2);\n+            admin.topics().createNonPartitionedTopic(topic + \"_vn\" + i);\n+        }\n+\n+\n+        // check producer/consumer auto create partitioned topic\n+        super.internalCleanup();\n+        conf.setMaxTopicsPerNamespace(0);\n+        conf.setDefaultNumPartitions(3);\n+        conf.setAllowAutoTopicCreationType(\"partitioned\");\n+        super.internalSetup();\n+\n+        admin.clusters().createCluster(\"use\", new ClusterData(brokerUrl.toString()));\n+        admin.tenants().createTenant(\"testTenant\", tenantInfo);\n+        admin.namespaces().createNamespace(namespace, Sets.newHashSet(\"use\"));\n+        admin.namespaces().setMaxTopicsPerNamespace(namespace, 10);\n+\n+        pulsarClient.newProducer().topic(topic + \"1\").create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b66905d53bb9afc1fd5a2697de9b6775eade1073"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9159b16b36cfc683b6b37f67f8a85cf77c879648", "author": {"user": {"login": "hangc0276", "name": "Hang Chen"}}, "url": "https://github.com/apache/pulsar/commit/9159b16b36cfc683b6b37f67f8a85cf77c879648", "committedDate": "2020-12-24T01:20:12Z", "message": "fix a bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MzEyNjc0", "url": "https://github.com/apache/pulsar/pull/9042#pullrequestreview-558312674", "createdAt": "2020-12-24T02:55:11Z", "commit": {"oid": "9159b16b36cfc683b6b37f67f8a85cf77c879648"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMjo1NToxMVrOIK9NDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMjo1NToxMVrOIK9NDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM1OTQzOA==", "bodyText": "Will there be no <0\uff1f", "url": "https://github.com/apache/pulsar/pull/9042#discussion_r548359438", "createdAt": "2020-12-24T02:55:11Z", "author": {"login": "315157973"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java", "diffHunk": "@@ -2517,9 +2517,18 @@ private void checkTopicLevelPolicyEnable() {\n \n     private <T> boolean checkMaxTopicsPerNamespace(TopicName topicName, int numPartitions,\n                                             CompletableFuture<T> topicFuture) {\n-        final int maxTopicsPerNamespace = pulsar().getConfig().getMaxTopicsPerNamespace();\n-        if (maxTopicsPerNamespace > 0) {\n-            try {\n+        Integer maxTopicsPerNamespace;\n+        try {\n+            maxTopicsPerNamespace = pulsar.getConfigurationCache().policiesCache()\n+                    .get(AdminResource.path(POLICIES, topicName.getNamespace()))\n+                    .map(p -> p.max_topics_per_namespace)\n+                    .orElse(null);\n+\n+            if (maxTopicsPerNamespace == null || maxTopicsPerNamespace < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9159b16b36cfc683b6b37f67f8a85cf77c879648"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "297897b80465b104e02ac9765c0daee7a68b16a8", "author": {"user": {"login": "hangc0276", "name": "Hang Chen"}}, "url": "https://github.com/apache/pulsar/commit/297897b80465b104e02ac9765c0daee7a68b16a8", "committedDate": "2020-12-24T03:12:37Z", "message": "fix a bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTY5MTQ3", "url": "https://github.com/apache/pulsar/pull/9042#pullrequestreview-560569147", "createdAt": "2021-01-01T04:15:50Z", "commit": {"oid": "297897b80465b104e02ac9765c0daee7a68b16a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjE0MzIx", "url": "https://github.com/apache/pulsar/pull/9042#pullrequestreview-561214321", "createdAt": "2021-01-04T17:41:40Z", "commit": {"oid": "297897b80465b104e02ac9765c0daee7a68b16a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 829, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}