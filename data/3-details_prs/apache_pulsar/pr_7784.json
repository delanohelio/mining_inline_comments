{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDYwODU4", "number": 7784, "title": "support topic level delayed delivery policy", "bodyText": "Master Issue: #2688\nMotivation\nsupport topic level delayed delivery policy\nModifications\nSupport set/get/remove delayed delivery policy on topic level.\nVerifying this change\nAdded Unit test to verify set/get/remove delayed delivery policy at Topic level work as expected when Topic level policy is enabled/disabled\n\norg.apache.pulsar.broker.admin.AdminApiDelayedDelivery#testEnableAndDisableTopicDelayedDelivery\norg.apache.pulsar.broker.admin.AdminApiDelayedDelivery#testEnableTopicDelayedDelivery", "createdAt": "2020-08-08T18:30:44Z", "url": "https://github.com/apache/pulsar/pull/7784", "merged": true, "mergeCommit": {"oid": "e417d77a5035e93993ca2e1912282eddf315a6ca"}, "closed": true, "closedAt": "2020-08-12T00:41:11Z", "author": {"login": "315157973"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc89H2HgH2gAyNDY1MDYwODU4OjZiYjE0MjYxOTdhODFkZDQ0MWJiOGYzNTYyZjcyZDI4N2U3M2EyZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9-5q1AFqTQ2NTQ4MTI2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6bb1426197a81dd441bb8f3562f72d287e73a2ef", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/6bb1426197a81dd441bb8f3562f72d287e73a2ef", "committedDate": "2020-08-08T18:14:19Z", "message": "support topic level delayed delivery policy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1baa9afef7674d50760f3a20a2e283227bd33338", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/1baa9afef7674d50760f3a20a2e283227bd33338", "committedDate": "2020-08-09T04:54:42Z", "message": "fix unit test"}, "afterCommit": {"oid": "85a3b0999891ac4e2242a612f4619458ce18978d", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/85a3b0999891ac4e2242a612f4619458ce18978d", "committedDate": "2020-08-09T05:16:55Z", "message": "add unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85a3b0999891ac4e2242a612f4619458ce18978d", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/85a3b0999891ac4e2242a612f4619458ce18978d", "committedDate": "2020-08-09T05:16:55Z", "message": "add unit test"}, "afterCommit": {"oid": "eecb3cf4c642d42b648a70547ab121d6bd6e3cc0", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/eecb3cf4c642d42b648a70547ab121d6bd6e3cc0", "committedDate": "2020-08-09T06:09:12Z", "message": "add unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eecb3cf4c642d42b648a70547ab121d6bd6e3cc0", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/eecb3cf4c642d42b648a70547ab121d6bd6e3cc0", "committedDate": "2020-08-09T06:09:12Z", "message": "add unit test"}, "afterCommit": {"oid": "cfa290a2c84e88ff727fa0a9e8aa4d370c1de29d", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/cfa290a2c84e88ff727fa0a9e8aa4d370c1de29d", "committedDate": "2020-08-09T08:07:12Z", "message": "add unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfa290a2c84e88ff727fa0a9e8aa4d370c1de29d", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/cfa290a2c84e88ff727fa0a9e8aa4d370c1de29d", "committedDate": "2020-08-09T08:07:12Z", "message": "add unit test"}, "afterCommit": {"oid": "e9142f3ab45af83012ab0305278b38ee1c439200", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/e9142f3ab45af83012ab0305278b38ee1c439200", "committedDate": "2020-08-09T08:58:39Z", "message": "add unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9142f3ab45af83012ab0305278b38ee1c439200", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/e9142f3ab45af83012ab0305278b38ee1c439200", "committedDate": "2020-08-09T08:58:39Z", "message": "add unit test"}, "afterCommit": {"oid": "eb81c59d559ca6ae24709f64504d54945af2425e", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/eb81c59d559ca6ae24709f64504d54945af2425e", "committedDate": "2020-08-09T10:40:14Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88094bfb8efcf7c251743c9f8ac8e6194ade0d7c", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/88094bfb8efcf7c251743c9f8ac8e6194ade0d7c", "committedDate": "2020-08-09T11:32:01Z", "message": "add unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb81c59d559ca6ae24709f64504d54945af2425e", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/eb81c59d559ca6ae24709f64504d54945af2425e", "committedDate": "2020-08-09T10:40:14Z", "message": "add unit test"}, "afterCommit": {"oid": "88094bfb8efcf7c251743c9f8ac8e6194ade0d7c", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/88094bfb8efcf7c251743c9f8ac8e6194ade0d7c", "committedDate": "2020-08-09T11:32:01Z", "message": "add unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d62221e8056373b6fe35f1bcacbbdb9c340efaf9", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/d62221e8056373b6fe35f1bcacbbdb9c340efaf9", "committedDate": "2020-08-09T15:45:03Z", "message": "add common method"}, "afterCommit": {"oid": "81681271318c3e67a76ef5502bd20b64e0b57c65", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/81681271318c3e67a76ef5502bd20b64e0b57c65", "committedDate": "2020-08-09T16:01:35Z", "message": "add common method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81681271318c3e67a76ef5502bd20b64e0b57c65", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/81681271318c3e67a76ef5502bd20b64e0b57c65", "committedDate": "2020-08-09T16:01:35Z", "message": "add common method"}, "afterCommit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/6b3e96321390666b574bad6b371fd8b3ab349e65", "committedDate": "2020-08-09T16:53:20Z", "message": "add common method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTYwMzE5", "url": "https://github.com/apache/pulsar/pull/7784#pullrequestreview-464160319", "createdAt": "2020-08-10T11:49:10Z", "commit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTo0OToxMVrOG-LUfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMTo1MzoyMVrOG-LbZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1MDM2NA==", "bodyText": "Please complete the asyncResponse with exception", "url": "https://github.com/apache/pulsar/pull/7784#discussion_r467850364", "createdAt": "2020-08-10T11:49:11Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -577,6 +580,56 @@ protected void internalCreateMissedPartitions(AsyncResponse asyncResponse) {\n         });\n     }\n \n+    protected TopicPolicies internalGetTopicPolicies(String properties) {\n+        TopicPolicies topicPolicies = getTopicPolicies(topicName).orElse(new TopicPolicies());\n+        Map result = new HashMap();\n+        try {\n+            List<String> propertyList = jsonMapper().readValue(properties, new TypeReference<List<String>>() {});\n+            Map policiesMap = jsonMapper().readValue(jsonMapper().writeValueAsString(topicPolicies), Map.class);\n+            propertyList.forEach(property -> {\n+                if (policiesMap.get(property) != null) {\n+                    result.put(property, policiesMap.get(property));\n+                }\n+            });\n+            return jsonMapper().readValue(jsonMapper().writeValueAsBytes(result), TopicPolicies.class);\n+        } catch (JsonProcessingException e) {\n+            throw new RestException(Status.NOT_ACCEPTABLE, \"incorrect policy properties\");\n+        } catch (IOException e) {\n+            throw new RestException(Status.NOT_ACCEPTABLE, \"serialize the result failed\");\n+        }\n+    }\n+\n+    protected void internalSetTopicPolicies(AsyncResponse asyncResponse, Map<String, String> policies) {\n+        TopicPolicies topicPolicies = null;\n+        try {\n+            topicPolicies = pulsar().getTopicPoliciesService().getTopicPolicies(topicName);\n+        } catch (BrokerServiceException.TopicPoliciesCacheNotInitException e) {\n+            log.error(\"Topic {} policies cache have not init.\", topicName);\n+            asyncResponse.resume(new RestException(e));\n+        }\n+        if (topicPolicies == null) {\n+            topicPolicies = new TopicPolicies();\n+        }\n+        try {\n+            Map oldPolicies = jsonMapper().readValue(jsonMapper().writeValueAsString(topicPolicies), Map.class);\n+            oldPolicies.putAll(policies);\n+            topicPolicies = jsonMapper().readValue(jsonMapper().writeValueAsString(oldPolicies), TopicPolicies.class);\n+        } catch (JsonProcessingException e) {\n+            log.error(\"incorrect policies map\", e);\n+            throw new RestException(Status.NOT_ACCEPTABLE, \"incorrect policies map\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1MjEzMw==", "bodyText": "It's better to keep consistent with the delayed delivery setting of the namespace.\n    @GET\n    @Path(\"/{tenant}/{namespace}/delayedDelivery\")\n    @ApiOperation(value = \"Get delayed delivery messages config on a namespace.\")\n    @ApiResponses(value = { @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n            @ApiResponse(code = 404, message = \"Tenant or cluster or namespace doesn't exist\"),\n            @ApiResponse(code = 409, message = \"Concurrent modification\"), })\n    public DelayedDeliveryPolicies getDelayedDeliveryPolicies(@PathParam(\"tenant\") String tenant,\n                                         @PathParam(\"namespace\") String namespace) {\n        validateNamespaceName(tenant, namespace);\n        return internalGetDelayedDelivery();\n    }\n\n    @POST\n    @Path(\"/{tenant}/{namespace}/delayedDelivery\")\n    @ApiOperation(value = \"Set delayed delivery messages config on a namespace.\")\n    @ApiResponses(value = { @ApiResponse(code = 403, message = \"Don't have admin permission\"),\n            @ApiResponse(code = 404, message = \"Tenant or cluster or namespace doesn't exist\"), })\n    public void setDelayedDeliveryPolicies(@PathParam(\"tenant\") String tenant,\n            @PathParam(\"namespace\") String namespace,\n            @ApiParam(value = \"Delayed delivery policies for the specified namespace\") DelayedDeliveryPolicies deliveryPolicies) {\n        validateNamespaceName(tenant, namespace);\n        internalSetDelayedDelivery(deliveryPolicies);\n    }\n\nAnd we should also add deleteDelayedDeliveryPolicies method for clearing the topic level delayed delivery policy.", "url": "https://github.com/apache/pulsar/pull/7784#discussion_r467852133", "createdAt": "2020-08-10T11:53:21Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -246,6 +246,41 @@ public void createNonPartitionedTopic(\n         internalCreateNonPartitionedTopic(authoritative);\n     }\n \n+    @GET\n+    @Path(\"/{tenant}/{namespace}/{topic}/{policyProperties}/getTopicPolicies\")\n+    @ApiOperation(value = \"Get delayed delivery messages config on a topic.\")\n+    @ApiResponses(value = {@ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Tenant or cluster or namespace or topic doesn't exist\"),\n+            @ApiResponse(code = 500, message = \"Internal server error\"),})\n+    public TopicPolicies getTopicPolicies(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/6b3e96321390666b574bad6b371fd8b3ab349e65", "committedDate": "2020-08-09T16:53:20Z", "message": "add common method"}, "afterCommit": {"oid": "88094bfb8efcf7c251743c9f8ac8e6194ade0d7c", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/88094bfb8efcf7c251743c9f8ac8e6194ade0d7c", "committedDate": "2020-08-09T11:32:01Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63f58e8da475e0519687998c75fd77d14c645330", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/63f58e8da475e0519687998c75fd77d14c645330", "committedDate": "2020-08-10T12:21:33Z", "message": "merge master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTcxNTIy", "url": "https://github.com/apache/pulsar/pull/7784#pullrequestreview-464171522", "createdAt": "2020-08-10T12:09:18Z", "commit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMjowOToxOFrOG-L4GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMjo0NzoxMlrOG-NCIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg1OTQ4MQ==", "bodyText": "Please add the generic declaration of Map.\nex Map<String,Object>", "url": "https://github.com/apache/pulsar/pull/7784#discussion_r467859481", "createdAt": "2020-08-10T12:09:18Z", "author": {"login": "jianyun8023"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -577,6 +580,56 @@ protected void internalCreateMissedPartitions(AsyncResponse asyncResponse) {\n         });\n     }\n \n+    protected TopicPolicies internalGetTopicPolicies(String properties) {\n+        TopicPolicies topicPolicies = getTopicPolicies(topicName).orElse(new TopicPolicies());\n+        Map result = new HashMap();\n+        try {\n+            List<String> propertyList = jsonMapper().readValue(properties, new TypeReference<List<String>>() {});\n+            Map policiesMap = jsonMapper().readValue(jsonMapper().writeValueAsString(topicPolicies), Map.class);\n+            propertyList.forEach(property -> {\n+                if (policiesMap.get(property) != null) {\n+                    result.put(property, policiesMap.get(property));\n+                }\n+            });\n+            return jsonMapper().readValue(jsonMapper().writeValueAsBytes(result), TopicPolicies.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg2MDE0OA==", "bodyText": "Please add the generic declaration of Map.", "url": "https://github.com/apache/pulsar/pull/7784#discussion_r467860148", "createdAt": "2020-08-10T12:10:42Z", "author": {"login": "jianyun8023"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -577,6 +580,56 @@ protected void internalCreateMissedPartitions(AsyncResponse asyncResponse) {\n         });\n     }\n \n+    protected TopicPolicies internalGetTopicPolicies(String properties) {\n+        TopicPolicies topicPolicies = getTopicPolicies(topicName).orElse(new TopicPolicies());\n+        Map result = new HashMap();\n+        try {\n+            List<String> propertyList = jsonMapper().readValue(properties, new TypeReference<List<String>>() {});\n+            Map policiesMap = jsonMapper().readValue(jsonMapper().writeValueAsString(topicPolicies), Map.class);\n+            propertyList.forEach(property -> {\n+                if (policiesMap.get(property) != null) {\n+                    result.put(property, policiesMap.get(property));\n+                }\n+            });\n+            return jsonMapper().readValue(jsonMapper().writeValueAsBytes(result), TopicPolicies.class);\n+        } catch (JsonProcessingException e) {\n+            throw new RestException(Status.NOT_ACCEPTABLE, \"incorrect policy properties\");\n+        } catch (IOException e) {\n+            throw new RestException(Status.NOT_ACCEPTABLE, \"serialize the result failed\");\n+        }\n+    }\n+\n+    protected void internalSetTopicPolicies(AsyncResponse asyncResponse, Map<String, String> policies) {\n+        TopicPolicies topicPolicies = null;\n+        try {\n+            topicPolicies = pulsar().getTopicPoliciesService().getTopicPolicies(topicName);\n+        } catch (BrokerServiceException.TopicPoliciesCacheNotInitException e) {\n+            log.error(\"Topic {} policies cache have not init.\", topicName);\n+            asyncResponse.resume(new RestException(e));\n+        }\n+        if (topicPolicies == null) {\n+            topicPolicies = new TopicPolicies();\n+        }\n+        try {\n+            Map oldPolicies = jsonMapper().readValue(jsonMapper().writeValueAsString(topicPolicies), Map.class);\n+            oldPolicies.putAll(policies);\n+            topicPolicies = jsonMapper().readValue(jsonMapper().writeValueAsString(oldPolicies), TopicPolicies.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3e96321390666b574bad6b371fd8b3ab349e65"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg3NjIzMg==", "bodyText": "When DelayedDeliveryPolicies is not set, the admin module should not return to the default value.", "url": "https://github.com/apache/pulsar/pull/7784#discussion_r467876232", "createdAt": "2020-08-10T12:43:00Z", "author": {"login": "jianyun8023"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/v2/PersistentTopics.java", "diffHunk": "@@ -246,6 +248,59 @@ public void createNonPartitionedTopic(\n         internalCreateNonPartitionedTopic(authoritative);\n     }\n \n+    @GET\n+    @Path(\"/{tenant}/{namespace}/{topic}/delayedDelivery\")\n+    @ApiOperation(value = \"Get delayed delivery messages config on a topic.\")\n+    @ApiResponses(value = {@ApiResponse(code = 403, message = \"Don't have admin permission\"),\n+            @ApiResponse(code = 404, message = \"Tenant or cluster or namespace or topic doesn't exist\"),\n+            @ApiResponse(code = 500, message = \"Internal server error\"),})\n+    public DelayedDeliveryPolicies getDelayedDeliveryPolicies(@PathParam(\"tenant\") String tenant,\n+                                                              @PathParam(\"namespace\") String namespace,\n+                                                              @PathParam(\"topic\") @Encoded String encodedTopic) {\n+        validateTopicName(tenant, namespace, encodedTopic);\n+        TopicPolicies topicPolicies = getTopicPolicies(topicName).orElse(new TopicPolicies());\n+        if (topicPolicies.isDelayedDeliveryEnabledSet() && topicPolicies.isDelayedDeliveryTickTimeMillisSet()) {\n+            return new DelayedDeliveryPolicies(topicPolicies.getDelayedDeliveryTickTimeMillis()\n+                    , topicPolicies.getDelayedDeliveryEnabled());\n+        }\n+        return new DelayedDeliveryPolicies(config().getDelayedDeliveryTickTimeMillis(), config().isDelayedDeliveryEnabled());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f58e8da475e0519687998c75fd77d14c645330"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg3ODQzMg==", "bodyText": "return", "url": "https://github.com/apache/pulsar/pull/7784#discussion_r467878432", "createdAt": "2020-08-10T12:47:12Z", "author": {"login": "jianyun8023"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/admin/impl/PersistentTopicsBase.java", "diffHunk": "@@ -577,6 +578,30 @@ protected void internalCreateMissedPartitions(AsyncResponse asyncResponse) {\n         });\n     }\n \n+    protected void internalSetDelayedDeliveryPolicies(AsyncResponse asyncResponse, DelayedDeliveryPolicies deliveryPolicies) {\n+        TopicPolicies topicPolicies = null;\n+        try {\n+            topicPolicies = pulsar().getTopicPoliciesService().getTopicPolicies(topicName);\n+        } catch (BrokerServiceException.TopicPoliciesCacheNotInitException e) {\n+            log.error(\"Topic {} policies cache have not init.\", topicName);\n+            asyncResponse.resume(new RestException(e));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f58e8da475e0519687998c75fd77d14c645330"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1d4d51561fe7157a11f019b136d2b963bba9c99", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/e1d4d51561fe7157a11f019b136d2b963bba9c99", "committedDate": "2020-08-10T13:25:48Z", "message": "fix as required"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5881f29cb20e974f5de1ff39cb0d9a5778779d35", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/5881f29cb20e974f5de1ff39cb0d9a5778779d35", "committedDate": "2020-08-11T10:12:23Z", "message": "fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38561c40c4ba47f04b81f0fbf11d56f9070f7915", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/38561c40c4ba47f04b81f0fbf11d56f9070f7915", "committedDate": "2020-08-11T10:15:29Z", "message": "merge master"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e51d7b499953abf2fa12c3f7c75b28a3bca66ba4", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/e51d7b499953abf2fa12c3f7c75b28a3bca66ba4", "committedDate": "2020-08-11T10:51:06Z", "message": "fix unit test"}, "afterCommit": {"oid": "68e4da180dcd1e70b56c215e42a5c1959179ac4a", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/68e4da180dcd1e70b56c215e42a5c1959179ac4a", "committedDate": "2020-08-11T13:35:13Z", "message": "Try to find out why it succeeds locally but fails in the CI environment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MDc0MTgw", "url": "https://github.com/apache/pulsar/pull/7784#pullrequestreview-465074180", "createdAt": "2020-08-11T13:39:58Z", "commit": {"oid": "68e4da180dcd1e70b56c215e42a5c1959179ac4a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68e4da180dcd1e70b56c215e42a5c1959179ac4a", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/68e4da180dcd1e70b56c215e42a5c1959179ac4a", "committedDate": "2020-08-11T13:35:13Z", "message": "Try to find out why it succeeds locally but fails in the CI environment"}, "afterCommit": {"oid": "862c1a0de85d1f277865f4d6413b8b82acc0170c", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/862c1a0de85d1f277865f4d6413b8b82acc0170c", "committedDate": "2020-08-11T13:52:33Z", "message": "Try to find out why it succeeds locally but fails in the CI environment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc90893e58a7ebcc59c6bb45760e22df60c341de", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/bc90893e58a7ebcc59c6bb45760e22df60c341de", "committedDate": "2020-08-11T14:16:30Z", "message": "fix unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "862c1a0de85d1f277865f4d6413b8b82acc0170c", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/862c1a0de85d1f277865f4d6413b8b82acc0170c", "committedDate": "2020-08-11T13:52:33Z", "message": "Try to find out why it succeeds locally but fails in the CI environment"}, "afterCommit": {"oid": "bc90893e58a7ebcc59c6bb45760e22df60c341de", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/bc90893e58a7ebcc59c6bb45760e22df60c341de", "committedDate": "2020-08-11T14:16:30Z", "message": "fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67992310065639898a21c0528d03896cd06eb63a", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/67992310065639898a21c0528d03896cd06eb63a", "committedDate": "2020-08-11T15:20:57Z", "message": "fix unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "699d4b59b57eb39c41c576eb99b2b92c11cf8b11", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/699d4b59b57eb39c41c576eb99b2b92c11cf8b11", "committedDate": "2020-08-11T14:54:13Z", "message": "fix unit test"}, "afterCommit": {"oid": "67992310065639898a21c0528d03896cd06eb63a", "author": {"user": {"login": "315157973", "name": "feynmanlin"}}, "url": "https://github.com/apache/pulsar/commit/67992310065639898a21c0528d03896cd06eb63a", "committedDate": "2020-08-11T15:20:57Z", "message": "fix unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NDgxMjYz", "url": "https://github.com/apache/pulsar/pull/7784#pullrequestreview-465481263", "createdAt": "2020-08-11T22:52:34Z", "commit": {"oid": "67992310065639898a21c0528d03896cd06eb63a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 255, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}