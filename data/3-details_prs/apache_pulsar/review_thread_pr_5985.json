{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTU2Nzcy", "number": 5985, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQyMTozMjowOVrODZA7Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTo0MDowNFrODyr0iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTU2MTQzOnYy", "diffSide": "LEFT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataSetup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQyMTozMjowOVrOFfMLNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMjo0MDo0NVrOFfOsDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0OTY1Mw==", "bodyText": "why do we remove this logic?", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r368249653", "createdAt": "2020-01-18T21:32:09Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataSetup.java", "diffHunk": "@@ -170,16 +170,11 @@ public static void main(String[] args) throws Exception {\n         ZooKeeper localZk = initZk(arguments.zookeeper, arguments.zkSessionTimeoutMillis);\n         ZooKeeper configStoreZk = initZk(arguments.configurationStore, arguments.zkSessionTimeoutMillis);\n \n-        // Format BookKeeper ledger storage metadata\n+        // Format BookKeeper stream storage metadata\n         ServerConfiguration bkConf = new ServerConfiguration();\n         bkConf.setZkServers(arguments.zookeeper);\n         bkConf.setZkTimeout(arguments.zkSessionTimeoutMillis);\n-        if (localZk.exists(\"/ledgers\", false) == null // only format if /ledgers doesn't exist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45aa699ece48f88dec5dc06134c3524bed83a35"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5MDgzMA==", "bodyText": "just a mistake, modified.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r368290830", "createdAt": "2020-01-19T12:40:45Z", "author": {"login": "murong00"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/PulsarClusterMetadataSetup.java", "diffHunk": "@@ -170,16 +170,11 @@ public static void main(String[] args) throws Exception {\n         ZooKeeper localZk = initZk(arguments.zookeeper, arguments.zkSessionTimeoutMillis);\n         ZooKeeper configStoreZk = initZk(arguments.configurationStore, arguments.zkSessionTimeoutMillis);\n \n-        // Format BookKeeper ledger storage metadata\n+        // Format BookKeeper stream storage metadata\n         ServerConfiguration bkConf = new ServerConfiguration();\n         bkConf.setZkServers(arguments.zookeeper);\n         bkConf.setZkTimeout(arguments.zkSessionTimeoutMillis);\n-        if (localZk.exists(\"/ledgers\", false) == null // only format if /ledgers doesn't exist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0OTY1Mw=="}, "originalCommit": {"oid": "c45aa699ece48f88dec5dc06134c3524bed83a35"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTU2MjI1OnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQyMTozNDowNlrOFfMLnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQxMjo0MTowMVrOFfOsHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0OTc1Ng==", "bodyText": "in bookkeeper we deprecated using two separate settings. we are encouraging people to use metadata service uri to connect to a zookeeper cluster. we should try to adopt it in Pulsar. Thus if we are adding the support for a separate bookkeeper cluster, let's try to use metadata service uri.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r368249756", "createdAt": "2020-01-18T21:34:06Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -743,6 +743,18 @@\n     private String kinitCommand = \"/usr/bin/kinit\";\n \n     /**** --- BookKeeper Client --- ****/\n+    @FieldContext(\n+        category = CATEGORY_STORAGE_BK,\n+        doc = \"BookKeeper ledgers storage connection string when using a separated BookKeeper cluster.\"\n+            + \" If not set it will use local zookeeper quorum of Pulsar cluster\"\n+    )\n+    private String bookkeeperLedgersStore;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45aa699ece48f88dec5dc06134c3524bed83a35"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI5MDg0NQ==", "bodyText": "done, thanks.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r368290845", "createdAt": "2020-01-19T12:41:01Z", "author": {"login": "murong00"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/ServiceConfiguration.java", "diffHunk": "@@ -743,6 +743,18 @@\n     private String kinitCommand = \"/usr/bin/kinit\";\n \n     /**** --- BookKeeper Client --- ****/\n+    @FieldContext(\n+        category = CATEGORY_STORAGE_BK,\n+        doc = \"BookKeeper ledgers storage connection string when using a separated BookKeeper cluster.\"\n+            + \" If not set it will use local zookeeper quorum of Pulsar cluster\"\n+    )\n+    private String bookkeeperLedgersStore;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0OTc1Ng=="}, "originalCommit": {"oid": "c45aa699ece48f88dec5dc06134c3524bed83a35"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDg1MzA0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/BookKeeperClientFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjoyMjozOFrOFqR8UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNDoxMzozOFrOFt4IVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODQ4MQ==", "bodyText": "I don't think we should try to construct PulsarService. because the constructor also does a lot of unrelated things.\nI would suggest adding a util function to generate metadata service url from the configuration.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r379878481", "createdAt": "2020-02-16T06:22:38Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/BookKeeperClientFactoryImpl.java", "diffHunk": "@@ -106,6 +106,14 @@ ClientConfiguration createBkClientConfiguration(ServiceConfiguration conf) {\n         bkConf.setNettyMaxFrameSizeBytes(conf.getMaxMessageSize() + Commands.MESSAGE_SIZE_FRAME_PADDING);\n         bkConf.setDiskWeightBasedPlacementEnabled(conf.isBookkeeperDiskWeightBasedPlacementEnabled());\n \n+        if (StringUtils.isNotBlank(conf.getBookkeeperServiceUri())) {\n+            bkConf.setMetadataServiceUri(conf.getBookkeeperServiceUri());\n+        } else {\n+            PulsarService pulsar = new PulsarService(conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9acd2592aae9cd7b507fd46003719ff0842c888"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0OTg3Ng==", "bodyText": "done.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r383649876", "createdAt": "2020-02-25T04:13:38Z", "author": {"login": "murong00"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/BookKeeperClientFactoryImpl.java", "diffHunk": "@@ -106,6 +106,14 @@ ClientConfiguration createBkClientConfiguration(ServiceConfiguration conf) {\n         bkConf.setNettyMaxFrameSizeBytes(conf.getMaxMessageSize() + Commands.MESSAGE_SIZE_FRAME_PADDING);\n         bkConf.setDiskWeightBasedPlacementEnabled(conf.isBookkeeperDiskWeightBasedPlacementEnabled());\n \n+        if (StringUtils.isNotBlank(conf.getBookkeeperServiceUri())) {\n+            bkConf.setMetadataServiceUri(conf.getBookkeeperServiceUri());\n+        } else {\n+            PulsarService pulsar = new PulsarService(conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODQ4MQ=="}, "originalCommit": {"oid": "f9acd2592aae9cd7b507fd46003719ff0842c888"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTYyMzE0OnYy", "diffSide": "RIGHT", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/conf/InternalConfigurationData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNToxNToxNlrOF_wNKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjo1Nzo0MVrOGADcMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDQwOA==", "bodyText": "It seems ledgersRootPath is much more direct than metadataServiceUri. metadata may lead developer think of \"zookeeper\". How about change this back\uff1f", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r402394408", "createdAt": "2020-04-02T15:15:16Z", "author": {"login": "jiazhai"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/conf/InternalConfigurationData.java", "diffHunk": "@@ -28,19 +28,19 @@\n \n     private String zookeeperServers;\n     private String configurationStoreServers;\n-    private String ledgersRootPath;\n+    private String metadataServiceUri;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de91fa7113dabfbf9ad4213f6f206d41c7cccbe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwOTU1Mw==", "bodyText": "@jiazhai In fact, metadataServiceUri here is a uri to connect to a zookeeper cluster, which is used to find bookies. I would prefer to keep it since ledgersRootPath seems more like a path and is using together with zookeeper. As sijie's comment above, we are trying to use a metadata service uri, so how about bkMetadataServiceUri?", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r402709553", "createdAt": "2020-04-03T02:57:41Z", "author": {"login": "murong00"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/conf/InternalConfigurationData.java", "diffHunk": "@@ -28,19 +28,19 @@\n \n     private String zookeeperServers;\n     private String configurationStoreServers;\n-    private String ledgersRootPath;\n+    private String metadataServiceUri;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM5NDQwOA=="}, "originalCommit": {"oid": "7de91fa7113dabfbf9ad4213f6f206d41c7cccbe"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTY2NTY1OnYy", "diffSide": "RIGHT", "path": "conf/broker.conf", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNToyNDozN1rOF_wodQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMzowMTowNVrOGADf4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwMTM5Nw==", "bodyText": "how about bkLedgerRootPath? This seems be more directly.\nbookkeeperServiceUri may be easy confused with the bookie service url(e.g. \"localhost:3181\").", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r402401397", "createdAt": "2020-04-02T15:24:37Z", "author": {"login": "jiazhai"}, "path": "conf/broker.conf", "diffHunk": "@@ -461,6 +461,10 @@ httpMaxRequestSize=-1\n \n ### --- BookKeeper Client --- ###\n \n+# Metadata service uri that bookkeeper is used for loading corresponding metadata driver\n+# and resolving its metadata service location.\n+bookkeeperServiceUri=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de91fa7113dabfbf9ad4213f6f206d41c7cccbe"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwOTg0Mg==", "bodyText": "bkMetadataServiceUri seems better?", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r402709842", "createdAt": "2020-04-03T02:58:42Z", "author": {"login": "murong00"}, "path": "conf/broker.conf", "diffHunk": "@@ -461,6 +461,10 @@ httpMaxRequestSize=-1\n \n ### --- BookKeeper Client --- ###\n \n+# Metadata service uri that bookkeeper is used for loading corresponding metadata driver\n+# and resolving its metadata service location.\n+bookkeeperServiceUri=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwMTM5Nw=="}, "originalCommit": {"oid": "7de91fa7113dabfbf9ad4213f6f206d41c7cccbe"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcxMDQ5OA==", "bodyText": "I will add an example here to make it more clear.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r402710498", "createdAt": "2020-04-03T03:01:05Z", "author": {"login": "murong00"}, "path": "conf/broker.conf", "diffHunk": "@@ -461,6 +461,10 @@ httpMaxRequestSize=-1\n \n ### --- BookKeeper Client --- ###\n \n+# Metadata service uri that bookkeeper is used for loading corresponding metadata driver\n+# and resolving its metadata service location.\n+bookkeeperServiceUri=", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwMTM5Nw=="}, "originalCommit": {"oid": "7de91fa7113dabfbf9ad4213f6f206d41c7cccbe"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDcyNzA0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTozODoxMlrOGG4FoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwMjowNjowMVrOGG9Y_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MzU4NQ==", "bodyText": "I don't think we should add this logic here. We should reply on the logic that bookkeeper already provides. You can do this by using the following code snippet.\nClientConfiguration bkConf = new ClientConfiguration();\nbkConf.setZkServers(config.getZooKeeperServers());\nreturn bkConf.getMetadataServiceUri();", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r409863585", "createdAt": "2020-04-16T21:38:12Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -1064,6 +1087,27 @@ public String getSafeBrokerServiceUrl() {\n         return brokerServiceUrl != null ? brokerServiceUrl : brokerServiceUrlTls;\n     }\n \n+    /**\n+     * Get bookkeeper metadata service uri.\n+     *\n+     * @param config broker configuration\n+     * @return the metadata service uri that bookkeeper is used\n+     */\n+    public static String bookieMetadataServiceUri(ServiceConfiguration config) {\n+        ClientConfiguration bkConf = new ClientConfiguration();\n+        // init bookkeeper metadata service uri\n+        String metadataServiceUri = null;\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b348adfcbe077bc87aa541349b620b5f255f69fd"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk1MDQ2Mg==", "bodyText": "Done.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r409950462", "createdAt": "2020-04-17T02:06:01Z", "author": {"login": "murong00"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/PulsarService.java", "diffHunk": "@@ -1064,6 +1087,27 @@ public String getSafeBrokerServiceUrl() {\n         return brokerServiceUrl != null ? brokerServiceUrl : brokerServiceUrlTls;\n     }\n \n+    /**\n+     * Get bookkeeper metadata service uri.\n+     *\n+     * @param config broker configuration\n+     * @return the metadata service uri that bookkeeper is used\n+     */\n+    public static String bookieMetadataServiceUri(ServiceConfiguration config) {\n+        ClientConfiguration bkConf = new ClientConfiguration();\n+        // init bookkeeper metadata service uri\n+        String metadataServiceUri = null;\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MzU4NQ=="}, "originalCommit": {"oid": "b348adfcbe077bc87aa541349b620b5f255f69fd"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDczMzU1OnYy", "diffSide": "LEFT", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/conf/InternalConfigurationData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTo0MDowNFrOGG4JiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwMjowNjoyNlrOGG9ZUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2NDU4NQ==", "bodyText": "for backward compatibility, you shouldn't change the field directly.\nYou can add a new field bookkeeperMetadataServiceUri and deprecate the old field ledgersRootPath .", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r409864585", "createdAt": "2020-04-16T21:40:04Z", "author": {"login": "sijie"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/conf/InternalConfigurationData.java", "diffHunk": "@@ -28,19 +28,19 @@\n \n     private String zookeeperServers;\n     private String configurationStoreServers;\n-    private String ledgersRootPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b348adfcbe077bc87aa541349b620b5f255f69fd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk1MDU0NA==", "bodyText": "Thanks for pointing this out, done.", "url": "https://github.com/apache/pulsar/pull/5985#discussion_r409950544", "createdAt": "2020-04-17T02:06:26Z", "author": {"login": "murong00"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/conf/InternalConfigurationData.java", "diffHunk": "@@ -28,19 +28,19 @@\n \n     private String zookeeperServers;\n     private String configurationStoreServers;\n-    private String ledgersRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2NDU4NQ=="}, "originalCommit": {"oid": "b348adfcbe077bc87aa541349b620b5f255f69fd"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2039, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}