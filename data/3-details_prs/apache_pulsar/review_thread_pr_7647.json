{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1ODkyMzE1", "number": 7647, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMzowNlrOERmX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0NzoxN1rOERnDRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODg5OTM4OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDoxMzowNlrOG2Z7lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjoxNjoyM1rOG2kOcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTE0MA==", "bodyText": "We also need to do this in SinkConfigUtils", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459701140", "createdAt": "2020-07-23T20:13:06Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg2OTgwOA==", "bodyText": "That can be added later.", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459869808", "createdAt": "2020-07-24T06:16:23Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTE0MA=="}, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODk1NzE4OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozMToxMlrOG2afyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNToxMTo1MVrOG2jTvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMDQxMQ==", "bodyText": "Why are we assuming ATLEAST_ONCE here?  A user can set the processing guarantee to be at most once and still set the retain ordering to be true", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459710411", "createdAt": "2020-07-23T20:31:12Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {\n+            functionConfig.setRetainOrdering(false);\n+            functionConfig.setRetainKeyOrdering(true);\n+            functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.ATLEAST_ONCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg1NDc4Mw==", "bodyText": "Yes. Even the existing code is broken in that regard. I will fix that", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459854783", "createdAt": "2020-07-24T05:11:51Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {\n             functionConfig.setRetainOrdering(true);\n+            functionConfig.setRetainKeyOrdering(false);\n             functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE);\n+        } else if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.KEY_SHARED) {\n+            functionConfig.setRetainOrdering(false);\n+            functionConfig.setRetainKeyOrdering(true);\n+            functionConfig.setProcessingGuarantees(FunctionConfig.ProcessingGuarantees.ATLEAST_ONCE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMDQxMQ=="}, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODk3MDk1OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozNTowN1rOG2aoFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDozNTowN1rOG2aoFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxMjUzNA==", "bodyText": "Can we re-organize this giant conditional statement to be more readable?\nif (effectively-once) {\nsubType = Failover\n} else if (retain order) {\nsubType = failover\n} else if (retain key order) {\nsubType = shared_key\n} else {\nsubType = shared\n}", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459712534", "createdAt": "2020-07-23T20:35:07Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -142,6 +142,8 @@ public static FunctionDetails convert(FunctionConfig functionConfig, ClassLoader\n         Function.SubscriptionType subType = ((functionConfig.getRetainOrdering() != null && functionConfig.getRetainOrdering())\n                 || FunctionConfig.ProcessingGuarantees.EFFECTIVELY_ONCE.equals(functionConfig.getProcessingGuarantees()))\n                 ? Function.SubscriptionType.FAILOVER\n+                : (functionConfig.getRetainKeyOrdering() != null && functionConfig.getRetainKeyOrdering())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODk4NzI5OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0MDoxMFrOG2ayDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0MTowMVrOG2azrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTA4NA==", "bodyText": "I would remove this stanza.  We should return an error if the retain order or retain key ordering is set at all", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459715084", "createdAt": "2020-07-23T20:40:10Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -639,6 +655,16 @@ private static void doCommonChecks(FunctionConfig functionConfig) {\n         if ((functionConfig.getMaxMessageRetries() == null || functionConfig.getMaxMessageRetries() < 0) && !org.apache.commons.lang3.StringUtils.isEmpty(functionConfig.getDeadLetterTopic())) {\n             throw new IllegalArgumentException(\"Dead Letter Topic specified, however max retries is set to infinity\");\n         }\n+        if (functionConfig.getRetainKeyOrdering() != null\n+                && functionConfig.getRetainKeyOrdering()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTUwMQ==", "bodyText": "Can you also check whether retain ordering is set?", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459715501", "createdAt": "2020-07-23T20:41:01Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -639,6 +655,16 @@ private static void doCommonChecks(FunctionConfig functionConfig) {\n         if ((functionConfig.getMaxMessageRetries() == null || functionConfig.getMaxMessageRetries() < 0) && !org.apache.commons.lang3.StringUtils.isEmpty(functionConfig.getDeadLetterTopic())) {\n             throw new IllegalArgumentException(\"Dead Letter Topic specified, however max retries is set to infinity\");\n         }\n+        if (functionConfig.getRetainKeyOrdering() != null\n+                && functionConfig.getRetainKeyOrdering()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNTA4NA=="}, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODk5NTA0OnYy", "diffSide": "RIGHT", "path": "pulsar-common/src/main/java/org/apache/pulsar/common/functions/FunctionConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0MjoyMVrOG2a2eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0OTo0OVrOG2bEgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNjIxOA==", "bodyText": "Can we add some comments here for retainOrdering and retainKeyOrdering so people understand what they do and what the difference between the two is?", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459716218", "createdAt": "2020-07-23T20:42:21Z", "author": {"login": "jerrypeng"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/functions/FunctionConfig.java", "diffHunk": "@@ -87,6 +87,7 @@\n     private String logTopic;\n     private ProcessingGuarantees processingGuarantees;\n     private Boolean retainOrdering;\n+    private Boolean retainKeyOrdering;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxOTgxMA==", "bodyText": "also need to add this for SinkConfig", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459719810", "createdAt": "2020-07-23T20:49:49Z", "author": {"login": "jerrypeng"}, "path": "pulsar-common/src/main/java/org/apache/pulsar/common/functions/FunctionConfig.java", "diffHunk": "@@ -87,6 +87,7 @@\n     private String logTopic;\n     private ProcessingGuarantees processingGuarantees;\n     private Boolean retainOrdering;\n+    private Boolean retainKeyOrdering;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxNjIxOA=="}, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2OTAxMDYwOnYy", "diffSide": "RIGHT", "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0NzoxN1rOG2bACA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDo0NzoxN1rOG2bACA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcxODY2NA==", "bodyText": "This whole conditional statement doesn't seem right to me.  Why are se setting the processing guarantee by looking at what the subscription is?  We already setting the processing guarantee in a previous line:\nhttps://github.com/apache/pulsar/pull/7647/files#diff-239e167c18ea8591c85432948ab5040aL297", "url": "https://github.com/apache/pulsar/pull/7647#discussion_r459718664", "createdAt": "2020-07-23T20:47:17Z", "author": {"login": "jerrypeng"}, "path": "pulsar-functions/utils/src/main/java/org/apache/pulsar/functions/utils/FunctionConfigUtils.java", "diffHunk": "@@ -317,9 +319,15 @@ public static FunctionConfig convertFromDetails(FunctionDetails functionDetails)\n         }\n         if (functionDetails.getSource().getSubscriptionType() == Function.SubscriptionType.FAILOVER) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478a2d1e51974a4ee337345e67ed9e4e2ad947b4"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2329, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}