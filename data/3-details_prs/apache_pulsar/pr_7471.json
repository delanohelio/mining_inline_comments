{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDY0MTgy", "number": 7471, "title": "Add sidebar for \"Pulasr SNI routing with ATS\" content", "bodyText": "Fixes #7421\nMotivation\nThe sidebar.json file is not updated, so the content added in the .md file is not displayed on website.\nModifications\n\nUpdate the sidebar.\nUpdate some technical description, to be more clear and concise.", "createdAt": "2020-07-07T14:48:58Z", "url": "https://github.com/apache/pulsar/pull/7471", "merged": true, "mergeCommit": {"oid": "f2b9f49d30337beeee1fd3ebdb68bd4ac3fdd8bd"}, "closed": true, "closedAt": "2020-07-12T04:39:43Z", "author": {"login": "Jennifer88huang"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcym9B-gH2gAyNDQ1NDY0MTgyOmRhMzdkOTM2NDEwMzg4MDQzOGQ4YmMxNzhkOWVhYTdlOGU2MWIwYTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczg35PABqjM1MzMyODMyMzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da37d9364103880438d8bc178d9eaa7e8e61b0a1", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/da37d9364103880438d8bc178d9eaa7e8e61b0a1", "committedDate": "2020-07-07T14:45:21Z", "message": "update sidebar.json for proxy-sni"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33d3a8a502584e6375db2f5063dd69c1f66d285a", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/33d3a8a502584e6375db2f5063dd69c1f66d285a", "committedDate": "2020-07-07T15:00:24Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTI1NzA0", "url": "https://github.com/apache/pulsar/pull/7471#pullrequestreview-444125704", "createdAt": "2020-07-07T17:58:16Z", "commit": {"oid": "33d3a8a502584e6375db2f5063dd69c1f66d285a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1ODoxNlrOGuJopQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1ODoxNlrOGuJopQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0NTU0MQ==", "bodyText": "this has to be 3rd level header and not main header.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r451045541", "createdAt": "2020-07-07T17:58:16Z", "author": {"login": "rdhabalia"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -5,28 +5,28 @@ sidebar_label: Proxy support with SNI routing\n ---\n \n ## Pulsar Proxy with SNI routing\n-\n A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and benefits your system such as load balancing, performance, security, auto-scaling, and so on.\n \n The proxy in Pulsar acts as a reverse proxy, and creates a gateway in front of brokers. Proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy are not supported in Pulsar. These proxy-servers support **SNI routing**. SNI routing is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n \n-Pulsar clients support [SNI routing protocol](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing), so you can connect to brokers through the proxy. You learn how to set up the ATS proxy and the Pulsar client to enable SNI routing, and connect Pulsar client to the broker through the ATS proxy.\n+Pulsar clients support [SNI routing protocol](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing), so you can connect to brokers through the proxy. You learn how to set up the ATS proxy, enable SNI routing, and connect Pulsar client to the broker through the ATS proxy.\n \n-### ATS-SNI Routing in Pulsar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d3a8a502584e6375db2f5063dd69c1f66d285a"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTI2MjEx", "url": "https://github.com/apache/pulsar/pull/7471#pullrequestreview-444126211", "createdAt": "2020-07-07T17:58:56Z", "commit": {"oid": "33d3a8a502584e6375db2f5063dd69c1f66d285a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1ODo1NlrOGuJqHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1ODo1NlrOGuJqHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0NTkxNg==", "bodyText": "again it has to be sub-section and therefore we kept it 4-level header.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r451045916", "createdAt": "2020-07-07T17:58:56Z", "author": {"login": "rdhabalia"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -93,7 +93,7 @@ clientBuilder.authentication(AuthenticationTls.class.getName(), authParams);\n PulsarClient pulsarClient = clientBuilder.build();\n ```\n \n-#### Pulsar geo-replication with SNI routing\n+## Pulsar geo-replication with SNI routing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33d3a8a502584e6375db2f5063dd69c1f66d285a"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c46b8de46a3109c7263d8ccaf7b184d30cf198e6", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/c46b8de46a3109c7263d8ccaf7b184d30cf198e6", "committedDate": "2020-07-08T07:56:41Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c2e90f54302d95a0d78a2bf359d84fe79e197f", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/d9c2e90f54302d95a0d78a2bf359d84fe79e197f", "committedDate": "2020-07-08T08:00:41Z", "message": "update sidebar.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/96bd9eff15ca9185218f1856428c4a79687cba22", "committedDate": "2020-07-08T08:11:56Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDk1MTIx", "url": "https://github.com/apache/pulsar/pull/7471#pullrequestreview-446095121", "createdAt": "2020-07-10T03:11:16Z", "commit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTczNjU4", "url": "https://github.com/apache/pulsar/pull/7471#pullrequestreview-446173658", "createdAt": "2020-07-10T07:16:20Z", "commit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzoxNjoyMVrOGvshFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNzozNzo0MlrOGvtHGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY2NTYyMQ==", "bodyText": "Change \"routing at layer 4\" to Layer 4 routing or Layer 4 SIN routing to make it consistent all through the document?", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452665621", "createdAt": "2020-07-10T07:16:21Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -5,29 +5,31 @@ sidebar_label: Proxy support with SNI routing\n ---\n \n ## Pulsar Proxy with SNI routing\n+A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and benefits your system such as load balancing, performance, security, auto-scaling, and so on.\n \n-A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and brings various benefits to your system such as load balancing, performance, security, auto-scaling, etc. There are already many proxy servers available in the market which are fast and scalable. More importantly, these proxy servers cover various essential security aspects that are needed by large organizations to securely share their confidential data over the network. Pulsar provides a proxy implementation which acts as a reverse proxy and creates a gateway in front of brokers. However, pulsar does not supports using other proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy. These proxies are more scalable and secured. Most of these proxy-servers support **SNI routing** which is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n+The proxy in Pulsar acts as a reverse proxy, and creates a gateway in front of brokers. Proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy are not supported in Pulsar. These proxy-servers support **SNI routing**. SNI routing is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY2NzAyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This section explains how to set up and use ATS as a reverse proxy, so Pulsar clients can connect to brokers through the ATS proxy using SNI routing protocol on TLS connection. \n          \n          \n            \n            This section explains how to set up and use ATS as a reverse proxy, so Pulsar clients can connect to brokers through the ATS proxy using the SNI routing protocol on TLS connection.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452667022", "createdAt": "2020-07-10T07:19:23Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -5,29 +5,31 @@ sidebar_label: Proxy support with SNI routing\n ---\n \n ## Pulsar Proxy with SNI routing\n+A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and benefits your system such as load balancing, performance, security, auto-scaling, and so on.\n \n-A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and brings various benefits to your system such as load balancing, performance, security, auto-scaling, etc. There are already many proxy servers available in the market which are fast and scalable. More importantly, these proxy servers cover various essential security aspects that are needed by large organizations to securely share their confidential data over the network. Pulsar provides a proxy implementation which acts as a reverse proxy and creates a gateway in front of brokers. However, pulsar does not supports using other proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy. These proxies are more scalable and secured. Most of these proxy-servers support **SNI routing** which is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n+The proxy in Pulsar acts as a reverse proxy, and creates a gateway in front of brokers. Proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy are not supported in Pulsar. These proxy-servers support **SNI routing**. SNI routing is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n \n-[PIP-60](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing) explains the SNI routing protocol and how Pulsar clients support SNI routing protocol to connect to brokers through the proxy. This document explains how to set up the ATS proxy and the Pulsar client to enable SNI routing and connect Pulsar client to the broker through the ATS proxy.\n+Pulsar clients support [SNI routing protocol](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing), so you can connect to brokers through the proxy. This document walks you through how to set up the ATS proxy, enable SNI routing, and connect Pulsar client to the broker through the ATS proxy.\n \n ### ATS-SNI Routing in Pulsar\n-[ATS supports layer-4 SNI routing](https://docs.trafficserver.apache.org/en/latest/admin-guide/layer-4-routing.en.html) with the requirement that inbound connection must be a TLS connection. The Pulsar client also supports SNI routing protocol on TLS connection and that allows Pulsar to use ATS as a reverse proxy when Pulsar client wants to connect to broker through ATS proxy. Therefore, this section explains how to set up and use ATS as a reverse proxy so pulsar clients can connect to brokers through the ATS proxy using SNI routing protocol on TLS connection. Pulsar also supports SNI routing for geo-replication, so brokers can connect to cross cluster brokers through the ATS proxy.\n+To support [layer-4 SNI routing](https://docs.trafficserver.apache.org/en/latest/admin-guide/layer-4-routing.en.html) with ATS, the inbound connection must be a TLS connection. Pulsar client supports SNI routing protocol on TLS connection, so when Pulsar clients connect to broker through ATS proxy, Pulsar uses ATS as a reverse proxy.\n \n+Pulsar supports SNI routing for geo-replication, so brokers can connect to brokers in other clusters through the ATS proxy.\n \n-#### ATS Proxy setup for layer-4 SNI routing\n-\n-This section explains how to set up ATS proxy to enable layer 4 SNI routing which will be used by Pulsar to use ATS as a reverse proxy.\n+This section explains how to set up and use ATS as a reverse proxy, so Pulsar clients can connect to brokers through the ATS proxy using SNI routing protocol on TLS connection. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY2NzgzMQ==", "bodyText": "In the above, \"Apache Traffic Server\" is abbreviated to \"ATS\", so here should be an abbreviation.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452667831", "createdAt": "2020-07-10T07:21:04Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -5,29 +5,31 @@ sidebar_label: Proxy support with SNI routing\n ---\n \n ## Pulsar Proxy with SNI routing\n+A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and benefits your system such as load balancing, performance, security, auto-scaling, and so on.\n \n-A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and brings various benefits to your system such as load balancing, performance, security, auto-scaling, etc. There are already many proxy servers available in the market which are fast and scalable. More importantly, these proxy servers cover various essential security aspects that are needed by large organizations to securely share their confidential data over the network. Pulsar provides a proxy implementation which acts as a reverse proxy and creates a gateway in front of brokers. However, pulsar does not supports using other proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy. These proxies are more scalable and secured. Most of these proxy-servers support **SNI routing** which is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n+The proxy in Pulsar acts as a reverse proxy, and creates a gateway in front of brokers. Proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy are not supported in Pulsar. These proxy-servers support **SNI routing**. SNI routing is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n \n-[PIP-60](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing) explains the SNI routing protocol and how Pulsar clients support SNI routing protocol to connect to brokers through the proxy. This document explains how to set up the ATS proxy and the Pulsar client to enable SNI routing and connect Pulsar client to the broker through the ATS proxy.\n+Pulsar clients support [SNI routing protocol](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing), so you can connect to brokers through the proxy. This document walks you through how to set up the ATS proxy, enable SNI routing, and connect Pulsar client to the broker through the ATS proxy.\n \n ### ATS-SNI Routing in Pulsar\n-[ATS supports layer-4 SNI routing](https://docs.trafficserver.apache.org/en/latest/admin-guide/layer-4-routing.en.html) with the requirement that inbound connection must be a TLS connection. The Pulsar client also supports SNI routing protocol on TLS connection and that allows Pulsar to use ATS as a reverse proxy when Pulsar client wants to connect to broker through ATS proxy. Therefore, this section explains how to set up and use ATS as a reverse proxy so pulsar clients can connect to brokers through the ATS proxy using SNI routing protocol on TLS connection. Pulsar also supports SNI routing for geo-replication, so brokers can connect to cross cluster brokers through the ATS proxy.\n+To support [layer-4 SNI routing](https://docs.trafficserver.apache.org/en/latest/admin-guide/layer-4-routing.en.html) with ATS, the inbound connection must be a TLS connection. Pulsar client supports SNI routing protocol on TLS connection, so when Pulsar clients connect to broker through ATS proxy, Pulsar uses ATS as a reverse proxy.\n \n+Pulsar supports SNI routing for geo-replication, so brokers can connect to brokers in other clusters through the ATS proxy.\n \n-#### ATS Proxy setup for layer-4 SNI routing\n-\n-This section explains how to set up ATS proxy to enable layer 4 SNI routing which will be used by Pulsar to use ATS as a reverse proxy.\n+This section explains how to set up and use ATS as a reverse proxy, so Pulsar clients can connect to brokers through the ATS proxy using SNI routing protocol on TLS connection. \n \n+#### Set up ATS Proxy for layer-4 SNI routing\n+To support layer 4 SNI routing, you need to configure the `records.conf` and `ssl_server_name.conf` files.\n \n ![Pulsar client SNI](assets/pulsar-sni-client.png)\n \n-To support SNI routing, you need to configure two files: `records.conf` and `ssl_server_name.conf`.\n-\n+The [records.config](https://docs.trafficserver.apache.org/en/latest/admin-guide/files/records.config.en.html) file is located in the `/usr/local/etc/trafficserver/` directory by default. The file lists configurable variables used by the Apache Traffic Server.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY2ODM1MA==", "bodyText": "if this is a step, there should be an ordered list instead of unordered list.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452668350", "createdAt": "2020-07-10T07:22:11Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -5,29 +5,31 @@ sidebar_label: Proxy support with SNI routing\n ---\n \n ## Pulsar Proxy with SNI routing\n+A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and benefits your system such as load balancing, performance, security, auto-scaling, and so on.\n \n-A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \"traffic cop\" in both forward and reverse proxy scenarios, and brings various benefits to your system such as load balancing, performance, security, auto-scaling, etc. There are already many proxy servers available in the market which are fast and scalable. More importantly, these proxy servers cover various essential security aspects that are needed by large organizations to securely share their confidential data over the network. Pulsar provides a proxy implementation which acts as a reverse proxy and creates a gateway in front of brokers. However, pulsar does not supports using other proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy. These proxies are more scalable and secured. Most of these proxy-servers support **SNI routing** which is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n+The proxy in Pulsar acts as a reverse proxy, and creates a gateway in front of brokers. Proxies such as Apache Traffic Server (ATS), HAProxy, Nginx, and Envoy are not supported in Pulsar. These proxy-servers support **SNI routing**. SNI routing is used to route traffic to a destination without terminating the SSL connection. Routing at layer 4 provides greater transparency because the outbound connection is determined by examining the destination address in the client TCP packets.\n \n-[PIP-60](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing) explains the SNI routing protocol and how Pulsar clients support SNI routing protocol to connect to brokers through the proxy. This document explains how to set up the ATS proxy and the Pulsar client to enable SNI routing and connect Pulsar client to the broker through the ATS proxy.\n+Pulsar clients support [SNI routing protocol](https://github.com/apache/pulsar/wiki/PIP-60:-Support-Proxy-server-with-SNI-routing), so you can connect to brokers through the proxy. This document walks you through how to set up the ATS proxy, enable SNI routing, and connect Pulsar client to the broker through the ATS proxy.\n \n ### ATS-SNI Routing in Pulsar\n-[ATS supports layer-4 SNI routing](https://docs.trafficserver.apache.org/en/latest/admin-guide/layer-4-routing.en.html) with the requirement that inbound connection must be a TLS connection. The Pulsar client also supports SNI routing protocol on TLS connection and that allows Pulsar to use ATS as a reverse proxy when Pulsar client wants to connect to broker through ATS proxy. Therefore, this section explains how to set up and use ATS as a reverse proxy so pulsar clients can connect to brokers through the ATS proxy using SNI routing protocol on TLS connection. Pulsar also supports SNI routing for geo-replication, so brokers can connect to cross cluster brokers through the ATS proxy.\n+To support [layer-4 SNI routing](https://docs.trafficserver.apache.org/en/latest/admin-guide/layer-4-routing.en.html) with ATS, the inbound connection must be a TLS connection. Pulsar client supports SNI routing protocol on TLS connection, so when Pulsar clients connect to broker through ATS proxy, Pulsar uses ATS as a reverse proxy.\n \n+Pulsar supports SNI routing for geo-replication, so brokers can connect to brokers in other clusters through the ATS proxy.\n \n-#### ATS Proxy setup for layer-4 SNI routing\n-\n-This section explains how to set up ATS proxy to enable layer 4 SNI routing which will be used by Pulsar to use ATS as a reverse proxy.\n+This section explains how to set up and use ATS as a reverse proxy, so Pulsar clients can connect to brokers through the ATS proxy using SNI routing protocol on TLS connection. \n \n+#### Set up ATS Proxy for layer-4 SNI routing\n+To support layer 4 SNI routing, you need to configure the `records.conf` and `ssl_server_name.conf` files.\n \n ![Pulsar client SNI](assets/pulsar-sni-client.png)\n \n-To support SNI routing, you need to configure two files: `records.conf` and `ssl_server_name.conf`.\n-\n+The [records.config](https://docs.trafficserver.apache.org/en/latest/admin-guide/files/records.config.en.html) file is located in the `/usr/local/etc/trafficserver/` directory by default. The file lists configurable variables used by the Apache Traffic Server.\n \n-- `records.conf`: \n-The [records.config fil](https://docs.trafficserver.apache.org/en/latest/admin-guide/files/records.config.en.html) (By default, it is located in `/usr/local/etc/trafficserver/`.) is a list of configurable variables used by the Apache Traffic Server and we have to update this file with TLS port (`http.server_ports`) on which proxy can listen and proxy certs (`ssl.client.cert.path` and `ssl.client.cert.filename`) for secure TLS tunneling. We also have to configure a range of server ports (`http.connect_ports`) that can be used for tunneling to the broker. If Pulsar brokers are listening on ports 4443 and 6651 then add the brokers\u2019 service port in http.connect_ports configuration.\n+To configure the `records.config` files, complete the following steps.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY2OTAxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The [ssl_server_name](https://docs.trafficserver.apache.org/en/8.0.x/admin-guide/files/ssl_server_name.yaml.en.html) file is used to configure TLS connection handling for inbound and outbound connections. The configuration is determined by the SNI values provided by the inbound connection. The file consists of a set of configuration items, each is identified by an SNI value (`fqdn`). When an inbound TLS connection is made, the SNI value from the TLS negotiation is matched with the items specified in this file. If the values match, the values specified in that item override the default values. \n          \n          \n            \n            The [ssl_server_name](https://docs.trafficserver.apache.org/en/8.0.x/admin-guide/files/ssl_server_name.yaml.en.html) file is used to configure TLS connection handling for inbound and outbound connections. The configuration is determined by the SNI values provided by the inbound connection. The file consists of a set of configuration items, and each is identified by an SNI value (`fqdn`). When an inbound TLS connection is made, the SNI value from the TLS negotiation is matched with the items specified in this file. If the values match, the values specified in that item override the default values.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452669015", "createdAt": "2020-07-10T07:23:42Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -42,12 +44,9 @@ CONFIG proxy.config.ssl.client.cert.filename STRING /proxy-key.pem\n CONFIG proxy.config.http.connect_ports STRING 4443 6651\n ```\n \n-- `ssl_server_name.conf`: \n-The [ssl_server_name file](https://docs.trafficserver.apache.org/en/8.0.x/admin-guide/files/ssl_server_name.yaml.en.html) is used to configure aspects of TLS connection handling for both inbound and outbound connections. The configuration is driven by the SNI values provided by the inbound connection. The file consists of a set of configuration items, each identified by an SNI value (`fqdn`). When an inbound TLS connection is made, the SNI value from the TLS negotiation is matched against the items specified by this file and if there is a match, the values specified in that item override the default values. \n-\n-The following example shows mapping of inbound SNI hostname coming from the client and the actual broker\u2019s service URL where request should be redirected. For example, if the client sends the SNI header `pulsar-broker1`, the  proxy creates a TLS tunnel by redirecting request to the service URL `pulsar-broker1:6651` \n+The [ssl_server_name](https://docs.trafficserver.apache.org/en/8.0.x/admin-guide/files/ssl_server_name.yaml.en.html) file is used to configure TLS connection handling for inbound and outbound connections. The configuration is determined by the SNI values provided by the inbound connection. The file consists of a set of configuration items, each is identified by an SNI value (`fqdn`). When an inbound TLS connection is made, the SNI value from the TLS negotiation is matched with the items specified in this file. If the values match, the values specified in that item override the default values. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY2OTQ1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following example shows mapping of inbound SNI hostname coming from the client, and the actual broker service URL where request should be redirected. For example, if the client sends the SNI header `pulsar-broker1`, the proxy creates a TLS tunnel by redirecting request to the `pulsar-broker1:6651` service URL.\n          \n          \n            \n            The following example shows mapping of the inbound SNI hostname coming from the client, and the actual broker service URL where request should be redirected. For example, if the client sends the SNI header `pulsar-broker1`, the proxy creates a TLS tunnel by redirecting request to the `pulsar-broker1:6651` service URL.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452669450", "createdAt": "2020-07-10T07:24:41Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -42,12 +44,9 @@ CONFIG proxy.config.ssl.client.cert.filename STRING /proxy-key.pem\n CONFIG proxy.config.http.connect_ports STRING 4443 6651\n ```\n \n-- `ssl_server_name.conf`: \n-The [ssl_server_name file](https://docs.trafficserver.apache.org/en/8.0.x/admin-guide/files/ssl_server_name.yaml.en.html) is used to configure aspects of TLS connection handling for both inbound and outbound connections. The configuration is driven by the SNI values provided by the inbound connection. The file consists of a set of configuration items, each identified by an SNI value (`fqdn`). When an inbound TLS connection is made, the SNI value from the TLS negotiation is matched against the items specified by this file and if there is a match, the values specified in that item override the default values. \n-\n-The following example shows mapping of inbound SNI hostname coming from the client and the actual broker\u2019s service URL where request should be redirected. For example, if the client sends the SNI header `pulsar-broker1`, the  proxy creates a TLS tunnel by redirecting request to the service URL `pulsar-broker1:6651` \n+The [ssl_server_name](https://docs.trafficserver.apache.org/en/8.0.x/admin-guide/files/ssl_server_name.yaml.en.html) file is used to configure TLS connection handling for inbound and outbound connections. The configuration is determined by the SNI values provided by the inbound connection. The file consists of a set of configuration items, each is identified by an SNI value (`fqdn`). When an inbound TLS connection is made, the SNI value from the TLS negotiation is matched with the items specified in this file. If the values match, the values specified in that item override the default values. \n \n-**Example:**\n+The following example shows mapping of inbound SNI hostname coming from the client, and the actual broker service URL where request should be redirected. For example, if the client sends the SNI header `pulsar-broker1`, the proxy creates a TLS tunnel by redirecting request to the `pulsar-broker1:6651` service URL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY2OTc2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            After you configure the `ssl_server_name.config` and `records.config` files, ATS-proxy server handles SNI routing and creates TCP tunnel between the client and the broker.\n          \n          \n            \n            After you configure the `ssl_server_name.config` and `records.config` files, the ATS-proxy server handles SNI routing and creates TCP tunnel between the client and the broker.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452669766", "createdAt": "2020-07-10T07:25:23Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -68,11 +67,11 @@ server_config = {\n   },\n }\n ```\n-Once, `ssl_server_name.config` and `records.config` are configured, ATS-proxy server is ready to handle SNI routing and can create TCP tunnel between the client and the broker.\n \n-#### Pulsar-client Configuration with SNI routing\n+After you configure the `ssl_server_name.config` and `records.config` files, ATS-proxy server handles SNI routing and creates TCP tunnel between the client and the broker.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY3NTM1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can use ATS proxy for geo-replication. Pulsar brokers can connect to brokers in geo-replication by using SNI routing. To enable SNI routing for broker connection cross cluster, you need to configure SNI proxy URL to the cluster metadata. If you have configured SNI proxy URL in the cluster metadata, you can connect to broker cross cluster through the proxy over SNI routing.\n          \n          \n            \n            You can use the ATS proxy for geo-replication. Pulsar brokers can connect to brokers in geo-replication by using SNI routing. To enable SNI routing for broker connection cross clusters, you need to configure SNI proxy URL to the cluster metadata. If you have configured SNI proxy URL in the cluster metadata, you can connect to broker cross clusters through the proxy over SNI routing.", "url": "https://github.com/apache/pulsar/pull/7471#discussion_r452675353", "createdAt": "2020-07-10T07:37:42Z", "author": {"login": "Huanli-Meng"}, "path": "site2/docs/concepts-proxy-sni-routing.md", "diffHunk": "@@ -94,14 +93,13 @@ PulsarClient pulsarClient = clientBuilder.build();\n ```\n \n #### Pulsar geo-replication with SNI routing\n-\n-We can also use ATS proxy for geo-replication. The Pulsar broker can connect to cross colo brokers for geo-replication using SNI routing. In order to enable SNI routing for cross cluster broker connection, we have to configure SNI proxy URL to the cluster metadata. If the cluster metadata has SNI proxy URL configured, the broker connects to cross cluster broker through the proxy over SNI routing.\n+You can use ATS proxy for geo-replication. Pulsar brokers can connect to brokers in geo-replication by using SNI routing. To enable SNI routing for broker connection cross cluster, you need to configure SNI proxy URL to the cluster metadata. If you have configured SNI proxy URL in the cluster metadata, you can connect to broker cross cluster through the proxy over SNI routing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd9eff15ca9185218f1856428c4a79687cba22"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a719f0ed4ac2daa9194d8a32f4c4dd3ef35f30a", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/5a719f0ed4ac2daa9194d8a32f4c4dd3ef35f30a", "committedDate": "2020-07-10T10:13:40Z", "message": "fix as per comments form Huanli"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2dc98e3013d7cbda9df5c28850cab55a7e3883a3", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/2dc98e3013d7cbda9df5c28850cab55a7e3883a3", "committedDate": "2020-07-10T10:09:25Z", "message": "Update site2/docs/concepts-proxy-sni-routing.md\n\nCo-authored-by: HuanliMeng <48120384+Huanli-Meng@users.noreply.github.com>"}, "afterCommit": {"oid": "5a719f0ed4ac2daa9194d8a32f4c4dd3ef35f30a", "author": {"user": {"login": "Jennifer88huang", "name": "Jennifer Huang"}}, "url": "https://github.com/apache/pulsar/commit/5a719f0ed4ac2daa9194d8a32f4c4dd3ef35f30a", "committedDate": "2020-07-10T10:13:40Z", "message": "fix as per comments form Huanli"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 552, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}