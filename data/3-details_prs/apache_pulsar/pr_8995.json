{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjAxNTI5", "number": 8995, "title": "remove duplicated broker prometheus metrics type", "bodyText": "Motivation\nIf there are multiple topics from different namespaces, the broker prometheus metrics will print out duplicated # TYPE definition for pulsar_ml_AddEntryBytesRate and other managed ledger metrics.\nIn fact, this problem can be verified by promtool https://github.com/prometheus/prometheus#building-from-source\nOn the broker, run this command to check validity of Pulsar broker metric format.\ncurl localhost:8080/metrics/ | ~/go/bin/promtool check metrics\nModifications\nTo prevent duplicated metrics type definition, the definition is now tracked and only printed out once. It leverages the existing metrics name Set already defined under parseMetricsToPrometheusMetrics() in PrometheusMetricsGenerator.java\nVerifying this change\n\n[ x] Make sure that the change passes the CI checks.\n\nThis change added tests and can be verified as follows:\nAdded two topics under new namespaces to trigger conditions that duplicated prometheus type could happen previously under testManagedLedgerStats() of PrometheusMetricsTest.java. Updated test cases checks this duplicated type problem.\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): no\nThe public API: no\nThe schema: no\nThe default values of configurations: no\nThe wire protocol: no\nThe rest endpoints: no\nThe admin cli options: no\nAnything that affects deployment: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented?\nIf a feature is not applicable for documentation, explain why?\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation", "createdAt": "2020-12-17T23:48:13Z", "url": "https://github.com/apache/pulsar/pull/8995", "merged": true, "mergeCommit": {"oid": "73198195efc6f25e162840451e054473daf25f17"}, "closed": true, "closedAt": "2020-12-22T17:53:04Z", "author": {"login": "zzzming"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnMLfzAH2gAyNTQyMjAxNTI5Ojg2OWE0NmU4ZTU1ODhiMmJhYWM3N2JiYTQ5ZGRjMzk2NTUyZTFiNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdouUq6gFqTU1NzI1ODQ2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52", "author": {"user": {"login": "zzzming", "name": "Ming"}}, "url": "https://github.com/apache/pulsar/commit/869a46e8e5588b2baac77bba49ddc396552e1b52", "committedDate": "2020-12-17T23:31:42Z", "message": "remove duplicated broker prometheus metrics type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MjI2OTIz", "url": "https://github.com/apache/pulsar/pull/8995#pullrequestreview-555226923", "createdAt": "2020-12-18T07:39:02Z", "commit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1Mjk2MzQ2", "url": "https://github.com/apache/pulsar/pull/8995#pullrequestreview-555296346", "createdAt": "2020-12-18T08:39:47Z", "commit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODozOTo0N1rOIIYZ3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODo0MTowM1rOIIYfCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1OTM1Nw==", "bodyText": "I think this block has intention issue.", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545659357", "createdAt": "2020-12-18T08:39:47Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1OTc0Mw==", "bodyText": "We don't use tabs in the code.", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545659743", "createdAt": "2020-12-18T08:40:09Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1OTM1Nw=="}, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY2MDY4Mw==", "bodyText": "I am not sure why do we need this line if it will fail before this line.", "url": "https://github.com/apache/pulsar/pull/8995#discussion_r545660683", "createdAt": "2020-12-18T08:41:03Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/PrometheusMetricsTest.java", "diffHunk": "@@ -591,18 +595,63 @@ public void testManagedLedgerStats() throws Exception {\n                 System.out.println(e.getKey() + \": \" + e.getValue())\n         );\n \n+        Map<String, String> typeDefs = new HashMap<String, String>();\n+        Map<String, String> metricNames = new HashMap<String, String>();\n+\n+        Pattern typePattern = Pattern.compile(\"^#\\\\s+TYPE\\\\s+(\\\\w+)\\\\s+(\\\\w+)\");\n+        Pattern metricNamePattern = Pattern.compile(\"^(\\\\w+)\\\\{.+\");\n+\n+\t    Splitter.on(\"\\n\").split(metricsStr).forEach(line -> {\n+            if (line.isEmpty()) {\n+                return;\n+            }\n+            if (line.startsWith(\"#\")) {\n+                // Check for duplicate type definitions\n+                Matcher typeMatcher = typePattern.matcher(line);\n+                checkArgument(typeMatcher.matches());\n+                String metricName = typeMatcher.group(1);\n+                String type = typeMatcher.group(2);\n+\n+                // From https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md\n+                // \"Only one TYPE line may exist for a given metric name.\"\n+                if (!typeDefs.containsKey(metricName)) {\n+                    typeDefs.put(metricName, type);\n+                } else {\n+                    fail(\"Duplicate type definition found for TYPE definition \" + metricName);\n+                    System.out.println(metricsStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "869a46e8e5588b2baac77bba49ddc396552e1b52"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e0f2087d5ff5439a37d7e5479b96fc8b61a5be6", "author": {"user": {"login": "zzzming", "name": "Ming"}}, "url": "https://github.com/apache/pulsar/commit/2e0f2087d5ff5439a37d7e5479b96fc8b61a5be6", "committedDate": "2020-12-18T14:26:41Z", "message": "fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDg0ODI3", "url": "https://github.com/apache/pulsar/pull/8995#pullrequestreview-556084827", "createdAt": "2020-12-21T01:20:14Z", "commit": {"oid": "2e0f2087d5ff5439a37d7e5479b96fc8b61a5be6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjU4NDYz", "url": "https://github.com/apache/pulsar/pull/8995#pullrequestreview-557258463", "createdAt": "2020-12-22T17:52:25Z", "commit": {"oid": "2e0f2087d5ff5439a37d7e5479b96fc8b61a5be6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 799, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}