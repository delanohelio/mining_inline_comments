{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1ODI0Mzgw", "number": 7475, "title": "Use CGroup CPU usage when present", "bodyText": "Motivation\nWhen using CPU limits on a docker container, the CPU usage on the broker load report will result incorrect.\nWe're reporting the CPU usage such as:\n  \"cpu\" : {\n    \"usage\" : 8.130785075483013,\n    \"limit\" : 200.0\n  },\nWhile the limit is correctly reflecting the 2 CPU limitation on the container, the usage is read from /proc/stat is referring to the all the CPUs in the host machine.\nThe effect of this is that the broker will appear with a lower CPU % usage and the load shedding will not be automatically triggered, even though the broker might be using the entire CPU quota allocated.\nInstead, we need to read the usage from /sys/fs/cgroup/cpu/cpuacct.usage. This will work both inside and outside of a container.", "createdAt": "2020-07-08T01:19:01Z", "url": "https://github.com/apache/pulsar/pull/7475", "merged": true, "mergeCommit": {"oid": "8bc4880044cd80bc2975dcf18ef21e8018595f3d"}, "closed": true, "closedAt": "2020-07-10T05:17:55Z", "author": {"login": "merlimat"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyv8VUAH2gAyNDQ1ODI0MzgwOjM0ZTY5OTgwNjFlYzFlMTgxMWYwZDdmYWQzZGQyY2IxZmI3Mzg2YzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczWjyKgH2gAyNDQ1ODI0MzgwOjgxNmZkMjgxZjg5YjY1MGMyOWUwYjJjMDVmNzBhNzNhYTFhNGVkNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "34e6998061ec1e1811f0d7fad3dd2cb1fb7386c3", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/34e6998061ec1e1811f0d7fad3dd2cb1fb7386c3", "committedDate": "2020-07-08T01:13:44Z", "message": "Use CGroup CPU usage when present"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MzgxNzM3", "url": "https://github.com/apache/pulsar/pull/7475#pullrequestreview-444381737", "createdAt": "2020-07-08T03:07:01Z", "commit": {"oid": "34e6998061ec1e1811f0d7fad3dd2cb1fb7386c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NjUxNDg5", "url": "https://github.com/apache/pulsar/pull/7475#pullrequestreview-444651489", "createdAt": "2020-07-08T11:26:27Z", "commit": {"oid": "34e6998061ec1e1811f0d7fad3dd2cb1fb7386c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMToyNjoyOFrOGujk1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMToyNjoyOFrOGujk1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQ3MDU1MA==", "bodyText": "If we take usage from cgroup, we should take limit from cgroup also.", "url": "https://github.com/apache/pulsar/pull/7475#discussion_r451470550", "createdAt": "2020-07-08T11:26:28Z", "author": {"login": "ivankelly"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/loadbalance/impl/LinuxBrokerHostUsageImpl.java", "diffHunk": "@@ -87,45 +100,36 @@ public void calculateBrokerHostUsage() {\n         double totalNicUsageTx = getTotalNicUsageTxKb(nics);\n         double totalNicUsageRx = getTotalNicUsageRxKb(nics);\n         double totalCpuLimit = getTotalCpuLimit();\n-        CpuStat cpuStat = getTotalCpuUsage();\n \n         SystemResourceUsage usage = new SystemResourceUsage();\n         long now = System.currentTimeMillis();\n+        double elapsedSeconds = (now - lastCollection) / 1000d;\n+        double cpuUsage = getTotalCpuUsage(elapsedSeconds);\n \n         if (lastCollection == 0L) {\n             usage.setMemory(getMemUsage());\n             usage.setBandwidthIn(new ResourceUsage(0d, totalNicLimit));\n             usage.setBandwidthOut(new ResourceUsage(0d, totalNicLimit));\n-            usage.setCpu(new ResourceUsage(0d, totalCpuLimit));\n         } else {\n-            double elapsedSeconds = (now - lastCollection) / 1000d;\n             double nicUsageTx = (totalNicUsageTx - lastTotalNicUsageTx) / elapsedSeconds;\n             double nicUsageRx = (totalNicUsageRx - lastTotalNicUsageRx) / elapsedSeconds;\n-\n-            if (cpuStat != null && lastCpuStat != null) {\n-                // we need two non null stats to get a usage report\n-                long cpuTimeDiff = cpuStat.getTotalTime() - lastCpuStat.getTotalTime();\n-                long cpuUsageDiff = cpuStat.getUsage() - lastCpuStat.getUsage();\n-                double cpuUsage = ((double) cpuUsageDiff / (double) cpuTimeDiff) * totalCpuLimit;\n-                usage.setCpu(new ResourceUsage(cpuUsage, totalCpuLimit));\n-            }\n-\n-            usage.setMemory(getMemUsage());\n-            usage.setBandwidthIn(new ResourceUsage(nicUsageRx, totalNicLimit));\n-            usage.setBandwidthOut(new ResourceUsage(nicUsageTx, totalNicLimit));\n         }\n \n-        lastTotalNicUsageTx = totalNicUsageTx;\n-        lastTotalNicUsageRx = totalNicUsageRx;\n-        lastCpuStat = cpuStat;\n-        lastCollection = System.currentTimeMillis();\n-        this.usage = usage;\n+        usage.setCpu(new ResourceUsage(cpuUsage, totalCpuLimit));\n     }\n \n     private double getTotalCpuLimit() {\n         return 100 * Runtime.getRuntime().availableProcessors();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e6998061ec1e1811f0d7fad3dd2cb1fb7386c3"}, "originalPosition": 103}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66f61a98e526bd1f8ed0af0c807d76e3bf128f6a", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/66f61a98e526bd1f8ed0af0c807d76e3bf128f6a", "committedDate": "2020-07-08T14:57:26Z", "message": "Also read cpu limits from cgroups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9757b44f55636887873d90f314a0ab687c3bcd0a", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/9757b44f55636887873d90f314a0ab687c3bcd0a", "committedDate": "2020-07-08T22:23:24Z", "message": "Fixed test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5d702194b864f581feb2618e7f167fcd6557c2", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/ec5d702194b864f581feb2618e7f167fcd6557c2", "committedDate": "2020-07-08T23:04:35Z", "message": "Fixed string trimming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODUzNTEy", "url": "https://github.com/apache/pulsar/pull/7475#pullrequestreview-445853512", "createdAt": "2020-07-09T18:09:43Z", "commit": {"oid": "ec5d702194b864f581feb2618e7f167fcd6557c2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODowOTo0M1rOGvcTeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoxOToxMlrOGvcn2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5OTk5Mw==", "bodyText": "log.error(\"Failed to read CPU usage from {}\", CGROUPS_CPU_USAGE_PATH, e);", "url": "https://github.com/apache/pulsar/pull/7475#discussion_r452399993", "createdAt": "2020-07-09T18:09:43Z", "author": {"login": "rdhabalia"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/loadbalance/impl/LinuxBrokerHostUsageImpl.java", "diffHunk": "@@ -137,18 +167,36 @@ private double getTotalCpuLimit() {\n      * Line is split in \"words\", filtering the first. The sum of all numbers give the amount of cpu cycles used this\n      * far. Real CPU usage should equal the sum substracting the idle cycles, this would include iowait, irq and steal.\n      */\n-    private CpuStat getTotalCpuUsage() {\n+    private double getTotalCpuUsageForEntireHost() {\n         try (Stream<String> stream = Files.lines(Paths.get(\"/proc/stat\"))) {\n             String[] words = stream.findFirst().get().split(\"\\\\s+\");\n \n             long total = Arrays.stream(words).filter(s -> !s.contains(\"cpu\")).mapToLong(Long::parseLong).sum();\n-\n             long idle = Long.parseLong(words[4]);\n+            long usage = total - idle;\n+\n+            double currentUsage = (usage - lastCpuUsage)  / (total - lastCpuTotalTime) * getTotalCpuLimit();\n+\n+            lastCpuUsage = usage;\n+            lastCpuTotalTime = total;\n \n-            return new CpuStat(total, total - idle);\n+            return currentUsage;\n         } catch (IOException e) {\n-            LOG.error(\"Failed to read CPU usage from /proc/stat\", e);\n-            return null;\n+            log.error(\"Failed to read CPU usage from /proc/stat\", e);\n+            return -1;\n+        }\n+    }\n+\n+    private double getTotalCpuUsageForCGroup(double elapsedTimeSeconds) {\n+        try {\n+            long usage = readLongFromFile(CGROUPS_CPU_USAGE_PATH);\n+            double currentUsage = usage - lastCpuUsage;\n+            lastCpuUsage = usage;\n+\n+            return 100 * currentUsage / elapsedTimeSeconds / TimeUnit.SECONDS.toNanos(1);\n+        } catch (IOException e) {\n+            log.error(\"Failed to read CPU usage from \" + CGROUPS_CPU_USAGE_PATH, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d702194b864f581feb2618e7f167fcd6557c2"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNTIwOA==", "bodyText": "log.warn(\"Failed to check cgroup CPU usage file {}\", e.getMessage());", "url": "https://github.com/apache/pulsar/pull/7475#discussion_r452405208", "createdAt": "2020-07-09T18:19:12Z", "author": {"login": "rdhabalia"}, "path": "pulsar-broker/src/main/java/org/apache/pulsar/broker/loadbalance/impl/LinuxBrokerHostUsageImpl.java", "diffHunk": "@@ -73,6 +80,16 @@ public LinuxBrokerHostUsageImpl(int hostUsageCheckIntervalMin,\n         this.overrideBrokerNicSpeedGbps = overrideBrokerNicSpeedGbps;\n         executorService.scheduleAtFixedRate(this::calculateBrokerHostUsage, 0,\n                 hostUsageCheckIntervalMin, TimeUnit.MINUTES);\n+\n+        boolean isCGroupsEnabled = false;\n+        try {\n+             isCGroupsEnabled = Files.exists(Paths.get(CGROUPS_CPU_USAGE_PATH));\n+        } catch (Exception e) {\n+            log.warn(\"Failed to check cgroup CPU usage file\", e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec5d702194b864f581feb2618e7f167fcd6557c2"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "816fd281f89b650c29e0b2c05f70a73aa1a4ed4a", "author": {"user": {"login": "merlimat", "name": "Matteo Merli"}}, "url": "https://github.com/apache/pulsar/commit/816fd281f89b650c29e0b2c05f70a73aa1a4ed4a", "committedDate": "2020-07-09T22:13:13Z", "message": "Addressed comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 565, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}