{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNjk2MjU1", "number": 7764, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo1MjowN1rOEVwm4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo1MjowN1rOEVwm4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjUxOTM5OnYy", "diffSide": "RIGHT", "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/ContextImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo1MjowN1rOG8so0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyNjoxM1rOG86_7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5OTA5MA==", "bodyText": "This would cause a NullPointerException if useThreadLocalProducers is not set.", "url": "https://github.com/apache/pulsar/pull/7764#discussion_r466299090", "createdAt": "2020-08-06T09:52:07Z", "author": {"login": "sijie"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/ContextImpl.java", "diffHunk": "@@ -102,19 +103,25 @@ public ContextImpl(InstanceConfig config, Logger logger, PulsarClient client,\n         this.config = config;\n         this.logger = logger;\n         this.client = client;\n-        this.publishProducers = new HashMap<>();\n         this.topicSchema = new TopicSchema(client);\n         this.statsManager = statsManager;\n \n         this.producerBuilder = (ProducerBuilderImpl<?>) client.newProducer().blockIfQueueFull(true).enableBatching(true)\n                 .batchingMaxPublishDelay(1, TimeUnit.MILLISECONDS);\n+        boolean useThreadLocalProducers = false;\n         if (config.getFunctionDetails().getSink().getProducerSpec() != null) {\n             if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages() != 0) {\n                 this.producerBuilder.maxPendingMessages(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages());\n             }\n             if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions() != 0) {\n                 this.producerBuilder.maxPendingMessagesAcrossPartitions(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions());\n             }\n+            useThreadLocalProducers = config.getFunctionDetails().getSink().getProducerSpec().getUseThreadLocalProducers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30885f5a62eefc0b4cd6eb7287417b170229fc6b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzNDM4MA==", "bodyText": "useThreadLocalProducers is a bool in protobuf. Its a primitive value which is always going to be present with a default value", "url": "https://github.com/apache/pulsar/pull/7764#discussion_r466534380", "createdAt": "2020-08-06T16:26:13Z", "author": {"login": "srkukarni"}, "path": "pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/ContextImpl.java", "diffHunk": "@@ -102,19 +103,25 @@ public ContextImpl(InstanceConfig config, Logger logger, PulsarClient client,\n         this.config = config;\n         this.logger = logger;\n         this.client = client;\n-        this.publishProducers = new HashMap<>();\n         this.topicSchema = new TopicSchema(client);\n         this.statsManager = statsManager;\n \n         this.producerBuilder = (ProducerBuilderImpl<?>) client.newProducer().blockIfQueueFull(true).enableBatching(true)\n                 .batchingMaxPublishDelay(1, TimeUnit.MILLISECONDS);\n+        boolean useThreadLocalProducers = false;\n         if (config.getFunctionDetails().getSink().getProducerSpec() != null) {\n             if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages() != 0) {\n                 this.producerBuilder.maxPendingMessages(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages());\n             }\n             if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions() != 0) {\n                 this.producerBuilder.maxPendingMessagesAcrossPartitions(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions());\n             }\n+            useThreadLocalProducers = config.getFunctionDetails().getSink().getProducerSpec().getUseThreadLocalProducers();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5OTA5MA=="}, "originalCommit": {"oid": "30885f5a62eefc0b4cd6eb7287417b170229fc6b"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2208, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}