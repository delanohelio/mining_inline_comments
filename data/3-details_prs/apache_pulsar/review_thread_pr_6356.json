{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2Njg5NDM4", "number": 6356, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToyMDoyNlrODg0kpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDozOToxNFrODk_kIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzQyMzc0OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/SchemaTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToyMDoyNlrOFrPMtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToyMDoyNlrOFrPMtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4MjEwMQ==", "bodyText": "missing license header", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r380882101", "createdAt": "2020-02-18T19:20:26Z", "author": {"login": "sijie"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/SchemaTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+\n+package org.apache.pulsar.schema;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1e24bd03249828f9709edd58e543111cf149d0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzQyODc0OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToyMTo0NlrOFrPPxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToyMTo0NlrOFrPPxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg4Mjg4Ng==", "bodyText": "I think we need to implement the clone method for each schema implementation. So you can then just call schema.clone() to clone a schema.", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r380882886", "createdAt": "2020-02-18T19:21:46Z", "author": {"login": "sijie"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java", "diffHunk": "@@ -813,4 +817,22 @@ public TransactionBuilder newTransaction() {\n         return new TransactionBuilderImpl(this);\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private static Schema cloneSchema(Schema schema){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c1e24bd03249828f9709edd58e543111cf149d0"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDY3OTU2OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1ODozMVrOFtLPyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1ODozMVrOFtLPyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxNDUwNw==", "bodyText": "Looks the imports are unused.", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r382914507", "createdAt": "2020-02-22T13:58:31Z", "author": {"login": "codelipenghui"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java", "diffHunk": "@@ -70,6 +70,9 @@\n import org.apache.pulsar.client.impl.conf.ReaderConfigurationData;\n import org.apache.pulsar.client.impl.schema.AutoConsumeSchema;\n import org.apache.pulsar.client.impl.schema.AutoProduceBytesSchema;\n+import org.apache.pulsar.client.impl.schema.AvroSchema;\n+import org.apache.pulsar.client.impl.schema.KeyValueSchema;\n+import org.apache.pulsar.client.impl.schema.generic.GenericAvroSchema;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c580a1ce1fb0324d15def8f28dceb77b76d9318"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NDQ2MDE3OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/AutoConsumeSchema.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxOToxODozNVrOFtsq0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTo1MDozNFrOFw-2pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MjA5Nw==", "bodyText": "When you implementing cloneSchema, don't you need to copy the fields to the new instance?", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r383462097", "createdAt": "2020-02-24T19:18:35Z", "author": {"login": "sijie"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/AutoConsumeSchema.java", "diffHunk": "@@ -132,6 +132,11 @@ public void configureSchemaInfo(String topicName,\n         }\n     }\n \n+    @Override\n+    public Schema<GenericRecord> cloneSchema() {\n+        return Schema.AUTO_CONSUME();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxMTIyMg==", "bodyText": "\ufffdit don't need to copy fields, AutoConsumeSchema represent it can auto consume, if you want clone the fields you can clone the true schema in AutoConsumeSchema. After all, only its schema is changeable.", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r385511222", "createdAt": "2020-02-28T05:15:57Z", "author": {"login": "congbobo184"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/AutoConsumeSchema.java", "diffHunk": "@@ -132,6 +132,11 @@ public void configureSchemaInfo(String topicName,\n         }\n     }\n \n+    @Override\n+    public Schema<GenericRecord> cloneSchema() {\n+        return Schema.AUTO_CONSUME();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MjA5Nw=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxNzI4Mw==", "bodyText": "I understand it can be changed. but cloneSchema is cloning a schema, we should copy the fields when cloning a schema.", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r386617283", "createdAt": "2020-03-02T19:58:24Z", "author": {"login": "sijie"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/AutoConsumeSchema.java", "diffHunk": "@@ -132,6 +132,11 @@ public void configureSchemaInfo(String topicName,\n         }\n     }\n \n+    @Override\n+    public Schema<GenericRecord> cloneSchema() {\n+        return Schema.AUTO_CONSUME();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MjA5Nw=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkwNTc2NA==", "bodyText": "you are right, we should clone the fields when clone a schema", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r386905764", "createdAt": "2020-03-03T09:50:34Z", "author": {"login": "congbobo184"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/AutoConsumeSchema.java", "diffHunk": "@@ -132,6 +132,11 @@ public void configureSchemaInfo(String topicName,\n         }\n     }\n \n+    @Override\n+    public Schema<GenericRecord> cloneSchema() {\n+        return Schema.AUTO_CONSUME();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ2MjA5Nw=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mjk3Njc1OnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/Schemas.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjowMTowNFrOFu98UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDozODoyMFrOFwua0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5MzY4MQ==", "bodyText": "Could you please explain why the access modifiers were switched to public?", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r384793681", "createdAt": "2020-02-26T22:01:04Z", "author": {"login": "vzhikserg"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/Schemas.java", "diffHunk": "@@ -29,36 +29,36 @@\n     @NoArgsConstructor\n     @AllArgsConstructor\n     public static class PersonOne{\n-        int id;\n+        public int id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxMjQ0Nw==", "bodyText": "SchemaCompatibilityCheckTest also used it.", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r385512447", "createdAt": "2020-02-28T05:22:30Z", "author": {"login": "congbobo184"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/Schemas.java", "diffHunk": "@@ -29,36 +29,36 @@\n     @NoArgsConstructor\n     @AllArgsConstructor\n     public static class PersonOne{\n-        int id;\n+        public int id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5MzY4MQ=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYzNjQ5OA==", "bodyText": "This class provides all possible constructors and getters/setters for all fields. Please use them instead of defining fields as public", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r386636498", "createdAt": "2020-03-02T20:38:20Z", "author": {"login": "vzhikserg"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/Schemas.java", "diffHunk": "@@ -29,36 +29,36 @@\n     @NoArgsConstructor\n     @AllArgsConstructor\n     public static class PersonOne{\n-        int id;\n+        public int id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5MzY4MQ=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzAwOTM1OnYy", "diffSide": "RIGHT", "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoxMjowMVrOFu-QgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTo0ODoyMFrOFw5DkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5ODg0OA==", "bodyText": "Did you consider to use the standard Cloneable interface with the clone method?", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r384798848", "createdAt": "2020-02-26T22:12:01Z", "author": {"login": "vzhikserg"}, "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "diffHunk": "@@ -136,6 +136,15 @@ default void configureSchemaInfo(String topic, String componentName,\n         // no-op\n     }\n \n+    /**\n+     * Clone schema.\n+     *\n+     * @return cloned schema.\n+     */\n+    default Schema<T> cloneSchema() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxMjg4OQ==", "bodyText": "It seems don't need to add the flag to control it.", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r385512889", "createdAt": "2020-02-28T05:24:55Z", "author": {"login": "congbobo184"}, "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "diffHunk": "@@ -136,6 +136,15 @@ default void configureSchemaInfo(String topic, String componentName,\n         // no-op\n     }\n \n+    /**\n+     * Clone schema.\n+     *\n+     * @return cloned schema.\n+     */\n+    default Schema<T> cloneSchema() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5ODg0OA=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYxNzczMA==", "bodyText": "@congbobo184 do you mean that Cloneable interface doesn't return Schema<T>?", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r386617730", "createdAt": "2020-03-02T19:59:10Z", "author": {"login": "sijie"}, "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "diffHunk": "@@ -136,6 +136,15 @@ default void configureSchemaInfo(String topic, String componentName,\n         // no-op\n     }\n \n+    /**\n+     * Clone schema.\n+     *\n+     * @return cloned schema.\n+     */\n+    default Schema<T> cloneSchema() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5ODg0OA=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxMDc2OA==", "bodyText": "My understanding of what @vzhikserg said deviated, now I understand what he said. I will extends the Cloneable.", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r386810768", "createdAt": "2020-03-03T05:48:20Z", "author": {"login": "congbobo184"}, "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/Schema.java", "diffHunk": "@@ -136,6 +136,15 @@ default void configureSchemaInfo(String topic, String componentName,\n         // no-op\n     }\n \n+    /**\n+     * Clone schema.\n+     *\n+     * @return cloned schema.\n+     */\n+    default Schema<T> cloneSchema() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5ODg0OA=="}, "originalCommit": {"oid": "91471ef48c19c8715a78ce62f3989cd76ae044d4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTE2NzcxOnYy", "diffSide": "RIGHT", "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/Schemas.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDozOToxNFrOFxoKBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTo1OTo1M1rOFxzNvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MjQ3MA==", "bodyText": "The Data annotation already includes Getter and Setter", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r387582470", "createdAt": "2020-03-04T10:39:14Z", "author": {"login": "vzhikserg"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/Schemas.java", "diffHunk": "@@ -16,25 +16,31 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.pulsar.schema.compatibility;\n+package org.apache.pulsar.schema;\n \n import lombok.AllArgsConstructor;\n import lombok.Data;\n+import lombok.Getter;\n import lombok.NoArgsConstructor;\n+import lombok.Setter;\n import org.apache.avro.reflect.AvroDefault;\n \n public class Schemas {\n \n     @Data\n     @NoArgsConstructor\n     @AllArgsConstructor\n+    @Getter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1da1611f2afe135fa51da166f16cf41077376767"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2MzY0NQ==", "bodyText": "I will fix it, thank for your review:)", "url": "https://github.com/apache/pulsar/pull/6356#discussion_r387763645", "createdAt": "2020-03-04T15:59:53Z", "author": {"login": "congbobo184"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/schema/Schemas.java", "diffHunk": "@@ -16,25 +16,31 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.pulsar.schema.compatibility;\n+package org.apache.pulsar.schema;\n \n import lombok.AllArgsConstructor;\n import lombok.Data;\n+import lombok.Getter;\n import lombok.NoArgsConstructor;\n+import lombok.Setter;\n import org.apache.avro.reflect.AvroDefault;\n \n public class Schemas {\n \n     @Data\n     @NoArgsConstructor\n     @AllArgsConstructor\n+    @Getter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MjQ3MA=="}, "originalCommit": {"oid": "1da1611f2afe135fa51da166f16cf41077376767"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1976, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}