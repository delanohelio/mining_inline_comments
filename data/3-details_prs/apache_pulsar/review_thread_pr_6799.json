{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTUzMTYx", "number": 6799, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzo0NzozMlrOD1JM6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMzoxODozMlrOF6U6Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDUxODgxOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNzo0NzozMlrOGKbfIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjowNDowNlrOGLDLfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4OTI4Mw==", "bodyText": "If none of the providers is able to authenticate the provided authData, shouldn't we throw any exception here?", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r413589283", "createdAt": "2020-04-23T07:47:32Z", "author": {"login": "sijie"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -83,13 +83,29 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()\n+                    .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header Auth-Method-Name [%s].\", authMethodName)));\n+\n             try {\n-                return provider.authenticate(authData);\n+                return providerToUse.authenticate(authData);\n             } catch (AuthenticationException e) {\n-                // Ignore the exception because we don't know which authentication method is expected here.\n+                throw e;\n+            }\n+        } else {\n+            for (AuthenticationProvider provider : providers.values()) {\n+                try {\n+                    return provider.authenticate(authData);\n+                } catch (AuthenticationException e) {\n+                    // Ignore the exception because we don't know which authentication method is expected here.\n+                }\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "562231c7faf88fd1fed1ce4ac2dc7b5084a93896"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIzOTYxMw==", "bodyText": "Already done here: \n  \n    \n      pulsar/pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java\n    \n    \n         Line 118\n      in\n      562231c\n    \n    \n    \n    \n\n        \n          \n           throw new AuthenticationException(\"Authentication required\"); \n        \n    \n  \n\n, right?", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r414239613", "createdAt": "2020-04-24T02:04:06Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -83,13 +83,29 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()\n+                    .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header Auth-Method-Name [%s].\", authMethodName)));\n+\n             try {\n-                return provider.authenticate(authData);\n+                return providerToUse.authenticate(authData);\n             } catch (AuthenticationException e) {\n-                // Ignore the exception because we don't know which authentication method is expected here.\n+                throw e;\n+            }\n+        } else {\n+            for (AuthenticationProvider provider : providers.values()) {\n+                try {\n+                    return provider.authenticate(authData);\n+                } catch (AuthenticationException e) {\n+                    // Ignore the exception because we don't know which authentication method is expected here.\n+                }\n             }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4OTI4Mw=="}, "originalCommit": {"oid": "562231c7faf88fd1fed1ce4ac2dc7b5084a93896"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk2NjU3MjQwOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMDo0NzoyOFrOJVF7yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMjo0MDowNFrOJVJdiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzA5OQ==", "bodyText": "Since this is a non-standard header, we should use a prefixed name, like X-Pulsar-Auth-Method-Name or X-Pulsar-Auth-Method", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626097099", "createdAt": "2021-05-04T20:47:28Z", "author": {"login": "merlimat"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NDg4OA==", "bodyText": "Done in e0c4876.", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626154888", "createdAt": "2021-05-04T22:40:04Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzA5OQ=="}, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk2NjU3NTkzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMDo0ODoxOFrOJVF90g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMzozMjowOVrOJVKoug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA==", "bodyText": "AuthenticationService should build a map in the constructor with all the available provider indexed by name", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626097618", "createdAt": "2021-05-04T20:48:18Z", "author": {"login": "merlimat"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NDc1Mg==", "bodyText": "providers is already a Map built in the constructor. Not sure to understand your statement?", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626154752", "createdAt": "2021-05-04T22:39:40Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NjIyNA==", "bodyText": "Ok, so we should be able to just do providers.get(authMethodName) instead of iterating over the items of the map.", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626156224", "createdAt": "2021-05-04T22:43:24Z", "author": {"login": "merlimat"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NjYwOQ==", "bodyText": "Oh ok, so try catch.", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626156609", "createdAt": "2021-05-04T22:44:36Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE3NDEzOA==", "bodyText": "Thanks for the suggestion I thought get from Map could throws Exception is not find :D.", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626174138", "createdAt": "2021-05-04T23:32:09Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5NzYxOA=="}, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk2NjU4MTA0OnYy", "diffSide": "RIGHT", "path": "pulsar-client/src/test/java/org/apache/pulsar/client/impl/schema/AvroSchemaTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMDo0OToyNVrOJVGAvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMjozODoxM1rOJVJa-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5ODM2NA==", "bodyText": "These test changes look unrelated to the auth change.", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626098364", "createdAt": "2021-05-04T20:49:25Z", "author": {"login": "merlimat"}, "path": "pulsar-client/src/test/java/org/apache/pulsar/client/impl/schema/AvroSchemaTest.java", "diffHunk": "@@ -20,39 +20,36 @@\n \n import static java.nio.charset.StandardCharsets.UTF_8;\n import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.FOO_FIELDS;\n-import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_NOT_ALLOW_NULL;\n import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_ALLOW_NULL;\n+import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_NOT_ALLOW_NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE1NDIzMg==", "bodyText": "fixed", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626154232", "createdAt": "2021-05-04T22:38:13Z", "author": {"login": "KannarFr"}, "path": "pulsar-client/src/test/java/org/apache/pulsar/client/impl/schema/AvroSchemaTest.java", "diffHunk": "@@ -20,39 +20,36 @@\n \n import static java.nio.charset.StandardCharsets.UTF_8;\n import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.FOO_FIELDS;\n-import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_NOT_ALLOW_NULL;\n import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_ALLOW_NULL;\n+import static org.apache.pulsar.client.impl.schema.SchemaTestUtils.SCHEMA_AVRO_NOT_ALLOW_NULL;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjA5ODM2NA=="}, "originalCommit": {"oid": "40bce876b399c64ab664f412dba732c40e54b838"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzk2NzA0MzQzOnYy", "diffSide": "RIGHT", "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMzoxODozMlrOJVKVUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0wNFQyMzozMToyMVrOJVKnmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE2OTE2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        AuthenticationProvider providerToUse = providers\n          \n          \n            \n                                .values()\n          \n          \n            \n                                .parallelStream()\n          \n          \n            \n                                .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n          \n          \n            \n                                .findAny()\n          \n          \n            \n                                .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header X-Pulsar-Auth-Method-Name [%s].\", authMethodName)));\n          \n          \n            \n                        AuthenticationProvider providerToUse = providers.get(authMethodName);\n          \n          \n            \n                        if (providerToUse == null) {\n          \n          \n            \n                            throw new AuthenticationException(\n          \n          \n            \n                                String.format(\"Unsupported authentication method: [%s].\", authMethodName);\n          \n          \n            \n                        }", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626169169", "createdAt": "2021-05-04T23:18:32Z", "author": {"login": "merlimat"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"X-Pulsar-Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()\n+                    .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header X-Pulsar-Auth-Method-Name [%s].\", authMethodName)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aa617a7211354651dd992bd553a142e7e3b36c9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE3Mzg1MQ==", "bodyText": "applied in 4265e40.", "url": "https://github.com/apache/pulsar/pull/6799#discussion_r626173851", "createdAt": "2021-05-04T23:31:21Z", "author": {"login": "KannarFr"}, "path": "pulsar-broker-common/src/main/java/org/apache/pulsar/broker/authentication/AuthenticationService.java", "diffHunk": "@@ -99,18 +99,38 @@ public String authenticate(AuthenticationDataSource authData, String authMethodN\n     }\n \n     public String authenticateHttpRequest(HttpServletRequest request) throws AuthenticationException {\n-        // Try to validate with any configured provider\n         AuthenticationException authenticationException = null;\n         AuthenticationDataSource authData = new AuthenticationDataHttps(request);\n-        for (AuthenticationProvider provider : providers.values()) {\n+        String authMethodName = request.getHeader(\"X-Pulsar-Auth-Method-Name\");\n+\n+        if (authMethodName != null) {\n+            AuthenticationProvider providerToUse = providers\n+                    .values()\n+                    .parallelStream()\n+                    .filter(provider -> provider.getAuthMethodName().equals(authMethodName))\n+                    .findAny()\n+                    .orElseThrow(() -> new AuthenticationException(String.format(\"Unsupported header X-Pulsar-Auth-Method-Name [%s].\", authMethodName)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNjE2OTE2OQ=="}, "originalCommit": {"oid": "2aa617a7211354651dd992bd553a142e7e3b36c9"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1821, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}