{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NTI1ODI1", "number": 6905, "title": "[Issue #6842] feat(schema): allow for schema reader and writer registration on SchemaDefinition", "bodyText": "Fixes #6842\nMotivation and Modifications\nWith this feature it is possible to configure own SchemaReader and SchemaWriter on SchemaDefinition instantiation. With this it is possible to e.g. reuse already configured Jackson ObjectMapper instances.\nDoes this pull request potentially affect one of the following parts:\nIf yes was chosen, please highlight the changes\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API: (yes / no)\nThe schema: (yes / no / don't know)\nThe default values of configurations: (yes / no)\nThe wire protocol: (yes / no)\nThe rest endpoints: (yes / no)\nThe admin cli options: (yes / no)\nAnything that affects deployment: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)\nIf a feature is not applicable for documentation, explain why?\nIf a feature is not documented yet in this PR, please create a followup issue for adding the documentation", "createdAt": "2020-05-07T08:04:15Z", "url": "https://github.com/apache/pulsar/pull/6905", "merged": true, "mergeCommit": {"oid": "8b126354324bc5bbe654266a2387b343037dccee"}, "closed": true, "closedAt": "2020-05-18T23:04:04Z", "author": {"login": "Persi"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABce4mMsgH2gAyNDE0NTI1ODI1OjVhZjA3OTJkMTZkZDg2ODI3NGY2YmU4Mjk3ZGM1ZjYyNDQwOTZhOTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcinOlUAFqTQxMzk2ODU0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94", "author": {"user": {"login": "Persi", "name": "Marcus Berndt"}}, "url": "https://github.com/apache/pulsar/commit/5af0792d16dd868274f6be8297dc5f6244096a94", "committedDate": "2020-05-07T08:00:13Z", "message": "feat(schema): allow for schema reader and writer registration on SchemaDefinition\n\nWith this feature it is possible to configure own SchemaReader and SchemaWriter on SchemaDefinition instantiation. With this it is possible to e.g. reuse already configured Jackson ObjectMapper instances."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjIzNDMw", "url": "https://github.com/apache/pulsar/pull/6905#pullrequestreview-407623430", "createdAt": "2020-05-07T16:08:48Z", "commit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjowODo0OFrOGSF0vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjowODo0OFrOGSF0vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyMjk3NQ==", "bodyText": "Can we be sure nobody is using this class (since renaming is a backward-breaking change)? (Same question for the writer.)", "url": "https://github.com/apache/pulsar/pull/6905#discussion_r421622975", "createdAt": "2020-05-07T16:08:48Z", "author": {"login": "hansenc"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/reader/JacksonJsonReader.java", "diffHunk": "@@ -27,11 +27,11 @@\n import java.io.IOException;\n import java.io.InputStream;\n \n-public class JsonReader<T> implements SchemaReader<T> {\n+public class JacksonJsonReader<T> implements SchemaReader<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjI1NTMz", "url": "https://github.com/apache/pulsar/pull/6905#pullrequestreview-407625533", "createdAt": "2020-05-07T16:11:19Z", "commit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxMToyMFrOGSF7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxMToyMFrOGSF7Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyNDU5NQ==", "bodyText": "I think you meant return this;, which begs the question, can we have some tests?", "url": "https://github.com/apache/pulsar/pull/6905#discussion_r421624595", "createdAt": "2020-05-07T16:11:20Z", "author": {"login": "hansenc"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/SchemaDefinitionBuilderImpl.java", "diffHunk": "@@ -114,6 +120,18 @@\n         return this;\n     }\n \n+    @Override\n+    public SchemaDefinitionBuilder<T> withSchemaReader(SchemaReader<T> reader) {\n+        this.reader=reader;\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjI1Nzk2", "url": "https://github.com/apache/pulsar/pull/6905#pullrequestreview-407625796", "createdAt": "2020-05-07T16:11:37Z", "commit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxMTozN1rOGSF70Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoxMTozN1rOGSF70Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYyNDc4NQ==", "bodyText": "return this;", "url": "https://github.com/apache/pulsar/pull/6905#discussion_r421624785", "createdAt": "2020-05-07T16:11:37Z", "author": {"login": "hansenc"}, "path": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/schema/SchemaDefinitionBuilderImpl.java", "diffHunk": "@@ -114,6 +120,18 @@\n         return this;\n     }\n \n+    @Override\n+    public SchemaDefinitionBuilder<T> withSchemaReader(SchemaReader<T> reader) {\n+        this.reader=reader;\n+        return null;\n+    }\n+\n+    @Override\n+    public SchemaDefinitionBuilder<T> withSchemaWriter(SchemaWriter<T> writer) {\n+        this.writer = writer;\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjM3OTQ2", "url": "https://github.com/apache/pulsar/pull/6905#pullrequestreview-407637946", "createdAt": "2020-05-07T16:26:26Z", "commit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoyNjoyNlrOGSGg2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNjoyNjoyNlrOGSGg2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYzNDI2NA==", "bodyText": "This interface is used for more than just JSON schemas, right? If so, it will be confusing for users to be able to set a reader and writer for any type of schema when they will only be used for JSON schemas and ignored otherwise. So we either need to support this broadly, or instead we can overload JSONSchema.of() for a more targeted approach.", "url": "https://github.com/apache/pulsar/pull/6905#discussion_r421634264", "createdAt": "2020-05-07T16:26:26Z", "author": {"login": "hansenc"}, "path": "pulsar-client-api/src/main/java/org/apache/pulsar/client/api/schema/SchemaDefinition.java", "diffHunk": "@@ -76,4 +78,18 @@\n      * @return the flag of supportSchemaVersioning\n      */\n     boolean getSupportSchemaVersioning();\n+\n+    /**\n+     * Get a configured schema reader.\n+     *\n+     * @return optional containing configured schema reader or empty optional if none is configure\n+     */\n+    Optional<SchemaReader<T>> getSchemaReaderOpt();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af0792d16dd868274f6be8297dc5f6244096a94"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96b32f7924c33a528c4c78e748855083d553a6d4", "author": {"user": {"login": "Persi", "name": "Marcus Berndt"}}, "url": "https://github.com/apache/pulsar/commit/96b32f7924c33a528c4c78e748855083d553a6d4", "committedDate": "2020-05-08T04:56:24Z", "message": "fix: fix wrong return types and keep api compatibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc80892cbe3620eefb17ff39cf2e6e1b5b08c4be", "author": {"user": {"login": "Persi", "name": "Marcus Berndt"}}, "url": "https://github.com/apache/pulsar/commit/bc80892cbe3620eefb17ff39cf2e6e1b5b08c4be", "committedDate": "2020-05-08T05:30:43Z", "message": "chore: fixed license info"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDgwMjAx", "url": "https://github.com/apache/pulsar/pull/6905#pullrequestreview-408480201", "createdAt": "2020-05-08T19:43:18Z", "commit": {"oid": "bc80892cbe3620eefb17ff39cf2e6e1b5b08c4be"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed8cc7bb618f479417d7ed263f56fe1ee3cde88d", "author": {"user": {"login": "Persi", "name": "Marcus Berndt"}}, "url": "https://github.com/apache/pulsar/commit/ed8cc7bb618f479417d7ed263f56fe1ee3cde88d", "committedDate": "2020-05-09T09:02:37Z", "message": "fix: SchemaDefinitionBuilderImpl build verification\n\nAdded unit and integration tests for SchemaReader and SchemaWriter registration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzA3NDI4", "url": "https://github.com/apache/pulsar/pull/6905#pullrequestreview-409707428", "createdAt": "2020-05-12T05:26:43Z", "commit": {"oid": "ed8cc7bb618f479417d7ed263f56fe1ee3cde88d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToyNjo0M1rOGT2ihQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToyNjo0M1rOGT2ihQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2OTcwMQ==", "bodyText": "Avoid using import .*", "url": "https://github.com/apache/pulsar/pull/6905#discussion_r423469701", "createdAt": "2020-05-12T05:26:43Z", "author": {"login": "codelipenghui"}, "path": "pulsar-broker/src/test/java/org/apache/pulsar/client/impl/BrokerClientIntegrationTest.java", "diffHunk": "@@ -67,16 +71,14 @@\n import org.apache.pulsar.broker.service.Topic;\n import org.apache.pulsar.broker.service.persistent.PersistentTopic;\n import org.apache.pulsar.client.admin.PulsarAdminException;\n-import org.apache.pulsar.client.api.Consumer;\n-import org.apache.pulsar.client.api.ConsumerBuilder;\n-import org.apache.pulsar.client.api.Message;\n-import org.apache.pulsar.client.api.MessageId;\n-import org.apache.pulsar.client.api.Producer;\n-import org.apache.pulsar.client.api.ProducerConsumerBase;\n-import org.apache.pulsar.client.api.PulsarClient;\n-import org.apache.pulsar.client.api.PulsarClientException;\n-import org.apache.pulsar.client.api.SubscriptionType;\n+import org.apache.pulsar.client.api.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed8cc7bb618f479417d7ed263f56fe1ee3cde88d"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a80bd71c2ba57a1b9288277138d2565e4070edb", "author": {"user": {"login": "Persi", "name": "Marcus Berndt"}}, "url": "https://github.com/apache/pulsar/commit/9a80bd71c2ba57a1b9288277138d2565e4070edb", "committedDate": "2020-05-12T07:35:26Z", "message": "chore(imports): reorganized imports to avoid *"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTY4NTQy", "url": "https://github.com/apache/pulsar/pull/6905#pullrequestreview-413968542", "createdAt": "2020-05-18T22:01:44Z", "commit": {"oid": "9a80bd71c2ba57a1b9288277138d2565e4070edb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4849, "cost": 1, "resetAt": "2021-10-28T18:54:27Z"}}}