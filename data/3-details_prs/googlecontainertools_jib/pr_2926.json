{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODMzNDUy", "number": 2926, "title": "Add integration tests for explode mode of spring boot jar", "bodyText": "Requires #2918 to be reviewed first.", "createdAt": "2020-12-07T17:32:54Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2926", "merged": true, "mergeCommit": {"oid": "c300c7a52d51cb2ca6bfaa1a7d53e62a7da1944b"}, "closed": true, "closedAt": "2020-12-16T21:12:54Z", "author": {"login": "mpeddada1"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfft42AH2gAyNTMzODMzNDUyOjY3NThkZWU5OTA5NThiNDAyN2Q0ZTIyNTQ1YTRmOTM4NGRhYTI2ZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm0ebBgH2gAyNTMzODMzNDUyOjVjYzU0Njc5NGZmMDRjNDVhODI4ZTg3NmNiZjU0YmJjM2EyMTU1MGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6758dee990958b4027d4e22545a4f9384daa26f3", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6758dee990958b4027d4e22545a4f9384daa26f3", "committedDate": "2020-11-24T01:46:04Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0547910bc469f07f4f10f1948a9500161436976b", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0547910bc469f07f4f10f1948a9500161436976b", "committedDate": "2020-12-02T21:43:54Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ce9619fdc8943324e87bc5daa6d746945bf9dec", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/5ce9619fdc8943324e87bc5daa6d746945bf9dec", "committedDate": "2020-12-03T23:45:17Z", "message": "exploded mode for spring boot fat jar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc2556a5ab323396838ba1405f5fd376605b8d06", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/dc2556a5ab323396838ba1405f5fd376605b8d06", "committedDate": "2020-12-03T23:45:23Z", "message": "Merge branch 'master' of github.com:GoogleContainerTools/jib into cli-spring-boot-expl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cf2adc8a73cbee6644106a783d707b2d3253db4", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/8cf2adc8a73cbee6644106a783d707b2d3253db4", "committedDate": "2020-12-04T01:01:04Z", "message": "remove test jar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0864cfb8e8e582980e2a7840260eb5365d696444", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0864cfb8e8e582980e2a7840260eb5365d696444", "committedDate": "2020-12-04T02:36:36Z", "message": "clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c2ff61a8c8cfffea8611a2dde8642bf15b8e909", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/9c2ff61a8c8cfffea8611a2dde8642bf15b8e909", "committedDate": "2020-12-04T23:10:49Z", "message": "fix NoSuchElementException when layers.idx includes a layer with no files listed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5745da8c438bc56ca8257ce745a29ef5d44189b8", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/5745da8c438bc56ca8257ce745a29ef5d44189b8", "committedDate": "2020-12-04T23:15:56Z", "message": "rename test jar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d4558cff67efb4e25d01a745663c8475df69e1f", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/8d4558cff67efb4e25d01a745663c8475df69e1f", "committedDate": "2020-12-04T23:22:47Z", "message": "formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a56f4389cde1eb70adb9cb79602dd2a474c069dc", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a56f4389cde1eb70adb9cb79602dd2a474c069dc", "committedDate": "2020-12-07T17:27:03Z", "message": "Add integration testing for layered and non-layered springboot jars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c6bfba31af3571094279d787d28ce9834760fdd", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4c6bfba31af3571094279d787d28ce9834760fdd", "committedDate": "2020-12-07T18:36:10Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4af656ce8dd4a5dded13441765b2cb1a5cbf8a09", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4af656ce8dd4a5dded13441765b2cb1a5cbf8a09", "committedDate": "2020-12-07T18:48:45Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4497b17559e2cee42dbe4b0118f1f6fabc79f021", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4497b17559e2cee42dbe4b0118f1f6fabc79f021", "committedDate": "2020-12-08T18:50:19Z", "message": "Merge branch 'cli-spring-boot-expl' of github.com:GoogleContainerTools/jib into spring-boot-integration-tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NjAyMjM2", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#pullrequestreview-547602236", "createdAt": "2020-12-08T20:26:49Z", "commit": {"oid": "a56f4389cde1eb70adb9cb79602dd2a474c069dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDoyNjo1MFrOIB0rIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDoyNjo1MFrOIB0rIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc4MjQ5OA==", "bodyText": "How are these spring boot jars constructed? They don't seem like an actual jar built from a Spring Boot project. (Usually it runs a server listening on port 8080).", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#discussion_r538782498", "createdAt": "2020-12-08T20:26:50Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -142,6 +142,39 @@ public void testNoDependencyJar_packagedMode_toDocker()\n     }\n   }\n \n+  @Test\n+  public void testSpringbootLayeredJar_explodedMode_toDocker()\n+      throws IOException, InterruptedException, URISyntaxException {\n+    Path jarPath =\n+        Paths.get(Resources.getResource(\"jarTest/springboot/springboot_layered.jar\").toURI());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a56f4389cde1eb70adb9cb79602dd2a474c069dc"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a548fdefafe6dead1914bd55c0c2db4b483f768", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/2a548fdefafe6dead1914bd55c0c2db4b483f768", "committedDate": "2020-12-14T16:21:06Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ae86312cad5b92046d038f34182663d3edc8486", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7ae86312cad5b92046d038f34182663d3edc8486", "committedDate": "2020-12-15T01:03:57Z", "message": "use test projects for spring-boot tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15ade55ec434d2938514900cbd40e8e7d5b390d8", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/15ade55ec434d2938514900cbd40e8e7d5b390d8", "committedDate": "2020-12-15T01:26:43Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec0c6cab9741ac6ea8bc73d9a770af0890fecdde", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ec0c6cab9741ac6ea8bc73d9a770af0890fecdde", "committedDate": "2020-12-15T23:07:02Z", "message": "Resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68e953c7e234d96e7bcc37cc7689e3f659d6f85d", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/68e953c7e234d96e7bcc37cc7689e3f659d6f85d", "committedDate": "2020-12-15T23:10:14Z", "message": "resolve more conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51be0357904c313b59ee06b2d9d23cfea9a62997", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/51be0357904c313b59ee06b2d9d23cfea9a62997", "committedDate": "2020-12-15T23:19:20Z", "message": "fix naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864bfcb2a3900c97d0e65c86db4fcd47e845fd9f", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/864bfcb2a3900c97d0e65c86db4fcd47e845fd9f", "committedDate": "2020-12-15T23:21:55Z", "message": "modify target image name in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f22fc9c73fa01fc9b1d8c917c39426998d603f", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/11f22fc9c73fa01fc9b1d8c917c39426998d603f", "committedDate": "2020-12-15T23:35:15Z", "message": "final cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ced0108595b0c204de0e8f285ff9ac3e7e6200ed", "committedDate": "2020-12-15T23:37:49Z", "message": "apply java formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODExNjAy", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#pullrequestreview-553811602", "createdAt": "2020-12-16T15:38:22Z", "commit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNTozODoyM1rOIHLfvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNTo0Njo0NVrOIHL7Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM5OTI5NQ==", "bodyText": "Hmm... I'm curious. Does it not work without toAbsolutePath()?", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#discussion_r544399295", "createdAt": "2020-12-16T15:38:23Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -154,4 +167,71 @@ public void testJar_unknownMode() {\n         .contains(\n             \"Invalid value for option '--mode': expected one of [exploded, packaged] (case-sensitive) but was 'unknown'\");\n   }\n+\n+  @Test\n+  public void testSpringBootLayeredJar_explodedMode() throws IOException, InterruptedException {\n+    springBootProjectLayered.build(\"clean\", \"bootJar\");\n+    Path jarParentPath =\n+        springBootProjectLayered.getProjectRoot().toAbsolutePath().resolve(\"build\").resolve(\"libs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwMTE4Nw==", "bodyText": "This will not run if one of the assertions above fail or some code throws an exception. Put it in finally, or @After public tearDown() as done in other tests.", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#discussion_r544401187", "createdAt": "2020-12-16T15:40:42Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -154,4 +167,71 @@ public void testJar_unknownMode() {\n         .contains(\n             \"Invalid value for option '--mode': expected one of [exploded, packaged] (case-sensitive) but was 'unknown'\");\n   }\n+\n+  @Test\n+  public void testSpringBootLayeredJar_explodedMode() throws IOException, InterruptedException {\n+    springBootProjectLayered.build(\"clean\", \"bootJar\");\n+    Path jarParentPath =\n+        springBootProjectLayered.getProjectRoot().toAbsolutePath().resolve(\"build\").resolve(\"libs\");\n+    Path jarPath = jarParentPath.resolve(\"spring-boot-layered.jar\");\n+\n+    Integer exitCode =\n+        new CommandLine(new JibCli())\n+            .execute(\"jar\", \"--target\", \"docker://spring-boot-jar-layered\", jarPath.toString());\n+    String output =\n+        new Command(\"docker\", \"run\", \"--rm\", \"--detach\", \"-p8080:8080\", \"spring-boot-jar-layered\")\n+            .run();\n+\n+    try (JarFile jarFile = new JarFile(jarPath.toFile())) {\n+      assertThat(jarFile.getEntry(\"BOOT-INF/layers.idx\")).isNotNull();\n+      assertThat(getContent(new URL(\"http://localhost:8080\"))).isEqualTo(\"Hello world\");\n+      assertThat(exitCode).isEqualTo(0);\n+\n+      new Command(\"docker\", \"stop\", output.trim()).run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwMjY1Ng==", "bodyText": "Nit: I'd put this before docker run so that you don't run docker run if jib jar fails for some reason.", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#discussion_r544402656", "createdAt": "2020-12-16T15:42:22Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -154,4 +167,71 @@ public void testJar_unknownMode() {\n         .contains(\n             \"Invalid value for option '--mode': expected one of [exploded, packaged] (case-sensitive) but was 'unknown'\");\n   }\n+\n+  @Test\n+  public void testSpringBootLayeredJar_explodedMode() throws IOException, InterruptedException {\n+    springBootProjectLayered.build(\"clean\", \"bootJar\");\n+    Path jarParentPath =\n+        springBootProjectLayered.getProjectRoot().toAbsolutePath().resolve(\"build\").resolve(\"libs\");\n+    Path jarPath = jarParentPath.resolve(\"spring-boot-layered.jar\");\n+\n+    Integer exitCode =\n+        new CommandLine(new JibCli())\n+            .execute(\"jar\", \"--target\", \"docker://spring-boot-jar-layered\", jarPath.toString());\n+    String output =\n+        new Command(\"docker\", \"run\", \"--rm\", \"--detach\", \"-p8080:8080\", \"spring-boot-jar-layered\")\n+            .run();\n+\n+    try (JarFile jarFile = new JarFile(jarPath.toFile())) {\n+      assertThat(jarFile.getEntry(\"BOOT-INF/layers.idx\")).isNotNull();\n+      assertThat(getContent(new URL(\"http://localhost:8080\"))).isEqualTo(\"Hello world\");\n+      assertThat(exitCode).isEqualTo(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwMzAyOQ==", "bodyText": "private", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#discussion_r544403029", "createdAt": "2020-12-16T15:42:48Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -154,4 +167,71 @@ public void testJar_unknownMode() {\n         .contains(\n             \"Invalid value for option '--mode': expected one of [exploded, packaged] (case-sensitive) but was 'unknown'\");\n   }\n+\n+  @Test\n+  public void testSpringBootLayeredJar_explodedMode() throws IOException, InterruptedException {\n+    springBootProjectLayered.build(\"clean\", \"bootJar\");\n+    Path jarParentPath =\n+        springBootProjectLayered.getProjectRoot().toAbsolutePath().resolve(\"build\").resolve(\"libs\");\n+    Path jarPath = jarParentPath.resolve(\"spring-boot-layered.jar\");\n+\n+    Integer exitCode =\n+        new CommandLine(new JibCli())\n+            .execute(\"jar\", \"--target\", \"docker://spring-boot-jar-layered\", jarPath.toString());\n+    String output =\n+        new Command(\"docker\", \"run\", \"--rm\", \"--detach\", \"-p8080:8080\", \"spring-boot-jar-layered\")\n+            .run();\n+\n+    try (JarFile jarFile = new JarFile(jarPath.toFile())) {\n+      assertThat(jarFile.getEntry(\"BOOT-INF/layers.idx\")).isNotNull();\n+      assertThat(getContent(new URL(\"http://localhost:8080\"))).isEqualTo(\"Hello world\");\n+      assertThat(exitCode).isEqualTo(0);\n+\n+      new Command(\"docker\", \"stop\", output.trim()).run();\n+    }\n+  }\n+\n+  @Test\n+  public void testSpringBootNonLayeredJar_explodedMode() throws IOException, InterruptedException {\n+    springBootProjectNonLayered.build(\"clean\", \"bootJar\");\n+    Path jarParentPath =\n+        springBootProjectNonLayered\n+            .getProjectRoot()\n+            .toAbsolutePath()\n+            .resolve(\"build\")\n+            .resolve(\"libs\");\n+    Path jarPath = jarParentPath.resolve(\"spring-boot-nonlayered.jar\");\n+\n+    Integer exitCode =\n+        new CommandLine(new JibCli())\n+            .execute(\"jar\", \"--target\", \"docker://spring-boot-jar\", jarPath.toString());\n+    String output =\n+        new Command(\"docker\", \"run\", \"--rm\", \"--detach\", \"-p8080:8080\", \"spring-boot-jar\").run();\n+\n+    try (JarFile jarFile = new JarFile(jarPath.toFile())) {\n+      assertThat(jarFile.getEntry(\"BOOT-INF/layers.idx\")).isNull();\n+      assertThat(getContent(new URL(\"http://localhost:8080\"))).isEqualTo(\"Hello world\");\n+      assertThat(exitCode).isEqualTo(0);\n+\n+      new Command(\"docker\", \"stop\", output.trim()).run();\n+    }\n+  }\n+\n+  @Nullable\n+  static String getContent(URL url) throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwMzczNw==", "bodyText": "final", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#discussion_r544403737", "createdAt": "2020-12-16T15:43:38Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/TestProject.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.filesystem.DirectoryWalker;\n+import com.google.common.io.Resources;\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.gradle.util.GradleVersion;\n+import org.junit.rules.TemporaryFolder;\n+\n+public class TestProject extends TemporaryFolder implements Closeable {\n+\n+  private static final String PROJECTS_PATH_IN_RESOURCES = \"jarTest/spring-boot/\";\n+\n+  /** Copies test project {@code projectName} to {@code destination} folder. */\n+  private static void copyProject(String projectName, Path destination)\n+      throws IOException, URISyntaxException {\n+    Path projectPathInResources =\n+        Paths.get(Resources.getResource(PROJECTS_PATH_IN_RESOURCES + projectName).toURI());\n+    new DirectoryWalker(projectPathInResources)\n+        .filterRoot()\n+        .walk(\n+            path -> {\n+              // Creates the same path in the destDir.\n+              Path destPath = destination.resolve(projectPathInResources.relativize(path));\n+              if (Files.isDirectory(path)) {\n+                Files.createDirectory(destPath);\n+              } else {\n+                Files.copy(path, destPath);\n+              }\n+            });\n+  }\n+\n+  private final String testProjectName;\n+  private String gradleVersion = GradleVersion.version(\"5.6.4\").getVersion();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQwNjI5NQ==", "bodyText": "I wish we had a way to share test utility classes across all projects. But let's not try to resolve this in this PR.\n@loosebazooka", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#discussion_r544406295", "createdAt": "2020-12-16T15:46:45Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/TestProject.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.filesystem.DirectoryWalker;\n+import com.google.common.io.Resources;\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.gradle.util.GradleVersion;\n+import org.junit.rules.TemporaryFolder;\n+\n+public class TestProject extends TemporaryFolder implements Closeable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced0108595b0c204de0e8f285ff9ac3e7e6200ed"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a651ee05735f8f365d433f16f9461699020467b2", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a651ee05735f8f365d433f16f9461699020467b2", "committedDate": "2020-12-16T16:47:12Z", "message": "comment fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzOTMwOTIx", "url": "https://github.com/GoogleContainerTools/jib/pull/2926#pullrequestreview-553930921", "createdAt": "2020-12-16T17:41:20Z", "commit": {"oid": "a651ee05735f8f365d433f16f9461699020467b2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cc546794ff04c45a828e876cbf54bbc3a21550d", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/5cc546794ff04c45a828e876cbf54bbc3a21550d", "committedDate": "2020-12-16T19:54:39Z", "message": "empty commit to trigger builds"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4889, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}