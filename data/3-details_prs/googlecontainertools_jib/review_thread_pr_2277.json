{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMjM3NDA0", "number": 2277, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo0NzowNFrODehtbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoxODoyMlrODeibcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzM2MTczOnYy", "diffSide": "RIGHT", "path": "docs/faq.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo0NzowNFrOFntcxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNjo0NzowNFrOFntcxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE4MzQyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n          \n          \n            \n            gradle --debug -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377183429", "createdAt": "2020-02-10T16:47:04Z", "author": {"login": "chanseokoh"}, "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,39 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+or\n+```sh\n+gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9be595a256aca5ca162be74ac37e29dced03dab4"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzQzMDE2OnYy", "diffSide": "RIGHT", "path": "docs/faq.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzowNDozMVrOFnuHew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzowNDozMVrOFnuHew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NDM2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The user had used Jib's ability to install extra files into the image ([Maven](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#adding-arbitrary-files-to-the-image), [Gradle](https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#adding-arbitrary-files-to-the-image)) to install a DLL by placing it in `src/main/jib/lib/file.dll`. This would normally cause the `file.dll` to be installed in the image as `/lib/file.dll`. But the user's base image used symbolic links for `/lib` and `/lib64`. Jib does not follow such symbolic links when creating the image. And at container initialization time, Docker treats these symlinks as a file, and thus the symbolic link was replaced with `/lib`. As a result, none of the system shared libraries were resolved and dynamically-linked programs failed.\n          \n          \n            \n            The user had used Jib's ability to install extra files into the image ([Maven](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#adding-arbitrary-files-to-the-image), [Gradle](https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#adding-arbitrary-files-to-the-image)) to install a library file by placing it in `src/main/jib/lib/libfoo.so`. This would normally cause the `libfoo.so` to be installed in the image as `/lib/libfoo.so`. But `/lib` and `/lib64` in the user's base image were symbolic links. Jib does not follow such symbolic links when creating the image. And at container initialization time, Docker treats these symlinks as a file, and thus the symbolic link was replaced with `/lib` as a new directory. As a result, none of the system shared libraries were resolved and dynamically-linked programs failed.", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377194363", "createdAt": "2020-02-10T17:04:31Z", "author": {"login": "chanseokoh"}, "path": "docs/faq.md", "diffHunk": "@@ -576,31 +612,25 @@ plugins {\n }\n ```\n \n-### How can I examine network traffic?\n+### Why won't my container start?\n \n-It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+There are some common reasons why containers fail on launch.\n \n-To see the HTTP traffic, create a `logging.properties` file with the following:\n-```\n-handlers = java.util.logging.ConsoleHandler\n-java.util.logging.ConsoleHandler.level=ALL\n+#### My shell script won't run\n+ \n+The default base image used by Jib, ([`distoless/java`](https://github.com/GoogleContainerTools/distroless/tree/master/java)), does not include a shell, and thus shell scripts won't launch.\n \n-# CONFIG hides authentication data\n-# ALL includes authentication data\n-com.google.api.client.http.level=CONFIG\n-```\n+Solution: use a different base image with a shell.\n \n-And then launch your build tool as follows:\n-```sh\n-mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+#### The container fails with `exec` errors \n+\n+A Jib user reported an error launching their container:\n ```\n-or\n-```sh\n-gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+standard_init_linux.go:211 exec user process caused \"no such file or directory\"\n ```\n \n-### How do I view debug logs for Jib?\n+On examining the container structure with [Dive](https://github.com/wagoodman/dive), the user discovered that the contents of the `/lib` directory had disappeared.\n \n-Maven: use `mvn -X -Djib.serialize=true` to enable more detailed logging and serialize Jib's actions.\n+The user had used Jib's ability to install extra files into the image ([Maven](https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#adding-arbitrary-files-to-the-image), [Gradle](https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#adding-arbitrary-files-to-the-image)) to install a DLL by placing it in `src/main/jib/lib/file.dll`. This would normally cause the `file.dll` to be installed in the image as `/lib/file.dll`. But the user's base image used symbolic links for `/lib` and `/lib64`. Jib does not follow such symbolic links when creating the image. And at container initialization time, Docker treats these symlinks as a file, and thus the symbolic link was replaced with `/lib`. As a result, none of the system shared libraries were resolved and dynamically-linked programs failed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9be595a256aca5ca162be74ac37e29dced03dab4"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzQzMDY2OnYy", "diffSide": "RIGHT", "path": "docs/faq.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzowNDo0MFrOFnuH0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoyMTozOVrOFnusag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NDQ1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n          \n          \n            \n            mvn -X -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377194450", "createdAt": "2020-02-10T17:04:40Z", "author": {"login": "chanseokoh"}, "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,39 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9be595a256aca5ca162be74ac37e29dced03dab4"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMzgxOA==", "bodyText": "I actually find it useful to just see the network traffic, independent of the Maven verbose logs.  I changed the note below to note that the -X/--gradle args can be useful.", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377203818", "createdAt": "2020-02-10T17:21:39Z", "author": {"login": "briandealwis"}, "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,39 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NDQ1MA=="}, "originalCommit": {"oid": "9be595a256aca5ca162be74ac37e29dced03dab4"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzQzNjgwOnYy", "diffSide": "RIGHT", "path": "docs/faq.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzowNjoyNlrOFnuLiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzowNjoyNlrOFnuLiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzE5NTQwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377195403", "createdAt": "2020-02-10T17:06:26Z", "author": {"login": "chanseokoh"}, "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,39 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+or\n+```sh\n+gradle -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9be595a256aca5ca162be74ac37e29dced03dab4"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzQ3OTU0OnYy", "diffSide": "RIGHT", "path": "docs/faq.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoxODoyMlrOFnulog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoyMjozNVrOFnuuiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMjA4Mg==", "bodyText": "I guess the button was pressed twice.", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377202082", "createdAt": "2020-02-10T17:18:22Z", "author": {"login": "chanseokoh"}, "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,41 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -X -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+or\n+```sh\n+gradle --debug -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).\n+If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de88a881ae6133397ba75dfc64344376d71ef7ea"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwNDM2Mw==", "bodyText": "The commit-change function is pretty slow!", "url": "https://github.com/GoogleContainerTools/jib/pull/2277#discussion_r377204363", "createdAt": "2020-02-10T17:22:35Z", "author": {"login": "briandealwis"}, "path": "docs/faq.md", "diffHunk": "@@ -526,6 +529,41 @@ If you encounter issues interacting with a registry other than `UNAUTHORIZED`, c\n \n Jib currently requires configuring your build tool to use the appropriate [Java networking properties](https://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html) (`https.proxyHost`, `https.proxyPort`, `https.proxyUser`, `https.proxyPassword`).\n \n+\n+### How can I examine network traffic?\n+\n+It can be useful to examine network traffic to diagnose connectivity issues. Jib uses the Google HTTP client library to interact with registries which logs HTTP requests using the JVM-provided `java.util.logging` facilities.  It is very helpful to serialize Jib's actions using the `jib.serialize` property.\n+\n+To see the HTTP traffic, create a `logging.properties` file with the following:\n+```\n+handlers = java.util.logging.ConsoleHandler\n+java.util.logging.ConsoleHandler.level=ALL\n+\n+# CONFIG hides authentication data\n+# ALL includes authentication data\n+com.google.api.client.http.level=CONFIG\n+```\n+\n+And then launch your build tool as follows:\n+```sh\n+mvn -X -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+or\n+```sh\n+gradle --debug -Djava.util.logging.config.file=path/to/log.properties -Djib.serialize=true -Djib.console=plain ...\n+```\n+If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).\n+If you don't need DEBUG-level logs, omit `-X` (Maven) or `--debug` (Gradle).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMjA4Mg=="}, "originalCommit": {"oid": "de88a881ae6133397ba75dfc64344376d71ef7ea"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 493, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}