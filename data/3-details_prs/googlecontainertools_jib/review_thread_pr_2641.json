{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NTYwNjMy", "number": 2641, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTowNDo0MlrOETYyVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTowNDo0MlrOETYyVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzY0NTAxOnYy", "diffSide": "RIGHT", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/JibContainerBuilderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTowNDo0MlrOG5GIhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0OTo1MVrOG5HpOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMjUwMQ==", "bodyText": "Generally you should limit the scope of try { } catch for this type of exception-checking tests, because theoretically other code (e.g., ImageConfiguration.build()) may also throw UnsupportedOperationException. We are checking the exception message which is very specific, but in the worst case, it's possible that a test becomes useless to catch a bug if the test doesn't check the message or the message is very generic.\n      ImageConfiguration imageConfiguration =\n          ImageConfiguration.builder(ImageReference.parse(\"base/image\")).build();\n      JibContainerBuilder containerBuilder = new JibContainerBuilder(imageConfiguration, spyBuildContextBuilder)\n          .setPlatforms(\n              ImmutableSet.of(\n                  new Platform(\"testArchitecture\", \"testOS\"),\n                  new Platform(\"testArchitecture1\", \"testOS2\")))\n    Containerizer containerizer = ...\n    try {\n          containerBuilder.containerize(containerizer);\nand I guess new Platform(\"arch1\", \"os1\"), new Platform(\"arch2\", \"os2\") could save a few lines (which isn't important at all but I think it's an easy way to save some of the expensive screen-estate).", "url": "https://github.com/GoogleContainerTools/jib/pull/2641#discussion_r462522501", "createdAt": "2020-07-29T19:04:42Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/JibContainerBuilderTest.java", "diffHunk": "@@ -362,4 +363,23 @@ public void setApplyContainerBuildPlan()\n     Assert.assertEquals(\n         ImmutableSet.of(new Platform(\"testArchitecture\", \"testOS\")), convertedPlan.getPlatforms());\n   }\n+\n+  @Test\n+  public void testContainerize_multiPlatformsList()\n+      throws InvalidImageReferenceException, CacheDirectoryCreationException, InterruptedException,\n+          RegistryException, IOException, ExecutionException {\n+    try {\n+      ImageConfiguration imageConfiguration =\n+          ImageConfiguration.builder(ImageReference.parse(\"base/image\")).build();\n+      new JibContainerBuilder(imageConfiguration, spyBuildContextBuilder)\n+          .setPlatforms(\n+              ImmutableSet.of(\n+                  new Platform(\"testArchitecture\", \"testOS\"),\n+                  new Platform(\"testArchitecture1\", \"testOS2\")))\n+          .containerize(Containerizer.to(RegistryImage.named(\"target/image\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aaa437a4c1471af8ecd04c1e432aca4ea35196c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NzI1Nw==", "bodyText": "Good Catch", "url": "https://github.com/GoogleContainerTools/jib/pull/2641#discussion_r462547257", "createdAt": "2020-07-29T19:49:51Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/JibContainerBuilderTest.java", "diffHunk": "@@ -362,4 +363,23 @@ public void setApplyContainerBuildPlan()\n     Assert.assertEquals(\n         ImmutableSet.of(new Platform(\"testArchitecture\", \"testOS\")), convertedPlan.getPlatforms());\n   }\n+\n+  @Test\n+  public void testContainerize_multiPlatformsList()\n+      throws InvalidImageReferenceException, CacheDirectoryCreationException, InterruptedException,\n+          RegistryException, IOException, ExecutionException {\n+    try {\n+      ImageConfiguration imageConfiguration =\n+          ImageConfiguration.builder(ImageReference.parse(\"base/image\")).build();\n+      new JibContainerBuilder(imageConfiguration, spyBuildContextBuilder)\n+          .setPlatforms(\n+              ImmutableSet.of(\n+                  new Platform(\"testArchitecture\", \"testOS\"),\n+                  new Platform(\"testArchitecture1\", \"testOS2\")))\n+          .containerize(Containerizer.to(RegistryImage.named(\"target/image\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUyMjUwMQ=="}, "originalCommit": {"oid": "1aaa437a4c1471af8ecd04c1e432aca4ea35196c"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 63, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}