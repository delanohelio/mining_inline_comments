{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzkyMTU0", "number": 2452, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoxNzoxOFrOD55Gug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODoxMjo1OVrOD578sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDMxMDM0OnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoxNzoxOFrOGRa1BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxNDoxMFrOGRdHBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxODUzMg==", "bodyText": "I think we can remove unmodifiableList for consistency. It's weird to sometimes return a modifiable list (line 242) and other times an unmodifiable one.", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420918532", "createdAt": "2020-05-06T16:17:18Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "diffHunk": "@@ -251,7 +252,17 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n           Xpp3Dom paths = extraDirectoriesConfiguration.getChild(\"paths\");\n           if (paths != null) {\n             // <extraDirectories><paths><path>...</path><path>...</path></paths></extraDirectories>\n-            return xpp3ToList(paths, Paths::get);\n+            // paths can contain either strings or ExtraDirectory objects\n+            List<Path> pathList = new ArrayList<>();\n+            for (Xpp3Dom path : paths.getChildren()) {\n+              Xpp3Dom from = path.getChild(\"from\");\n+              if (from != null) {\n+                pathList.add(Paths.get(from.getValue()));\n+              } else {\n+                pathList.add(Paths.get(path.getValue()));\n+              }\n+            }\n+            return Collections.unmodifiableList(pathList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9046468963609b0c5c972f44cdf6e2adaaf69c74"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1MzE4Ng==", "bodyText": "I think errorprone (?) complained about this same inconsistency before I added this. I thought Collections.singletonList and Collectors.toList were unmodifiable?", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420953186", "createdAt": "2020-05-06T17:09:59Z", "author": {"login": "TadCordle"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "diffHunk": "@@ -251,7 +252,17 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n           Xpp3Dom paths = extraDirectoriesConfiguration.getChild(\"paths\");\n           if (paths != null) {\n             // <extraDirectories><paths><path>...</path><path>...</path></paths></extraDirectories>\n-            return xpp3ToList(paths, Paths::get);\n+            // paths can contain either strings or ExtraDirectory objects\n+            List<Path> pathList = new ArrayList<>();\n+            for (Xpp3Dom path : paths.getChildren()) {\n+              Xpp3Dom from = path.getChild(\"from\");\n+              if (from != null) {\n+                pathList.add(Paths.get(from.getValue()));\n+              } else {\n+                pathList.add(Paths.get(path.getValue()));\n+              }\n+            }\n+            return Collections.unmodifiableList(pathList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxODUzMg=="}, "originalCommit": {"oid": "9046468963609b0c5c972f44cdf6e2adaaf69c74"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NTkwOA==", "bodyText": "Ah, singletonList() is immutable according to the Javadoc. And for Collectors.toList(), its Javadoc says,\n\nThere are no guarantees on the type, mutability, serializability, or thread-safety of the List returned\n\nI think we're good.", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420955908", "createdAt": "2020-05-06T17:14:10Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "diffHunk": "@@ -251,7 +252,17 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n           Xpp3Dom paths = extraDirectoriesConfiguration.getChild(\"paths\");\n           if (paths != null) {\n             // <extraDirectories><paths><path>...</path><path>...</path></paths></extraDirectories>\n-            return xpp3ToList(paths, Paths::get);\n+            // paths can contain either strings or ExtraDirectory objects\n+            List<Path> pathList = new ArrayList<>();\n+            for (Xpp3Dom path : paths.getChildren()) {\n+              Xpp3Dom from = path.getChild(\"from\");\n+              if (from != null) {\n+                pathList.add(Paths.get(from.getValue()));\n+              } else {\n+                pathList.add(Paths.get(path.getValue()));\n+              }\n+            }\n+            return Collections.unmodifiableList(pathList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkxODUzMg=="}, "originalCommit": {"oid": "9046468963609b0c5c972f44cdf6e2adaaf69c74"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDMyMjYzOnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/ExtraDirectory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoyMDoyOFrOGRa8-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzoxNjoyNVrOGRdM-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkyMDU3MA==", "bodyText": "Are we comparing instances of this class? Where? If not, we should probably remove equals and hashCode?", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420920570", "createdAt": "2020-05-06T16:20:28Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/ExtraDirectory.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** A bean that configures the source and destination of an extra directory. */\n+public class ExtraDirectory {\n+\n+  @Parameter private File from = new File(\"\");\n+  @Parameter private String into = \"/\";\n+\n+  // Need default constructor for Maven\n+  public ExtraDirectory() {}\n+\n+  public ExtraDirectory(File from, String into) {\n+    this.from = from;\n+    this.into = into;\n+  }\n+\n+  // Allows <path>source</path> shorthand instead of forcing\n+  // <path><from>source</from><into>/</into></path>\n+  public void set(File path) {\n+    this.from = path;\n+    this.into = \"/\";\n+  }\n+\n+  public Path getFrom() {\n+    return from.toPath();\n+  }\n+\n+  public void setFrom(File from) {\n+    this.from = from;\n+  }\n+\n+  String getInto() {\n+    return into;\n+  }\n+\n+  @Override\n+  public boolean equals(Object other) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9046468963609b0c5c972f44cdf6e2adaaf69c74"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1MTYzMQ==", "bodyText": "In tests, yes.", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420951631", "createdAt": "2020-05-06T17:07:36Z", "author": {"login": "TadCordle"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/ExtraDirectory.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** A bean that configures the source and destination of an extra directory. */\n+public class ExtraDirectory {\n+\n+  @Parameter private File from = new File(\"\");\n+  @Parameter private String into = \"/\";\n+\n+  // Need default constructor for Maven\n+  public ExtraDirectory() {}\n+\n+  public ExtraDirectory(File from, String into) {\n+    this.from = from;\n+    this.into = into;\n+  }\n+\n+  // Allows <path>source</path> shorthand instead of forcing\n+  // <path><from>source</from><into>/</into></path>\n+  public void set(File path) {\n+    this.from = path;\n+    this.into = \"/\";\n+  }\n+\n+  public Path getFrom() {\n+    return from.toPath();\n+  }\n+\n+  public void setFrom(File from) {\n+    this.from = from;\n+  }\n+\n+  String getInto() {\n+    return into;\n+  }\n+\n+  @Override\n+  public boolean equals(Object other) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkyMDU3MA=="}, "originalCommit": {"oid": "9046468963609b0c5c972f44cdf6e2adaaf69c74"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk1NzQzMg==", "bodyText": "Aha. Although it's going to be more lines for test code, I prefer removing these.", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420957432", "createdAt": "2020-05-06T17:16:25Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/ExtraDirectory.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** A bean that configures the source and destination of an extra directory. */\n+public class ExtraDirectory {\n+\n+  @Parameter private File from = new File(\"\");\n+  @Parameter private String into = \"/\";\n+\n+  // Need default constructor for Maven\n+  public ExtraDirectory() {}\n+\n+  public ExtraDirectory(File from, String into) {\n+    this.from = from;\n+    this.into = into;\n+  }\n+\n+  // Allows <path>source</path> shorthand instead of forcing\n+  // <path><from>source</from><into>/</into></path>\n+  public void set(File path) {\n+    this.from = path;\n+    this.into = \"/\";\n+  }\n+\n+  public Path getFrom() {\n+    return from.toPath();\n+  }\n+\n+  public void setFrom(File from) {\n+    this.from = from;\n+  }\n+\n+  String getInto() {\n+    return into;\n+  }\n+\n+  @Override\n+  public boolean equals(Object other) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkyMDU3MA=="}, "originalCommit": {"oid": "9046468963609b0c5c972f44cdf6e2adaaf69c74"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDM0MjA2OnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/ExtraDirectory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoyNTowMFrOGRbJOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjoyNTowMFrOGRbJOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkyMzcwNw==", "bodyText": "Can we name this ExtraDirectoryParameters and move it to JibPluginConfiguration for consistency?", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420923707", "createdAt": "2020-05-06T16:25:00Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/ExtraDirectory.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** A bean that configures the source and destination of an extra directory. */\n+public class ExtraDirectory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9046468963609b0c5c972f44cdf6e2adaaf69c74"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDc3NjE5OnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MojoCommon.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODoxMjo1OVrOGRfagg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODoxMjo1OVrOGRfagg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MzY2Ng==", "bodyText": "Not necessary, but import ... JibPluginConfiguration.ExtraDirectoryParameters to import the nested type may work?", "url": "https://github.com/GoogleContainerTools/jib/pull/2452#discussion_r420993666", "createdAt": "2020-05-06T18:12:59Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MojoCommon.java", "diffHunk": "@@ -94,15 +94,25 @@ static void finishUpdateChecker(\n    * @param jibPluginConfiguration the build configuration\n    * @return the list of resolved extra directories\n    */\n-  static List<Path> getExtraDirectories(JibPluginConfiguration jibPluginConfiguration) {\n-    List<Path> paths = jibPluginConfiguration.getExtraDirectories();\n-    if (!paths.isEmpty()) {\n-      return paths;\n+  static List<JibPluginConfiguration.ExtraDirectoryParameters> getExtraDirectories(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36770d8be18f6fdcf721cb8c96658727c52e468e"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 395, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}