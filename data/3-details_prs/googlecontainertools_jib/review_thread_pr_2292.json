{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTI2MDUz", "number": 2292, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOToyNjozOVrODgfNRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjowMDoxMVrODh7ZBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzkyMzI2OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldSyncParameters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOToyNjozOVrOFquEZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjowOTo0NFrOFqzOqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTMwMw==", "bodyText": "Does this comment apply when we use Path?", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380339303", "createdAt": "2020-02-17T19:26:39Z", "author": {"login": "briandealwis"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldSyncParameters.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldSyncParameters {\n+  private final Project project;\n+\n+  private Set<Path> excludes = Collections.emptySet();\n+\n+  @Inject\n+  public SkaffoldSyncParameters(Project project) {\n+    this.project = project;\n+  }\n+\n+  /**\n+   * Get the excludes directive for sync functionality in skaffold.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getExcludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa279a0bac5f3972d6b0376695df63b03a6552a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyMzg1MA==", "bodyText": "Oh yeah this comment was about inputs, copy pasta \ud83d\ude1e  Needs to be removed.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380423850", "createdAt": "2020-02-18T02:09:44Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldSyncParameters.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldSyncParameters {\n+  private final Project project;\n+\n+  private Set<Path> excludes = Collections.emptySet();\n+\n+  @Inject\n+  public SkaffoldSyncParameters(Project project) {\n+    this.project = project;\n+  }\n+\n+  /**\n+   * Get the excludes directive for sync functionality in skaffold.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getExcludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTMwMw=="}, "originalCommit": {"oid": "3fa279a0bac5f3972d6b0376695df63b03a6552a"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzkyNDQxOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOToyNzoyM1rOFquFLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOToyNzoyM1rOFquFLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTUwMA==", "bodyText": "Does this apply with Path too? (I don't see any String?)", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380339500", "createdAt": "2020-02-17T19:27:23Z", "author": {"login": "briandealwis"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldWatchParameters {\n+\n+  private final Project project;\n+\n+  private Set<Path> buildIncludes = Collections.emptySet();\n+  private Set<Path> includes = Collections.emptySet();\n+  private Set<Path> excludes = Collections.emptySet();\n+\n+  @Inject\n+  public SkaffoldWatchParameters(Project project) {\n+    this.project = project;\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getBuildIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.\n+    return buildIncludes;\n+  }\n+\n+  /**\n+   * Sets includes. {@code includes} can be any suitable object describing file paths convertible by\n+   * {@link Project#files} (such as {@link File}, {@code List<File>}, or {@code List<String>}).\n+   *\n+   * @param paths paths to set on includes\n+   */\n+  public void setBuildIncludes(Object paths) {\n+    this.buildIncludes =\n+        project\n+            .files(paths)\n+            .getFiles()\n+            .stream()\n+            .map(File::toPath)\n+            .map(Path::toAbsolutePath)\n+            .collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa279a0bac5f3972d6b0376695df63b03a6552a"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzkyNTQ2OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOToyNzo1NVrOFquFzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOToyNzo1NVrOFquFzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTY2MA==", "bodyText": "Does this apply to Path too?  I don't see a String?", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380339660", "createdAt": "2020-02-17T19:27:55Z", "author": {"login": "briandealwis"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldWatchParameters {\n+\n+  private final Project project;\n+\n+  private Set<Path> buildIncludes = Collections.emptySet();\n+  private Set<Path> includes = Collections.emptySet();\n+  private Set<Path> excludes = Collections.emptySet();\n+\n+  @Inject\n+  public SkaffoldWatchParameters(Project project) {\n+    this.project = project;\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getBuildIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.\n+    return buildIncludes;\n+  }\n+\n+  /**\n+   * Sets includes. {@code includes} can be any suitable object describing file paths convertible by\n+   * {@link Project#files} (such as {@link File}, {@code List<File>}, or {@code List<String>}).\n+   *\n+   * @param paths paths to set on includes\n+   */\n+  public void setBuildIncludes(Object paths) {\n+    this.buildIncludes =\n+        project\n+            .files(paths)\n+            .getFiles()\n+            .stream()\n+            .map(File::toPath)\n+            .map(Path::toAbsolutePath)\n+            .collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * A set of absolute paths to include with skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getIncludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.\n+    return includes;\n+  }\n+\n+  /**\n+   * Sets includes. {@code includes} can be any suitable object describing file paths convertible by\n+   * {@link Project#files} (such as {@link File}, {@code List<File>}, or {@code List<String>}).\n+   *\n+   * @param paths paths to set on includes\n+   */\n+  public void setIncludes(Object paths) {\n+    this.includes =\n+        project\n+            .files(paths)\n+            .getFiles()\n+            .stream()\n+            .map(File::toPath)\n+            .map(Path::toAbsolutePath)\n+            .collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * A set of absolute paths to exclude from skaffold watching.\n+   *\n+   * @return a set of absolute paths\n+   */\n+  @Internal\n+  public Set<Path> getExcludes() {\n+    // Gradle warns about @Input annotations on File objects, so we have to expose a getter for a\n+    // String to make them go away.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa279a0bac5f3972d6b0376695df63b03a6552a"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjcyODU5OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjowNjo0NFrOFrIeTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjowNjo0NFrOFrIeTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc3MTkxNg==", "bodyText": "Javadoc", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380771916", "createdAt": "2020-02-18T16:06:44Z", "author": {"login": "TadCordle"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldParameters.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import com.google.common.base.Preconditions;\n+import javax.inject.Inject;\n+import org.gradle.api.Action;\n+import org.gradle.api.Project;\n+import org.gradle.api.model.ObjectFactory;\n+import org.gradle.api.tasks.Nested;\n+\n+public class SkaffoldParameters {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Njc0MjEyOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldSyncParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjowOTozMlrOFrImFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjowOTozMlrOFrImFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc3MzkxMQ==", "bodyText": "Javadoc", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380773911", "createdAt": "2020-02-18T16:09:32Z", "author": {"login": "TadCordle"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldSyncParameters.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldSyncParameters {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Njc1MjIzOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjoxMTo1NlrOFrIsVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjoxMTo1NlrOFrIsVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc3NTUxMA==", "bodyText": "Javadoc", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380775510", "createdAt": "2020-02-18T16:11:56Z", "author": {"login": "TadCordle"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SkaffoldWatchParameters.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.gradle.skaffold;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.inject.Inject;\n+import org.gradle.api.Project;\n+import org.gradle.api.tasks.Internal;\n+\n+public class SkaffoldWatchParameters {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzA1NDgxOnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzoyODozMFrOFrLnKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOTowMzozMlrOFrOqiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMzMzOQ==", "bodyText": "Is this a debug print or is it actually needed?", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380823339", "createdAt": "2020-02-18T17:28:30Z", "author": {"login": "TadCordle"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "diffHunk": "@@ -207,6 +216,8 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n     }\n \n     try {\n+      System.out.println(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3Mjg3MA==", "bodyText": "This should've broken the tests... weird.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380872870", "createdAt": "2020-02-18T19:02:31Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "diffHunk": "@@ -207,6 +216,8 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n     }\n \n     try {\n+      System.out.println(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMzMzOQ=="}, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MzM1Mg==", "bodyText": "oh maven tests are different than gradle ones... nvm.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380873352", "createdAt": "2020-02-18T19:03:32Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/FilesMojoV2.java", "diffHunk": "@@ -207,6 +216,8 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n     }\n \n     try {\n+      System.out.println(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMzMzOQ=="}, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzA3NjM4OnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzozNDoyOFrOFrL0LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzozNDoyOFrOFrL0LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyNjY2OQ==", "bodyText": "Javadoc, probably for the inner classes too.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380826669", "createdAt": "2020-02-18T17:34:28Z", "author": {"login": "TadCordle"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+public class SkaffoldConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzE1NzIxOnYy", "diffSide": "RIGHT", "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo1ODoxNFrOFrMmVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo1ODoxNFrOFrMmVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzOTUxMQ==", "bodyText": "Q: Why not just new HashSet<>()?", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380839511", "createdAt": "2020-02-18T17:58:14Z", "author": {"login": "TadCordle"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -213,18 +216,39 @@ public static String getSkaffoldSyncMap(\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))\n             .forEach(syncMap::addGenerated);\n       } else { // this is a direct layer\n         layer\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))\n             .forEach(syncMap::addDirect);\n       }\n     }\n     return syncMap.getJsonString();\n   }\n \n+  /** Expand directories to files (excludes directory paths). */\n+  static Set<Path> getAllFiles(Set<Path> paths) throws IOException {\n+    Set<Path> expanded = Sets.newHashSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzE3NDU2OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODowMzozNVrOFrMw6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODowMzozNVrOFrMw6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg0MjIxNw==", "bodyText": "This should work.\n          skaffold.sync(sync -> sync.setExcludes(fakeProject.files(\"sync1\", \"sync2\")));", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380842217", "createdAt": "2020-02-18T18:03:35Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -240,6 +242,38 @@ public void testOutputFiles() {\n         testJibExtension.getOutputPaths().getTarPath());\n   }\n \n+  @Test\n+  public void testSkaffold() {\n+    testJibExtension.skaffold(\n+        skaffold -> {\n+          skaffold.sync(\n+              sync -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad19dd61fb2dea11aca7fc89c8f9f878859378fc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzYwMjEzOnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDoxNToxNVrOFrQ8ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMDo0ODoxOFrOFrR3kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA==", "bodyText": "I think we can delete this field. It's not being used, since we parse this explicitly in FilesMojoV2.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380910730", "createdAt": "2020-02-18T20:15:15Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** Skaffold specific Jib plugin configuration options. */\n+public class SkaffoldConfiguration {\n+\n+  /** Skaffold specific Jib plugin configuration for files to watch. */\n+  public static class Watch {\n+    @Parameter List<File> buildIncludes = Collections.emptyList();\n+    @Parameter List<File> includes = Collections.emptyList();\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  /** Skaffold specific Jib plugin configuration for files to sync. */\n+  public static class Sync {\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  @Parameter Watch watch = new Watch();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27be3fdbaf8947816287d24268090559ef4f9d9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyMTQ4MA==", "bodyText": "I went back and forth on that, I think this helps define the structure. Even though we're parsing it manually in Xpp3Dom parser, and never delegate to maven to populate this.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380921480", "createdAt": "2020-02-18T20:38:49Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** Skaffold specific Jib plugin configuration options. */\n+public class SkaffoldConfiguration {\n+\n+  /** Skaffold specific Jib plugin configuration for files to watch. */\n+  public static class Watch {\n+    @Parameter List<File> buildIncludes = Collections.emptyList();\n+    @Parameter List<File> includes = Collections.emptyList();\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  /** Skaffold specific Jib plugin configuration for files to sync. */\n+  public static class Sync {\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  @Parameter Watch watch = new Watch();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}, "originalCommit": {"oid": "b27be3fdbaf8947816287d24268090559ef4f9d9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyMzEyMg==", "bodyText": "I really wish we could just do this using our own annotation processor at compile time though.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380923122", "createdAt": "2020-02-18T20:42:22Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** Skaffold specific Jib plugin configuration options. */\n+public class SkaffoldConfiguration {\n+\n+  /** Skaffold specific Jib plugin configuration for files to watch. */\n+  public static class Watch {\n+    @Parameter List<File> buildIncludes = Collections.emptyList();\n+    @Parameter List<File> includes = Collections.emptyList();\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  /** Skaffold specific Jib plugin configuration for files to sync. */\n+  public static class Sync {\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  @Parameter Watch watch = new Watch();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}, "originalCommit": {"oid": "b27be3fdbaf8947816287d24268090559ef4f9d9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyNDUzMg==", "bodyText": "Yeah, leaving this is OK.\nI remember the reason that we parse this manually in FilesMojoV2 is about running a goal only at root vs. in every sub-module?", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380924532", "createdAt": "2020-02-18T20:45:26Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** Skaffold specific Jib plugin configuration options. */\n+public class SkaffoldConfiguration {\n+\n+  /** Skaffold specific Jib plugin configuration for files to watch. */\n+  public static class Watch {\n+    @Parameter List<File> buildIncludes = Collections.emptyList();\n+    @Parameter List<File> includes = Collections.emptyList();\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  /** Skaffold specific Jib plugin configuration for files to sync. */\n+  public static class Sync {\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  @Parameter Watch watch = new Watch();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}, "originalCommit": {"oid": "b27be3fdbaf8947816287d24268090559ef4f9d9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkyNTg0Mw==", "bodyText": "Correct, aggregator =  true Mojos cannot populate a parameter for a single module.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r380925843", "createdAt": "2020-02-18T20:48:18Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/skaffold/SkaffoldConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.maven.skaffold;\n+\n+import java.io.File;\n+import java.util.Collections;\n+import java.util.List;\n+import org.apache.maven.plugins.annotations.Parameter;\n+\n+/** Skaffold specific Jib plugin configuration options. */\n+public class SkaffoldConfiguration {\n+\n+  /** Skaffold specific Jib plugin configuration for files to watch. */\n+  public static class Watch {\n+    @Parameter List<File> buildIncludes = Collections.emptyList();\n+    @Parameter List<File> includes = Collections.emptyList();\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  /** Skaffold specific Jib plugin configuration for files to sync. */\n+  public static class Sync {\n+    @Parameter List<File> excludes = Collections.emptyList();\n+  }\n+\n+  @Parameter Watch watch = new Watch();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxMDczMA=="}, "originalCommit": {"oid": "b27be3fdbaf8947816287d24268090559ef4f9d9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjMyODc3OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SyncMapTask.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMDozNToyNVrOFsiRHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMDo0MzowNVrOFsieOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg==", "bodyText": "So where do includes come in?", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382243102", "createdAt": "2020-02-20T20:35:25Z", "author": {"login": "briandealwis"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SyncMapTask.java", "diffHunk": "@@ -77,7 +77,10 @@ public void listFilesAndTargets() {\n \n       try {\n         String syncMapJson =\n-            PluginConfigurationProcessor.getSkaffoldSyncMap(configuration, projectProperties);\n+            PluginConfigurationProcessor.getSkaffoldSyncMap(\n+                configuration,\n+                projectProperties,\n+                jibExtension.getSkaffold().getSync().getExcludes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0Mzg0NA==", "bodyText": "Nm, I forgot the distinction between sync and watch", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382243844", "createdAt": "2020-02-20T20:37:01Z", "author": {"login": "briandealwis"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SyncMapTask.java", "diffHunk": "@@ -77,7 +77,10 @@ public void listFilesAndTargets() {\n \n       try {\n         String syncMapJson =\n-            PluginConfigurationProcessor.getSkaffoldSyncMap(configuration, projectProperties);\n+            PluginConfigurationProcessor.getSkaffoldSyncMap(\n+                configuration,\n+                projectProperties,\n+                jibExtension.getSkaffold().getSync().getExcludes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg=="}, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NjIzMw==", "bodyText": "like when are they useful?\nfor user configured modifications\nsome resource -> [user-task] -> output -> [jib-build] -> container\nnormally jib would just watch output, but in reality it should watch some resource,\nso user includes some resource, excludes output", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382246233", "createdAt": "2020-02-20T20:42:34Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SyncMapTask.java", "diffHunk": "@@ -77,7 +77,10 @@ public void listFilesAndTargets() {\n \n       try {\n         String syncMapJson =\n-            PluginConfigurationProcessor.getSkaffoldSyncMap(configuration, projectProperties);\n+            PluginConfigurationProcessor.getSkaffoldSyncMap(\n+                configuration,\n+                projectProperties,\n+                jibExtension.getSkaffold().getSync().getExcludes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg=="}, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NjQ1OA==", "bodyText": "There is maybe someway to intelligently do this? like decide if output was an actual output to some other task, but I think it's not straightforward.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382246458", "createdAt": "2020-02-20T20:43:05Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/skaffold/SyncMapTask.java", "diffHunk": "@@ -77,7 +77,10 @@ public void listFilesAndTargets() {\n \n       try {\n         String syncMapJson =\n-            PluginConfigurationProcessor.getSkaffoldSyncMap(configuration, projectProperties);\n+            PluginConfigurationProcessor.getSkaffoldSyncMap(\n+                configuration,\n+                projectProperties,\n+                jibExtension.getSkaffold().getSync().getExcludes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0MzEwMg=="}, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjM1NTIxOnYy", "diffSide": "RIGHT", "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMDo0NTowNlrOFsih8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTowOTo1NVrOFsjRtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA==", "bodyText": "Hmm, I'm wondering if this works with paths where the project ancestry has symlinks.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382247408", "createdAt": "2020-02-20T20:45:06Z", "author": {"login": "briandealwis"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -213,18 +215,39 @@ public static String getSkaffoldSyncMap(\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1MjY4OA==", "bodyText": "interesting... I'll check it out.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382252688", "createdAt": "2020-02-20T20:56:07Z", "author": {"login": "loosebazooka"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -213,18 +215,39 @@ public static String getSkaffoldSyncMap(\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA=="}, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NTY3OQ==", "bodyText": "might have to isSameFile it?", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382255679", "createdAt": "2020-02-20T21:00:25Z", "author": {"login": "loosebazooka"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -213,18 +215,39 @@ public static String getSkaffoldSyncMap(\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA=="}, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1OTYzNg==", "bodyText": "Ok both ok since they seem to expand the project path.", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382259636", "createdAt": "2020-02-20T21:09:55Z", "author": {"login": "briandealwis"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -213,18 +215,39 @@ public static String getSkaffoldSyncMap(\n             .getLayerEntries()\n             .stream()\n             .filter(layerEntry -> Files.isRegularFile(layerEntry.getSourceFile()))\n+            .filter(\n+                layerEntry ->\n+                    !excludesExpanded.contains(layerEntry.getSourceFile().toAbsolutePath()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI0NzQwOA=="}, "originalCommit": {"oid": "abd7b41d43b4bf223c95432bcdb6cc0d0068af75"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTAyNTY1OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo1OTo1NVrOFs741w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTo1OTo1NVrOFs741w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2Mjg3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - New skaffold configuration options that modify how jib's build config is presetned to skaffold ([#2292](https://github.com/GoogleContainerTools/jib/pull/2292)):\n          \n          \n            \n            - New skaffold configuration options that modify how jib's build config is presented to skaffold ([#2292](https://github.com/GoogleContainerTools/jib/pull/2292)):", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382662871", "createdAt": "2020-02-21T15:59:55Z", "author": {"login": "TadCordle"}, "path": "jib-gradle-plugin/CHANGELOG.md", "diffHunk": "@@ -5,6 +5,11 @@ All notable changes to this project will be documented in this file.\n \n ### Added\n - Additionally reads credentials from `~/.docker/.dockerconfigjson` and legacy Docker config (`~/.docker/.dockercfg`). Also searches for `$HOME/.docker/*` (in addition to current `System.get(\"user.home\")/.docker/*`). This may help retrieve credentials, for example, on Kubernetes. ([#2260](https://github.com/GoogleContainerTools/jib/issues/2260))\n+- New skaffold configuration options that modify how jib's build config is presetned to skaffold ([#2292](https://github.com/GoogleContainerTools/jib/pull/2292)):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a6ed8d5a52b1b9512f506db9f6eac6b565dada"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTAyNjYyOnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjowMDoxMVrOFs75Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjowMDoxMVrOFs75Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2MzAxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - New skaffold configuration options that modify how jib's build config is presetned to skaffold ([#2292](https://github.com/GoogleContainerTools/jib/pull/2292)):\n          \n          \n            \n            - New skaffold configuration options that modify how jib's build config is presented to skaffold ([#2292](https://github.com/GoogleContainerTools/jib/pull/2292)):", "url": "https://github.com/GoogleContainerTools/jib/pull/2292#discussion_r382663011", "createdAt": "2020-02-21T16:00:11Z", "author": {"login": "TadCordle"}, "path": "jib-maven-plugin/CHANGELOG.md", "diffHunk": "@@ -5,6 +5,11 @@ All notable changes to this project will be documented in this file.\n \n ### Added\n - Additionally reads credentials from `~/.docker/.dockerconfigjson` and legacy Docker config (`~/.docker/.dockercfg`). Also searches for `$HOME/.docker/*` (in addition to current `System.get(\"user.home\")/.docker/*`). This may help retrieve credentials, for example, on Kubernetes. ([#2260](https://github.com/GoogleContainerTools/jib/issues/2260))\n+- New skaffold configuration options that modify how jib's build config is presetned to skaffold ([#2292](https://github.com/GoogleContainerTools/jib/pull/2292)):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4a6ed8d5a52b1b9512f506db9f6eac6b565dada"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 506, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}