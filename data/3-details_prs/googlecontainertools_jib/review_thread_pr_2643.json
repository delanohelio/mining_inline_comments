{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NzU5MzI2", "number": 2643, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjoyMjoxN1rOETwJjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjoyMzoxM1rOEUq9zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTQ3Mjc2OnYy", "diffSide": "RIGHT", "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjoyMjoxN1rOG5qc8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjoyMjoxN1rOG5qc8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExNzU1Mw==", "bodyText": "I'm not sure we have to deprecate everything in here. If the new methods do the same thing, there is no reason to make the new methods.\nWe might only want to really change the methods that expose the bifunction in the api?", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r463117553", "createdAt": "2020-07-30T16:22:17Z", "author": {"login": "loosebazooka"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -89,7 +89,9 @@ public Builder addEntry(FileEntry entry) {\n      * @param pathInContainer the path in the container file system corresponding to the {@code\n      *     sourceFile}\n      * @return this\n+     * @deprecated Use {@link #newAddEntry(Path, AbsoluteUnixPath)}\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b10c3bcde112818ac8058d09902b48b7405dee9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTQ3NjkzOnYy", "diffSide": "RIGHT", "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjoyMzoyMlrOG5qfgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTozNDo0MFrOG50pLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExODIwOQ==", "bodyText": "In general we try not to do this: Create a new method with a new name and change the name when deprecating an old method. Someone trying to use this new api will inevitably have to change their code again when we rename.", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r463118209", "createdAt": "2020-07-30T16:23:22Z", "author": {"login": "loosebazooka"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -300,6 +315,170 @@ public Builder addEntryRecursive(\n       return this;\n     }\n \n+    /**\n+     * Adds an entry to the layer. Only adds the single source file to the exact path in the\n+     * container file system.\n+     *\n+     * <p>For example, {@code newAddEntry(Paths.get(\"myfile\"),\n+     * AbsoluteUnixPath.get(\"/path/in/container\"))} adds a file {@code myfile} to the container file\n+     * system at {@code /path/in/container}.\n+     *\n+     * <p>For example, {@code newAddEntry(Paths.get(\"mydirectory\"),\n+     * AbsoluteUnixPath.get(\"/path/in/container\"))} adds a directory {@code mydirectory/} to the\n+     * container file system at {@code /path/in/container/}. This does <b>not</b> add the contents\n+     * of {@code mydirectory}.\n+     *\n+     * @param sourceFile the source file to add to the layer\n+     * @param pathInContainer the path in the container file system corresponding to the {@code\n+     *     sourceFile}\n+     * @return this\n+     */\n+    // TODO: Rename this method once deprecated methods have been removed.\n+    public Builder newAddEntry(Path sourceFile, AbsoluteUnixPath pathInContainer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b10c3bcde112818ac8058d09902b48b7405dee9"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NDUyNw==", "bodyText": "Ah that is good to know. Agreed, this would be a hassle for the user of the method.", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r463284527", "createdAt": "2020-07-30T21:34:40Z", "author": {"login": "mpeddada1"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -300,6 +315,170 @@ public Builder addEntryRecursive(\n       return this;\n     }\n \n+    /**\n+     * Adds an entry to the layer. Only adds the single source file to the exact path in the\n+     * container file system.\n+     *\n+     * <p>For example, {@code newAddEntry(Paths.get(\"myfile\"),\n+     * AbsoluteUnixPath.get(\"/path/in/container\"))} adds a file {@code myfile} to the container file\n+     * system at {@code /path/in/container}.\n+     *\n+     * <p>For example, {@code newAddEntry(Paths.get(\"mydirectory\"),\n+     * AbsoluteUnixPath.get(\"/path/in/container\"))} adds a directory {@code mydirectory/} to the\n+     * container file system at {@code /path/in/container/}. This does <b>not</b> add the contents\n+     * of {@code mydirectory}.\n+     *\n+     * @param sourceFile the source file to add to the layer\n+     * @param pathInContainer the path in the container file system corresponding to the {@code\n+     *     sourceFile}\n+     * @return this\n+     */\n+    // TODO: Rename this method once deprecated methods have been removed.\n+    public Builder newAddEntry(Path sourceFile, AbsoluteUnixPath pathInContainer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExODIwOQ=="}, "originalCommit": {"oid": "5b10c3bcde112818ac8058d09902b48b7405dee9"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTA1MDIzOnYy", "diffSide": "RIGHT", "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjowNzowMlrOG6_iOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo0MjoyOFrOG7Eqbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxMTU0NA==", "bodyText": "addEntry(Path, AbsoluteUnixPath, Instant) is currently not used. Should it still remain in the class?", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r464511544", "createdAt": "2020-08-03T16:07:02Z", "author": {"login": "mpeddada1"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -133,7 +132,7 @@ public Builder addEntry(\n       return addEntry(\n           sourceFile,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a36edbfc8b5cd5df6d3782ce4b4f46edfbf6d62d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxNjA2MA==", "bodyText": "I'd say yes. c.g.c.t.j.api.buildplan is the public API of the \"Container Build Plan\" library. We may not use the method internally, but external users may be using it (and they always do).", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r464516060", "createdAt": "2020-08-03T16:14:58Z", "author": {"login": "chanseokoh"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -133,7 +132,7 @@ public Builder addEntry(\n       return addEntry(\n           sourceFile,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxMTU0NA=="}, "originalCommit": {"oid": "a36edbfc8b5cd5df6d3782ce4b4f46edfbf6d62d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU5NTU2Ng==", "bodyText": "Oh I see! Thanks for the explanation:)", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r464595566", "createdAt": "2020-08-03T18:42:28Z", "author": {"login": "mpeddada1"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -133,7 +132,7 @@ public Builder addEntry(\n       return addEntry(\n           sourceFile,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUxMTU0NA=="}, "originalCommit": {"oid": "a36edbfc8b5cd5df6d3782ce4b4f46edfbf6d62d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMTEwOTI2OnYy", "diffSide": "RIGHT", "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNjoyMzoxM1rOG7AGAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxODo0MDo1NlrOG7En0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUyMDcwNw==", "bodyText": "Now I think the name getFilePermissions() is redundant and we can just go with FilePermissionsProvider.get(). I've seen this naming pattern in many places. @loosebazooka WDYT?", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r464520707", "createdAt": "2020-08-03T16:23:13Z", "author": {"login": "chanseokoh"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -94,7 +93,7 @@ public Builder addEntry(Path sourceFile, AbsoluteUnixPath pathInContainer) {\n       return addEntry(\n           sourceFile,\n           pathInContainer,\n-          DEFAULT_FILE_PERMISSIONS_PROVIDER.apply(sourceFile, pathInContainer));\n+          DEFAULT_FILE_PERMISSIONS_PROVIDER.getFilePermissions(sourceFile, pathInContainer));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a36edbfc8b5cd5df6d3782ce4b4f46edfbf6d62d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU5MTc5MQ==", "bodyText": "Yeah get makes sense to me.", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r464591791", "createdAt": "2020-08-03T18:34:30Z", "author": {"login": "loosebazooka"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -94,7 +93,7 @@ public Builder addEntry(Path sourceFile, AbsoluteUnixPath pathInContainer) {\n       return addEntry(\n           sourceFile,\n           pathInContainer,\n-          DEFAULT_FILE_PERMISSIONS_PROVIDER.apply(sourceFile, pathInContainer));\n+          DEFAULT_FILE_PERMISSIONS_PROVIDER.getFilePermissions(sourceFile, pathInContainer));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUyMDcwNw=="}, "originalCommit": {"oid": "a36edbfc8b5cd5df6d3782ce4b4f46edfbf6d62d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU5MjQwNA==", "bodyText": "Lets put that change in here and then merge the PR.", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r464592404", "createdAt": "2020-08-03T18:35:41Z", "author": {"login": "loosebazooka"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -94,7 +93,7 @@ public Builder addEntry(Path sourceFile, AbsoluteUnixPath pathInContainer) {\n       return addEntry(\n           sourceFile,\n           pathInContainer,\n-          DEFAULT_FILE_PERMISSIONS_PROVIDER.apply(sourceFile, pathInContainer));\n+          DEFAULT_FILE_PERMISSIONS_PROVIDER.getFilePermissions(sourceFile, pathInContainer));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUyMDcwNw=="}, "originalCommit": {"oid": "a36edbfc8b5cd5df6d3782ce4b4f46edfbf6d62d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDU5NDg5OA==", "bodyText": "That's a good idea.", "url": "https://github.com/GoogleContainerTools/jib/pull/2643#discussion_r464594898", "createdAt": "2020-08-03T18:40:56Z", "author": {"login": "mpeddada1"}, "path": "jib-build-plan/src/main/java/com/google/cloud/tools/jib/api/buildplan/FileEntriesLayer.java", "diffHunk": "@@ -94,7 +93,7 @@ public Builder addEntry(Path sourceFile, AbsoluteUnixPath pathInContainer) {\n       return addEntry(\n           sourceFile,\n           pathInContainer,\n-          DEFAULT_FILE_PERMISSIONS_PROVIDER.apply(sourceFile, pathInContainer));\n+          DEFAULT_FILE_PERMISSIONS_PROVIDER.getFilePermissions(sourceFile, pathInContainer));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDUyMDcwNw=="}, "originalCommit": {"oid": "a36edbfc8b5cd5df6d3782ce4b4f46edfbf6d62d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 68, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}