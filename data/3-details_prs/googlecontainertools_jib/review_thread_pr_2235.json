{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNDYyNjg0", "number": 2235, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTozNjo0N1rODZiTxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODozNDowNlrODp-azw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTAzMTEwOnYy", "diffSide": "RIGHT", "path": "jib-cli/README.md", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTozNjo0N1rOFf-fQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxOTozMjo0N1rOF5gyDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw==", "bodyText": "We can address this later, but because this requires installing JRE and Gradle, I think we should provide pre-compiled binaries, especially when considering Jib CLI is very general and isn't bound to Java developers.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369073987", "createdAt": "2020-01-21T15:36:47Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/README.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Jib CLI\n+\n+<img src=\"https://img.shields.io/badge/status-experimental-orange\">\n+\n+`jib` is a command-line utility for building containers images from file system content. \n+It serves as a demonstration of [Jib Core](https://github.com/GoogleContainerTools/jib/tree/master/jib-core),\n+a Java library for building containers without Docker.\n+\n+This CLI tool is _experimental_ and its options and structure\n+are almost certain to change.\n+\n+## Building\n+\n+Use the `application` plugin's `installDist` task to create a runnable installation.\n+```sh\n+$ ../gradlew installDist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEwOTQxOA==", "bodyText": "The distribution doesn't require Gradle, but it does require a JRE (as does Gradle and Maven).  But otherwise 100% agreed: the real end-goal is to use Graal's native-image to produce an executable, but that's not easy to do with the most recent release of Graal (yet).", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369109418", "createdAt": "2020-01-21T16:33:31Z", "author": {"login": "briandealwis"}, "path": "jib-cli/README.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Jib CLI\n+\n+<img src=\"https://img.shields.io/badge/status-experimental-orange\">\n+\n+`jib` is a command-line utility for building containers images from file system content. \n+It serves as a demonstration of [Jib Core](https://github.com/GoogleContainerTools/jib/tree/master/jib-core),\n+a Java library for building containers without Docker.\n+\n+This CLI tool is _experimental_ and its options and structure\n+are almost certain to change.\n+\n+## Building\n+\n+Use the `application` plugin's `installDist` task to create a runnable installation.\n+```sh\n+$ ../gradlew installDist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyMjA2OQ==", "bodyText": "I meant by Gradle that to obtain Jib CLI, the doc says to run ./gradlew installDist. I wonder if we can \"pre-compile\" gradlew installDist on Linux, Mac, and Windows, and distribute them (whatever it is)?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369122069", "createdAt": "2020-01-21T16:54:46Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/README.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Jib CLI\n+\n+<img src=\"https://img.shields.io/badge/status-experimental-orange\">\n+\n+`jib` is a command-line utility for building containers images from file system content. \n+It serves as a demonstration of [Jib Core](https://github.com/GoogleContainerTools/jib/tree/master/jib-core),\n+a Java library for building containers without Docker.\n+\n+This CLI tool is _experimental_ and its options and structure\n+are almost certain to change.\n+\n+## Building\n+\n+Use the `application` plugin's `installDist` task to create a runnable installation.\n+```sh\n+$ ../gradlew installDist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMTY0Nw==", "bodyText": "Ah so we talked about. We can't offer distributed binaries unless we go through an official launch process -- so that will as you mention have to be addressed later.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395821647", "createdAt": "2020-03-20T18:32:50Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/README.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Jib CLI\n+\n+<img src=\"https://img.shields.io/badge/status-experimental-orange\">\n+\n+`jib` is a command-line utility for building containers images from file system content. \n+It serves as a demonstration of [Jib Core](https://github.com/GoogleContainerTools/jib/tree/master/jib-core),\n+a Java library for building containers without Docker.\n+\n+This CLI tool is _experimental_ and its options and structure\n+are almost certain to change.\n+\n+## Building\n+\n+Use the `application` plugin's `installDist` task to create a runnable installation.\n+```sh\n+$ ../gradlew installDist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MDI1NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395850254", "createdAt": "2020-03-20T19:32:47Z", "author": {"login": "briandealwis"}, "path": "jib-cli/README.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Jib CLI\n+\n+<img src=\"https://img.shields.io/badge/status-experimental-orange\">\n+\n+`jib` is a command-line utility for building containers images from file system content. \n+It serves as a demonstration of [Jib Core](https://github.com/GoogleContainerTools/jib/tree/master/jib-core),\n+a Java library for building containers without Docker.\n+\n+This CLI tool is _experimental_ and its options and structure\n+are almost certain to change.\n+\n+## Building\n+\n+Use the `application` plugin's `installDist` task to create a runnable installation.\n+```sh\n+$ ../gradlew installDist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTA1NjkyOnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTo0MzoyOVrOFf-vgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjo1NjowOVrOFgBeUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3ODE0Nw==", "bodyText": "I'm curious how all these work out as a CLI tool. Does it not require a JRE? Is it a single executable binary that embeds all transitive dependency JARs? Or, does it cache dependencies under ~/.m2?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369078147", "createdAt": "2020-01-21T15:43:29Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,35 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.Cram\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTExMDQwMw==", "bodyText": "Picocli is a nice library for processing command-line arguments.  It also supports more sophisticated command-groups (e.g., jib build ... vs jib jar ... or jib inspect ...), though this code isn't taking advantage of these command-groups yet.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369110403", "createdAt": "2020-01-21T16:35:12Z", "author": {"login": "briandealwis"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,35 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.Cram\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3ODE0Nw=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyMjg5OA==", "bodyText": "Hmm... I don't think I got the answers for my questions, but I think I'll just try this branch myself and see what ./gradlew installDist generates and how exactly it works on my machine.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369122898", "createdAt": "2020-01-21T16:56:09Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,35 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.Cram\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3ODE0Nw=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MTA2NzI0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/ActualTimestampProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTo0NjowMFrOFf-1xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxNzozOVrOF42CAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA==", "bodyText": "Is this used somewhere? I can't find it. I'm wary of people using this provider if it's going to be used for creating an image, because it greatly undermines reproducibility of a layer.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369079748", "createdAt": "2020-01-21T15:46:00Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/ActualTimestampProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli;\n+\n+import com.google.cloud.tools.jib.api.AbsoluteUnixPath;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.time.Instant;\n+import java.util.function.BiFunction;\n+\n+/** A timetamp provider that uses the actual file last-modification time from the file-system. */\n+class ActualTimestampProvider implements BiFunction<Path, AbsoluteUnixPath, Instant> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyMjM1MA==", "bodyText": "It's pulled in from LayerParserDefinition#parseTimestampsDirective().", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369122350", "createdAt": "2020-01-21T16:55:16Z", "author": {"login": "briandealwis"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/ActualTimestampProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli;\n+\n+import com.google.cloud.tools.jib.api.AbsoluteUnixPath;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.time.Instant;\n+import java.util.function.BiFunction;\n+\n+/** A timetamp provider that uses the actual file last-modification time from the file-system. */\n+class ActualTimestampProvider implements BiFunction<Path, AbsoluteUnixPath, Instant> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0OTgyNQ==", "bodyText": "So the question is, should we drop support for ts=actual? Jib plugins don't support it (and will never after we build an extension framework). I find think this is very useful, especially when considering the negatives. If someone really wanted to set it to the last modification time of some file, I think they could get easily it in a shell script.\n              + \"  ts=timestamp  set last-modified timestamps:\\n\"\n              + \"    actual      use actual values in file-system\\n\"`\n\nHowever, this doesn't need to to addressed in this PR (in case you agree).", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395149825", "createdAt": "2020-03-19T16:17:39Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/ActualTimestampProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli;\n+\n+import com.google.cloud.tools.jib.api.AbsoluteUnixPath;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.time.Instant;\n+import java.util.function.BiFunction;\n+\n+/** A timetamp provider that uses the actual file last-modification time from the file-system. */\n+class ActualTimestampProvider implements BiFunction<Path, AbsoluteUnixPath, Instant> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTE5NDc3OnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowMzozM1rOF41auA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowMzozM1rOF41auA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEzOTc2OA==", "bodyText": "nit: indentation is off, and no double quotes", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395139768", "createdAt": "2020-03-19T16:03:33Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTE5ODkxOnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowNDozNVrOF41ddQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowNDozNVrOF41ddQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0MDQ2OQ==", "bodyText": "nit: 'application' (not double quotes)", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395140469", "createdAt": "2020-03-19T16:04:35Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTIwMDkxOnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowNTowMlrOF41ewg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowNTowMlrOF41ewg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0MDgwMg==", "bodyText": "nit: 'jib` (not double quotes)", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395140802", "createdAt": "2020-03-19T16:05:02Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTIyMDcxOnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowOTozM1rOF41rnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowOTozM1rOF41rnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NDA5Mw==", "bodyText": "Haven't looked into the test, so let me confirm. Do you need to copy test resources from jib-core?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395144093", "createdAt": "2020-03-19T16:09:33Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"\n+\n+\n+  testImplementation \"junit:junit:${dependencyVersions.JUNIT}\"\n+  testImplementation \"org.mockito:mockito-core:${dependencyVersions.MOCKITO_CORE}\"\n+  testImplementation \"org.slf4j:slf4j-api:${dependencyVersions.SLF4J_API}\"\n+  testImplementation \"com.github.stefanbirkner:system-rules:${dependencyVersions.SYSTEM_RULES}\"\n+  testImplementation project(path:':jib-core', configuration:'tests')\n+}\n+\n+sourceSets.test.resources.srcDirs project(':jib-core').sourceSets.test.resources", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTIyMjU4OnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxMDowMlrOF41sxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxMDowMlrOF41sxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NDM4OQ==", "bodyText": "This is probably unnecessary?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395144389", "createdAt": "2020-03-19T16:10:02Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"\n+\n+\n+  testImplementation \"junit:junit:${dependencyVersions.JUNIT}\"\n+  testImplementation \"org.mockito:mockito-core:${dependencyVersions.MOCKITO_CORE}\"\n+  testImplementation \"org.slf4j:slf4j-api:${dependencyVersions.SLF4J_API}\"\n+  testImplementation \"com.github.stefanbirkner:system-rules:${dependencyVersions.SYSTEM_RULES}\"\n+  testImplementation project(path:':jib-core', configuration:'tests')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTIzMTIzOnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxMjoxMVrOF41ycw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozODo1NFrOF5j6mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw==", "bodyText": "Can you see if you can remove this (as we are copying jib-build-plan source into jib-core)? jib-plugins-common does not add this, for example. @loosebazooka may have a better idea.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395145843", "createdAt": "2020-03-19T16:12:11Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMjAxMw==", "bodyText": "Yeah we can remove this I think? But I'm not sure how this build works -- does it just package up the application without depending on anything being in the local maven repo?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395822013", "createdAt": "2020-03-20T18:33:35Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MDY4Mw==", "bodyText": "I've tried removing this and the build breaks with unresolved symbols \ud83e\udd37\u200d\u2642", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395850683", "createdAt": "2020-03-20T19:33:43Z", "author": {"login": "briandealwis"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg1MjcwMA==", "bodyText": "oh yeah, because it's not re-exported. so I think even in jib-core we need to make it an api dependency rather than implementation?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395852700", "createdAt": "2020-03-20T19:38:07Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg3NzQ0Nw==", "bodyText": "So what should be done in this PR?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395877447", "createdAt": "2020-03-20T20:35:31Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMTU5NA==", "bodyText": "I think it's correct for this PR.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395901594", "createdAt": "2020-03-20T21:38:54Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzQwODc5OnYy", "diffSide": "RIGHT", "path": "jib-cli/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODozNDowNlrOF5fEow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODozNDowNlrOF5fEow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMjI0Mw==", "bodyText": "We can also remove this line, you would only need this if you're trying to access classes in dependencies of jib-core. We do this in appengine-plugins-common kind of as a hack to not have to re specify the implementation dependencies (that is a little hacky, and maybe we should be more explicit about it -- but that's another issue).", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395822243", "createdAt": "2020-03-20T18:34:06Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,40 @@\n+plugins {\n+  id 'application'\n+  id 'eclipse'\n+}\n+\n+ext {\n+  cliMainClass = 'com.google.cloud.tools.jib.cli.JibCli'\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = 'jib'\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  implementation project(':jib-core').configurations.implementation.dependencies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7c59c13b5c004c6db571045d2c396027aaed75"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 463, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}