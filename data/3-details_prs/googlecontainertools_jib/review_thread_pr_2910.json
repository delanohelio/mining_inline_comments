{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzU0NzU4", "number": 2910, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0OTo1OFrOFASX4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToxMDoxMVrOFATMkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODQ1MzQ0OnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPusherIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0OTo1OFrOH-f4rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTo0MTozM1rOH-i4wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5NjE3NA==", "bodyText": "We can remove this?", "url": "https://github.com/GoogleContainerTools/jib/pull/2910#discussion_r535296174", "createdAt": "2020-12-03T14:49:58Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPusherIntegrationTest.java", "diffHunk": "@@ -30,19 +30,13 @@\n import java.io.IOException;\n import java.security.DigestException;\n import org.junit.Assert;\n-import org.junit.BeforeClass;\n import org.junit.ClassRule;\n import org.junit.Test;\n \n /** Integration tests for {@link ManifestPusher}. */\n public class ManifestPusherIntegrationTest {\n \n-  @ClassRule public static LocalRegistry localRegistry = new LocalRegistry(5000);\n-\n-  @BeforeClass\n-  public static void setUp() throws IOException, InterruptedException {\n-    localRegistry.pullAndPushToLocal(\"busybox\", \"busybox\");\n-  }\n+  @ClassRule public static final LocalRegistry localRegistry = new LocalRegistry(5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4032d494ee3a9e55f8badd08159d49334bb740ad"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM0NTM0Ng==", "bodyText": "Tests in this class push a blob to this registry. We could use our GCP integration test project, but I think in this case we should use an isolated registry that starts from a clean state.", "url": "https://github.com/GoogleContainerTools/jib/pull/2910#discussion_r535345346", "createdAt": "2020-12-03T15:41:33Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPusherIntegrationTest.java", "diffHunk": "@@ -30,19 +30,13 @@\n import java.io.IOException;\n import java.security.DigestException;\n import org.junit.Assert;\n-import org.junit.BeforeClass;\n import org.junit.ClassRule;\n import org.junit.Test;\n \n /** Integration tests for {@link ManifestPusher}. */\n public class ManifestPusherIntegrationTest {\n \n-  @ClassRule public static LocalRegistry localRegistry = new LocalRegistry(5000);\n-\n-  @BeforeClass\n-  public static void setUp() throws IOException, InterruptedException {\n-    localRegistry.pullAndPushToLocal(\"busybox\", \"busybox\");\n-  }\n+  @ClassRule public static final LocalRegistry localRegistry = new LocalRegistry(5000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5NjE3NA=="}, "originalCommit": {"oid": "4032d494ee3a9e55f8badd08159d49334bb740ad"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODUyODQ3OnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPullerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo1OTo0MVrOH-ghZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo1OTo0MVrOH-ghZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwNjU5OA==", "bodyText": "Can we keep the previous name? Or manifestListSha256", "url": "https://github.com/GoogleContainerTools/jib/pull/2910#discussion_r535306598", "createdAt": "2020-12-03T14:59:41Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPullerIntegrationTest.java", "diffHunk": "@@ -74,38 +75,32 @@ public void testPull_v22() throws IOException, RegistryException {\n   @Test\n   public void testPull_v22ManifestList() throws IOException, RegistryException {\n     RegistryClient registryClient =\n-        RegistryClient.factory(\n-                EventHandlers.NONE, \"registry-1.docker.io\", \"library/openjdk\", httpClient)\n+        RegistryClient.factory(EventHandlers.NONE, \"gcr.io\", \"distroless/base\", httpClient)\n             .newRegistryClient();\n-    registryClient.doPullBearerAuth();\n-\n-    // Ensure 11-jre-slim is a manifest list\n-    V22ManifestListTemplate manifestListTemplate =\n-        registryClient.pullManifest(\"11-jre-slim\", V22ManifestListTemplate.class).getManifest();\n-    Assert.assertEquals(2, manifestListTemplate.getSchemaVersion());\n-    Assert.assertTrue(manifestListTemplate.getManifests().size() > 0);\n \n-    // Generic call to 11-jre-slim pulls a manifest list\n-    ManifestTemplate manifestTemplate = registryClient.pullManifest(\"11-jre-slim\").getManifest();\n-    Assert.assertEquals(2, manifestTemplate.getSchemaVersion());\n-    MatcherAssert.assertThat(\n-        manifestTemplate, CoreMatchers.instanceOf(V22ManifestListTemplate.class));\n+    // Ensure \":latest\" is a manifest list\n+    V22ManifestListTemplate manifestList1 =\n+        registryClient.pullManifest(\"latest\", V22ManifestListTemplate.class).getManifest();\n+    Assert.assertEquals(2, manifestList1.getSchemaVersion());\n+    Assert.assertTrue(manifestList1.getManifests().size() > 0);\n \n-    // Make sure we can't cast a v22ManifestTemplate to v22ManifestListTemplate in ManifestPuller\n-    try {\n-      registryClient.pullManifest(KNOWN_MANIFEST_LIST_SHA, V22ManifestTemplate.class);\n-      Assert.fail();\n-    } catch (ClassCastException ex) {\n-      // pass\n-    }\n+    // Generic call to \":latest\" pulls a manifest list\n+    ManifestTemplate manifestList2 = registryClient.pullManifest(\"latest\").getManifest();\n+    Assert.assertEquals(2, manifestList2.getSchemaVersion());\n+    MatcherAssert.assertThat(manifestList2, CoreMatchers.instanceOf(V22ManifestListTemplate.class));\n+    Assert.assertTrue(((V22ManifestListTemplate) manifestList2).getManifests().size() > 0);\n \n     // Referencing a manifest list by sha256, should return a manifest list\n-    ManifestTemplate sha256ManifestList =\n+    ManifestTemplate manifestList3 =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4032d494ee3a9e55f8badd08159d49334bb740ad"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODU3OTc2OnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPullerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowODozOFrOH-g_gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowODozOFrOH-g_gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxNDMwNA==", "bodyText": "Perhaps a more descriptive name- for example, manifestListLatest.", "url": "https://github.com/GoogleContainerTools/jib/pull/2910#discussion_r535314304", "createdAt": "2020-12-03T15:08:38Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/ManifestPullerIntegrationTest.java", "diffHunk": "@@ -74,38 +75,32 @@ public void testPull_v22() throws IOException, RegistryException {\n   @Test\n   public void testPull_v22ManifestList() throws IOException, RegistryException {\n     RegistryClient registryClient =\n-        RegistryClient.factory(\n-                EventHandlers.NONE, \"registry-1.docker.io\", \"library/openjdk\", httpClient)\n+        RegistryClient.factory(EventHandlers.NONE, \"gcr.io\", \"distroless/base\", httpClient)\n             .newRegistryClient();\n-    registryClient.doPullBearerAuth();\n-\n-    // Ensure 11-jre-slim is a manifest list\n-    V22ManifestListTemplate manifestListTemplate =\n-        registryClient.pullManifest(\"11-jre-slim\", V22ManifestListTemplate.class).getManifest();\n-    Assert.assertEquals(2, manifestListTemplate.getSchemaVersion());\n-    Assert.assertTrue(manifestListTemplate.getManifests().size() > 0);\n \n-    // Generic call to 11-jre-slim pulls a manifest list\n-    ManifestTemplate manifestTemplate = registryClient.pullManifest(\"11-jre-slim\").getManifest();\n-    Assert.assertEquals(2, manifestTemplate.getSchemaVersion());\n-    MatcherAssert.assertThat(\n-        manifestTemplate, CoreMatchers.instanceOf(V22ManifestListTemplate.class));\n+    // Ensure \":latest\" is a manifest list\n+    V22ManifestListTemplate manifestList1 =\n+        registryClient.pullManifest(\"latest\", V22ManifestListTemplate.class).getManifest();\n+    Assert.assertEquals(2, manifestList1.getSchemaVersion());\n+    Assert.assertTrue(manifestList1.getManifests().size() > 0);\n \n-    // Make sure we can't cast a v22ManifestTemplate to v22ManifestListTemplate in ManifestPuller\n-    try {\n-      registryClient.pullManifest(KNOWN_MANIFEST_LIST_SHA, V22ManifestTemplate.class);\n-      Assert.fail();\n-    } catch (ClassCastException ex) {\n-      // pass\n-    }\n+    // Generic call to \":latest\" pulls a manifest list\n+    ManifestTemplate manifestList2 = registryClient.pullManifest(\"latest\").getManifest();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4032d494ee3a9e55f8badd08159d49334bb740ad"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODU4ODM0OnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/BlobPusherIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToxMDoxMVrOH-hEtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTo1MTo1NVrOH-jjsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxNTYzOQ==", "bodyText": "Is this still needed?", "url": "https://github.com/GoogleContainerTools/jib/pull/2910#discussion_r535315639", "createdAt": "2020-12-03T15:10:11Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/BlobPusherIntegrationTest.java", "diffHunk": "@@ -31,14 +31,12 @@\n /** Integration tests for {@link BlobPusher}. */\n public class BlobPusherIntegrationTest {\n \n-  @ClassRule public static LocalRegistry localRegistry = new LocalRegistry(5000);\n+  @ClassRule public static final LocalRegistry localRegistry = new LocalRegistry(5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4032d494ee3a9e55f8badd08159d49334bb740ad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM0NjAwNQ==", "bodyText": "The test in this class pushes a blob to this registry (line 47). We could use our GCP integration test project, but I think in this case we should use an isolated registry that starts from a clean state.", "url": "https://github.com/GoogleContainerTools/jib/pull/2910#discussion_r535346005", "createdAt": "2020-12-03T15:42:09Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/BlobPusherIntegrationTest.java", "diffHunk": "@@ -31,14 +31,12 @@\n /** Integration tests for {@link BlobPusher}. */\n public class BlobPusherIntegrationTest {\n \n-  @ClassRule public static LocalRegistry localRegistry = new LocalRegistry(5000);\n+  @ClassRule public static final LocalRegistry localRegistry = new LocalRegistry(5000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxNTYzOQ=="}, "originalCommit": {"oid": "4032d494ee3a9e55f8badd08159d49334bb740ad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM1NjMzOA==", "bodyText": "oops I see.", "url": "https://github.com/GoogleContainerTools/jib/pull/2910#discussion_r535356338", "createdAt": "2020-12-03T15:51:55Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/registry/BlobPusherIntegrationTest.java", "diffHunk": "@@ -31,14 +31,12 @@\n /** Integration tests for {@link BlobPusher}. */\n public class BlobPusherIntegrationTest {\n \n-  @ClassRule public static LocalRegistry localRegistry = new LocalRegistry(5000);\n+  @ClassRule public static final LocalRegistry localRegistry = new LocalRegistry(5000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxNTYzOQ=="}, "originalCommit": {"oid": "4032d494ee3a9e55f8badd08159d49334bb740ad"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 39, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}