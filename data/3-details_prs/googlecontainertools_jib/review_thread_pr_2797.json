{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODI1MDkz", "number": 2797, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjozNzozOFrOEpOoKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzozMTozMlrOEp5KZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNjY2NzI4OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjozNzozOFrOHaxtkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMjozNzozOFrOHaxtkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgzOTUwNw==", "bodyText": "May need to add more logic to verify that the jar is in fact a regular jar, otherwise throw an exception saying that non-springboot fat jars are not supported.", "url": "https://github.com/GoogleContainerTools/jib/pull/2797#discussion_r497839507", "createdAt": "2020-09-30T22:37:38Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.jar;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.jar.JarFile;\n+\n+public class JarProcessor {\n+\n+  /**\n+   * Jar Type.\n+   *\n+   * <ul>\n+   *   <li>{@code REGULAR} a regular jar.\n+   *   <li>{@code SPRINGBOOT} a springboot fat jar. *\n+   * </ul>\n+   */\n+  public enum JarType {\n+    REGULAR,\n+    SPRINGBOOT;\n+  }\n+\n+  /**\n+   * Determines whether the jar is a spring-boot or regular jar, given a path to the jar.\n+   *\n+   * @param jarPath path to the jar.\n+   * @return the jar type.\n+   * @throws IOException if I/O error occurs when opening the file.\n+   */\n+  public static JarType determineJarType(Path jarPath) throws IOException {\n+    JarFile jarFile = new JarFile(jarPath.toString());\n+    if (jarFile.getEntry(\"BOOT-INF\") != null) {\n+      return JarType.SPRINGBOOT;\n+    }\n+    return JarType.REGULAR;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cecfd011b9592a77306b4a83e2dcb38b3c36317f"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDczMjAzOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxMTowNlrOHbZRtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxMTowNlrOHbZRtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ4NzczNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *   <li>{@code SPRINGBOOT} a springboot fat jar. *\n          \n          \n            \n               *   <li>{@code SPRING_BOOT} a springboot fat jar.", "url": "https://github.com/GoogleContainerTools/jib/pull/2797#discussion_r498487735", "createdAt": "2020-10-01T20:11:06Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.jar;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.jar.JarFile;\n+\n+public class JarProcessor {\n+\n+  /**\n+   * Jar Type.\n+   *\n+   * <ul>\n+   *   <li>{@code REGULAR} a regular jar.\n+   *   <li>{@code SPRINGBOOT} a springboot fat jar. *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cecfd011b9592a77306b4a83e2dcb38b3c36317f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDc0MzQ0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxNToxOVrOHbZZMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxNToxOVrOHbZZMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ4OTY1MA==", "bodyText": "nit: it doesn't matter at all here, but generally I try to avoid dealing with path as a string.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                JarFile jarFile = new JarFile(jarPath.toString());\n          \n          \n            \n                JarFile jarFile = new JarFile(jarPath.toFile());", "url": "https://github.com/GoogleContainerTools/jib/pull/2797#discussion_r498489650", "createdAt": "2020-10-01T20:15:19Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.jar;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.jar.JarFile;\n+\n+public class JarProcessor {\n+\n+  /**\n+   * Jar Type.\n+   *\n+   * <ul>\n+   *   <li>{@code REGULAR} a regular jar.\n+   *   <li>{@code SPRINGBOOT} a springboot fat jar. *\n+   * </ul>\n+   */\n+  public enum JarType {\n+    REGULAR,\n+    SPRINGBOOT;\n+  }\n+\n+  /**\n+   * Determines whether the jar is a spring-boot or regular jar, given a path to the jar.\n+   *\n+   * @param jarPath path to the jar.\n+   * @return the jar type.\n+   * @throws IOException if I/O error occurs when opening the file.\n+   */\n+  public static JarType determineJarType(Path jarPath) throws IOException {\n+    JarFile jarFile = new JarFile(jarPath.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cecfd011b9592a77306b4a83e2dcb38b3c36317f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDc0NTQ5OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/jar/JarProcessorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxNjowM1rOHbZamQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMDoxNjowM1rOHbZamQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ5MDAwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String SPRINGBOOT_RESOURCE_DIR = \"jar/springboot\";\n          \n          \n            \n              private static final String SPRING_BOOT_RESOURCE_DIR = \"jar/springboot\";\n          \n      \n    \n    \n  \n\nAnd maybe this can just be jar/springboot/springbootJar.jar?", "url": "https://github.com/GoogleContainerTools/jib/pull/2797#discussion_r498490009", "createdAt": "2020-10-01T20:16:03Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/jar/JarProcessorTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.jar;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.tools.jib.cli.jar.JarProcessor.JarType;\n+import com.google.common.io.Resources;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.Test;\n+\n+public class JarProcessorTest {\n+\n+  private static final String SPRINGBOOT_RESOURCE_DIR = \"jar/springboot\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cecfd011b9592a77306b4a83e2dcb38b3c36317f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzYzNjIyOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzozMTozMlrOHb12fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxODozMjozMlrOHb3tsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk1NTkwMA==", "bodyText": "I think STANDARD is probably the more standard term?", "url": "https://github.com/GoogleContainerTools/jib/pull/2797#discussion_r498955900", "createdAt": "2020-10-02T17:31:32Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.jar;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.jar.JarFile;\n+\n+public class JarProcessor {\n+\n+  /**\n+   * Jar Type.\n+   *\n+   * <ul>\n+   *   <li>{@code REGULAR} a regular jar.\n+   *   <li>{@code SPRING_BOOT} a springboot fat jar.\n+   * </ul>\n+   */\n+  public enum JarType {\n+    REGULAR,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21467a4d2f19c257b9879ad4d4bffcb0c8612a1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NjQxOA==", "bodyText": "Done.", "url": "https://github.com/GoogleContainerTools/jib/pull/2797#discussion_r498986418", "createdAt": "2020-10-02T18:32:32Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/jar/JarProcessor.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.jar;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.jar.JarFile;\n+\n+public class JarProcessor {\n+\n+  /**\n+   * Jar Type.\n+   *\n+   * <ul>\n+   *   <li>{@code REGULAR} a regular jar.\n+   *   <li>{@code SPRING_BOOT} a springboot fat jar.\n+   * </ul>\n+   */\n+  public enum JarType {\n+    REGULAR,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk1NTkwMA=="}, "originalCommit": {"oid": "c21467a4d2f19c257b9879ad4d4bffcb0c8612a1"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4941, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}