{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTY3ODAy", "number": 2780, "title": "Don't schedule multiple threads downloading same base image layers in StepsRunner", "bodyText": "On top of #2779. Review #2779 first.\nFixes #2750.\nEventually I decided to go with the minimally disruptive approach to resolve the issue.\nInside obtainBaseImageLayers() where the method schedules threads for each layer in an Image, it now checks first if a thread was previously scheduled for the given layer (by comparing the layer digest). For implementing the check, I instantiate a Map of (digest --> layer Future) where the key is a layer digest. The method schedules a thread (running ObtainBaseImageLayerStep) only when the layer Future is missing in the Map.", "createdAt": "2020-09-22T20:08:42Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2780", "merged": true, "mergeCommit": {"oid": "074bbc72d4556f5b6383453415e383b9fc34f1e5"}, "closed": true, "closedAt": "2020-09-24T15:32:43Z", "author": {"login": "chanseokoh"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKGgpXAH2gAyNDkxMTY3ODAyOjg5ZDc2NGQ0MjU0OGRhOWZiZWE2OWI0MTQzYzUzMDQ4ZmM5MzkxMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMCwt-gFqTQ5NTY4Mzc1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89d764d42548da9fbea69b4143c53048fc939101", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/89d764d42548da9fbea69b4143c53048fc939101", "committedDate": "2020-09-18T14:31:34Z", "message": "Switch key and value of builtImagesAndBaseImages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31a5434f5d8a92a0260d87d6f5a88254a1a38719", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/31a5434f5d8a92a0260d87d6f5a88254a1a38719", "committedDate": "2020-09-18T14:54:35Z", "message": "Change key of builtImagesAndContainerConfigurationPushResults"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b65186033271436f48ece352a2b615720ac1ce", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d1b65186033271436f48ece352a2b615720ac1ce", "committedDate": "2020-09-18T14:58:47Z", "message": "Switch order of fields in StepResults"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe9d484500840ad7001332f127f8bf42c7fb588c", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/fe9d484500840ad7001332f127f8bf42c7fb588c", "committedDate": "2020-09-18T15:39:51Z", "message": "Refactor StepsRunner for consistent loop pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1dfffff285e82b01efae24787f61c6e71a9e56f", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a1dfffff285e82b01efae24787f61c6e71a9e56f", "committedDate": "2020-09-18T17:26:52Z", "message": "Assign jib.to.tags to value of type Set to fix failing integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3064f6c6bab376363f523252b4cfd4663f09692d", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3064f6c6bab376363f523252b4cfd4663f09692d", "committedDate": "2020-09-18T19:19:23Z", "message": "Merge branch 'master' into dedup-base-image-layers-refactor4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55eeb1da853ccb5a677101b2d62ec535bfffe114", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/55eeb1da853ccb5a677101b2d62ec535bfffe114", "committedDate": "2020-09-18T19:23:21Z", "message": "Clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "549aa27ee111aed7131d1b6671ce40b4040facb5", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/549aa27ee111aed7131d1b6671ce40b4040facb5", "committedDate": "2020-09-18T19:23:28Z", "message": "Merge branch 'dedup-base-image-layers-refactor4' of https://github.com/GoogleContainerTools/jib into dedup-base-image-layers-refactor4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6b7c516bed897675c0f726f2f9f9a879813fd3", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1a6b7c516bed897675c0f726f2f9f9a879813fd3", "committedDate": "2020-09-18T19:58:12Z", "message": "Clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dafceccbabbad85e33906ed8a21deaedcf18bb80", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/dafceccbabbad85e33906ed8a21deaedcf18bb80", "committedDate": "2020-09-18T20:03:16Z", "message": "Add setTag method that accepts a list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e27188b7fa677b5d05c540ddb482b918aeee6de", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4e27188b7fa677b5d05c540ddb482b918aeee6de", "committedDate": "2020-09-18T20:05:11Z", "message": "revert change to build.gradle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78221951f100aeaa55e20615ea8ad7c2f8fe187c", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/78221951f100aeaa55e20615ea8ad7c2f8fe187c", "committedDate": "2020-09-18T20:43:07Z", "message": "Do not push duplicate base image layers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "046a35710df64062628c55c272db055be9be6b59", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/046a35710df64062628c55c272db055be9be6b59", "committedDate": "2020-09-18T20:43:38Z", "message": "Merge remote-tracking branch 'origin/fix-tests' into dedup-base-image-layers-new-world"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bd4a51dd64b4bc1378cf3adcbd07ac4a10dd71f", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1bd4a51dd64b4bc1378cf3adcbd07ac4a10dd71f", "committedDate": "2020-09-18T21:10:47Z", "message": "Fix progress dispatcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d81a9961a81e94e7bf6023b5d73c71b7d660bb31", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d81a9961a81e94e7bf6023b5d73c71b7d660bb31", "committedDate": "2020-09-18T21:18:03Z", "message": "Close ProgressEventDispatchers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf6c2376465413045e0ac9804a5ea1a7a7991fb8", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/bf6c2376465413045e0ac9804a5ea1a7a7991fb8", "committedDate": "2020-09-21T14:40:03Z", "message": "Remove unnecessary Verify.verifyNotNull"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6494c6abd618346a2bdbbe66c95ca34a4986401d", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6494c6abd618346a2bdbbe66c95ca34a4986401d", "committedDate": "2020-09-21T14:48:14Z", "message": "Merge branch 'master' into dedup-base-image-layers-refactor5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d42f7bcd969fbea37fac47f14886a080534dc1e9", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d42f7bcd969fbea37fac47f14886a080534dc1e9", "committedDate": "2020-09-21T15:18:03Z", "message": "Merge remote-tracking branch 'origin/master' into dedup-base-image-layers-refactor5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b99a252e4a8420e6f2143380d36787cec58b488", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3b99a252e4a8420e6f2143380d36787cec58b488", "committedDate": "2020-09-21T15:18:17Z", "message": "Merge branch 'dedup-base-image-layers-refactor5' of https://github.com/GoogleContainerTools/jib into dedup-base-image-layers-refactor5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5b774b40459d80c18da90db7af3e732f76b2694", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/b5b774b40459d80c18da90db7af3e732f76b2694", "committedDate": "2020-09-21T15:36:11Z", "message": "Merge branch 'dedup-base-image-layers-refactor5' into dedup-base-image-layers-new-world"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0db06daf661695e67754d76527b705a53082e8cb", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0db06daf661695e67754d76527b705a53082e8cb", "committedDate": "2020-09-22T14:41:20Z", "message": "Merge branch 'master' into dedup-base-image-layers-new-world"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f775c51479479ae5b6e7b780dfd8c008688131d8", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/f775c51479479ae5b6e7b780dfd8c008688131d8", "committedDate": "2020-09-22T17:36:53Z", "message": "Add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed31e0dcc41d0653a57371ce743816c96a997729", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ed31e0dcc41d0653a57371ce743816c96a997729", "committedDate": "2020-09-22T17:57:05Z", "message": "Refactor to accept progressDispatcherFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0c34fcdc58ce6f58183e755f37eaa238b7260f0", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/f0c34fcdc58ce6f58183e755f37eaa238b7260f0", "committedDate": "2020-09-22T19:14:24Z", "message": "Create a concrete ListeningExecutorService mock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "759233b992d60668dd81581585edc8720651cac0", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/759233b992d60668dd81581585edc8720651cac0", "committedDate": "2020-09-22T19:15:54Z", "message": "Merge branch 'dedup-base-image-layers-refactor6' into dedup-base-image-layers-new-world"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db776c218cea02149c93291bd5f2ffba88cf620b", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/db776c218cea02149c93291bd5f2ffba88cf620b", "committedDate": "2020-09-22T19:25:18Z", "message": "Enhance test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75f52fd4e6443e0e1e07dfe57c8bbbc7641d4559", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/75f52fd4e6443e0e1e07dfe57c8bbbc7641d4559", "committedDate": "2020-09-23T14:04:04Z", "message": "comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b86d4f17cfcc27ab21c965c53c24f8b6200ff51f", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/b86d4f17cfcc27ab21c965c53c24f8b6200ff51f", "committedDate": "2020-09-23T14:13:29Z", "message": "Merge branch 'master' into dedup-base-image-layers-new-world"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MTQyMDY0", "url": "https://github.com/GoogleContainerTools/jib/pull/2780#pullrequestreview-495142064", "createdAt": "2020-09-24T00:24:58Z", "commit": {"oid": "b86d4f17cfcc27ab21c965c53c24f8b6200ff51f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMDoyNDo1OFrOHXFlOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMDozMDoxOVrOHXFrNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MDc0NQ==", "bodyText": "The instructions seem to indicate maybe a different approach, but I don't know if you already considered that.\n\nUse TestingExecutors.sameThreadScheduledExecutor, or wrap a real Executor from java.util.concurrent.Executors with MoreExecutors.listeningDecorator", "url": "https://github.com/GoogleContainerTools/jib/pull/2780#discussion_r493970745", "createdAt": "2020-09-24T00:24:58Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/StepsRunnerTest.java", "diffHunk": "@@ -0,0 +1,151 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.builder.steps;\n+\n+import com.google.cloud.tools.jib.api.DescriptorDigest;\n+import com.google.cloud.tools.jib.builder.ProgressEventDispatcher;\n+import com.google.cloud.tools.jib.builder.steps.PullBaseImageStep.ImagesAndRegistryClient;\n+import com.google.cloud.tools.jib.configuration.BuildContext;\n+import com.google.cloud.tools.jib.image.DigestOnlyLayer;\n+import com.google.cloud.tools.jib.image.Image;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.util.concurrent.ForwardingExecutorService;\n+import com.google.common.util.concurrent.Futures;\n+import com.google.common.util.concurrent.ListenableFuture;\n+import com.google.common.util.concurrent.ListeningExecutorService;\n+import java.security.DigestException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Future;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+/** Tests for {@link StepsRunner}. */\n+@RunWith(MockitoJUnitRunner.class)\n+public class StepsRunnerTest {\n+\n+  // ListeningExecutorService is annotated with @DoNotMock, so define a concrete class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86d4f17cfcc27ab21c965c53c24f8b6200ff51f"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MjI3Ng==", "bodyText": "I thought that maybe this could have threading issues, but we never call this in parallel right? Is there any value in marking this not threadsafe?", "url": "https://github.com/GoogleContainerTools/jib/pull/2780#discussion_r493972276", "createdAt": "2020-09-24T00:30:19Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -306,36 +311,61 @@ private void obtainBaseImagesLayers(\n                       \"scheduling obtaining base images layers\",\n                       results.baseImagesAndRegistryClient.get().images.size())) {\n \n+                Map<DescriptorDigest, Future<PreparedLayer>> preparedLayersCache = new HashMap<>();\n                 Map<Image, List<Future<PreparedLayer>>> baseImagesAndLayers = new HashMap<>();\n                 for (Image baseImage : results.baseImagesAndRegistryClient.get().images) {\n                   List<Future<PreparedLayer>> layers =\n                       obtainBaseImageLayers(\n-                          baseImage, layersRequiredLocally, progressDispatcher.newChildProducer());\n+                          baseImage,\n+                          layersRequiredLocally,\n+                          preparedLayersCache,\n+                          progressDispatcher.newChildProducer());\n                   baseImagesAndLayers.put(baseImage, layers);\n                 }\n                 return baseImagesAndLayers;\n               }\n             });\n   }\n \n-  private List<Future<PreparedLayer>> obtainBaseImageLayers(\n+  @VisibleForTesting\n+  List<Future<PreparedLayer>> obtainBaseImageLayers(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86d4f17cfcc27ab21c965c53c24f8b6200ff51f"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb953516b271cd37a637601ee251f7041b8687a5", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/eb953516b271cd37a637601ee251f7041b8687a5", "committedDate": "2020-09-24T14:39:25Z", "message": "Add comment on obtainBaseImageLayers()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjgzNzUx", "url": "https://github.com/GoogleContainerTools/jib/pull/2780#pullrequestreview-495683751", "createdAt": "2020-09-24T15:17:21Z", "commit": {"oid": "eb953516b271cd37a637601ee251f7041b8687a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToxNzoyMVrOHXf-gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToxNzoyMVrOHXf-gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwMzIwMw==", "bodyText": "Just a thought: we currently check to see if the layer already exists before pushing a new one, but what would we do if we needed to update a layer?/ Can base image layers be updated?", "url": "https://github.com/GoogleContainerTools/jib/pull/2780#discussion_r494403203", "createdAt": "2020-09-24T15:17:21Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -306,36 +311,62 @@ private void obtainBaseImagesLayers(\n                       \"scheduling obtaining base images layers\",\n                       results.baseImagesAndRegistryClient.get().images.size())) {\n \n+                Map<DescriptorDigest, Future<PreparedLayer>> preparedLayersCache = new HashMap<>();\n                 Map<Image, List<Future<PreparedLayer>>> baseImagesAndLayers = new HashMap<>();\n                 for (Image baseImage : results.baseImagesAndRegistryClient.get().images) {\n                   List<Future<PreparedLayer>> layers =\n                       obtainBaseImageLayers(\n-                          baseImage, layersRequiredLocally, progressDispatcher.newChildProducer());\n+                          baseImage,\n+                          layersRequiredLocally,\n+                          preparedLayersCache,\n+                          progressDispatcher.newChildProducer());\n                   baseImagesAndLayers.put(baseImage, layers);\n                 }\n                 return baseImagesAndLayers;\n               }\n             });\n   }\n \n-  private List<Future<PreparedLayer>> obtainBaseImageLayers(\n+  // This method updates the given \"preparedLayersCache\" and should not be called concurrently.\n+  @VisibleForTesting\n+  List<Future<PreparedLayer>> obtainBaseImageLayers(\n       Image baseImage,\n       boolean layersRequiredLocally,\n+      Map<DescriptorDigest, Future<PreparedLayer>> preparedLayersCache,\n       ProgressEventDispatcher.Factory progressDispatcherFactory)\n       throws InterruptedException, ExecutionException {\n-    return scheduleCallables(\n-        layersRequiredLocally\n-            ? ObtainBaseImageLayerStep.makeListForForcedDownload(\n-                buildContext,\n-                progressDispatcherFactory,\n-                baseImage,\n-                results.baseImagesAndRegistryClient.get().registryClient)\n-            : ObtainBaseImageLayerStep.makeListForSelectiveDownload(\n-                buildContext,\n-                progressDispatcherFactory,\n-                baseImage,\n-                results.baseImagesAndRegistryClient.get().registryClient,\n-                results.targetRegistryClient.get()));\n+    List<Future<PreparedLayer>> preparedLayers = new ArrayList<>();\n+\n+    try (ProgressEventDispatcher progressDispatcher =\n+        progressDispatcherFactory.create(\n+            \"launching base image layer pullers\", baseImage.getLayers().size())) {\n+      for (Layer layer : baseImage.getLayers()) {\n+        DescriptorDigest digest = layer.getBlobDescriptor().getDigest();\n+        Future<PreparedLayer> preparedLayer = preparedLayersCache.get(digest);\n+\n+        if (preparedLayer != null) {\n+          progressDispatcher.dispatchProgress(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb953516b271cd37a637601ee251f7041b8687a5"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4776, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}