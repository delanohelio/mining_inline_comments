{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMzQ3MjIz", "number": 2592, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzozMTozOVrOEPOxpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzozMTozOVrOEPOxpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDA2MTgzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/http/FailoverHttpClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzozMTozOVrOGy1PkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNzo0Nzo1MVrOGy10qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NDMyMA==", "bodyText": "Thanks for your contribution!\nAs in getInsecureHttpTransport() below, can't this just be\n          ApacheHttpTransport.newDefaultHttpClientBuilder()\n              .setSSLSocketFactory(SSLConnectionSocketFactory.getSystemSocketFactory());\n? This is exactly the reason I asked Google HTTP Client to add newDefaultHttpClientBuilder() in the past.", "url": "https://github.com/GoogleContainerTools/jib/pull/2592#discussion_r455954320", "createdAt": "2020-07-16T17:31:39Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/http/FailoverHttpClient.java", "diffHunk": "@@ -97,7 +101,17 @@ private static HttpTransport getSecureHttpTransport() {\n     //\n     // A new ApacheHttpTransport needs to be created for each connection because otherwise HTTP\n     // connection persistence causes the connection to throw NoHttpResponseException.\n-    return new ApacheHttpTransport();\n+    HttpClientBuilder httpClientBuilder =\n+        HttpClientBuilder.create()\n+            .useSystemProperties()\n+            .setSSLSocketFactory(SSLConnectionSocketFactory.getSystemSocketFactory())\n+            .setMaxConnTotal(200)\n+            .setMaxConnPerRoute(20)\n+            .setConnectionTimeToLive(-1, TimeUnit.MILLISECONDS)\n+            .setRoutePlanner(new SystemDefaultRoutePlanner(ProxySelector.getDefault()))\n+            .disableRedirectHandling()\n+            .disableAutomaticRetries();\n+    return new ApacheHttpTransport(httpClientBuilder.build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd543dd158470c6dfa616338d93e5fcc3221ab3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk2MzgxNg==", "bodyText": "Yes, that would work and is cleaner. I applied your suggestion.", "url": "https://github.com/GoogleContainerTools/jib/pull/2592#discussion_r455963816", "createdAt": "2020-07-16T17:47:51Z", "author": {"login": "jacksierkstra"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/http/FailoverHttpClient.java", "diffHunk": "@@ -97,7 +101,17 @@ private static HttpTransport getSecureHttpTransport() {\n     //\n     // A new ApacheHttpTransport needs to be created for each connection because otherwise HTTP\n     // connection persistence causes the connection to throw NoHttpResponseException.\n-    return new ApacheHttpTransport();\n+    HttpClientBuilder httpClientBuilder =\n+        HttpClientBuilder.create()\n+            .useSystemProperties()\n+            .setSSLSocketFactory(SSLConnectionSocketFactory.getSystemSocketFactory())\n+            .setMaxConnTotal(200)\n+            .setMaxConnPerRoute(20)\n+            .setConnectionTimeToLive(-1, TimeUnit.MILLISECONDS)\n+            .setRoutePlanner(new SystemDefaultRoutePlanner(ProxySelector.getDefault()))\n+            .disableRedirectHandling()\n+            .disableAutomaticRetries();\n+    return new ApacheHttpTransport(httpClientBuilder.build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NDMyMA=="}, "originalCommit": {"oid": "2dd543dd158470c6dfa616338d93e5fcc3221ab3"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 263, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}