{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNDYyNjg0", "number": 2235, "title": "Import Cram as Jib CLI", "bodyText": "Uses the application plugin to create a runnable distribution.\nI'll leave Graal support for a separate PR as the Palant\u00edr Graal plugin doesn't support GraalVM 19.3.x.", "createdAt": "2020-01-16T05:26:59Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2235", "merged": true, "mergeCommit": {"oid": "32c59556e0ca2e25e64978592bdd98074ef6578e"}, "closed": true, "closedAt": "2020-03-20T22:12:29Z", "author": {"login": "briandealwis"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6y8RCgH2gAyMzYzNDYyNjg0OmFiNTJkNmFmMDEwYmZjYTczZmRjMWI0MmU5OGEwZGU4ZmU5OTdkNWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPn7NbgFqTM3ODgzNzQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ab52d6af010bfca73fdc1b42e98a0de8fe997d5a", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ab52d6af010bfca73fdc1b42e98a0de8fe997d5a", "committedDate": "2020-01-16T05:03:37Z", "message": "Import Cram as Jib CLI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fadfe1fe7a031339c8be01995e3e7eb639681b9", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1fadfe1fe7a031339c8be01995e3e7eb639681b9", "committedDate": "2020-01-16T05:30:13Z", "message": "don't import classes in same package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d45abc5cd926bef8662f01f15e7c5fd980f306e1", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d45abc5cd926bef8662f01f15e7c5fd980f306e1", "committedDate": "2020-01-20T20:13:37Z", "message": "Add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3d852cba0a3d03840d22a88ae9499ade813615b8", "committedDate": "2020-01-20T20:13:41Z", "message": "Merge remote-tracking branch 'origin/master' into HEAD"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1OTcyNzM1", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#pullrequestreview-345972735", "createdAt": "2020-01-21T15:36:47Z", "commit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTozNjo0N1rOFf-fQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTo0NjowMFrOFf-1xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3Mzk4Nw==", "bodyText": "We can address this later, but because this requires installing JRE and Gradle, I think we should provide pre-compiled binaries, especially when considering Jib CLI is very general and isn't bound to Java developers.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369073987", "createdAt": "2020-01-21T15:36:47Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/README.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Jib CLI\n+\n+<img src=\"https://img.shields.io/badge/status-experimental-orange\">\n+\n+`jib` is a command-line utility for building containers images from file system content. \n+It serves as a demonstration of [Jib Core](https://github.com/GoogleContainerTools/jib/tree/master/jib-core),\n+a Java library for building containers without Docker.\n+\n+This CLI tool is _experimental_ and its options and structure\n+are almost certain to change.\n+\n+## Building\n+\n+Use the `application` plugin's `installDist` task to create a runnable installation.\n+```sh\n+$ ../gradlew installDist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3ODE0Nw==", "bodyText": "I'm curious how all these work out as a CLI tool. Does it not require a JRE? Is it a single executable binary that embeds all transitive dependency JARs? Or, does it cache dependencies under ~/.m2?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369078147", "createdAt": "2020-01-21T15:43:29Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,35 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.Cram\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA==", "bodyText": "Is this used somewhere? I can't find it. I'm wary of people using this provider if it's going to be used for creating an image, because it greatly undermines reproducibility of a layer.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r369079748", "createdAt": "2020-01-21T15:46:00Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/ActualTimestampProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli;\n+\n+import com.google.cloud.tools.jib.api.AbsoluteUnixPath;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.time.Instant;\n+import java.util.function.BiFunction;\n+\n+/** A timetamp provider that uses the actual file last-modification time from the file-system. */\n+class ActualTimestampProvider implements BiFunction<Path, AbsoluteUnixPath, Instant> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f092e1e1f5460635cbf636a18aed384bf40178f", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0f092e1e1f5460635cbf636a18aed384bf40178f", "committedDate": "2020-01-21T21:35:50Z", "message": "tweak text"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f16a977aae395e6b4224a4c5bb01d1ecd573ba6", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7f16a977aae395e6b4224a4c5bb01d1ecd573ba6", "committedDate": "2020-01-24T21:58:26Z", "message": "further tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "820d03a16abbfc353e9674df9644418942bcec90", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/820d03a16abbfc353e9674df9644418942bcec90", "committedDate": "2020-03-15T03:35:44Z", "message": "cause tests to include pushmode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c9ccb9b5e1409a8a95f56f4822bad3c26ba3d12", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/2c9ccb9b5e1409a8a95f56f4822bad3c26ba3d12", "committedDate": "2020-03-15T03:36:43Z", "message": "update to picocli 4.2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaff8aee22cacae1a0f24d4a6fbc3aa9ecd73420", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/aaff8aee22cacae1a0f24d4a6fbc3aa9ecd73420", "committedDate": "2020-03-18T03:38:48Z", "message": "Add new Build command; refactor tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b49873740c55bc1775a8d05f6772ba63b2ef18d", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/5b49873740c55bc1775a8d05f6772ba63b2ef18d", "committedDate": "2020-03-19T13:30:02Z", "message": "make gradle happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "755df833969508f9da2634a986b73e262e5d5368", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/755df833969508f9da2634a986b73e262e5d5368", "committedDate": "2020-03-19T13:36:18Z", "message": "Merge remote-tracking branch 'origin/master' into HEAD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1", "committedDate": "2020-03-19T14:43:08Z", "message": "Catchup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODY1NzA2", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#pullrequestreview-377865706", "createdAt": "2020-03-19T16:03:33Z", "commit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjowMzozM1rOF41auA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxNzozOVrOF42CAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEzOTc2OA==", "bodyText": "nit: indentation is off, and no double quotes", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395139768", "createdAt": "2020-03-19T16:03:33Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0MDQ2OQ==", "bodyText": "nit: 'application' (not double quotes)", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395140469", "createdAt": "2020-03-19T16:04:35Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0MDgwMg==", "bodyText": "nit: 'jib` (not double quotes)", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395140802", "createdAt": "2020-03-19T16:05:02Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NDA5Mw==", "bodyText": "Haven't looked into the test, so let me confirm. Do you need to copy test resources from jib-core?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395144093", "createdAt": "2020-03-19T16:09:33Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"\n+\n+\n+  testImplementation \"junit:junit:${dependencyVersions.JUNIT}\"\n+  testImplementation \"org.mockito:mockito-core:${dependencyVersions.MOCKITO_CORE}\"\n+  testImplementation \"org.slf4j:slf4j-api:${dependencyVersions.SLF4J_API}\"\n+  testImplementation \"com.github.stefanbirkner:system-rules:${dependencyVersions.SYSTEM_RULES}\"\n+  testImplementation project(path:':jib-core', configuration:'tests')\n+}\n+\n+sourceSets.test.resources.srcDirs project(':jib-core').sourceSets.test.resources", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NDM4OQ==", "bodyText": "This is probably unnecessary?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395144389", "createdAt": "2020-03-19T16:10:02Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  // since jib core doesn't export dependencies to a compile scope\n+  // (they are \"runtime\"), just grab them manually. This means we don't have\n+  // to synchronize dependencies between the two projects -- we don't\n+  // want to use the sourceProject helper because it does things we don't want\n+  // for an unpublished library.\n+  implementation project(':jib-core').configurations.implementation.dependencies\n+  implementation \"com.google.guava:guava:${dependencyVersions.GUAVA}\"\n+  implementation \"info.picocli:picocli:${dependencyVersions.PICOCLI}\"\n+\n+\n+  testImplementation \"junit:junit:${dependencyVersions.JUNIT}\"\n+  testImplementation \"org.mockito:mockito-core:${dependencyVersions.MOCKITO_CORE}\"\n+  testImplementation \"org.slf4j:slf4j-api:${dependencyVersions.SLF4J_API}\"\n+  testImplementation \"com.github.stefanbirkner:system-rules:${dependencyVersions.SYSTEM_RULES}\"\n+  testImplementation project(path:':jib-core', configuration:'tests')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw==", "bodyText": "Can you see if you can remove this (as we are copying jib-build-plan source into jib-core)? jib-plugins-common does not add this, for example. @loosebazooka may have a better idea.", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395145843", "createdAt": "2020-03-19T16:12:11Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0OTgyNQ==", "bodyText": "So the question is, should we drop support for ts=actual? Jib plugins don't support it (and will never after we build an extension framework). I find think this is very useful, especially when considering the negatives. If someone really wanted to set it to the last modification time of some file, I think they could get easily it in a shell script.\n              + \"  ts=timestamp  set last-modified timestamps:\\n\"\n              + \"    actual      use actual values in file-system\\n\"`\n\nHowever, this doesn't need to to addressed in this PR (in case you agree).", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395149825", "createdAt": "2020-03-19T16:17:39Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/ActualTimestampProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli;\n+\n+import com.google.cloud.tools.jib.api.AbsoluteUnixPath;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.time.Instant;\n+import java.util.function.BiFunction;\n+\n+/** A timetamp provider that uses the actual file last-modification time from the file-system. */\n+class ActualTimestampProvider implements BiFunction<Path, AbsoluteUnixPath, Instant> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3OTc0OA=="}, "originalCommit": {"oid": "3d852cba0a3d03840d22a88ae9499ade813615b8"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0922b2bb857468734fab66d6724f63823df73e85", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0922b2bb857468734fab66d6724f63823df73e85", "committedDate": "2020-03-20T04:29:00Z", "message": "nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f7c59c13b5c004c6db571045d2c396027aaed75", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4f7c59c13b5c004c6db571045d2c396027aaed75", "committedDate": "2020-03-20T04:29:08Z", "message": "capitalize"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NzIzNzY0", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#pullrequestreview-378723764", "createdAt": "2020-03-20T18:33:35Z", "commit": {"oid": "4f7c59c13b5c004c6db571045d2c396027aaed75"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODozMzozNVrOF5fDvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODozNDowNlrOF5fEow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMjAxMw==", "bodyText": "Yeah we can remove this I think? But I'm not sure how this build works -- does it just package up the application without depending on anything being in the local maven repo?", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395822013", "createdAt": "2020-03-20T18:33:35Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+plugins {\n+  id \"application\"\n+}\n+\n+ext {\n+    cliMainClass = \"com.google.cloud.tools.jib.cli.JibCli\"\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = \"jib\"\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NTg0Mw=="}, "originalCommit": {"oid": "1f3501ea5218ae9a2e3b7ed7abaa9f550df740f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgyMjI0Mw==", "bodyText": "We can also remove this line, you would only need this if you're trying to access classes in dependencies of jib-core. We do this in appengine-plugins-common kind of as a hack to not have to re specify the implementation dependencies (that is a little hacky, and maybe we should be more explicit about it -- but that's another issue).", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#discussion_r395822243", "createdAt": "2020-03-20T18:34:06Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/build.gradle", "diffHunk": "@@ -0,0 +1,40 @@\n+plugins {\n+  id 'application'\n+  id 'eclipse'\n+}\n+\n+ext {\n+  cliMainClass = 'com.google.cloud.tools.jib.cli.JibCli'\n+}\n+\n+// use `run` to build and run the app\n+// use `installDist` or `distZip` to create an installable application\n+application {\n+  applicationName = 'jib'\n+  mainClassName = cliMainClass\n+}\n+\n+dependencies {\n+  implementation project(':jib-build-plan')\n+  implementation project(':jib-core')\n+  implementation project(':jib-core').configurations.implementation.dependencies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7c59c13b5c004c6db571045d2c396027aaed75"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1082a3838a4064a3dcaa3e6d41c0db23e9781b0e", "author": {"user": {"login": "briandealwis", "name": "Brian de Alwis"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1082a3838a4064a3dcaa3e6d41c0db23e9781b0e", "committedDate": "2020-03-20T19:25:21Z", "message": "drop unnecessary lines from build.gradle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODM3NDA1", "url": "https://github.com/GoogleContainerTools/jib/pull/2235#pullrequestreview-378837405", "createdAt": "2020-03-20T22:05:55Z", "commit": {"oid": "1082a3838a4064a3dcaa3e6d41c0db23e9781b0e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 307, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}