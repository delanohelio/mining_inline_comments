{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTkzMjY3", "number": 2464, "title": "Enable extension-defined custom configuration", "bodyText": "At last, this worked out really nice. Extensions can now define a custom configuration structure in their taste.\nWhat's even more encouraging is that we can even internally cast the configuration object to the right type and present it to the extension. The extension doesn't need to cast the config object themselves.\nExtension API Changes\nThe interface is parameterized, and we get the config type from the new method getExtraConfigType().\n-public interface JibMavenPluginExtension extends JibPluginExtension {\n+public interface JibMavenPluginExtension<T> extends JibPluginExtension {\n\n+  Optional<Class<T>> getExtraConfigType();\n\n   ContainerBuildPlan extendContainerBuildPlan(\n       ContainerBuildPlan buildPlan,\n       Map<String, String> properties,\n+      Optional<T> extraConfig,\n       MavenData mavenData,\n       ExtensionLogger logger)\n       throws JibPluginExtensionException;\nGradle\n    pluginExtension { implementation = '....AnotherQuarkusJibExtension' }\n    pluginExtension {\n      implementation = '....AnotherQuarkusJibExtension'\n      configuration {\n        foo = 'bar'\n      }\n    }\n    pluginExtension { implementation = '....QuarkusJibExtension' }\n    pluginExtension {\n      implementation = '....QuarkusJibExtension'\n      configuration {\n        potato = 'fried'\n        tomato = 'rotten'\n      }\n    }\nDirect assignment (configuration = ...) is not supported, but I think that's OK. But I think direct assignment is technically feasible if we wanted to implement that.\nRunning extension: ....AnotherQuarkusJibExtension\n  --> config empty\nRunning extension: ....AnotherQuarkusJibExtension\n  --> foo: bar\nRunning extension: ....QuarkusJibExtension\n  --> config empty\nRunning extension: ....QuarkusJibExtension\n  --> potato: fried\n  --> tomato: rotten\n\nMaven\n    <pluginExtension>\n      <implementation>....AnotherQuarkusJibExtension</implementation>\n    </pluginExtension>\n    <pluginExtension>\n      <implementation>....AnotherQuarkusJibExtension</implementation>\n      <configuration implementation=\"....AnotherExtensionConfig\">\n        <foo>bar</foo>\n      </configuration>\n    </pluginExtension>\n    <pluginExtension>\n      <implementation>....QuarkusJibExtension</implementation>\n    </pluginExtension>\n    <pluginExtension>\n      <implementation>....QuarkusJibExtension</implementation>\n      <configuration implementation=\"....ExtensionConfig\">\n        <items>\n          <item>potato</item>\n          <item>tomato</item>\n        </items>\n      </configuration>\n    </pluginExtension>\n[INFO] Running extension: ....AnotherQuarkusJibExtension\n[INFO]   --> config empty\n[INFO] Running extension: ....AnotherQuarkusJibExtension\n[INFO]   --> foo: bar\n[INFO] Running extension: ....QuarkusJibExtension\n[INFO]   --> config empty\n[INFO] Running extension: ....QuarkusJibExtension\n[INFO]   --> item: potato\n[INFO]   --> item: tomato", "createdAt": "2020-05-13T20:24:43Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2464", "merged": true, "mergeCommit": {"oid": "5ffb65465503315f654467bb26b303f79c64a38a"}, "closed": true, "closedAt": "2020-05-19T15:36:09Z", "author": {"login": "chanseokoh"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfWVgOAH2gAyNDE3NTkzMjY3OjMwZTUyYjcwMmY1YzNhMmQ1ODljMDYxNzFjNjhhYjY4YmZjODkwYzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci2LVvAFqTQxNDU2NDE1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "30e52b702f5c3a2d589c06171c68ab68bfc890c3", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/30e52b702f5c3a2d589c06171c68ab68bfc890c3", "committedDate": "2020-05-08T18:39:08Z", "message": "Add extra config obj to Gradle ext API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d40f737c357065f89666dcc4097dd67b0ae42122", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d40f737c357065f89666dcc4097dd67b0ae42122", "committedDate": "2020-05-08T18:39:35Z", "message": "Add extra config obj to Maven ext API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09a021d9ffc469e2ace70340a42f9a0bb960d816", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/09a021d9ffc469e2ace70340a42f9a0bb960d816", "committedDate": "2020-05-08T18:39:53Z", "message": "Add Maven util to handle extra config obj"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97d00d324445983dc3310d7a2a717d059bd1032a", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/97d00d324445983dc3310d7a2a717d059bd1032a", "committedDate": "2020-05-08T18:40:45Z", "message": "Wire extra config obj"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b471f4e3003961a44ea640ef63a15c79f2b949f", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0b471f4e3003961a44ea640ef63a15c79f2b949f", "committedDate": "2020-05-08T18:45:13Z", "message": "Fix test compilation errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7037375b4429b8640f7315f5c633cfb03219ba0", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e7037375b4429b8640f7315f5c633cfb03219ba0", "committedDate": "2020-05-08T18:58:33Z", "message": "Fix Javadoc error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26618e36a5e6ad4fb5ca31d9048206f2a87faa2e", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/26618e36a5e6ad4fb5ca31d9048206f2a87faa2e", "committedDate": "2020-05-13T18:22:53Z", "message": "Add extension-defined extra config option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa34189f14a0e1aa6da6ff508140a5f9eec49ddb", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/fa34189f14a0e1aa6da6ff508140a5f9eec49ddb", "committedDate": "2020-05-13T18:51:45Z", "message": "Merge branch 'master' into extra-extension-config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50891c73f59b880d26cba188c6c65f483b197f70", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/50891c73f59b880d26cba188c6c65f483b197f70", "committedDate": "2020-05-13T19:21:57Z", "message": "Fix compilation errors and style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73a73c41007d5c8b205f5e157de02eea7ece286f", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/73a73c41007d5c8b205f5e157de02eea7ece286f", "committedDate": "2020-05-13T19:31:13Z", "message": "Fix Javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50df231587f53a291f91171e095e476619d08d64", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/50df231587f53a291f91171e095e476619d08d64", "committedDate": "2020-05-13T20:07:24Z", "message": "Fix javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c77148360bf4cc42ae515e2529c55eb2d4229f9b", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/c77148360bf4cc42ae515e2529c55eb2d4229f9b", "committedDate": "2020-05-13T20:24:09Z", "message": "Remove comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80e58f142fabe78ae69e7e87a183542bcfebf43e", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/80e58f142fabe78ae69e7e87a183542bcfebf43e", "committedDate": "2020-05-13T21:05:13Z", "message": "Remove unnecessary class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c30b7b5da9351f8b34ad3b0d3566d810ef2f56f", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/8c30b7b5da9351f8b34ad3b0d3566d810ef2f56f", "committedDate": "2020-05-15T19:46:52Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4f5326f5eef547d0d97139fc270604fd2926e154", "committedDate": "2020-05-15T19:55:43Z", "message": "Fix ErrorProne"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTMyODQ4", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#pullrequestreview-412932848", "createdAt": "2020-05-15T20:03:37Z", "commit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDowMzozN1rOGWSPsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDowOToxMlrOGWSZIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMDc4NA==", "bodyText": "I always thought default was designed to be used when extending an interface and maintain backward compatibility. It makes sense here conceptually, but I generally would avoid it?", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#discussion_r426020784", "createdAt": "2020-05-15T20:03:37Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin-extension-api/src/main/java/com/google/cloud/tools/jib/gradle/extension/JibGradlePluginExtension.java", "diffHunk": "@@ -29,13 +30,28 @@\n  * the plugin is configured to load the extension class, the Jib plugin extension framework calls\n  * the interface method of the class.\n  */\n-public interface JibGradlePluginExtension extends JibPluginExtension {\n+public interface JibGradlePluginExtension<T> extends JibPluginExtension {\n+\n+  /**\n+   * The type of an custom configuration defined by this extension. The configuration object is\n+   * mapped from {@code <pluginExtensions><pluginExtension><configuration>}. If the extension does\n+   * not wish to define a custom configuration, this method may return {@code Optional#empty()}.\n+   *\n+   * @return type of an extension-specific custom configuration\n+   */\n+  default Optional<Class<T>> getExtraConfigType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMDk3OQ==", "bodyText": "maybe this is just config? (vs extraConfig?) I dunno", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#discussion_r426020979", "createdAt": "2020-05-15T20:04:08Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin-extension-api/src/main/java/com/google/cloud/tools/jib/gradle/extension/JibGradlePluginExtension.java", "diffHunk": "@@ -44,6 +60,7 @@\n   ContainerBuildPlan extendContainerBuildPlan(\n       ContainerBuildPlan buildPlan,\n       Map<String, String> properties,\n+      Optional<T> extraConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMTc2NA==", "bodyText": "can we add a comment to what's unchecked here?", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#discussion_r426021764", "createdAt": "2020-05-15T20:05:53Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleProjectProperties.java", "diffHunk": "@@ -447,11 +446,46 @@ public JibContainerBuilder runPluginExtensions(\n     }\n   }\n \n-  @Nullable\n-  private JibGradlePluginExtension findConfiguredExtension(\n-      List<JibGradlePluginExtension> extensions, String extensionClass) {\n-    Predicate<JibGradlePluginExtension> matchesClassName =\n-        extension -> extension.getClass().getName().equals(extensionClass);\n-    return extensions.stream().filter(matchesClassName).findFirst().orElse(null);\n+  @SuppressWarnings({\"unchecked\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMjM1Mw==", "bodyText": "is it possible to find multiple or is findFirst just to speed things up?", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#discussion_r426022353", "createdAt": "2020-05-15T20:07:13Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleProjectProperties.java", "diffHunk": "@@ -447,11 +446,46 @@ public JibContainerBuilder runPluginExtensions(\n     }\n   }\n \n-  @Nullable\n-  private JibGradlePluginExtension findConfiguredExtension(\n-      List<JibGradlePluginExtension> extensions, String extensionClass) {\n-    Predicate<JibGradlePluginExtension> matchesClassName =\n-        extension -> extension.getClass().getName().equals(extensionClass);\n-    return extensions.stream().filter(matchesClassName).findFirst().orElse(null);\n+  @SuppressWarnings({\"unchecked\"})\n+  private <T> ContainerBuildPlan runPluginExtension(\n+      Optional<Class<T>> extraConfigType,\n+      JibGradlePluginExtension<?> extension,\n+      ExtensionConfiguration config,\n+      ContainerBuildPlan buildPlan)\n+      throws JibPluginExtensionException {\n+    T extraConfig = null;\n+    if (extraConfigType.isPresent() && config.getExtraConfiguration().isPresent()) {\n+      try {\n+        Action<T> action = (Action<T>) config.getExtraConfiguration().get();\n+        extraConfig = project.getObjects().newInstance(extraConfigType.get());\n+        action.execute(extraConfig);\n+      } catch (ClassCastException ex) {\n+        throw ex; // TODO(chanseok): provide helpful and actionable message\n+      }\n+    }\n+\n+    return ((JibGradlePluginExtension<T>) extension)\n+        .extendContainerBuildPlan(\n+            buildPlan,\n+            config.getProperties(),\n+            Optional.ofNullable(extraConfig),\n+            () -> project,\n+            new GradleExtensionLogger(this::log));\n+  }\n+\n+  private JibGradlePluginExtension<?> findConfiguredExtension(\n+      List<JibGradlePluginExtension<?>> extensions, ExtensionConfiguration config)\n+      throws JibPluginExtensionException {\n+    Predicate<JibGradlePluginExtension<?>> matchesClassName =\n+        extension -> extension.getClass().getName().equals(config.getExtensionClass());\n+    Optional<JibGradlePluginExtension<?>> found =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMjk4OA==", "bodyText": "as much as I love potato and tomato(and I really really do), maybe these should be more descriptive?\nfooParam barParam", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#discussion_r426022988", "createdAt": "2020-05-15T20:08:37Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/GradleProjectPropertiesExtensionTest.java", "diffHunk": "@@ -101,23 +117,83 @@ private FooExtensionConfig(Map<String, String> properties) {\n     public String getExtensionClass() {\n       return extensionClass;\n     }\n+\n+    @Override\n+    public Optional<Object> getExtraConfiguration() {\n+      return Optional.ofNullable(extraConfig);\n+    }\n+  }\n+\n+  private static class FooExtensionConfig extends BaseExtensionConfig<ExtensionDefinedFooConfig> {\n+\n+    private FooExtensionConfig() {\n+      super(FooExtension.class.getName(), Collections.emptyMap(), null);\n+    }\n+\n+    private FooExtensionConfig(Map<String, String> properties) {\n+      super(FooExtension.class.getName(), properties, null);\n+    }\n+\n+    private FooExtensionConfig(ExtensionDefinedFooConfig extraConfig) {\n+      super(\n+          FooExtension.class.getName(),\n+          Collections.emptyMap(),\n+          new Action<ExtensionDefinedFooConfig>() {\n+            @Override\n+            public void execute(ExtensionDefinedFooConfig instance) {\n+              instance.potato = extraConfig.potato;\n+            }\n+          });\n+    }\n   }\n \n-  private static class BarExtensionConfig extends FooExtensionConfig {\n+  private static class BarExtensionConfig extends BaseExtensionConfig<ExtensionDefinedBarConfig> {\n \n     private BarExtensionConfig() {\n-      super(BarExtension.class.getName());\n+      super(BarExtension.class.getName(), Collections.emptyMap(), null);\n+    }\n+\n+    private BarExtensionConfig(ExtensionDefinedBarConfig extraConfig) {\n+      super(\n+          BarExtension.class.getName(),\n+          Collections.emptyMap(),\n+          new Action<ExtensionDefinedBarConfig>() {\n+            @Override\n+            public void execute(ExtensionDefinedBarConfig instance) {\n+              instance.tomato = extraConfig.tomato;\n+            }\n+          });\n+    }\n+  }\n+\n+  // Not to be confused with Jib's plugin extension config. This class is for an extension-defined\n+  // config specific to a third-party extension.\n+  private static class ExtensionDefinedFooConfig {\n+\n+    private String potato;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMzIwMw==", "bodyText": "comment on unchecked?", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#discussion_r426023203", "createdAt": "2020-05-15T20:09:12Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -580,11 +576,44 @@ public JibContainerBuilder runPluginExtensions(\n     }\n   }\n \n-  @Nullable\n-  private JibMavenPluginExtension findConfiguredExtension(\n-      List<JibMavenPluginExtension> extensions, String extensionClass) {\n-    Predicate<JibMavenPluginExtension> matchesClassName =\n-        extension -> extension.getClass().getName().equals(extensionClass);\n-    return extensions.stream().filter(matchesClassName).findFirst().orElse(null);\n+  @SuppressWarnings({\"unchecked\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa7c0bd839bcb682e0f87b607004a0ad5dc606c0", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/aa7c0bd839bcb682e0f87b607004a0ad5dc606c0", "committedDate": "2020-05-15T20:55:47Z", "message": "potato -> fooParam, tomato -> barParam"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ef3f360c1656146e708891c39a4217ded3e0f52", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/5ef3f360c1656146e708891c39a4217ded3e0f52", "committedDate": "2020-05-15T20:58:37Z", "message": "Add comments about suppressing class cast warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a48ba9f7311d9e99481d42b38c8f8fa675f48518", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a48ba9f7311d9e99481d42b38c8f8fa675f48518", "committedDate": "2020-05-15T21:31:10Z", "message": "No default implementation in interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a79c4b8b00b41423c66df2983bb3ba1581a79411", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a79c4b8b00b41423c66df2983bb3ba1581a79411", "committedDate": "2020-05-15T21:55:06Z", "message": "Update Gradle comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "223cf5fc07cee4782f07e289ed3c8c83e8b7cfe8", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/223cf5fc07cee4782f07e289ed3c8c83e8b7cfe8", "committedDate": "2020-05-18T15:50:55Z", "message": "Merge branch 'master' into extra-extension-config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTY0MTUx", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#pullrequestreview-414564151", "createdAt": "2020-05-19T15:26:20Z", "commit": {"oid": "223cf5fc07cee4782f07e289ed3c8c83e8b7cfe8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyNjoyMFrOGXl9qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToyNjoyMFrOGXl9qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MjQyNA==", "bodyText": "Ah yeah, just wondering if we should detect that and tell the user? or just ignore it.", "url": "https://github.com/GoogleContainerTools/jib/pull/2464#discussion_r427392424", "createdAt": "2020-05-19T15:26:20Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleProjectProperties.java", "diffHunk": "@@ -447,11 +446,46 @@ public JibContainerBuilder runPluginExtensions(\n     }\n   }\n \n-  @Nullable\n-  private JibGradlePluginExtension findConfiguredExtension(\n-      List<JibGradlePluginExtension> extensions, String extensionClass) {\n-    Predicate<JibGradlePluginExtension> matchesClassName =\n-        extension -> extension.getClass().getName().equals(extensionClass);\n-    return extensions.stream().filter(matchesClassName).findFirst().orElse(null);\n+  @SuppressWarnings({\"unchecked\"})\n+  private <T> ContainerBuildPlan runPluginExtension(\n+      Optional<Class<T>> extraConfigType,\n+      JibGradlePluginExtension<?> extension,\n+      ExtensionConfiguration config,\n+      ContainerBuildPlan buildPlan)\n+      throws JibPluginExtensionException {\n+    T extraConfig = null;\n+    if (extraConfigType.isPresent() && config.getExtraConfiguration().isPresent()) {\n+      try {\n+        Action<T> action = (Action<T>) config.getExtraConfiguration().get();\n+        extraConfig = project.getObjects().newInstance(extraConfigType.get());\n+        action.execute(extraConfig);\n+      } catch (ClassCastException ex) {\n+        throw ex; // TODO(chanseok): provide helpful and actionable message\n+      }\n+    }\n+\n+    return ((JibGradlePluginExtension<T>) extension)\n+        .extendContainerBuildPlan(\n+            buildPlan,\n+            config.getProperties(),\n+            Optional.ofNullable(extraConfig),\n+            () -> project,\n+            new GradleExtensionLogger(this::log));\n+  }\n+\n+  private JibGradlePluginExtension<?> findConfiguredExtension(\n+      List<JibGradlePluginExtension<?>> extensions, ExtensionConfiguration config)\n+      throws JibPluginExtensionException {\n+    Predicate<JibGradlePluginExtension<?>> matchesClassName =\n+        extension -> extension.getClass().getName().equals(config.getExtensionClass());\n+    Optional<JibGradlePluginExtension<?>> found =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAyMjM1Mw=="}, "originalCommit": {"oid": "4f5326f5eef547d0d97139fc270604fd2926e154"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 244, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}