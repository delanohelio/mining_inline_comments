{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDA2MDU0", "number": 2656, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjoyODowNlrOEUxy1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzozNjowNVrOEVgt0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMjIyODA0OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QyMjoyODowNlrOG7KuSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToxMjo1MlrOG7t2lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5NDg1Nw==", "bodyText": "Should this also be a map, so that we can work on the per-image basis (for example, start pushing one image while pushing base image layers are pending for other images)?", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r464694857", "createdAt": "2020-08-03T22:28:06Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -332,17 +333,21 @@ private void pushBaseImageLayers() {\n \n     results.baseImageLayerPushResults =\n         executorService.submit(\n-            () ->\n-                scheduleCallables(\n-                    PushLayerStep.makeList(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        Verify.verifyNotNull(\n-                            results\n-                                .baseImagesAndLayers\n-                                .get()\n-                                .get(results.baseImagesAndRegistryClient.get().images.get(0))))));\n+            () -> {\n+              List<List<Future<BlobDescriptor>>> baseImageLayerPushResults = new ArrayList<>();\n+              for (List<Future<PreparedLayer>> baseImageLayers :\n+                  results.baseImagesAndLayers.get().values()) {\n+                List<Future<BlobDescriptor>> baseImageLayerPushResult =\n+                    scheduleCallables(\n+                        PushLayerStep.makeList(\n+                            buildContext,\n+                            childProgressDispatcherFactory,\n+                            results.targetRegistryClient.get(),\n+                            Verify.verifyNotNull(baseImageLayers)));\n+                baseImageLayerPushResults.add(baseImageLayerPushResult);\n+              }\n+              return baseImageLayerPushResults;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b05b187896d883bb8942ba8f2d7cabab3a21ad96"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3MDQyMw==", "bodyText": "Good Point .I was thinking of changing it to a map at a later stage when we start pushing the images.Right now I was planing on keeping it as a list so as to make line 457 easier to integrate at this stage.", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465270423", "createdAt": "2020-08-04T19:12:52Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -332,17 +333,21 @@ private void pushBaseImageLayers() {\n \n     results.baseImageLayerPushResults =\n         executorService.submit(\n-            () ->\n-                scheduleCallables(\n-                    PushLayerStep.makeList(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        Verify.verifyNotNull(\n-                            results\n-                                .baseImagesAndLayers\n-                                .get()\n-                                .get(results.baseImagesAndRegistryClient.get().images.get(0))))));\n+            () -> {\n+              List<List<Future<BlobDescriptor>>> baseImageLayerPushResults = new ArrayList<>();\n+              for (List<Future<PreparedLayer>> baseImageLayers :\n+                  results.baseImagesAndLayers.get().values()) {\n+                List<Future<BlobDescriptor>> baseImageLayerPushResult =\n+                    scheduleCallables(\n+                        PushLayerStep.makeList(\n+                            buildContext,\n+                            childProgressDispatcherFactory,\n+                            results.targetRegistryClient.get(),\n+                            Verify.verifyNotNull(baseImageLayers)));\n+                baseImageLayerPushResults.add(baseImageLayerPushResult);\n+              }\n+              return baseImageLayerPushResults;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY5NDg1Nw=="}, "originalCommit": {"oid": "b05b187896d883bb8942ba8f2d7cabab3a21ad96"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTk3MDQ4OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyMTo1MVrOG7uI2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowOTozNFrOG7xm0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NTA5Ng==", "bodyText": "Let's rename this to builtImagesAndContainerConfigurationPushResults.\nUsing a Map is convenient, but compared to using a dedicated class, it's difficult to know what the keys and the values mean and what is the relation between them without documentation or descriptive naming. For a short time, I had to go over the code to see if Image in the map is a base image or a built image. We may keep the current name, but in that case, we should add a clear Javadoc to the field.", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465275096", "createdAt": "2020-08-04T19:21:51Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.containerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69eb5b584f3bbf5d45bdda07f657306fdb650f52"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5NDUzMg==", "bodyText": "I think its a good idea change the name to builtImagesAndContainerConfigurationPushResults.", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465294532", "createdAt": "2020-08-04T19:55:38Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.containerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NTA5Ng=="}, "originalCommit": {"oid": "69eb5b584f3bbf5d45bdda07f657306fdb650f52"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMTkyMw==", "bodyText": "As mentioned in the other comment, how about\nMap<Image, Future<BlobDescriptor>> pushResults =\n\n? (I think buildImage in for (Future<Image> builtImage : ...` is good though.)", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465331923", "createdAt": "2020-08-04T21:09:34Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.containerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NTA5Ng=="}, "originalCommit": {"oid": "69eb5b584f3bbf5d45bdda07f657306fdb650f52"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjMxNTY2OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowNTozMFrOG7xfIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowNTozMFrOG7xfIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyOTk1Mw==", "bodyText": "In a local scope, I think we don't always have to be fully verbose. IMO, reasonable names help reducing cognitive load when reading code, especially in a local scope. So, I prefer\n              List<List<Future<BlobDescriptor>>>  pushResults = new ArrayList<>();\n              for (List<Future<PreparedLayer>> layers : results.baseImagesAndLayers.get().values()) {\n                List<Future<BlobDescriptor>> pushResult =", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465329953", "createdAt": "2020-08-04T21:05:30Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -332,17 +333,21 @@ private void pushBaseImageLayers() {\n \n     results.baseImageLayerPushResults =\n         executorService.submit(\n-            () ->\n-                scheduleCallables(\n-                    PushLayerStep.makeList(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        Verify.verifyNotNull(\n-                            results\n-                                .baseImagesAndLayers\n-                                .get()\n-                                .get(results.baseImagesAndRegistryClient.get().images.get(0))))));\n+            () -> {\n+              List<List<Future<BlobDescriptor>>> baseImageLayerPushResults = new ArrayList<>();\n+              for (List<Future<PreparedLayer>> baseImageLayers :\n+                  results.baseImagesAndLayers.get().values()) {\n+                List<Future<BlobDescriptor>> baseImageLayerPushResult =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50640e4cb7c532c9211d603ea1550d253a1292d1"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjM3ODczOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMToyNjo0MlrOG7yGFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo0MToyMVrOG8M0lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw==", "bodyText": "So I realized a problem with this. builtImage in the loop is a Future, so calling builtImage.get() means blocking until the image is built. Rather, we don't want the loop to block. We may need to put a Future<Image> instead of Image as a key?", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465339927", "createdAt": "2020-08-04T21:26:42Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =\n+                  new HashMap<>();\n+              for (Future<Image> builtImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =\n+                    executorService.submit(\n+                        () ->\n+                            new PushContainerConfigurationStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    results.targetRegistryClient.get(),\n+                                    builtImage.get())\n+                                .call());\n+                containerConfigurationPushResults.put(\n+                    builtImage.get(), containerConfigurationPushResult);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50640e4cb7c532c9211d603ea1550d253a1292d1"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3ODAzNg==", "bodyText": "An alternative is to make PushContainerConfigurationStep return Image and BlobDescriptor together, but I think that is more involved.", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465378036", "createdAt": "2020-08-04T23:04:34Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =\n+                  new HashMap<>();\n+              for (Future<Image> builtImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =\n+                    executorService.submit(\n+                        () ->\n+                            new PushContainerConfigurationStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    results.targetRegistryClient.get(),\n+                                    builtImage.get())\n+                                .call());\n+                containerConfigurationPushResults.put(\n+                    builtImage.get(), containerConfigurationPushResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}, "originalCommit": {"oid": "50640e4cb7c532c9211d603ea1550d253a1292d1"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3MTk2MQ==", "bodyText": "I see what you mean but since we have already called builtImage.get() in the same loop does it really slow down things if we call it again .Done.", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465771961", "createdAt": "2020-08-05T14:33:08Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =\n+                  new HashMap<>();\n+              for (Future<Image> builtImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =\n+                    executorService.submit(\n+                        () ->\n+                            new PushContainerConfigurationStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    results.targetRegistryClient.get(),\n+                                    builtImage.get())\n+                                .call());\n+                containerConfigurationPushResults.put(\n+                    builtImage.get(), containerConfigurationPushResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}, "originalCommit": {"oid": "50640e4cb7c532c9211d603ea1550d253a1292d1"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3NDM4Nw==", "bodyText": "Note we don't call buitlImage.get() inside the loop directly, but rather tell executorService to spawn a new thread to run the lambda which is supposed to call it later.", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465774387", "createdAt": "2020-08-05T14:36:36Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =\n+                  new HashMap<>();\n+              for (Future<Image> builtImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =\n+                    executorService.submit(\n+                        () ->\n+                            new PushContainerConfigurationStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    results.targetRegistryClient.get(),\n+                                    builtImage.get())\n+                                .call());\n+                containerConfigurationPushResults.put(\n+                    builtImage.get(), containerConfigurationPushResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}, "originalCommit": {"oid": "50640e4cb7c532c9211d603ea1550d253a1292d1"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc3NzgxMg==", "bodyText": "Ohh I see the logic now", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465777812", "createdAt": "2020-08-05T14:41:21Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,26 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Image, Future<BlobDescriptor>> containerConfigurationPushResults =\n+                  new HashMap<>();\n+              for (Future<Image> builtImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =\n+                    executorService.submit(\n+                        () ->\n+                            new PushContainerConfigurationStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    results.targetRegistryClient.get(),\n+                                    builtImage.get())\n+                                .call());\n+                containerConfigurationPushResults.put(\n+                    builtImage.get(), containerConfigurationPushResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzOTkyNw=="}, "originalCommit": {"oid": "50640e4cb7c532c9211d603ea1550d253a1292d1"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTkxNDI1OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzozNTozNlrOG8Tzsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzozNTozNlrOG8Tzsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5MjI3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          for (Future<Image> buildImage : results.builtImages.get()) {\n          \n          \n            \n                          for (Future<Image> builtImage : results.builtImages.get()) {", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465892274", "createdAt": "2020-08-05T17:35:36Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,24 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Future<Image>, Future<BlobDescriptor>> pushResults = new HashMap<>();\n+              for (Future<Image> buildImage : results.builtImages.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b043f8e52ca36a5312dc7a06ceb92ee85ebf116b"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTkxNTcxOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzozNjowNVrOG8T0vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzozNjowNVrOG8T0vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5MjU0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Future<BlobDescriptor> containerConfigurationPushResult =\n          \n          \n            \n                            Future<BlobDescriptor> configPushResult =", "url": "https://github.com/GoogleContainerTools/jib/pull/2656#discussion_r465892541", "createdAt": "2020-08-05T17:36:05Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -384,15 +389,24 @@ private void pushContainerConfiguration() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.containerConfigurationPushResult =\n+    results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n-            () ->\n-                new PushContainerConfigurationStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.targetRegistryClient.get(),\n-                        results.builtImages.get().get(0).get())\n-                    .call());\n+            () -> {\n+              Map<Future<Image>, Future<BlobDescriptor>> pushResults = new HashMap<>();\n+              for (Future<Image> buildImage : results.builtImages.get()) {\n+                Future<BlobDescriptor> containerConfigurationPushResult =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b043f8e52ca36a5312dc7a06ceb92ee85ebf116b"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 91, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}