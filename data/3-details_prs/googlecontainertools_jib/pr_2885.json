{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2Mjg4NTEw", "number": 2885, "title": "Add integration testing for jib cli jar command. ", "bodyText": "Fixes #2880\nInitially, we weren't terminating the executor service which is used by CliLogger. This was causing some unexpected behavior in tests that were testing error logging.", "createdAt": "2020-11-05T19:25:01Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2885", "merged": true, "mergeCommit": {"oid": "896e4510e864922b46b0cd6d2913ad6ad7423326"}, "closed": true, "closedAt": "2020-11-10T16:24:30Z", "author": {"login": "mpeddada1"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZlUMOgH2gAyNTE2Mjg4NTEwOjgwMTIzZGM4NTg3NTQ1ZDM1MGY3ZWUwNDFiYTIyNzc2MWQ5ZjZhMWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda9NvYgFqTUyNjczMjA2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "80123dc8587545d350f7ee041ba227761d9f6a1a", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/80123dc8587545d350f7ee041ba227761d9f6a1a", "committedDate": "2020-11-05T16:53:53Z", "message": "Add integration testing for jib cli jar command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4ebcb7466c8acf24fa1f1394fe1e253200e032a", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/f4ebcb7466c8acf24fa1f1394fe1e253200e032a", "committedDate": "2020-11-05T19:07:46Z", "message": "formatting and call method to terminate executor service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a71454d49f07524c5fb6d03567f992ad602b96c", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/2a71454d49f07524c5fb6d03567f992ad602b96c", "committedDate": "2020-11-05T19:20:09Z", "message": "modify javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0c3c361f4dba7d91de5581f459562878cbe1b0e", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d0c3c361f4dba7d91de5581f459562878cbe1b0e", "committedDate": "2020-11-05T19:22:46Z", "message": "modify test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NjE4NTc3", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#pullrequestreview-524618577", "createdAt": "2020-11-05T19:56:24Z", "commit": {"oid": "d0c3c361f4dba7d91de5581f459562878cbe1b0e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1NjoyNFrOHuUMnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1Njo1MFrOHuUNgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyNzQ1Mg==", "bodyText": "This is a creative trick, but I feel it isn't really safe to replace stdout and stderr. For example, the unit framework depends on it, and I think we will not be able to see test failures.\nI have been thinking of two options for verifying command output: run as a separate process, or refactor the code. I didn't really like refactoring code only to be able to check log messages. Eventually I think we will reach the point where we really need to check log messages. And we will eventually find a way to run Jib CLI as a standalone process. Maybe for now, if we can't easily find a way to check log messages, I'm fine punting it.", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#discussion_r518327452", "createdAt": "2020-11-05T19:56:24Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.tools.jib.Command;\n+import com.google.common.io.Resources;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import picocli.CommandLine;\n+\n+public class JarCommandTest {\n+\n+  private static final Integer SUCCESS_CODE = 0;\n+  private static final Integer FAILURE_CODE = 1;\n+\n+  private final PrintStream originalOut = System.out;\n+  private final PrintStream originalErr = System.err;\n+  private final ByteArrayOutputStream out = new ByteArrayOutputStream();\n+  private final ByteArrayOutputStream err = new ByteArrayOutputStream();\n+\n+  @Before\n+  public void setUp() {\n+    out.reset();\n+    err.reset();\n+    System.setOut(new PrintStream(out));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0c3c361f4dba7d91de5581f459562878cbe1b0e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyNzY4MQ==", "bodyText": "Let's just go for\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(actual).isEqualTo(FAILURE_CODE);\n          \n          \n            \n                assertThat(exitCode).isEqualTo(1);", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#discussion_r518327681", "createdAt": "2020-11-05T19:56:50Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.tools.jib.Command;\n+import com.google.common.io.Resources;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import picocli.CommandLine;\n+\n+public class JarCommandTest {\n+\n+  private static final Integer SUCCESS_CODE = 0;\n+  private static final Integer FAILURE_CODE = 1;\n+\n+  private final PrintStream originalOut = System.out;\n+  private final PrintStream originalErr = System.err;\n+  private final ByteArrayOutputStream out = new ByteArrayOutputStream();\n+  private final ByteArrayOutputStream err = new ByteArrayOutputStream();\n+\n+  @Before\n+  public void setUp() {\n+    out.reset();\n+    err.reset();\n+    System.setOut(new PrintStream(out));\n+    System.setErr(new PrintStream(err));\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(originalOut);\n+    System.setErr(originalErr);\n+  }\n+\n+  @Test\n+  public void testErrorLogging_fileDoesNotExist() {\n+    Integer actual =\n+        new CommandLine(new JibCli())\n+            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", \"unknown.jar\");\n+\n+    assertThat(actual).isEqualTo(FAILURE_CODE);\n+    assertThat(err.toString())\n+        .contains(\"[ERROR] The file path provided does not exist: unknown.jar\");\n+  }\n+\n+  @Test\n+  public void testErrorLogging_directoryGiven() throws URISyntaxException {\n+    Path jarFile = Paths.get(Resources.getResource(\"emptyDir\").toURI());\n+    Integer actual =\n+        new CommandLine(new JibCli())\n+            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarFile.toString());\n+\n+    assertThat(actual).isEqualTo(FAILURE_CODE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0c3c361f4dba7d91de5581f459562878cbe1b0e"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bb2202235832c9772975c822a83bb6063ac354b", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/2bb2202235832c9772975c822a83bb6063ac354b", "committedDate": "2020-11-05T20:59:02Z", "message": "renaming variable in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac17e8f382f51ca65f3aa0860b23d94621969497", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ac17e8f382f51ca65f3aa0860b23d94621969497", "committedDate": "2020-11-06T02:02:00Z", "message": "Merge branch 'master' of github.com:GoogleContainerTools/jib into jar-integration-test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd2ac6a7e17bd2fb6c50ebcdf5f77a01edb1f940", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/cd2ac6a7e17bd2fb6c50ebcdf5f77a01edb1f940", "committedDate": "2020-11-06T23:28:01Z", "message": "make tests use PrintWriter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2Mzk2NzM5", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#pullrequestreview-526396739", "createdAt": "2020-11-09T15:53:56Z", "commit": {"oid": "cd2ac6a7e17bd2fb6c50ebcdf5f77a01edb1f940"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1Mzo1NlrOHv1T9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNTo1Njo0MlrOHv1dkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkxODU4MA==", "bodyText": "I don't think we have \"emptyDir\" in our test runtime classpath. Maybe just Paths.get(\"/\")?", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#discussion_r519918580", "createdAt": "2020-11-09T15:53:56Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.tools.jib.Command;\n+import com.google.common.io.Resources;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.Test;\n+import picocli.CommandLine;\n+\n+public class JarCommandTest {\n+\n+  @Test\n+  public void testErrorLogging_fileDoesNotExist() {\n+    CommandLine jibCli = new CommandLine(new JibCli());\n+    StringWriter sw = new StringWriter();\n+    jibCli.setErr(new PrintWriter(sw));\n+\n+    Integer exitCode = jibCli.execute(\"--target\", \"docker://jib-cli-image\", \"jar\", \"unknown.jar\");\n+\n+    assertThat(exitCode).isEqualTo(1);\n+    assertThat(sw.toString())\n+        .isEqualTo(\"[ERROR] The file path provided does not exist: unknown.jar\\n\");\n+  }\n+\n+  @Test\n+  public void testErrorLogging_directoryGiven() throws URISyntaxException {\n+    CommandLine jibCli = new CommandLine(new JibCli());\n+    StringWriter sw = new StringWriter();\n+    jibCli.setErr(new PrintWriter(sw));\n+\n+    Path jarFile = Paths.get(Resources.getResource(\"emptyDir\").toURI());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2ac6a7e17bd2fb6c50ebcdf5f77a01edb1f940"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkxODYzMQ==", "bodyText": "The Google style doesn't allow 'sw'. I think we can go for\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                StringWriter sw = new StringWriter();\n          \n          \n            \n                StringWriter stringWriter = new StringWriter();", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#discussion_r519918631", "createdAt": "2020-11-09T15:53:59Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.tools.jib.Command;\n+import com.google.common.io.Resources;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.Test;\n+import picocli.CommandLine;\n+\n+public class JarCommandTest {\n+\n+  @Test\n+  public void testErrorLogging_fileDoesNotExist() {\n+    CommandLine jibCli = new CommandLine(new JibCli());\n+    StringWriter sw = new StringWriter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2ac6a7e17bd2fb6c50ebcdf5f77a01edb1f940"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkyMTA0Mw==", "bodyText": "exitCode", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#discussion_r519921043", "createdAt": "2020-11-09T15:56:42Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/java/com/google/cloud/tools/jib/cli/cli2/JarCommandTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import com.google.cloud.tools.jib.Command;\n+import com.google.common.io.Resources;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.net.URISyntaxException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import org.junit.Test;\n+import picocli.CommandLine;\n+\n+public class JarCommandTest {\n+\n+  @Test\n+  public void testErrorLogging_fileDoesNotExist() {\n+    CommandLine jibCli = new CommandLine(new JibCli());\n+    StringWriter sw = new StringWriter();\n+    jibCli.setErr(new PrintWriter(sw));\n+\n+    Integer exitCode = jibCli.execute(\"--target\", \"docker://jib-cli-image\", \"jar\", \"unknown.jar\");\n+\n+    assertThat(exitCode).isEqualTo(1);\n+    assertThat(sw.toString())\n+        .isEqualTo(\"[ERROR] The file path provided does not exist: unknown.jar\\n\");\n+  }\n+\n+  @Test\n+  public void testErrorLogging_directoryGiven() throws URISyntaxException {\n+    CommandLine jibCli = new CommandLine(new JibCli());\n+    StringWriter sw = new StringWriter();\n+    jibCli.setErr(new PrintWriter(sw));\n+\n+    Path jarFile = Paths.get(Resources.getResource(\"emptyDir\").toURI());\n+    Integer exitCode =\n+        jibCli.execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarFile.toString());\n+\n+    assertThat(exitCode).isEqualTo(1);\n+    assertThat(sw.toString())\n+        .isEqualTo(\n+            \"[ERROR] The file path provided is for a directory. Please provide a path to a jar file: \"\n+                + jarFile.toString()\n+                + \"\\n\");\n+  }\n+\n+  @Test\n+  public void testJar_toDocker() throws IOException, InterruptedException, URISyntaxException {\n+    Path jarFile = Paths.get(Resources.getResource(\"simpleJar.jar\").toURI());\n+    Integer actual =\n+        new CommandLine(new JibCli())\n+            .execute(\"--target\", \"docker://jib-cli-image\", \"jar\", jarFile.toString());\n+    String output = new Command(\"docker\", \"run\", \"--rm\", \"jib-cli-image\").run();\n+\n+    assertThat(actual).isEqualTo(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd2ac6a7e17bd2fb6c50ebcdf5f77a01edb1f940"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd02ab2d1252337fc1e7cee5f19b8f07f3bd71f7", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/bd02ab2d1252337fc1e7cee5f19b8f07f3bd71f7", "committedDate": "2020-11-09T16:32:12Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df578e761a9e76f9a25f3b38d275b6e1bb1dbca5", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/df578e761a9e76f9a25f3b38d275b6e1bb1dbca5", "committedDate": "2020-11-09T22:40:40Z", "message": "fix test to use root directory instead of empty directory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzMyMDYw", "url": "https://github.com/GoogleContainerTools/jib/pull/2885#pullrequestreview-526732060", "createdAt": "2020-11-09T23:18:29Z", "commit": {"oid": "df578e761a9e76f9a25f3b38d275b6e1bb1dbca5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4867, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}