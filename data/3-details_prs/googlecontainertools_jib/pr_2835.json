{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MDg0NDI1", "number": 2835, "title": "Proposal for Jib CLI Jar Processing", "bodyText": "rendered: https://github.com/GoogleContainerTools/jib/blob/cli-jar-proposal/proposals/cli-jar-processing.md", "createdAt": "2020-10-16T20:22:54Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2835", "merged": true, "mergeCommit": {"oid": "b201e89ca4dc3fd5b59110394c7bad96f96bb8a9"}, "closed": true, "closedAt": "2021-01-29T18:58:56Z", "author": {"login": "mpeddada1"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTLqxMAH2gAyNTA1MDg0NDI1OjNkZjQyMDdjNDU2ODVhMTEwOTAzZjI2ODdkZjkxODVhOWJmYmNkZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd09yswgFqTU3OTUyMTE1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3df4207c45685a110903f2687df9185a9bfbcdea", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3df4207c45685a110903f2687df9185a9bfbcdea", "committedDate": "2020-10-16T19:37:28Z", "message": "Proposal for Jib CLI Jar Processing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30ed3139ce39703cce53e7a61c57ee0bf3a86da4", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/30ed3139ce39703cce53e7a61c57ee0bf3a86da4", "committedDate": "2020-10-16T20:11:27Z", "message": "clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fee7a23e3e3b3b78577a5633f8d1566a0675736", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4fee7a23e3e3b3b78577a5633f8d1566a0675736", "committedDate": "2020-10-16T20:15:58Z", "message": "more clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38498904718d4a61354563ccf2de2788d5f9b328", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/38498904718d4a61354563ccf2de2788d5f9b328", "committedDate": "2020-10-16T20:18:33Z", "message": "remove extra spacing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwODYyMjcz", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#pullrequestreview-510862273", "createdAt": "2020-10-17T01:22:14Z", "commit": {"oid": "38498904718d4a61354563ccf2de2788d5f9b328"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMToyMjoxNFrOHjTQWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMToyMjoxNFrOHjTQWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3NzY4OQ==", "bodyText": "also with a jib.yaml jib-cli buildfile?", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#discussion_r506777689", "createdAt": "2020-10-17T01:22:14Z", "author": {"login": "loosebazooka"}, "path": "proposals/cli-jar-processing.md", "diffHunk": "@@ -0,0 +1,48 @@\n+# Proposal : Jib CLI Jar Processing \n+\n+Relevant Issue: [#2796](https://github.com/GoogleContainerTools/jib/issues/2796)\n+\n+# Motivation \n+Allow users to containerize arbitrary jar files without having to integrate Jib into java build tools (maven and gradle).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38498904718d4a61354563ccf2de2788d5f9b328"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwODYzNTY5", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#pullrequestreview-510863569", "createdAt": "2020-10-17T01:37:53Z", "commit": {"oid": "38498904718d4a61354563ccf2de2788d5f9b328"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMTozNzo1M1rOHjTWbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMTozODowNlrOHjTWgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3OTI0Ng==", "bodyText": "So I think in packaged mode, a fat jar should just be dropped into the container as is. Though we highly recommend against this, the fat jar does not contain an original jar -- it contains classes/resources.", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#discussion_r506779246", "createdAt": "2020-10-17T01:37:53Z", "author": {"login": "loosebazooka"}, "path": "proposals/cli-jar-processing.md", "diffHunk": "@@ -0,0 +1,48 @@\n+# Proposal : Jib CLI Jar Processing \n+\n+Relevant Issue: [#2796](https://github.com/GoogleContainerTools/jib/issues/2796)\n+\n+# Motivation \n+Allow users to containerize arbitrary jar files without having to integrate Jib into java build tools (maven and gradle).\n+\n+# Proposal Changes\n+\n+## Standard Jar \n+A standard jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar into the following layers:  \n+- Dependencies Layer: Contains dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Resources Layer: Contains resources parsed from jar file. Note that it will also include `MANIFEST.MF`.\n+- Classes Layer: Contains classes parsed from jar file. \n+\n+**Entrypoint** : `java -cp /app/dependencies/ /app/explodedJar/ ${MAIN_CLASS}`\n+\n+### Packaged Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY} --mode packaged`.\n+This will result in the following layers on the container:\n+- Dependencies:  Contains the dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Jar Layer: Contains the original jar.\n+\n+**Entrypoint** : `java -jar ${JAR_NAME}.jar`\n+\n+## Spring-Boot Fat Jar\n+A Spring-Boot Fat Jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar into the following layers:  \n+- Dependencies Layer: Contains dependencies derived from the `BOOT-INF/libs` directory in the jar.\n+- Resources Layer: Contains resources parsed from the jar. Note that it will also include `MANIFEST.MF`.\n+- Classes Layer: Contains classes parsed from the jar.\n+\n+**Entrypoint** : `java -cp . org.springframework.boot.loader.JarLauncher`\n+\n+### Packaged Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY} --mode packaged`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38498904718d4a61354563ccf2de2788d5f9b328"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3OTI2NQ==", "bodyText": "I think we should try to parse a layers.idx if we find one: https://spring.io/blog/2020/08/14/creating-efficient-docker-images-with-spring-boot-2-3", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#discussion_r506779265", "createdAt": "2020-10-17T01:38:06Z", "author": {"login": "loosebazooka"}, "path": "proposals/cli-jar-processing.md", "diffHunk": "@@ -0,0 +1,48 @@\n+# Proposal : Jib CLI Jar Processing \n+\n+Relevant Issue: [#2796](https://github.com/GoogleContainerTools/jib/issues/2796)\n+\n+# Motivation \n+Allow users to containerize arbitrary jar files without having to integrate Jib into java build tools (maven and gradle).\n+\n+# Proposal Changes\n+\n+## Standard Jar \n+A standard jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar into the following layers:  \n+- Dependencies Layer: Contains dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Resources Layer: Contains resources parsed from jar file. Note that it will also include `MANIFEST.MF`.\n+- Classes Layer: Contains classes parsed from jar file. \n+\n+**Entrypoint** : `java -cp /app/dependencies/ /app/explodedJar/ ${MAIN_CLASS}`\n+\n+### Packaged Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY} --mode packaged`.\n+This will result in the following layers on the container:\n+- Dependencies:  Contains the dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Jar Layer: Contains the original jar.\n+\n+**Entrypoint** : `java -jar ${JAR_NAME}.jar`\n+\n+## Spring-Boot Fat Jar\n+A Spring-Boot Fat Jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38498904718d4a61354563ccf2de2788d5f9b328"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01f8e7e3528e59f911bfba3c081a343f9cb4ac06", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/01f8e7e3528e59f911bfba3c081a343f9cb4ac06", "committedDate": "2020-10-20T14:48:23Z", "message": "modify motivation and info on spring-boot jars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06bd242363e23412947babd70c196455a92282e0", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/06bd242363e23412947babd70c196455a92282e0", "committedDate": "2020-10-20T14:55:17Z", "message": "description edit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODE5NDk2", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#pullrequestreview-512819496", "createdAt": "2020-10-20T15:02:23Z", "commit": {"oid": "06bd242363e23412947babd70c196455a92282e0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTowMjoyM1rOHlBqQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTowOToxOVrOHlB_sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4NjU2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            **Entrypoint** : `java -cp /app/dependencies/ /app/explodedJar/ ${MAIN_CLASS}`\n          \n          \n            \n            **Entrypoint** : `java -cp /app/dependencies/:/app/explodedJar/ ${MAIN_CLASS}`\n          \n      \n    \n    \n  \n\nWould be ; instead of : on Windows, but we don't support creating Windows images anyway.", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#discussion_r508586562", "createdAt": "2020-10-20T15:02:23Z", "author": {"login": "chanseokoh"}, "path": "proposals/cli-jar-processing.md", "diffHunk": "@@ -0,0 +1,48 @@\n+# Proposal : Jib CLI Jar Processing \n+\n+Relevant Issue: [#2796](https://github.com/GoogleContainerTools/jib/issues/2796)\n+\n+# Motivation \n+Allow users to containerize arbitrary jar files without having to integrate Jib into java build tools (maven and gradle) or use a `.yaml` jib cli buildfile.\n+\n+# Proposal Changes\n+\n+## Standard Jar \n+A standard jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar into the following layers:  \n+- Dependencies Layer: Contains dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Resources Layer: Contains resources parsed from jar file. Note that it will also include `MANIFEST.MF`.\n+- Classes Layer: Contains classes parsed from jar file. \n+\n+**Entrypoint** : `java -cp /app/dependencies/ /app/explodedJar/ ${MAIN_CLASS}`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06bd242363e23412947babd70c196455a92282e0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4ODcwNg==", "bodyText": "We can also create a snapshot dep layer in the non-Spring Boot case.", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#discussion_r508588706", "createdAt": "2020-10-20T15:05:07Z", "author": {"login": "chanseokoh"}, "path": "proposals/cli-jar-processing.md", "diffHunk": "@@ -0,0 +1,48 @@\n+# Proposal : Jib CLI Jar Processing \n+\n+Relevant Issue: [#2796](https://github.com/GoogleContainerTools/jib/issues/2796)\n+\n+# Motivation \n+Allow users to containerize arbitrary jar files without having to integrate Jib into java build tools (maven and gradle) or use a `.yaml` jib cli buildfile.\n+\n+# Proposal Changes\n+\n+## Standard Jar \n+A standard jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar into the following layers:  \n+- Dependencies Layer: Contains dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Resources Layer: Contains resources parsed from jar file. Note that it will also include `MANIFEST.MF`.\n+- Classes Layer: Contains classes parsed from jar file. \n+\n+**Entrypoint** : `java -cp /app/dependencies/ /app/explodedJar/ ${MAIN_CLASS}`\n+\n+### Packaged Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY} --mode packaged`.\n+It will result in the following layers on the container:\n+- Dependencies Layer: Contains the dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Jar Layer: Contains the original jar.\n+\n+**Entrypoint** : `java -jar ${JAR_NAME}.jar`\n+\n+## Spring-Boot Fat Jar\n+A Spring-Boot Fat Jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar according to what is specified in the `layers.idx` file of the jar, if present, or according to following format:\n+- Dependencies Layer: For a dependency whose version does not contain `SNAPSHOT`.\n+- Spring-Boot-Loader Layer: Contains jar loader classes.\n+- Snapshot-Dependencies Layer: For a dependency whose version contains `SNAPSHOT`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06bd242363e23412947babd70c196455a92282e0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU5MjA0OQ==", "bodyText": "Maybe\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            **Entrypoint** : `java -cp . org.springframework.boot.loader.JarLauncher`\n          \n          \n            \n            **Entrypoint** : `java -cp /app org.springframework.boot.loader.JarLauncher`\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#discussion_r508592049", "createdAt": "2020-10-20T15:09:19Z", "author": {"login": "chanseokoh"}, "path": "proposals/cli-jar-processing.md", "diffHunk": "@@ -0,0 +1,48 @@\n+# Proposal : Jib CLI Jar Processing \n+\n+Relevant Issue: [#2796](https://github.com/GoogleContainerTools/jib/issues/2796)\n+\n+# Motivation \n+Allow users to containerize arbitrary jar files without having to integrate Jib into java build tools (maven and gradle) or use a `.yaml` jib cli buildfile.\n+\n+# Proposal Changes\n+\n+## Standard Jar \n+A standard jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar into the following layers:  \n+- Dependencies Layer: Contains dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Resources Layer: Contains resources parsed from jar file. Note that it will also include `MANIFEST.MF`.\n+- Classes Layer: Contains classes parsed from jar file. \n+\n+**Entrypoint** : `java -cp /app/dependencies/ /app/explodedJar/ ${MAIN_CLASS}`\n+\n+### Packaged Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY} --mode packaged`.\n+It will result in the following layers on the container:\n+- Dependencies Layer: Contains the dependencies derived from `Class-Path` in jar manifest. Note that this layer will not be created if `Class-Path` is not present in the manifest.\n+- Jar Layer: Contains the original jar.\n+\n+**Entrypoint** : `java -jar ${JAR_NAME}.jar`\n+\n+## Spring-Boot Fat Jar\n+A Spring-Boot Fat Jar can be containerized in two modes, exploded or packaged. \n+\n+### Exploded Mode\n+Achieved by calling `jib jar ${JAR_NAME}.jar --to ${TARGET_REGISTRY}`\n+The default mode for containerizing a jar. It will explode a jar according to what is specified in the `layers.idx` file of the jar, if present, or according to following format:\n+- Dependencies Layer: For a dependency whose version does not contain `SNAPSHOT`.\n+- Spring-Boot-Loader Layer: Contains jar loader classes.\n+- Snapshot-Dependencies Layer: For a dependency whose version contains `SNAPSHOT`.\n+- Resources Layer: Contains resources parsed from `BOOT-INF/classes/` in the jar and `META-INF/`.\n+- Classes Layer: Contains classes parsed from `BOOT-INF/classes/` in the jar.\n+\n+**Entrypoint** : `java -cp . org.springframework.boot.loader.JarLauncher`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06bd242363e23412947babd70c196455a92282e0"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3165491055d02195db182279ab7bb972e3357ebb", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3165491055d02195db182279ab7bb972e3357ebb", "committedDate": "2020-10-20T15:37:43Z", "message": "modify entrypoint and add snapshot-dependencies layer for non-spring-boot jar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5NTIxMTU3", "url": "https://github.com/GoogleContainerTools/jib/pull/2835#pullrequestreview-579521157", "createdAt": "2021-01-29T18:40:53Z", "commit": {"oid": "3165491055d02195db182279ab7bb972e3357ebb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4827, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}