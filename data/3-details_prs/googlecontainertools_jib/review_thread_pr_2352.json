{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxOTM2Njgy", "number": 2352, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxMjo0MlrODqcrcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1MToxMFrODrrobQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODM2NjU2OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxMjo0MlrOF6M2hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMzozNjozNVrOF6cH_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjI5NA==", "bodyText": "I am guessing the order of version and then name is to preserve the current behavior, but this ordering is really weird. The suffix string should be \"name version\". Ideally \"name/version\" to be compliant with the conventional format in User-Agent, but maybe we'll never able to fix #1067. If we have to preserve the current format, maybe we should set the suffix as \"jib \" + getToolVersion() + \" \" + getToolName() here.", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396572294", "createdAt": "2020-03-23T16:12:42Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "diffHunk": "@@ -500,7 +521,7 @@ public boolean getAlwaysCacheBaseImage() {\n               targetImageConfiguration.getImageRepository(),\n               baseImageConfiguration.getImageRepository(),\n               httpClient)\n-          .setUserAgentSuffix(getToolName());\n+          .setUserAgentSuffix(getToolVersion() + \" \" + getToolName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4MDc3Ng==", "bodyText": "Yeah this is to preserve behavior. I don't really know what to do about this, but the point of this PR was to change the injection point without changing any behavior.\nthe \"jib\" string is injected at a later point.", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396580776", "createdAt": "2020-03-23T16:23:45Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "diffHunk": "@@ -500,7 +521,7 @@ public boolean getAlwaysCacheBaseImage() {\n               targetImageConfiguration.getImageRepository(),\n               baseImageConfiguration.getImageRepository(),\n               httpClient)\n-          .setUserAgentSuffix(getToolName());\n+          .setUserAgentSuffix(getToolVersion() + \" \" + getToolName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjI5NA=="}, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5ODM0NQ==", "bodyText": "But you already changed the code so that we inject getToolVersion() here as opposed to at a later point. My point is, can't we do the same for the jib string?", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396598345", "createdAt": "2020-03-23T16:47:41Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "diffHunk": "@@ -500,7 +521,7 @@ public boolean getAlwaysCacheBaseImage() {\n               targetImageConfiguration.getImageRepository(),\n               baseImageConfiguration.getImageRepository(),\n               httpClient)\n-          .setUserAgentSuffix(getToolName());\n+          .setUserAgentSuffix(getToolVersion() + \" \" + getToolName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjI5NA=="}, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwMDE1Ng==", "bodyText": "Oh I see, I misread this, lemme go take a look", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396600156", "createdAt": "2020-03-23T16:50:04Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "diffHunk": "@@ -500,7 +521,7 @@ public boolean getAlwaysCacheBaseImage() {\n               targetImageConfiguration.getImageRepository(),\n               baseImageConfiguration.getImageRepository(),\n               httpClient)\n-          .setUserAgentSuffix(getToolName());\n+          .setUserAgentSuffix(getToolVersion() + \" \" + getToolName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjI5NA=="}, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MzQwNw==", "bodyText": "So this one is a little weirder, should reigstry client never build the user agent? Perhaps it should delegate it all to an input?\n\n  \n    \n      jib/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java\n    \n    \n        Lines 125 to 141\n      in\n      a6aa257\n    \n    \n    \n    \n\n        \n          \n             private String makeUserAgent() { \n        \n\n        \n          \n               if (!JibSystemProperties.isUserAgentEnabled()) { \n        \n\n        \n          \n                 return \"\"; \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               StringBuilder userAgentBuilder = new StringBuilder(\"jib \").append(ProjectInfo.VERSION); \n        \n\n        \n          \n               if (userAgentSuffix != null) { \n        \n\n        \n          \n                 userAgentBuilder.append(\" \").append(userAgentSuffix); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               if (!Strings.isNullOrEmpty(System.getProperty(JibSystemProperties.UPSTREAM_CLIENT))) { \n        \n\n        \n          \n                 userAgentBuilder \n        \n\n        \n          \n                     .append(\" \") \n        \n\n        \n          \n                     .append(System.getProperty(JibSystemProperties.UPSTREAM_CLIENT)); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               return userAgentBuilder.toString(); \n        \n\n        \n          \n             } \n        \n\n        \n          \n           }", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396783407", "createdAt": "2020-03-23T22:02:19Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "diffHunk": "@@ -500,7 +521,7 @@ public boolean getAlwaysCacheBaseImage() {\n               targetImageConfiguration.getImageRepository(),\n               baseImageConfiguration.getImageRepository(),\n               httpClient)\n-          .setUserAgentSuffix(getToolName());\n+          .setUserAgentSuffix(getToolVersion() + \" \" + getToolName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjI5NA=="}, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyMjUyNw==", "bodyText": "I haven't looked into this carefully, but I agree. I do remember I thought it was wrong for RegistryClient to build any part of the user agent. RegistryClient should really be like an independent library where the libraries user should have full control over the user agent. I remember I tried to refactor this but quit shortly after it got into a snowball.", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396822527", "createdAt": "2020-03-23T23:36:35Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "diffHunk": "@@ -500,7 +521,7 @@ public boolean getAlwaysCacheBaseImage() {\n               targetImageConfiguration.getImageRepository(),\n               baseImageConfiguration.getImageRepository(),\n               httpClient)\n-          .setUserAgentSuffix(getToolName());\n+          .setUserAgentSuffix(getToolVersion() + \" \" + getToolName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjI5NA=="}, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODM2ODQ5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxMzowM1rOF6M3xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjozMTowNFrOF6NtEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjYxNA==", "bodyText": "So related to my previous comment, I didn't like the current format jib 2.1.0 jib-maven-plugin, which should really be like jib-maven-plugin/2.1.0 jib-core/0.13.0-SNAPSHOT Google-HTTP-Java-Client/1.27.0. Maybe don't add jib here, but set it inside userAgentSuffix?", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396572614", "createdAt": "2020-03-23T16:13:03Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "diffHunk": "@@ -127,7 +126,7 @@ private String makeUserAgent() {\n         return \"\";\n       }\n \n-      StringBuilder userAgentBuilder = new StringBuilder(\"jib \").append(ProjectInfo.VERSION);\n+      StringBuilder userAgentBuilder = new StringBuilder(\"jib\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4NjI1OA==", "bodyText": "I don't think we can actually change this. We have dependencies on parsing this in other systems.", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396586258", "createdAt": "2020-03-23T16:31:04Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "diffHunk": "@@ -127,7 +126,7 @@ private String makeUserAgent() {\n         return \"\";\n       }\n \n-      StringBuilder userAgentBuilder = new StringBuilder(\"jib \").append(ProjectInfo.VERSION);\n+      StringBuilder userAgentBuilder = new StringBuilder(\"jib\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3MjYxNA=="}, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODM4OTUyOnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoxNzo0MlrOF6NFvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoyNDo1M1rOF6Na-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NjE5MA==", "bodyText": "It feels weird that the parameter is declared as @Nullable but passing a null causes an exception. Perhaps the caller should do Verify.verifyNotNull() before passing the argument.", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396576190", "createdAt": "2020-03-23T16:17:42Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -82,18 +83,22 @@\n   /**\n    * Static factory method for {@link MavenProjectProperties}.\n    *\n+   * @param jibPluginDescriptor the jib-maven-plugin plugin descriptor\n    * @param project the {@link MavenProject} for the plugin.\n    * @param session the {@link MavenSession} for the plugin.\n    * @param log the Maven {@link Log} to log messages during Jib execution\n    * @param tempDirectoryProvider temporary directory provider\n    * @return a MavenProjectProperties from the given project and logger.\n    */\n   public static MavenProjectProperties getForProject(\n+      @Nullable PluginDescriptor jibPluginDescriptor,\n       MavenProject project,\n       MavenSession session,\n       Log log,\n       TempDirectoryProvider tempDirectoryProvider) {\n-    return new MavenProjectProperties(project, session, log, tempDirectoryProvider);\n+    Preconditions.checkNotNull(jibPluginDescriptor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4MTYyNw==", "bodyText": "That's a good point.", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r396581627", "createdAt": "2020-03-23T16:24:53Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -82,18 +83,22 @@\n   /**\n    * Static factory method for {@link MavenProjectProperties}.\n    *\n+   * @param jibPluginDescriptor the jib-maven-plugin plugin descriptor\n    * @param project the {@link MavenProject} for the plugin.\n    * @param session the {@link MavenSession} for the plugin.\n    * @param log the Maven {@link Log} to log messages during Jib execution\n    * @param tempDirectoryProvider temporary directory provider\n    * @return a MavenProjectProperties from the given project and logger.\n    */\n   public static MavenProjectProperties getForProject(\n+      @Nullable PluginDescriptor jibPluginDescriptor,\n       MavenProject project,\n       MavenSession session,\n       Log log,\n       TempDirectoryProvider tempDirectoryProvider) {\n-    return new MavenProjectProperties(project, session, log, tempDirectoryProvider);\n+    Preconditions.checkNotNull(jibPluginDescriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3NjE5MA=="}, "originalCommit": {"oid": "08eff88dd12b8f030d643009081494c7ff237599"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk4MzI4OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NDowOVrOF8HgwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NDowOVrOF8HgwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MTk1Mg==", "bodyText": "\"Sets a the ...\" --> \"Sets the ...\"", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r398581952", "createdAt": "2020-03-26T13:44:09Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "diffHunk": "@@ -89,13 +88,13 @@ public Factory setCredential(@Nullable Credential credential) {\n     }\n \n     /**\n-     * Sets a suffix to append to {@code User-Agent} headers. See {@link #makeUserAgent()}.\n+     * Sets a the value of {@code User-Agent} in headers for registry requests.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bade91d6df8d94f3a1bef2df3cba1689d1437b9f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTI5OTAzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1MDoyOVrOF8KpeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1MDoyOVrOF8KpeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMzMzNg==", "bodyText": "jib <version> <type> --> jib <toolVersion> <toolName>", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r398633336", "createdAt": "2020-03-26T14:50:29Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/BuildContext.java", "diffHunk": "@@ -521,4 +543,27 @@ public void close() throws IOException {\n     }\n     httpClient.shutDown();\n   }\n+\n+  /**\n+   * The {@code User-Agent} is in the form of {@code jib <version> <type>}. For example: {@code jib", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bade91d6df8d94f3a1bef2df3cba1689d1437b9f"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTMwMjIxOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleProjectProperties.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1MToxMFrOF8KrhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNTo0MVrOF8Upzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMzg2MA==", "bodyText": "private static\nSo Gradle doesn't have something like PluginDescriptor?", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r398633860", "createdAt": "2020-03-26T14:51:10Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleProjectProperties.java", "diffHunk": "@@ -69,6 +69,10 @@\n   /** Used to generate the User-Agent header and history metadata. */\n   private static final String TOOL_NAME = \"jib-gradle-plugin\";\n \n+  /** Used to generate the User-Agent header and history metadata and verify versions. */\n+  static final String TOOL_VERSION =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bade91d6df8d94f3a1bef2df3cba1689d1437b9f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc2OTg0MQ==", "bodyText": "Yeah I don't think so, I tried looking :\\", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r398769841", "createdAt": "2020-03-26T17:46:18Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleProjectProperties.java", "diffHunk": "@@ -69,6 +69,10 @@\n   /** Used to generate the User-Agent header and history metadata. */\n   private static final String TOOL_NAME = \"jib-gradle-plugin\";\n \n+  /** Used to generate the User-Agent header and history metadata and verify versions. */\n+  static final String TOOL_VERSION =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMzg2MA=="}, "originalCommit": {"oid": "bade91d6df8d94f3a1bef2df3cba1689d1437b9f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5NzI2Mg==", "bodyText": "The one option is to search the build classpath for jib-gradle-plugin and extract the version from there. But that's basically the same as doing this.", "url": "https://github.com/GoogleContainerTools/jib/pull/2352#discussion_r398797262", "createdAt": "2020-03-26T18:25:41Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleProjectProperties.java", "diffHunk": "@@ -69,6 +69,10 @@\n   /** Used to generate the User-Agent header and history metadata. */\n   private static final String TOOL_NAME = \"jib-gradle-plugin\";\n \n+  /** Used to generate the User-Agent header and history metadata and verify versions. */\n+  static final String TOOL_VERSION =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzMzg2MA=="}, "originalCommit": {"oid": "bade91d6df8d94f3a1bef2df3cba1689d1437b9f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 314, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}