{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDMxODc5", "number": 2609, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyMDo0OFrOEReNgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo0MToxNlrOERh5ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzU2MjI0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyMDo0OFrOG2M1Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyMDo0OFrOG2M1Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ4NjUzMA==", "bodyText": "This confuses me. It says \"can be null\" and then \"set to empty\". Does \"empty\" mean an empty list? And what exactly \"override\" means?", "url": "https://github.com/GoogleContainerTools/jib/pull/2609#discussion_r459486530", "createdAt": "2020-07-23T14:20:48Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -66,12 +68,14 @@\n   @Nullable private BaseImageSpec from;\n   @Nullable private Instant creationTime;\n   @Nullable private ImageFormat format;\n-  @Nullable private Map<String, String> environment;\n-  @Nullable private Map<String, String> labels;\n-  @Nullable private Set<AbsoluteUnixPath> volumes;\n-  @Nullable private Set<Port> exposedPorts;\n+  private Map<String, String> environment;\n+  private Map<String, String> labels;\n+  private Set<AbsoluteUnixPath> volumes;\n+  private Set<Port> exposedPorts;\n   @Nullable private String user;\n   @Nullable private AbsoluteUnixPath workingDirectory;\n+  // these two specific collection can be null as they can be set to empty to override\n+  // the base image", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ef65d47b4be6bd141b617969d03ea4682c39125"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzU3NjA5OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyMzo1NVrOG2M-JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTowMTowMVrOG2OrRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ4ODgwNQ==", "bodyText": "Use of ImmutableMap makes me wonder if it is possible to make all the fields of the class final? (Although using final on all the fields doesn't make this class an immutable one, but there is no reason not to do so if possible.) Or, is it not feasible due to JSON parsing?", "url": "https://github.com/GoogleContainerTools/jib/pull/2609#discussion_r459488805", "createdAt": "2020-07-23T14:23:55Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -124,14 +128,13 @@ public BuildFileSpec(\n     if (format != null) {\n       this.format = ImageFormat.valueOf(format);\n     }\n-    this.environment = environment;\n-    this.labels = labels;\n-    if (volumes != null) {\n-      this.volumes = volumes.stream().map(AbsoluteUnixPath::get).collect(Collectors.toSet());\n-    }\n-    if (exposedPorts != null) {\n-      this.exposedPorts = Ports.parse(exposedPorts);\n-    }\n+    this.environment = (environment == null) ? ImmutableMap.of() : environment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ef65d47b4be6bd141b617969d03ea4682c39125"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxNjc0Mw==", "bodyText": "No final should be on it. I guess I just never got around to doing it.", "url": "https://github.com/GoogleContainerTools/jib/pull/2609#discussion_r459516743", "createdAt": "2020-07-23T15:01:01Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -124,14 +128,13 @@ public BuildFileSpec(\n     if (format != null) {\n       this.format = ImageFormat.valueOf(format);\n     }\n-    this.environment = environment;\n-    this.labels = labels;\n-    if (volumes != null) {\n-      this.volumes = volumes.stream().map(AbsoluteUnixPath::get).collect(Collectors.toSet());\n-    }\n-    if (exposedPorts != null) {\n-      this.exposedPorts = Ports.parse(exposedPorts);\n-    }\n+    this.environment = (environment == null) ? ImmutableMap.of() : environment;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ4ODgwNQ=="}, "originalCommit": {"oid": "3ef65d47b4be6bd141b617969d03ea4682c39125"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODE2Njk4OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjo0MToxNlrOG2SyVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo0NzowOVrOG2XNMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NDA4Ng==", "bodyText": "Sorry, can we return ImmutableList here instead of List? Might be more secure to pass around immutable collections.", "url": "https://github.com/GoogleContainerTools/jib/pull/2609#discussion_r459584086", "createdAt": "2020-07-23T16:41:16Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -85,15 +86,15 @@ public PlatformSpec(\n     return Optional.ofNullable(osVersion);\n   }\n \n-  public Optional<List<String>> getOsFeatures() {\n-    return Optional.ofNullable(osFeatures);\n+  public List<String> getOsFeatures() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655fb972c6db24f18551aa8610b58d8c95bd00b0"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYxODY2Mg==", "bodyText": "That's a good question. Usually we use the base type interface on return values. That keeps implementation details from leaking out. However having said that, this is not an api that is exposed externally, so it could be okay. The other issue is that we don't know what kind of list the yaml parser returns, so we would have to wrap the list generated in the constructor  (https://github.com/GoogleContainerTools/jib/pull/2609/files#diff-784a41ae78bc030a7b61cd50c6a28e42R72) with a ImmutableList type.\nSo there's a lot going on here, and there's no obvious correct answer. It could go either way. In general though, we use the base type interface, and I just happened to continue to use that pattern.", "url": "https://github.com/GoogleContainerTools/jib/pull/2609#discussion_r459618662", "createdAt": "2020-07-23T17:40:25Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -85,15 +86,15 @@ public PlatformSpec(\n     return Optional.ofNullable(osVersion);\n   }\n \n-  public Optional<List<String>> getOsFeatures() {\n-    return Optional.ofNullable(osFeatures);\n+  public List<String> getOsFeatures() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NDA4Ng=="}, "originalCommit": {"oid": "655fb972c6db24f18551aa8610b58d8c95bd00b0"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NjQ5OQ==", "bodyText": "Thanks for the explanation! That makes sense:)", "url": "https://github.com/GoogleContainerTools/jib/pull/2609#discussion_r459656499", "createdAt": "2020-07-23T18:47:09Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -85,15 +86,15 @@ public PlatformSpec(\n     return Optional.ofNullable(osVersion);\n   }\n \n-  public Optional<List<String>> getOsFeatures() {\n-    return Optional.ofNullable(osFeatures);\n+  public List<String> getOsFeatures() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU4NDA4Ng=="}, "originalCommit": {"oid": "655fb972c6db24f18551aa8610b58d8c95bd00b0"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 287, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}