{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1Njc5MzQ4", "number": 2320, "title": "Allow more timezone formats", "bodyText": "fixes #2319", "createdAt": "2020-03-09T16:11:20Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2320", "merged": true, "mergeCommit": {"oid": "ac099d2f67e8af60da95cdab98680823d4a41df0"}, "closed": true, "closedAt": "2020-03-12T15:54:23Z", "author": {"login": "loosebazooka"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMAP7JAH2gAyMzg1Njc5MzQ4OjkxNDFhZjdmYzEyYmRmZjEyYjMwNTBhYzE0YTdmYjM5MjU1MjIxYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM9xqxAFqTM3MzY4MDI4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9141af7fc12bdff12b3050ac14a7fb39255221bc", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/9141af7fc12bdff12b3050ac14a7fb39255221bc", "committedDate": "2020-03-09T16:10:34Z", "message": "Allow more timezone formats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDEwMzQz", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#pullrequestreview-371410343", "createdAt": "2020-03-09T18:03:57Z", "commit": {"oid": "9141af7fc12bdff12b3050ac14a7fb39255221bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowMzo1N1rOFzzmdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowMzo1N1rOFzzmdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NzEyNw==", "bodyText": "Should we support -HHMM and -HH:MM as well? And I am not sure if + in +HH is needed. Or perhaps I misunderstood the meaning of +.\nAnd should we support +hh:mm:ss and -hh:mm:ss as well? I don't expect anyone to set a second for the offset, but a machine may generate, say,  09:00:00 for completeness.\nIt's also worth making a CHANGELOG entry that Jib no longer accepts the non-ISO8601 zone format (e.g., [Europe/Paris])? Or, should we just use this new formatter only when the built-in formatter fails?", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r389867127", "createdAt": "2020-03-09T18:03:57Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -730,9 +731,21 @@ static Instant getCreationTime(String configuredCreationTime, ProjectProperties\n           return Instant.now();\n \n         default:\n-          return DateTimeFormatter.ISO_DATE_TIME.parse(configuredCreationTime, Instant::from);\n+          DateTimeFormatter formatter =\n+              new DateTimeFormatterBuilder()\n+                  .append(DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n+                  .optionalStart()\n+                  .appendOffset(\"+HH:MM\", \"+00:00\")\n+                  .optionalEnd()\n+                  .optionalStart()\n+                  .appendOffset(\"+HHMM\", \"+0000\")\n+                  .optionalEnd()\n+                  .optionalStart()\n+                  .appendOffset(\"+HH\", \"Z\")\n+                  .optionalEnd()\n+                  .toFormatter();\n+          return formatter.parse(configuredCreationTime, Instant::from);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9141af7fc12bdff12b3050ac14a7fb39255221bc"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/38c5577ccac0e05ebd23f8c6dae743ea04cf8c10", "committedDate": "2020-03-09T19:39:20Z", "message": "Support full iso6801 and increase test coverage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDc2MDYy", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#pullrequestreview-371476062", "createdAt": "2020-03-09T19:43:04Z", "commit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo0MzowNFrOFz2ysQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTo0MzowNFrOFz2ysQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxOTQwOQ==", "bodyText": "https://github.com/frohoff/jdk8u-dev-jdk/blob/master/src/share/classes/java/time/format/DateTimeFormatter.java#L992", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r389919409", "createdAt": "2020-03-09T19:43:04Z", "author": {"login": "loosebazooka"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -730,9 +731,31 @@ static Instant getCreationTime(String configuredCreationTime, ProjectProperties\n           return Instant.now();\n \n         default:\n-          return DateTimeFormatter.ISO_DATE_TIME.parse(configuredCreationTime, Instant::from);\n+          DateTimeFormatter formatter =\n+              new DateTimeFormatterBuilder()\n+                  .parseCaseInsensitive()\n+                  .append(DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n+                  // iso 8601 strict", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTUxNjY1", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#pullrequestreview-371551665", "createdAt": "2020-03-09T21:46:50Z", "commit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo0Njo1MFrOFz6gDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1NDowN1rOFz6r8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4MDE3Mw==", "bodyText": "Aha. Then can't we start with ISO_DATE_TIME? If I'm not mistaken, we only need to add .appendOffset(\"+HHMM\", \"+0000\") for the case without a colon. So, can't we do something like this?\nnew DateTimeFormatterBuilder()\n                .append(ISO_DATE_TIME)\n                .optionalStart()\n                .appendOffset(\"+HHMM\", \"+0000\")\n                .optionalStart()\n                .toFormatter(...)\nIf that doesn't work, at least, I think we can base on .appendOffsetId() and add only .appendOffset(\"+HHMM\", \"+0000\")?", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r389980173", "createdAt": "2020-03-09T21:46:50Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -730,9 +731,31 @@ static Instant getCreationTime(String configuredCreationTime, ProjectProperties\n           return Instant.now();\n \n         default:\n-          return DateTimeFormatter.ISO_DATE_TIME.parse(configuredCreationTime, Instant::from);\n+          DateTimeFormatter formatter =\n+              new DateTimeFormatterBuilder()\n+                  .parseCaseInsensitive()\n+                  .append(DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n+                  // iso 8601 strict", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxOTQwOQ=="}, "originalCommit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4MDQwNQ==", "bodyText": "Is this intended? The JDK code you linked doesn't start with this.", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r389980405", "createdAt": "2020-03-09T21:47:23Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -730,9 +731,31 @@ static Instant getCreationTime(String configuredCreationTime, ProjectProperties\n           return Instant.now();\n \n         default:\n-          return DateTimeFormatter.ISO_DATE_TIME.parse(configuredCreationTime, Instant::from);\n+          DateTimeFormatter formatter =\n+              new DateTimeFormatterBuilder()\n+                  .parseCaseInsensitive()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4MTI4Mw==", "bodyText": "Judging from this Javadoc, shouldn't this be after .appendOffset(\"+HH\", \"Z\")?", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r389981283", "createdAt": "2020-03-09T21:49:28Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -730,9 +731,31 @@ static Instant getCreationTime(String configuredCreationTime, ProjectProperties\n           return Instant.now();\n \n         default:\n-          return DateTimeFormatter.ISO_DATE_TIME.parse(configuredCreationTime, Instant::from);\n+          DateTimeFormatter formatter =\n+              new DateTimeFormatterBuilder()\n+                  .parseCaseInsensitive()\n+                  .append(DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n+                  // iso 8601 strict\n+                  .optionalStart()\n+                  .appendOffset(\"+HH:MM\", \"+00:00\")\n+                  .optionalStart()\n+                  .appendLiteral('[')\n+                  .parseCaseSensitive()\n+                  .appendZoneRegionId()\n+                  .appendLiteral(']')\n+                  .optionalEnd()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4MjQ2OA==", "bodyText": "Hmm... is this true with the built-in ISO_DATE_TIME?", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r389982468", "createdAt": "2020-03-09T21:52:16Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessorTest.java", "diffHunk": "@@ -908,11 +909,48 @@ public void testGetCreationTime_useCurrentTimestamp() throws InvalidCreationTime\n \n   @Test\n   public void testGetCreationTime_isoDateTimeValue() throws InvalidCreationTimeException {\n-    Instant time =\n-        PluginConfigurationProcessor.getCreationTime(\n-            \"2011-12-03T10:15:30+09:00\", projectProperties);\n     Instant expected = DateTimeFormatter.ISO_DATE_TIME.parse(\"2011-12-03T01:15:30Z\", Instant::from);\n-    Assert.assertEquals(expected, time);\n+    List<String> validTimeStamps =\n+        ImmutableList.of(\n+            \"2011-12-03T10:15:30+09:00\",\n+            \"2011-12-03T10:15:30+09:00[Asia/Tokyo]\",\n+            \"2011-12-02T16:15:30-09:00\",\n+            \"2011-12-03T10:15:30+0900\",\n+            \"2011-12-02T16:15:30-0900\",\n+            \"2011-12-03T10:15:30+09\",\n+            \"2011-12-02T16:15:30-09\",\n+            \"2011-12-03T01:15:30Z\");\n+    for (String timeString : validTimeStamps) {\n+      Instant time = PluginConfigurationProcessor.getCreationTime(timeString, projectProperties);\n+      Assert.assertEquals(\"for \" + timeString, expected, time);\n+    }\n+  }\n+\n+  @Test\n+  public void testGetCreationTime_isoDateTimeValueTimeZoneRegionOnlyAllowedForMostStrict8601Mode() {\n+    List<String> invalidTimeStamps =\n+        ImmutableList.of(\n+            \"2011-12-03T01:15:30+0900[Asia/Tokyo]\", \"2011-12-03T01:15:30+09[Asia/Tokyo]\");\n+    for (String timeString : invalidTimeStamps) {\n+      try {\n+        PluginConfigurationProcessor.getCreationTime(timeString, projectProperties);\n+        Assert.fail(\n+            \"creationTime should fail if region specified when zone not in HH:MM mode - \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4MzIxOQ==", "bodyText": "Looks like the built-in ISO_DATE_TIME allows this? We go against it?\n\nThe ISO-like date-time formatter that formats or parses a date-time with the offset and zone if available, such as '2011-12-03T10:15:30',", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r389983219", "createdAt": "2020-03-09T21:54:07Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/test/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessorTest.java", "diffHunk": "@@ -908,11 +909,48 @@ public void testGetCreationTime_useCurrentTimestamp() throws InvalidCreationTime\n \n   @Test\n   public void testGetCreationTime_isoDateTimeValue() throws InvalidCreationTimeException {\n-    Instant time =\n-        PluginConfigurationProcessor.getCreationTime(\n-            \"2011-12-03T10:15:30+09:00\", projectProperties);\n     Instant expected = DateTimeFormatter.ISO_DATE_TIME.parse(\"2011-12-03T01:15:30Z\", Instant::from);\n-    Assert.assertEquals(expected, time);\n+    List<String> validTimeStamps =\n+        ImmutableList.of(\n+            \"2011-12-03T10:15:30+09:00\",\n+            \"2011-12-03T10:15:30+09:00[Asia/Tokyo]\",\n+            \"2011-12-02T16:15:30-09:00\",\n+            \"2011-12-03T10:15:30+0900\",\n+            \"2011-12-02T16:15:30-0900\",\n+            \"2011-12-03T10:15:30+09\",\n+            \"2011-12-02T16:15:30-09\",\n+            \"2011-12-03T01:15:30Z\");\n+    for (String timeString : validTimeStamps) {\n+      Instant time = PluginConfigurationProcessor.getCreationTime(timeString, projectProperties);\n+      Assert.assertEquals(\"for \" + timeString, expected, time);\n+    }\n+  }\n+\n+  @Test\n+  public void testGetCreationTime_isoDateTimeValueTimeZoneRegionOnlyAllowedForMostStrict8601Mode() {\n+    List<String> invalidTimeStamps =\n+        ImmutableList.of(\n+            \"2011-12-03T01:15:30+0900[Asia/Tokyo]\", \"2011-12-03T01:15:30+09[Asia/Tokyo]\");\n+    for (String timeString : invalidTimeStamps) {\n+      try {\n+        PluginConfigurationProcessor.getCreationTime(timeString, projectProperties);\n+        Assert.fail(\n+            \"creationTime should fail if region specified when zone not in HH:MM mode - \"\n+                + timeString);\n+      } catch (InvalidCreationTimeException ex) {\n+        // pass\n+      }\n+    }\n+  }\n+\n+  @Test\n+  public void testGetCreationTime_isoDateTimeValueRequiresTimeZone() {\n+    try {\n+      PluginConfigurationProcessor.getCreationTime(\"2011-12-03T01:15:30\", projectProperties);\n+      Assert.fail(\"creationTime should fail if timezone not specified\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38c5577ccac0e05ebd23f8c6dae743ea04cf8c10"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1d74145917592fe1029896c9ed096711cb0022f", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a1d74145917592fe1029896c9ed096711cb0022f", "committedDate": "2020-03-10T00:04:19Z", "message": "do a better job of custom parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ded47da8061e040faaf8c4f8a5672093ac1cdba", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1ded47da8061e040faaf8c4f8a5672093ac1cdba", "committedDate": "2020-03-10T04:03:23Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDcyMTI0", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#pullrequestreview-372072124", "createdAt": "2020-03-10T15:38:12Z", "commit": {"oid": "1ded47da8061e040faaf8c4f8a5672093ac1cdba"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTozODoxM1rOF0UqIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTozODoxM1rOF0UqIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQwODczOA==", "bodyText": "It's not completely ignored. The following code prints 1322842530 and 1322842529 respecively.\n    System.out.println(Instant.from(DateTimeFormatter.ISO_DATE_TIME.parse(\"2011-12-03T01:15:30+09:00:00\")).getEpochSecond());\n    System.out.println(Instant.from(DateTimeFormatter.ISO_DATE_TIME.parse(\"2011-12-03T01:15:30+09:00:01\")).getEpochSecond());\nHowever, I don't really think anyone will really use seconds (other than 00) as part of timezone.", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r390408738", "createdAt": "2020-03-10T15:38:13Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java", "diffHunk": "@@ -730,9 +731,21 @@ static Instant getCreationTime(String configuredCreationTime, ProjectProperties\n           return Instant.now();\n \n         default:\n-          return DateTimeFormatter.ISO_DATE_TIME.parse(configuredCreationTime, Instant::from);\n+          DateTimeFormatter formatter =\n+              new DateTimeFormatterBuilder()\n+                  .append(DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n+                  .optionalStart()\n+                  .appendOffset(\"+HH:MM\", \"+00:00\")\n+                  .optionalEnd()\n+                  .optionalStart()\n+                  .appendOffset(\"+HHMM\", \"+0000\")\n+                  .optionalEnd()\n+                  .optionalStart()\n+                  .appendOffset(\"+HH\", \"Z\")\n+                  .optionalEnd()\n+                  .toFormatter();\n+          return formatter.parse(configuredCreationTime, Instant::from);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NzEyNw=="}, "originalCommit": {"oid": "9141af7fc12bdff12b3050ac14a7fb39255221bc"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dc5a2e8f384295aa84ec1663517e8d32d4e0711", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6dc5a2e8f384295aa84ec1663517e8d32d4e0711", "committedDate": "2020-03-10T18:21:45Z", "message": "Update CHANGELOG"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjU3NzA3", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#pullrequestreview-373657707", "createdAt": "2020-03-12T15:26:11Z", "commit": {"oid": "6dc5a2e8f384295aa84ec1663517e8d32d4e0711"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNToyNjoxMVrOF1jc0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNToyNjoxMVrOF1jc0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY5OTY2Ng==", "bodyText": "I believe Z was already accepted. So, \"accepts a timezone format without colon: +HHmm\"? And if this improves usability with git, worth nothing that? Like, \"This helps use git commit timestamp from git ... or some git timestamp plugin\"?", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#discussion_r391699666", "createdAt": "2020-03-12T15:26:11Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/CHANGELOG.md", "diffHunk": "@@ -6,6 +6,7 @@ All notable changes to this project will be documented in this file.\n ### Added\n \n ### Changed\n+- `jib.container.creationTime` now accepts more timezone formats:`Z`,`+HHmm`. ([#2320](https://github.com/GoogleContainerTools/jib/issues/2260))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc5a2e8f384295aa84ec1663517e8d32d4e0711"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c9dc1bc91a49a3ba4901d5cbfcd8fa60cf681ff", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/9c9dc1bc91a49a3ba4901d5cbfcd8fa60cf681ff", "committedDate": "2020-03-12T15:36:26Z", "message": "Update CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cad1fe9bcd40ff3a38f33140549ec9277692985d", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/cad1fe9bcd40ff3a38f33140549ec9277692985d", "committedDate": "2020-03-12T15:37:14Z", "message": "Update CHANGELOG.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjgwMjgw", "url": "https://github.com/GoogleContainerTools/jib/pull/2320#pullrequestreview-373680280", "createdAt": "2020-03-12T15:51:38Z", "commit": {"oid": "cad1fe9bcd40ff3a38f33140549ec9277692985d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 388, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}