{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NTQwMDUx", "number": 2832, "title": "Add to/from credential helper", "bodyText": "Implementation of #2831\nAdds option to specify credential helper specifically for target image or base image registries.\nThere is a way to separate out complex parameter logic like this into a separate class and then include it as a mixin. Maybe that'll help reduce some of the clutter in the future. Just dropping in here for information Mixin: https://picocli.info/apidocs/picocli/CommandLine.Mixin.html", "createdAt": "2020-10-16T03:55:24Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2832", "merged": true, "mergeCommit": {"oid": "4398f4a11509fc1e1956aa0dd7e34779a284636a"}, "closed": true, "closedAt": "2020-10-16T15:50:12Z", "author": {"login": "loosebazooka"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS-KqdAH2gAyNTA0NTQwMDUxOjQ5YWI2YjUzN2YyZGMxNDE5NTFjNTdlZGI0ZTY3YTM5Y2Q3MGUwNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTIFNyAFqTUxMDU3NjMxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "49ab6b537f2dc141951c57edb4e67a39cd70e06f", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/49ab6b537f2dc141951c57edb4e67a39cd70e06f", "committedDate": "2020-10-16T03:53:38Z", "message": "Add to/from credential helper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTIxMTc5", "url": "https://github.com/GoogleContainerTools/jib/pull/2832#pullrequestreview-510521179", "createdAt": "2020-10-16T14:24:42Z", "commit": {"oid": "49ab6b537f2dc141951c57edb4e67a39cd70e06f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyNDo0MlrOHjBJCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyNDo0MlrOHjBJCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4MDkwNQ==", "bodyText": "Debug code?", "url": "https://github.com/GoogleContainerTools/jib/pull/2832#discussion_r506480905", "createdAt": "2020-10-16T14:24:42Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/JibCliTest.java", "diffHunk": "@@ -271,43 +373,42 @@ public void testParse_passwordWithoutUsername() {\n   }\n \n   @RunWith(Parameterized.class)\n-  public static class UsernamePasswordNotAllowedWithToAndFrom {\n-    @Parameterized.Parameters(name = \"{0},{1}\")\n-    public static Collection<Object[]> data() {\n+  public static class IncompatibleCredentialCombos {\n+    @Parameterized.Parameters\n+    public static Collection<String[][]> data() {\n       return Arrays.asList(\n-          new Object[][] {\n-            {\"--to-username\", \"--to-password\"},\n-            {\"--from-username\", \"--from-password\"}\n+          new String[][][] {\n+            {{\"--credential-helper=x\", \"--to-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--from-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--username=x\", \"--password=x\"}},\n+            {{\"--credential-helper=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--credential-helper=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-credential-helper=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-credential-helper=x\"}},\n           });\n     }\n \n-    @Parameterized.Parameter(0)\n-    public String usernameField;\n-\n-    @Parameterized.Parameter(1)\n-    public String passwordField;\n+    @Parameterized.Parameter public String[] authArgs;\n+    private final String[] requiredArgs = new String[] {\"--target=ignored\"};\n \n     @Test\n     public void testParse_usernameWithoutPassword() {\n+      try {\n+        CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(requiredArgs, authArgs));\n+      } catch (CommandLine.MaxValuesExceededException error) {\n+        System.out.println(\"goose\");\n+      } catch (Exception ex) {\n+        // do nothing\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ab6b537f2dc141951c57edb4e67a39cd70e06f"}, "originalPosition": 306}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTQ5Mzkw", "url": "https://github.com/GoogleContainerTools/jib/pull/2832#pullrequestreview-510549390", "createdAt": "2020-10-16T14:55:11Z", "commit": {"oid": "49ab6b537f2dc141951c57edb4e67a39cd70e06f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1NToxMVrOHjC_xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1NToxMVrOHjC_xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxMTMwMQ==", "bodyText": "how about this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  assertThat(meae.getMessage()).startsWith(\"Error: \");\n          \n          \n            \n                  assertThat(meae).hasMessageThat().startsWith(\"Error:\");\n          \n      \n    \n    \n  \n\nMight produce a more readable error message.", "url": "https://github.com/GoogleContainerTools/jib/pull/2832#discussion_r506511301", "createdAt": "2020-10-16T14:55:11Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/JibCliTest.java", "diffHunk": "@@ -271,43 +373,42 @@ public void testParse_passwordWithoutUsername() {\n   }\n \n   @RunWith(Parameterized.class)\n-  public static class UsernamePasswordNotAllowedWithToAndFrom {\n-    @Parameterized.Parameters(name = \"{0},{1}\")\n-    public static Collection<Object[]> data() {\n+  public static class IncompatibleCredentialCombos {\n+    @Parameterized.Parameters\n+    public static Collection<String[][]> data() {\n       return Arrays.asList(\n-          new Object[][] {\n-            {\"--to-username\", \"--to-password\"},\n-            {\"--from-username\", \"--from-password\"}\n+          new String[][][] {\n+            {{\"--credential-helper=x\", \"--to-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--from-credential-helper=x\"}},\n+            {{\"--credential-helper=x\", \"--username=x\", \"--password=x\"}},\n+            {{\"--credential-helper=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--credential-helper=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-username=x\", \"--from-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-username=x\", \"--to-password=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--to-credential-helper=x\"}},\n+            {{\"--username=x\", \"--password=x\", \"--from-credential-helper=x\"}},\n           });\n     }\n \n-    @Parameterized.Parameter(0)\n-    public String usernameField;\n-\n-    @Parameterized.Parameter(1)\n-    public String passwordField;\n+    @Parameterized.Parameter public String[] authArgs;\n+    private final String[] requiredArgs = new String[] {\"--target=ignored\"};\n \n     @Test\n     public void testParse_usernameWithoutPassword() {\n+      try {\n+        CommandLine.populateCommand(new JibCli(), ArrayUtils.addAll(requiredArgs, authArgs));\n+      } catch (CommandLine.MaxValuesExceededException error) {\n+        System.out.println(\"goose\");\n+      } catch (Exception ex) {\n+        // do nothing\n+      }\n       MutuallyExclusiveArgsException meae =\n           assertThrows(\n               MutuallyExclusiveArgsException.class,\n               () ->\n                   CommandLine.populateCommand(\n-                      new JibCli(),\n-                      \"--target\",\n-                      \"test-image-ref\",\n-                      \"--username\",\n-                      \"test-username\",\n-                      \"--password\",\n-                      \"test-password\",\n-                      usernameField,\n-                      \"test-username\",\n-                      passwordField,\n-                      \"test-password\"));\n-      assertThat(meae.getMessage())\n-          .isEqualTo(\n-              \"Error: [--username=<username> --password[=<password>]] and [[--to-username=<username> --to-password[=<password>]] [--from-username=<username> --from-password[=<password>]]] are mutually exclusive (specify only one)\");\n+                      new JibCli(), ArrayUtils.addAll(requiredArgs, authArgs)));\n+      assertThat(meae.getMessage()).startsWith(\"Error: \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49ab6b537f2dc141951c57edb4e67a39cd70e06f"}, "originalPosition": 327}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90b8e2e38b6d92533f21d87400807c407918026", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a90b8e2e38b6d92533f21d87400807c407918026", "committedDate": "2020-10-16T15:14:20Z", "message": "test update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTc2MzEw", "url": "https://github.com/GoogleContainerTools/jib/pull/2832#pullrequestreview-510576310", "createdAt": "2020-10-16T15:26:44Z", "commit": {"oid": "a90b8e2e38b6d92533f21d87400807c407918026"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4823, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}