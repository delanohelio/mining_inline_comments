{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MzY4Mjc3", "number": 2878, "title": "Add jar cli sub-command to the jib cli", "bodyText": "Fixes #2865.\nThis sub-command would be called in the following form:\njib --target=docker://jib-cli-image jar /path/to/my-jar.jar\n\nThis PR doesn't include unit tests (as I'm not sure if it is worth refactoring the class as mentioned in #2877 for the error logging test) but the command was tested manually. We still need to add integration testing to check that the command is working as expected.", "createdAt": "2020-11-02T22:27:08Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2878", "merged": true, "mergeCommit": {"oid": "31fb4e9ee058e1d095b0231f6d300a2f9958c62b"}, "closed": true, "closedAt": "2020-11-03T21:54:26Z", "author": {"login": "mpeddada1"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXC4XOAH2gAyNTE0MzY4Mjc3OjU2ZGMyYzk3YThhYTI2ZDQxNTljNjc1NzExNDRmMTc5ODQ1ZTBiMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdY-fDZgFqTUyMjgxOTQ3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "56dc2c97a8aa26d4159c67571144f179845e0b2b", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/56dc2c97a8aa26d4159c67571144f179845e0b2b", "committedDate": "2020-10-28T19:38:52Z", "message": "implement class to convert a jar to a JibContainerBuilder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35556ef2c1524c58cbca267c2dbf1187e1632eee", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/35556ef2c1524c58cbca267c2dbf1187e1632eee", "committedDate": "2020-10-28T19:49:11Z", "message": "update javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306873afce1b681bf851ec51f53c0d799aade2df", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/306873afce1b681bf851ec51f53c0d799aade2df", "committedDate": "2020-10-30T19:56:45Z", "message": "Adding jar subcommand"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa3025337094bb33fc2fca72397bf1ca43d04a58", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/fa3025337094bb33fc2fca72397bf1ca43d04a58", "committedDate": "2020-10-30T19:56:53Z", "message": "Merge branch 'master' of github.com:GoogleContainerTools/jib into cli-jar-containerize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61d508211f06bf55c3d0b4ccf0977fb74d20e771", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/61d508211f06bf55c3d0b4ccf0977fb74d20e771", "committedDate": "2020-10-30T20:55:09Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e452ba93e4dc39f33e4ef6f58648e40a8f3611a2", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e452ba93e4dc39f33e4ef6f58648e40a8f3611a2", "committedDate": "2020-10-30T20:55:18Z", "message": "Merge branch 'master' of github.com:GoogleContainerTools/jib into cli-jar-containerize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2432ab85dc2734c8e737c0d9fa3445c1fa3a788f", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/2432ab85dc2734c8e737c0d9fa3445c1fa3a788f", "committedDate": "2020-11-02T21:48:11Z", "message": "add error messaging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85bd4d8ce43b3b33625222c8fa70f24b9fbc31cc", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/85bd4d8ce43b3b33625222c8fa70f24b9fbc31cc", "committedDate": "2020-11-02T21:50:32Z", "message": "cleaning up files that are not part of pr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a072c292dfb5861fa6b029ca6bbc342c00eca1c", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7a072c292dfb5861fa6b029ca6bbc342c00eca1c", "committedDate": "2020-11-02T21:50:41Z", "message": "Merge branch 'master' of github.com:GoogleContainerTools/jib into cli-jar-containerize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94a1fce85af6b3f0341c4708c71ffb8b02f8cd56", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/94a1fce85af6b3f0341c4708c71ffb8b02f8cd56", "committedDate": "2020-11-02T21:59:32Z", "message": "undo edit to build.gradle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNTUwMzEy", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#pullrequestreview-522550312", "createdAt": "2020-11-03T14:29:39Z", "commit": {"oid": "94a1fce85af6b3f0341c4708c71ffb8b02f8cd56"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDoyOTozOVrOHsxVHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDozMDozMlrOHsxXyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwNzYxNQ==", "bodyText": "I think we should accept this is an ordinary argument, not through an option, e.g., jib ... jar my.jar.", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#discussion_r516707615", "createdAt": "2020-11-03T14:29:39Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.api.Containerizer;\n+import com.google.cloud.tools.jib.api.JibContainerBuilder;\n+import com.google.cloud.tools.jib.api.LogEvent;\n+import com.google.cloud.tools.jib.cli.cli2.logging.CliLogger;\n+import com.google.cloud.tools.jib.cli.jar.JarFiles;\n+import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.common.io.MoreFiles;\n+import com.google.common.io.RecursiveDeleteOption;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.Callable;\n+import picocli.CommandLine;\n+\n+@CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n+public class Jar implements Callable<Integer> {\n+  @CommandLine.ParentCommand\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  protected JibCli globalOptions;\n+\n+  @CommandLine.Option(\n+      names = {\"--jar\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94a1fce85af6b3f0341c4708c71ffb8b02f8cd56"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwODI5OA==", "bodyText": "Should also print the exception type. Check Build.java. That said, can we explore a way to share code?", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#discussion_r516708298", "createdAt": "2020-11-03T14:30:32Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.api.Containerizer;\n+import com.google.cloud.tools.jib.api.JibContainerBuilder;\n+import com.google.cloud.tools.jib.api.LogEvent;\n+import com.google.cloud.tools.jib.cli.cli2.logging.CliLogger;\n+import com.google.cloud.tools.jib.cli.jar.JarFiles;\n+import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.common.io.MoreFiles;\n+import com.google.common.io.RecursiveDeleteOption;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.Callable;\n+import picocli.CommandLine;\n+\n+@CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n+public class Jar implements Callable<Integer> {\n+  @CommandLine.ParentCommand\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  protected JibCli globalOptions;\n+\n+  @CommandLine.Option(\n+      names = {\"--jar\"},\n+      paramLabel = \"<jar-file>\",\n+      description = \"The path to the jar file (ex: path/to/my-jar.jar)\")\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  private Path jarFile;\n+\n+  /**\n+   * Returns a user configured Path to a jar file.\n+   *\n+   * @return a path to a jar file\n+   */\n+  public Path getJarFile() {\n+    return jarFile;\n+  }\n+\n+  @Override\n+  public Integer call() {\n+    globalOptions.validate();\n+    Path jarFile = getJarFile();\n+    try {\n+      ConsoleLogger logger =\n+          CliLogger.newLogger(globalOptions.getVerbosity(), globalOptions.getConsoleOutput());\n+      if (!Files.exists(jarFile)) {\n+        logger.log(LogEvent.Level.ERROR, \"The file path provided does not exist: \" + jarFile);\n+        return 1;\n+      }\n+      if (Files.isDirectory(jarFile)) {\n+        logger.log(\n+            LogEvent.Level.ERROR,\n+            \"The file path provided is for a directory. Please provide a path to a jar file: \"\n+                + jarFile);\n+        return 1;\n+      }\n+      Containerizer containerizer = Containerizers.from(globalOptions, logger);\n+      JibContainerBuilder containerBuilder =\n+          JarFiles.toJibContainerBuilder(getJarFile(), Paths.get(\"build-artifacts\"));\n+      containerBuilder.containerize(containerizer);\n+      MoreFiles.deleteDirectoryContents(\n+          Paths.get(\"build-artifacts\"), RecursiveDeleteOption.ALLOW_INSECURE);\n+    } catch (Exception ex) {\n+      if (globalOptions.isStacktrace()) {\n+        ex.printStackTrace();\n+      }\n+      System.err.println(ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94a1fce85af6b3f0341c4708c71ffb8b02f8cd56"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90d6e1fd965673362ca70805defa75fd4d93de2d", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/90d6e1fd965673362ca70805defa75fd4d93de2d", "committedDate": "2020-11-03T15:33:48Z", "message": "make option parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b82ca96f1b1edbab5f98d5ee161e364adf2dfa39", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/b82ca96f1b1edbab5f98d5ee161e364adf2dfa39", "committedDate": "2020-11-03T16:35:57Z", "message": "print exception type"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNjgxODg4", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#pullrequestreview-522681888", "createdAt": "2020-11-03T16:39:30Z", "commit": {"oid": "b82ca96f1b1edbab5f98d5ee161e364adf2dfa39"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjozOTozMVrOHs3Q0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0NDozN1rOHs3eNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNDgxNg==", "bodyText": "Is this method is required?", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#discussion_r516804816", "createdAt": "2020-11-03T16:39:31Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.api.Containerizer;\n+import com.google.cloud.tools.jib.api.JibContainerBuilder;\n+import com.google.cloud.tools.jib.api.LogEvent;\n+import com.google.cloud.tools.jib.cli.cli2.logging.CliLogger;\n+import com.google.cloud.tools.jib.cli.jar.JarFiles;\n+import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.common.io.MoreFiles;\n+import com.google.common.io.RecursiveDeleteOption;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.Callable;\n+import picocli.CommandLine;\n+\n+@CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n+public class Jar implements Callable<Integer> {\n+  @CommandLine.ParentCommand\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  protected JibCli globalOptions;\n+\n+  @CommandLine.Parameters(description = \"The path to the jar file (ex: path/to/my-jar.jar)\")\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  private Path jarFile;\n+\n+  /**\n+   * Returns a user configured Path to a jar file.\n+   *\n+   * @return a path to a jar file\n+   */\n+  public Path getJarFile() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b82ca96f1b1edbab5f98d5ee161e364adf2dfa39"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwODI0Ng==", "bodyText": "We need to sort out what we should provide for a temporary staging directory. We may eventually go for a dedicated build output directory, but for now, I think we can provide a system temp directory. Let's talk offline.", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#discussion_r516808246", "createdAt": "2020-11-03T16:44:37Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.cli2;\n+\n+import com.google.cloud.tools.jib.api.Containerizer;\n+import com.google.cloud.tools.jib.api.JibContainerBuilder;\n+import com.google.cloud.tools.jib.api.LogEvent;\n+import com.google.cloud.tools.jib.cli.cli2.logging.CliLogger;\n+import com.google.cloud.tools.jib.cli.jar.JarFiles;\n+import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.common.io.MoreFiles;\n+import com.google.common.io.RecursiveDeleteOption;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.concurrent.Callable;\n+import picocli.CommandLine;\n+\n+@CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n+public class Jar implements Callable<Integer> {\n+  @CommandLine.ParentCommand\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  protected JibCli globalOptions;\n+\n+  @CommandLine.Parameters(description = \"The path to the jar file (ex: path/to/my-jar.jar)\")\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  private Path jarFile;\n+\n+  /**\n+   * Returns a user configured Path to a jar file.\n+   *\n+   * @return a path to a jar file\n+   */\n+  public Path getJarFile() {\n+    return jarFile;\n+  }\n+\n+  @Override\n+  public Integer call() {\n+    globalOptions.validate();\n+    Path jarFile = getJarFile();\n+    try {\n+      ConsoleLogger logger =\n+          CliLogger.newLogger(globalOptions.getVerbosity(), globalOptions.getConsoleOutput());\n+      if (!Files.exists(jarFile)) {\n+        logger.log(LogEvent.Level.ERROR, \"The file path provided does not exist: \" + jarFile);\n+        return 1;\n+      }\n+      if (Files.isDirectory(jarFile)) {\n+        logger.log(\n+            LogEvent.Level.ERROR,\n+            \"The file path provided is for a directory. Please provide a path to a jar file: \"\n+                + jarFile);\n+        return 1;\n+      }\n+      Containerizer containerizer = Containerizers.from(globalOptions, logger);\n+      JibContainerBuilder containerBuilder =\n+          JarFiles.toJibContainerBuilder(getJarFile(), Paths.get(\"build-artifacts\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b82ca96f1b1edbab5f98d5ee161e364adf2dfa39"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcb3c6af9c8f71061faf42f61f9a6d1a43e1917f", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/fcb3c6af9c8f71061faf42f61f9a6d1a43e1917f", "committedDate": "2020-11-03T17:47:09Z", "message": "use tempDirectoryProvider and clean up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNzQzMDAx", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#pullrequestreview-522743001", "createdAt": "2020-11-03T17:51:19Z", "commit": {"oid": "fcb3c6af9c8f71061faf42f61f9a6d1a43e1917f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzo1MToxOVrOHs6HVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzo1MToxOVrOHs6HVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1MTU0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try {\n          \n          \n            \n                try (TempDirectoryProvider tempDirectoryProvider = new TempDirectoryProvider()) {\n          \n      \n    \n    \n  \n\nand remove the field and the finally block.", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#discussion_r516851543", "createdAt": "2020-11-03T17:51:19Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -40,22 +38,15 @@\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   private Path jarFile;\n \n-  /**\n-   * Returns a user configured Path to a jar file.\n-   *\n-   * @return a path to a jar file\n-   */\n-  public Path getJarFile() {\n-    return jarFile;\n-  }\n+  private final TempDirectoryProvider tempDirectoryProvider = new TempDirectoryProvider();\n \n   @Override\n   public Integer call() {\n     globalOptions.validate();\n-    Path jarFile = getJarFile();\n     try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcb3c6af9c8f71061faf42f61f9a6d1a43e1917f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d862ed3037041b3a4b72494685f83f386d5487f5", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d862ed3037041b3a4b72494685f83f386d5487f5", "committedDate": "2020-11-03T18:23:27Z", "message": "use try-with-resources block instead of finally"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyODE5NDcz", "url": "https://github.com/GoogleContainerTools/jib/pull/2878#pullrequestreview-522819473", "createdAt": "2020-11-03T19:39:27Z", "commit": {"oid": "d862ed3037041b3a4b72494685f83f386d5487f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4865, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}