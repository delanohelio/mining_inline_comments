{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1OTA2MTA0", "number": 2571, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOToyNjoxOFrOEMoAIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxOToyM1rOEMqIjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjczNzYwOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOToyNjoxOFrOGu2MNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo0NDoyMVrOGu4kVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc3NTU0MA==", "bodyText": "I see there are no setters. Can these be final?", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451775540", "createdAt": "2020-07-08T19:26:18Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying file properties (used in conjunction with layers).\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * filePermissions: 644\n+ * directoryPermissions: 755\n+ * user: foo\n+ * group: bar\n+ * timestamp: 100\n+ * }</pre>\n+ */\n+public class FilePropertiesSpec {\n+  @Nullable private FilePermissions filePermissions;\n+  @Nullable private FilePermissions directoryPermissions;\n+  @Nullable private String user;\n+  @Nullable private String group;\n+  @Nullable private Instant timestamp;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNDQ4NQ==", "bodyText": "Yeah actually I think so, I was using a different jackson mechanism to load the values, but since I'm using @JsonCreator now, final seems possible, let me test it out.", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451814485", "createdAt": "2020-07-08T20:44:21Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpec.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying file properties (used in conjunction with layers).\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * filePermissions: 644\n+ * directoryPermissions: 755\n+ * user: foo\n+ * group: bar\n+ * timestamp: 100\n+ * }</pre>\n+ */\n+public class FilePropertiesSpec {\n+  @Nullable private FilePermissions filePermissions;\n+  @Nullable private FilePermissions directoryPermissions;\n+  @Nullable private String user;\n+  @Nullable private String group;\n+  @Nullable private Instant timestamp;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc3NTU0MA=="}, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjc1MDExOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTozMDowOVrOGu2ULw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTozMDowOVrOGu2ULw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc3NzU4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n          \n          \n            \n               *\n          \n          \n            \n               * @param time in millis or is8601 format\n          \n          \n            \n               * @param fieldName name of field being parse (for error messaging)\n          \n          \n            \n               * Parses a string into Instant. The string must be time in millis since the epoch or iso8601 datetime.\n          \n          \n            \n               *\n          \n          \n            \n               * @param time in millis since the epoch or iso8601 format\n          \n          \n            \n               * @param fieldName name of field being parsed (for error messaging)", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451777583", "createdAt": "2020-07-08T19:30:09Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.DateTimeParseException;\n+\n+/** Helper class to convert various strings to Instants. */\n+public class Instants {\n+  /**\n+   * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n+   *\n+   * @param time in millis or is8601 format\n+   * @param fieldName name of field being parse (for error messaging)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjgzMzE2OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTo1NjozMlrOGu3IiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxMjo0MlrOGu5ayQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MDk4NQ==", "bodyText": "It's a matter of preference, but it's possible to assign the instance in the field declaration (and with final). This makes sense too because the code is long.\nAnd does any test fail if we don't have FAIL_ON_IGNORED_PROPERTIES set?", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451790985", "createdAt": "2020-07-08T19:56:32Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper;\n+\n+  @BeforeClass\n+  public static void createObjectMapper() {\n+    filePropertiesSpecMapper =\n+        new ObjectMapper(new YAMLFactory())\n+            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODQyNQ==", "bodyText": "Actually when I took apart these tests, I meant to use (FAIL_ON_UNKNOWN_PROPERTIES, true), but it looks like the default value for those is true anyway. So this doesn't do anything useful. Moving to field declaration. Good Catch.", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451828425", "createdAt": "2020-07-08T21:12:42Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper;\n+\n+  @BeforeClass\n+  public static void createObjectMapper() {\n+    filePropertiesSpecMapper =\n+        new ObjectMapper(new YAMLFactory())\n+            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MDk4NQ=="}, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjgzNzI5OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTo1Nzo1MFrOGu3LDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxMzo1NFrOGu5c-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MTYyOA==", "bodyText": "QQ: is this (\"\") only for better alignment?", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451791628", "createdAt": "2020-07-08T19:57:50Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper;\n+\n+  @BeforeClass\n+  public static void createObjectMapper() {\n+    filePropertiesSpecMapper =\n+        new ObjectMapper(new YAMLFactory())\n+            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n+  }\n+\n+  @Test\n+  public void testFilePropertiesSpec_full() throws JsonProcessingException {\n+    String data =\n+        \"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODk4Ng==", "bodyText": "yeah I think so when I wrote this, but I don't think that's a great reason. Removed this.", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451828986", "createdAt": "2020-07-08T21:13:54Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.DeserializationFeature;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper;\n+\n+  @BeforeClass\n+  public static void createObjectMapper() {\n+    filePropertiesSpecMapper =\n+        new ObjectMapper(new YAMLFactory())\n+            .configure(DeserializationFeature.FAIL_ON_IGNORED_PROPERTIES, true);\n+  }\n+\n+  @Test\n+  public void testFilePropertiesSpec_full() throws JsonProcessingException {\n+    String data =\n+        \"\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MTYyOA=="}, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjg0NjQyOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDowMDozN1rOGu3QuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDowMDozN1rOGu3QuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MzA4MQ==", "bodyText": "Can this be package-private?", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451793081", "createdAt": "2020-07-08T20:00:37Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.DateTimeParseException;\n+\n+/** Helper class to convert various strings to Instants. */\n+public class Instants {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjg0NzE3OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDowMDo1MFrOGu3RMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDowMDo1MFrOGu3RMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5MzIwMQ==", "bodyText": "package-private?", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451793201", "createdAt": "2020-07-08T20:00:50Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/Instants.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import java.time.Instant;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.DateTimeParseException;\n+\n+/** Helper class to convert various strings to Instants. */\n+public class Instants {\n+  /**\n+   * Parses a string into Instant, string must be time in millis or iso8601 datetime.\n+   *\n+   * @param time in millis or is8601 format\n+   * @param fieldName name of field being parse (for error messaging)\n+   * @return Instant value of parsed time\n+   */\n+  public static Instant fromMillisOrIso8601(String time, String fieldName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "094e72dbe9f7742550cbe8a9d022397277f0b1c6"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzA4Njg2OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxOToyM1rOGu5m1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo0MDo0OFrOGvRpww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMTUxMA==", "bodyText": "nit: final", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r451831510", "createdAt": "2020-07-08T21:19:23Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.hamcrest.CoreMatchers;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper = new ObjectMapper(new YAMLFactory());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIyNTQ3NQ==", "bodyText": "oops, done", "url": "https://github.com/GoogleContainerTools/jib/pull/2571#discussion_r452225475", "createdAt": "2020-07-09T13:40:48Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/FilePropertiesSpecTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.buildplan.FilePermissions;\n+import java.time.Instant;\n+import org.hamcrest.CoreMatchers;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/** Tests for {@link FilePropertiesSpec}. */\n+public class FilePropertiesSpecTest {\n+\n+  private static ObjectMapper filePropertiesSpecMapper = new ObjectMapper(new YAMLFactory());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMTUxMA=="}, "originalCommit": {"oid": "231a9d7a0dd91ebff594e0e87b80db48abbd3d15"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 237, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}