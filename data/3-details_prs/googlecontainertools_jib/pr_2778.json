{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTA1MzM3", "number": 2778, "title": "Add ability to set Platform when building an image from scratch ", "bodyText": "For #2765", "createdAt": "2020-09-22T18:00:51Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2778", "merged": true, "mergeCommit": {"oid": "9c38ad138a6ad790bd5d1746ecb3f9a6aa2a806e"}, "closed": true, "closedAt": "2020-09-29T16:27:51Z", "author": {"login": "mpeddada1"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLbYpzAH2gAyNDkxMTA1MzM3OjQ5NjQ4ZTY5ZGVkYWY1MjJjY2M2ZGQxNjIxZjc4MmEwZjNkM2MzZmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNqGgNAH2gAyNDkxMTA1MzM3OjExNDhiZjdjOTdkNTJmYmI4MmYwNjM3ZDc1N2VmOTg4OTE2OTFhMDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "49648e69dedaf522ccc6dd1621f782a0f3d3c3fe", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/49648e69dedaf522ccc6dd1621f782a0f3d3c3fe", "committedDate": "2020-09-22T17:24:46Z", "message": " Add ability to set platform when building an image from scratch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9a581ee731134a85d8e20ed359a40889848d9a3", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e9a581ee731134a85d8e20ed359a40889848d9a3", "committedDate": "2020-09-22T17:43:09Z", "message": "fix formatting and tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb9c20bb95876c0b10b26ceb051c38b1b32f826c", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/eb9c20bb95876c0b10b26ceb051c38b1b32f826c", "committedDate": "2020-09-22T17:54:09Z", "message": "assert on registry client in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNzMzNzYx", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#pullrequestreview-493733761", "createdAt": "2020-09-22T18:24:30Z", "commit": {"oid": "eb9c20bb95876c0b10b26ceb051c38b1b32f826c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODoyNDozMVrOHWG9-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODoyNDozMVrOHWG9-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk0NDg5MA==", "bodyText": "If multiple platforms are given, this method should return multiple Images (i.e., List<Image> as ImagesAndRegistryClient.images). That is, it shouldn't use Collections.singletonList() on line 112.\nWe should also add a test for the case of multiple platforms.", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r492944890", "createdAt": "2020-09-22T18:24:31Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -97,9 +97,19 @@ public ImagesAndRegistryClient call()\n     // Skip this step if this is a scratch image\n     ImageReference imageReference = buildContext.getBaseImageConfiguration().getImage();\n     if (imageReference.isScratch()) {\n+      String architecture = \"\";\n+      String os = \"\";\n+      for (Platform platform : buildContext.getContainerConfiguration().getPlatforms()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb9c20bb95876c0b10b26ceb051c38b1b32f826c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7ba877d072512abd0fe000c1c850c4f6e47389dc", "committedDate": "2020-09-23T17:28:01Z", "message": "Add ability to return multiple images when multiple platforms are given"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MDM2NTEz", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#pullrequestreview-495036513", "createdAt": "2020-09-23T20:48:32Z", "commit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDo0ODozMlrOHXAaBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDo1NjoyNVrOHXAqIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4NTk1Ng==", "bodyText": "By the way we designed this, we can assume platforms is never empty. Let's just say\nVerify.verify(!platforms.isEmpty());", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493885956", "createdAt": "2020-09-23T20:48:32Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -97,9 +98,19 @@ public ImagesAndRegistryClient call()\n     // Skip this step if this is a scratch image\n     ImageReference imageReference = buildContext.getBaseImageConfiguration().getImage();\n     if (imageReference.isScratch()) {\n+      ImmutableSet<Platform> platforms = buildContext.getContainerConfiguration().getPlatforms();\n       eventHandlers.dispatch(LogEvent.progress(\"Getting scratch base image...\"));\n-      return new ImagesAndRegistryClient(\n-          Collections.singletonList(Image.builder(buildContext.getTargetFormat()).build()), null);\n+      if (platforms.isEmpty()) {\n+        return new ImagesAndRegistryClient(\n+            Collections.singletonList(Image.builder(buildContext.getTargetFormat()).build()), null);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4NzEzNQ==", "bodyText": "Since the platform is actually specified as \"slim arch\" and \"fat system\",\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testCall_scratch_noPlatformSpecified()\n          \n          \n            \n              public void testCall_scratch_singlePlatform()", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493887135", "createdAt": "2020-09-23T20:50:45Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "diffHunk": "@@ -87,6 +87,40 @@ public void setUp() {\n     pullBaseImageStep = new PullBaseImageStep(buildContext, progressDispatcherFactory);\n   }\n \n+  @Test\n+  public void testCall_scratch_noPlatformSpecified()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4Nzg1Nw==", "bodyText": "Nit: how about Mockito.when(imageConfiguration.getImage()).thenReturn(ImageReference.scratch());?", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493887857", "createdAt": "2020-09-23T20:52:06Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "diffHunk": "@@ -87,6 +87,40 @@ public void setUp() {\n     pullBaseImageStep = new PullBaseImageStep(buildContext, progressDispatcherFactory);\n   }\n \n+  @Test\n+  public void testCall_scratch_noPlatformSpecified()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException {\n+    ImageReference imageReference = ImageReference.scratch();\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4ODA3Ng==", "bodyText": "Also\nAssert.assertEquals(1, result.images.size());", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493888076", "createdAt": "2020-09-23T20:52:30Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "diffHunk": "@@ -87,6 +87,40 @@ public void setUp() {\n     pullBaseImageStep = new PullBaseImageStep(buildContext, progressDispatcherFactory);\n   }\n \n+  @Test\n+  public void testCall_scratch_noPlatformSpecified()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException {\n+    ImageReference imageReference = ImageReference.scratch();\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);\n+    ImagesAndRegistryClient result = pullBaseImageStep.call();\n+\n+    Assert.assertEquals(\"slim arch\", result.images.get(0).getArchitecture());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4ODE2OA==", "bodyText": "Also\nAssert.assertEquals(2, result.images.size());", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493888168", "createdAt": "2020-09-23T20:52:42Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "diffHunk": "@@ -87,6 +87,40 @@ public void setUp() {\n     pullBaseImageStep = new PullBaseImageStep(buildContext, progressDispatcherFactory);\n   }\n \n+  @Test\n+  public void testCall_scratch_noPlatformSpecified()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException {\n+    ImageReference imageReference = ImageReference.scratch();\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);\n+    ImagesAndRegistryClient result = pullBaseImageStep.call();\n+\n+    Assert.assertEquals(\"slim arch\", result.images.get(0).getArchitecture());\n+    Assert.assertEquals(\"fat system\", result.images.get(0).getOs());\n+    Assert.assertNull(result.registryClient);\n+  }\n+\n+  @Test\n+  public void testCall_scratch_multiplePlatformsSpecified()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException {\n+    ImageReference imageReference = ImageReference.scratch();\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(\n+            ImmutableSet.of(\n+                new Platform(\"architecture1\", \"os1\"), new Platform(\"architecture2\", \"os2\")));\n+    ImagesAndRegistryClient result = pullBaseImageStep.call();\n+\n+    Assert.assertEquals(\"architecture1\", result.images.get(0).getArchitecture());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4ODMwOA==", "bodyText": "ditto", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493888308", "createdAt": "2020-09-23T20:52:58Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "diffHunk": "@@ -87,6 +87,40 @@ public void setUp() {\n     pullBaseImageStep = new PullBaseImageStep(buildContext, progressDispatcherFactory);\n   }\n \n+  @Test\n+  public void testCall_scratch_noPlatformSpecified()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException {\n+    ImageReference imageReference = ImageReference.scratch();\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);\n+    ImagesAndRegistryClient result = pullBaseImageStep.call();\n+\n+    Assert.assertEquals(\"slim arch\", result.images.get(0).getArchitecture());\n+    Assert.assertEquals(\"fat system\", result.images.get(0).getOs());\n+    Assert.assertNull(result.registryClient);\n+  }\n+\n+  @Test\n+  public void testCall_scratch_multiplePlatformsSpecified()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException {\n+    ImageReference imageReference = ImageReference.scratch();\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4OTg5NQ==", "bodyText": "I think we should test non-default values, such as \"windows.\"", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493889895", "createdAt": "2020-09-23T20:56:04Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/JibIntegrationTest.java", "diffHunk": "@@ -220,19 +222,44 @@ public void testBasic_tarBaseImage_jibImageToDockerDaemon()\n   }\n \n   @Test\n-  public void testScratch()\n+  public void testScratch_singlePlatform()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n           CacheDirectoryCreationException {\n     ImageReference targetImageReference =\n         ImageReference.of(\"localhost:5000\", \"jib-core\", \"basic-scratch\");\n-    Jib.fromScratch().containerize(getLocalRegistryContainerizer(targetImageReference));\n+    Jib.fromScratch()\n+        .setPlatforms(ImmutableSet.of(new Platform(\"arm64\", \"linux\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg5MDA4Mw==", "bodyText": "ditto", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r493890083", "createdAt": "2020-09-23T20:56:25Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/JibIntegrationTest.java", "diffHunk": "@@ -220,19 +222,44 @@ public void testBasic_tarBaseImage_jibImageToDockerDaemon()\n   }\n \n   @Test\n-  public void testScratch()\n+  public void testScratch_singlePlatform()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n           CacheDirectoryCreationException {\n     ImageReference targetImageReference =\n         ImageReference.of(\"localhost:5000\", \"jib-core\", \"basic-scratch\");\n-    Jib.fromScratch().containerize(getLocalRegistryContainerizer(targetImageReference));\n+    Jib.fromScratch()\n+        .setPlatforms(ImmutableSet.of(new Platform(\"arm64\", \"linux\")))\n+        .containerize(getLocalRegistryContainerizer(targetImageReference));\n \n     // Check that resulting image has no layers\n     localRegistry.pull(targetImageReference.toString());\n     String inspectOutput = new Command(\"docker\", \"inspect\", targetImageReference.toString()).run();\n     Assert.assertFalse(\n         \"docker inspect output contained layers: \" + inspectOutput,\n         inspectOutput.contains(\"\\\"Layers\\\": [\"));\n+\n+    // Check that resulting image has specified architecture and os set.\n+    Assert.assertTrue(inspectOutput.contains(\"\\\"Architecture\\\": \\\"arm64\\\"\"));\n+    Assert.assertTrue(inspectOutput.contains(\"\\\"Os\\\": \\\"linux\\\"\"));\n+  }\n+\n+  @Test\n+  public void testScratch_multiPlatform()\n+      throws IOException, InterruptedException, ExecutionException, RegistryException,\n+          CacheDirectoryCreationException {\n+    // TODO: Modify this test to check for multiple platforms instead of throwing exception once\n+    // multi-platform feature is enabled.\n+    ImageReference targetImageReference =\n+        ImageReference.of(\"localhost:5000\", \"jib-core\", \"basic-scratch\");\n+    try {\n+      Jib.fromScratch()\n+          .setPlatforms(\n+              ImmutableSet.of(new Platform(\"arm64\", \"linux\"), new Platform(\"amd64\", \"linux\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ba877d072512abd0fe000c1c850c4f6e47389dc"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a940136cb6bba804e28784d877fff2dd4ff291f", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3a940136cb6bba804e28784d877fff2dd4ff291f", "committedDate": "2020-09-24T22:24:45Z", "message": "assume platforms is never empty and fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aba0cd6fa10ea7c0894e193399738f65a65fd6bb", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/aba0cd6fa10ea7c0894e193399738f65a65fd6bb", "committedDate": "2020-09-29T14:11:03Z", "message": "use non-default values for integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3aea8ec594c804555142947d67cf82c1791dfc17", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3aea8ec594c804555142947d67cf82c1791dfc17", "committedDate": "2020-09-29T14:14:33Z", "message": "small fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTk4Njk1", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#pullrequestreview-498598695", "createdAt": "2020-09-29T15:15:28Z", "commit": {"oid": "3aea8ec594c804555142947d67cf82c1791dfc17"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToxNToyOFrOHZyZBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToyMToyOFrOHZysvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwMjA1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Allow setting platform when building image from scratch. [#2765](https://github.com/GoogleContainerTools/jib/issues/2765)\n          \n          \n            \n            - Allow setting platform when building image from scratch. [#2765](https://github.com/GoogleContainerTools/jib/issues/2765))", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r496802054", "createdAt": "2020-09-29T15:15:28Z", "author": {"login": "chanseokoh"}, "path": "jib-core/CHANGELOG.md", "diffHunk": "@@ -5,6 +5,7 @@ All notable changes to this project will be documented in this file.\n \n ### Added\n \n+- Allow setting platform when building image from scratch. [#2765](https://github.com/GoogleContainerTools/jib/issues/2765)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aea8ec594c804555142947d67cf82c1791dfc17"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwNzEwMA==", "bodyText": "private static", "url": "https://github.com/GoogleContainerTools/jib/pull/2778#discussion_r496807100", "createdAt": "2020-09-29T15:21:28Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/JibIntegrationTest.java", "diffHunk": "@@ -326,4 +386,18 @@ public void testManifestListReferenceByShaDoesNotFail()\n     Jib.from(sourceImageReferenceAsManifestList).containerize(containerizer);\n     // pass, no exceptions thrown\n   }\n+\n+  public RegistryClient getRegistryClient(ImageReference imageReference, Credential credential) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aea8ec594c804555142947d67cf82c1791dfc17"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1148bf7c97d52fbb82f0637d757ef98891691a08", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1148bf7c97d52fbb82f0637d757ef98891691a08", "committedDate": "2020-09-29T15:41:22Z", "message": "minor change to CHANGELOG and make helper method private static"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4770, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}