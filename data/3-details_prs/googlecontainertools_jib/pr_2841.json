{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MTU1OTQ5", "number": 2841, "title": "Clean up some Parameterized tests", "bodyText": "Some simple test cleanup", "createdAt": "2020-10-19T17:37:42Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2841", "merged": true, "mergeCommit": {"oid": "2d621a4864a50ed117238c876e99fdf3cf52a8de"}, "closed": true, "closedAt": "2020-10-19T18:09:08Z", "author": {"login": "loosebazooka"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUHvgqgH2gAyNTA2MTU1OTQ5OmZlOTI1ZmI2NzI2YTBiMTQ0YzUwYzczOWM1ODcwOWRjODIwNjZlODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUH0SVAFqTUxMjAwNjc1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fe925fb6726a0b144c50c739c58709dc82066e86", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/fe925fb6726a0b144c50c739c58709dc82066e86", "committedDate": "2020-10-19T17:36:57Z", "message": "Clean up some Parameterized tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDA2NzUx", "url": "https://github.com/GoogleContainerTools/jib/pull/2841#pullrequestreview-512006751", "createdAt": "2020-10-19T17:42:07Z", "commit": {"oid": "fe925fb6726a0b144c50c739c58709dc82066e86"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzo0MjowN1rOHkaDYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzo0MjowN1rOHkaDYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkzNzYzMg==", "bodyText": "QQ: which dependency has this util?", "url": "https://github.com/GoogleContainerTools/jib/pull/2841#discussion_r507937632", "createdAt": "2020-10-19T17:42:07Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/cli2/JibCliTest.java", "diffHunk": "@@ -329,83 +329,66 @@ public void testParse_toCredentialHelperAndFromUsernamePassword() {\n         .hasValue(Credential.from(\"test-username\", \"test-password\"));\n   }\n \n-  @RunWith(Parameterized.class)\n-  public static class UsernamePasswordBothRequired {\n-    @Parameterized.Parameters(name = \"{0},{1}\")\n-    public static Collection<Object[]> data() {\n-      return Arrays.asList(\n-          new Object[][] {\n-            {\"--username\", \"--password\"},\n-            {\"--to-username\", \"--to-password\"},\n-            {\"--from-username\", \"--from-password\"}\n-          });\n-    }\n-\n-    @Parameterized.Parameter(0)\n-    public String usernameField;\n-\n-    @Parameterized.Parameter(1)\n-    public String passwordField;\n-\n-    @Test\n-    public void testParse_usernameWithoutPassword() {\n-      MissingParameterException mpe =\n-          assertThrows(\n-              MissingParameterException.class,\n-              () ->\n-                  CommandLine.populateCommand(\n-                      new JibCli(), \"--target\", \"test-image-ref\", usernameField, \"test-username\"));\n-      assertThat(mpe.getMessage())\n-          .isEqualTo(\"Error: Missing required argument(s): \" + passwordField);\n-    }\n-\n-    @Test\n-    public void testParse_passwordWithoutUsername() {\n-      MissingParameterException mpe =\n-          assertThrows(\n-              MissingParameterException.class,\n-              () ->\n-                  CommandLine.populateCommand(\n-                      new JibCli(), \"--target\", \"test-image-ref\", passwordField, \"test-password\"));\n-      assertThat(mpe.getMessage())\n-          .isEqualTo(\"Error: Missing required argument(s): \" + usernameField + \"=<username>\");\n-    }\n+  private Object usernamePasswordPairs() {\n+    return new Object[][] {\n+      {\"--username\", \"--password\"},\n+      {\"--to-username\", \"--to-password\"},\n+      {\"--from-username\", \"--from-password\"}\n+    };\n   }\n \n-  @RunWith(Parameterized.class)\n-  public static class IncompatibleCredentialCombos {\n-    @Parameterized.Parameters\n-    public static Collection<String[][]> data() {\n-      return Arrays.asList(\n-          new String[][][] {\n-            {{\"--credential-helper=x\", \"--to-credential-helper=x\"}},\n-            {{\"--credential-helper=x\", \"--from-credential-helper=x\"}},\n-            {{\"--credential-helper=x\", \"--username=x\", \"--password=x\"}},\n-            {{\"--credential-helper=x\", \"--from-username=x\", \"--from-password=x\"}},\n-            {{\"--credential-helper=x\", \"--to-username=x\", \"--to-password=x\"}},\n-            {{\"--username=x\", \"--password=x\", \"--from-username=x\", \"--from-password=x\"}},\n-            {{\"--username=x\", \"--password=x\", \"--to-username=x\", \"--to-password=x\"}},\n-            {{\"--username=x\", \"--password=x\", \"--to-credential-helper=x\"}},\n-            {{\"--username=x\", \"--password=x\", \"--from-credential-helper=x\"}},\n-            {{\"--from-credential-helper=x\", \"--from-username=x\", \"--from-password=x\"}},\n-            {{\"--to-credential-helper=x\", \"--to-password=x\", \"--to-username=x\"}},\n-          });\n-    }\n-\n-    @Parameterized.Parameter public String[] authArgs;\n-    private final String[] requiredArgs = new String[] {\"--target=ignored\"};\n-\n-    @Test\n-    public void testParse_usernameWithoutPassword() {\n-      MutuallyExclusiveArgsException meae =\n-          assertThrows(\n-              MutuallyExclusiveArgsException.class,\n-              () ->\n-                  CommandLine.populateCommand(\n-                      new JibCli(), ArrayUtils.addAll(requiredArgs, authArgs)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe925fb6726a0b144c50c739c58709dc82066e86"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4837, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}