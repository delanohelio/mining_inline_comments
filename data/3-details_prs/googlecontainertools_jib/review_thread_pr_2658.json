{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODgwMjkw", "number": 2658, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyNToxN1rOEVItfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTo1MDowNFrOEVJSfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTk4MjY5OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyNToxN1rOG7uQMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyNjoxN1rOG7uTdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3Njk3Ng==", "bodyText": "Have we built the feature to support an OCI image index yet?", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465276976", "createdAt": "2020-08-04T19:25:17Z", "author": {"login": "louismurerwa"}, "path": "jib-gradle-plugin/CHANGELOG.md", "diffHunk": "@@ -7,6 +7,18 @@ All notable changes to this project will be documented in this file.\n \n - Also tries `.exe` file extension for credential helpers on Windows. ([#2527](https://github.com/GoogleContainerTools/jib/issues/2527))\n - New system property `jib.skipExistingImages` (false by default) to skip pushing images (manifests) if the image already exists in the registry. ([#2360](https://github.com/GoogleContainerTools/jib/issues/2360)\n+- _Incubating feature_: can now configure desired platform (architecture and OS) to select the matching manifest from a Docker manifest list or an OCI image index for a base image. Currently supports building only one image. ([#1567](https://github.com/GoogleContainerTools/jib/issues/1567))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f80cb05d6c189f32aade765987b9d35dc3d7a87c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3NzgxMg==", "bodyText": "Ah, that's a good point. Will fix.", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465277812", "createdAt": "2020-08-04T19:26:17Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/CHANGELOG.md", "diffHunk": "@@ -7,6 +7,18 @@ All notable changes to this project will be documented in this file.\n \n - Also tries `.exe` file extension for credential helpers on Windows. ([#2527](https://github.com/GoogleContainerTools/jib/issues/2527))\n - New system property `jib.skipExistingImages` (false by default) to skip pushing images (manifests) if the image already exists in the registry. ([#2360](https://github.com/GoogleContainerTools/jib/issues/2360)\n+- _Incubating feature_: can now configure desired platform (architecture and OS) to select the matching manifest from a Docker manifest list or an OCI image index for a base image. Currently supports building only one image. ([#1567](https://github.com/GoogleContainerTools/jib/issues/1567))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3Njk3Ng=="}, "originalCommit": {"oid": "f80cb05d6c189f32aade765987b9d35dc3d7a87c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTk5ODA3OnYy", "diffSide": "RIGHT", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyODowNVrOG7uZMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyODowNVrOG7uZMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI3OTI4Mg==", "bodyText": "thenReturn(ImmutableSet.of(new Platform(\"testArch\", \"testOS\")));", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465279282", "createdAt": "2020-08-04T19:28:05Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "diffHunk": "@@ -130,6 +137,56 @@ public void testCall_offlineMode_cached()\n     Mockito.verify(buildContext, Mockito.never()).newBaseImageRegistryClientFactory();\n   }\n \n+  @Test\n+  public void testCall_mismatchedPlatformOfCachedManifest_offlineMode()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException, InvalidImageReferenceException {\n+    ImageReference imageReference = ImageReference.parse(\"cat\");\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);\n+    Mockito.when(cache.retrieveMetadata(imageReference)).thenReturn(Optional.of(manifestAndConfig));\n+    Mockito.when(buildContext.isOffline()).thenReturn(true);\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(ImmutableSet.of(new Platform(\"foo arch\", \"bar OS\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f80cb05d6c189f32aade765987b9d35dc3d7a87c"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjAwNTMyOnYy", "diffSide": "RIGHT", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyOToyM1rOG7udjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOToyOToyM1rOG7udjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4MDM5Ng==", "bodyText": "ditoo", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465280396", "createdAt": "2020-08-04T19:29:23Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStepTest.java", "diffHunk": "@@ -130,6 +137,56 @@ public void testCall_offlineMode_cached()\n     Mockito.verify(buildContext, Mockito.never()).newBaseImageRegistryClientFactory();\n   }\n \n+  @Test\n+  public void testCall_mismatchedPlatformOfCachedManifest_offlineMode()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException, InvalidImageReferenceException {\n+    ImageReference imageReference = ImageReference.parse(\"cat\");\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);\n+    Mockito.when(cache.retrieveMetadata(imageReference)).thenReturn(Optional.of(manifestAndConfig));\n+    Mockito.when(buildContext.isOffline()).thenReturn(true);\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(ImmutableSet.of(new Platform(\"foo arch\", \"bar OS\")));\n+\n+    try {\n+      pullBaseImageStep.call();\n+      Assert.fail();\n+    } catch (IllegalStateException ex) {\n+      Assert.assertEquals(\n+          \"The cached base image manifest does not match the configured platform due to the \"\n+              + \"current implementation of limited platform support. As a workaround, re-run Jib \"\n+              + \"online once to re-cache the right image manifest.\",\n+          ex.getMessage());\n+    }\n+  }\n+\n+  @Test\n+  public void testCall_mismatchedPlatformOfCachedManifest_baseImageDigest()\n+      throws LayerPropertyNotFoundException, IOException, RegistryException,\n+          LayerCountMismatchException, BadContainerConfigurationFormatException,\n+          CacheCorruptedException, CredentialRetrievalException, InvalidImageReferenceException {\n+    ImageReference imageReference =\n+        ImageReference.parse(\n+            \"awesome@sha256:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n+    Mockito.when(imageConfiguration.getImage()).thenReturn(imageReference);\n+    Mockito.when(cache.retrieveMetadata(imageReference)).thenReturn(Optional.of(manifestAndConfig));\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(ImmutableSet.of(new Platform(\"foo arch\", \"bar OS\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f80cb05d6c189f32aade765987b9d35dc3d7a87c"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjA3NzQzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTo1MDowNFrOG7vJyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMjoyMjoxOVrOG7ziFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTcyMQ==", "bodyText": "should this just trigger a redownload of the correct manifest?", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465291721", "createdAt": "2020-08-04T19:50:04Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -110,6 +113,7 @@ public ImagesAndRegistryClient call()\n     } else if (imageReference.getDigest().isPresent()) {\n       Optional<Image> image = getCachedBaseImage();\n       if (image.isPresent()) {\n+        verifyPlatformOfCachedManifest(image.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d38978b026c251be31d37c859b542cb9244033"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTk1OA==", "bodyText": "I mean we're in online mode, we know the manifest needs to be updated? Or is this just an interim solution to a problem that will be fixed?", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465291958", "createdAt": "2020-08-04T19:50:31Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -110,6 +113,7 @@ public ImagesAndRegistryClient call()\n     } else if (imageReference.getDigest().isPresent()) {\n       Optional<Image> image = getCachedBaseImage();\n       if (image.isPresent()) {\n+        verifyPlatformOfCachedManifest(image.get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTcyMQ=="}, "originalCommit": {"oid": "d1d38978b026c251be31d37c859b542cb9244033"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MzY3OQ==", "bodyText": "Oh! Why haven't I thought about it?", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465293679", "createdAt": "2020-08-04T19:53:55Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -110,6 +113,7 @@ public ImagesAndRegistryClient call()\n     } else if (imageReference.getDigest().isPresent()) {\n       Optional<Image> image = getCachedBaseImage();\n       if (image.isPresent()) {\n+        verifyPlatformOfCachedManifest(image.get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTcyMQ=="}, "originalCommit": {"oid": "d1d38978b026c251be31d37c859b542cb9244033"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM0MTA1Ng==", "bodyText": "If it's just short term. This is fine probably.", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465341056", "createdAt": "2020-08-04T21:29:12Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -110,6 +113,7 @@ public ImagesAndRegistryClient call()\n     } else if (imageReference.getDigest().isPresent()) {\n       Optional<Image> image = getCachedBaseImage();\n       if (image.isPresent()) {\n+        verifyPlatformOfCachedManifest(image.get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTcyMQ=="}, "originalCommit": {"oid": "d1d38978b026c251be31d37c859b542cb9244033"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM2MzQ3OA==", "bodyText": "It's a super easy fix and really nice to have. It's just that I really had hard time making the test work. Done.", "url": "https://github.com/GoogleContainerTools/jib/pull/2658#discussion_r465363478", "createdAt": "2020-08-04T22:22:19Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -110,6 +113,7 @@ public ImagesAndRegistryClient call()\n     } else if (imageReference.getDigest().isPresent()) {\n       Optional<Image> image = getCachedBaseImage();\n       if (image.isPresent()) {\n+        verifyPlatformOfCachedManifest(image.get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI5MTcyMQ=="}, "originalCommit": {"oid": "d1d38978b026c251be31d37c859b542cb9244033"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 94, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}