{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2OTY4OTY1", "number": 2699, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxOTo1NTo1OFrOEXxjfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NDozOFrOEYFkYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzY0NjA3OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxOTo1NTo1OFrOG_wRNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxOTo1NTo1OFrOG_wRNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwNDMxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  \"scheduling pushing base image layers\",\n          \n          \n            \n                                  \"scheduling obtaining base image layers\",", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469504311", "createdAt": "2020-08-12T19:55:58Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -304,22 +304,28 @@ private void pullBaseImages() {\n   private void obtainBaseImageLayers(boolean layersRequiredLocally) {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n+\n     results.baseImagesAndLayers =\n         executorService.submit(\n             () -> {\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing base image layers\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "616b5a3198cc91d79e589297b14e76882cc5baa2"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzY0ODgzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxOTo1Njo0NVrOG_wS5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxOTo1Njo0NVrOG_wS5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwNDc0Mw==", "bodyText": "You are looping over baseImagesAndRegistryClient. The allocation for this ProgressEventDispatcher should match the number of times newChildProducer() will be called.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  results.baseImagesAndLayers.get().size());\n          \n          \n            \n                                  results.baseImagesAndRegistryClient.get().size());", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469504743", "createdAt": "2020-08-12T19:56:45Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -304,22 +304,28 @@ private void pullBaseImages() {\n   private void obtainBaseImageLayers(boolean layersRequiredLocally) {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n+\n     results.baseImagesAndLayers =\n         executorService.submit(\n             () -> {\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing base image layers\",\n+                      results.baseImagesAndLayers.get().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "616b5a3198cc91d79e589297b14e76882cc5baa2"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzcwMjcyOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDoxMzozM1rOG_wz0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDoxMzozM1rOG_wz0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxMzE3MQ==", "bodyText": "This is a temporary workaround to overcome the runtime failure. But I can accept this to move forward. Eventually, we should implement a permanent fix. Please keep track of this issue too.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          ProgressEventDispatcher progressDispatcher =\n          \n          \n            \n                          // TODO: ideally, progressDispatcher should be closed at the right moment, after the scheduled threads have completed. However, it can be tricky and cumbersome to track completion, so it may just be better to delay closing until everything ends. At least, we must ensure that it's not closed prematurely. (Garbage collection doesn't auto-close it wit the current implementation.)\n          \n          \n            \n                          ProgressEventDispatcher progressDispatcher =", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469513171", "createdAt": "2020-08-12T20:13:33Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -304,22 +304,28 @@ private void pullBaseImages() {\n   private void obtainBaseImageLayers(boolean layersRequiredLocally) {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n+\n     results.baseImagesAndLayers =\n         executorService.submit(\n             () -> {\n+              ProgressEventDispatcher progressDispatcher =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "616b5a3198cc91d79e589297b14e76882cc5baa2"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDE1MDk5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozMzo1NFrOG_1IvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozMzo1NFrOG_1IvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NDA2MQ==", "bodyText": "\"building manifests\" sounds more informative to the user.", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469584061", "createdAt": "2020-08-12T22:33:54Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -377,6 +392,15 @@ private void buildImages() {\n     results.builtImagesAndBaseImages =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling building images\", results.baseImagesAndLayers.get().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61134225fd03fa94711697635ab8227b17ca88d5"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDE1MTg0OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozNDoxNlrOG_1JQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozNDoxNlrOG_1JQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NDE5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  results.builtImagesAndBaseImages.get().keySet().size());\n          \n          \n            \n                                  results.builtImagesAndBaseImages.get().size());", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469584195", "createdAt": "2020-08-12T22:34:16Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -404,14 +428,24 @@ private void pushContainerConfigurations() {\n     results.builtImagesAndContainerConfigurationPushResults =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing container configurations\",\n+                      results.builtImagesAndBaseImages.get().keySet().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61134225fd03fa94711697635ab8227b17ca88d5"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDE1MjQ3OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozNDozMFrOG_1JnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozNDozMFrOG_1JnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NDI4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  results.builtImagesAndBaseImages.get().keySet().size());\n          \n          \n            \n                                  results.builtImagesAndBaseImages.get().size());", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469584285", "createdAt": "2020-08-12T22:34:30Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -465,13 +499,24 @@ private void pushImages() {\n     results.buildResults =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing images\",\n+                      results.builtImagesAndBaseImages.get().keySet().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61134225fd03fa94711697635ab8227b17ca88d5"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDE1MzY4OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozNDo1NVrOG_1KVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozNDo1NVrOG_1KVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NDQ2OQ==", "bodyText": "pushing manifests", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469584469", "createdAt": "2020-08-12T22:34:55Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -465,13 +499,24 @@ private void pushImages() {\n     results.buildResults =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing images\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61134225fd03fa94711697635ab8227b17ca88d5"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjgxNTM5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoyMjowMlrOHAN3LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MjozNFrOHAOzvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4OTE2NQ==", "bodyText": "#2699 (comment)\nAlmost all of our classes are immutable, so we didn't have to think about synchronization when accessing instances in the multi-threaded environment. However, progressDispatcher is an exception (understandably as a class to report progress updates to the user). And progressDispatcher is not designed to be thread-safe either.\nSo, it is unsafe to access progressDispatcher from multiple threads. That is, calling newChildProducer() here needs synchronization; it's being called in multiple threads launched through the loop.\nThe simplest solution I think is to call newChildProducer() outside executorService.submit() on line 408.", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469989165", "createdAt": "2020-08-13T14:22:02Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -379,7 +409,7 @@ private void buildImages() {\n                         () ->\n                             new BuildImageStep(\n                                     buildContext,\n-                                    childProgressDispatcherFactory,\n+                                    progressDispatcher.newChildProducer(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aed13dd7c56b2bef9d7bf93b1fe80851757daf1"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk5MjM4Ng==", "bodyText": "I see so that means creating a variable to hold the 'progressDispatcher.newChildProducer()` outside of the loop and then use the variable instead in the threads?", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469992386", "createdAt": "2020-08-13T14:26:14Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -379,7 +409,7 @@ private void buildImages() {\n                         () ->\n                             new BuildImageStep(\n                                     buildContext,\n-                                    childProgressDispatcherFactory,\n+                                    progressDispatcher.newChildProducer(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4OTE2NQ=="}, "originalCommit": {"oid": "4aed13dd7c56b2bef9d7bf93b1fe80851757daf1"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk5NjcwNQ==", "bodyText": "Yes. You can actually see it's what the current code does in StepsRunner. For example,\n  private void pushApplicationLayers() {\n    ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n        Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n\n    results.applicationLayerPushResults =\n        executorService.submit(\n            () ->\n                scheduleCallables(..., childProgressDispatcherFactory, ...)\n  }\nYou won't need Verify.verifyNotNull() in your case. For naming, since childProgressDispatcherFactory is already taken, I think progressDispatcherFactory works.", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r469996705", "createdAt": "2020-08-13T14:31:46Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -379,7 +409,7 @@ private void buildImages() {\n                         () ->\n                             new BuildImageStep(\n                                     buildContext,\n-                                    childProgressDispatcherFactory,\n+                                    progressDispatcher.newChildProducer(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4OTE2NQ=="}, "originalCommit": {"oid": "4aed13dd7c56b2bef9d7bf93b1fe80851757daf1"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDY2OQ==", "bodyText": "Yes from the looks of it ,its creating a newProducer()  out side of the executorSubmiter", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r470004669", "createdAt": "2020-08-13T14:42:34Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -379,7 +409,7 @@ private void buildImages() {\n                         () ->\n                             new BuildImageStep(\n                                     buildContext,\n-                                    childProgressDispatcherFactory,\n+                                    progressDispatcher.newChildProducer(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4OTE2NQ=="}, "originalCommit": {"oid": "4aed13dd7c56b2bef9d7bf93b1fe80851757daf1"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkxNzA3OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0Mjo1M1rOHAO0lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTowMjoyMlrOHAPtMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDg4NQ==", "bodyText": "It's ok as long as you are not accessing progressDispatcher concurrently. Let's keep the previous code.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                pushImage(entry.getKey(), entry.getValue(), progressDispatcherFactory));\n          \n          \n            \n                                pushImage(entry.getKey(), entry.getValue(), progressDispatcherFactory.newChildProducer()));", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r470004885", "createdAt": "2020-08-13T14:42:53Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -459,13 +503,24 @@ private void pushImages() {\n     results.buildResults =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing manifests\",\n+                      results.builtImagesAndBaseImages.get().size());\n+\n               realizeFutures(results.applicationLayerPushResults.get());\n \n               List<Future<BuildResult>> buildResults = new ArrayList<>();\n               for (Map.Entry<Future<Image>, Image> entry :\n                   results.builtImagesAndBaseImages.get().entrySet()) {\n+                Factory progressDispatcherFactory = progressDispatcher.newChildProducer();\n                 buildResults.add(\n-                    pushImage(entry.getKey(), entry.getValue(), childProgressDispatcherFactory));\n+                    pushImage(entry.getKey(), entry.getValue(), progressDispatcherFactory));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c7b619fd33ca6a64d725dcb6f45a8990af54ae"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAxOTM3Nw==", "bodyText": "I see so its only in the executorSubmiter", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r470019377", "createdAt": "2020-08-13T15:02:22Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -459,13 +503,24 @@ private void pushImages() {\n     results.buildResults =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing manifests\",\n+                      results.builtImagesAndBaseImages.get().size());\n+\n               realizeFutures(results.applicationLayerPushResults.get());\n \n               List<Future<BuildResult>> buildResults = new ArrayList<>();\n               for (Map.Entry<Future<Image>, Image> entry :\n                   results.builtImagesAndBaseImages.get().entrySet()) {\n+                Factory progressDispatcherFactory = progressDispatcher.newChildProducer();\n                 buildResults.add(\n-                    pushImage(entry.getKey(), entry.getValue(), childProgressDispatcherFactory));\n+                    pushImage(entry.getKey(), entry.getValue(), progressDispatcherFactory));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNDg4NQ=="}, "originalCommit": {"oid": "b3c7b619fd33ca6a64d725dcb6f45a8990af54ae"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkxOTM4OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MzoyNFrOHAO2Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MzoyNFrOHAO2Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNTI1NA==", "bodyText": "Ditto, for simplicity, just progressDispatcher.newChildProducer().", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r470005254", "createdAt": "2020-08-13T14:43:24Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -336,17 +348,28 @@ private void pushBaseImageLayers() {\n     results.baseImagesAndLayerPushResults =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling pushing base image layers\",\n+                      results.baseImagesAndLayers.get().size());\n+\n               Map<Image, List<Future<BlobDescriptor>>> pushResults = new HashMap<>();\n               for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n                   results.baseImagesAndLayers.get().entrySet()) {\n+                Factory progressDispatcherFactory = progressDispatcher.newChildProducer();\n                 Image baseImage = entry.getKey();\n                 List<Future<PreparedLayer>> baseImageLayers = entry.getValue();\n \n                 List<Future<BlobDescriptor>> baseImageLayerPushResult =\n                     scheduleCallables(\n                         PushLayerStep.makeList(\n                             buildContext,\n-                            childProgressDispatcherFactory,\n+                            progressDispatcherFactory,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c7b619fd33ca6a64d725dcb6f45a8990af54ae"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkyMDM5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MzozM1rOHAO2jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0MzozM1rOHAO2jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNTM5MQ==", "bodyText": "ditto", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r470005391", "createdAt": "2020-08-13T14:43:33Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -304,22 +304,34 @@ private void pullBaseImages() {\n   private void obtainBaseImageLayers(boolean layersRequiredLocally) {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n+\n     results.baseImagesAndLayers =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling obtaining base image layers\",\n+                      results.baseImagesAndRegistryClient.get().images.size());\n+\n               Map<Image, List<Future<PreparedLayer>>> baseImagesAndLayers = new HashMap<>();\n               for (Image image : results.baseImagesAndRegistryClient.get().images) {\n+                Factory progressDispatcherFactory = progressDispatcher.newChildProducer();\n                 List<Future<PreparedLayer>> layers =\n                     scheduleCallables(\n                         layersRequiredLocally\n                             ? ObtainBaseImageLayerStep.makeListForForcedDownload(\n                                 buildContext,\n-                                childProgressDispatcherFactory,\n+                                progressDispatcherFactory,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c7b619fd33ca6a64d725dcb6f45a8990af54ae"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkyNTE1OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NDozOFrOHAO5mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NDozOFrOHAO5mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNjE2OA==", "bodyText": "ProgressEventDispatcher.Factory progress... = ...\nError Prone usually complains if an inner class name is too generic.", "url": "https://github.com/GoogleContainerTools/jib/pull/2699#discussion_r470006168", "createdAt": "2020-08-13T14:44:38Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -371,15 +394,25 @@ private void buildImages() {\n     results.builtImagesAndBaseImages =\n         executorService.submit(\n             () -> {\n+              // TODO: ideally, progressDispatcher should be closed at the right moment, after the\n+              // scheduled threads have completed. However, it can be tricky and cumbersome to track\n+              // completion, so it may just be better to delay closing until everything ends. At\n+              // least, we must ensure that it's not closed prematurely. (Garbage collection doesn't\n+              // auto-close it wit the current implementation.)\n+              ProgressEventDispatcher progressDispatcher =\n+                  childProgressDispatcherFactory.create(\n+                      \"scheduling building manifests\", results.baseImagesAndLayers.get().size());\n+\n               Map<Future<Image>, Image> builtImagesAndBaseImages = new HashMap<>();\n               for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n                   results.baseImagesAndLayers.get().entrySet()) {\n+                Factory progressDispatcherFactory = progressDispatcher.newChildProducer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3c7b619fd33ca6a64d725dcb6f45a8990af54ae"}, "originalPosition": 83}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 118, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}