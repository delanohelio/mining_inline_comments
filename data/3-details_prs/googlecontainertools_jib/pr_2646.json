{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NTc1OTUw", "number": 2646, "title": "obtainBaseImageLayers for multiple images", "bodyText": "This PR adds the ability for Jib to pull and store baseImagelayers for multiple images", "createdAt": "2020-07-30T20:28:36Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2646", "merged": true, "mergeCommit": {"oid": "4ed43b8f02504754a9b0ab94fd0eed740f7ed179"}, "closed": true, "closedAt": "2020-07-31T18:20:42Z", "author": {"login": "louismurerwa"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6FnN3gH2gAyNDU5NTc1OTUwOjExOWFlODZiY2NiMWM4M2I4ZWVlNjJlOTI1OTY1NmMyNTdkYzlhYjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6YTiUgFqTQ1OTM2ODAwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "119ae86bccb1c83b8eee62e9259656c257dc9ab8", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/119ae86bccb1c83b8eee62e9259656c257dc9ab8", "committedDate": "2020-07-30T20:26:03Z", "message": "Adding functionality to pull layers for multiple images"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NzU1NjEz", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#pullrequestreview-458755613", "createdAt": "2020-07-30T21:04:27Z", "commit": {"oid": "119ae86bccb1c83b8eee62e9259656c257dc9ab8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTowNDoyN1rOG5zx7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMTozNzoxOFrOG50t3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3MDM4MQ==", "bodyText": "And probably you don't need { return ... } but keep the original syntactic sugar () -> expr.", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#discussion_r463270381", "createdAt": "2020-07-30T21:04:27Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -271,14 +273,28 @@ private void extractTar() {\n   }\n \n   private void assignLocalImageResult(Future<LocalImage> localImage) {\n-    results.baseImageLayers = executorService.submit(() -> localImage.get().layers);\n+\n+    Future<List<Future<PreparedLayer>>> localBaseImageLayers =\n+        executorService.submit(() -> localImage.get().layers);\n+\n     results.baseImageAndRegistryClient =\n         executorService.submit(\n-            () ->\n-                LocalBaseImageSteps.returnImageAndRegistryClientStep(\n-                        realizeFutures(results.baseImageLayers.get()),\n-                        localImage.get().configurationTemplate)\n-                    .call());\n+            () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119ae86bccb1c83b8eee62e9259656c257dc9ab8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3NDUxNg==", "bodyText": "localImage.get().layers should work. No need to defined localBaseImageLayers on line 277.\nand this will probably work:\n.submit( () -> Collections.singletonMap(\n            results.baseImageAndRegistryClient.get().images.get(0),\n            localImage.get().layers) );", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#discussion_r463274516", "createdAt": "2020-07-30T21:13:16Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -271,14 +273,28 @@ private void extractTar() {\n   }\n \n   private void assignLocalImageResult(Future<LocalImage> localImage) {\n-    results.baseImageLayers = executorService.submit(() -> localImage.get().layers);\n+\n+    Future<List<Future<PreparedLayer>>> localBaseImageLayers =\n+        executorService.submit(() -> localImage.get().layers);\n+\n     results.baseImageAndRegistryClient =\n         executorService.submit(\n-            () ->\n-                LocalBaseImageSteps.returnImageAndRegistryClientStep(\n-                        realizeFutures(results.baseImageLayers.get()),\n-                        localImage.get().configurationTemplate)\n-                    .call());\n+            () -> {\n+              return LocalBaseImageSteps.returnImageAndRegistryClientStep(\n+                      realizeFutures(localBaseImageLayers.get()),\n+                      localImage.get().configurationTemplate)\n+                  .call();\n+            });\n+\n+    results.baseImageLayers =\n+        executorService.submit(\n+            () -> {\n+              Map<Image, List<Future<PreparedLayer>>> baseImageLayers = new HashMap<>();\n+              baseImageLayers.put(\n+                  results.baseImageAndRegistryClient.get().images.get(0),\n+                  localBaseImageLayers.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119ae86bccb1c83b8eee62e9259656c257dc9ab8"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI4NTcyNg==", "bodyText": "I realized we could have increased concurrency further. PullBaseImageStep is now designed to return all manifests all at once, meaning that downloading base image layers can start only after all manifests have been downloaded. Moreover, in PullBaseImageStep, we will probably end up having to download all manifests synchronously and sequentially. Theoretically and ideally we should be able to concurrently download manifests as well as start downloading base image layers while there are still pending manifest downloads. However, because this requires significant redesign of PullBaseImageStep (i.e., we should schedule multiple threads (multiple step instances) each downloading an assigned manifest, resulting in List<Future<Image>> instead of the current List<Image>) and because manifests are small and generally quick to download, I think the current implementation is reasonable. We just need to keep track of this issue so that we can eventually implement this.", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#discussion_r463285726", "createdAt": "2020-07-30T21:37:18Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -292,23 +308,31 @@ private void pullBaseImage() {\n   private void obtainBaseImageLayers(boolean layersRequiredLocally) {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n     results.baseImageLayers =\n         executorService.submit(\n-            () ->\n-                scheduleCallables(\n-                    layersRequiredLocally\n-                        ? ObtainBaseImageLayerStep.makeListForForcedDownload(\n-                            buildContext,\n-                            childProgressDispatcherFactory,\n-                            results.baseImageAndRegistryClient.get().images.get(0),\n-                            results.baseImageAndRegistryClient.get().registryClient)\n-                        : ObtainBaseImageLayerStep.makeListForSelectiveDownload(\n-                            buildContext,\n-                            childProgressDispatcherFactory,\n-                            results.baseImageAndRegistryClient.get().images.get(0),\n-                            results.baseImageAndRegistryClient.get().registryClient,\n-                            results.targetRegistryClient.get())));\n+            () -> {\n+              Map<Image, List<Future<PreparedLayer>>> baseImageLayers = new HashMap<>();\n+              for (Image image : results.baseImageAndRegistryClient.get().images) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119ae86bccb1c83b8eee62e9259656c257dc9ab8"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MjI1MzAw", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#pullrequestreview-459225300", "createdAt": "2020-07-31T14:37:19Z", "commit": {"oid": "119ae86bccb1c83b8eee62e9259656c257dc9ab8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzoxOVrOG6K6Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozNzoxOVrOG6K6Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0OTM4Mw==", "bodyText": "What is the best name for this map object that maps Image - baseImageLayers ? I was thinking of  imageLayers or baseImagesAndLayers", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#discussion_r463649383", "createdAt": "2020-07-31T14:37:19Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -64,7 +66,7 @@\n     }\n \n     private Future<ImagesAndRegistryClient> baseImageAndRegistryClient = failedFuture();\n-    private Future<List<Future<PreparedLayer>>> baseImageLayers = failedFuture();\n+    private Future<Map<Image, List<Future<PreparedLayer>>>> baseImageLayers = failedFuture();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119ae86bccb1c83b8eee62e9259656c257dc9ab8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6e956e65249fc09d98a0b7210e79ceb104b9cb8", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/f6e956e65249fc09d98a0b7210e79ceb104b9cb8", "committedDate": "2020-07-31T15:00:40Z", "message": "Style Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MjY2NzM4", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#pullrequestreview-459266738", "createdAt": "2020-07-31T15:31:40Z", "commit": {"oid": "f6e956e65249fc09d98a0b7210e79ceb104b9cb8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozMTo0MFrOG6MzBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozMjozM1rOG6M1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MDI2MA==", "bodyText": "I didn't bother in the last PR as the overall implementation is in the transitioning state from a single image to multiple images, but given the current state, I think we should rename this to baseImagesAndRegistryClient to be consistent.", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#discussion_r463680260", "createdAt": "2020-07-31T15:31:40Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -271,14 +273,22 @@ private void extractTar() {\n   }\n \n   private void assignLocalImageResult(Future<LocalImage> localImage) {\n-    results.baseImageLayers = executorService.submit(() -> localImage.get().layers);\n     results.baseImageAndRegistryClient =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6e956e65249fc09d98a0b7210e79ceb104b9cb8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MDgyMQ==", "bodyText": "Collections.signletonMap (#2646 (comment))?", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#discussion_r463680821", "createdAt": "2020-07-31T15:32:33Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -271,14 +273,22 @@ private void extractTar() {\n   }\n \n   private void assignLocalImageResult(Future<LocalImage> localImage) {\n-    results.baseImageLayers = executorService.submit(() -> localImage.get().layers);\n     results.baseImageAndRegistryClient =\n         executorService.submit(\n             () ->\n                 LocalBaseImageSteps.returnImageAndRegistryClientStep(\n-                        realizeFutures(results.baseImageLayers.get()),\n+                        realizeFutures(localImage.get().layers),\n                         localImage.get().configurationTemplate)\n                     .call());\n+\n+    results.baseImagesAndLayers =\n+        executorService.submit(\n+            () -> {\n+              Map<Image, List<Future<PreparedLayer>>> baseImageAndLayers = new HashMap<>();\n+              baseImageAndLayers.put(\n+                  results.baseImageAndRegistryClient.get().images.get(0), localImage.get().layers);\n+              return baseImageAndLayers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6e956e65249fc09d98a0b7210e79ceb104b9cb8"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb761f1d80268b44e5b31faca9c60531fd621e83", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/fb761f1d80268b44e5b31faca9c60531fd621e83", "committedDate": "2020-07-31T15:57:00Z", "message": "Style Fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MzUzODA0", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#pullrequestreview-459353804", "createdAt": "2020-07-31T17:49:54Z", "commit": {"oid": "fb761f1d80268b44e5b31faca9c60531fd621e83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzo0OTo1NFrOG6Q6ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzo0OTo1NFrOG6Q6ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc0NzY5MA==", "bodyText": "baseImagesAndLayers", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#discussion_r463747690", "createdAt": "2020-07-31T17:49:54Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -271,44 +274,56 @@ private void extractTar() {\n   }\n \n   private void assignLocalImageResult(Future<LocalImage> localImage) {\n-    results.baseImageLayers = executorService.submit(() -> localImage.get().layers);\n-    results.baseImageAndRegistryClient =\n+    results.baseImagesAndRegistryClient =\n         executorService.submit(\n             () ->\n                 LocalBaseImageSteps.returnImageAndRegistryClientStep(\n-                        realizeFutures(results.baseImageLayers.get()),\n+                        realizeFutures(localImage.get().layers),\n                         localImage.get().configurationTemplate)\n                     .call());\n+\n+    results.baseImagesAndLayers =\n+        executorService.submit(\n+            () ->\n+                Collections.singletonMap(\n+                    results.baseImagesAndRegistryClient.get().images.get(0),\n+                    localImage.get().layers));\n   }\n \n   private void pullBaseImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n \n-    results.baseImageAndRegistryClient =\n+    results.baseImagesAndRegistryClient =\n         executorService.submit(new PullBaseImageStep(buildContext, childProgressDispatcherFactory));\n   }\n \n   private void obtainBaseImageLayers(boolean layersRequiredLocally) {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.baseImageLayers =\n+    results.baseImagesAndLayers =\n         executorService.submit(\n-            () ->\n-                scheduleCallables(\n-                    layersRequiredLocally\n-                        ? ObtainBaseImageLayerStep.makeListForForcedDownload(\n-                            buildContext,\n-                            childProgressDispatcherFactory,\n-                            results.baseImageAndRegistryClient.get().images.get(0),\n-                            results.baseImageAndRegistryClient.get().registryClient)\n-                        : ObtainBaseImageLayerStep.makeListForSelectiveDownload(\n-                            buildContext,\n-                            childProgressDispatcherFactory,\n-                            results.baseImageAndRegistryClient.get().images.get(0),\n-                            results.baseImageAndRegistryClient.get().registryClient,\n-                            results.targetRegistryClient.get())));\n+            () -> {\n+              Map<Image, List<Future<PreparedLayer>>> baseImageAndLayers = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb761f1d80268b44e5b31faca9c60531fd621e83"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f71bbb4d00e1941250cda53db56567cfa28832bd", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/f71bbb4d00e1941250cda53db56567cfa28832bd", "committedDate": "2020-07-31T18:04:34Z", "message": "Fixing Styles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MzY4MDA4", "url": "https://github.com/GoogleContainerTools/jib/pull/2646#pullrequestreview-459368008", "createdAt": "2020-07-31T18:12:45Z", "commit": {"oid": "f71bbb4d00e1941250cda53db56567cfa28832bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4913, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}