{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTQ5OTQ1", "number": 2912, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODoxMDo0MFrOFChDIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMjowMzowMlrOFCnieA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTgyOTQ2OnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODoxMDo0MFrOIBuX3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMjoxNzozMFrOIB4w6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3OTI2Mg==", "bodyText": "Do we want to enable caching for the other tests as well?", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538679262", "createdAt": "2020-12-08T18:10:40Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -149,35 +149,43 @@ private static void assertLayerSize(int expected, String imageReference)\n \n   @Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder();\n \n-  private final ProgressChecker progressChecker = new ProgressChecker();\n+  private ProgressChecker progressChecker = new ProgressChecker();\n \n   @Test\n   public void testSteps_forBuildToDockerRegistry()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n-          CacheDirectoryCreationException {\n+          CacheDirectoryCreationException, InvalidImageReferenceException {\n+    System.setProperty(\"jib.alwaysCacheBaseImage\", \"true\");\n+    String imageReference = \"localhost:5000/testimage:testtag\";\n+    Path cacheDirectory = temporaryFolder.newFolder().toPath();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY4ODc2Mw==", "bodyText": "Or make line 157 and line 160 part of setUp()", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538688763", "createdAt": "2020-12-08T18:19:54Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -149,35 +149,43 @@ private static void assertLayerSize(int expected, String imageReference)\n \n   @Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder();\n \n-  private final ProgressChecker progressChecker = new ProgressChecker();\n+  private ProgressChecker progressChecker = new ProgressChecker();\n \n   @Test\n   public void testSteps_forBuildToDockerRegistry()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n-          CacheDirectoryCreationException {\n+          CacheDirectoryCreationException, InvalidImageReferenceException {\n+    System.setProperty(\"jib.alwaysCacheBaseImage\", \"true\");\n+    String imageReference = \"localhost:5000/testimage:testtag\";\n+    Path cacheDirectory = temporaryFolder.newFolder().toPath();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3OTI2Mg=="}, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc5NjcyMg==", "bodyText": "Caching is always enabled. It's just that this particular test purposely gives a new empty directory to not reuse any existing cache. (The test times consecutive builds to ensure the second build runs faster due to caching from the first run.)", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538796722", "createdAt": "2020-12-08T20:51:29Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -149,35 +149,43 @@ private static void assertLayerSize(int expected, String imageReference)\n \n   @Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder();\n \n-  private final ProgressChecker progressChecker = new ProgressChecker();\n+  private ProgressChecker progressChecker = new ProgressChecker();\n \n   @Test\n   public void testSteps_forBuildToDockerRegistry()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n-          CacheDirectoryCreationException {\n+          CacheDirectoryCreationException, InvalidImageReferenceException {\n+    System.setProperty(\"jib.alwaysCacheBaseImage\", \"true\");\n+    String imageReference = \"localhost:5000/testimage:testtag\";\n+    Path cacheDirectory = temporaryFolder.newFolder().toPath();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3OTI2Mg=="}, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg0OTUxMw==", "bodyText": "Oh gotcha, that makes a lot of sense. Thanks!", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538849513", "createdAt": "2020-12-08T22:17:30Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -149,35 +149,43 @@ private static void assertLayerSize(int expected, String imageReference)\n \n   @Rule public final TemporaryFolder temporaryFolder = new TemporaryFolder();\n \n-  private final ProgressChecker progressChecker = new ProgressChecker();\n+  private ProgressChecker progressChecker = new ProgressChecker();\n \n   @Test\n   public void testSteps_forBuildToDockerRegistry()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n-          CacheDirectoryCreationException {\n+          CacheDirectoryCreationException, InvalidImageReferenceException {\n+    System.setProperty(\"jib.alwaysCacheBaseImage\", \"true\");\n+    String imageReference = \"localhost:5000/testimage:testtag\";\n+    Path cacheDirectory = temporaryFolder.newFolder().toPath();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY3OTI2Mg=="}, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTg1OTg4OnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODoxNTozNVrOIBurFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDo1MTozMlrOIB1izQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY4NDE4Mw==", "bodyText": "I know these methods were not introduced in this PR but since we are using a helper for the assert statements, could we make the name a bit more detailed? Something along the lines of assertThatExpectedLayerSizeReturned or assertThatExpectedDockerInspectOutputReturned.", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538684183", "createdAt": "2020-12-08T18:15:35Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -283,54 +288,38 @@ public void testBuildToDockerRegistry_dockerHubBaseImage()\n   }\n \n   @Test\n-  public void testBuildToDockerDaemon()\n+  public void testBuildToDockerDaemon_multipleTags()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n-          CacheDirectoryCreationException {\n-    buildDockerDaemonImage(\n+          CacheDirectoryCreationException, InvalidImageReferenceException {\n+    buildImage(\n         ImageReference.of(\"gcr.io\", \"distroless/java\", DISTROLESS_DIGEST),\n-        ImageReference.of(null, \"testdocker\", null),\n-        Collections.emptyList());\n+        Containerizer.to(DockerDaemonImage.named(\"testdocker\")),\n+        Arrays.asList(\"testtag2\", \"testtag3\"));\n \n     progressChecker.checkCompletion();\n \n-    assertDockerInspect(\"testdocker\");\n     assertLayerSize(7, \"testdocker\");\n+    assertDockerInspect(\"testdocker\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc5Njc0OQ==", "bodyText": "I wish I could, but assertDockerInspect checks a lot of image metadata, including labels, ports, environment variables, and history.", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538796749", "createdAt": "2020-12-08T20:51:32Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -283,54 +288,38 @@ public void testBuildToDockerRegistry_dockerHubBaseImage()\n   }\n \n   @Test\n-  public void testBuildToDockerDaemon()\n+  public void testBuildToDockerDaemon_multipleTags()\n       throws IOException, InterruptedException, ExecutionException, RegistryException,\n-          CacheDirectoryCreationException {\n-    buildDockerDaemonImage(\n+          CacheDirectoryCreationException, InvalidImageReferenceException {\n+    buildImage(\n         ImageReference.of(\"gcr.io\", \"distroless/java\", DISTROLESS_DIGEST),\n-        ImageReference.of(null, \"testdocker\", null),\n-        Collections.emptyList());\n+        Containerizer.to(DockerDaemonImage.named(\"testdocker\")),\n+        Arrays.asList(\"testtag2\", \"testtag3\"));\n \n     progressChecker.checkCompletion();\n \n-    assertDockerInspect(\"testdocker\");\n     assertLayerSize(7, \"testdocker\");\n+    assertDockerInspect(\"testdocker\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY4NDE4Mw=="}, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MTg3NTc1OnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODoxODowM1rOIBu0-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODoxODowM1rOIBu0-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY4NjcxNA==", "bodyText": "Nice, I'm guessing this fixes the compatibility issue and also results in a smaller image:)", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538686714", "createdAt": "2020-12-08T18:18:03Z", "author": {"login": "mpeddada1"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -271,9 +276,9 @@ public void testSteps_forBuildToDockerRegistry_skipExistingDigest()\n   public void testBuildToDockerRegistry_dockerHubBaseImage()\n       throws InvalidImageReferenceException, IOException, InterruptedException, ExecutionException,\n           RegistryException, CacheDirectoryCreationException {\n-    buildRegistryImage(\n-        ImageReference.parse(\"openjdk:8-jre-alpine\"),\n-        ImageReference.of(\"localhost:5000\", \"testimage\", \"testtag\"),\n+    buildImage(\n+        ImageReference.parse(\"openjdk:8-jre-slim\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Mjg5MjcyOnYy", "diffSide": "RIGHT", "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMjowMzowMlrOIB4Pow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMjoxMTowOVrOIB4hzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg0MDk5NQ==", "bodyText": "so now we're just using the system default cache?", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538840995", "createdAt": "2020-12-08T22:03:02Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -383,10 +345,7 @@ private JibContainer buildImage(\n             .setLabels(ImmutableMap.of(\"key1\", \"value1\", \"key2\", \"value2\"))\n             .setFileEntriesLayers(fakeLayerConfigurations);\n \n-    Path cacheDirectory = temporaryFolder.newFolder().toPath();\n     containerizer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg0NTY0NA==", "bodyText": "Yeah, the usual place for base images. I think that's fine. We've been not setting cache directories in other integration tests.", "url": "https://github.com/GoogleContainerTools/jib/pull/2912#discussion_r538845644", "createdAt": "2020-12-08T22:11:09Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/integration-test/java/com/google/cloud/tools/jib/api/ContainerizerIntegrationTest.java", "diffHunk": "@@ -383,10 +345,7 @@ private JibContainer buildImage(\n             .setLabels(ImmutableMap.of(\"key1\", \"value1\", \"key2\", \"value2\"))\n             .setFileEntriesLayers(fakeLayerConfigurations);\n \n-    Path cacheDirectory = temporaryFolder.newFolder().toPath();\n     containerizer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg0MDk5NQ=="}, "originalCommit": {"oid": "34d86a5b7ae0ec24dbb6e256090f5d75e9159284"}, "originalPosition": 221}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 43, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}