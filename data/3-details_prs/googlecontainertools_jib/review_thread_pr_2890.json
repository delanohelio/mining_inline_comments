{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NzgzMjQ4", "number": 2890, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNTo0MTo1MFrOE3wlIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNToxMVrOE_VEkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTAzMDc0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/JibCli.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNTo0MTo1MFrOHxSn2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMDozMjoxN1rOHxkGVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0NzM4Ng==", "bodyText": "Should we also move context, build-file and parameter to Build.java?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r521447386", "createdAt": "2020-11-11T15:41:50Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/JibCli.java", "diffHunk": "@@ -83,7 +85,8 @@\n       required = true,\n       paramLabel = \"<target-image>\",\n       description =\n-          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\")\n+          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\",\n+      scope = CommandLine.ScopeType.INHERIT)\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   private String targetImage;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a6f9488119e3f7457e85d76c4472bcf3ddc8369"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2NzI1Ng==", "bodyText": "Good question. By parameters, you mean the three hidden parameters? I think they should be shared. And for context and build-file, it makes sense to move to Build.java, since we are not using them in Jar.java at the moment.", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r521467256", "createdAt": "2020-11-11T16:10:31Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/JibCli.java", "diffHunk": "@@ -83,7 +85,8 @@\n       required = true,\n       paramLabel = \"<target-image>\",\n       description =\n-          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\")\n+          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\",\n+      scope = CommandLine.ScopeType.INHERIT)\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   private String targetImage;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0NzM4Ng=="}, "originalCommit": {"oid": "5a6f9488119e3f7457e85d76c4472bcf3ddc8369"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ3ODk4Ng==", "bodyText": "Sounds good! Oh sorry by parameter, I meant the templating parameter.", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r521478986", "createdAt": "2020-11-11T16:27:49Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/JibCli.java", "diffHunk": "@@ -83,7 +85,8 @@\n       required = true,\n       paramLabel = \"<target-image>\",\n       description =\n-          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\")\n+          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\",\n+      scope = CommandLine.ScopeType.INHERIT)\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   private String targetImage;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0NzM4Ng=="}, "originalCommit": {"oid": "5a6f9488119e3f7457e85d76c4472bcf3ddc8369"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MjkyMg==", "bodyText": "I don't think I'll comb through all the options. Just make sure to move options only specific to the build command (like those three) to Build.java.\nBTW, the doc says that INHERIT cannot be used in @ArgGroup, which we have in some places. But I guess it's irrelevant to us?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r521692922", "createdAt": "2020-11-11T23:11:39Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/JibCli.java", "diffHunk": "@@ -83,7 +85,8 @@\n       required = true,\n       paramLabel = \"<target-image>\",\n       description =\n-          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\")\n+          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\",\n+      scope = CommandLine.ScopeType.INHERIT)\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   private String targetImage;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0NzM4Ng=="}, "originalCommit": {"oid": "5a6f9488119e3f7457e85d76c4472bcf3ddc8369"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTczMzcxOA==", "bodyText": "Ah good point. Applying the INHERIT feature for the @ArgGroup  still seems to be a work in progress. Currently, using INHERIT on the options in the arg group allows those options to be inherited by all the subcommands but it doesn't let the other arg group attributes to be inherited (for example, validation for exclusivity). This might be something that we need when we are handling credentials for the jar and build subcommands. Hm it is probably better to use Mixins for now as support for INHERIT is still a little new.", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r521733718", "createdAt": "2020-11-12T00:32:17Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/JibCli.java", "diffHunk": "@@ -83,7 +85,8 @@\n       required = true,\n       paramLabel = \"<target-image>\",\n       description =\n-          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\")\n+          \"The destination image reference or jib style url,%nexamples:%n gcr.io/project/image,%n registry://image-ref,%n docker://image,%n tar://path\",\n+      scope = CommandLine.ScopeType.INHERIT)\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   private String targetImage;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0NzM4Ng=="}, "originalCommit": {"oid": "5a6f9488119e3f7457e85d76c4472bcf3ddc8369"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODM4NDc0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDoyODoxMlrOH8-f6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjowNDozNFrOH9wENQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwMDU4Nw==", "bodyText": "Can this be private? Or @VisibleForTesting if required?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r533700587", "createdAt": "2020-12-01T20:28:12Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "diffHunk": "@@ -38,24 +43,73 @@\n \n   @CommandLine.Spec private CommandSpec spec = CommandSpec.create();\n \n+  @CommandLine.Mixin\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  CommonCliOptions commonCliOptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxMjY5Mw==", "bodyText": "Oh yes, thanks for pointing it out.", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r534512693", "createdAt": "2020-12-02T22:04:34Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "diffHunk": "@@ -38,24 +43,73 @@\n \n   @CommandLine.Spec private CommandSpec spec = CommandSpec.create();\n \n+  @CommandLine.Mixin\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  CommonCliOptions commonCliOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwMDU4Nw=="}, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQwMDk4OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozMjozNVrOH8-pfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjowNDowNFrOH9wDBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwMzAzOQ==", "bodyText": "Maybe we can remove this field? JibCli doesn't have any options anymore, right?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r533703039", "createdAt": "2020-12-01T20:32:35Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "diffHunk": "@@ -38,24 +43,73 @@\n \n   @CommandLine.Spec private CommandSpec spec = CommandSpec.create();\n \n+  @CommandLine.Mixin\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  CommonCliOptions commonCliOptions;\n+\n   @CommandLine.ParentCommand\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   protected JibCli globalOptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxMjM5MA==", "bodyText": "Good catch.", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r534512390", "createdAt": "2020-12-02T22:04:04Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "diffHunk": "@@ -38,24 +43,73 @@\n \n   @CommandLine.Spec private CommandSpec spec = CommandSpec.create();\n \n+  @CommandLine.Mixin\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  CommonCliOptions commonCliOptions;\n+\n   @CommandLine.ParentCommand\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   protected JibCli globalOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwMzAzOQ=="}, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQwNDg0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozMzo1MVrOH8-r-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozMzo1MVrOH8-r-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwMzY3Mw==", "bodyText": "commonCliOptions.validate()?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r533703673", "createdAt": "2020-12-01T20:33:51Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "diffHunk": "@@ -38,24 +43,73 @@\n \n   @CommandLine.Spec private CommandSpec spec = CommandSpec.create();\n \n+  @CommandLine.Mixin\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  CommonCliOptions commonCliOptions;\n+\n   @CommandLine.ParentCommand\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   protected JibCli globalOptions;\n \n+  @CommandLine.Option(\n+      names = {\"-c\", \"--context\"},\n+      defaultValue = \".\",\n+      paramLabel = \"<project-root>\",\n+      description = \"The context root directory of the build (ex: path/to/my/build/things)\")\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  private Path contextRoot;\n+\n+  @CommandLine.Option(\n+      names = {\"-b\", \"--build-file\"},\n+      paramLabel = \"<build-file>\",\n+      description = \"The path to the build file (ex: path/to/other-jib.yaml)\")\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  private Path buildFile;\n+\n+  @CommandLine.Option(\n+      names = {\"-p\", \"--parameter\"},\n+      paramLabel = \"<name>=<value>\",\n+      description =\n+          \"templating parameter to inject into build file, replace $${<name>} with <value> (repeatable)\")\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  private Map<String, String> templateParameters = new HashMap<>();\n+\n+  public Path getContextRoot() {\n+    Verify.verifyNotNull(contextRoot);\n+    return contextRoot;\n+  }\n+\n+  /**\n+   * Returns a user configured Path to a buildfile and if none is configured returns jib.yaml in\n+   * {@link #getContextRoot()}.\n+   *\n+   * @return a path to a bulidfile\n+   */\n+  public Path getBuildFile() {\n+    if (buildFile == null) {\n+      return getContextRoot().resolve(\"jib.yaml\");\n+    }\n+    return buildFile;\n+  }\n+\n+  public Map<String, String> getTemplateParameters() {\n+    Verify.verifyNotNull(templateParameters);\n+    return templateParameters;\n+  }\n+\n   @Override\n   public Integer call() {\n-    globalOptions.validate();\n+    validate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQwNjE1OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNDoxNVrOH8-syA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNDoxNVrOH8-syA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwMzg4MA==", "bodyText": "No need to duplicate the method if we call commonCliOptions.validate() above?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r533703880", "createdAt": "2020-12-01T20:34:15Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Build.java", "diffHunk": "@@ -86,4 +139,14 @@ public Integer call() {\n     }\n     return 0;\n   }\n+\n+  /** Validates parameters defined in this class that could not be done declaratively. */\n+  public void validate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQwODg5OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNDo1OVrOH8-uaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNDo1OVrOH8-uaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwNDI5OQ==", "bodyText": "private or @VisibleForTesting?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r533704299", "createdAt": "2020-12-01T20:34:59Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -41,6 +43,10 @@\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   protected JibCli globalOptions;\n \n+  @CommandLine.Mixin\n+  @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n+  CommonCliOptions commonCliOptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODQwOTc5OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNToxMVrOH8-u8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMDozNToxMVrOH8-u8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcwNDQzMw==", "bodyText": "ditto?", "url": "https://github.com/GoogleContainerTools/jib/pull/2890#discussion_r533704433", "createdAt": "2020-12-01T20:35:11Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -97,4 +103,14 @@ public Integer call() {\n     }\n     return 0;\n   }\n+\n+  /** Validates parameters defined in this class that could not be done declaratively. */\n+  public void validate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5ea8093aa3893fc60d5e587920127264be4d5b"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 33, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}