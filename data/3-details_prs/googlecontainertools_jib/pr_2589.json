{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5Njk1NTg0", "number": 2589, "title": "Added the Platform Config to JibContainerBuilder and ContainerConfiguration  ", "bodyText": "Added the platforms functionality to the JIbContainerBuilder and to the ContainerConfiguration\nAdded the testing for the functionality", "createdAt": "2020-07-15T19:46:23Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2589", "merged": true, "mergeCommit": {"oid": "63c53b76f811b49b1e84319a2dc1e3461df858ec"}, "closed": true, "closedAt": "2020-07-20T17:56:10Z", "author": {"login": "louismurerwa"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1QnbegBqjM1NTAyMTIwODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc21Hc5AFqTQ1MTgxNTI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8de41f86d8b01088703e00a8ef6f486b6663d66", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d8de41f86d8b01088703e00a8ef6f486b6663d66", "committedDate": "2020-07-15T19:45:48Z", "message": "Style Fixes"}, "afterCommit": {"oid": "e6e4382ae5e82b5242da33fcb613608c7cdff49a", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e6e4382ae5e82b5242da33fcb613608c7cdff49a", "committedDate": "2020-07-15T20:22:14Z", "message": "Adding the platforms config to the JibContainerBuilder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6e4382ae5e82b5242da33fcb613608c7cdff49a", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e6e4382ae5e82b5242da33fcb613608c7cdff49a", "committedDate": "2020-07-15T20:22:14Z", "message": "Adding the platforms config to the JibContainerBuilder"}, "afterCommit": {"oid": "6afe585aed16bc7f6a977b715df8593422eb85aa", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6afe585aed16bc7f6a977b715df8593422eb85aa", "committedDate": "2020-07-16T16:06:07Z", "message": "Processing RawConfigurations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07d3d5a66806cb9645229e287d030568b8344eef", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/07d3d5a66806cb9645229e287d030568b8344eef", "committedDate": "2020-07-20T14:30:53Z", "message": "Update Javadocs and CHANGELOG for platforms (#2591)"}, "afterCommit": {"oid": "25f30dd3586e9de76e91e90526398dc1aada2e7b", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/25f30dd3586e9de76e91e90526398dc1aada2e7b", "committedDate": "2020-07-20T14:47:03Z", "message": "Update Javadocs and CHANGELOG for platforms (#2591)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1cc093d8a94dc90acf232ddccf5f271e56e89283", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1cc093d8a94dc90acf232ddccf5f271e56e89283", "committedDate": "2020-07-20T14:54:20Z", "message": "FIXING STYLES"}, "afterCommit": {"oid": "1e1c041666b6e291f80ffa9cb93f034b454ceb8e", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1e1c041666b6e291f80ffa9cb93f034b454ceb8e", "committedDate": "2020-07-20T14:57:38Z", "message": "FIXING STYLES"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ff987734a7ba79cdb7bd458697d91d2618e25c13", "committedDate": "2020-07-20T15:39:32Z", "message": "Adding the platforms config to the container builders"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4228082bca562e3c65f7fa2ae28ef19c63e1174c", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4228082bca562e3c65f7fa2ae28ef19c63e1174c", "committedDate": "2020-07-20T15:20:33Z", "message": "FIXING STYLES"}, "afterCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ff987734a7ba79cdb7bd458697d91d2618e25c13", "committedDate": "2020-07-20T15:39:32Z", "message": "Adding the platforms config to the container builders"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0d8b789e340dc3c39ae67b304eb938de7bdd1a6", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/d0d8b789e340dc3c39ae67b304eb938de7bdd1a6", "committedDate": "2020-07-20T15:51:52Z", "message": "Adding Documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzM2OTE4", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#pullrequestreview-451736918", "createdAt": "2020-07-20T15:50:03Z", "commit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MDowM1rOG0UXog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MjoxNVrOG0Ue_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMjg2Ng==", "bodyText": "Maybe Sets the desired platforms, a list of {@link Platform} ?", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457512866", "createdAt": "2020-07-20T15:50:03Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDc1MA==", "bodyText": "Is it true here as well, that we amd64/linux set by default?", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457514750", "createdAt": "2020-07-20T15:52:15Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzI5OTkz", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#pullrequestreview-451729993", "createdAt": "2020-07-20T15:42:18Z", "commit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0MjoxOVrOG0T_vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1ODo0OVrOG0Uz6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUwNjc0OQ==", "bodyText": "Switch the argument order in all these lines. Don't forget to switch the order in Javdoc as well.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457506749", "createdAt": "2020-07-20T15:42:19Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.\n+   *\n+   * @param os the os value\n+   * @param architecture the architecture value\n+   * @return this\n+   */\n+  public JibContainerBuilder addPlatform(String os, String architecture) {\n+    containerBuildPlanBuilder.addPlatform(os, architecture);\n+    containerConfigurationBuilder.addPlatform(os, architecture);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMTg3Ng==", "bodyText": "Let's copy the Javadoc from ContainerBuildPlan.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Adds a platform to the platforms configurations for the container.\n          \n          \n            \n               * Adds a desired image platform (OS and architecture pair). If the base image reference is a\n          \n          \n            \n               * Docker manifest list or an OCI image index, an image builder may select the base image\n          \n          \n            \n               * matching the given platform. If the base image reference is an image manifest, an image\n          \n          \n            \n               * builder may ignore the given platform and use the platform of the base image or may decide to\n          \n          \n            \n               * raise on error.\n          \n          \n            \n               *\n          \n          \n            \n               * <p>Note that a new build plan starts with \"amd64/linux\" as the default platform. If you want\n          \n          \n            \n               * to reset the default platform instead of adding a new one, use {@link #setPlatforms(Set)}.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457511876", "createdAt": "2020-07-20T15:48:46Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMjA3MQ==", "bodyText": "Let's copy the Javadoc from ContainerBuildPlan.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457512071", "createdAt": "2020-07-20T15:49:03Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.\n+   *\n+   * @param os the os value\n+   * @param architecture the architecture value\n+   * @return this\n+   */\n+  public JibContainerBuilder addPlatform(String os, String architecture) {\n+    containerBuildPlanBuilder.addPlatform(os, architecture);\n+    containerConfigurationBuilder.addPlatform(os, architecture);\n+    return this;\n+  }\n+\n+  /**\n+   * Sets the platforms configurations for the container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMzEyMg==", "bodyText": "The Javadoc is outdated. Let's copy the once from ContainerBuildPlan.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457513122", "createdAt": "2020-07-20T15:50:22Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMzMzNg==", "bodyText": "Remove this exception doc.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457513336", "createdAt": "2020-07-20T15:50:35Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDMyOQ==", "bodyText": "jib-core uses the Guava Java library, so we can do\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (platforms.isEmpty()) {\n          \n          \n            \n                    throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n          \n          \n            \n                  }\n          \n          \n            \n                  Preconditions.checkArgument(!platforms.isEmpty(), \"platforms set cannot be empty\");", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457514329", "createdAt": "2020-07-20T15:51:43Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDUwMw==", "bodyText": "outdated Javadoc", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457514503", "createdAt": "2020-07-20T15:51:57Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }\n+      this.platforms = new LinkedHashSet<>(platforms);\n+      return this;\n+    }\n+\n+    /**\n+     * Adds a desired platform (OS and architecture pair). If the base image reference is a Docker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNTg3OQ==", "bodyText": "nit: unnecessary commit", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457515879", "createdAt": "2020-07-20T15:53:36Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/ContainerConfigurationTest.java", "diffHunk": "@@ -34,6 +37,14 @@\n \n   @Test\n   public void testBuilder_nullValues() {\n+    // Platforms list must not be empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNjAxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testAddPlatform_DuplicatePlatforms() {\n          \n          \n            \n              public void testAddPlatform_duplicatePlatforms() {", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457516014", "createdAt": "2020-07-20T15:53:46Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/ContainerConfigurationTest.java", "diffHunk": "@@ -130,4 +141,16 @@ public void testBuilder_workingDirectory() {\n         ContainerConfiguration.builder().setWorkingDirectory(AbsoluteUnixPath.get(\"/path\")).build();\n     Assert.assertEquals(AbsoluteUnixPath.get(\"/path\"), configuration.getWorkingDirectory());\n   }\n+\n+  @Test\n+  public void testAddPlatform_DuplicatePlatforms() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNjg4Mw==", "bodyText": "nit: since platforms is not @Nullable, no need to use Objects.equals():\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return Objects.equals(platforms, otherContainerConfiguration.platforms)\n          \n          \n            \n                return platforms.equals(otherContainerConfiguration.platforms)", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457516883", "createdAt": "2020-07-20T15:54:52Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -359,7 +413,8 @@ public boolean equals(Object other) {\n       return false;\n     }\n     ContainerConfiguration otherContainerConfiguration = (ContainerConfiguration) other;\n-    return creationTime.equals(otherContainerConfiguration.creationTime)\n+    return Objects.equals(platforms, otherContainerConfiguration.platforms)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMDEwNQ==", "bodyText": "order", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457520105", "createdAt": "2020-07-20T15:58:49Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }\n+      this.platforms = new LinkedHashSet<>(platforms);\n+      return this;\n+    }\n+\n+    /**\n+     * Adds a desired platform (OS and architecture pair). If the base image reference is a Docker\n+     * manifest list or an OCI image index, must be set so that an image builder can select the\n+     * image matching the given platform. If the base image reference is an image manifest, this\n+     * value is ignored and the platform of the built image follows that of the base image. The\n+     * default is {@code linux amd64 }.\n+     *\n+     * <p>Note that the build plan starts with amd64/linux as the default platform. If you want to\n+     * reset the default platform instead of adding a new one, use setPlatforms()\"\n+     *\n+     * @param os value to select a base image in case of a manifest list\n+     * @param architecture value to select a base image in case of a manifest list\n+     * @return this\n+     */\n+    public Builder addPlatform(String os, String architecture) {\n+      platforms.add(new Platform(os, architecture));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c4f0e746cd613e66e228a24c0cc6409fa98fd5b", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/8c4f0e746cd613e66e228a24c0cc6409fa98fd5b", "committedDate": "2020-07-20T16:30:56Z", "message": "Adding Documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "624feeddf0a154fb472f83d40f81e3204b213cec", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/624feeddf0a154fb472f83d40f81e3204b213cec", "committedDate": "2020-07-20T16:34:10Z", "message": "Style Fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94f5097846b16b307e273e1bb35bed4da2098e6c", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/94f5097846b16b307e273e1bb35bed4da2098e6c", "committedDate": "2020-07-20T16:31:54Z", "message": "Style Fixes"}, "afterCommit": {"oid": "624feeddf0a154fb472f83d40f81e3204b213cec", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/624feeddf0a154fb472f83d40f81e3204b213cec", "committedDate": "2020-07-20T16:34:10Z", "message": "Style Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e7709f6f6861851ab4f9898d31986b63f14638c", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0e7709f6f6861851ab4f9898d31986b63f14638c", "committedDate": "2020-07-20T16:44:49Z", "message": "Style Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c2ab50304a04d34049dc39f465335974f1bc2b6", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7c2ab50304a04d34049dc39f465335974f1bc2b6", "committedDate": "2020-07-20T17:24:41Z", "message": "minor Javadoc and test updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79d1918faeca036d2176277abce86bef8470ca35", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/79d1918faeca036d2176277abce86bef8470ca35", "committedDate": "2020-07-20T17:28:23Z", "message": "Javadoc typos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODE1Mjkz", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#pullrequestreview-451815293", "createdAt": "2020-07-20T17:31:06Z", "commit": {"oid": "7c2ab50304a04d34049dc39f465335974f1bc2b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 87, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}