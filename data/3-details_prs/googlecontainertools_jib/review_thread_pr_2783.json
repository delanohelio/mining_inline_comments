{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDY5NTgy", "number": 2783, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMDozNDo0N1rOEm1NzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDozNTo1NFrOEnE4dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MTUzMjI5OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwMDozNDo0OFrOHXFvrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDo1NDozNlrOHXe7ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MzQyMA==", "bodyText": "It does feel a little weird that a getter is mutating things.", "url": "https://github.com/GoogleContainerTools/jib/pull/2783#discussion_r493973420", "createdAt": "2020-09-24T00:34:48Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -35,23 +35,32 @@\n   private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n+  private final ObjectFactory objectFactory;\n+\n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n+    this.objectFactory = objectFactory;\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n     platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n     platformParametersSpec =\n         objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n-\n-    PlatformParameters platform = new PlatformParameters();\n-    platform.setOs(\"linux\");\n-    platform.setArchitecture(\"amd64\");\n-    platforms.add(platform);\n   }\n \n   @Nested\n   @Optional\n   public ListProperty<PlatformParameters> getPlatforms() {\n-    return platforms;\n+    if (!platforms.get().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80b6daeb85f297aba9a5650a9490fe88727e8d4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1NTI1MA==", "bodyText": "could we just delegate default setting to a lower level of the system?", "url": "https://github.com/GoogleContainerTools/jib/pull/2783#discussion_r494255250", "createdAt": "2020-09-24T11:57:03Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -35,23 +35,32 @@\n   private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n+  private final ObjectFactory objectFactory;\n+\n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n+    this.objectFactory = objectFactory;\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n     platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n     platformParametersSpec =\n         objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n-\n-    PlatformParameters platform = new PlatformParameters();\n-    platform.setOs(\"linux\");\n-    platform.setArchitecture(\"amd64\");\n-    platforms.add(platform);\n   }\n \n   @Nested\n   @Optional\n   public ListProperty<PlatformParameters> getPlatforms() {\n-    return platforms;\n+    if (!platforms.get().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MzQyMA=="}, "originalCommit": {"oid": "a80b6daeb85f297aba9a5650a9490fe88727e8d4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3MDE0MA==", "bodyText": "Technically it doesn't mutate an internal state, but it's true the class is no longer a POJO or bean. I also didn't like it and wondered other solutions yesterday. Setting the default at other levels could be another way, but it also had some cons.\nToday, I think I found a better way than these: start the class with the default value as before, but only reset it when the user specifies platforms {}. This behavior is also more or less similar to how it works in Maven; if nothing is defined, Maven assumes amd64/linux, but as soon as the user specifies <platforms>, it becomes an empty list.. What do you think?", "url": "https://github.com/GoogleContainerTools/jib/pull/2783#discussion_r494370140", "createdAt": "2020-09-24T14:34:15Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -35,23 +35,32 @@\n   private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n+  private final ObjectFactory objectFactory;\n+\n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n+    this.objectFactory = objectFactory;\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n     platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n     platformParametersSpec =\n         objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n-\n-    PlatformParameters platform = new PlatformParameters();\n-    platform.setOs(\"linux\");\n-    platform.setArchitecture(\"amd64\");\n-    platforms.add(platform);\n   }\n \n   @Nested\n   @Optional\n   public ListProperty<PlatformParameters> getPlatforms() {\n-    return platforms;\n+    if (!platforms.get().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MzQyMA=="}, "originalCommit": {"oid": "a80b6daeb85f297aba9a5650a9490fe88727e8d4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3NjM1Ng==", "bodyText": "Hrmm, I just realized I don't understand how this affects verifying image compatibility? Do we have code somewhere that verifies and image matches the specified platform?", "url": "https://github.com/GoogleContainerTools/jib/pull/2783#discussion_r494376356", "createdAt": "2020-09-24T14:42:16Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -35,23 +35,32 @@\n   private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n+  private final ObjectFactory objectFactory;\n+\n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n+    this.objectFactory = objectFactory;\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n     platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n     platformParametersSpec =\n         objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n-\n-    PlatformParameters platform = new PlatformParameters();\n-    platform.setOs(\"linux\");\n-    platform.setArchitecture(\"amd64\");\n-    platforms.add(platform);\n   }\n \n   @Nested\n   @Optional\n   public ListProperty<PlatformParameters> getPlatforms() {\n-    return platforms;\n+    if (!platforms.get().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MzQyMA=="}, "originalCommit": {"oid": "a80b6daeb85f297aba9a5650a9490fe88727e8d4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM4NjA4Mw==", "bodyText": "#2781 and this PR have nothing to do with verifying image platforms. The issue was that defining\njib.from.platforms {\n  platform {\n    architecture = 'non-amd64'\n    os = '...'\n  }\n}\n\nincorrectly resulted in two platforms configured: the configured one plus the default amd64/linux. This was because platform { ...} just called ListProperty.add().", "url": "https://github.com/GoogleContainerTools/jib/pull/2783#discussion_r494386083", "createdAt": "2020-09-24T14:54:36Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -35,23 +35,32 @@\n   private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n+  private final ObjectFactory objectFactory;\n+\n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n+    this.objectFactory = objectFactory;\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n     platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n     platformParametersSpec =\n         objectFactory.newInstance(PlatformParametersSpec.class, objectFactory, platforms);\n-\n-    PlatformParameters platform = new PlatformParameters();\n-    platform.setOs(\"linux\");\n-    platform.setArchitecture(\"amd64\");\n-    platforms.add(platform);\n   }\n \n   @Nested\n   @Optional\n   public ListProperty<PlatformParameters> getPlatforms() {\n-    return platforms;\n+    if (!platforms.get().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MzQyMA=="}, "originalCommit": {"oid": "a80b6daeb85f297aba9a5650a9490fe88727e8d4"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDA5OTA5OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDozNTo1NFrOHXeCiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDozNTo1NFrOHXeCiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM3MTQ2Nw==", "bodyText": "empty() turns out to be unnecessary.", "url": "https://github.com/GoogleContainerTools/jib/pull/2783#discussion_r494371467", "createdAt": "2020-09-24T14:35:54Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java", "diffHunk": "@@ -38,14 +38,14 @@\n   @Inject\n   public BaseImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"from.auth\");\n-    platforms = objectFactory.listProperty(PlatformParameters.class).empty();\n+    platforms = objectFactory.listProperty(PlatformParameters.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "939c4ef72eda3489883f7b2116de10847e777276"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4926, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}