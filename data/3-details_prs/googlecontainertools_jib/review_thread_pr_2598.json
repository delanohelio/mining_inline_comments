{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxMjU1NDQx", "number": 2598, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoyMDoxMVrOEPnTGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMToxMjoyM1rOEPtnoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODA3OTYzOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpecTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoyMDoxMVrOGzbAog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoyMDoxMVrOGzbAog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3MzA5MA==", "bodyText": "There's no test for user:.", "url": "https://github.com/GoogleContainerTools/jib/pull/2598#discussion_r456573090", "createdAt": "2020-07-17T17:20:11Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpecTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import com.google.cloud.tools.jib.api.Ports;\n+import com.google.cloud.tools.jib.api.buildplan.AbsoluteUnixPath;\n+import com.google.cloud.tools.jib.api.buildplan.ImageFormat;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.ImmutableSet;\n+import java.nio.file.Paths;\n+import java.time.Instant;\n+import org.hamcrest.CoreMatchers;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/** Tests for {@link BuildFileSpec}. */\n+public class BuildFileSpecTest {\n+\n+  private static final ObjectMapper mapper = new ObjectMapper(new YAMLFactory());\n+\n+  @Test\n+  public void testBuildFileSpec_full() throws JsonProcessingException {\n+    String data =\n+        \"apiVersion: v1alpha1\\n\"\n+            + \"kind: BuildFile\\n\"\n+            + \"from:\\n\" // trivial base image spec\n+            + \"  image: gcr.io/example/jib\\n\"\n+            + \"creationTime: 1\\n\"\n+            + \"format: OCI\\n\"\n+            + \"environment:\\n\"\n+            + \"  env_key: env_value\\n\"\n+            + \"labels:\\n\"\n+            + \"  label_key: label_value\\n\"\n+            + \"volumes:\\n\"\n+            + \"   - /my/volume\\n\"\n+            + \"exposedPorts:\\n\"\n+            + \"  - 8080\\n\"\n+            + \"user: username\\n\"\n+            + \"workingDirectory: /workspace\\n\"\n+            + \"entrypoint:\\n\"\n+            + \"  - java\\n\"\n+            + \"  - -jar\\n\"\n+            + \"cmd:\\n\"\n+            + \"  - myjar.jar\\n\"\n+            + \"layers:\\n\" // trivial layers\n+            + \"  entries:\\n\"\n+            + \"    - name: some layer\\n\"\n+            + \"      archive: /something.tgz\\n\";\n+\n+    BuildFileSpec parsed = mapper.readValue(data, BuildFileSpec.class);\n+    Assert.assertEquals(\"v1alpha1\", parsed.getApiVersion());\n+    Assert.assertEquals(\"BuildFile\", parsed.getKind());\n+    Assert.assertEquals(\"gcr.io/example/jib\", parsed.getFrom().get().getImage());\n+    Assert.assertEquals(Instant.ofEpochMilli(1), parsed.getCreationTime().get());\n+    Assert.assertEquals(ImageFormat.OCI, parsed.getFormat().get());\n+    Assert.assertEquals(ImmutableMap.of(\"env_key\", \"env_value\"), parsed.getEnvironment().get());\n+    Assert.assertEquals(ImmutableMap.of(\"label_key\", \"label_value\"), parsed.getLabels().get());\n+    Assert.assertEquals(\n+        ImmutableSet.of(AbsoluteUnixPath.get(\"/my/volume\")), parsed.getVolumes().get());\n+    Assert.assertEquals(Ports.parse(ImmutableList.of(\"8080\")), parsed.getExposedPorts().get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e90a7242ce85d8e14d809fad10d7c94ec595168"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODA4NTI0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoyMjowMFrOGzbEEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoyMjowMFrOGzbEEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3Mzk2OQ==", "bodyText": "iso 8601", "url": "https://github.com/GoogleContainerTools/jib/pull/2598#discussion_r456573969", "createdAt": "2020-07-17T17:22:00Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.Ports;\n+import com.google.cloud.tools.jib.api.buildplan.AbsoluteUnixPath;\n+import com.google.cloud.tools.jib.api.buildplan.ImageFormat;\n+import com.google.cloud.tools.jib.api.buildplan.Port;\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying a jib cli buildfile.\n+ *\n+ * <p>Example use of this yaml.\n+ *\n+ * <pre>{@code\n+ * apiVersion: v1alpha1\n+ * kind: BuildFile\n+ * from: see {@link BaseImageSpec}\n+ * creationTime: 100\n+ * format: docker\n+ * environment:\n+ *   env_key: env_value\n+ * labels:\n+ *   label_key: label_value\n+ * volumes:\n+ *   - /my/volume\n+ * exposedPorts:\n+ *   - 8080\n+ * user: username\n+ * workingDirectory: /workspace\n+ * entrypoint:\n+ *   - java\n+ *   - -jar\n+ * cmd:\n+ *   - myjar.jar\n+ * layers: see {@link LayersSpec}\n+ * }</pre>\n+ */\n+public class BuildFileSpec {\n+  private String apiVersion;\n+  private String kind;\n+  @Nullable private BaseImageSpec from;\n+  @Nullable private Instant creationTime;\n+  @Nullable private ImageFormat format;\n+  @Nullable private Map<String, String> environment;\n+  @Nullable private Map<String, String> labels;\n+  @Nullable private Set<AbsoluteUnixPath> volumes;\n+  @Nullable private Set<Port> exposedPorts;\n+  @Nullable private String user;\n+  @Nullable private AbsoluteUnixPath workingDirectory;\n+  @Nullable private List<String> entrypoint;\n+  @Nullable private List<String> cmd;\n+\n+  @Nullable private LayersSpec layers;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param apiVersion the api version of this buildfile\n+   * @param kind the kind (always BuildFile)\n+   * @param from a {@link BaseImageSpec} for base image\n+   * @param creationTime in milliseconds since epoch or ISO 6801 datetime", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e90a7242ce85d8e14d809fad10d7c94ec595168"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODEwODA3OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzoyOTozNFrOGzbSDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOToyMToxNFrOGzeiyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3NzU1MA==", "bodyText": "I know it's basically a JSON class, which is probably why you made all the fields @Nullable, but I just wonder if it makes sense or even possible to give a default value to some fields (e.g., format = Docker).\nRelated, ContainerBuildPlan starts with empty set/list/map for most collection fields and avoids returning Optional<Collection>, but I guess this is also a matter of policy.", "url": "https://github.com/GoogleContainerTools/jib/pull/2598#discussion_r456577550", "createdAt": "2020-07-17T17:29:34Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.Ports;\n+import com.google.cloud.tools.jib.api.buildplan.AbsoluteUnixPath;\n+import com.google.cloud.tools.jib.api.buildplan.ImageFormat;\n+import com.google.cloud.tools.jib.api.buildplan.Port;\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying a jib cli buildfile.\n+ *\n+ * <p>Example use of this yaml.\n+ *\n+ * <pre>{@code\n+ * apiVersion: v1alpha1\n+ * kind: BuildFile\n+ * from: see {@link BaseImageSpec}\n+ * creationTime: 100\n+ * format: docker\n+ * environment:\n+ *   env_key: env_value\n+ * labels:\n+ *   label_key: label_value\n+ * volumes:\n+ *   - /my/volume\n+ * exposedPorts:\n+ *   - 8080\n+ * user: username\n+ * workingDirectory: /workspace\n+ * entrypoint:\n+ *   - java\n+ *   - -jar\n+ * cmd:\n+ *   - myjar.jar\n+ * layers: see {@link LayersSpec}\n+ * }</pre>\n+ */\n+public class BuildFileSpec {\n+  private String apiVersion;\n+  private String kind;\n+  @Nullable private BaseImageSpec from;\n+  @Nullable private Instant creationTime;\n+  @Nullable private ImageFormat format;\n+  @Nullable private Map<String, String> environment;\n+  @Nullable private Map<String, String> labels;\n+  @Nullable private Set<AbsoluteUnixPath> volumes;\n+  @Nullable private Set<Port> exposedPorts;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e90a7242ce85d8e14d809fad10d7c94ec595168"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYzMDk4Ng==", "bodyText": "So I'm working under the assumption that defaults come from the build plan. However, this is something we can discuss. Added to tracking bug.", "url": "https://github.com/GoogleContainerTools/jib/pull/2598#discussion_r456630986", "createdAt": "2020-07-17T19:21:14Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.Ports;\n+import com.google.cloud.tools.jib.api.buildplan.AbsoluteUnixPath;\n+import com.google.cloud.tools.jib.api.buildplan.ImageFormat;\n+import com.google.cloud.tools.jib.api.buildplan.Port;\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying a jib cli buildfile.\n+ *\n+ * <p>Example use of this yaml.\n+ *\n+ * <pre>{@code\n+ * apiVersion: v1alpha1\n+ * kind: BuildFile\n+ * from: see {@link BaseImageSpec}\n+ * creationTime: 100\n+ * format: docker\n+ * environment:\n+ *   env_key: env_value\n+ * labels:\n+ *   label_key: label_value\n+ * volumes:\n+ *   - /my/volume\n+ * exposedPorts:\n+ *   - 8080\n+ * user: username\n+ * workingDirectory: /workspace\n+ * entrypoint:\n+ *   - java\n+ *   - -jar\n+ * cmd:\n+ *   - myjar.jar\n+ * layers: see {@link LayersSpec}\n+ * }</pre>\n+ */\n+public class BuildFileSpec {\n+  private String apiVersion;\n+  private String kind;\n+  @Nullable private BaseImageSpec from;\n+  @Nullable private Instant creationTime;\n+  @Nullable private ImageFormat format;\n+  @Nullable private Map<String, String> environment;\n+  @Nullable private Map<String, String> labels;\n+  @Nullable private Set<AbsoluteUnixPath> volumes;\n+  @Nullable private Set<Port> exposedPorts;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU3NzU1MA=="}, "originalCommit": {"oid": "6e90a7242ce85d8e14d809fad10d7c94ec595168"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0OTExNTIxOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwMToxMjoyM1rOGzkoaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOVQyMzowNjo0NFrOGzzC9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczMDcyOA==", "bodyText": "is it possible to get a bit more context into these two variables?", "url": "https://github.com/GoogleContainerTools/jib/pull/2598#discussion_r456730728", "createdAt": "2020-07-18T01:12:23Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.Ports;\n+import com.google.cloud.tools.jib.api.buildplan.AbsoluteUnixPath;\n+import com.google.cloud.tools.jib.api.buildplan.ImageFormat;\n+import com.google.cloud.tools.jib.api.buildplan.Port;\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying a jib cli buildfile.\n+ *\n+ * <p>Example use of this yaml.\n+ *\n+ * <pre>{@code\n+ * apiVersion: v1alpha1\n+ * kind: BuildFile\n+ * from: see {@link BaseImageSpec}\n+ * creationTime: 100\n+ * format: docker\n+ * environment:\n+ *   env_key: env_value\n+ * labels:\n+ *   label_key: label_value\n+ * volumes:\n+ *   - /my/volume\n+ * exposedPorts:\n+ *   - 8080\n+ * user: username\n+ * workingDirectory: /workspace\n+ * entrypoint:\n+ *   - java\n+ *   - -jar\n+ * cmd:\n+ *   - myjar.jar\n+ * layers: see {@link LayersSpec}\n+ * }</pre>\n+ */\n+public class BuildFileSpec {\n+  private String apiVersion;\n+  private String kind;\n+  @Nullable private BaseImageSpec from;\n+  @Nullable private Instant creationTime;\n+  @Nullable private ImageFormat format;\n+  @Nullable private Map<String, String> environment;\n+  @Nullable private Map<String, String> labels;\n+  @Nullable private Set<AbsoluteUnixPath> volumes;\n+  @Nullable private Set<Port> exposedPorts;\n+  @Nullable private String user;\n+  @Nullable private AbsoluteUnixPath workingDirectory;\n+  @Nullable private List<String> entrypoint;\n+  @Nullable private List<String> cmd;\n+\n+  @Nullable private LayersSpec layers;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param apiVersion the api version of this buildfile\n+   * @param kind the kind (always BuildFile)\n+   * @param from a {@link BaseImageSpec} for base image", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4033fbbb822081c1291df3548736c8faa7ebd630"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk2NjkwMg==", "bodyText": "kind and from?", "url": "https://github.com/GoogleContainerTools/jib/pull/2598#discussion_r456966902", "createdAt": "2020-07-19T23:06:44Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFileSpec.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.cloud.tools.jib.api.Ports;\n+import com.google.cloud.tools.jib.api.buildplan.AbsoluteUnixPath;\n+import com.google.cloud.tools.jib.api.buildplan.ImageFormat;\n+import com.google.cloud.tools.jib.api.buildplan.Port;\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying a jib cli buildfile.\n+ *\n+ * <p>Example use of this yaml.\n+ *\n+ * <pre>{@code\n+ * apiVersion: v1alpha1\n+ * kind: BuildFile\n+ * from: see {@link BaseImageSpec}\n+ * creationTime: 100\n+ * format: docker\n+ * environment:\n+ *   env_key: env_value\n+ * labels:\n+ *   label_key: label_value\n+ * volumes:\n+ *   - /my/volume\n+ * exposedPorts:\n+ *   - 8080\n+ * user: username\n+ * workingDirectory: /workspace\n+ * entrypoint:\n+ *   - java\n+ *   - -jar\n+ * cmd:\n+ *   - myjar.jar\n+ * layers: see {@link LayersSpec}\n+ * }</pre>\n+ */\n+public class BuildFileSpec {\n+  private String apiVersion;\n+  private String kind;\n+  @Nullable private BaseImageSpec from;\n+  @Nullable private Instant creationTime;\n+  @Nullable private ImageFormat format;\n+  @Nullable private Map<String, String> environment;\n+  @Nullable private Map<String, String> labels;\n+  @Nullable private Set<AbsoluteUnixPath> volumes;\n+  @Nullable private Set<Port> exposedPorts;\n+  @Nullable private String user;\n+  @Nullable private AbsoluteUnixPath workingDirectory;\n+  @Nullable private List<String> entrypoint;\n+  @Nullable private List<String> cmd;\n+\n+  @Nullable private LayersSpec layers;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param apiVersion the api version of this buildfile\n+   * @param kind the kind (always BuildFile)\n+   * @param from a {@link BaseImageSpec} for base image", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczMDcyOA=="}, "originalCommit": {"oid": "4033fbbb822081c1291df3548736c8faa7ebd630"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 271, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}