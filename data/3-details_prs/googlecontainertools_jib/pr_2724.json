{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzc3Mzkz", "number": 2724, "title": "Adding functionality to push a manifest list", "bodyText": "This PR allows Jib to push a manifestList to the registry .", "createdAt": "2020-08-24T21:32:06Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2724", "merged": true, "mergeCommit": {"oid": "d13b71cc603ca6c8415f7519eff8f323ca4fb2ec"}, "closed": true, "closedAt": "2020-08-26T21:05:14Z", "author": {"login": "louismurerwa"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCI71ogH2gAyNDcyNzc3MzkzOjcxYTJkOWY3M2U3N2ZlNzdmZjI1ZTc4MTY5YWUwNzVjOWYyNzZlOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCxx_TAH2gAyNDcyNzc3MzkzOjdjNTY2OTU5ZTVmMjI3YzcxOWQ4MjcwNmM4YzU1MjkyNDQzMGZiOTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71a2d9f73e77fe77ff25e78169ae075c9f276e95", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/71a2d9f73e77fe77ff25e78169ae075c9f276e95", "committedDate": "2020-08-24T20:49:41Z", "message": "Adding functionality to push the manifest list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ae1c363d3312fe97bf9d70242a16637717d02d4", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/3ae1c363d3312fe97bf9d70242a16637717d02d4", "committedDate": "2020-08-24T21:30:06Z", "message": "Pushing manifest list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb675b0676262779d67e3cccfd069f6ccd5e2e88", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/eb675b0676262779d67e3cccfd069f6ccd5e2e88", "committedDate": "2020-08-25T15:42:40Z", "message": "Style Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7d463f9b9910b6885640ebf22dfc966022ff675d", "committedDate": "2020-08-25T18:28:46Z", "message": "Refactoring Code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7abf3b606eae0547b9b7eeb1934c6a575b95e112", "committedDate": "2020-08-25T18:44:05Z", "message": "Style Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0NzU1NTYw", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#pullrequestreview-474755560", "createdAt": "2020-08-25T18:43:04Z", "commit": {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d"}, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODo0MzowNFrOHGlGCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxODo1NTo0OFrOHGli5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTI1Nw==", "bodyText": "Hmm... I think we should do something about the \"image id\" when pushing a manifest list. It doesn't make sense to return a container configuration digest.", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476661257", "createdAt": "2020-08-25T18:43:04Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -37,8 +38,8 @@\n import java.util.concurrent.Callable;\n \n /**\n- * Pushes a manifest for a tag. Returns the manifest digest (\"image digest\") and the container\n- * configuration digest (\"image id\") as {#link BuildResult}.\n+ * Pushes a manifestTemplate for a tag. Returns the manifestTemplate digest (\"image digest\") and the\n+ * container configuration digest (\"image id\") as {#link BuildResult}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTU3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static ImmutableList<PushImageStep> makeListPushManifestList(\n          \n          \n            \n              static ImmutableList<PushImageStep> makeListForManifestList(", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476661570", "createdAt": "2020-08-25T18:43:36Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,46 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTc2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  DescriptorDigest manifestDigest = Digests.computeJsonDigest(manifestList);\n          \n          \n            \n                  DescriptorDigest manifestListDigest = Digests.computeJsonDigest(manifestList);", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476661768", "createdAt": "2020-08-25T18:43:58Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,46 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)\n+      throws IOException {\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestAlreadyExists) {\n+        eventHandlers.dispatch(\n+            LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));\n+        return ImmutableList.of();\n+      }\n+      DescriptorDigest manifestDigest = Digests.computeJsonDigest(manifestList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MjAyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  boolean manifestAlreadyExists)\n          \n          \n            \n                  boolean manifestListAlreadyExists)", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476662028", "createdAt": "2020-08-25T18:44:24Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,46 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MjI5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));\n          \n          \n            \n                        LogEvent.info(\"Skipping pushing manifest list; already exists.\"));", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476662294", "createdAt": "2020-08-25T18:44:55Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +96,48 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)\n+      throws IOException {\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestAlreadyExists) {\n+        eventHandlers.dispatch(\n+            LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NDc3Mg==", "bodyText": "I feel like this should be @Nullable DescriptorDigest imageId now that this doesn't apply to a manifest list.\nThat will trigger cascading changes to BuildResult, which requires a separate PR. I guess the BuildResult.imageId also needs to be @Nullable and BuildResuilt.getImageId() should return Optional<DescriptorDigest>.", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476664772", "createdAt": "2020-08-25T18:49:18Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -107,7 +147,7 @@\n       BuildContext buildContext,\n       ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n       RegistryClient registryClient,\n-      BuildableManifestTemplate manifestTemplate,\n+      ManifestTemplate manifestTemplate,\n       String imageQualifier,\n       DescriptorDigest imageDigest,\n       DescriptorDigest imageId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NTQ5NA==", "bodyText": "\"imagePushResults\"?", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476665494", "createdAt": "2020-08-25T18:50:32Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -79,9 +79,10 @@\n     private Future<List<Future<BlobDescriptor>>> applicationLayerPushResults = failedFuture();\n     private Future<Map<Future<Image>, Future<BlobDescriptor>>>\n         builtImagesAndContainerConfigurationPushResults = failedFuture();\n-    private Future<List<Future<BuildResult>>> buildResults = failedFuture();\n     private Future<Optional<ManifestAndDigest<ManifestTemplate>>> manifestCheckResult =\n         failedFuture();\n+    public Future<List<Future<BuildResult>>> singleManifestPushResults = failedFuture();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NTU5OQ==", "bodyText": "\"manifestPushResult\"?", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476665599", "createdAt": "2020-08-25T18:50:41Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -79,9 +79,10 @@\n     private Future<List<Future<BlobDescriptor>>> applicationLayerPushResults = failedFuture();\n     private Future<Map<Future<Image>, Future<BlobDescriptor>>>\n         builtImagesAndContainerConfigurationPushResults = failedFuture();\n-    private Future<List<Future<BuildResult>>> buildResults = failedFuture();\n     private Future<Optional<ManifestAndDigest<ManifestTemplate>>> manifestCheckResult =\n         failedFuture();\n+    public Future<List<Future<BuildResult>>> singleManifestPushResults = failedFuture();\n+    private Future<BuildResult> buildResult = failedFuture();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NzI2Mw==", "bodyText": "return new LoadDockerStep(...)", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476667263", "createdAt": "2020-08-25T18:53:34Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -582,15 +608,15 @@ private void loadDocker(DockerClient dockerClient) {\n                   new LoadDockerStep(\n                           buildContext, childProgressDispatcherFactory, dockerClient, builtImage)\n                       .call();\n-              return Collections.singletonList(Futures.immediateFuture(buildResult));\n+              return buildResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2NzQ4NQ==", "bodyText": "ditto", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476667485", "createdAt": "2020-08-25T18:53:58Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -603,7 +629,7 @@ private void writeTarFile(Path outputPath) {\n                   new WriteTarFileStep(\n                           buildContext, childProgressDispatcherFactory, outputPath, builtImage)\n                       .call();\n-              return Collections.singletonList(Futures.immediateFuture(buildResult));\n+              return buildResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2ODY0NQ==", "bodyText": "Hmm... I saw some test failures. I suspect there's a problem with using a progress dispatcher here.", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476668645", "createdAt": "2020-08-25T18:55:48Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -566,11 +568,35 @@ private void pushImages() {\n         });\n   }\n \n+  private void pushManifestList() {\n+    ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n+        Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n+\n+    results.buildResult =\n+        executorService.submit(\n+            () -> {\n+              realizeFutures(results.singleManifestPushResults.get());\n+              List<Future<BuildResult>> manifestListPushResults =\n+                  scheduleCallables(\n+                      PushImageStep.makeListPushManifestList(\n+                          buildContext,\n+                          childProgressDispatcherFactory,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0Nzc4NTI3", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#pullrequestreview-474778527", "createdAt": "2020-08-25T19:15:49Z", "commit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOToxNTo0OVrOHGmN3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOToxNTo0OVrOHGmN3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY3OTY0Ng==", "bodyText": "We should have consistency in the way we determine single or multi-image building. And I think early short-circuiting makes sense. So instead of this instanceof check, I'd go with\n  static ImmutableList<PushImageStep> makeList(...) throws IOException {\n    ...\n    try (...) {\n      boolean singlePlatform = buildContext.getContainerConfiguration().getPlatforms().size() == 1;\n      if (singlePlatform) {\n        return ImmutableList.of(); // single image; no need to push a manifest list\n      }", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476679646", "createdAt": "2020-08-25T19:15:49Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +96,48 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListPushManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestAlreadyExists)\n+      throws IOException {\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestAlreadyExists) {\n+        eventHandlers.dispatch(\n+            LogEvent.info(\"Skipping pushing manifest list; manifest already exists.\"));\n+        return ImmutableList.of();\n+      }\n+      DescriptorDigest manifestDigest = Digests.computeJsonDigest(manifestList);\n+      return manifestList instanceof V22ManifestListTemplate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7abf3b606eae0547b9b7eeb1934c6a575b95e112"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70e7fffd08c164a43f1127e7d8b5ca23d1f86cb1", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/70e7fffd08c164a43f1127e7d8b5ca23d1f86cb1", "committedDate": "2020-08-25T19:44:23Z", "message": "Style Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2", "committedDate": "2020-08-25T19:58:01Z", "message": "Fix for failing test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0OTA1MTA3", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#pullrequestreview-474905107", "createdAt": "2020-08-25T21:10:09Z", "commit": {"oid": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxMDowOVrOHGp13Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxNTo0N1rOHGqAzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjczOTAzNw==", "bodyText": "Pushes a manifest or a manifest list for a tag. If not a manifest list, returns the manifest digest (\"image digest\") and the container configuration digest (\"image id\") as {@link BuildResult}. If a manifest list, returns the manifest list digest only.\nAnd note the original Javadoc has a typo: {#link BuildResult} --> {@link BuildResult}", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476739037", "createdAt": "2020-08-25T21:10:09Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -37,8 +38,8 @@\n import java.util.concurrent.Callable;\n \n /**\n- * Pushes a manifest for a tag. Returns the manifest digest (\"image digest\") and the container\n- * configuration digest (\"image id\") as {#link BuildResult}.\n+ * Pushes a manifestTemplate for a tag. Returns the manifestTemplate digest (\"image digest\") and the\n+ * container configuration digest (\"image id\") as {#link BuildResult}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY2MTI1Nw=="}, "originalCommit": {"oid": "7d463f9b9910b6885640ebf22dfc966022ff675d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjczOTYxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class PushImageStep implements Callable<BuildResult> {\n          \n          \n            \n            // TODO: figure out the right return value and type when pushing a manifest list.\n          \n          \n            \n            class PushImageStep implements Callable<BuildResult> {", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476739615", "createdAt": "2020-08-25T21:11:22Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -37,8 +38,8 @@\n import java.util.concurrent.Callable;\n \n /**\n- * Pushes a manifest for a tag. Returns the manifest digest (\"image digest\") and the container\n- * configuration digest (\"image id\") as {#link BuildResult}.\n+ * Pushes a manifestTemplate for a tag. Returns the manifestTemplate digest (\"image digest\") and the\n+ * container configuration digest (\"image id\") as {#link BuildResult}.\n  */\n class PushImageStep implements Callable<BuildResult> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTE2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                  manifestListDigest))\n          \n          \n            \n                                  // TODO: a manifest list digest isn't an \"image id\". Figure out the right return value and type.\n          \n          \n            \n                                  manifestListDigest))", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476741160", "createdAt": "2020-08-25T21:14:26Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -94,10 +95,50 @@\n     }\n   }\n \n+  static ImmutableList<PushImageStep> makeListForManifestList(\n+      BuildContext buildContext,\n+      ProgressEventDispatcher.Factory progressEventDispatcherFactory,\n+      RegistryClient registryClient,\n+      ManifestTemplate manifestList,\n+      boolean manifestListAlreadyExists)\n+      throws IOException {\n+\n+    Set<String> tags = buildContext.getAllTargetImageTags();\n+\n+    EventHandlers eventHandlers = buildContext.getEventHandlers();\n+    try (TimerEventDispatcher ignored =\n+            new TimerEventDispatcher(eventHandlers, \"Preparing manifest list pushers\");\n+        ProgressEventDispatcher progressEventDispatcher =\n+            progressEventDispatcherFactory.create(\"launching manifest list pushers\", tags.size())) {\n+      boolean singlePlatform = buildContext.getContainerConfiguration().getPlatforms().size() == 1;\n+      if (singlePlatform) {\n+        return ImmutableList.of(); // single image; no need to push a manifest list\n+      }\n+\n+      if (JibSystemProperties.skipExistingImages() && manifestListAlreadyExists) {\n+        eventHandlers.dispatch(LogEvent.info(\"Skipping pushing manifest list; already exists.\"));\n+        return ImmutableList.of();\n+      }\n+      DescriptorDigest manifestListDigest = Digests.computeJsonDigest(manifestList);\n+      return tags.stream()\n+          .map(\n+              tag ->\n+                  new PushImageStep(\n+                      buildContext,\n+                      progressEventDispatcher.newChildProducer(),\n+                      registryClient,\n+                      manifestList,\n+                      tag,\n+                      manifestListDigest,\n+                      manifestListDigest))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTM5OQ==", "bodyText": "And can you add another tracking item into your doc?", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476741399", "createdAt": "2020-08-25T21:14:54Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PushImageStep.java", "diffHunk": "@@ -37,8 +38,8 @@\n import java.util.concurrent.Callable;\n \n /**\n- * Pushes a manifest for a tag. Returns the manifest digest (\"image digest\") and the container\n- * configuration digest (\"image id\") as {#link BuildResult}.\n+ * Pushes a manifestTemplate for a tag. Returns the manifestTemplate digest (\"image digest\") and the\n+ * container configuration digest (\"image id\") as {#link BuildResult}.\n  */\n class PushImageStep implements Callable<BuildResult> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjczOTYxNQ=="}, "originalCommit": {"oid": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MTgzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Future<List<Future<BuildResult>>> imagePushResultshResults = failedFuture();\n          \n          \n            \n                public Future<List<Future<BuildResult>>> imagePushResults = failedFuture();", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r476741836", "createdAt": "2020-08-25T21:15:47Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -79,9 +79,10 @@\n     private Future<List<Future<BlobDescriptor>>> applicationLayerPushResults = failedFuture();\n     private Future<Map<Future<Image>, Future<BlobDescriptor>>>\n         builtImagesAndContainerConfigurationPushResults = failedFuture();\n-    private Future<List<Future<BuildResult>>> buildResults = failedFuture();\n     private Future<Optional<ManifestAndDigest<ManifestTemplate>>> manifestCheckResult =\n         failedFuture();\n+    public Future<List<Future<BuildResult>>> imagePushResultshResults = failedFuture();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd9fa9b4022f411a61e9dd4f8a3bdc1a731c0d2"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2c76ffb3a0c021f74ff6944d96e294a98250522", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/b2c76ffb3a0c021f74ff6944d96e294a98250522", "committedDate": "2020-08-26T18:21:19Z", "message": "Adding Testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cf3510d3a6ac4204c03a70ad50e312b9111e0fa", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4cf3510d3a6ac4204c03a70ad50e312b9111e0fa", "committedDate": "2020-08-26T19:58:50Z", "message": "Add Testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODI1NzIy", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#pullrequestreview-475825722", "createdAt": "2020-08-26T20:15:22Z", "commit": {"oid": "4cf3510d3a6ac4204c03a70ad50e312b9111e0fa"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDoxNToyMlrOHHcIDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDoxNTozMFrOHHcISw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2Mjg5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testMakeListForManifestList_SinglePlatform() throws IOException, RegistryException {\n          \n          \n            \n              public void testMakeListForManifestList_singlePlatform() throws IOException, RegistryException {", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r477562893", "createdAt": "2020-08-26T20:15:22Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PushImageStepTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.builder.steps;\n+\n+import com.google.cloud.tools.jib.api.RegistryException;\n+import com.google.cloud.tools.jib.api.buildplan.Platform;\n+import com.google.cloud.tools.jib.builder.ProgressEventDispatcher;\n+import com.google.cloud.tools.jib.configuration.BuildContext;\n+import com.google.cloud.tools.jib.configuration.ContainerConfiguration;\n+import com.google.cloud.tools.jib.configuration.ImageConfiguration;\n+import com.google.cloud.tools.jib.event.EventHandlers;\n+import com.google.cloud.tools.jib.global.JibSystemProperties;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate.ManifestDescriptorTemplate;\n+import com.google.cloud.tools.jib.registry.RegistryClient;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.contrib.java.lang.system.RestoreSystemProperties;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+/** Tests for {@link PushImageStep}. */\n+@RunWith(MockitoJUnitRunner.class)\n+public class PushImageStepTest {\n+\n+  @Rule public final RestoreSystemProperties systemPropertyRestorer = new RestoreSystemProperties();\n+  @Mock private ProgressEventDispatcher.Factory progressDispatcherFactory;\n+  @Mock private ProgressEventDispatcher progressDispatcher;\n+  @Mock private BuildContext buildContext;\n+  @Mock private RegistryClient registryClient;\n+  @Mock private ImageConfiguration imageConfiguration;\n+  @Mock private EventHandlers eventHandlers;\n+  @Mock private ContainerConfiguration containerConfig;\n+  @Mock private JibSystemProperties jibSystemPropeties;\n+\n+  private V22ManifestListTemplate manifestList;\n+  private boolean manifestListAlreadyExists = false;\n+  private ManifestDescriptorTemplate manifest;\n+\n+  @Before\n+  public void setUp() {\n+    Mockito.when(buildContext.getAllTargetImageTags()).thenReturn(ImmutableSet.of(\"tag1\", \"tag2\"));\n+    Mockito.when(buildContext.getEventHandlers()).thenReturn(eventHandlers);\n+    Mockito.when(buildContext.getContainerConfiguration()).thenReturn(containerConfig);\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(\n+            ImmutableSet.of(new Platform(\"amd64\", \"linux\"), new Platform(\"arm64\", \"windows\")));\n+    Mockito.when(\n+            progressDispatcherFactory.create(\n+                \"launching manifest list pushers\", buildContext.getAllTargetImageTags().size()))\n+        .thenReturn(progressDispatcher);\n+    Mockito.when(progressDispatcher.newChildProducer()).thenReturn(progressDispatcherFactory);\n+\n+    manifestList = new V22ManifestListTemplate();\n+    manifest = new ManifestDescriptorTemplate();\n+    manifest.setMediaType(\"application/vnd.docker.distribution.manifest.v2+json\");\n+    manifest.setSize(100);\n+    manifest.setDigest(\"sha256:1f25787aab4669d252bdae09a72b9c345d2a7b8c64c8dbfba4c82af4834dbccc\");\n+    manifest.setPlatform(\"amd64\", \"linux\");\n+    manifestList.addManifest(manifest);\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList() throws IOException, RegistryException {\n+    ImmutableList<PushImageStep> pushImageStepList =\n+        PushImageStep.makeListForManifestList(\n+            buildContext,\n+            progressDispatcherFactory,\n+            registryClient,\n+            manifestList,\n+            manifestListAlreadyExists);\n+\n+    Assert.assertEquals(2, pushImageStepList.size());\n+    for (PushImageStep pushImageStep : pushImageStepList) {\n+      BuildResult buildResult = pushImageStep.call();\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageDigest().toString());\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageId().toString());\n+    }\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList_SinglePlatform() throws IOException, RegistryException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cf3510d3a6ac4204c03a70ad50e312b9111e0fa"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2Mjk1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testMakeListForManifestList_ManifestListAlreadyExists()\n          \n          \n            \n              public void testMakeListForManifestList_manifestListAlreadyExists()", "url": "https://github.com/GoogleContainerTools/jib/pull/2724#discussion_r477562955", "createdAt": "2020-08-26T20:15:30Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/PushImageStepTest.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.builder.steps;\n+\n+import com.google.cloud.tools.jib.api.RegistryException;\n+import com.google.cloud.tools.jib.api.buildplan.Platform;\n+import com.google.cloud.tools.jib.builder.ProgressEventDispatcher;\n+import com.google.cloud.tools.jib.configuration.BuildContext;\n+import com.google.cloud.tools.jib.configuration.ContainerConfiguration;\n+import com.google.cloud.tools.jib.configuration.ImageConfiguration;\n+import com.google.cloud.tools.jib.event.EventHandlers;\n+import com.google.cloud.tools.jib.global.JibSystemProperties;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate;\n+import com.google.cloud.tools.jib.image.json.V22ManifestListTemplate.ManifestDescriptorTemplate;\n+import com.google.cloud.tools.jib.registry.RegistryClient;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.contrib.java.lang.system.RestoreSystemProperties;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+/** Tests for {@link PushImageStep}. */\n+@RunWith(MockitoJUnitRunner.class)\n+public class PushImageStepTest {\n+\n+  @Rule public final RestoreSystemProperties systemPropertyRestorer = new RestoreSystemProperties();\n+  @Mock private ProgressEventDispatcher.Factory progressDispatcherFactory;\n+  @Mock private ProgressEventDispatcher progressDispatcher;\n+  @Mock private BuildContext buildContext;\n+  @Mock private RegistryClient registryClient;\n+  @Mock private ImageConfiguration imageConfiguration;\n+  @Mock private EventHandlers eventHandlers;\n+  @Mock private ContainerConfiguration containerConfig;\n+  @Mock private JibSystemProperties jibSystemPropeties;\n+\n+  private V22ManifestListTemplate manifestList;\n+  private boolean manifestListAlreadyExists = false;\n+  private ManifestDescriptorTemplate manifest;\n+\n+  @Before\n+  public void setUp() {\n+    Mockito.when(buildContext.getAllTargetImageTags()).thenReturn(ImmutableSet.of(\"tag1\", \"tag2\"));\n+    Mockito.when(buildContext.getEventHandlers()).thenReturn(eventHandlers);\n+    Mockito.when(buildContext.getContainerConfiguration()).thenReturn(containerConfig);\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(\n+            ImmutableSet.of(new Platform(\"amd64\", \"linux\"), new Platform(\"arm64\", \"windows\")));\n+    Mockito.when(\n+            progressDispatcherFactory.create(\n+                \"launching manifest list pushers\", buildContext.getAllTargetImageTags().size()))\n+        .thenReturn(progressDispatcher);\n+    Mockito.when(progressDispatcher.newChildProducer()).thenReturn(progressDispatcherFactory);\n+\n+    manifestList = new V22ManifestListTemplate();\n+    manifest = new ManifestDescriptorTemplate();\n+    manifest.setMediaType(\"application/vnd.docker.distribution.manifest.v2+json\");\n+    manifest.setSize(100);\n+    manifest.setDigest(\"sha256:1f25787aab4669d252bdae09a72b9c345d2a7b8c64c8dbfba4c82af4834dbccc\");\n+    manifest.setPlatform(\"amd64\", \"linux\");\n+    manifestList.addManifest(manifest);\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList() throws IOException, RegistryException {\n+    ImmutableList<PushImageStep> pushImageStepList =\n+        PushImageStep.makeListForManifestList(\n+            buildContext,\n+            progressDispatcherFactory,\n+            registryClient,\n+            manifestList,\n+            manifestListAlreadyExists);\n+\n+    Assert.assertEquals(2, pushImageStepList.size());\n+    for (PushImageStep pushImageStep : pushImageStepList) {\n+      BuildResult buildResult = pushImageStep.call();\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageDigest().toString());\n+      Assert.assertEquals(\n+          \"sha256:b16ab9b5979f332e30c60afdfb6771bd5c17ed4f9718e6df1fc3781113385a99\",\n+          buildResult.getImageId().toString());\n+    }\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList_SinglePlatform() throws IOException, RegistryException {\n+    Mockito.when(containerConfig.getPlatforms())\n+        .thenReturn(ImmutableSet.of(new Platform(\"amd64\", \"linux\")));\n+\n+    ImmutableList<PushImageStep> pushImageStepList =\n+        PushImageStep.makeListForManifestList(\n+            buildContext,\n+            progressDispatcherFactory,\n+            registryClient,\n+            manifestList,\n+            manifestListAlreadyExists);\n+    Assert.assertEquals(0, pushImageStepList.size());\n+  }\n+\n+  @Test\n+  public void testMakeListForManifestList_ManifestListAlreadyExists()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cf3510d3a6ac4204c03a70ad50e312b9111e0fa"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c566959e5f227c719d82706c8c552924430fb94", "author": {"user": {"login": "louismurerwa", "name": "Louis Murerwa"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/7c566959e5f227c719d82706c8c552924430fb94", "committedDate": "2020-08-26T20:25:02Z", "message": "Rename Tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4991, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}