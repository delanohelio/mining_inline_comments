{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MTMyNTg5", "number": 2840, "title": "Add credentials for `from` image in BuildFile", "bodyText": "This doesn have a test, needs to added as an integration test after the system is integrated together. In general it seems like the code around parsing an image and creating a containerizer/container-builder is a little tough and tends to be handled by integration tests.\nfollow-up issue: #2839", "createdAt": "2020-10-19T17:07:04Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2840", "merged": true, "mergeCommit": {"oid": "fc57a3c8bdf15b0f687d4f5bb3f5067b34739447"}, "closed": true, "closedAt": "2020-10-20T17:34:00Z", "author": {"login": "loosebazooka"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUHQLyAH2gAyNTA2MTMyNTg5OjMyZDFiYTE3ODczMWZkOGViM2I4MDg5ZTY4NzIxYzRiZDdhMmUwNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUOoacAH2gAyNTA2MTMyNTg5OjU5YWI3NmFiMTY0ZGYxYTcyODkwYzUzZWQyZDU2NjVhMzVjNGEyMjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32d1ba178731fd8eb3b8089e68721c4bd7a2e056", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/32d1ba178731fd8eb3b8089e68721c4bd7a2e056", "committedDate": "2020-10-19T17:02:44Z", "message": "Add credentials for from image in BuildFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6a9c75f62126b3f081a2bef0be0b54a127d670eb", "committedDate": "2020-10-19T17:40:56Z", "message": "oops, format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTY5MjAx", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#pullrequestreview-512169201", "createdAt": "2020-10-19T21:22:04Z", "commit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMToyMjowNFrOHkiJKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMToyMjowNFrOHkiJKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3MDE4Nw==", "bodyText": "Is it required for platform spec to be fully specified?", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#discussion_r508070187", "createdAt": "2020-10-19T21:22:04Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFiles.java", "diffHunk": "@@ -98,4 +103,42 @@ public static JibContainerBuilder toJibContainerBuilder(\n     }\n     return containerBuilder;\n   }\n+\n+  @VisibleForTesting\n+  // TODO: add testing, need to do via intergration tests as there's no good way to extract out that\n+  //   the base image was populated as the user intended currently.\n+  static JibContainerBuilder createJibContainerBuilder(\n+      BaseImageSpec from, JibCli buildOptions, ConsoleLogger logger)\n+      throws InvalidImageReferenceException, FileNotFoundException {\n+    String baseImageReference = from.getImage();\n+    if (baseImageReference.startsWith(DOCKER_DAEMON_IMAGE_PREFIX)) {\n+      return Jib.from(\n+          DockerDaemonImage.named(baseImageReference.replaceFirst(DOCKER_DAEMON_IMAGE_PREFIX, \"\")));\n+    }\n+    if (baseImageReference.startsWith(TAR_IMAGE_PREFIX)) {\n+      return Jib.from(\n+          TarImage.at(Paths.get(baseImageReference.replaceFirst(TAR_IMAGE_PREFIX, \"\"))));\n+    }\n+    ImageReference imageReference =\n+        ImageReference.parse(baseImageReference.replaceFirst(REGISTRY_IMAGE_PREFIX, \"\"));\n+    RegistryImage registryImage = RegistryImage.named(imageReference);\n+    DefaultCredentialRetrievers defaultCredentialRetrievers =\n+        DefaultCredentialRetrievers.init(\n+            CredentialRetrieverFactory.forImage(\n+                imageReference,\n+                logEvent -> logger.log(logEvent.getLevel(), logEvent.getMessage())));\n+    Credentials.getFromCredentialRetrievers(buildOptions, defaultCredentialRetrievers)\n+        .forEach(registryImage::addCredentialRetriever);\n+    JibContainerBuilder containerBuilder = Jib.from(registryImage);\n+    if (!from.getPlatforms().isEmpty()) {\n+      containerBuilder.setPlatforms(\n+          from.getPlatforms()\n+              .stream()\n+              .map(\n+                  platformSpec ->\n+                      new Platform(platformSpec.getArchitecture(), platformSpec.getOs()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTczMTMw", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#pullrequestreview-512173130", "createdAt": "2020-10-19T21:28:46Z", "commit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTc2OTk3", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#pullrequestreview-512176997", "createdAt": "2020-10-19T21:35:29Z", "commit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTozNToyOVrOHkiiRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTozNToyOVrOHkiiRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3NjYxNQ==", "bodyText": "maybe we can add a small e.g  at the end to make this more clear?", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#discussion_r508076615", "createdAt": "2020-10-19T21:35:29Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFiles.java", "diffHunk": "@@ -53,33 +69,22 @@ private static BuildFileSpec toBuildFileSpec(\n    *\n    * @param projectRoot the root context directory of this build\n    * @param buildFilePath a file containing the build definition\n-   * @param templateParameters a map of templating variables to apply on the file before parsing\n+   * @param buildOptions the build configuration from the command line", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTgxNTk5", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#pullrequestreview-512181599", "createdAt": "2020-10-19T21:43:49Z", "commit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTg2NTUw", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#pullrequestreview-511986550", "createdAt": "2020-10-19T17:19:57Z", "commit": {"oid": "32d1ba178731fd8eb3b8089e68721c4bd7a2e056"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzoxOTo1OFrOHkZFTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0NTowNFrOHkiy6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyMTc0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Rule public MockitoRule rule = MockitoJUnit.rule();\n          \n          \n            \n            \n          \n          \n            \n              @Mock ConsoleLogger consoleLogger;\n          \n          \n            \n              @Mock JibCli jibCli;\n          \n          \n            \n              @Rule public final MockitoRule rule = MockitoJUnit.rule();\n          \n          \n            \n            \n          \n          \n            \n              @Mock private ConsoleLogger consoleLogger;\n          \n          \n            \n              @Mock private JibCli jibCli;", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#discussion_r507921743", "createdAt": "2020-10-19T17:19:58Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/BuildFilesTest.java", "diffHunk": "@@ -38,13 +40,27 @@\n import org.hamcrest.CoreMatchers;\n import org.hamcrest.MatcherAssert;\n import org.junit.Assert;\n+import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.TemporaryFolder;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoRule;\n \n public class BuildFilesTest {\n \n   @Rule public final TemporaryFolder tmp = new TemporaryFolder();\n+  @Rule public MockitoRule rule = MockitoJUnit.rule();\n+\n+  @Mock ConsoleLogger consoleLogger;\n+  @Mock JibCli jibCli;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32d1ba178731fd8eb3b8089e68721c4bd7a2e056"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MDg3Mg==", "bodyText": "The iteration order is actually important. Internally we used LinkedHashSet everywhere to preserve the order while conveniently removing duplicates (also signifying that duplicates can't exist). However, I see that it can easily make the Jib API user to mess up with the order. Maybe accepting a Set wasn't a good idea.\nAnyways, the question is, would Collectors.toSet() preserve the insertion order?", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#discussion_r508080872", "createdAt": "2020-10-19T21:45:04Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFiles.java", "diffHunk": "@@ -98,4 +103,42 @@ public static JibContainerBuilder toJibContainerBuilder(\n     }\n     return containerBuilder;\n   }\n+\n+  @VisibleForTesting\n+  // TODO: add testing, need to do via intergration tests as there's no good way to extract out that\n+  //   the base image was populated as the user intended currently.\n+  static JibContainerBuilder createJibContainerBuilder(\n+      BaseImageSpec from, JibCli buildOptions, ConsoleLogger logger)\n+      throws InvalidImageReferenceException, FileNotFoundException {\n+    String baseImageReference = from.getImage();\n+    if (baseImageReference.startsWith(DOCKER_DAEMON_IMAGE_PREFIX)) {\n+      return Jib.from(\n+          DockerDaemonImage.named(baseImageReference.replaceFirst(DOCKER_DAEMON_IMAGE_PREFIX, \"\")));\n+    }\n+    if (baseImageReference.startsWith(TAR_IMAGE_PREFIX)) {\n+      return Jib.from(\n+          TarImage.at(Paths.get(baseImageReference.replaceFirst(TAR_IMAGE_PREFIX, \"\"))));\n+    }\n+    ImageReference imageReference =\n+        ImageReference.parse(baseImageReference.replaceFirst(REGISTRY_IMAGE_PREFIX, \"\"));\n+    RegistryImage registryImage = RegistryImage.named(imageReference);\n+    DefaultCredentialRetrievers defaultCredentialRetrievers =\n+        DefaultCredentialRetrievers.init(\n+            CredentialRetrieverFactory.forImage(\n+                imageReference,\n+                logEvent -> logger.log(logEvent.getLevel(), logEvent.getMessage())));\n+    Credentials.getFromCredentialRetrievers(buildOptions, defaultCredentialRetrievers)\n+        .forEach(registryImage::addCredentialRetriever);\n+    JibContainerBuilder containerBuilder = Jib.from(registryImage);\n+    if (!from.getPlatforms().isEmpty()) {\n+      containerBuilder.setPlatforms(\n+          from.getPlatforms()\n+              .stream()\n+              .map(\n+                  platformSpec ->\n+                      new Platform(platformSpec.getArchitecture(), platformSpec.getOs()))\n+              .collect(Collectors.toSet()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTg0MTU1", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#pullrequestreview-512184155", "createdAt": "2020-10-19T21:48:35Z", "commit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0ODozNVrOHki5QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0ODozNVrOHki5QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MjQ5Nw==", "bodyText": "I think this can be private without @VisibleForTesting?", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#discussion_r508082497", "createdAt": "2020-10-19T21:48:35Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFiles.java", "diffHunk": "@@ -98,4 +103,42 @@ public static JibContainerBuilder toJibContainerBuilder(\n     }\n     return containerBuilder;\n   }\n+\n+  @VisibleForTesting\n+  // TODO: add testing, need to do via intergration tests as there's no good way to extract out that\n+  //   the base image was populated as the user intended currently.\n+  static JibContainerBuilder createJibContainerBuilder(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjA1Nzc5", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#pullrequestreview-512205779", "createdAt": "2020-10-19T22:31:04Z", "commit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMjozMTowNVrOHkj-iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMjozMTowNVrOHkj-iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEwMDIzNQ==", "bodyText": "sorry, does this PR need to submitted before we start writing the integration tests?", "url": "https://github.com/GoogleContainerTools/jib/pull/2840#discussion_r508100235", "createdAt": "2020-10-19T22:31:05Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/BuildFiles.java", "diffHunk": "@@ -98,4 +103,42 @@ public static JibContainerBuilder toJibContainerBuilder(\n     }\n     return containerBuilder;\n   }\n+\n+  @VisibleForTesting\n+  // TODO: add testing, need to do via intergration tests as there's no good way to extract out that\n+  //   the base image was populated as the user intended currently.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a9c75f62126b3f081a2bef0be0b54a127d670eb"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d7325635c8e36f61d5c6fcd7581a5055e6dad56", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/0d7325635c8e36f61d5c6fcd7581a5055e6dad56", "committedDate": "2020-10-19T23:16:37Z", "message": "Update jib-cli/src/test/java/com/google/cloud/tools/jib/cli/buildfile/BuildFilesTest.java\n\nCo-authored-by: Chanseok Oh <chanseok@google.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59ab76ab164df1a72890c53ed2d5665a35c4a225", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/59ab76ab164df1a72890c53ed2d5665a35c4a225", "committedDate": "2020-10-20T01:38:32Z", "message": "cleanup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4835, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}