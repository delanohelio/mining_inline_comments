{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2OTExNDgy", "number": 2761, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxMjowNVrOEjsFgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxOTo0MjozOVrOEmPOUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODU3OTIxOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxMjowNVrOHSLsqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxMjowNVrOHSLsqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODA3Mg==", "bodyText": "For readability: I think maybe tags is confusing with the class member tags (this.tags). Perhaps use something that differentiates it? Personally I don't think this.tags should be used very often outside constructors.", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488828072", "createdAt": "2020-09-15T17:12:05Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODU4MTg2OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxMjo1NFrOHSLuVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1MjowN1rOHTFgug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODUwMQ==", "bodyText": "should we handle whitespace?", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488828501", "createdAt": "2020-09-15T17:12:54Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =\n+        property != null\n+            ? ImmutableSet.copyOf(\n+                ConfigurationPropertyValidator.parseListProperty(\n+                    System.getProperty(PropertyNames.TO_TAGS)))\n+            : this.tags;\n+    if (tags.stream().anyMatch(Strings::isNullOrEmpty)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NTI5MA==", "bodyText": "Oh that didn't occur to me. Thanks!", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489775290", "createdAt": "2020-09-16T21:52:07Z", "author": {"login": "mpeddada1"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =\n+        property != null\n+            ? ImmutableSet.copyOf(\n+                ConfigurationPropertyValidator.parseListProperty(\n+                    System.getProperty(PropertyNames.TO_TAGS)))\n+            : this.tags;\n+    if (tags.stream().anyMatch(Strings::isNullOrEmpty)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODUwMQ=="}, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODU4MzUzOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxMzoyNVrOHSLvWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1MjoxOFrOHTFhDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODc2Mg==", "bodyText": "if we fail on empty, we should probably add a test for empty as well", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488828762", "createdAt": "2020-09-15T17:13:25Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.\n+    HashSet<String> tags = new HashSet<String>();\n+    tags.add(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MzE5MA==", "bodyText": "Also the case of getting tags from the system property.", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489553190", "createdAt": "2020-09-16T16:03:20Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.\n+    HashSet<String> tags = new HashSet<String>();\n+    tags.add(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODc2Mg=="}, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NTM3NA==", "bodyText": "good catch!", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489775374", "createdAt": "2020-09-16T21:52:18Z", "author": {"login": "mpeddada1"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.\n+    HashSet<String> tags = new HashSet<String>();\n+    tags.add(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyODc2Mg=="}, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1ODU4NTY5OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxNDowMFrOHSLwpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNzoxNDowMFrOHSLwpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgyOTA5NA==", "bodyText": "Maybe just put this in a new test?", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r488829094", "createdAt": "2020-09-15T17:14:00Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzE2MjU2OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjowNjo1NFrOHS4F6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1Mzo0OVrOHTFjZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NTQzMw==", "bodyText": "Nit: if the message doesn't provide additional helpful information or details, just use Assert.fail().\nAnd I think it's meaningful to move testJibExtension.to() out of the try-catch block.", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489555433", "createdAt": "2020-09-16T16:06:54Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.\n+    HashSet<String> tags = new HashSet<String>();\n+    tags.add(null);\n+    tags.add(\"tags1\");\n+    try {\n+      testJibExtension.to(\n+          to -> {\n+            to.setTags(tags);\n+          });\n+      testJibExtension.getTo().getTags();\n+      Assert.fail(\"Expect this to fail\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NTk3Mw==", "bodyText": "Ah yes, having all the extra lines outside the try-catch makes sense. Thanks!", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489775973", "createdAt": "2020-09-16T21:53:49Z", "author": {"login": "mpeddada1"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -85,6 +86,21 @@ public void testTo() {\n     Assert.assertEquals(\"some cred helper\", testJibExtension.getTo().getCredHelper());\n     Assert.assertEquals(\"some username\", testJibExtension.getTo().getAuth().getUsername());\n     Assert.assertEquals(\"some password\", testJibExtension.getTo().getAuth().getPassword());\n+\n+    // Testing scenario where jib.to.tags is set to a collection containing a null value.\n+    HashSet<String> tags = new HashSet<String>();\n+    tags.add(null);\n+    tags.add(\"tags1\");\n+    try {\n+      testJibExtension.to(\n+          to -> {\n+            to.setTags(tags);\n+          });\n+      testJibExtension.getTo().getTags();\n+      Assert.fail(\"Expect this to fail\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NTQzMw=="}, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzE2NzIwOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjowODoxMFrOHS4I7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1NDozNVrOHTFkxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NjIwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                System.getProperty(PropertyNames.TO_TAGS)))\n          \n          \n            \n                                property))", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489556206", "createdAt": "2020-09-16T16:08:10Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =\n+        property != null\n+            ? ImmutableSet.copyOf(\n+                ConfigurationPropertyValidator.parseListProperty(\n+                    System.getProperty(PropertyNames.TO_TAGS)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NjMyNA==", "bodyText": "Done:)", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489776324", "createdAt": "2020-09-16T21:54:35Z", "author": {"login": "mpeddada1"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,10 +61,16 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tags =\n+        property != null\n+            ? ImmutableSet.copyOf(\n+                ConfigurationPropertyValidator.parseListProperty(\n+                    System.getProperty(PropertyNames.TO_TAGS)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NjIwNg=="}, "originalCommit": {"oid": "81bbaa9bbb87aad94dfab8e5c58ff034441ade05"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NDUxNDg4OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1Nzo1OVrOHTFqYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMTo1Nzo1OVrOHTFqYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3Nzc2Mw==", "bodyText": "How about this?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                HashSet<String> tagSet = new HashSet<String>();\n          \n          \n            \n                for (String tag : tags) {\n          \n          \n            \n                  tagSet.add(tag);\n          \n          \n            \n                }\n          \n          \n            \n                HashSet<String> set = new HashSet<>(Arrays.asList(tags));", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489777763", "createdAt": "2020-09-16T21:57:59Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibExtensionTest.java", "diffHunk": "@@ -400,4 +437,16 @@ public void testProperties() {\n         fakeProject.getProjectDir().toPath().resolve(Paths.get(\"tar/path\")),\n         testJibExtension.getOutputPaths().getTarPath());\n   }\n+\n+  public TargetImageParameters generateTargetImageParametersWithTags(String... tags) {\n+    HashSet<String> tagSet = new HashSet<String>();\n+    for (String tag : tags) {\n+      tagSet.add(tag);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f385f8fafdfcd5c1230cfe2edfb7bbfd64c1f7"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NDUyNTY1OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjowMjoxM1rOHTFw4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjowMjoxM1rOHTFw4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3OTQyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (tagsValue.stream().anyMatch((String str) -> str.contains(\" \"))) {\n          \n          \n            \n                if (tagsValue.stream().anyMatch(str -> str.contains(\" \"))) {", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r489779427", "createdAt": "2020-09-16T22:02:13Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,12 +61,19 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue =\n+        property != null\n+            ? ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property))\n+            : tags;\n+    String source = property != null ? PropertyNames.TO_TAGS : \"jib.to.tags\";\n+    if (tagsValue.stream().anyMatch(Strings::isNullOrEmpty)) {\n+      throw new IllegalArgumentException(source + \" has empty tag\");\n     }\n-    return tags;\n+    if (tagsValue.stream().anyMatch((String str) -> str.contains(\" \"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f385f8fafdfcd5c1230cfe2edfb7bbfd64c1f7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzI4MzA2OnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOToyOToxNlrOHUZaDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTozMDo1OVrOHUZdGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTgzNw==", "bodyText": "What I meant was checking for something like \"   \" but maybe jib-core already validates these values before going?\nPerhaps your original condition was enough, lemme see if jib core validates this.", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r491149837", "createdAt": "2020-09-18T19:29:16Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,12 +61,19 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue =\n+        property != null\n+            ? ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property))\n+            : tags;\n+    String source = property != null ? PropertyNames.TO_TAGS : \"jib.to.tags\";\n+    if (tagsValue.stream().anyMatch(Strings::isNullOrEmpty)) {\n+      throw new IllegalArgumentException(source + \" has empty tag\");\n     }\n-    return tags;\n+    if (tagsValue.stream().anyMatch(str -> str.contains(\" \"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "285d714332321abf56271b93d7a099c7caab12fb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1MDYxOA==", "bodyText": "Sorry, yeah so looks like we handle this properly already at the processing level: https://github.com/GoogleContainerTools/jib/blob/master/jib-core/src/main/java/com/google/cloud/tools/jib/api/ImageReference.java#L68\nso isNullOrEmpty should be sufficient?", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r491150618", "createdAt": "2020-09-18T19:30:59Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -60,12 +61,19 @@ public void setImage(String image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue =\n+        property != null\n+            ? ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property))\n+            : tags;\n+    String source = property != null ? PropertyNames.TO_TAGS : \"jib.to.tags\";\n+    if (tagsValue.stream().anyMatch(Strings::isNullOrEmpty)) {\n+      throw new IllegalArgumentException(source + \" has empty tag\");\n     }\n-    return tags;\n+    if (tagsValue.stream().anyMatch(str -> str.contains(\" \"))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE0OTgzNw=="}, "originalCommit": {"oid": "285d714332321abf56271b93d7a099c7caab12fb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTMwNzcwOnYy", "diffSide": "RIGHT", "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxOTo0MjozOVrOHWJqqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDo0MTo1M1rOHWx_rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4OTA5OQ==", "bodyText": "Do we have to do that logic where we know its from system property or from configuration in teh build file?", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r492989099", "createdAt": "2020-09-22T19:42:39Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -69,12 +69,21 @@ public void setImage(Provider<String> image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue;\n+    if (property != null) {\n+      tagsValue = ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property));\n+    } else {\n+      try {\n+        tagsValue = tags.get();\n+      } catch (NullPointerException ex) {\n+        throw new IllegalArgumentException(\"jib.to.tags contains null tag\");\n+      }\n     }\n-    return tags.get();\n+    if (tagsValue.stream().anyMatch(str -> str.isEmpty())) {\n+      throw new IllegalArgumentException(\"jib.to.tags contains empty tag\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7a793fd7034d1a5651c2520350efbc8e2a9503a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY0OTgzOQ==", "bodyText": "In terms of error messaging, I didn't think having that logic added much value since regardless of whether it was from system property or configuration, (in String source = property != null ? PropertyNames.TO_TAGS : \"jib.to.tags\";) the message would still remain the same?", "url": "https://github.com/GoogleContainerTools/jib/pull/2761#discussion_r493649839", "createdAt": "2020-09-23T14:41:53Z", "author": {"login": "mpeddada1"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -69,12 +69,21 @@ public void setImage(Provider<String> image) {\n   @Input\n   @Optional\n   public Set<String> getTags() {\n-    if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n-      return ImmutableSet.copyOf(\n-          ConfigurationPropertyValidator.parseListProperty(\n-              System.getProperty(PropertyNames.TO_TAGS)));\n+    String property = System.getProperty(PropertyNames.TO_TAGS);\n+    Set<String> tagsValue;\n+    if (property != null) {\n+      tagsValue = ImmutableSet.copyOf(ConfigurationPropertyValidator.parseListProperty(property));\n+    } else {\n+      try {\n+        tagsValue = tags.get();\n+      } catch (NullPointerException ex) {\n+        throw new IllegalArgumentException(\"jib.to.tags contains null tag\");\n+      }\n     }\n-    return tags.get();\n+    if (tagsValue.stream().anyMatch(str -> str.isEmpty())) {\n+      throw new IllegalArgumentException(\"jib.to.tags contains empty tag\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4OTA5OQ=="}, "originalCommit": {"oid": "f7a793fd7034d1a5651c2520350efbc8e2a9503a"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 176, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}