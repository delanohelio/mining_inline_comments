{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMzYzMDYz", "number": 2789, "title": "Optimize authentication for base image", "bodyText": "Fixes #2784. Fixes #2134.\nAfter we try to pull a base image manifest without sending credentials, we either attempt bearer auth or basic auth based on the WWW-Authenticate HTTP header value in a 401 unauthorized response. I have been thinking for a very long time even before filing #2134 this is the most ideal and optimized flow. I believe every sane registry implementation that throws 401 on a manifest request will send WWW-Authenticate.\nHowever, since auth is the most frictional part, I didn't want to make a drastic change. So when the server doesn't return WWW-Authenticate (I don't expect this to happen), we do some fallback operations. First, we just blindly send credentials via basic auth, and if that fails again with 401, we attempt bearer auth for the last moment. This fallback is basically identical to the current auth flow.", "createdAt": "2020-09-25T20:48:35Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2789", "merged": true, "mergeCommit": {"oid": "093c8e359567e4417ce0415436a5477ed75b03b8"}, "closed": true, "closedAt": "2020-09-30T15:23:48Z", "author": {"login": "chanseokoh"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMbwCbAH2gAyNDkzMzYzMDYzOjA4ZGM5OTczYjM3NGM2MTA1YWJlN2JiMzkwYzkxZTc4ZmE2YWZkZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNvxRAAFqTQ5ODkzNDM3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "08dc9973b374c6105abe7bb390c91e78fa6afdec", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/08dc9973b374c6105abe7bb390c91e78fa6afdec", "committedDate": "2020-09-25T20:24:14Z", "message": "Optimize authentication for base image"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cceccb129c6822dd375cc6d6cd5c7f6a30f5f750", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/cceccb129c6822dd375cc6d6cd5c7f6a30f5f750", "committedDate": "2020-09-25T20:52:33Z", "message": "Fix Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93c5daf32a1e4e6c8abd2334d955226a9b5a0b8f", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/93c5daf32a1e4e6c8abd2334d955226a9b5a0b8f", "committedDate": "2020-09-25T21:06:06Z", "message": "Add CHANGELOG entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDI0ODU5", "url": "https://github.com/GoogleContainerTools/jib/pull/2789#pullrequestreview-498024859", "createdAt": "2020-09-29T02:40:39Z", "commit": {"oid": "93c5daf32a1e4e6c8abd2334d955226a9b5a0b8f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMjo0MDozOVrOHZWexA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMjo0NDoxMVrOHZWiPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0NDc3Mg==", "bodyText": "should we actually do LogEvent.warn here with some guidance on reporting this, so that we may identify misbehaving servers by user reports?", "url": "https://github.com/GoogleContainerTools/jib/pull/2789#discussion_r496344772", "createdAt": "2020-09-29T02:40:39Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -140,40 +143,43 @@ public ImagesAndRegistryClient call()\n             LogEvent.lifecycle(\n                 \"The base image requires auth. Trying again for \" + imageReference + \"...\"));\n \n-        Credential registryCredential =\n+        Credential credential =\n             RegistryCredentialRetriever.getBaseImageCredential(buildContext).orElse(null);\n-\n         RegistryClient registryClient =\n             buildContext\n                 .newBaseImageRegistryClientFactory()\n-                .setCredential(registryCredential)\n+                .setCredential(credential)\n                 .newRegistryClient();\n \n-        try {\n-          // TODO: refactor the code (https://github.com/GoogleContainerTools/jib/pull/2202)\n-          if (registryCredential == null || registryCredential.isOAuth2RefreshToken()) {\n-            throw ex;\n-          }\n-\n-          eventHandlers.dispatch(LogEvent.debug(\"Trying basic auth for \" + imageReference + \"...\"));\n-          registryClient.configureBasicAuth();\n+        String wwwAuthenticate = ex.getHttpResponseException().getHeaders().getAuthenticate();\n+        if (wwwAuthenticate != null) {\n+          eventHandlers.dispatch(\n+              LogEvent.debug(\"WWW-Authenticate for \" + imageReference + \": \" + wwwAuthenticate));\n+          registryClient.authPullByWwwAuthenticate(wwwAuthenticate);\n           return new ImagesAndRegistryClient(\n               pullBaseImages(registryClient, progressEventDispatcher), registryClient);\n \n-        } catch (RegistryUnauthorizedException registryUnauthorizedException) {\n-          // The registry requires us to authenticate using the Docker Token Authentication.\n-          // See https://docs.docker.com/registry/spec/auth/token\n-          eventHandlers.dispatch(\n-              LogEvent.debug(\"Trying bearer auth for \" + imageReference + \"...\"));\n-          if (registryClient.doPullBearerAuth()) {\n-            return new ImagesAndRegistryClient(\n-                pullBaseImages(registryClient, progressEventDispatcher), registryClient);\n+        } else {\n+          // Not getting WWW-Authenticate is unexpected in practice, and we may just blame the\n+          // server and fail. However, to keep some old behavior, try a few things as a last resort.\n+          // TODO: consider removing this fallback branch.\n+          if (credential != null && !credential.isOAuth2RefreshToken()) {\n+            eventHandlers.dispatch(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93c5daf32a1e4e6c8abd2334d955226a9b5a0b8f"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0NTY2MA==", "bodyText": "It seems a little strange that we have so much auth code in PullBaseImage step and not somewhere else like RegistryAuthenticator?", "url": "https://github.com/GoogleContainerTools/jib/pull/2789#discussion_r496345660", "createdAt": "2020-09-29T02:44:11Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/PullBaseImageStep.java", "diffHunk": "@@ -140,40 +143,43 @@ public ImagesAndRegistryClient call()\n             LogEvent.lifecycle(\n                 \"The base image requires auth. Trying again for \" + imageReference + \"...\"));\n \n-        Credential registryCredential =\n+        Credential credential =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93c5daf32a1e4e6c8abd2334d955226a9b5a0b8f"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDMwOTE4", "url": "https://github.com/GoogleContainerTools/jib/pull/2789#pullrequestreview-498030918", "createdAt": "2020-09-29T03:00:50Z", "commit": {"oid": "93c5daf32a1e4e6c8abd2334d955226a9b5a0b8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzowMDo1MVrOHZWzFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMzowMDo1MVrOHZWzFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjM0OTk3NA==", "bodyText": "I find this flow a little confusing. Should we just have multiple types of credentials instead of checking the state of the Credential everywhere?", "url": "https://github.com/GoogleContainerTools/jib/pull/2789#discussion_r496349974", "createdAt": "2020-09-29T03:00:51Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "diffHunk": "@@ -366,6 +377,27 @@ private Authorization refreshBearerAuth(@Nullable String wwwAuthenticate)\n     return Verify.verifyNotNull(initialBearerAuthenticator.get()).authenticatePush(credential);\n   }\n \n+  /**\n+   * Configure basic authentication or attempts bearer authentication for pulling based on the\n+   * specified authentication method in a server response.\n+   *\n+   * @param wwwAuthenticate {@code WWW-Authenticate} HTTP header value from a server response\n+   *     specifying a required authentication method\n+   * @throws RegistryException if communicating with the endpoint fails\n+   * @throws RegistryAuthenticationFailedException if authentication fails\n+   * @throws RegistryCredentialsNotSentException if authentication failed and credentials were not\n+   */\n+  public void authPullByWwwAuthenticate(String wwwAuthenticate) throws RegistryException {\n+    Optional<RegistryAuthenticator> authenticator =\n+        RegistryAuthenticator.fromAuthenticationMethod(\n+            wwwAuthenticate, registryEndpointRequestProperties, getUserAgent(), httpClient);\n+    if (authenticator.isPresent()) {\n+      doBearerAuth(true, authenticator.get());\n+    } else if (credential != null && !credential.isOAuth2RefreshToken()) {\n+      configureBasicAuth();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93c5daf32a1e4e6c8abd2334d955226a9b5a0b8f"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e15c80c73bfd126db3fbc4e4eaa491a9dae3b716", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e15c80c73bfd126db3fbc4e4eaa491a9dae3b716", "committedDate": "2020-09-29T16:38:25Z", "message": "Merge branch 'master' into i2784-azure-www-authenticate-bearer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTM0Mzc3", "url": "https://github.com/GoogleContainerTools/jib/pull/2789#pullrequestreview-498934377", "createdAt": "2020-09-29T22:17:36Z", "commit": {"oid": "e15c80c73bfd126db3fbc4e4eaa491a9dae3b716"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4784, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}