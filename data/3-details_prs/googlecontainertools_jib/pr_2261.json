{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Nzk3Mjgw", "number": 2261, "title": "Fall back to initial authenticator if bad response", "bodyText": "Fixes #2258.\nIf the server returns unexpected WWW-Authenticate responses  when attempting to refresh a bearer token, fall back to use the initial authenticator that succeeded to get the first token. RegistryAuthenticator is immutable and safe to reuse.\nAnd fixing this will naturally make Jib to surface 401 eventually after 4 refresh attempts fail when the initial token did not have enough access scope.", "createdAt": "2020-01-31T22:27:33Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2261", "merged": true, "mergeCommit": {"oid": "2e7b670a44ebdca60b400f8b540eb5c567dd3e11"}, "closed": true, "closedAt": "2020-02-06T22:24:28Z", "author": {"login": "chanseokoh"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_20BNgH2gAyMzY5Nzk3MjgwOmUzYjIyNDc4MjAxNTM5N2RmOWExNTc4MmJjOTQ4OTE2NTE2OGM1MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBYGWkAFqTM1MzgyMDgwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3b224782015397df9a15782bc9489165168c519", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e3b224782015397df9a15782bc9489165168c519", "committedDate": "2020-01-31T22:23:51Z", "message": "Fall back to initial authenticator if bad response"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjk4MDEy", "url": "https://github.com/GoogleContainerTools/jib/pull/2261#pullrequestreview-353298012", "createdAt": "2020-02-04T21:01:19Z", "commit": {"oid": "e3b224782015397df9a15782bc9489165168c519"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTowMToyMFrOFljUKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTowMToyMFrOFljUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyMDIzMg==", "bodyText": "Would it be worth it to pull this out into a function to reduce duplication between here and L374-377?", "url": "https://github.com/GoogleContainerTools/jib/pull/2261#discussion_r374920232", "createdAt": "2020-02-04T21:01:20Z", "author": {"login": "TadCordle"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "diffHunk": "@@ -375,10 +378,13 @@ private Authorization refreshBearerAuth(@Nullable String wwwAuthenticate)\n       }\n     }\n \n-    throw new RegistryAuthenticationFailedException(\n-        registry,\n-        repository,\n-        \"server did not return 'WWW-Authenticate: Bearer' header: \" + wwwAuthenticate);\n+    eventHandlers.dispatch(\n+        LogEvent.debug(\n+            \"server did not return 'WWW-Authenticate: Bearer' header. Actual: \" + wwwAuthenticate));\n+    if (readOnlyBearerAuth) {\n+      return Verify.verifyNotNull(initialBearerAuthenticator.get()).authenticatePull(credential);\n+    }\n+    return Verify.verifyNotNull(initialBearerAuthenticator.get()).authenticatePush(credential);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b224782015397df9a15782bc9489165168c519"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjg2Mjgz", "url": "https://github.com/GoogleContainerTools/jib/pull/2261#pullrequestreview-353286283", "createdAt": "2020-02-04T20:42:04Z", "commit": {"oid": "e3b224782015397df9a15782bc9489165168c519"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDo0MjowNFrOFliwmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTowOTozM1rOFljjHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkxMTEyOA==", "bodyText": "Should we worry that we're retaining this authenticator before we've successfully used it?  Or were you setting it here in case it was transient and might work on a subsequent try if attempted?", "url": "https://github.com/GoogleContainerTools/jib/pull/2261#discussion_r374911128", "createdAt": "2020-02-04T20:42:04Z", "author": {"login": "briandealwis"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryClient.java", "diffHunk": "@@ -344,6 +346,7 @@ private boolean doBearerAuth(boolean readOnlyBearerAuth) throws IOException, Reg\n       return false; // server returned \"WWW-Authenticate: Basic ...\"\n     }\n \n+    initialBearerAuthenticator.set(authenticator.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b224782015397df9a15782bc9489165168c519"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkyNDA2Mw==", "bodyText": "Should this be 5? (1 successful, and then 4 attempts)?", "url": "https://github.com/GoogleContainerTools/jib/pull/2261#discussion_r374924063", "createdAt": "2020-02-04T21:09:33Z", "author": {"login": "briandealwis"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/registry/RegistryClientTest.java", "diffHunk": "@@ -168,6 +169,71 @@ public void testAutomaticTokenRefresh()\n         .dispatch(logContains(\"refreshing bearer auth token\"));\n   }\n \n+  @Test\n+  public void testAutomaticTokenRefresh_badWwwAuthenticateResponse()\n+      throws IOException, InterruptedException, GeneralSecurityException, URISyntaxException,\n+          RegistryException {\n+    String tokenResponse = \"HTTP/1.1 200 OK\\nContent-Length: 26\\n\\n{\\\"token\\\":\\\"awesome-token!\\\"}\";\n+    authServer = new TestWebServer(false, Arrays.asList(tokenResponse), 3);\n+\n+    List<String> responses =\n+        Arrays.asList(\n+            \"HTTP/1.1 401 Unauthorized\\nContent-Length: 0\\nWWW-Authenticate: Bearer realm=\\\"\"\n+                + authServer.getEndpoint()\n+                + \"\\\"\\n\\n\",\n+            \"HTTP/1.1 401 Unauthorized\\nContent-Length: 0\\nWWW-Authenticate: Basic realm=foo\\n\\n\",\n+            \"HTTP/1.1 401 Unauthorized\\nContent-Length: 0\\n\\n\",\n+            \"HTTP/1.1 200 OK\\nContent-Length: 5678\\n\\n\");\n+    registry = new TestWebServer(false, responses, responses.size(), true);\n+\n+    RegistryClient registryClient = createRegistryClient(null);\n+    Assert.assertTrue(registryClient.doPushBearerAuth());\n+\n+    Optional<BlobDescriptor> digestAndSize = registryClient.checkBlob(digest);\n+    Assert.assertEquals(5678, digestAndSize.get().getSize());\n+\n+    // Verify authServer returned bearer token three times (i.e., refreshed twice)\n+    Assert.assertEquals(3, authServer.getTotalResponsesServed());\n+    Assert.assertEquals(4, registry.getTotalResponsesServed());\n+\n+    Mockito.verify(eventHandlers)\n+        .dispatch(\n+            logContains(\"server did not return 'WWW-Authenticate: Bearer' header. Actual: Basic\"));\n+    Mockito.verify(eventHandlers)\n+        .dispatch(\n+            logContains(\"server did not return 'WWW-Authenticate: Bearer' header. Actual: null\"));\n+  }\n+\n+  @Test\n+  public void testAutomaticTokenRefresh_refreshLimit()\n+      throws IOException, InterruptedException, GeneralSecurityException, URISyntaxException,\n+          RegistryException {\n+    String tokenResponse = \"HTTP/1.1 200 OK\\nContent-Length: 26\\n\\n{\\\"token\\\":\\\"awesome-token!\\\"}\";\n+    authServer = new TestWebServer(false, Arrays.asList(tokenResponse), 5);\n+\n+    String bearerAuth =\n+        \"HTTP/1.1 401 Unauthorized\\nContent-Length: 0\\nWWW-Authenticate: Bearer realm=\\\"\"\n+            + authServer.getEndpoint()\n+            + \"\\\"\\n\\n\";\n+    String unauthorized = \"HTTP/1.1 401 Unauthorized\\nContent-Length: 0\\n\\n\";\n+    List<String> responses =\n+        Arrays.asList(\n+            bearerAuth, unauthorized, unauthorized, unauthorized, unauthorized, unauthorized);\n+    registry = new TestWebServer(false, responses, responses.size(), true);\n+\n+    RegistryClient registryClient = createRegistryClient(null);\n+    Assert.assertTrue(registryClient.doPushBearerAuth());\n+\n+    try {\n+      registryClient.checkBlob(digest);\n+      Assert.fail(\"Should have given up refreshing after 4 attempts\");\n+    } catch (RegistryUnauthorizedException ex) {\n+      Assert.assertEquals(401, ex.getHttpResponseException().getStatusCode());\n+      Assert.assertEquals(5, authServer.getTotalResponsesServed());\n+      Assert.assertEquals(6, registry.getTotalResponsesServed());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b224782015397df9a15782bc9489165168c519"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784c58f682339f37ecd052ce7f5c8f10db5b79b5", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/784c58f682339f37ecd052ce7f5c8f10db5b79b5", "committedDate": "2020-02-04T22:54:04Z", "message": "Add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af85980fe2ebba157488e6d27b41b305e3a55b55", "author": {"user": {"login": "chanseokoh", "name": "Chanseok Oh"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/af85980fe2ebba157488e6d27b41b305e3a55b55", "committedDate": "2020-02-04T23:10:03Z", "message": "CHANGELOG"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzODIwODA2", "url": "https://github.com/GoogleContainerTools/jib/pull/2261#pullrequestreview-353820806", "createdAt": "2020-02-05T15:44:40Z", "commit": {"oid": "af85980fe2ebba157488e6d27b41b305e3a55b55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 327, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}