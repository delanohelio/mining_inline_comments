{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjUzODUw", "number": 2739, "title": "Use Gradle Property and Provider to enable lazy evaluation for jib.to.image and jib.to.tags", "bodyText": "Fixes #2727\nUsage:\n\nIf user wants to use lazy evaluation for jib.to.image and jib.to.tags with String value they can do the following:\njib.to.image = project.provider{value} or jib.to.tags = project.provider{[value, \"tag2\"]}", "createdAt": "2020-09-03T00:05:10Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2739", "merged": true, "mergeCommit": {"oid": "faff19bd59737e10db4425e47b7e6c9904e83833"}, "closed": true, "closedAt": "2020-09-18T14:27:55Z", "author": {"login": "mpeddada1"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFFFzLgH2gAyNDc4MjUzODUwOjZmNGE3MTkwZGIxMWY4YmUwNGFmZTY1ZGRlYTM1MTI3MmIzOTBkZWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ83lLAFqTQ5MTEyMTk3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f4a7190db11f8be04afe65ddea351272b390dee", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6f4a7190db11f8be04afe65ddea351272b390dee", "committedDate": "2020-09-03T00:02:43Z", "message": "Using gradle Property and Provider to enable lazy evaluation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMzk5NzI3", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#pullrequestreview-481399727", "createdAt": "2020-09-03T00:27:10Z", "commit": {"oid": "6f4a7190db11f8be04afe65ddea351272b390dee"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDoyNzoxMVrOHMQgfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDozMDozNFrOHMQkCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNTQyMA==", "bodyText": "I think we can keep the current return type of String. Is there a specific reason for returning Provider<String>?", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r482615420", "createdAt": "2020-09-03T00:27:11Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -33,28 +36,27 @@\n public class TargetImageParameters {\n \n   private final AuthParameters auth;\n+  private final Project project;\n \n-  @Nullable private String image;\n+  private Property<String> image;\n   private Set<String> tags = Collections.emptySet();\n   @Nullable private String credHelper;\n \n   @Inject\n-  public TargetImageParameters(ObjectFactory objectFactory) {\n+  public TargetImageParameters(ObjectFactory objectFactory, Project project) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    this.project = project;\n+    image = project.getObjects().property(String.class);\n+    image.set(project.provider(() -> System.getProperty(PropertyNames.TO_IMAGE)));\n   }\n \n   @Input\n-  @Nullable\n-  @Optional\n-  public String getImage() {\n-    if (System.getProperty(PropertyNames.TO_IMAGE) != null) {\n-      return System.getProperty(PropertyNames.TO_IMAGE);\n-    }\n+  public Provider<String> getImage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4a7190db11f8be04afe65ddea351272b390dee"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNTUyOQ==", "bodyText": "No need to accept objectFactory, as you can get it by project.getObjects(), which is what you are already doing in the new code.", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r482615529", "createdAt": "2020-09-03T00:27:39Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -33,28 +36,27 @@\n public class TargetImageParameters {\n \n   private final AuthParameters auth;\n+  private final Project project;\n \n-  @Nullable private String image;\n+  private Property<String> image;\n   private Set<String> tags = Collections.emptySet();\n   @Nullable private String credHelper;\n \n   @Inject\n-  public TargetImageParameters(ObjectFactory objectFactory) {\n+  public TargetImageParameters(ObjectFactory objectFactory, Project project) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4a7190db11f8be04afe65ddea351272b390dee"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNjEwNQ==", "bodyText": "I think we need an additional method setImage(Provider<String>)?", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r482616105", "createdAt": "2020-09-03T00:29:47Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -33,28 +36,27 @@\n public class TargetImageParameters {\n \n   private final AuthParameters auth;\n+  private final Project project;\n \n-  @Nullable private String image;\n+  private Property<String> image;\n   private Set<String> tags = Collections.emptySet();\n   @Nullable private String credHelper;\n \n   @Inject\n-  public TargetImageParameters(ObjectFactory objectFactory) {\n+  public TargetImageParameters(ObjectFactory objectFactory, Project project) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    this.project = project;\n+    image = project.getObjects().property(String.class);\n+    image.set(project.provider(() -> System.getProperty(PropertyNames.TO_IMAGE)));\n   }\n \n   @Input\n-  @Nullable\n-  @Optional\n-  public String getImage() {\n-    if (System.getProperty(PropertyNames.TO_IMAGE) != null) {\n-      return System.getProperty(PropertyNames.TO_IMAGE);\n-    }\n+  public Provider<String> getImage() {\n     return image;\n   }\n \n   public void setImage(String image) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4a7190db11f8be04afe65ddea351272b390dee"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNjMyOA==", "bodyText": "I'd like to keep the consistency that we read system properties in getters.", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r482616328", "createdAt": "2020-09-03T00:30:34Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -33,28 +36,27 @@\n public class TargetImageParameters {\n \n   private final AuthParameters auth;\n+  private final Project project;\n \n-  @Nullable private String image;\n+  private Property<String> image;\n   private Set<String> tags = Collections.emptySet();\n   @Nullable private String credHelper;\n \n   @Inject\n-  public TargetImageParameters(ObjectFactory objectFactory) {\n+  public TargetImageParameters(ObjectFactory objectFactory, Project project) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    this.project = project;\n+    image = project.getObjects().property(String.class);\n+    image.set(project.provider(() -> System.getProperty(PropertyNames.TO_IMAGE)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f4a7190db11f8be04afe65ddea351272b390dee"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "934d9b09a199998a48a6f49e20b311707876faa6", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/934d9b09a199998a48a6f49e20b311707876faa6", "committedDate": "2020-09-03T16:24:18Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58575be180032e2d4d183362627b1ef0d61477c6", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/58575be180032e2d4d183362627b1ef0d61477c6", "committedDate": "2020-09-03T19:40:58Z", "message": "Add lazy eval for jib.to.tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2db50d020eaa9fab24f8d72b105388985307a6bd", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/2db50d020eaa9fab24f8d72b105388985307a6bd", "committedDate": "2020-09-03T19:42:13Z", "message": "remove unnecessary changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02ca7b9729a1b7d81f50f965e8e5d22981a8bdba", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/02ca7b9729a1b7d81f50f965e8e5d22981a8bdba", "committedDate": "2020-09-03T19:44:34Z", "message": "remove more unnecessary changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d7b6ea1f8cc674870e6e69b229918e60b6cc4b3", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6d7b6ea1f8cc674870e6e69b229918e60b6cc4b3", "committedDate": "2020-09-03T19:54:25Z", "message": "formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMTY1NTY2", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#pullrequestreview-482165566", "createdAt": "2020-09-03T20:10:00Z", "commit": {"oid": "6d7b6ea1f8cc674870e6e69b229918e60b6cc4b3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDoxMDowMFrOHM1yqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMDoxNDoxMlrOHM16gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyNjI4MA==", "bodyText": "Probably we need to keep @Nullable.", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r483226280", "createdAt": "2020-09-03T20:10:00Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -34,42 +36,51 @@\n \n   private final AuthParameters auth;\n \n-  @Nullable private String image;\n-  private Set<String> tags = Collections.emptySet();\n+  private Property<String> image;\n+  private SetProperty<String> tags;\n   @Nullable private String credHelper;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    image = objectFactory.property(String.class);\n+    tags = objectFactory.setProperty(String.class);\n   }\n \n   @Input\n-  @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d7b6ea1f8cc674870e6e69b229918e60b6cc4b3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyNjQ5NA==", "bodyText": "I speculate that we won't need this null check.", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r483226494", "createdAt": "2020-09-03T20:10:28Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -34,42 +36,51 @@\n \n   private final AuthParameters auth;\n \n-  @Nullable private String image;\n-  private Set<String> tags = Collections.emptySet();\n+  private Property<String> image;\n+  private SetProperty<String> tags;\n   @Nullable private String credHelper;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    image = objectFactory.property(String.class);\n+    tags = objectFactory.setProperty(String.class);\n   }\n \n   @Input\n-  @Nullable\n-  @Optional\n   public String getImage() {\n     if (System.getProperty(PropertyNames.TO_IMAGE) != null) {\n       return System.getProperty(PropertyNames.TO_IMAGE);\n     }\n-    return image;\n+    return image.getOrNull();\n   }\n \n   public void setImage(String image) {\n-    this.image = image;\n+    this.image.set(image);\n+  }\n+\n+  public void setImage(Provider<String> image) {\n+    if (image != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d7b6ea1f8cc674870e6e69b229918e60b6cc4b3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyODI4OA==", "bodyText": "Maybe it's safer to initialize it to an empty set like we do it here:\n\n  \n    \n      jib/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/JibExtension.java\n    \n    \n         Line 116\n      in\n      94f8bda\n    \n    \n    \n    \n\n        \n          \n           pluginExtensions = objectFactory.listProperty(ExtensionParameters.class).empty();", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r483228288", "createdAt": "2020-09-03T20:14:12Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -34,42 +36,51 @@\n \n   private final AuthParameters auth;\n \n-  @Nullable private String image;\n-  private Set<String> tags = Collections.emptySet();\n+  private Property<String> image;\n+  private SetProperty<String> tags;\n   @Nullable private String credHelper;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    image = objectFactory.property(String.class);\n+    tags = objectFactory.setProperty(String.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d7b6ea1f8cc674870e6e69b229918e60b6cc4b3"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae79d4653d0baadf1cf2edcf40198bec65c3dbae", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/ae79d4653d0baadf1cf2edcf40198bec65c3dbae", "committedDate": "2020-09-08T15:06:19Z", "message": "addressing comment suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MTkxNjg5", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#pullrequestreview-485191689", "createdAt": "2020-09-09T16:24:14Z", "commit": {"oid": "ae79d4653d0baadf1cf2edcf40198bec65c3dbae"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyNDoxNFrOHPPrwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoyODowNlrOHPP4iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0NzY1MA==", "bodyText": "Aha, looks like Gradle prefers this method signature over String. If that's the case, I think it should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (image != null) {\n          \n          \n            \n                if (image == null) {\n          \n          \n            \n                  this.image = null;\n          \n          \n            \n                } else {\n          \n          \n            \n                  this.image.set(image);\n          \n          \n            \n                }", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r485747650", "createdAt": "2020-09-09T16:24:14Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -34,42 +36,51 @@\n \n   private final AuthParameters auth;\n \n-  @Nullable private String image;\n-  private Set<String> tags = Collections.emptySet();\n+  private Property<String> image;\n+  private SetProperty<String> tags;\n   @Nullable private String credHelper;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    image = objectFactory.property(String.class);\n+    tags = objectFactory.setProperty(String.class);\n   }\n \n   @Input\n-  @Nullable\n-  @Optional\n   public String getImage() {\n     if (System.getProperty(PropertyNames.TO_IMAGE) != null) {\n       return System.getProperty(PropertyNames.TO_IMAGE);\n     }\n-    return image;\n+    return image.getOrNull();\n   }\n \n   public void setImage(String image) {\n-    this.image = image;\n+    this.image.set(image);\n+  }\n+\n+  public void setImage(Provider<String> image) {\n+    if (image != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIyNjQ5NA=="}, "originalCommit": {"oid": "6d7b6ea1f8cc674870e6e69b229918e60b6cc4b3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0ODgyNQ==", "bodyText": "In light of https://github.com/GoogleContainerTools/jib/pull/2739/files#r485008215, I wonder if we need a null check. Can you run a manual test and see which of the two setTags() gets called?", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r485748825", "createdAt": "2020-09-09T16:25:43Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -34,42 +36,52 @@\n \n   private final AuthParameters auth;\n \n-  @Nullable private String image;\n-  private Set<String> tags = Collections.emptySet();\n+  private Property<String> image;\n+  private SetProperty<String> tags;\n   @Nullable private String credHelper;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    image = objectFactory.property(String.class);\n+    tags = objectFactory.setProperty(String.class).empty();\n   }\n \n   @Input\n   @Nullable\n-  @Optional\n   public String getImage() {\n     if (System.getProperty(PropertyNames.TO_IMAGE) != null) {\n       return System.getProperty(PropertyNames.TO_IMAGE);\n     }\n-    return image;\n+    return image.getOrNull();\n   }\n \n   public void setImage(String image) {\n-    this.image = image;\n+    this.image.set(image);\n+  }\n+\n+  public void setImage(Provider<String> image) {\n+    if (image != null) {\n+      this.image.set(image);\n+    }\n   }\n \n   @Input\n-  @Optional\n   public Set<String> getTags() {\n     if (System.getProperty(PropertyNames.TO_TAGS) != null) {\n       return ImmutableSet.copyOf(\n           ConfigurationPropertyValidator.parseListProperty(\n               System.getProperty(PropertyNames.TO_TAGS)));\n     }\n-    return tags;\n+    return tags.get();\n   }\n \n   public void setTags(Set<String> tags) {\n-    this.tags = tags;\n+    this.tags.set(tags);\n+  }\n+\n+  public void setTags(Provider<Set<String>> tags) {\n+    this.tags.set(tags);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79d4653d0baadf1cf2edcf40198bec65c3dbae"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0OTYwMQ==", "bodyText": "I think this should be preserved. The user doesn't have to configure this parameter.", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r485749601", "createdAt": "2020-09-09T16:26:34Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -34,42 +36,52 @@\n \n   private final AuthParameters auth;\n \n-  @Nullable private String image;\n-  private Set<String> tags = Collections.emptySet();\n+  private Property<String> image;\n+  private SetProperty<String> tags;\n   @Nullable private String credHelper;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    image = objectFactory.property(String.class);\n+    tags = objectFactory.setProperty(String.class).empty();\n   }\n \n   @Input\n   @Nullable\n-  @Optional\n   public String getImage() {\n     if (System.getProperty(PropertyNames.TO_IMAGE) != null) {\n       return System.getProperty(PropertyNames.TO_IMAGE);\n     }\n-    return image;\n+    return image.getOrNull();\n   }\n \n   public void setImage(String image) {\n-    this.image = image;\n+    this.image.set(image);\n+  }\n+\n+  public void setImage(Provider<String> image) {\n+    if (image != null) {\n+      this.image.set(image);\n+    }\n   }\n \n   @Input\n-  @Optional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79d4653d0baadf1cf2edcf40198bec65c3dbae"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc1MDkyMw==", "bodyText": "I think this should be preserved. The user doesn't have to configure this parameter.", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r485750923", "createdAt": "2020-09-09T16:28:06Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java", "diffHunk": "@@ -34,42 +36,52 @@\n \n   private final AuthParameters auth;\n \n-  @Nullable private String image;\n-  private Set<String> tags = Collections.emptySet();\n+  private Property<String> image;\n+  private SetProperty<String> tags;\n   @Nullable private String credHelper;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n+    image = objectFactory.property(String.class);\n+    tags = objectFactory.setProperty(String.class).empty();\n   }\n \n   @Input\n   @Nullable\n-  @Optional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae79d4653d0baadf1cf2edcf40198bec65c3dbae"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdfad6dcdeb9d7308baea96bd78179a0e2bb4096", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/fdfad6dcdeb9d7308baea96bd78179a0e2bb4096", "committedDate": "2020-09-10T16:20:02Z", "message": "removing null checker"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2Mjk4NzM1", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#pullrequestreview-486298735", "createdAt": "2020-09-10T20:48:14Z", "commit": {"oid": "fdfad6dcdeb9d7308baea96bd78179a0e2bb4096"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDo0ODoxNFrOHQFMcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDo0ODoxOVrOHQFMwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyNDM2OQ==", "bodyText": "How about -D_TARGET_IMAGE=ignored?", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r486624369", "createdAt": "2020-09-10T20:48:14Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/skaffold/FilesTaskV2Test.java", "diffHunk": "@@ -58,7 +58,7 @@\n   private static String verifyTaskSuccess(TestProject project, @Nullable String moduleName) {\n     String taskName =\n         \":\" + (moduleName == null ? \"\" : moduleName + \":\") + JibPlugin.SKAFFOLD_FILES_TASK_V2_NAME;\n-    BuildResult buildResult = project.build(taskName, \"-q\");\n+    BuildResult buildResult = project.build(taskName, \"-q\", \"-D_TARGET_IMAGE\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdfad6dcdeb9d7308baea96bd78179a0e2bb4096"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYyNDQ0OA==", "bodyText": "ditto", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r486624448", "createdAt": "2020-09-10T20:48:19Z", "author": {"login": "chanseokoh"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/skaffold/SyncMapTaskTest.java", "diffHunk": "@@ -61,6 +61,7 @@ private static SkaffoldSyncMapTemplate generateTemplate(\n     List<String> buildParams = new ArrayList<>();\n     buildParams.add(taskName);\n     buildParams.add(\"-q\");\n+    buildParams.add(\"-D_TARGET_IMAGE\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdfad6dcdeb9d7308baea96bd78179a0e2bb4096"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6837d622819438f0c61dac3ac34e7475b3610e2c", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/6837d622819438f0c61dac3ac34e7475b3610e2c", "committedDate": "2020-09-11T22:12:03Z", "message": "adding tests and sample project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27c3431d3d2194d8648dcab592f3ed6046922351", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/27c3431d3d2194d8648dcab592f3ed6046922351", "committedDate": "2020-09-14T02:12:17Z", "message": "adding tests and fixing file naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8ccb15bef437cafba20f75f05805d2ef91e64b1", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/c8ccb15bef437cafba20f75f05805d2ef91e64b1", "committedDate": "2020-09-14T02:15:57Z", "message": "more fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDAwMTg4", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#pullrequestreview-488000188", "createdAt": "2020-09-14T17:38:00Z", "commit": {"oid": "c8ccb15bef437cafba20f75f05805d2ef91e64b1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzozODowMFrOHRfzAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0MTo1NlrOHRf7Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEwODgwMA==", "bodyText": "If you're not using the contents of this file to do anything special, just a simple System.out.println(\"Hello world\") is probably sufficient.", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r488108800", "createdAt": "2020-09-14T17:38:00Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/test/resources/gradle/projects/lazy-evaluation/src/main/java/com/test/HelloWorld.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2018 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.test;\n+\n+import com.google.common.io.CharStreams;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.net.URISyntaxException;\n+import java.nio.charset.StandardCharsets;\n+\n+public class HelloWorld {\n+\n+  public static void main(String[] args) throws URISyntaxException, IOException {\n+    try (Reader reader =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8ccb15bef437cafba20f75f05805d2ef91e64b1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMDIxOQ==", "bodyText": "I think this technically works, but is confusing. Maybe JibPlugin.BUILD_IMAGE_TASK_NAME is more appropriate?", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r488110219", "createdAt": "2020-09-14T17:40:41Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibPluginTest.java", "diffHunk": "@@ -370,6 +373,39 @@ public void testJibTaskGroupIsSet() {\n         taskName -> Assert.assertEquals(taskName, \"Jib\", tasks.getByPath(taskName).getGroup()));\n   }\n \n+  @Test\n+  public void testLazyEvalForImageAndTags() {\n+    try {\n+      testProject.build(JibPlugin.JIB_EXTENSION_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8ccb15bef437cafba20f75f05805d2ef91e64b1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMDkxOQ==", "bodyText": "I don't know if this is true, but if you use -Djib.console=plain, it might be easier to read the output, and you can ignore the cyan coloring and stuff?\nAlso since we already know the image name and tags, could we just use those in the comparison directly instead of extracting them out and then using the Assert at line 404, 405?", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r488110919", "createdAt": "2020-09-14T17:41:56Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibPluginTest.java", "diffHunk": "@@ -370,6 +373,39 @@ public void testJibTaskGroupIsSet() {\n         taskName -> Assert.assertEquals(taskName, \"Jib\", tasks.getByPath(taskName).getGroup()));\n   }\n \n+  @Test\n+  public void testLazyEvalForImageAndTags() {\n+    try {\n+      testProject.build(JibPlugin.JIB_EXTENSION_NAME);\n+      Assert.fail(\"Expect this to fail\");\n+    } catch (UnexpectedBuildFailure ex) {\n+      String output = ex.getBuildResult().getOutput().trim();\n+\n+      // Regex to parse through image and tag values from build output.\n+      String cyanWordRegex = \"\\\\u001B\\\\[36m(.+?)\\\\u001B\\\\[0m\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8ccb15bef437cafba20f75f05805d2ef91e64b1"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "301fc9dd3d35687bfb3fb5ac7e4157a0ef59a97a", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/301fc9dd3d35687bfb3fb5ac7e4157a0ef59a97a", "committedDate": "2020-09-14T21:21:12Z", "message": "addressing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c04f1cb590eb6ed77ac57eb628be5f77ca4bd2c8", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/c04f1cb590eb6ed77ac57eb628be5f77ca4bd2c8", "committedDate": "2020-09-14T22:03:00Z", "message": "Merge branch 'master' of github.com:GoogleContainerTools/jib into git-prop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1731a70a933ae907320b18f1bab571fe488125f0", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/1731a70a933ae907320b18f1bab571fe488125f0", "committedDate": "2020-09-14T22:04:48Z", "message": "Modifying CHANGELOG"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4ODUwNDEw", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#pullrequestreview-488850410", "createdAt": "2020-09-15T16:16:49Z", "commit": {"oid": "1731a70a933ae907320b18f1bab571fe488125f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoxNjo0OVrOHSJo2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoxNjo0OVrOHSJo2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5NDMzMQ==", "bodyText": "Does it makes sense to remove this whole regex and just do\ncleanOutput = output.replace(\"color-stuff\",\"\")\nAssert.assertThat(cleanOutput, Matchers.contains(\"Containerizing application....\")", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#discussion_r488794331", "createdAt": "2020-09-15T16:16:49Z", "author": {"login": "loosebazooka"}, "path": "jib-gradle-plugin/src/test/java/com/google/cloud/tools/jib/gradle/JibPluginTest.java", "diffHunk": "@@ -370,6 +373,37 @@ public void testJibTaskGroupIsSet() {\n         taskName -> Assert.assertEquals(taskName, \"Jib\", tasks.getByPath(taskName).getGroup()));\n   }\n \n+  @Test\n+  public void testLazyEvalForImageAndTags() {\n+    try {\n+      testProject.build(JibPlugin.BUILD_IMAGE_TASK_NAME);\n+      Assert.fail(\"Expect this to fail\");\n+    } catch (UnexpectedBuildFailure ex) {\n+      String output = ex.getBuildResult().getOutput().trim();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1731a70a933ae907320b18f1bab571fe488125f0"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "226ee629ef6e3f01a85e39ad246b6eabede1d9ae", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/226ee629ef6e3f01a85e39ad246b6eabede1d9ae", "committedDate": "2020-09-15T20:13:12Z", "message": "test clean output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a238e6615f9ac73ac9190854beb8c9bff57ee797", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/a238e6615f9ac73ac9190854beb8c9bff57ee797", "committedDate": "2020-09-15T20:17:40Z", "message": "remove extra space"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87ba48eb03ff0c29da140e9fa0b5010fb3508e10", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/87ba48eb03ff0c29da140e9fa0b5010fb3508e10", "committedDate": "2020-09-16T14:20:23Z", "message": "Use MatcherAssert instead of regexes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4378bd3739fba92296cc22160059ba813f235455", "author": {"user": {"login": "mpeddada1", "name": "Mridula"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/4378bd3739fba92296cc22160059ba813f235455", "committedDate": "2020-09-16T16:22:00Z", "message": "Added TODO to remove cyan color filtering once #2764 is submitted."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMTIxOTc0", "url": "https://github.com/GoogleContainerTools/jib/pull/2739#pullrequestreview-491121974", "createdAt": "2020-09-18T03:17:34Z", "commit": {"oid": "4378bd3739fba92296cc22160059ba813f235455"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 9, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}