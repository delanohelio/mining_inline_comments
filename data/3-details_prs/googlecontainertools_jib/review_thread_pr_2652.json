{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNDUxNTk2", "number": 2652, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjozMTo1NVrOEUOLCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjo1MDo0M1rOEUOWwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjM5MTc5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjozMTo1NVrOG6YkdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDozOToyMFrOG68MxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3MzE0MQ==", "bodyText": "Just realized this. I actually think this code (and the code in obtainBaseImageLayers that we updated) will break once we have multiple Images due to childProgressDispatcherFactory (the progress reporting thing), which I haven't explained. Will need to fix it when the time comes. Will be easy to fix, so not a concern at all.", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463873141", "createdAt": "2020-07-31T22:31:55Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.builtImage =\n+    results.builtImages =\n         executorService.submit(\n-            () ->\n-                new BuildImageStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.baseImagesAndRegistryClient.get().images.get(0),\n-                        realizeFutures(\n-                            Verify.verifyNotNull(\n-                                results\n-                                    .baseImagesAndLayers\n-                                    .get()\n-                                    .get(results.baseImagesAndRegistryClient.get().images.get(0)))),\n-                        realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n-                    .call());\n+            () -> {\n+              List<Future<Image>> builtImages = new ArrayList<>();\n+              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+                Future<Image> builtImage =\n+                    executorService.submit(\n+                        () ->\n+                            new BuildImageStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1NjkwMQ==", "bodyText": "Sounds Good .I will be on the look out for the breaks caused by childProgressDispatcherFactory", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r464456901", "createdAt": "2020-08-03T14:39:20Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.builtImage =\n+    results.builtImages =\n         executorService.submit(\n-            () ->\n-                new BuildImageStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.baseImagesAndRegistryClient.get().images.get(0),\n-                        realizeFutures(\n-                            Verify.verifyNotNull(\n-                                results\n-                                    .baseImagesAndLayers\n-                                    .get()\n-                                    .get(results.baseImagesAndRegistryClient.get().images.get(0)))),\n-                        realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n-                    .call());\n+            () -> {\n+              List<Future<Image>> builtImages = new ArrayList<>();\n+              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+                Future<Image> builtImage =\n+                    executorService.submit(\n+                        () ->\n+                            new BuildImageStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3MzE0MQ=="}, "originalCommit": {"oid": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjQxOTUzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjo0OToxNVrOG6Y0mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjo0OToxNVrOG6Y0mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3NzI3NA==", "bodyText": "You can use .entrySet() to iterator over a Map. An entry is a (key, value) pair, so no need to call Map.get(key) to get the value.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          for (Image image : results.baseImagesAndLayers.get().keySet()) {\n          \n          \n            \n                            Future<Image> builtImage =\n          \n          \n            \n                                executorService.submit(\n          \n          \n            \n                                    () ->\n          \n          \n            \n                                        new BuildImageStep(\n          \n          \n            \n                                                buildContext,\n          \n          \n            \n                                                childProgressDispatcherFactory,\n          \n          \n            \n                                                image,\n          \n          \n            \n                                                realizeFutures(\n          \n          \n            \n                                                    Verify.verifyNotNull(\n          \n          \n            \n                                                        results.baseImagesAndLayers.get().get(image))),\n          \n          \n            \n                                                realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n          \n          \n            \n                                            .call());\n          \n          \n            \n                            builtImages.add(builtImage);\n          \n          \n            \n                          }\n          \n          \n            \n                          for (Map.Entry<Image, List<Future<PreparedLayer>>> entry :\n          \n          \n            \n                              results.baseImagesAndLayers.get().entrySet()) {\n          \n          \n            \n                            Future<Image> builtImage =\n          \n          \n            \n                                executorService.submit(\n          \n          \n            \n                                    () ->\n          \n          \n            \n                                        new BuildImageStep(\n          \n          \n            \n                                                buildContext,\n          \n          \n            \n                                                childProgressDispatcherFactory,\n          \n          \n            \n                                                entry.getKey(), // base image\n          \n          \n            \n                                                realizeFutures(entry.getValue()), // base image layers\n          \n          \n            \n                                                realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n          \n          \n            \n                                            .call());\n          \n          \n            \n                            builtImages.add(builtImage);\n          \n          \n            \n                          }", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463877274", "createdAt": "2020-07-31T22:49:15Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {\n     ProgressEventDispatcher.Factory childProgressDispatcherFactory =\n         Verify.verifyNotNull(rootProgressDispatcher).newChildProducer();\n-\n-    results.builtImage =\n+    results.builtImages =\n         executorService.submit(\n-            () ->\n-                new BuildImageStep(\n-                        buildContext,\n-                        childProgressDispatcherFactory,\n-                        results.baseImagesAndRegistryClient.get().images.get(0),\n-                        realizeFutures(\n-                            Verify.verifyNotNull(\n-                                results\n-                                    .baseImagesAndLayers\n-                                    .get()\n-                                    .get(results.baseImagesAndRegistryClient.get().images.get(0)))),\n-                        realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n-                    .call());\n+            () -> {\n+              List<Future<Image>> builtImages = new ArrayList<>();\n+              for (Image image : results.baseImagesAndLayers.get().keySet()) {\n+                Future<Image> builtImage =\n+                    executorService.submit(\n+                        () ->\n+                            new BuildImageStep(\n+                                    buildContext,\n+                                    childProgressDispatcherFactory,\n+                                    image,\n+                                    realizeFutures(\n+                                        Verify.verifyNotNull(\n+                                            results.baseImagesAndLayers.get().get(image))),\n+                                    realizeFutures(Verify.verifyNotNull(results.applicationLayers)))\n+                                .call());\n+                builtImages.add(builtImage);\n+              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjQyMTc4OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjo1MDo0M1rOG6Y1_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMjo1MDo0M1rOG6Y1_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3NzYzMQ==", "bodyText": "Rename it to buildImages()? Also, rename other methods too (pullBaseImage() --> pullBaseImages())?", "url": "https://github.com/GoogleContainerTools/jib/pull/2652#discussion_r463877631", "createdAt": "2020-07-31T22:50:43Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/builder/steps/StepsRunner.java", "diffHunk": "@@ -358,22 +358,27 @@ private void buildAndCacheApplicationLayers() {\n   private void buildImage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3531cd7e2b0610be7e8a22d03c61bf8e034b4fa7"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 86, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}