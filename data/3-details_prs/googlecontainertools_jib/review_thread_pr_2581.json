{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzgwOTQ0", "number": 2581, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxODowM1rOEN7yzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoyMDoxMFrOEN71xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDQ2NjA0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxODowM1rOGw0P6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxODowM1rOGw0P6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MDg3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * A yaml block for specifying platforms\n          \n          \n            \n             * A yaml block for specifying platforms.", "url": "https://github.com/GoogleContainerTools/jib/pull/2581#discussion_r453840874", "createdAt": "2020-07-13T18:18:03Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying platforms", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188a94fb8bc386b9178a7d926714fc4e0931eb93"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDQ3MTIzOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxOTozM1rOGw0TJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDowNDoyOVrOGw32tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTcwMA==", "bodyText": "For every class in jib-build-plan, I copied collections to make it truly immutable. Should it do the same?", "url": "https://github.com/GoogleContainerTools/jib/pull/2581#discussion_r453841700", "createdAt": "2020-07-13T18:19:33Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying platforms\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * architecture: amd64\n+ * os: linux\n+ * os.version: 1.0.0\n+ * os.features:\n+ *   - headless\n+ * variant: amd64v10\n+ * features:\n+ *   - sse4\n+ *   - aes\n+ * }</pre>\n+ */\n+public class PlatformSpec {\n+  @Nullable private String architecture;\n+  @Nullable private String os;\n+  @Nullable private String osVersion;\n+  @Nullable private List<String> osFeatures;\n+  @Nullable private String variant;\n+  @Nullable private List<String> features;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param architecture the target cpu architecture\n+   * @param os the target operating system\n+   * @param variant the cpu variant\n+   * @param features a list of cpu features\n+   * @param osVersion the operating system version\n+   * @param osFeatures a list of operating system features\n+   */\n+  @JsonCreator\n+  public PlatformSpec(\n+      @JsonProperty(\"architecture\") String architecture,\n+      @JsonProperty(\"os\") String os,\n+      @JsonProperty(\"os.version\") String osVersion,\n+      @JsonProperty(\"os.features\") List<String> osFeatures,\n+      @JsonProperty(\"variant\") String variant,\n+      @JsonProperty(\"features\") List<String> features) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188a94fb8bc386b9178a7d926714fc4e0931eb93"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5OTk1Ng==", "bodyText": "Saw the comment in the other thread. Marking resolved.", "url": "https://github.com/GoogleContainerTools/jib/pull/2581#discussion_r453899956", "createdAt": "2020-07-13T20:04:29Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying platforms\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * architecture: amd64\n+ * os: linux\n+ * os.version: 1.0.0\n+ * os.features:\n+ *   - headless\n+ * variant: amd64v10\n+ * features:\n+ *   - sse4\n+ *   - aes\n+ * }</pre>\n+ */\n+public class PlatformSpec {\n+  @Nullable private String architecture;\n+  @Nullable private String os;\n+  @Nullable private String osVersion;\n+  @Nullable private List<String> osFeatures;\n+  @Nullable private String variant;\n+  @Nullable private List<String> features;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param architecture the target cpu architecture\n+   * @param os the target operating system\n+   * @param variant the cpu variant\n+   * @param features a list of cpu features\n+   * @param osVersion the operating system version\n+   * @param osFeatures a list of operating system features\n+   */\n+  @JsonCreator\n+  public PlatformSpec(\n+      @JsonProperty(\"architecture\") String architecture,\n+      @JsonProperty(\"os\") String os,\n+      @JsonProperty(\"os.version\") String osVersion,\n+      @JsonProperty(\"os.features\") List<String> osFeatures,\n+      @JsonProperty(\"variant\") String variant,\n+      @JsonProperty(\"features\") List<String> features) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MTcwMA=="}, "originalCommit": {"oid": "188a94fb8bc386b9178a7d926714fc4e0931eb93"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDQ3MzY0OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoyMDoxMFrOGw0Ujg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDowMzo1OVrOGw31sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MjA2Mg==", "bodyText": "Likewise, it's an overhead, but every class in jib-build-plan returns a copy.", "url": "https://github.com/GoogleContainerTools/jib/pull/2581#discussion_r453842062", "createdAt": "2020-07-13T18:20:10Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying platforms\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * architecture: amd64\n+ * os: linux\n+ * os.version: 1.0.0\n+ * os.features:\n+ *   - headless\n+ * variant: amd64v10\n+ * features:\n+ *   - sse4\n+ *   - aes\n+ * }</pre>\n+ */\n+public class PlatformSpec {\n+  @Nullable private String architecture;\n+  @Nullable private String os;\n+  @Nullable private String osVersion;\n+  @Nullable private List<String> osFeatures;\n+  @Nullable private String variant;\n+  @Nullable private List<String> features;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param architecture the target cpu architecture\n+   * @param os the target operating system\n+   * @param variant the cpu variant\n+   * @param features a list of cpu features\n+   * @param osVersion the operating system version\n+   * @param osFeatures a list of operating system features\n+   */\n+  @JsonCreator\n+  public PlatformSpec(\n+      @JsonProperty(\"architecture\") String architecture,\n+      @JsonProperty(\"os\") String os,\n+      @JsonProperty(\"os.version\") String osVersion,\n+      @JsonProperty(\"os.features\") List<String> osFeatures,\n+      @JsonProperty(\"variant\") String variant,\n+      @JsonProperty(\"features\") List<String> features) {\n+    this.architecture = architecture;\n+    this.os = os;\n+    this.osVersion = osVersion;\n+    this.osFeatures = osFeatures;\n+    this.variant = variant;\n+    this.features = features;\n+  }\n+\n+  public Optional<String> getArchitecture() {\n+    return Optional.ofNullable(architecture);\n+  }\n+\n+  public Optional<String> getOs() {\n+    return Optional.ofNullable(os);\n+  }\n+\n+  public Optional<String> getOsVersion() {\n+    return Optional.ofNullable(osVersion);\n+  }\n+\n+  public Optional<List<String>> getOsFeatures() {\n+    return Optional.ofNullable(osFeatures);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "188a94fb8bc386b9178a7d926714fc4e0931eb93"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5MTA0MA==", "bodyText": "Don't think users will be interacting with this code. Perhaps I could skip Optional as well? I see how it flows when I'm building the buildplan.", "url": "https://github.com/GoogleContainerTools/jib/pull/2581#discussion_r453891040", "createdAt": "2020-07-13T19:47:20Z", "author": {"login": "loosebazooka"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying platforms\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * architecture: amd64\n+ * os: linux\n+ * os.version: 1.0.0\n+ * os.features:\n+ *   - headless\n+ * variant: amd64v10\n+ * features:\n+ *   - sse4\n+ *   - aes\n+ * }</pre>\n+ */\n+public class PlatformSpec {\n+  @Nullable private String architecture;\n+  @Nullable private String os;\n+  @Nullable private String osVersion;\n+  @Nullable private List<String> osFeatures;\n+  @Nullable private String variant;\n+  @Nullable private List<String> features;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param architecture the target cpu architecture\n+   * @param os the target operating system\n+   * @param variant the cpu variant\n+   * @param features a list of cpu features\n+   * @param osVersion the operating system version\n+   * @param osFeatures a list of operating system features\n+   */\n+  @JsonCreator\n+  public PlatformSpec(\n+      @JsonProperty(\"architecture\") String architecture,\n+      @JsonProperty(\"os\") String os,\n+      @JsonProperty(\"os.version\") String osVersion,\n+      @JsonProperty(\"os.features\") List<String> osFeatures,\n+      @JsonProperty(\"variant\") String variant,\n+      @JsonProperty(\"features\") List<String> features) {\n+    this.architecture = architecture;\n+    this.os = os;\n+    this.osVersion = osVersion;\n+    this.osFeatures = osFeatures;\n+    this.variant = variant;\n+    this.features = features;\n+  }\n+\n+  public Optional<String> getArchitecture() {\n+    return Optional.ofNullable(architecture);\n+  }\n+\n+  public Optional<String> getOs() {\n+    return Optional.ofNullable(os);\n+  }\n+\n+  public Optional<String> getOsVersion() {\n+    return Optional.ofNullable(osVersion);\n+  }\n+\n+  public Optional<List<String>> getOsFeatures() {\n+    return Optional.ofNullable(osFeatures);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MjA2Mg=="}, "originalCommit": {"oid": "188a94fb8bc386b9178a7d926714fc4e0931eb93"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5OTY5OA==", "bodyText": "Honestly, I am still unsure on this Optional topic and would love to get an expert guide. Generally speaking, getting rid of null (and null checks) by using Optional to denote something (especially for public API) is absent sounds like a good idea. However, sometimes it results in more bloated code that is really difficult to tolerate. And I'm also unclear if there should be a difference when using Optional as a return value versus as method arguments.", "url": "https://github.com/GoogleContainerTools/jib/pull/2581#discussion_r453899698", "createdAt": "2020-07-13T20:03:59Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/buildfile/PlatformSpec.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Google LLC.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.google.cloud.tools.jib.cli.buildfile;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+import java.util.Optional;\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A yaml block for specifying platforms\n+ *\n+ * <p>Example use of this yaml snippet.\n+ *\n+ * <pre>{@code\n+ * architecture: amd64\n+ * os: linux\n+ * os.version: 1.0.0\n+ * os.features:\n+ *   - headless\n+ * variant: amd64v10\n+ * features:\n+ *   - sse4\n+ *   - aes\n+ * }</pre>\n+ */\n+public class PlatformSpec {\n+  @Nullable private String architecture;\n+  @Nullable private String os;\n+  @Nullable private String osVersion;\n+  @Nullable private List<String> osFeatures;\n+  @Nullable private String variant;\n+  @Nullable private List<String> features;\n+\n+  /**\n+   * Constructor for use by jackson to populate this object.\n+   *\n+   * @param architecture the target cpu architecture\n+   * @param os the target operating system\n+   * @param variant the cpu variant\n+   * @param features a list of cpu features\n+   * @param osVersion the operating system version\n+   * @param osFeatures a list of operating system features\n+   */\n+  @JsonCreator\n+  public PlatformSpec(\n+      @JsonProperty(\"architecture\") String architecture,\n+      @JsonProperty(\"os\") String os,\n+      @JsonProperty(\"os.version\") String osVersion,\n+      @JsonProperty(\"os.features\") List<String> osFeatures,\n+      @JsonProperty(\"variant\") String variant,\n+      @JsonProperty(\"features\") List<String> features) {\n+    this.architecture = architecture;\n+    this.os = os;\n+    this.osVersion = osVersion;\n+    this.osFeatures = osFeatures;\n+    this.variant = variant;\n+    this.features = features;\n+  }\n+\n+  public Optional<String> getArchitecture() {\n+    return Optional.ofNullable(architecture);\n+  }\n+\n+  public Optional<String> getOs() {\n+    return Optional.ofNullable(os);\n+  }\n+\n+  public Optional<String> getOsVersion() {\n+    return Optional.ofNullable(osVersion);\n+  }\n+\n+  public Optional<List<String>> getOsFeatures() {\n+    return Optional.ofNullable(osFeatures);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg0MjA2Mg=="}, "originalCommit": {"oid": "188a94fb8bc386b9178a7d926714fc4e0931eb93"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 246, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}