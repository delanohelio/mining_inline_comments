{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5Njc4MzE4", "number": 2387, "title": "Proposal: Control the pushing of tags on existing images in target registry", "bodyText": "Proposal: Control the pushing of tags on existing images in target registry\nRelevant issues: #2360\nMotivation\nCurrently Jib pushes tags for all built images, irrelevant of whether the image is already\npresent on the target registry.\nAs highlighted by @loosebazooka #2360\nthis can be particularly annoying if some automated orchestrator is monitoring the registry\nand releases any new tags found. This issue is especially prevalent in cases where the tags are\nauto-generated by CI systems and added with every triggered build.\nProposal\nThe idea is to give the user the ability to control this functionality by means of a switch/option.\nThere might be use-cases where the current behaviour is preferable, eg, where the tags follow semantic\nversioning, or where the tags are not automatically generated. Hence, adding a switch seems to be\na better solution rather than changing the current behaviour.", "createdAt": "2020-04-06T14:15:55Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2387", "merged": true, "mergeCommit": {"oid": "e4defc7706fed2f17e1a4f563e3666d9cf7374d2"}, "closed": true, "closedAt": "2020-04-14T21:18:21Z", "author": {"login": "karlmuscat"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU_YLqAH2gAyMzk5Njc4MzE4OjgxZGQ4ODQ5NjUyN2ZlMmUyN2FjNjFiNTVmMjQ2MjNkMzBmNTkxNzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXo3RhgFqTM5MzIzOTkzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "81dd88496527fe2e27ac61b55f24623d30f59177", "author": {"user": {"login": "karlmuscat", "name": "Karl"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/81dd88496527fe2e27ac61b55f24623d30f59177", "committedDate": "2020-04-06T14:15:00Z", "message": "Adds proposal to control the pushing of tags on existing images in target registry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eaf43bc9b05540afe487039408c0bf6a26a9a4c", "author": {"user": {"login": "karlmuscat", "name": "Karl"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/9eaf43bc9b05540afe487039408c0bf6a26a9a4c", "committedDate": "2020-04-14T12:01:23Z", "message": "Updates proposal with more detail."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTkzMjE4", "url": "https://github.com/GoogleContainerTools/jib/pull/2387#pullrequestreview-393193218", "createdAt": "2020-04-14T18:35:34Z", "commit": {"oid": "9eaf43bc9b05540afe487039408c0bf6a26a9a4c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozNTozNFrOGFbzlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozNzoyMFrOGFb3Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1MTYzNg==", "bodyText": "We will have to see, but I feel like this step should return a manifest (as currently built in PushImageStep.makeList()) too, so that PushImageStep accepts the manifest. May need to create a \"struct\" class to contain manifest, imageDigest, and imageId. I think we can return imageDigest and imageId as separate fields instead of putting them into a BuildResult struct.\nBut I think these kinds of details can be sorted out when we actually work on a PR. I don't want too much bike-shedding in this proposal.", "url": "https://github.com/GoogleContainerTools/jib/pull/2387#discussion_r408351636", "createdAt": "2020-04-14T18:35:34Z", "author": {"login": "chanseokoh"}, "path": "proposals/tags-on-existing-images.md", "diffHunk": "@@ -0,0 +1,33 @@\n+# Proposal: Control the pushing of tags on existing images in target registry\n+\n+Relevant issues: [#2360](https://github.com/GoogleContainerTools/jib/issues/2360)\n+\n+## Motivation\n+Currently Jib pushes tags for all built images, irrelevant of whether the image is already \n+present on the target registry. \n+\n+As highlighted by @loosebazooka [#2360](https://github.com/GoogleContainerTools/jib/issues/2360) \n+this can be particularly annoying if some automated orchestrator is monitoring the registry\n+and releases any new tags found. This issue is especially prevalent in cases where the tags are\n+auto-generated by CI systems and added with every triggered build.\n+\n+## Proposal\n+The idea is to give the user the ability to control this functionality by means of a switch/option. \n+There might be use-cases where the current behaviour is preferable, eg, where the tags follow semantic \n+versioning, or where the tags are not automatically generated. Hence, adding a switch seems to be \n+a better solution rather than changing the current behaviour.\n+\n+## Proposed changes\n+A new system property is to be added to control this new behaviour:\n+`-Djib.skipExistingImages`\n+\n+A new step is created with the below signature:\n+`class CheckImageStep implements Callable<BuildResult>`, where its `call()` function performs a ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eaf43bc9b05540afe487039408c0bf6a26a9a4c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1MjYxNA==", "bodyText": "I saw in your original PR you just used RegistryClient.pullManifest(). What's the reason you changed your mind to create a new ManifestChecker?", "url": "https://github.com/GoogleContainerTools/jib/pull/2387#discussion_r408352614", "createdAt": "2020-04-14T18:37:20Z", "author": {"login": "chanseokoh"}, "path": "proposals/tags-on-existing-images.md", "diffHunk": "@@ -0,0 +1,33 @@\n+# Proposal: Control the pushing of tags on existing images in target registry\n+\n+Relevant issues: [#2360](https://github.com/GoogleContainerTools/jib/issues/2360)\n+\n+## Motivation\n+Currently Jib pushes tags for all built images, irrelevant of whether the image is already \n+present on the target registry. \n+\n+As highlighted by @loosebazooka [#2360](https://github.com/GoogleContainerTools/jib/issues/2360) \n+this can be particularly annoying if some automated orchestrator is monitoring the registry\n+and releases any new tags found. This issue is especially prevalent in cases where the tags are\n+auto-generated by CI systems and added with every triggered build.\n+\n+## Proposal\n+The idea is to give the user the ability to control this functionality by means of a switch/option. \n+There might be use-cases where the current behaviour is preferable, eg, where the tags follow semantic \n+versioning, or where the tags are not automatically generated. Hence, adding a switch seems to be \n+a better solution rather than changing the current behaviour.\n+\n+## Proposed changes\n+A new system property is to be added to control this new behaviour:\n+`-Djib.skipExistingImages`\n+\n+A new step is created with the below signature:\n+`class CheckImageStep implements Callable<BuildResult>`, where its `call()` function performs a \n+call to the `RegistryClient`. This step is executed in the `StepsRunner.pushImages()` method, \n+before the `PushImageStep.makeList()` part, only if the `skipExistingImages` flag is set to true. \n+Depending on the `BuildResult` of this new step, the `PushImageStep` futures are then created (or not).\n+\n+The registry call used in `CheckImageStep` can be implemented in various ways. It is being \n+proposed that a new `checkManifest` function is added in `RegistryClient`. This should execute \n+a `ManifestChecker`, also a new class. The `ManifestChecker`'s `handleHttpResponseException` class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eaf43bc9b05540afe487039408c0bf6a26a9a4c"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjM5OTMx", "url": "https://github.com/GoogleContainerTools/jib/pull/2387#pullrequestreview-393239931", "createdAt": "2020-04-14T19:42:55Z", "commit": {"oid": "9eaf43bc9b05540afe487039408c0bf6a26a9a4c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 189, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}