{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjQ0MTAx", "number": 2341, "title": "For config generation use create and move of temp file", "bodyText": "I think this is the minimum fix, but I went back and forth on creating a config class that does the config work potentially making it easier to test? (I think?) I'll post that as a followup but this should do:\nfixes #2294", "createdAt": "2020-03-18T20:18:34Z", "url": "https://github.com/GoogleContainerTools/jib/pull/2341", "merged": true, "mergeCommit": {"oid": "f66214b8467e06ace57038334c5cebdf8b360007"}, "closed": true, "closedAt": "2020-03-20T01:26:10Z", "author": {"login": "loosebazooka"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO-i-IAFqTM3NzI1NjU2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPS66RgFqTM3ODExMTkwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjU2NTYw", "url": "https://github.com/GoogleContainerTools/jib/pull/2341#pullrequestreview-377256560", "createdAt": "2020-03-18T21:43:16Z", "commit": {"oid": "439d9e9dc78a5fe0ed3b3f9f392617ce3e345e8c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo0MzoxN1rOF4X7rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMTo1MzoxM1rOF4YMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY1NjY4NA==", "bodyText": "temp --> tempConfigFile", "url": "https://github.com/GoogleContainerTools/jib/pull/2341#discussion_r394656684", "createdAt": "2020-03-18T21:43:17Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/UpdateChecker.java", "diffHunk": "@@ -123,11 +127,24 @@ void setDisableUpdateCheck(boolean disableUpdateCheck) {\n         // Generate config file if it doesn't exist\n         ConfigJsonTemplate config = new ConfigJsonTemplate();\n         Files.createDirectories(configDir);\n-        try (OutputStream outputStream = Files.newOutputStream(configFile)) {\n+        Path temp = configDir.resolve(CONFIG_FILENAME + \".tmp\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "439d9e9dc78a5fe0ed3b3f9f392617ce3e345e8c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY1NzE3NA==", "bodyText": "I think we don't need to do this manually. I believe Files.move will do this fallback.", "url": "https://github.com/GoogleContainerTools/jib/pull/2341#discussion_r394657174", "createdAt": "2020-03-18T21:44:22Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/UpdateChecker.java", "diffHunk": "@@ -123,11 +127,24 @@ void setDisableUpdateCheck(boolean disableUpdateCheck) {\n         // Generate config file if it doesn't exist\n         ConfigJsonTemplate config = new ConfigJsonTemplate();\n         Files.createDirectories(configDir);\n-        try (OutputStream outputStream = Files.newOutputStream(configFile)) {\n+        Path temp = configDir.resolve(CONFIG_FILENAME + \".tmp\");\n+        try (OutputStream outputStream = Files.newOutputStream(temp)) {\n           JsonTemplateMapper.writeTo(config, outputStream);\n+          // Attempts an atomic move first, and falls back to non-atomic if the file system does not\n+          // support atomic moves.\n+          try {\n+            Files.move(\n+                temp,\n+                configFile,\n+                StandardCopyOption.ATOMIC_MOVE,\n+                StandardCopyOption.REPLACE_EXISTING);\n+          } catch (AtomicMoveNotSupportedException ignored) {\n+            Files.move(temp, configFile, StandardCopyOption.REPLACE_EXISTING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "439d9e9dc78a5fe0ed3b3f9f392617ce3e345e8c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY2MTA2OQ==", "bodyText": "There's one problem with this. If Files.move fails, the existing and working config file will be deleted. I think we can just remove Files.deleteIfExists() if we are moving the temp file rather than directly replacing the original file. No need to touch the existing one ever. And it's not a big deal not to delete the temp file. It will be extremely rare that moving will fail, and if that happens, the presence of a .tmp file may give more clues, I guess?", "url": "https://github.com/GoogleContainerTools/jib/pull/2341#discussion_r394661069", "createdAt": "2020-03-18T21:53:13Z", "author": {"login": "chanseokoh"}, "path": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/UpdateChecker.java", "diffHunk": "@@ -123,11 +127,24 @@ void setDisableUpdateCheck(boolean disableUpdateCheck) {\n         // Generate config file if it doesn't exist\n         ConfigJsonTemplate config = new ConfigJsonTemplate();\n         Files.createDirectories(configDir);\n-        try (OutputStream outputStream = Files.newOutputStream(configFile)) {\n+        Path temp = configDir.resolve(CONFIG_FILENAME + \".tmp\");\n+        try (OutputStream outputStream = Files.newOutputStream(temp)) {\n           JsonTemplateMapper.writeTo(config, outputStream);\n+          // Attempts an atomic move first, and falls back to non-atomic if the file system does not\n+          // support atomic moves.\n+          try {\n+            Files.move(\n+                temp,\n+                configFile,\n+                StandardCopyOption.ATOMIC_MOVE,\n+                StandardCopyOption.REPLACE_EXISTING);\n+          } catch (AtomicMoveNotSupportedException ignored) {\n+            Files.move(temp, configFile, StandardCopyOption.REPLACE_EXISTING);\n+          }\n         } catch (IOException ex) {\n           // If attempt to generate new config file failed, delete so we can try again next time\n           log.accept(LogEvent.debug(\"Failed to generate global Jib config; \" + ex.getMessage()));\n+          Files.deleteIfExists(temp);\n           Files.deleteIfExists(configFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "439d9e9dc78a5fe0ed3b3f9f392617ce3e345e8c"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3bdc1dd03ca40aea5468facfc8de4e8a443d655", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e3bdc1dd03ca40aea5468facfc8de4e8a443d655", "committedDate": "2020-03-19T19:08:36Z", "message": "For config generation use create and move of temp file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "439d9e9dc78a5fe0ed3b3f9f392617ce3e345e8c", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/439d9e9dc78a5fe0ed3b3f9f392617ce3e345e8c", "committedDate": "2020-03-18T20:14:16Z", "message": "For config generation use create and move of temp file"}, "afterCommit": {"oid": "e3bdc1dd03ca40aea5468facfc8de4e8a443d655", "author": {"user": {"login": "loosebazooka", "name": "Appu"}}, "url": "https://github.com/GoogleContainerTools/jib/commit/e3bdc1dd03ca40aea5468facfc8de4e8a443d655", "committedDate": "2020-03-19T19:08:36Z", "message": "For config generation use create and move of temp file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTExOTA3", "url": "https://github.com/GoogleContainerTools/jib/pull/2341#pullrequestreview-378111907", "createdAt": "2020-03-19T21:37:35Z", "commit": {"oid": "e3bdc1dd03ca40aea5468facfc8de4e8a443d655"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 138, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}