{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjUxMjEy", "number": 2397, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTowNTozNVrODxRYnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0MTozOFrODxSI9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTkxNjQ3OnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTowNTozNVrOGEpbRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNToyNTowNlrOGEqFBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUyNjIxMg==", "bodyText": "I wonder if we need to create some sort of ordering mechanism so like some file manipulation extension can run after a framework extension has populated all the file?", "url": "https://github.com/GoogleContainerTools/jib/pull/2397#discussion_r407526212", "createdAt": "2020-04-13T15:05:35Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -526,6 +533,37 @@ boolean jarRepackagedBySpringBoot() {\n   @Override\n   public JibContainerBuilder runPluginExtensions(JibContainerBuilder jibContainerBuilder)\n       throws JibPluginExtensionException {\n-    return jibContainerBuilder;\n+    return runPluginExtensions(\n+        ServiceLoader.load(JibMavenPluginExtension.class).iterator(), jibContainerBuilder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70f90a8dd6f8dc67e353bc7732c795a0b2bf26d5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUzNjkwMg==", "bodyText": "Good idea. In a follow-up PR, I'll add a new extension configuration option, as I proposed in the internal doc. I think I will be able to enforce ordering with it.", "url": "https://github.com/GoogleContainerTools/jib/pull/2397#discussion_r407536902", "createdAt": "2020-04-13T15:25:06Z", "author": {"login": "chanseokoh"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -526,6 +533,37 @@ boolean jarRepackagedBySpringBoot() {\n   @Override\n   public JibContainerBuilder runPluginExtensions(JibContainerBuilder jibContainerBuilder)\n       throws JibPluginExtensionException {\n-    return jibContainerBuilder;\n+    return runPluginExtensions(\n+        ServiceLoader.load(JibMavenPluginExtension.class).iterator(), jibContainerBuilder);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzUyNjIxMg=="}, "originalCommit": {"oid": "70f90a8dd6f8dc67e353bc7732c795a0b2bf26d5"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDA0MDIzOnYy", "diffSide": "RIGHT", "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0MTozOFrOGEqmwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0MTozOFrOGEqmwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0NTUzNw==", "bodyText": "extension -> extensions", "url": "https://github.com/GoogleContainerTools/jib/pull/2397#discussion_r407545537", "createdAt": "2020-04-13T15:41:38Z", "author": {"login": "loosebazooka"}, "path": "jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/MavenProjectProperties.java", "diffHunk": "@@ -526,6 +533,37 @@ boolean jarRepackagedBySpringBoot() {\n   @Override\n   public JibContainerBuilder runPluginExtensions(JibContainerBuilder jibContainerBuilder)\n       throws JibPluginExtensionException {\n-    return jibContainerBuilder;\n+    return runPluginExtensions(\n+        ServiceLoader.load(JibMavenPluginExtension.class).iterator(), jibContainerBuilder);\n+  }\n+\n+  @VisibleForTesting\n+  JibContainerBuilder runPluginExtensions(\n+      Iterator<JibMavenPluginExtension> services, JibContainerBuilder jibContainerBuilder)\n+      throws JibPluginExtensionException {\n+    if (!services.hasNext()) {\n+      log(LogEvent.debug(\"No Jib plugin extension discovered\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70f90a8dd6f8dc67e353bc7732c795a0b2bf26d5"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 360, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}