{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5Njk1NTg0", "number": 2589, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0MjoxOVrOEQQk3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1ODo0OVrOEQRG-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg0MjUyOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0MjoxOVrOG0T_vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0MjoxOVrOG0T_vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUwNjc0OQ==", "bodyText": "Switch the argument order in all these lines. Don't forget to switch the order in Javdoc as well.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457506749", "createdAt": "2020-07-20T15:42:19Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.\n+   *\n+   * @param os the os value\n+   * @param architecture the architecture value\n+   * @return this\n+   */\n+  public JibContainerBuilder addPlatform(String os, String architecture) {\n+    containerBuildPlanBuilder.addPlatform(os, architecture);\n+    containerConfigurationBuilder.addPlatform(os, architecture);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg3NjYyOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0ODo0NlrOG0UTxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0ODo0NlrOG0UTxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMTg3Ng==", "bodyText": "Let's copy the Javadoc from ContainerBuildPlan.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Adds a platform to the platforms configurations for the container.\n          \n          \n            \n               * Adds a desired image platform (OS and architecture pair). If the base image reference is a\n          \n          \n            \n               * Docker manifest list or an OCI image index, an image builder may select the base image\n          \n          \n            \n               * matching the given platform. If the base image reference is an image manifest, an image\n          \n          \n            \n               * builder may ignore the given platform and use the platform of the base image or may decide to\n          \n          \n            \n               * raise on error.\n          \n          \n            \n               *\n          \n          \n            \n               * <p>Note that a new build plan starts with \"amd64/linux\" as the default platform. If you want\n          \n          \n            \n               * to reset the default platform instead of adding a new one, use {@link #setPlatforms(Set)}.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457511876", "createdAt": "2020-07-20T15:48:46Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg3Nzg4OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0OTowM1rOG0UUhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0OTowM1rOG0UUhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMjA3MQ==", "bodyText": "Let's copy the Javadoc from ContainerBuildPlan.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457512071", "createdAt": "2020-07-20T15:49:03Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.\n+   *\n+   * @param os the os value\n+   * @param architecture the architecture value\n+   * @return this\n+   */\n+  public JibContainerBuilder addPlatform(String os, String architecture) {\n+    containerBuildPlanBuilder.addPlatform(os, architecture);\n+    containerConfigurationBuilder.addPlatform(os, architecture);\n+    return this;\n+  }\n+\n+  /**\n+   * Sets the platforms configurations for the container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg4MzEzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MDowM1rOG0UXog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1NzoyOVrOG0Uvow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMjg2Ng==", "bodyText": "Maybe Sets the desired platforms, a list of {@link Platform} ?", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457512866", "createdAt": "2020-07-20T15:50:03Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxOTAxMQ==", "bodyText": "Done", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457519011", "createdAt": "2020-07-20T15:57:29Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMjg2Ng=="}, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg4NDcyOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MDoyMlrOG0UYog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MDoyMlrOG0UYog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMzEyMg==", "bodyText": "The Javadoc is outdated. Let's copy the once from ContainerBuildPlan.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457513122", "createdAt": "2020-07-20T15:50:22Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg4NTgzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MDozNVrOG0UZeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MDozNVrOG0UZeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxMzMzNg==", "bodyText": "Remove this exception doc.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457513336", "createdAt": "2020-07-20T15:50:35Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg5MjE0OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MTo0M1rOG0UdWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjoxNToxNFrOG0VfMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDMyOQ==", "bodyText": "jib-core uses the Guava Java library, so we can do\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (platforms.isEmpty()) {\n          \n          \n            \n                    throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n          \n          \n            \n                  }\n          \n          \n            \n                  Preconditions.checkArgument(!platforms.isEmpty(), \"platforms set cannot be empty\");", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457514329", "createdAt": "2020-07-20T15:51:43Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzMTE4Ng==", "bodyText": "Makes Sense", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457531186", "createdAt": "2020-07-20T16:15:14Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDMyOQ=="}, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg5MzEzOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MTo1N1rOG0UeBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MTo1N1rOG0UeBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDUwMw==", "bodyText": "outdated Javadoc", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457514503", "createdAt": "2020-07-20T15:51:57Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }\n+      this.platforms = new LinkedHashSet<>(platforms);\n+      return this;\n+    }\n+\n+    /**\n+     * Adds a desired platform (OS and architecture pair). If the base image reference is a Docker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg5NDcwOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MjoxNVrOG0Ue_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1OToxOVrOG0U1ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDc1MA==", "bodyText": "Is it true here as well, that we amd64/linux set by default?", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457514750", "createdAt": "2020-07-20T15:52:15Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMDQ4NQ==", "bodyText": "Yes amd64/linux is already in the platforms list by default when we use addPlatforms", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457520485", "createdAt": "2020-07-20T15:59:19Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/JibContainerBuilder.java", "diffHunk": "@@ -488,6 +489,31 @@ public JibContainerBuilder setCreationTime(Instant creationTime) {\n     return this;\n   }\n \n+  /**\n+   * Adds a platform to the platforms configurations for the container.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNDc1MA=="}, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDkwMjE5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/ContainerConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1MzozNlrOG0UjZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjo0NTo1NVrOG0Wp9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNTg3OQ==", "bodyText": "nit: unnecessary commit", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457515879", "createdAt": "2020-07-20T15:53:36Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/ContainerConfigurationTest.java", "diffHunk": "@@ -34,6 +37,14 @@\n \n   @Test\n   public void testBuilder_nullValues() {\n+    // Platforms list must not be empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU1MDMyNg==", "bodyText": "removed", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457550326", "createdAt": "2020-07-20T16:45:55Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/ContainerConfigurationTest.java", "diffHunk": "@@ -34,6 +37,14 @@\n \n   @Test\n   public void testBuilder_nullValues() {\n+    // Platforms list must not be empty", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNTg3OQ=="}, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDkwMzE5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/ContainerConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1Mzo0NlrOG0Uj7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1Mzo0NlrOG0Uj7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNjAxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testAddPlatform_DuplicatePlatforms() {\n          \n          \n            \n              public void testAddPlatform_duplicatePlatforms() {", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457516014", "createdAt": "2020-07-20T15:53:46Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/ContainerConfigurationTest.java", "diffHunk": "@@ -130,4 +141,16 @@ public void testBuilder_workingDirectory() {\n         ContainerConfiguration.builder().setWorkingDirectory(AbsoluteUnixPath.get(\"/path\")).build();\n     Assert.assertEquals(AbsoluteUnixPath.get(\"/path\"), configuration.getWorkingDirectory());\n   }\n+\n+  @Test\n+  public void testAddPlatform_DuplicatePlatforms() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDkwODgxOnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1NDo1MlrOG0UnUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1NDo1MlrOG0UnUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUxNjg4Mw==", "bodyText": "nit: since platforms is not @Nullable, no need to use Objects.equals():\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return Objects.equals(platforms, otherContainerConfiguration.platforms)\n          \n          \n            \n                return platforms.equals(otherContainerConfiguration.platforms)", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457516883", "createdAt": "2020-07-20T15:54:52Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -359,7 +413,8 @@ public boolean equals(Object other) {\n       return false;\n     }\n     ContainerConfiguration otherContainerConfiguration = (ContainerConfiguration) other;\n-    return creationTime.equals(otherContainerConfiguration.creationTime)\n+    return Objects.equals(platforms, otherContainerConfiguration.platforms)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDkyOTg3OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo1ODo0OVrOG0Uz6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNjoyNjo0MlrOG0V7Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMDEwNQ==", "bodyText": "order", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457520105", "createdAt": "2020-07-20T15:58:49Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }\n+      this.platforms = new LinkedHashSet<>(platforms);\n+      return this;\n+    }\n+\n+    /**\n+     * Adds a desired platform (OS and architecture pair). If the base image reference is a Docker\n+     * manifest list or an OCI image index, must be set so that an image builder can select the\n+     * image matching the given platform. If the base image reference is an image manifest, this\n+     * value is ignored and the platform of the built image follows that of the base image. The\n+     * default is {@code linux amd64 }.\n+     *\n+     * <p>Note that the build plan starts with amd64/linux as the default platform. If you want to\n+     * reset the default platform instead of adding a new one, use setPlatforms()\"\n+     *\n+     * @param os value to select a base image in case of a manifest list\n+     * @param architecture value to select a base image in case of a manifest list\n+     * @return this\n+     */\n+    public Builder addPlatform(String os, String architecture) {\n+      platforms.add(new Platform(os, architecture));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzNDQ3NQ==", "bodyText": "This commit happened before we changed the arch/os order thats why it was so behind.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457534475", "createdAt": "2020-07-20T16:20:32Z", "author": {"login": "louismurerwa"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }\n+      this.platforms = new LinkedHashSet<>(platforms);\n+      return this;\n+    }\n+\n+    /**\n+     * Adds a desired platform (OS and architecture pair). If the base image reference is a Docker\n+     * manifest list or an OCI image index, must be set so that an image builder can select the\n+     * image matching the given platform. If the base image reference is an image manifest, this\n+     * value is ignored and the platform of the built image follows that of the base image. The\n+     * default is {@code linux amd64 }.\n+     *\n+     * <p>Note that the build plan starts with amd64/linux as the default platform. If you want to\n+     * reset the default platform instead of adding a new one, use setPlatforms()\"\n+     *\n+     * @param os value to select a base image in case of a manifest list\n+     * @param architecture value to select a base image in case of a manifest list\n+     * @return this\n+     */\n+    public Builder addPlatform(String os, String architecture) {\n+      platforms.add(new Platform(os, architecture));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMDEwNQ=="}, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzODM5MQ==", "bodyText": "I don't think so. I (as well as GitHub) are looking at the latest branch, and the order I see is os and then architecture.", "url": "https://github.com/GoogleContainerTools/jib/pull/2589#discussion_r457538391", "createdAt": "2020-07-20T16:26:42Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/configuration/ContainerConfiguration.java", "diffHunk": "@@ -52,6 +59,45 @@\n     @Nullable private String user;\n     @Nullable private AbsoluteUnixPath workingDirectory;\n \n+    /**\n+     * Sets a desired platform list ,a list containing (OS and architecture pairs). If the base\n+     * image reference is a Docker manifest list or an OCI image index, must be set so that an image\n+     * builder can select the images matching the given platforms. If the base image reference is an\n+     * image manifest, this value is ignored and the platform of the built image follows that of the\n+     * base image. The default is {@code linux amd64 }.\n+     *\n+     * @param platforms is a list of platform objects to be used to select base images in case of a\n+     *     manifest list\n+     * @return this\n+     * @throws IllegalArgumentException if a user passes in an empty platform list\n+     */\n+    public Builder setPlatforms(Set<Platform> platforms) {\n+      if (platforms.isEmpty()) {\n+        throw new IllegalArgumentException(\"platforms set cannot be empty.\");\n+      }\n+      this.platforms = new LinkedHashSet<>(platforms);\n+      return this;\n+    }\n+\n+    /**\n+     * Adds a desired platform (OS and architecture pair). If the base image reference is a Docker\n+     * manifest list or an OCI image index, must be set so that an image builder can select the\n+     * image matching the given platform. If the base image reference is an image manifest, this\n+     * value is ignored and the platform of the built image follows that of the base image. The\n+     * default is {@code linux amd64 }.\n+     *\n+     * <p>Note that the build plan starts with amd64/linux as the default platform. If you want to\n+     * reset the default platform instead of adding a new one, use setPlatforms()\"\n+     *\n+     * @param os value to select a base image in case of a manifest list\n+     * @param architecture value to select a base image in case of a manifest list\n+     * @return this\n+     */\n+    public Builder addPlatform(String os, String architecture) {\n+      platforms.add(new Platform(os, architecture));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUyMDEwNQ=="}, "originalCommit": {"oid": "ff987734a7ba79cdb7bd458697d91d2618e25c13"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 256, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}