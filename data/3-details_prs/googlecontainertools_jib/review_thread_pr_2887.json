{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2ODYzMzY3", "number": 2887, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxMjowNFrOE2PaKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTozNTo0NVrOE2PzVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzExMDE5OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxMjowNFrOHu9sXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxMjowNFrOHu9sXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNzMyNg==", "bodyText": "I don't think this needs to be a field. Just instantiate as a local variable in call(). I know you'll going to use it in a finally block, so you can create it before try {.", "url": "https://github.com/GoogleContainerTools/jib/pull/2887#discussion_r519007326", "createdAt": "2020-11-06T21:12:04Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -41,13 +42,20 @@\n   @SuppressWarnings(\"NullAway.Init\") // initialized by picocli\n   private Path jarFile;\n \n+  private final SingleThreadedExecutor executor = new SingleThreadedExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89658234b04f6cd589121cca3432f48ef662e0df"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzExMTE1OnYy", "diffSide": "RIGHT", "path": "jib-cli/src/integration-test/JarCommandTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMToxMjoyNVrOHu9s-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTozMDozMFrOHu-JtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNzQ4MA==", "bodyText": "Remove the empty file.", "url": "https://github.com/GoogleContainerTools/jib/pull/2887#discussion_r519007480", "createdAt": "2020-11-06T21:12:25Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/integration-test/JarCommandTest.java", "diffHunk": "@@ -0,0 +1 @@\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89658234b04f6cd589121cca3432f48ef662e0df"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNDgzNw==", "bodyText": "oops, sorry about that", "url": "https://github.com/GoogleContainerTools/jib/pull/2887#discussion_r519014837", "createdAt": "2020-11-06T21:30:30Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/integration-test/JarCommandTest.java", "diffHunk": "@@ -0,0 +1 @@\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAwNzQ4MA=="}, "originalCommit": {"oid": "89658234b04f6cd589121cca3432f48ef662e0df"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzE3NDYwOnYy", "diffSide": "RIGHT", "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMTozNTo0NVrOHu-SFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMjoyMzo0NlrOHu_Ycg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNjk4Mw==", "bodyText": "Probably\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @CommandLine.Spec CommandSpec spec = CommandSpec.create();\n          \n          \n            \n              @CommandLine.Spec protected CommandSpec spec = CommandSpec.create();\n          \n      \n    \n    \n  \n\nI guess it can't be private?", "url": "https://github.com/GoogleContainerTools/jib/pull/2887#discussion_r519016983", "createdAt": "2020-11-06T21:35:45Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -23,13 +23,17 @@\n import com.google.cloud.tools.jib.cli.jar.JarFiles;\n import com.google.cloud.tools.jib.filesystem.TempDirectoryProvider;\n import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.cloud.tools.jib.plugins.common.logging.SingleThreadedExecutor;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.util.concurrent.Callable;\n import picocli.CommandLine;\n+import picocli.CommandLine.Model.CommandSpec;\n \n @CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n public class Jar implements Callable<Integer> {\n+  @CommandLine.Spec CommandSpec spec = CommandSpec.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ff15bb0d29517253fa671d6cc61e47c63bfaad8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxOTY0OA==", "bodyText": "great catch. On second thought, I think it should be private since it's only accessed in this class.", "url": "https://github.com/GoogleContainerTools/jib/pull/2887#discussion_r519019648", "createdAt": "2020-11-06T21:42:17Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -23,13 +23,17 @@\n import com.google.cloud.tools.jib.cli.jar.JarFiles;\n import com.google.cloud.tools.jib.filesystem.TempDirectoryProvider;\n import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.cloud.tools.jib.plugins.common.logging.SingleThreadedExecutor;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.util.concurrent.Callable;\n import picocli.CommandLine;\n+import picocli.CommandLine.Model.CommandSpec;\n \n @CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n public class Jar implements Callable<Integer> {\n+  @CommandLine.Spec CommandSpec spec = CommandSpec.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNjk4Mw=="}, "originalCommit": {"oid": "2ff15bb0d29517253fa671d6cc61e47c63bfaad8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAyMDM0Mg==", "bodyText": "Appu put globalOptions as protected, so probably there's a reason for that. But I'm not sure about CommandSpec. Just do some actual jib jar run to confirm you see correct output.", "url": "https://github.com/GoogleContainerTools/jib/pull/2887#discussion_r519020342", "createdAt": "2020-11-06T21:44:02Z", "author": {"login": "chanseokoh"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -23,13 +23,17 @@\n import com.google.cloud.tools.jib.cli.jar.JarFiles;\n import com.google.cloud.tools.jib.filesystem.TempDirectoryProvider;\n import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.cloud.tools.jib.plugins.common.logging.SingleThreadedExecutor;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.util.concurrent.Callable;\n import picocli.CommandLine;\n+import picocli.CommandLine.Model.CommandSpec;\n \n @CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n public class Jar implements Callable<Integer> {\n+  @CommandLine.Spec CommandSpec spec = CommandSpec.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNjk4Mw=="}, "originalCommit": {"oid": "2ff15bb0d29517253fa671d6cc61e47c63bfaad8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAzNDk5NA==", "bodyText": "Ah good point, running  jib --target=docker://jib-cli-image jar unknown.jar returned the expected output : [ERROR] The file path provided does not exist: unknown.jar. I think it could be okay?", "url": "https://github.com/GoogleContainerTools/jib/pull/2887#discussion_r519034994", "createdAt": "2020-11-06T22:23:46Z", "author": {"login": "mpeddada1"}, "path": "jib-cli/src/main/java/com/google/cloud/tools/jib/cli/cli2/Jar.java", "diffHunk": "@@ -23,13 +23,17 @@\n import com.google.cloud.tools.jib.cli.jar.JarFiles;\n import com.google.cloud.tools.jib.filesystem.TempDirectoryProvider;\n import com.google.cloud.tools.jib.plugins.common.logging.ConsoleLogger;\n+import com.google.cloud.tools.jib.plugins.common.logging.SingleThreadedExecutor;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.util.concurrent.Callable;\n import picocli.CommandLine;\n+import picocli.CommandLine.Model.CommandSpec;\n \n @CommandLine.Command(name = \"jar\", showAtFileInUsageHelp = true, description = \"Containerize a jar\")\n public class Jar implements Callable<Integer> {\n+  @CommandLine.Spec CommandSpec spec = CommandSpec.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTAxNjk4Mw=="}, "originalCommit": {"oid": "2ff15bb0d29517253fa671d6cc61e47c63bfaad8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 25, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}