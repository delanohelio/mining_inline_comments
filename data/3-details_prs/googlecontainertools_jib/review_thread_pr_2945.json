{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNjI5NzQ4", "number": 2945, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTo1MTozN1rOFFxwyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDoyMzo0MVrOFFykKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjAyNTA2OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/Containerizer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTo1MTozN1rOIGdPag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTo1MTozN1rOIGdPag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY0MTQ1MA==", "bodyText": "Actually think I can clean up all this logic and just use Files.createDirectories ? Or just lets the cache writer handle this?", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543641450", "createdAt": "2020-12-15T19:51:37Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/Containerizer.java", "diffHunk": "@@ -312,11 +318,27 @@ Path getBaseImageLayersCacheDirectory() {\n   }\n \n   Path getApplicationLayersCacheDirectory() throws CacheDirectoryCreationException {\n+    return getApplicationLayersCacheDirectory(\n+        () -> Paths.get(System.getProperty(\"java.io.tmpdir\")));\n+  }\n+\n+  @VisibleForTesting\n+  Path getApplicationLayersCacheDirectory(Supplier<Path> tmpDirSupplier)\n+      throws CacheDirectoryCreationException {\n     if (applicationLayersCacheDirectory == null) {\n-      // Uses a temporary directory if application layers cache directory is not set.\n+      // Create a directory in temp if application layers cache directory is not set.\n       try {\n-        applicationLayersCacheDirectory = Files.createTempDirectory(null);\n-        applicationLayersCacheDirectory.toFile().deleteOnExit();\n+        Path systemTmp = tmpDirSupplier.get();\n+        Path jibTempCache = systemTmp.resolve(DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME);\n+        if (Files.exists(jibTempCache)) {\n+          if (!Files.isDirectory(jibTempCache)) {\n+            throw new CacheDirectoryCreationException(\n+                jibTempCache.toString() + \" already exists and is not a directory\");\n+          }\n+        } else {\n+          Files.createDirectory(jibTempCache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93756a987483bf1316ca408058f8546c3e996b08"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjEyMzQ5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/ContainerizerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDoxNToxM1rOIGeJCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDoxNToxM1rOIGeJCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1NjIwMA==", "bodyText": "final", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543656200", "createdAt": "2020-12-15T20:15:13Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/ContainerizerTest.java", "diffHunk": "@@ -19,16 +19,23 @@\n import com.google.cloud.tools.jib.configuration.ImageConfiguration;\n import com.google.common.collect.ImmutableSet;\n import com.google.common.util.concurrent.MoreExecutors;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.nio.file.Paths;\n import java.util.Arrays;\n import java.util.concurrent.ExecutorService;\n import org.junit.Assert;\n+import org.junit.Rule;\n import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n import org.mockito.Mockito;\n \n /** Tests for {@link Containerizer}. */\n public class ContainerizerTest {\n \n+  @Rule public TemporaryFolder temporaryFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bd63a2aa8cd01a886417b5e154926af9a0b58e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjEyODM3OnYy", "diffSide": "RIGHT", "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/ContainerizerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDoxNjozM1rOIGeL5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDoyMjoxN1rOIGeZPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1NjkzMw==", "bodyText": "How about verifying the name in the test?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .resolve(Containerizer.DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME);\n          \n          \n            \n                        .resolve(\"jib-core-application-layers-cache\");", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543656933", "createdAt": "2020-12-15T20:16:33Z", "author": {"login": "chanseokoh"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/ContainerizerTest.java", "diffHunk": "@@ -121,4 +128,15 @@ public void testGetImageConfiguration_tarImage() throws InvalidImageReferenceExc\n     Assert.assertEquals(\"tar/image\", imageConfiguration.getImage().toString());\n     Assert.assertEquals(0, imageConfiguration.getCredentialRetrievers().size());\n   }\n+\n+  @Test\n+  public void testGetApplicationLayersCacheDirectory_defaults()\n+      throws InvalidImageReferenceException, CacheDirectoryCreationException, IOException {\n+    Containerizer containerizer = Containerizer.to(RegistryImage.named(\"registry/image\"));\n+    Path applicationLayersCache = containerizer.getApplicationLayersCacheDirectory();\n+    Path expectedCacheDir =\n+        Paths.get(System.getProperty(\"java.io.tmpdir\"))\n+            .resolve(Containerizer.DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87bd63a2aa8cd01a886417b5e154926af9a0b58e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY2MDM0OQ==", "bodyText": "oh right.", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543660349", "createdAt": "2020-12-15T20:22:17Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/test/java/com/google/cloud/tools/jib/api/ContainerizerTest.java", "diffHunk": "@@ -121,4 +128,15 @@ public void testGetImageConfiguration_tarImage() throws InvalidImageReferenceExc\n     Assert.assertEquals(\"tar/image\", imageConfiguration.getImage().toString());\n     Assert.assertEquals(0, imageConfiguration.getCredentialRetrievers().size());\n   }\n+\n+  @Test\n+  public void testGetApplicationLayersCacheDirectory_defaults()\n+      throws InvalidImageReferenceException, CacheDirectoryCreationException, IOException {\n+    Containerizer containerizer = Containerizer.to(RegistryImage.named(\"registry/image\"));\n+    Path applicationLayersCache = containerizer.getApplicationLayersCacheDirectory();\n+    Path expectedCacheDir =\n+        Paths.get(System.getProperty(\"java.io.tmpdir\"))\n+            .resolve(Containerizer.DEFAULT_APPLICATION_CACHE_DIRECTORY_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1NjkzMw=="}, "originalCommit": {"oid": "87bd63a2aa8cd01a886417b5e154926af9a0b58e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjE1NjU5OnYy", "diffSide": "RIGHT", "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/CacheDirectoryCreationException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDoyMzo0MVrOIGecaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMDoyMzo0MVrOIGecaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY2MTE2Mw==", "bodyText": "actually this change is now unnecessary", "url": "https://github.com/GoogleContainerTools/jib/pull/2945#discussion_r543661163", "createdAt": "2020-12-15T20:23:41Z", "author": {"login": "loosebazooka"}, "path": "jib-core/src/main/java/com/google/cloud/tools/jib/api/CacheDirectoryCreationException.java", "diffHunk": "@@ -24,4 +24,8 @@\n   public CacheDirectoryCreationException(Throwable cause) {\n     super(MESSAGE, cause);\n   }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74813edc74d3978c7fd2edc0aecc5226c87fb24d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4886, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}