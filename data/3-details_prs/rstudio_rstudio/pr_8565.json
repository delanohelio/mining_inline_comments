{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjE3NjA0", "number": 8565, "title": "convert condition messages to UTF-8 when handling in notebook", "bodyText": "Intent\nCloses #8546.\nApproach\nEnsure that condition messages, as captured when notebook mode is active, are converted to UTF-8.\nAlso refactor some of the global condition handling code. Rather than build a string to be executed at the top level, we instead use a regular R function to define the associated call, and then extract the body of that function and execute that at the top level. IMHO, this makes the implementation much easier to maintain and tweak.\nAlso add some helper functions, nativeToUtf8() + utf8ToNative(), to be used in the future when explicit conversion is required.\nQA Notes\nThis should be tested on Windows, in an R Markdown document. First, instruct RStudio to translate messages to Korean with:\nSys.setlocale(locale = \"Korean\")\nSys.setenv(LANGUAGE = \"ko\")\n\nThen, try loading a package and confirm that the output is properly encoded and displayed as Korean:\n\nNote that it is expected here that part of the message is not translated here, as no translation is defined for this part of the message output.\nYou can also test explicitly with message / warning output:\nmsg <- gettextf(\"Attaching package: %s\", \"dplyr\")\nmessage(msg)\nwarning(msg)", "createdAt": "2020-12-08T17:46:22Z", "url": "https://github.com/rstudio/rstudio/pull/8565", "merged": true, "mergeCommit": {"oid": "a4e4d4b6f2645cca2ae23c16b2457989813632a3"}, "closed": true, "closedAt": "2020-12-09T07:04:17Z", "author": {"login": "kevinushey"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj-c-kgH2gAyNTM0NjE3NjA0OjRmYzhiYWE5YTdhMWU3YWY4YWZlZTllMWQ2ZTJiZTJiZmRhY2YzZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkZPzmAH2gAyNTM0NjE3NjA0OjZlYTE1NWI3OTk5MWI1OGZiMGM2NjgzMWJjMWU0MjkzYzQ4ZTU4Yzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4fc8baa9a7a1e7af8afee9e1d6e2be2bfdacf3da", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/4fc8baa9a7a1e7af8afee9e1d6e2be2bfdacf3da", "committedDate": "2020-12-07T23:50:21Z", "message": "convert messages from native encoding to UTF-8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c093a114c27393ad4d263cd7f581d03b9c72324a", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/c093a114c27393ad4d263cd7f581d03b9c72324a", "committedDate": "2020-12-08T00:36:21Z", "message": "convert to UTF-8 earlier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba36f2eec414e597f3c08b0f56b207f7a31569d6", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/ba36f2eec414e597f3c08b0f56b207f7a31569d6", "committedDate": "2020-12-08T06:30:56Z", "message": "refactor notebook condition handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b308a0d2fd5e4c9acbb72041af8b26aefe45a7b", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/9b308a0d2fd5e4c9acbb72041af8b26aefe45a7b", "committedDate": "2020-12-08T17:49:46Z", "message": "fix invocation of disconnect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24e482d5e2fede1b6c7ae0106fe97092e9ee1b97", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/24e482d5e2fede1b6c7ae0106fe97092e9ee1b97", "committedDate": "2020-12-08T17:52:55Z", "message": "maintain consistent namespacing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NDg0MDg2", "url": "https://github.com/rstudio/rstudio/pull/8565#pullrequestreview-547484086", "createdAt": "2020-12-08T17:53:45Z", "commit": {"oid": "24e482d5e2fede1b6c7ae0106fe97092e9ee1b97"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzo1Mzo0NVrOIBtTfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzo1Mzo0NVrOIBtTfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY2MTc1Nw==", "bodyText": "This is really the heart of the fix; the rest of the PR is just me tidying things up along the way to finding this fix ...", "url": "https://github.com/rstudio/rstudio/pull/8565#discussion_r538661757", "createdAt": "2020-12-08T17:53:45Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/rmarkdown/NotebookConditions.cpp", "diffHunk": "@@ -34,7 +38,7 @@ namespace {\n SEXP rs_signalNotebookCondition(SEXP condition, SEXP message)\n {\n    // extract message (make sure we got one)\n-   std::string msg = r::sexp::safeAsString(message, \"\");\n+   std::string msg = r::sexp::asUtf8String(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24e482d5e2fede1b6c7ae0106fe97092e9ee1b97"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzI1OTk3", "url": "https://github.com/rstudio/rstudio/pull/8565#pullrequestreview-547725997", "createdAt": "2020-12-08T23:41:59Z", "commit": {"oid": "24e482d5e2fede1b6c7ae0106fe97092e9ee1b97"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzo0MTo1OVrOIB7cSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMzo0MTo1OVrOIB7cSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg5MzM4NA==", "bodyText": "(1) funcitons => functions\n(2) this is amazing", "url": "https://github.com/rstudio/rstudio/pull/8565#discussion_r538893384", "createdAt": "2020-12-08T23:41:59Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/NotebookConditions.R", "diffHunk": "@@ -0,0 +1,71 @@\n+#\n+# NotebookConditions.R\n+#\n+# Copyright (C) 2020 by RStudio, PBC\n+#\n+# Unless you have received this program directly from RStudio pursuant\n+# to the terms of a commercial license agreement with RStudio, then\n+# this program is licensed to you under the terms of version 3 of the\n+# GNU Affero General Public License. This program is distributed WITHOUT\n+# ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+# AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+#\n+#\n+\n+.rs.addFunction(\"notebookConditions.onWarning\", function(condition)\n+{\n+   prefix <- gettext(\"Warning:\", domain = \"R\")\n+   message <- paste(condition$message, collapse = \"\\n\")\n+   full <- paste(prefix, message)\n+   .Call(\"rs_signalNotebookCondition\", 1L, full, PACKAGE = \"(embedding)\")\n+   invokeRestart(\"muffleWarning\")\n+})\n+\n+.rs.addFunction(\"notebookConditions.onMessage\", function(condition)\n+{\n+   full <- paste(condition$message, collapse = \"\\n\")\n+   .Call(\"rs_signalNotebookCondition\", 0L, full, PACKAGE = \"(embedding)\")\n+   invokeRestart(\"muffleMessage\")\n+})\n+\n+# NOTE: we need to add condition handlers to the top level, but cannot\n+# actually do so if there is an R function context on the stack.\n+# To circumvent this, we use R funcitons to just provide the call object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24e482d5e2fede1b6c7ae0106fe97092e9ee1b97"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dc384d968c3297bcbdf957454e1338e721e5d9c", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/4dc384d968c3297bcbdf957454e1338e721e5d9c", "committedDate": "2020-12-09T07:02:05Z", "message": "comment fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ea155b79991b58fb0c66831bc1e4293c48e58c9", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/6ea155b79991b58fb0c66831bc1e4293c48e58c9", "committedDate": "2020-12-09T07:03:24Z", "message": "update NEWS"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4916, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}