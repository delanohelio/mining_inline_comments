{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MzI0MTEw", "number": 7568, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToxODo0MlrOEXYqaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzoxNzowN1rOEZI4QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTU2Nzc5OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToxODo0MlrOG_JmNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToxODo0MlrOG_JmNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MDcxMA==", "bodyText": "Have you tested this in a production build? GWT obfuscates class names, so you will either need to pass the class name into the setup method at runtime or tell GWT to use a non-obfuscated name.", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r468870710", "createdAt": "2020-08-11T21:18:42Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * virtualscroller.js\n+ *\n+ * Copyright (C) 2020 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+var VirtualScroller;\n+\n+(function () {\n+  \"use strict\";\n+  VirtualScroller = function () {\n+  };\n+\n+  VirtualScroller.prototype = {\n+    setup: function(element) {\n+      if (!element)\n+        return;\n+\n+      //  *** _CONSTANTS ***\n+      this._DEBUG = true;\n+      this._SCROLL_DEBOUNCE_MS = 500;\n+      this._BUCKET_MAX_SIZE = 50;\n+      this._MAX_VISIBLE_BUCKETS = 10;\n+\n+      // we use this style to keep the elements in the DOM for screen readers\n+      this._HIDDEN_STYLE = \"org-rstudio-core-client-theme-res-ThemeStyles-visuallyHidden\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTU2OTU4OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToxOToyMlrOG_Jnaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToxOToyMlrOG_Jnaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTAxOQ==", "bodyText": "Should this be disabled by default?", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r468871019", "createdAt": "2020-08-11T21:19:22Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * virtualscroller.js\n+ *\n+ * Copyright (C) 2020 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+var VirtualScroller;\n+\n+(function () {\n+  \"use strict\";\n+  VirtualScroller = function () {\n+  };\n+\n+  VirtualScroller.prototype = {\n+    setup: function(element) {\n+      if (!element)\n+        return;\n+\n+      //  *** _CONSTANTS ***\n+      this._DEBUG = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTU3NTY1OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToyMToyMVrOG_JrLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMzowMToxOVrOHAgg3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTk4MQ==", "bodyText": "These parameters are probably somewhat machine dependent (i.e. with more hardware you can have more buckets w/o noticeable performance degradation), so it'd be nice if they could be set via an advanced (no UI) option; your call.", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r468871981", "createdAt": "2020-08-11T21:21:21Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * virtualscroller.js\n+ *\n+ * Copyright (C) 2020 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+var VirtualScroller;\n+\n+(function () {\n+  \"use strict\";\n+  VirtualScroller = function () {\n+  };\n+\n+  VirtualScroller.prototype = {\n+    setup: function(element) {\n+      if (!element)\n+        return;\n+\n+      //  *** _CONSTANTS ***\n+      this._DEBUG = true;\n+      this._SCROLL_DEBOUNCE_MS = 500;\n+      this._BUCKET_MAX_SIZE = 50;\n+      this._MAX_VISIBLE_BUCKETS = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxNzExMg==", "bodyText": "I partially also picked this due to it just feeling better, in my opinion, to have a smaller scrollbar and having more fine motor control over what you see in the window. Once the window becomes saturated it's quite difficult to quickly get to the line that you want, it's why I clear in my terminal pretty often.\nI'll file an enhancement to make this customizable though.", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r469617112", "createdAt": "2020-08-13T00:16:20Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * virtualscroller.js\n+ *\n+ * Copyright (C) 2020 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+var VirtualScroller;\n+\n+(function () {\n+  \"use strict\";\n+  VirtualScroller = function () {\n+  };\n+\n+  VirtualScroller.prototype = {\n+    setup: function(element) {\n+      if (!element)\n+        return;\n+\n+      //  *** _CONSTANTS ***\n+      this._DEBUG = true;\n+      this._SCROLL_DEBOUNCE_MS = 500;\n+      this._BUCKET_MAX_SIZE = 50;\n+      this._MAX_VISIBLE_BUCKETS = 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTk4MQ=="}, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI5NDc0OQ==", "bodyText": "There's also interaction with our server-side (I think) console-output limiting logic to consider. For example, try this sequence:\n> for (i in 1:2000) cat(c(i, \"\\n\"))\n1000\n1001\n...\n2000\nNotice that you only see the output from 1000 - 2000 (but still see the original prompt with no indication stuff is missing in between; prior to this change the prompt would have been lost, too).\n> for (i in 2001:4000) cat(c(i, \"\\n\"))\n3000\n3001\n...\n4000\nNow you can scroll back and indeed are seeing > 1000 lines, but these gaps are unexpected, I think.", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r470294749", "createdAt": "2020-08-13T23:01:19Z", "author": {"login": "gtritchie"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * virtualscroller.js\n+ *\n+ * Copyright (C) 2020 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+var VirtualScroller;\n+\n+(function () {\n+  \"use strict\";\n+  VirtualScroller = function () {\n+  };\n+\n+  VirtualScroller.prototype = {\n+    setup: function(element) {\n+      if (!element)\n+        return;\n+\n+      //  *** _CONSTANTS ***\n+      this._DEBUG = true;\n+      this._SCROLL_DEBOUNCE_MS = 500;\n+      this._BUCKET_MAX_SIZE = 50;\n+      this._MAX_VISIBLE_BUCKETS = 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MTk4MQ=="}, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTU5MzAwOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToyNzoxNFrOG_J1_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToyNzoxNFrOG_J1_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NDc1MQ==", "bodyText": "This would need to be removed to make the virtual scroller usable in other panes. Maybe it should be supplied as a callback?", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r468874751", "createdAt": "2020-08-11T21:27:14Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/virtualscroller.js", "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * virtualscroller.js\n+ *\n+ * Copyright (C) 2020 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+var VirtualScroller;\n+\n+(function () {\n+  \"use strict\";\n+  VirtualScroller = function () {\n+  };\n+\n+  VirtualScroller.prototype = {\n+    setup: function(element) {\n+      if (!element)\n+        return;\n+\n+      //  *** _CONSTANTS ***\n+      this._DEBUG = true;\n+      this._SCROLL_DEBOUNCE_MS = 500;\n+      this._BUCKET_MAX_SIZE = 50;\n+      this._MAX_VISIBLE_BUCKETS = 10;\n+\n+      // we use this style to keep the elements in the DOM for screen readers\n+      this._HIDDEN_STYLE = \"org-rstudio-core-client-theme-res-ThemeStyles-visuallyHidden\";\n+\n+      //  *** global vars ***\n+      this.LAST_SCROLL_TIME = 0;\n+      this.INITIALIZED = false;\n+\n+      //  *** instance vars ***\n+      this.scrollerEle = null;\n+      this.consoleEle = element;\n+      this.buckets = [];\n+      this.visibleBuckets = [];\n+\n+      var self = this;\n+\n+      self._createAndAddNewBucket = self._createAndAddNewBucket.bind(self);\n+      self._debug = self._debug.bind(self);\n+      self._getCurBucket = self._getCurBucket.bind(self);\n+      self._hideBucket = self._hideBucket.bind(self);\n+      self._isAtBottomBucket = self._isAtBottomBucket.bind(self);\n+      self._isAtTopBucket = self._isAtTopBucket.bind(self);\n+      self._isBucketHidden = self._isBucketHidden.bind(self);\n+      self._jumpToBottom = self._jumpToBottom.bind(self);\n+      self._moveWindow = self._moveWindow.bind(self);\n+      self._onParentScroll = self._onParentScroll.bind(self);\n+      self._showBucket = self._showBucket.bind(self);\n+      self.append = self.append.bind(self);\n+      self.clear = self.clear.bind(self);\n+      self.setScrollParent = self.setScrollParent.bind(self);\n+\n+      // set up the initial bucket\n+      this.append(document.createElement(\"span\"));\n+\n+      // iterate through all historical elements and put them into buckets\n+      while(element.children.length > 0) {\n+        var child = element.children[0];\n+        element.removeChild(child);\n+        this.append(child);\n+      }\n+\n+      // put the bucket into the console\n+      for (var i = 0; i < this.buckets.length; i++)\n+        this.consoleEle.appendChild(this.buckets[i]);\n+\n+      // traverse up the parents until we find the ace_scroller and attach to it\n+      var ancestor = element.parentElement;\n+      while (!self.scrollerEle && !!ancestor) {\n+        if (ancestor.className.indexOf(\"ace_scroller\") !== -1) {\n+          self.setScrollParent(ancestor);\n+          ancestor = null;\n+        } else {\n+          ancestor = ancestor.parentElement;\n+        }\n+      }\n+\n+      // jump to latest button\n+      this.jumpToLatestButton = document.createElement(\"div\");\n+      this.jumpToLatestButton.classList.add(\"jump-to-latest-console\");\n+      this.jumpToLatestButton.innerText = \"Latest\";\n+      this.jumpToLatestButton.style.display = \"none\";\n+      this.jumpToLatestButton.onclick = function() {\n+        self._jumpToBottom();\n+        self._setJumpToLatestVisible(false);\n+        document.getElementById(\"rstudio_console_output\").focus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTU5ODAzOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMToyOToxMlrOG_J5LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMDoxNzoyN1rOG_3MNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NTU2NQ==", "bodyText": "Nit: VirtualConsole. prefix is unnecessary (here and elsewhere)", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r468875565", "createdAt": "2020-08-11T21:29:12Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "diffHunk": "@@ -75,18 +82,63 @@ public boolean screenReaderEnabled()\n       {\n          return getUserPrefs().enableScreenReader().getValue();\n       }\n+\n+      @Override\n+      public boolean limitConsoleVisible()\n+      {\n+         return getUserPrefs().limitVisibleConsole().getValue();\n+      }\n    }\n \n    @Inject\n    public VirtualConsole(@Assisted Element parent, final Preferences prefs)\n    {\n       prefs_ = prefs;\n       parent_ = parent;\n+\n+      // only load the virtual scroller if enabled in prefs\n+      if (prefs_.limitConsoleVisible() &&\n+          parent_ != null &&\n+          !VirtualConsole.virtualScrollerInitialized_ &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxNzcxNw==", "bodyText": "I really like prefixing it to make it explicit that we're referencing something static but if it's not how we do it in our style guide that's fine.", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r469617717", "createdAt": "2020-08-13T00:17:27Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "diffHunk": "@@ -75,18 +82,63 @@ public boolean screenReaderEnabled()\n       {\n          return getUserPrefs().enableScreenReader().getValue();\n       }\n+\n+      @Override\n+      public boolean limitConsoleVisible()\n+      {\n+         return getUserPrefs().limitVisibleConsole().getValue();\n+      }\n    }\n \n    @Inject\n    public VirtualConsole(@Assisted Element parent, final Preferences prefs)\n    {\n       prefs_ = prefs;\n       parent_ = parent;\n+\n+      // only load the virtual scroller if enabled in prefs\n+      if (prefs_.limitConsoleVisible() &&\n+          parent_ != null &&\n+          !VirtualConsole.virtualScrollerInitialized_ &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NTU2NQ=="}, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTYwOTM0OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMTozMjozNFrOG_J_rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMDoxOTozNlrOG_3SzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NzIzMQ==", "bodyText": "Maybe I'm misreading this, but wouldn't we need one instance of VirtualScrollerNative per VirtualConsole?", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r468877231", "createdAt": "2020-08-11T21:32:34Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "diffHunk": "@@ -698,6 +761,20 @@ public String debugDump()\n       public final SpanElement element;\n    }\n \n+   interface Resources extends ClientBundle\n+   {\n+      @Source(\"./virtualscroller/virtualscroller.js\")\n+      TextResource virtualScrollerCode();\n+   }\n+\n+   private static final Resources RES = GWT.create(Resources.class);\n+\n+   private static final ExternalJavaScriptLoader virtualScrollerLoader_ =\n+      new ExternalJavaScriptLoader(VirtualScrollerResources.INSTANCE.virtualscrollerjs().getSafeUri().asString());\n+   private static VirtualScrollerNative virtualScrollerNative_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxOTQwNA==", "bodyText": "Addressed in the commit I just pushed. Unfortunately just making it an instance variable wasn't an option as the way that VirtualConsole works is frankly kind of broken. A new instance is created pretty much any time you hit enter and there's a lot of cases where it's created with a null parent. I tried to decouple it from Gin but I wasn't able to make a clean break there so I wholly detached VirtualScroller from the VirtualConsole, which I prefer anyway.", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r469619404", "createdAt": "2020-08-13T00:19:36Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "diffHunk": "@@ -698,6 +761,20 @@ public String debugDump()\n       public final SpanElement element;\n    }\n \n+   interface Resources extends ClientBundle\n+   {\n+      @Source(\"./virtualscroller/virtualscroller.js\")\n+      TextResource virtualScrollerCode();\n+   }\n+\n+   private static final Resources RES = GWT.create(Resources.class);\n+\n+   private static final ExternalJavaScriptLoader virtualScrollerLoader_ =\n+      new ExternalJavaScriptLoader(VirtualScrollerResources.INSTANCE.virtualscrollerjs().getSafeUri().asString());\n+   private static VirtualScrollerNative virtualScrollerNative_;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NzIzMQ=="}, "originalCommit": {"oid": "e6fd0a234e26e9870148e5e7d27cdd6399505da5"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODY3NjQxOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/views/ConsolePreferencesPane.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoxMTozMlrOHAfcpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoxMTozMlrOHAfcpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3NzI4NA==", "bodyText": "You can replace this if/else with a single call to restartRequirement.setRestartRequired() (added fairly recently).", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r470277284", "createdAt": "2020-08-13T22:11:32Z", "author": {"login": "gtritchie"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/views/ConsolePreferencesPane.java", "diffHunk": "@@ -103,6 +106,17 @@ public RestartRequirement onApply(UserPrefs prefs)\n          initialHighlightConsoleErrors_ = prefs_.highlightConsoleErrors().getValue();\n          restartRequirement.setRestartRequired();\n       }\n+      if (!restartRequirement.getDesktopRestartRequired() && !restartRequirement.getUiReloadRequired())\n+      {\n+         if (prefs_.limitVisibleConsole().getValue() != initialLimitVisibleConsole_)\n+         {\n+            initialLimitVisibleConsole_ = prefs_.limitVisibleConsole().getValue();\n+            if (Desktop.isDesktop())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa0953ac7466cb4e31d63edaea30913ebcc3134f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODY4NTAwOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoxNDo0MlrOHAfhiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoxNDo0MlrOHAfhiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI3ODUzNg==", "bodyText": "nit, we usually put else on a separate line", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r470278536", "createdAt": "2020-08-13T22:14:42Z", "author": {"login": "gtritchie"}, "path": "src/gwt/src/org/rstudio/core/client/VirtualConsole.java", "diffHunk": "@@ -203,18 +230,17 @@ public Element getParent()\n     */\n    private void appendText(String text, String clazz, boolean forceNewRange)\n    {\n-      Entry <Integer, ClassRange> last = class_.lastEntry();\n+      Entry<Integer, ClassRange> last = class_.lastEntry();\n       ClassRange range = last.getValue();\n       if (!forceNewRange && StringUtil.equals(range.clazz, clazz))\n       {\n          // just append to the existing output stream\n          range.appendRight(text, 0);\n-      }\n-      else\n+      } else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa0953ac7466cb4e31d63edaea30913ebcc3134f"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODcwNDgwOnYy", "diffSide": "RIGHT", "path": "src/gwt/test/org/rstudio/core/client/VirtualConsoleTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoyMjo0M1rOHAftLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoyMjo0M1rOHAftLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4MTUxOQ==", "bodyText": "As discussed elsewhere, be great to have some unit-tests for the virtual scrolling mechanism here and/or in the ConsoleOutputWriteTests.", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r470281519", "createdAt": "2020-08-13T22:22:43Z", "author": {"login": "gtritchie"}, "path": "src/gwt/test/org/rstudio/core/client/VirtualConsoleTests.java", "diffHunk": "@@ -55,7 +55,14 @@ public boolean screenReaderEnabled()\n       {\n          return screenReaderEnabled_;\n       }\n-      \n+\n+      @Override\n+      public boolean limitConsoleVisible()\n+      {\n+         return limitConsoleVisible_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa0953ac7466cb4e31d63edaea30913ebcc3134f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Nzg4MjA4OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/VirtualScrollerManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzowNjoyOFrOHBxaBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzowNjoyOFrOHBxaBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYyMDEwMA==", "bodyText": "nit: missing comment header", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r471620100", "createdAt": "2020-08-17T17:06:28Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/VirtualScrollerManager.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package org.rstudio.core.client.virtualscroller;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa0953ac7466cb4e31d63edaea30913ebcc3134f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Nzk1MzI5OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/VirtualScrollerManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzoxNzowN1rOHByL-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzoxNzowN1rOHByL-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYzMjg4OA==", "bodyText": "Should we clear the loading_ flag here? (doesn't look like it effects correctness but would be consistent?)", "url": "https://github.com/rstudio/rstudio/pull/7568#discussion_r471632888", "createdAt": "2020-08-17T17:17:07Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/core/client/virtualscroller/VirtualScrollerManager.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package org.rstudio.core.client.virtualscroller;\n+\n+import com.google.gwt.core.client.JavaScriptException;\n+\n+import java.util.Date;\n+import java.util.HashMap;\n+import com.google.gwt.dom.client.Element;\n+import org.rstudio.core.client.Debug;\n+import org.rstudio.core.client.ExternalJavaScriptLoader;\n+import org.rstudio.core.client.theme.res.ThemeStyles;\n+\n+public class VirtualScrollerManager\n+{\n+   public static void init()\n+   {\n+      if (!initialized_ && !loading_)\n+      {\n+         scrollers_ = new HashMap<>();\n+         loading_ = true;\n+         virtualScrollerLoader_.addCallback(() -> {\n+            try\n+            {\n+               initialized_ = true;\n+               loading_ = false;\n+            }\n+            catch (JavaScriptException e)\n+            {\n+               // If we get an error initializing the virtualScroller, log\n+               // and no-op the error to continue non-virtualized\n+               Debug.log(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa0953ac7466cb4e31d63edaea30913ebcc3134f"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4265, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}