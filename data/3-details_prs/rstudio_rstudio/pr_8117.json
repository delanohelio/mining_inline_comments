{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Mzg4MjMw", "number": 8117, "title": "Ensure log file gets reopened if needed", "bodyText": "Intent\nFixes #7898.\nEnsure that we are able to log to a file from the server even after we daemonize.\nApproach\nIt's not enough to test the goodbit/state of the output stream because even it doesn't know it's in a bad state until a real write has been attempted. Writing an empty string is not sufficient.\nTo resolve this, each time we write a log to the stream, we check the goodbit on the stream. If the goodbit is not set, we re-open the stream and re-attempt the write operation. Most of the time, the goodbit is good and the stream will not be re-opened.\nQA Notes\nThis issue only affects the rserver process. If the logger for the rserver process is configured as described in #7898, the log should contain more messages than just 20 Oct 2020 00:16:28 [rserver] INFO Reading rserver configuration from /etc/rstudio/rserver.conf, which is the only entry I get prior to the fix. The output you see in the file should be the same (excepting times and barring confguration changes) as the logs you get in syslog when the file logger is not enabled.", "createdAt": "2020-10-20T01:28:22Z", "url": "https://github.com/rstudio/rstudio/pull/8117", "merged": true, "mergeCommit": {"oid": "4f9ba7533396b9f536993842a8a2f5d7cf2066c4"}, "closed": true, "closedAt": "2020-10-20T19:46:49Z", "author": {"login": "MariaSemple"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUNjTlgH2gAyNTA2Mzg4MjMwOjZhMmFlMTQwYmY2YTEzZWYzZDViMGY5NmY4ZjRhM2Q2YjRhYjAxNTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUbhdLAFqTUxMjkzMDc1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a2ae140bf6a13ef3d5b0f96f8f4a3d6b4ab0155", "author": {"user": {"login": "MariaSemple", "name": "Maria Semple"}}, "url": "https://github.com/rstudio/rstudio/commit/6a2ae140bf6a13ef3d5b0f96f8f4a3d6b4ab0155", "committedDate": "2020-10-20T00:23:03Z", "message": "ensure log file gets reopened if needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTMwMDAy", "url": "https://github.com/rstudio/rstudio/pull/8117#pullrequestreview-512930002", "createdAt": "2020-10-20T16:38:44Z", "commit": {"oid": "6a2ae140bf6a13ef3d5b0f96f8f4a3d6b4ab0155"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozODo0NFrOHlHR2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozODo0NFrOHlHR2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3ODYxNw==", "bodyText": "Is there ever a case where we could end up duplicating a message in the log output here? (Is it worth worrying about? Seems like maybe not since this should be a rare error case in theory at least)", "url": "https://github.com/rstudio/rstudio/pull/8117#discussion_r508678617", "createdAt": "2020-10-20T16:38:44Z", "author": {"login": "kevinushey"}, "path": "src/cpp/shared_core/FileLogDestination.cpp", "diffHunk": "@@ -208,18 +208,36 @@ void FileLogDestination::writeLog(LogLevel in_logLevel, const std::string& in_me\n       return;\n \n    // Lock the mutex before attempting to write.\n-   boost::unique_lock<boost::mutex> lock(m_impl->Mutex);\n+   try\n+   {\n+      boost::lock_guard<boost::mutex> lock(m_impl->Mutex);\n \n-   // Open the log file if it's not open. If it fails to open, log nothing.\n-   if (!m_impl->LogOutputStream && !m_impl->openLogFile())\n-      return;\n+      // Open the log file if it's not open. If it fails to open, log nothing.\n+      if (!m_impl->openLogFile())\n+         return;\n \n-   // Rotate the log file if necessary. If it fails to rotate, log nothing.\n-   if (!m_impl->rotateLogFile())\n-      return;\n+      // Rotate the log file if necessary. If it fails to rotate, log nothing.\n+      if (!m_impl->rotateLogFile())\n+         return;\n \n-   (*m_impl->LogOutputStream) << in_message;\n-   m_impl->LogOutputStream->flush();\n+      (*m_impl->LogOutputStream) << in_message;\n+      m_impl->LogOutputStream->flush();\n+\n+      // If the output stream has bad state after writing, it might have been closed. Try re-opening it and writing the\n+      // message again. Often it is not possible to tell that a stream has failed until a write is attempted.\n+      if (!m_impl->LogOutputStream->good())\n+      {\n+         if (!m_impl->openLogFile())\n+            return;\n+\n+         (*m_impl->LogOutputStream) << in_message;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2ae140bf6a13ef3d5b0f96f8f4a3d6b4ab0155"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTMwNDA1", "url": "https://github.com/rstudio/rstudio/pull/8117#pullrequestreview-512930405", "createdAt": "2020-10-20T16:39:14Z", "commit": {"oid": "6a2ae140bf6a13ef3d5b0f96f8f4a3d6b4ab0155"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozOToxNFrOHlHTRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozOToxNFrOHlHTRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3ODk4MA==", "bodyText": "Would it be worth checking if we get another log failure here? Is there anything we can or should do if both attempts to write to the logfile fail?", "url": "https://github.com/rstudio/rstudio/pull/8117#discussion_r508678980", "createdAt": "2020-10-20T16:39:14Z", "author": {"login": "kevinushey"}, "path": "src/cpp/shared_core/FileLogDestination.cpp", "diffHunk": "@@ -208,18 +208,36 @@ void FileLogDestination::writeLog(LogLevel in_logLevel, const std::string& in_me\n       return;\n \n    // Lock the mutex before attempting to write.\n-   boost::unique_lock<boost::mutex> lock(m_impl->Mutex);\n+   try\n+   {\n+      boost::lock_guard<boost::mutex> lock(m_impl->Mutex);\n \n-   // Open the log file if it's not open. If it fails to open, log nothing.\n-   if (!m_impl->LogOutputStream && !m_impl->openLogFile())\n-      return;\n+      // Open the log file if it's not open. If it fails to open, log nothing.\n+      if (!m_impl->openLogFile())\n+         return;\n \n-   // Rotate the log file if necessary. If it fails to rotate, log nothing.\n-   if (!m_impl->rotateLogFile())\n-      return;\n+      // Rotate the log file if necessary. If it fails to rotate, log nothing.\n+      if (!m_impl->rotateLogFile())\n+         return;\n \n-   (*m_impl->LogOutputStream) << in_message;\n-   m_impl->LogOutputStream->flush();\n+      (*m_impl->LogOutputStream) << in_message;\n+      m_impl->LogOutputStream->flush();\n+\n+      // If the output stream has bad state after writing, it might have been closed. Try re-opening it and writing the\n+      // message again. Often it is not possible to tell that a stream has failed until a write is attempted.\n+      if (!m_impl->LogOutputStream->good())\n+      {\n+         if (!m_impl->openLogFile())\n+            return;\n+\n+         (*m_impl->LogOutputStream) << in_message;\n+         m_impl->LogOutputStream->flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a2ae140bf6a13ef3d5b0f96f8f4a3d6b4ab0155"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTMwNzU0", "url": "https://github.com/rstudio/rstudio/pull/8117#pullrequestreview-512930754", "createdAt": "2020-10-20T16:39:42Z", "commit": {"oid": "6a2ae140bf6a13ef3d5b0f96f8f4a3d6b4ab0155"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4938, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}