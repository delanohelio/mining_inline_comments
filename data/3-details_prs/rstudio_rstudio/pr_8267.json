{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MjI3Mjk1", "number": 8267, "title": "Verify connection state of PostgreSQL connection pooled connection and re-establish if necessary", "bodyText": "Intent\nCurrently, database connections are not re-established if they go defunct, such as if the upstream PostgreSQL database stops or due to transient network failure. We should restart these connections automatically.\nSee #8266 for more detail.\nApproach\nWhenever a connection is requested from the pool, quickly check to see if the state is open by running a very simple efficient query. If not, attempt to re-establish this connection, but only once. If we do re-establish the connection, use it instead of the old connection.\nFixes #8266\nQA Notes\nSee #8266", "createdAt": "2020-11-02T17:58:12Z", "url": "https://github.com/rstudio/rstudio/pull/8267", "merged": true, "mergeCommit": {"oid": "9b7772e3d61e2bc159cf7547eafd53126a4476ce"}, "closed": true, "closedAt": "2020-11-05T14:54:52Z", "author": {"login": "kfeinauer"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYoYaSgH2gAyNTE0MjI3Mjk1OmJmNWI0ZjdhOWI3Yzk4YzBiNTkzNzYyYjM3MWJiN2M1Nzc4MDQ5NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZgTRKgFqTUyNDE0OTg3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf5b4f7a9b7c98c0b593762b371bb7c577804964", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/bf5b4f7a9b7c98c0b593762b371bb7c577804964", "committedDate": "2020-11-02T17:54:17Z", "message": "Verify connection state of PostgreSQL connection pooled connection and re-establish if necessary.\n\nThis fixes a bug where restarts of PostgreSQL or transient network failures with the database would\ncause pooled DB connections to fail forever until service restart. This is because SOCI has no\nautomatic retry operation for failed connections.\n\nFixes #8266"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMDk1NTkx", "url": "https://github.com/rstudio/rstudio/pull/8267#pullrequestreview-522095591", "createdAt": "2020-11-02T23:08:29Z", "commit": {"oid": "bf5b4f7a9b7c98c0b593762b371bb7c577804964"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzowODozMFrOHsZc5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzowODozMFrOHsZc5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMxNjM5MQ==", "bodyText": "Two questions here...\n\nDo we want to preserve/log the error which caused us to attempt a reconnect?\nDo we always want to reconnect regardless of the error returned? (i.e. are there some errors which are unrecoverable?)", "url": "https://github.com/rstudio/rstudio/pull/8267#discussion_r516316391", "createdAt": "2020-11-02T23:08:30Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/Database.cpp", "diffHunk": "@@ -563,6 +563,42 @@ std::string PooledConnection::driverName() const\n    return connection_->driverName();\n }\n \n+ConnectionPool::ConnectionPool(const ConnectionOptions& options) :\n+   connectionOptions_(options)\n+{\n+}\n+\n+void ConnectionPool::testAndReconnect(boost::shared_ptr<Connection>& connection)\n+{\n+   // do not test Sqlite connections - there is no backend system to connect to in this case\n+   // so any errors on the file handle itself we do not want to gracefully recover from, as they would\n+   // indicate a very serious programming error\n+   if (connection->driver() == Driver::Sqlite)\n+      return;\n+\n+   // it is possible for connections to go stale (such as if the upstream connection is closed)\n+   // which will prevent it from being usable - we test for this by running a very efficient query\n+   // and checking to make sure that no error has occurred\n+   Error error = connection->executeStr(\"SELECT 1\");\n+   if (!error)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5b4f7a9b7c98c0b593762b371bb7c577804964"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbc0015dd4ab49bb887f12d059d751c243dc8e44", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/bbc0015dd4ab49bb887f12d059d751c243dc8e44", "committedDate": "2020-11-04T15:09:45Z", "message": "Add logging statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzkyNzA2", "url": "https://github.com/rstudio/rstudio/pull/8267#pullrequestreview-523792706", "createdAt": "2020-11-04T22:48:18Z", "commit": {"oid": "bbc0015dd4ab49bb887f12d059d751c243dc8e44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MTQ5ODc3", "url": "https://github.com/rstudio/rstudio/pull/8267#pullrequestreview-524149877", "createdAt": "2020-11-05T11:03:21Z", "commit": {"oid": "bbc0015dd4ab49bb887f12d059d751c243dc8e44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4962, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}