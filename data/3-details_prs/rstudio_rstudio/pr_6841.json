{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDk4ODk2", "number": 6841, "title": "Fix issue with global replace", "bodyText": "Fixes #6819\nThis PR updates the global find and replace code to be fully functional across different encodings and adds additional tests so that this issue will not repeat itself (I plan on adding more but want to get this looked at for 1.3). Replaces in certain languages were only working as regular expression replaces and even then the green highlight wasn't displaying properly. They can now be performed as literal replaces across encodings already supported by RStudio, and the highlights will properly match the outcome.\nI coded this against v1.3-patch so want to merge there first, but believe this should also go into v1.3.", "createdAt": "2020-05-09T02:13:06Z", "url": "https://github.com/rstudio/rstudio/pull/6841", "merged": true, "mergeCommit": {"oid": "2807c023e7d90bb64bad5ab4d0f1669f9a9788a4"}, "closed": true, "closedAt": "2020-05-11T22:52:17Z", "author": {"login": "melissa-barca"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgRy5JAFqTQwOTMwNDgwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgXs8dABqjMzMjUwNjY5MjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzA0ODAy", "url": "https://github.com/rstudio/rstudio/pull/6841#pullrequestreview-409304802", "createdAt": "2020-05-11T15:53:27Z", "commit": {"oid": "881ae4bef167e67455948e0c1fb254b38a2e36fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1MzoyOFrOGTigtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo1NTowNFrOGTilEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MTU1OQ==", "bodyText": "Could this be made more specific so that we have more to go on if it's seen in the wild? E.g.:\n\"Found X matches in line but Y matches in encoded line; skipping replace.\"", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423141559", "createdAt": "2020-05-11T15:53:28Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -780,55 +799,81 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n                const size_t matchSize = matchOff - matchOn;\n                size_t replaceMatchOff = matchOff;\n                Error error;\n-               Replacer replacer(findResults().ignoreCase());\n-               std::string newLine(pLineInfo->decodedContents);\n+               Replacer replacer(encoding_, findResults().ignoreCase());\n+\n+               if (!encoding_.empty())\n+               {\n+                  eMatchOn =\n+                     static_cast<size_t>(eMatchOnArray.getValueAt(static_cast<size_t>(pos)).getInt());\n+                  eMatchOff =\n+                     static_cast<size_t>(eMatchOffArray.getValueAt(static_cast<size_t>(pos)).getInt());\n+               }\n+\n+               // If we found a different number of matches searching the encoded string,\n+               // we shouldn't perform the replace as the expected vs actual results may differ.\n+               if (!encoding_.empty() && eMatchOnArray.getSize() != matchOnArray.getSize())\n+               {\n+                  core::Error error(\n+                     errc::findCategory(),\n+                     errc::RegexError,\n+                     \"Could not perform replace due to encoding issue.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881ae4bef167e67455948e0c1fb254b38a2e36fc"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0MjY3Mw==", "bodyText": "Do we need this commented code? (feels like it should just be removed)", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423142673", "createdAt": "2020-05-11T15:55:04Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1643,24 +1752,25 @@ core::Error Replacer::completeReplace(const boost::regex& searchRegex,\n       return error;\n    }\n \n-   temp.insert(0, pLine->substr(0, matchOn));\n-   std::string endOfString = pLine->substr(matchOff).c_str();\n-   size_t replaceMatchOff;\n-   if (endOfString.empty())\n-      replaceMatchOff = temp.length();\n-   else\n-      replaceMatchOff = temp.find(endOfString);\n+   newLine.insert(0, begin);\n+   *pReplaceMatchOff = newLine.length() - end.length();\n+   *pLine = newLine;\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881ae4bef167e67455948e0c1fb254b38a2e36fc"}, "originalPosition": 389}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDQxMjk3", "url": "https://github.com/rstudio/rstudio/pull/6841#pullrequestreview-409441297", "createdAt": "2020-05-11T18:52:34Z", "commit": {"oid": "ecaa82f4e428ed6cee33e885c543e3dd76063e03"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecaa82f4e428ed6cee33e885c543e3dd76063e03", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/ecaa82f4e428ed6cee33e885c543e3dd76063e03", "committedDate": "2020-05-11T16:40:43Z", "message": "remove commented code, make error more specific"}, "afterCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/2fea4495a87598270f427f383ecc1a60d153b10f", "committedDate": "2020-05-11T19:29:56Z", "message": "when performing a global replace, encode lines with their original encoding before performing the\nreplace, clean up preview replace logic, make global replace functional across supported encodings,\nand add encoding unit tests."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDk1Nzg2", "url": "https://github.com/rstudio/rstudio/pull/6841#pullrequestreview-409495786", "createdAt": "2020-05-11T20:14:12Z", "commit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxNDoxM1rOGTrsUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozMzowOVrOGTsUGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTk4Ng==", "bodyText": "I think these string literals should have a comment explaining what they mean/where they come from.", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423291986", "createdAt": "2020-05-11T20:14:13Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.\n+\n+      const char* inputPos = pEncodedLine->c_str();\n+      const char* end = inputPos + pEncodedLine->size();\n+      std::size_t charactersProcessed = 0;\n+      boost::cmatch match;\n+      std::string cleanLine;\n+\n+      while (regex_utils::search(inputPos, match, getColorEncodingRegex(findResults().gitFlag())))\n+      {\n+         std::string matchedString(inputPos, inputPos + match.position());\n+         inputPos += match.position() + match.length();\n+         \n+         cleanLine.append(matchedString);\n+\n+         charactersProcessed += matchedString.size();\n+   \n+         if ((match.size() > 2 && match[2] == \"1\" && findResults().gitFlag()) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5Mjk4MA==", "bodyText": "Why do we put them into pMatchOn and pMatchOff? Are we removing the color encodings or just keeping track of them?", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423292980", "createdAt": "2020-05-11T20:16:04Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -741,6 +719,38 @@ class GrepOperation : public boost::enable_shared_from_this<GrepOperation>\n       return error;\n    }\n \n+   void cleanLineAndGetMatches(std::string* pEncodedLine,\n+                               json::Array* pMatchOn, json::Array* pMatchOff)\n+   {\n+      // The incoming string is assumed to have color encodings from the initial grep command.\n+      // These encodings are parsed out and their positions are placed in pMatchOn and pMatchOff.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMTczMA==", "bodyText": "Is it not possible to determine the encoded status from the encoding_ member when the Replacer  is constructed?", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423301730", "createdAt": "2020-05-11T20:32:15Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1620,15 +1669,75 @@ boost::regex getColorEncodingRegex(bool isGitGrep)\n    return regex;\n }\n \n+\n+Error Replacer::replacePreview(const size_t dMatchOn, const size_t dMatchOff,\n+                               size_t eMatchOn, size_t eMatchOff,\n+                               std::string* pEncodedLine, std::string* pDecodedLine,\n+                               size_t* pReplaceMatchOff) const\n+{\n+   // if we're not encoded, we can avoid some logic\n+   bool encoded = true;\n+   if (eMatchOn == 0 && eMatchOff == 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 308}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjE3MA==", "bodyText": "Should the encoding be the second parameter with a default value of \"\"?", "url": "https://github.com/rstudio/rstudio/pull/6841#discussion_r423302170", "createdAt": "2020-05-11T20:33:09Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFindTests.cpp", "diffHunk": "@@ -99,19 +99,52 @@ TEST_CASE(\"SessionFind\")\n       std::string line(kRegexLine);\n       size_t replaceMatchOff;\n \n-      Replacer replacer(false);\n+      Replacer replacer(\"\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fea4495a87598270f427f383ecc1a60d153b10f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTgxMzE2", "url": "https://github.com/rstudio/rstudio/pull/6841#pullrequestreview-409581316", "createdAt": "2020-05-11T22:41:39Z", "commit": {"oid": "92547205ee4a728491aec8d712d8f76df9e92279"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0db708d97788d883b9f706e6fe57708276fc48a", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/b0db708d97788d883b9f706e6fe57708276fc48a", "committedDate": "2020-05-11T22:48:22Z", "message": "when performing a global replace, encode lines with their original encoding before performing the\nreplace, clean up preview replace logic, make global replace functional across supported encodings,\nand add encoding unit tests."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92547205ee4a728491aec8d712d8f76df9e92279", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/92547205ee4a728491aec8d712d8f76df9e92279", "committedDate": "2020-05-11T22:19:55Z", "message": "Add comments, remove unnecesary logic, add default value for Replacer's encoding"}, "afterCommit": {"oid": "b0db708d97788d883b9f706e6fe57708276fc48a", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/b0db708d97788d883b9f706e6fe57708276fc48a", "committedDate": "2020-05-11T22:48:22Z", "message": "when performing a global replace, encode lines with their original encoding before performing the\nreplace, clean up preview replace logic, make global replace functional across supported encodings,\nand add encoding unit tests."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 250, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}