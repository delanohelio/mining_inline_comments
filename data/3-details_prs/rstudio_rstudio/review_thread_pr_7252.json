{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNDA5NTg4", "number": 7252, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODowOToxN1rOELytLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjoyMjoxM1rOEMQ2yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODAwNTU3OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/command/AppCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODowOToxN1rOGth9mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODowOToxN1rOGth9mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM5NTU0NA==", "bodyText": "Nit: formatting, { should be on its own line", "url": "https://github.com/rstudio/rstudio/pull/7252#discussion_r450395544", "createdAt": "2020-07-06T18:09:17Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/command/AppCommand.java", "diffHunk": "@@ -100,19 +114,79 @@ public void onVisibleChanged(AppCommand command)\n          parentToolbar_.invalidateSeparators();\n       }\n \n-      private final AppCommand command_;\n+      protected final AppCommand command_;\n       private boolean synced_ = true;\n-      private HandlerRegistration handlerReg_;\n-      private HandlerRegistration handlerReg2_;\n-      private Toolbar parentToolbar_;\n+      protected HandlerRegistration handlerReg_;\n+      protected HandlerRegistration handlerReg2_;\n+      protected Toolbar parentToolbar_;\n+   }\n+\n+   private class CommandSourceColumnToolbarButton extends CommandToolbarButton\n+   {\n+      public CommandSourceColumnToolbarButton(String buttonLabel,\n+                                              String buttonTitle,\n+                                              ImageResourceProvider imageResourceProvider,\n+                                              ClickHandler clickHandler,\n+                                              AppCommand command,\n+                                              SourceColumn column)     {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODA0MTgyOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/command/AppCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMDo0NVrOGtiTsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyMDo0NVrOGtiTsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwMTIwMw==", "bodyText": "Instead of keeping track of each registration, use a HandlerRegistrations to remember them and then unload them all at once. https://github.com/rstudio/rstudio/blob/master/src/gwt/src/org/rstudio/core/client/HandlerRegistrations.java", "url": "https://github.com/rstudio/rstudio/pull/7252#discussion_r450401203", "createdAt": "2020-07-06T18:20:45Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/command/AppCommand.java", "diffHunk": "@@ -100,19 +114,79 @@ public void onVisibleChanged(AppCommand command)\n          parentToolbar_.invalidateSeparators();\n       }\n \n-      private final AppCommand command_;\n+      protected final AppCommand command_;\n       private boolean synced_ = true;\n-      private HandlerRegistration handlerReg_;\n-      private HandlerRegistration handlerReg2_;\n-      private Toolbar parentToolbar_;\n+      protected HandlerRegistration handlerReg_;\n+      protected HandlerRegistration handlerReg2_;\n+      protected Toolbar parentToolbar_;\n+   }\n+\n+   private class CommandSourceColumnToolbarButton extends CommandToolbarButton\n+   {\n+      public CommandSourceColumnToolbarButton(String buttonLabel,\n+                                              String buttonTitle,\n+                                              ImageResourceProvider imageResourceProvider,\n+                                              ClickHandler clickHandler,\n+                                              AppCommand command,\n+                                              SourceColumn column)     {\n+         super(buttonLabel, buttonTitle, imageResourceProvider, clickHandler, command, false);\n+         column_ = column;\n+      }\n+\n+      @Override\n+      protected void onAttach()\n+      {\n+         super.onAttach();\n+\n+         handlerReg_ = command_.addEnabledChangedHandler(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODA2MDk0OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/command/AppCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyNjozMFrOGtifXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyNjozMFrOGtifXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwNDE4OQ==", "bodyText": "It feels a little weird that the AppCommand knows so much about source columns (these concepts should generally not be coupled except where necessary). What do you think about moving the source column bits into a separate package? You can could something like a SourceColumnCommand which wraps an AppCommand and adds the ability to generate the more contextual enable/disable states.", "url": "https://github.com/rstudio/rstudio/pull/7252#discussion_r450404189", "createdAt": "2020-07-06T18:26:30Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/command/AppCommand.java", "diffHunk": "@@ -100,19 +114,79 @@ public void onVisibleChanged(AppCommand command)\n          parentToolbar_.invalidateSeparators();\n       }\n \n-      private final AppCommand command_;\n+      protected final AppCommand command_;\n       private boolean synced_ = true;\n-      private HandlerRegistration handlerReg_;\n-      private HandlerRegistration handlerReg2_;\n-      private Toolbar parentToolbar_;\n+      protected HandlerRegistration handlerReg_;\n+      protected HandlerRegistration handlerReg2_;\n+      protected Toolbar parentToolbar_;\n+   }\n+\n+   private class CommandSourceColumnToolbarButton extends CommandToolbarButton", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f535ced4b6e7e6d9d8e2aebec3870bddca7fe12a"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjg1MjYyOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceColumnManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0NzowNVrOGuQyRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjoyNzozMVrOGuRylg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2MjY5NQ==", "bodyText": "Testing JavaScript objects for equality has a bunch of weird edge cases so I'd recommend avoiding it. For example the object could be cloned and the clone won't match, but they'll look like the same object in the debugger so it won't be obvious WHY they don't match!\nHow about storing sourceAppCommands_ as a HashMap, using the command ID (from command.getId()) plus the column name as a key? Then lookups will be faster, plus identity will be more reliable as you'll just need to check for existence in the map.", "url": "https://github.com/rstudio/rstudio/pull/7252#discussion_r451162695", "createdAt": "2020-07-07T21:47:05Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceColumnManager.java", "diffHunk": "@@ -1934,8 +1982,24 @@ public void initVimCommands()\n       vimCommands_.addStarRegister();\n    }\n \n+   public SourceAppCommand getSourceCommand(AppCommand command, SourceColumn column)\n+   {\n+      // check if we've already create a SourceAppCommand for this command\n+      for (SourceAppCommand cmd : sourceAppCommands_)\n+      {\n+         if (cmd.getCommand() == command &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1d2616901904b87ab2236dc74b38c1ed966fd06"}, "originalPosition": 319}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3OTE1OA==", "bodyText": "Thank you! I've implemented the update \ud83d\udc4d", "url": "https://github.com/rstudio/rstudio/pull/7252#discussion_r451179158", "createdAt": "2020-07-07T22:27:31Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourceColumnManager.java", "diffHunk": "@@ -1934,8 +1982,24 @@ public void initVimCommands()\n       vimCommands_.addStarRegister();\n    }\n \n+   public SourceAppCommand getSourceCommand(AppCommand command, SourceColumn column)\n+   {\n+      // check if we've already create a SourceAppCommand for this command\n+      for (SourceAppCommand cmd : sourceAppCommands_)\n+      {\n+         if (cmd.getCommand() == command &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2MjY5NQ=="}, "originalCommit": {"oid": "f1d2616901904b87ab2236dc74b38c1ed966fd06"}, "originalPosition": 319}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjk0NTM3OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourcePane.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjoyMjoxM1rOGuRqlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMjozODo0MFrOGuSCFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3NzEwOQ==", "bodyText": "Super-ultra-nitpicky: There are a bunch of methods in this class that are missing @Override.", "url": "https://github.com/rstudio/rstudio/pull/7252#discussion_r451177109", "createdAt": "2020-07-07T22:22:13Z", "author": {"login": "gtritchie"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourcePane.java", "diffHunk": "@@ -242,6 +242,7 @@ public void onResize()\n       manageChevronVisibility();\n    }\n \n+   @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1d2616901904b87ab2236dc74b38c1ed966fd06"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE4MzEyNQ==", "bodyText": "Thanks, I added them in \ud83d\udc4d", "url": "https://github.com/rstudio/rstudio/pull/7252#discussion_r451183125", "createdAt": "2020-07-07T22:38:40Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/SourcePane.java", "diffHunk": "@@ -242,6 +242,7 @@ public void onResize()\n       manageChevronVisibility();\n    }\n \n+   @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE3NzEwOQ=="}, "originalCommit": {"oid": "f1d2616901904b87ab2236dc74b38c1ed966fd06"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4296, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}