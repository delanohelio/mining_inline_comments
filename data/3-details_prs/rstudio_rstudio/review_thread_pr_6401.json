{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzODM5Nzgz", "number": 6401, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoyOTo1OVrODlOfdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozMTowMVrODlOgmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzYxMzM1OnYy", "diffSide": "RIGHT", "path": "src/cpp/desktop/DesktopWebProfile.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoyOTo1OVrOFyACIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjoyOTo1OVrOFyACIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3MzY2Nw==", "bodyText": "Don't we need to ensure that a different WebProfile object is constructed for different base urls to ensure the interceptor code (for setting the shared secret header) works properly? This seems like that would break that.", "url": "https://github.com/rstudio/rstudio/pull/6401#discussion_r387973667", "createdAt": "2020-03-04T22:29:59Z", "author": {"login": "kfeinauer"}, "path": "src/cpp/desktop/DesktopWebProfile.cpp", "diffHunk": "@@ -66,9 +66,23 @@ class Interceptor : public QWebEngineUrlRequestInterceptor\n \n } // end anonymous namespace\n \n-WebProfile::WebProfile(const QUrl& baseUrl, QObject* parent)\n-   : QWebEngineProfile(QString::fromUtf8(\"rstudio-desktop\"), parent)\n+WebProfile* WebProfile::getInstance(const QUrl &baseUrl)\n {\n+   static WebProfile* instance = new WebProfile(baseUrl);\n+   return instance;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d1c1fe13ce7b31be1ffde30dc155c67df57ff2e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzYxNjI3OnYy", "diffSide": "RIGHT", "path": "src/cpp/desktop/DesktopWebProfile.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjozMTowMVrOFyAD7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo1MzowM1rOFyAmgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NDEyNg==", "bodyText": "Given this code here, can we live without the static one-per-process WebProfile?", "url": "https://github.com/rstudio/rstudio/pull/6401#discussion_r387974126", "createdAt": "2020-03-04T22:31:01Z", "author": {"login": "kfeinauer"}, "path": "src/cpp/desktop/DesktopWebProfile.cpp", "diffHunk": "@@ -66,9 +66,23 @@ class Interceptor : public QWebEngineUrlRequestInterceptor\n \n } // end anonymous namespace\n \n-WebProfile::WebProfile(const QUrl& baseUrl, QObject* parent)\n-   : QWebEngineProfile(QString::fromUtf8(\"rstudio-desktop\"), parent)\n+WebProfile* WebProfile::getInstance(const QUrl &baseUrl)\n {\n+   static WebProfile* instance = new WebProfile(baseUrl);\n+   return instance;\n+}\n+\n+WebProfile::WebProfile(const QUrl& baseUrl)\n+   : QWebEngineProfile(QStringLiteral(\"rstudio\"))\n+{\n+   // force an in-memory cache of web resources\n+   // otherwise, multiple windows / pages attempting to access\n+   // or mutate the disk cache at the same time can cause\n+   // data corruption to occur\n+   //\n+   // https://github.com/rstudio/rstudio/issues/6201\n+   setHttpCacheType(QWebEngineProfile::MemoryHttpCache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d1c1fe13ce7b31be1ffde30dc155c67df57ff2e"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4Mjk3Nw==", "bodyText": "Looks like you're correct. I've updated the PR (so now this is the only new code)", "url": "https://github.com/rstudio/rstudio/pull/6401#discussion_r387982977", "createdAt": "2020-03-04T22:53:03Z", "author": {"login": "kevinushey"}, "path": "src/cpp/desktop/DesktopWebProfile.cpp", "diffHunk": "@@ -66,9 +66,23 @@ class Interceptor : public QWebEngineUrlRequestInterceptor\n \n } // end anonymous namespace\n \n-WebProfile::WebProfile(const QUrl& baseUrl, QObject* parent)\n-   : QWebEngineProfile(QString::fromUtf8(\"rstudio-desktop\"), parent)\n+WebProfile* WebProfile::getInstance(const QUrl &baseUrl)\n {\n+   static WebProfile* instance = new WebProfile(baseUrl);\n+   return instance;\n+}\n+\n+WebProfile::WebProfile(const QUrl& baseUrl)\n+   : QWebEngineProfile(QStringLiteral(\"rstudio\"))\n+{\n+   // force an in-memory cache of web resources\n+   // otherwise, multiple windows / pages attempting to access\n+   // or mutate the disk cache at the same time can cause\n+   // data corruption to occur\n+   //\n+   // https://github.com/rstudio/rstudio/issues/6201\n+   setHttpCacheType(QWebEngineProfile::MemoryHttpCache);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk3NDEyNg=="}, "originalCommit": {"oid": "1d1c1fe13ce7b31be1ffde30dc155c67df57ff2e"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3978, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}