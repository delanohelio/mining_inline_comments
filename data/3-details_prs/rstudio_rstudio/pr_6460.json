{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDM3MzMy", "number": 6460, "title": "Make openssl verification work on windows by importing windows cert store certificates", "bodyText": "OpenSSL does not support the use of the Windows certificate store out-of-the-box, so some additional programming is needed to get this working.\nFixes rstudio/rstudio-pro#1522", "createdAt": "2020-03-12T19:42:03Z", "url": "https://github.com/rstudio/rstudio/pull/6460", "merged": true, "mergeCommit": {"oid": "747439d6a583f336e224eb4d1fb0bbfe17e8d0a2"}, "closed": true, "closedAt": "2020-03-13T17:21:36Z", "author": {"login": "kfeinauer"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNBDRzgH2gAyMzg3NDM3MzMyOmMyMmVlOWZmZjhmN2JiNWZjODg1YmZhYzZmZDQ1MWI2ZWI0Zjc0YjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNTot1AH2gAyMzg3NDM3MzMyOjA5Njg4ZTA1MmQ0MjhjNTUzNDFmYmM4ZDYzMzcwZjMwNzdjYjExZTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c22ee9fff8f7bb5fc885bfac6fd451b6eb4f74b3", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/c22ee9fff8f7bb5fc885bfac6fd451b6eb4f74b3", "committedDate": "2020-03-12T19:40:35Z", "message": "Make openssl verification work on windows by importing windows cert store certificates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTI3NTQ0", "url": "https://github.com/rstudio/rstudio/pull/6460#pullrequestreview-373927544", "createdAt": "2020-03-12T21:53:14Z", "commit": {"oid": "c22ee9fff8f7bb5fc885bfac6fd451b6eb4f74b3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMTo1MzoxNFrOF1xKhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMjoxMjoxM1rOF1xvtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkyNDM1Ng==", "bodyText": "If I understand correctly, this line is un-necessary. Given the docs here (https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-certenumcertificatesinstore):\n\nThe returned pointer is freed when passed as the pPrevCertContext parameter on a subsequent call. Otherwise, the pointer must be freed by calling CertFreeCertificateContext. A non-NULL pPrevCertContext passed to CertEnumCertificatesInStore is always freed even for an error.\n\nSo calling CertEnumCertificatesInStore() as above should automatically free these contexts.", "url": "https://github.com/rstudio/rstudio/pull/6460#discussion_r391924356", "createdAt": "2020-03-12T21:53:14Z", "author": {"login": "kevinushey"}, "path": "src/cpp/core/include/core/http/TcpIpAsyncClientSsl.hpp", "diffHunk": "@@ -154,6 +183,56 @@ class TcpIpAsyncClientSsl\n       return util::isSslShutdownError(ec);\n    }\n \n+#ifdef _WIN32\n+   struct WindowsCertificateStore\n+   {\n+      WindowsCertificateStore()\n+      {\n+         // load certificates from important stores\n+         LPCSTR stores[] = {\"ROOT\", \"CA\"};\n+         for (const LPCSTR& store : stores)\n+         {\n+             HCERTSTORE hStore = nullptr;\n+             hStore = CertOpenSystemStore(NULL, store);\n+             if (!hStore)\n+             {\n+                LOG_ERROR_MESSAGE(\"Could not open certificate store\");\n+                return;\n+             }\n+\n+             PCCERT_CONTEXT pContext = nullptr;\n+             while (pContext = CertEnumCertificatesInStore(hStore, pContext))\n+             {\n+                // convert the certificate returned from the Windows store into a\n+                // format that OpenSSL can understand\n+                X509* x509 = nullptr;\n+                x509 = d2i_X509(nullptr,\n+                                const_cast<const unsigned char**>(\n+                                   reinterpret_cast<const unsigned char* const*>(&pContext->pbCertEncoded)),\n+                                pContext->cbCertEncoded);\n+                if (x509)\n+                   certificates.push_back(x509);\n+             }\n+\n+             CertFreeCertificateContext(pContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c22ee9fff8f7bb5fc885bfac6fd451b6eb4f74b3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkzMDA0OQ==", "bodyText": "One thing that's not clear to me -- does this need to be aware of how the certificate is encoded? (that is, dwCertEncodingType).", "url": "https://github.com/rstudio/rstudio/pull/6460#discussion_r391930049", "createdAt": "2020-03-12T22:01:59Z", "author": {"login": "kevinushey"}, "path": "src/cpp/core/include/core/http/TcpIpAsyncClientSsl.hpp", "diffHunk": "@@ -154,6 +183,56 @@ class TcpIpAsyncClientSsl\n       return util::isSslShutdownError(ec);\n    }\n \n+#ifdef _WIN32\n+   struct WindowsCertificateStore\n+   {\n+      WindowsCertificateStore()\n+      {\n+         // load certificates from important stores\n+         LPCSTR stores[] = {\"ROOT\", \"CA\"};\n+         for (const LPCSTR& store : stores)\n+         {\n+             HCERTSTORE hStore = nullptr;\n+             hStore = CertOpenSystemStore(NULL, store);\n+             if (!hStore)\n+             {\n+                LOG_ERROR_MESSAGE(\"Could not open certificate store\");\n+                return;\n+             }\n+\n+             PCCERT_CONTEXT pContext = nullptr;\n+             while (pContext = CertEnumCertificatesInStore(hStore, pContext))\n+             {\n+                // convert the certificate returned from the Windows store into a\n+                // format that OpenSSL can understand\n+                X509* x509 = nullptr;\n+                x509 = d2i_X509(nullptr,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c22ee9fff8f7bb5fc885bfac6fd451b6eb4f74b3"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkzMzg3Nw==", "bodyText": "Also from https://linux.die.net/man/3/d2i_x509:\n\nIf the call is successful *in is incremented to the byte following the parsed data.\n\nGiven that it tries to mutate this argument I wonder if we should copy it (pbCertEncoded) to our own temporary variable just to be safe? This also gives us an opportunity to case it as appropriate.", "url": "https://github.com/rstudio/rstudio/pull/6460#discussion_r391933877", "createdAt": "2020-03-12T22:12:13Z", "author": {"login": "kevinushey"}, "path": "src/cpp/core/include/core/http/TcpIpAsyncClientSsl.hpp", "diffHunk": "@@ -154,6 +183,56 @@ class TcpIpAsyncClientSsl\n       return util::isSslShutdownError(ec);\n    }\n \n+#ifdef _WIN32\n+   struct WindowsCertificateStore\n+   {\n+      WindowsCertificateStore()\n+      {\n+         // load certificates from important stores\n+         LPCSTR stores[] = {\"ROOT\", \"CA\"};\n+         for (const LPCSTR& store : stores)\n+         {\n+             HCERTSTORE hStore = nullptr;\n+             hStore = CertOpenSystemStore(NULL, store);\n+             if (!hStore)\n+             {\n+                LOG_ERROR_MESSAGE(\"Could not open certificate store\");\n+                return;\n+             }\n+\n+             PCCERT_CONTEXT pContext = nullptr;\n+             while (pContext = CertEnumCertificatesInStore(hStore, pContext))\n+             {\n+                // convert the certificate returned from the Windows store into a\n+                // format that OpenSSL can understand\n+                X509* x509 = nullptr;\n+                x509 = d2i_X509(nullptr,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTkzMDA0OQ=="}, "originalCommit": {"oid": "c22ee9fff8f7bb5fc885bfac6fd451b6eb4f74b3"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57a0b588dcd4fa1a6bd19c37391f516dc184035c", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/57a0b588dcd4fa1a6bd19c37391f516dc184035c", "committedDate": "2020-03-13T15:05:04Z", "message": "Code review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDM0NDgz", "url": "https://github.com/rstudio/rstudio/pull/6460#pullrequestreview-374434483", "createdAt": "2020-03-13T16:19:19Z", "commit": {"oid": "57a0b588dcd4fa1a6bd19c37391f516dc184035c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDU1NTAy", "url": "https://github.com/rstudio/rstudio/pull/6460#pullrequestreview-374455502", "createdAt": "2020-03-13T16:46:43Z", "commit": {"oid": "57a0b588dcd4fa1a6bd19c37391f516dc184035c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo0Njo0M1rOF2K_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo0ODowNlrOF2LDcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0NzYxMQ==", "bodyText": "If there are a bunch of certificates in the Windows store and a couple fail to be added to the OpenSSL cert store, will the logs indicate which ones? (looks like they won't unless it's in the error object somewhere that I missed)", "url": "https://github.com/rstudio/rstudio/pull/6460#discussion_r392347611", "createdAt": "2020-03-13T16:46:43Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/include/core/http/TcpIpAsyncClientSsl.hpp", "diffHunk": "@@ -62,6 +69,28 @@ class TcpIpAsyncClientSsl\n             if (ec)\n                LOG_ERROR(Error(ec, ERROR_LOCATION));\n          }\n+\n+      #ifdef _WIN32\n+         // on Windows, OpenSSL does not support loading certificates from the Windows certificate store\n+         // because of this, each time we need to verify certificates, we initialize\n+         // all certificates individually with OpenSSL\n+         const WindowsCertificateStore& certStore = getCertificateStore();\n+         for (const auto& cert : certStore.certificates)\n+         {\n+            if (X509_STORE* store = SSL_CTX_get_cert_store(sslContext_.native_handle()))\n+            {\n+               if (::X509_STORE_add_cert(store, cert) != 1)\n+               {\n+                  boost::system::error_code ec = rstudio_boost::system::error_code(\n+                              static_cast<int>(::ERR_get_error()),\n+                              boost::asio::error::get_ssl_category());\n+                  Error error(ec, ERROR_LOCATION);\n+                  error.addProperty(\"Description\", \"Could not add Windows certificate to OpenSSL cert store\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57a0b588dcd4fa1a6bd19c37391f516dc184035c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0ODUzMA==", "bodyText": "Nit: \"Meyer's\" singleton", "url": "https://github.com/rstudio/rstudio/pull/6460#discussion_r392348530", "createdAt": "2020-03-13T16:48:06Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/include/core/http/TcpIpAsyncClientSsl.hpp", "diffHunk": "@@ -154,6 +183,51 @@ class TcpIpAsyncClientSsl\n       return util::isSslShutdownError(ec);\n    }\n \n+#ifdef _WIN32\n+   struct WindowsCertificateStore\n+   {\n+      WindowsCertificateStore()\n+      {\n+         // load certificates from important stores\n+         LPCSTR stores[] = {\"ROOT\", \"CA\"};\n+         for (const LPCSTR& store : stores)\n+         {\n+             HCERTSTORE hStore = CertOpenSystemStore(NULL, store);\n+             if (!hStore)\n+             {\n+                LOG_ERROR_MESSAGE(\"Could not open certificate store\");\n+                return;\n+             }\n+\n+             PCCERT_CONTEXT pContext = nullptr;\n+             while (pContext = CertEnumCertificatesInStore(hStore, pContext))\n+             {\n+                // convert the certificate returned from the Windows store into a\n+                // format that OpenSSL can understand\n+                const BYTE* certPtr = pContext->pbCertEncoded;\n+                X509* x509 = d2i_X509(nullptr, &certPtr, pContext->cbCertEncoded);\n+                if (x509)\n+                   certificates.push_back(x509);\n+             }\n+\n+             CertCloseStore(hStore, 0);\n+         }\n+      }\n+\n+      // certificate pointers - these are intentionally leaked\n+      // as they need to be available for the entire run of the program\n+      std::vector<X509*> certificates;\n+   };\n+\n+   static const WindowsCertificateStore& getCertificateStore()\n+   {\n+       // Myers singleton - guarantees this is thread safe", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57a0b588dcd4fa1a6bd19c37391f516dc184035c"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a18a24aec5fbdb32d844ce6ffad9ba4f9a36eba1", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/a18a24aec5fbdb32d844ce6ffad9ba4f9a36eba1", "committedDate": "2020-03-13T16:53:22Z", "message": "Code review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDYyMDIw", "url": "https://github.com/rstudio/rstudio/pull/6460#pullrequestreview-374462020", "createdAt": "2020-03-13T16:55:35Z", "commit": {"oid": "a18a24aec5fbdb32d844ce6ffad9ba4f9a36eba1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09688e052d428c55341fbc8d63370f3077cb11e6", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/09688e052d428c55341fbc8d63370f3077cb11e6", "committedDate": "2020-03-13T17:19:46Z", "message": "Code review feedback - log the subject name of any certs that fail to add"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 294, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}