{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4OTA0NTk3", "number": 7823, "title": "Retry open file operations when attempting to save source files / source database files", "bodyText": "Intent\nWhen dropbox or other file syncing solutions are present and attempting to sync source files that are active in the editor, save operations on said files can fail due to the inability to open the file (as it is being read in exclusive mode by the backup software).\nWe should attempt to retry these operations so that they do not fail often.\nApproach\nThis change makes it so that now we retry these operations up to a certain amount of seconds, specified by a new user preference save_retry_timeout, defaulting to 15. This amount of time was chosen for it to be sufficiently long to avoid nearly all exclusive locks held by backup software, while still being short enough to not seem like the operation is stalled.\nInstead of doing a retry on all file operations via modifying of the FilePath class, I scoped this down to only target the helper writeStringToFile, and its invocations in the source database. This is to reduce impact and risk of inadvertently slowing down some other processes in other parts of the code base that might not expect it.\nCloses #7131\nQA Notes\nSee repro steps in #7131. The user pref save_retry_timeout can be lowered to increase the likelihood of reproducing the original issue.", "createdAt": "2020-09-17T20:08:37Z", "url": "https://github.com/rstudio/rstudio/pull/7823", "merged": true, "mergeCommit": {"oid": "7850cfccf20f989915eb5181713cc0cd2d097522"}, "closed": true, "closedAt": "2020-09-29T18:34:48Z", "author": {"login": "kfeinauer"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ2oSfAH2gAyNDg4OTA0NTk3OjM3MTI5N2M1MjdjOWQ3MzExOGU4MTI5ZmQ4YjFiMTY5OTYwZjQ2MGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNslBtgH2gAyNDg4OTA0NTk3OmRjOTc2MzkwNmFhNTU0MTFlZjdiNDE0ZGRiZjUxMjYxZWEwNjExNGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "371297c527c9d73118e8129fd8b1b169960f460a", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/371297c527c9d73118e8129fd8b1b169960f460a", "committedDate": "2020-09-17T20:01:26Z", "message": "Retry open file operations when attempting to save source files / source database files.\n\nWhen dropbox or other file syncing solutions are present and attempting to sync source files that are active in the editor, save operations on said files can fail due to the inability to open the file (as it is being read in exclusive mode by the backup software).\n\nThis change makes it so that now we retry these operations up to a certain amount of seconds, specified by a new user preference save_retry_timeout."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwOTkxNDU0", "url": "https://github.com/rstudio/rstudio/pull/7823#pullrequestreview-490991454", "createdAt": "2020-09-17T21:10:18Z", "commit": {"oid": "371297c527c9d73118e8129fd8b1b169960f460a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMToxMDoxOFrOHT1p3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMToxMDoxOFrOHT1p3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU2NDA2Mw==", "bodyText": "It looks like this loop doesn't update opened below?", "url": "https://github.com/rstudio/rstudio/pull/7823#discussion_r490564063", "createdAt": "2020-09-17T21:10:18Z", "author": {"login": "kevinushey"}, "path": "src/cpp/core/FileSerializer.cpp", "diffHunk": "@@ -24,13 +24,63 @@\n #include <boost/algorithm/string/trim.hpp>\n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/iostreams/copy.hpp>\n+#include <boost/thread.hpp>\n \n #include <shared_core/FilePath.hpp>\n+#include <core/DateTime.hpp>\n #include <core/StringUtils.hpp>\n \n namespace rstudio {\n namespace core {\n \n+namespace {\n+\n+bool isFileLockedError(const Error& error)\n+{\n+   // exclusive file access is only present on Windows\n+#ifndef _WIN32\n+   return false;\n+#endif\n+   return (error && error.getCode() == ERROR_SHARING_VIOLATION);\n+}\n+\n+Error openFileForWritingWithRetry(const FilePath& filePath,\n+                                  bool truncate,\n+                                  int maxOpenRetrySeconds,\n+                                  std::shared_ptr<std::ostream>* pOfs)\n+{\n+   using namespace boost::posix_time;\n+\n+   bool opened = false;\n+   ptime startTime = second_clock::universal_time();\n+   Error lastError;\n+\n+   // do not allow negative values - regular signed int was chosen here for\n+   // easier integration with other parts of the codebase\n+   if (maxOpenRetrySeconds < 0)\n+      maxOpenRetrySeconds = 0;\n+\n+   while (!opened)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "371297c527c9d73118e8129fd8b1b169960f460a"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d967772c85371c727c4e919b953d951e51b6b1c5", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/d967772c85371c727c4e919b953d951e51b6b1c5", "committedDate": "2020-09-17T21:15:59Z", "message": "Fix while loop condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwOTk3ODMx", "url": "https://github.com/rstudio/rstudio/pull/7823#pullrequestreview-490997831", "createdAt": "2020-09-17T21:21:34Z", "commit": {"oid": "d967772c85371c727c4e919b953d951e51b6b1c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMToyMTozNFrOHT198g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMToyMTozNFrOHT198g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU2OTIwMg==", "bodyText": "Does this actually pause the whole RPC thread? I'm a little concerned that if (a) we auto backup changes every 500ms (the default), and (b) every (other) attempt to write backups pauses the RPC thread for 500+ms as we wait for GDrive (etc) to release the lock, the RPC thread is going to spend a pathologically large time locked.", "url": "https://github.com/rstudio/rstudio/pull/7823#discussion_r490569202", "createdAt": "2020-09-17T21:21:34Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/FileSerializer.cpp", "diffHunk": "@@ -24,13 +24,62 @@\n #include <boost/algorithm/string/trim.hpp>\n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/iostreams/copy.hpp>\n+#include <boost/thread.hpp>\n \n #include <shared_core/FilePath.hpp>\n+#include <core/DateTime.hpp>\n #include <core/StringUtils.hpp>\n \n namespace rstudio {\n namespace core {\n \n+namespace {\n+\n+bool isFileLockedError(const Error& error)\n+{\n+   // exclusive file access is only present on Windows\n+#ifndef _WIN32\n+   return false;\n+#endif\n+   return (error && error.getCode() == ERROR_SHARING_VIOLATION);\n+}\n+\n+Error openFileForWritingWithRetry(const FilePath& filePath,\n+                                  bool truncate,\n+                                  int maxOpenRetrySeconds,\n+                                  std::shared_ptr<std::ostream>* pOfs)\n+{\n+   using namespace boost::posix_time;\n+\n+   ptime startTime = second_clock::universal_time();\n+   Error lastError;\n+\n+   // do not allow negative values - regular signed int was chosen here for\n+   // easier integration with other parts of the codebase\n+   if (maxOpenRetrySeconds < 0)\n+      maxOpenRetrySeconds = 0;\n+\n+   while (true)\n+   {\n+      lastError = filePath.openForWrite(*pOfs, truncate);\n+\n+      // if the error is a non file lock error, then we should just return it\n+      if (!isFileLockedError(lastError))\n+         return lastError;\n+\n+      // stop retrying if we've spent more than the requested amount of time\n+      if ((second_clock::universal_time() - startTime) >= seconds(maxOpenRetrySeconds))\n+         break;\n+\n+      // wait a moment before retrying\n+      boost::this_thread::sleep(milliseconds(500));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d967772c85371c727c4e919b953d951e51b6b1c5"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ececfe5b911202dda97384babc1205e46ca9ab7f", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/ececfe5b911202dda97384babc1205e46ca9ab7f", "committedDate": "2020-09-18T22:13:59Z", "message": "WIP: Only attempt to retry write operation if it was a user specified action. Do not retry writes for autosaves / lints. If not retrying the operation (because of autosave semantics), supress errors indicating that another process is using the file (as it is a transient issue)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3972327cf580f16d402a6ee8d860c834d02e327e", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/3972327cf580f16d402a6ee8d860c834d02e327e", "committedDate": "2020-09-18T22:15:09Z", "message": "Merge branch 'bugfix/google-drive-dropbox-save-enhancements' of https://github.com/rstudio/rstudio into bugfix/google-drive-dropbox-save-enhancements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9d09b29878d67343a47c125acd5b7dc0bb6b411", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/f9d09b29878d67343a47c125acd5b7dc0bb6b411", "committedDate": "2020-09-21T20:52:40Z", "message": "Fix issue where lastKnownFileTime would be dropped if the file was successfully saved by the source database file properties were not. This would cause annoying prompts asking the user to reload the file as it hasd changed on disk, even though it really had not."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba77c20dff937e2d7705b71d9b3b99d68ddcee41", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/ba77c20dff937e2d7705b71d9b3b99d68ddcee41", "committedDate": "2020-09-21T21:29:06Z", "message": "Hide autosave error dialog (when doing autosave backups) if the error is a transient exclusive access issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11ce679c326f04d8907c70f97418ae0830e7f5f8", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/11ce679c326f04d8907c70f97418ae0830e7f5f8", "committedDate": "2020-09-21T21:56:12Z", "message": "Restart autosave if it fails silently"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MDE1MjU5", "url": "https://github.com/rstudio/rstudio/pull/7823#pullrequestreview-496015259", "createdAt": "2020-09-24T23:28:25Z", "commit": {"oid": "11ce679c326f04d8907c70f97418ae0830e7f5f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMzoyODoyNVrOHXv7vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMzo0MDozNlrOHXwJqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY2NDYzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            // note: this only has an affect on Windows\n          \n          \n            \n            // note: this only has an effect on Windows", "url": "https://github.com/rstudio/rstudio/pull/7823#discussion_r494664639", "createdAt": "2020-09-24T23:28:25Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/include/core/FileSerializer.hpp", "diffHunk": "@@ -291,10 +291,16 @@ Error readStringVectorFromFile(const core::FilePath& filePath,\n                                bool trimAndIgnoreBlankLines=true);\n \n // lineEnding is the type of line ending you want to end up on disk\n+//\n+// maxOpenRetrySeconds indicates whether or not we should retry attempts to open the file\n+// when it is in use by another process (common when using backup software), and if so\n+// how many seconds of elapsed time should we wait for the file to become available\n+// note: this only has an affect on Windows", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11ce679c326f04d8907c70f97418ae0830e7f5f8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY2NDg0Mw==", "bodyText": "Does this need to be a threadsafe map?", "url": "https://github.com/rstudio/rstudio/pull/7823#discussion_r494664843", "createdAt": "2020-09-24T23:29:05Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/SessionSourceDatabase.cpp", "diffHunk": "@@ -71,13 +74,30 @@ namespace {\n // lookup)\n std::map<std::string, std::string> s_idToPath;\n \n+// cached mapping of document last write times\n+std::map<std::string, std::time_t> s_lastWriteTimes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11ce679c326f04d8907c70f97418ae0830e7f5f8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY2ODIwMw==", "bodyText": "Can we amend the primary error object here with a property that indicates that we timed out (and possibly how many tries/attempts we made)? I also think this error would be worth logging and returning since a save failure can cause data loss.", "url": "https://github.com/rstudio/rstudio/pull/7823#discussion_r494668203", "createdAt": "2020-09-24T23:40:36Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/FileSerializer.cpp", "diffHunk": "@@ -24,13 +24,62 @@\n #include <boost/algorithm/string/trim.hpp>\n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/iostreams/copy.hpp>\n+#include <boost/thread.hpp>\n \n #include <shared_core/FilePath.hpp>\n+#include <core/DateTime.hpp>\n #include <core/StringUtils.hpp>\n \n namespace rstudio {\n namespace core {\n \n+namespace {\n+\n+bool isFileLockedError(const Error& error)\n+{\n+   // exclusive file access is only present on Windows\n+#ifndef _WIN32\n+   return false;\n+#endif\n+   return (error && error.getCode() == ERROR_SHARING_VIOLATION);\n+}\n+\n+Error openFileForWritingWithRetry(const FilePath& filePath,\n+                                  bool truncate,\n+                                  int maxOpenRetrySeconds,\n+                                  std::shared_ptr<std::ostream>* pOfs)\n+{\n+   using namespace boost::posix_time;\n+\n+   ptime startTime = second_clock::universal_time();\n+   Error lastError;\n+\n+   // do not allow negative values - regular signed int was chosen here for\n+   // easier integration with other parts of the codebase\n+   if (maxOpenRetrySeconds < 0)\n+      maxOpenRetrySeconds = 0;\n+\n+   while (true)\n+   {\n+      lastError = filePath.openForWrite(*pOfs, truncate);\n+\n+      // if the error is a non file lock error, then we should just return it\n+      if (!isFileLockedError(lastError))\n+         return lastError;\n+\n+      // stop retrying if we've spent more than the requested amount of time\n+      if ((second_clock::universal_time() - startTime) >= seconds(maxOpenRetrySeconds))\n+         break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11ce679c326f04d8907c70f97418ae0830e7f5f8"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6596af405a49117ba68f1ca9dd1a9a46db879961", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/6596af405a49117ba68f1ca9dd1a9a46db879961", "committedDate": "2020-09-25T20:35:42Z", "message": "Update src/cpp/core/include/core/FileSerializer.hpp\n\nCo-authored-by: Jonathan <jonathan@rstudio.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2af7f3d7d001f8c609aed0cbbf736c46943e7fb", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/a2af7f3d7d001f8c609aed0cbbf736c46943e7fb", "committedDate": "2020-09-28T14:56:25Z", "message": "Code review feedback - log error and count number of failed open attempts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31a9668d6756e62638a9c884058b11d39c3a83bc", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/31a9668d6756e62638a9c884058b11d39c3a83bc", "committedDate": "2020-09-28T14:57:16Z", "message": "Merge branch 'bugfix/google-drive-dropbox-save-enhancements' of https://github.com/rstudio/rstudio into bugfix/google-drive-dropbox-save-enhancements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbd569814b3417b681771452adeaef77d0e38515", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/fbd569814b3417b681771452adeaef77d0e38515", "committedDate": "2020-09-28T14:58:26Z", "message": "Code review feedback - prevent manual saves from queueing up while in-flight"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "011eb11501950dd1c245656585880cef43b764e3", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/011eb11501950dd1c245656585880cef43b764e3", "committedDate": "2020-09-28T15:00:55Z", "message": "Update TextEditingTarget.java\n\nFix whitespace issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3Njg3NjUy", "url": "https://github.com/rstudio/rstudio/pull/7823#pullrequestreview-497687652", "createdAt": "2020-09-28T16:13:04Z", "commit": {"oid": "011eb11501950dd1c245656585880cef43b764e3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxMzowNVrOHZFw6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjoxNDoxMlrOHZFzqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA3MDg4OA==", "bodyText": "Checking this based on the message rather than an error property or code seems fragile. Would it be feasible for us to send a proper error object (e.g. with an error code) that we could check here or something similar?", "url": "https://github.com/rstudio/rstudio/pull/7823#discussion_r496070888", "createdAt": "2020-09-28T16:13:05Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java", "diffHunk": "@@ -376,8 +391,17 @@ public void onError(final String message)\n             @Override\n             public void execute()\n             {\n-               globalDisplay_.showErrorMessage(\"Error Saving File\",\n-                                               message);\n+               // do not show the error if it is a transient autosave related issue - this can occur fairly frequently\n+               // when attempting to save files that are being backed up by external software\n+               if (message.contains(\"The process cannot access the file because it is being used by another process\") && suppressFileLockError_)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011eb11501950dd1c245656585880cef43b764e3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA3MTU5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  new SaveProgressIndicator(path, type, false,null).onCompleted();\n          \n          \n            \n                  new SaveProgressIndicator(path, type, false, null).onCompleted();", "url": "https://github.com/rstudio/rstudio/pull/7823#discussion_r496071595", "createdAt": "2020-09-28T16:14:12Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java", "diffHunk": "@@ -7708,7 +7760,7 @@ public void setPath(FileSystemItem path)\n       TextFileType type = fileTypeRegistry_.getTextTypeForFile(path);\n \n       // Simulate a completed save of the new path\n-      new SaveProgressIndicator(path, type, null).onCompleted();\n+      new SaveProgressIndicator(path, type, false,null).onCompleted();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "011eb11501950dd1c245656585880cef43b764e3"}, "originalPosition": 356}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3b7745bbba2aeb2e723f261d88a2515c386ad3e", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/f3b7745bbba2aeb2e723f261d88a2515c386ad3e", "committedDate": "2020-09-28T16:21:46Z", "message": "Update src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/TextEditingTarget.java\n\nCo-authored-by: Kevin Ushey <kevin@rstudio.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NzM1NzE2", "url": "https://github.com/rstudio/rstudio/pull/7823#pullrequestreview-498735716", "createdAt": "2020-09-29T17:48:52Z", "commit": {"oid": "f3b7745bbba2aeb2e723f261d88a2515c386ad3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3257c2cbb242e4f2ca6f72e69d2fbdf9038e5577", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/3257c2cbb242e4f2ca6f72e69d2fbdf9038e5577", "committedDate": "2020-09-29T18:33:25Z", "message": "Update NEWS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc9763906aa55411ef7b414ddbf51261ea06114c", "author": {"user": {"login": "kfeinauer", "name": "Karl Feinauer"}}, "url": "https://github.com/rstudio/rstudio/commit/dc9763906aa55411ef7b414ddbf51261ea06114c", "committedDate": "2020-09-29T18:34:31Z", "message": "Merge branch 'master' into bugfix/google-drive-dropbox-save-enhancements"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4986, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}