{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjg1NTc3", "number": 6491, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozMzowN1rODpUFXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozNTozMlrODpUHYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjQ3MjYzOnYy", "diffSide": "RIGHT", "path": "src/cpp/shared_core/system/User.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozMzowN1rOF4aeSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDoyNzoxNlrOF4b14w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5ODMxMw==", "bodyText": "Is it intentional that we explicitly copy the members piece-by-piece rather than just relying on *m_impl = *in_other->m_impl or something similar? (Main worry is that it could be easy to forget to update this method if we were to add new members to the Impl struct)", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394698313", "createdAt": "2020-03-18T23:33:07Z", "author": {"login": "kevinushey"}, "path": "src/cpp/shared_core/system/User.cpp", "diffHunk": "@@ -161,6 +166,48 @@ FilePath User::getUserHomePath(const std::string& in_envOverride)\n    return FilePath(getEnvVariable(\"HOME\"));\n }\n \n+User& User::operator=(const User& in_other)\n+{\n+   m_impl->Name = in_other.m_impl->Name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyMDczOQ==", "bodyText": "I think that should be safe. I was probably just being overly untrusting of the compiler generated code at the time. I'll make that change.", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394720739", "createdAt": "2020-03-19T00:27:16Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/shared_core/system/User.cpp", "diffHunk": "@@ -161,6 +166,48 @@ FilePath User::getUserHomePath(const std::string& in_envOverride)\n    return FilePath(getEnvVariable(\"HOME\"));\n }\n \n+User& User::operator=(const User& in_other)\n+{\n+   m_impl->Name = in_other.m_impl->Name;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5ODMxMw=="}, "originalCommit": {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjQ3NjgyOnYy", "diffSide": "RIGHT", "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozNTowOVrOF4ag-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozNTowOVrOF4ag-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTAwMw==", "bodyText": "I wonder if we could just use the default compiler-implemented move constructor here?", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394699003", "createdAt": "2020-03-18T23:35:09Z", "author": {"login": "kevinushey"}, "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "diffHunk": "@@ -101,6 +101,13 @@ class User\n     */\n    User(const User& in_other);\n \n+   /**\n+    * @brief Move constructor.\n+    *\n+    * @param in_other   The user to move into this User.\n+    */\n+   User(User&& in_other) noexcept;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjQ3Nzc5OnYy", "diffSide": "RIGHT", "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozNTozMlrOF4ahiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTozNTozMlrOF4dBuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA==", "bodyText": "Similar question re: using compiler default.", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394699144", "createdAt": "2020-03-18T23:35:32Z", "author": {"login": "kevinushey"}, "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "diffHunk": "@@ -131,6 +138,42 @@ class User\n     */\n    static Error getUserFromIdentifier(UidType in_userId, User& out_user);\n \n+   /**\n+    * @brief Overloaded assignment operator.\n+    *\n+    * @param in_other   The user to copy to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(const User& in_other);\n+\n+   /**\n+    * @brief Overloaded move operator.\n+    *\n+    * @param in_other   The user to move to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(User&& in_other) noexcept;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyMDQyMg==", "bodyText": "The compiler won't generate a default because User::User(const User&) and User& User::operator=(const User&) are implemented.", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394720422", "createdAt": "2020-03-19T00:26:07Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "diffHunk": "@@ -131,6 +138,42 @@ class User\n     */\n    static Error getUserFromIdentifier(UidType in_userId, User& out_user);\n \n+   /**\n+    * @brief Overloaded assignment operator.\n+    *\n+    * @param in_other   The user to copy to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(const User& in_other);\n+\n+   /**\n+    * @brief Overloaded move operator.\n+    *\n+    * @param in_other   The user to move to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(User&& in_other) noexcept;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA=="}, "originalCommit": {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNDc4OQ==", "bodyText": "Sorry, I meant using = default to force the compiler to generate the default version.", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394734789", "createdAt": "2020-03-19T01:14:14Z", "author": {"login": "kevinushey"}, "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "diffHunk": "@@ -131,6 +138,42 @@ class User\n     */\n    static Error getUserFromIdentifier(UidType in_userId, User& out_user);\n \n+   /**\n+    * @brief Overloaded assignment operator.\n+    *\n+    * @param in_other   The user to copy to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(const User& in_other);\n+\n+   /**\n+    * @brief Overloaded move operator.\n+    *\n+    * @param in_other   The user to move to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(User&& in_other) noexcept;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA=="}, "originalCommit": {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0MDE1Mw==", "bodyText": "Oh, that's a good point! Thanks!", "url": "https://github.com/rstudio/rstudio/pull/6491#discussion_r394740153", "createdAt": "2020-03-19T01:35:32Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/shared_core/include/shared_core/system/User.hpp", "diffHunk": "@@ -131,6 +138,42 @@ class User\n     */\n    static Error getUserFromIdentifier(UidType in_userId, User& out_user);\n \n+   /**\n+    * @brief Overloaded assignment operator.\n+    *\n+    * @param in_other   The user to copy to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(const User& in_other);\n+\n+   /**\n+    * @brief Overloaded move operator.\n+    *\n+    * @param in_other   The user to move to this one.\n+    *\n+    * @return This user.\n+    */\n+   User& operator=(User&& in_other) noexcept;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5OTE0NA=="}, "originalCommit": {"oid": "7c514b2a7a64cabc58c53eab119981f71b7a45e0"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3995, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}