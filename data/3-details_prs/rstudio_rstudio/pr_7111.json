{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNjMxODAy", "number": 7111, "title": "don't break display math marks on delimiter edit (wait until save)", "bodyText": "This is a potential fix for #7107\nThe proposal is to not be so finicky about removing display math marks when the user edits them directly. This allows them to easily repair the mark after inadvertently removing a delimiter:\n\nNote that there is some feedback that the mark is broken b/c the equation preview now thinks that it's an inline mark.\nIf the mark continues to be broken when the user saves (or switches to source view) then it will in fact no longer be a display math equation. This is consistent w/ the behavior of source mode (where removing a dollar sign from a display math delimiter causes pandoc to no longer render it as math).", "createdAt": "2020-06-12T11:42:14Z", "url": "https://github.com/rstudio/rstudio/pull/7111", "merged": true, "mergeCommit": {"oid": "2fbb38a994e0364c5d1ef47de25342d0966777cb"}, "closed": true, "closedAt": "2020-06-13T17:04:03Z", "author": {"login": "jjallaire"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqhSM7gH2gAyNDMzNjMxODAyOmJkN2YzOGQzMDlkMTZhNjQ0MWI2MGYyMGQ5ZTIzZDRmYmQxNzk4ZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrjtPVgFqTQzMDgyODcxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bd7f38d309d16a6441b60f20d9e23d4fbd1798fa", "author": {"user": {"login": "jjallaire", "name": "J.J. Allaire"}}, "url": "https://github.com/rstudio/rstudio/commit/bd7f38d309d16a6441b60f20d9e23d4fbd1798fa", "committedDate": "2020-06-12T11:37:39Z", "message": "don't break display math on delimiter edit (wait until save)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c982ee75d3123a85cf5aec80917049c9bf80cbba", "author": {"user": {"login": "jjallaire", "name": "J.J. Allaire"}}, "url": "https://github.com/rstudio/rstudio/commit/c982ee75d3123a85cf5aec80917049c9bf80cbba", "committedDate": "2020-06-12T11:43:45Z", "message": "move comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwODI4NzE2", "url": "https://github.com/rstudio/rstudio/pull/7111#pullrequestreview-430828716", "createdAt": "2020-06-15T16:59:10Z", "commit": {"oid": "c982ee75d3123a85cf5aec80917049c9bf80cbba"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjo1OToxMFrOGj61ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjo1OTozNVrOGj62jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNzM0Mg==", "bodyText": "IIUC this condition should always be true given the check above?", "url": "https://github.com/rstudio/rstudio/pull/7111#discussion_r440317342", "createdAt": "2020-06-15T16:59:10Z", "author": {"login": "kevinushey"}, "path": "src/gwt/panmirror/src/editor/src/marks/math/math-transaction.ts", "diffHunk": "@@ -36,17 +36,19 @@ export function mathAppendMarkTransaction(): AppendMarkTransactionHandler {\n         const mathRange = getMarkRange(tr.doc.resolve(from), schema.marks.math);\n         if (mathRange) {\n           const mathAttr = getMarkAttrs(tr.doc, mathRange, schema.marks.math);\n-          const mathDelim = delimiterForType(mathAttr.type);\n-          const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n-          const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n-          const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n-          const spaceAtEdge =\n-            mathAttr.type === MathType.Inline &&\n-            (mathText.startsWith(mathDelim + ' ') || mathText.endsWith(' ' + mathDelim));\n-          const numberAfter = mathAttr.type === MathType.Inline && /\\d/.test(charAfter);\n-          if (noDelims || spaceAtEdge || numberAfter) {\n-            tr.removeMark(mathRange.from, mathRange.to, schema.marks.math);\n-            tr.removeStoredMark(schema.marks.math);\n+          if (mathAttr.type === MathType.Inline) {\n+            const mathDelim = delimiterForType(mathAttr.type);\n+            const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n+            const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n+            const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n+            const spaceAtEdge =\n+              mathAttr.type === MathType.Inline &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c982ee75d3123a85cf5aec80917049c9bf80cbba"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNzU4MA==", "bodyText": "Same here?", "url": "https://github.com/rstudio/rstudio/pull/7111#discussion_r440317580", "createdAt": "2020-06-15T16:59:35Z", "author": {"login": "kevinushey"}, "path": "src/gwt/panmirror/src/editor/src/marks/math/math-transaction.ts", "diffHunk": "@@ -36,17 +36,19 @@ export function mathAppendMarkTransaction(): AppendMarkTransactionHandler {\n         const mathRange = getMarkRange(tr.doc.resolve(from), schema.marks.math);\n         if (mathRange) {\n           const mathAttr = getMarkAttrs(tr.doc, mathRange, schema.marks.math);\n-          const mathDelim = delimiterForType(mathAttr.type);\n-          const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n-          const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n-          const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n-          const spaceAtEdge =\n-            mathAttr.type === MathType.Inline &&\n-            (mathText.startsWith(mathDelim + ' ') || mathText.endsWith(' ' + mathDelim));\n-          const numberAfter = mathAttr.type === MathType.Inline && /\\d/.test(charAfter);\n-          if (noDelims || spaceAtEdge || numberAfter) {\n-            tr.removeMark(mathRange.from, mathRange.to, schema.marks.math);\n-            tr.removeStoredMark(schema.marks.math);\n+          if (mathAttr.type === MathType.Inline) {\n+            const mathDelim = delimiterForType(mathAttr.type);\n+            const mathText = tr.doc.textBetween(mathRange.from, mathRange.to);\n+            const charAfter = tr.doc.textBetween(mathRange.to, mathRange.to + 1);\n+            const noDelims = !mathText.startsWith(mathDelim) || !mathText.endsWith(mathDelim);\n+            const spaceAtEdge =\n+              mathAttr.type === MathType.Inline &&\n+              (mathText.startsWith(mathDelim + ' ') || mathText.endsWith(' ' + mathDelim));\n+            const numberAfter = mathAttr.type === MathType.Inline && /\\d/.test(charAfter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c982ee75d3123a85cf5aec80917049c9bf80cbba"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 192, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}