{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzI0MDM1", "number": 6437, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMToyOTowNlrODm6R8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo0ODowN1rODn50fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMTI3MzQ0OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionSource.R", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMToyOTowNlrOF0mcFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTowMzo1NVrOF1aGQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwMDA1Mw==", "bodyText": "as.expression(x) might return a vector of length > 1, so this isn't the right test.\nAssuming I understand the issue correctly, I think you just want to check something like if (!is.null(ee)) below in the for loop.", "url": "https://github.com/rstudio/rstudio/pull/6437#discussion_r390700053", "createdAt": "2020-03-11T01:29:06Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionSource.R", "diffHunk": "@@ -184,6 +184,8 @@\n    \n    if (length(args) > 0)\n    {\n+      # Filter empty string https://github.com/rstudio/rstudio/issues/5285\n+      args <- args[sapply(args, function(x) nchar(as.character(as.expression(x))) > 0 )]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "663a26c901a9929287a2f6eb704c0aa52b7e204e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg3MDM0NA==", "bodyText": "No, parse(text=\" \") is expression() and thus it is unequal to null and (!is.null(ee)) does not work to filter out the empty string.\nEach args element is exactly one expression.\nargs = str2expression(text=\"mtcars[,1]\\n print(cat('ER'))\")\n\nargs[[1]]\nmtcars[, 1]\nargs[[2]]\nprint(cat(\"ER\"))\n\nThe args elements can again be lists:\n\nargs[[2]][[1]]\nprint\nas.expression(args[[2]])\nexpression(print(cat(\"ER\")))\nas.character(as.expression(args[[2]]))\n[1] \"print(cat(\"ER\"))\"\n\nAs these expressions are recursive lists, the casting as.expression reduces it into a single expression. I am not aware, how a vector of length > 1 could be returned.", "url": "https://github.com/rstudio/rstudio/pull/6437#discussion_r390870344", "createdAt": "2020-03-11T10:20:08Z", "author": {"login": "JensHumrich"}, "path": "src/cpp/session/modules/SessionSource.R", "diffHunk": "@@ -184,6 +184,8 @@\n    \n    if (length(args) > 0)\n    {\n+      # Filter empty string https://github.com/rstudio/rstudio/issues/5285\n+      args <- args[sapply(args, function(x) nchar(as.character(as.expression(x))) > 0 )]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwMDA1Mw=="}, "originalCommit": {"oid": "663a26c901a9929287a2f6eb704c0aa52b7e204e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEzMTMzNw==", "bodyText": "No, parse(text=\" \") is expression() and thus it is unequal to null and (!is.null(ee)) does not work to filter out the empty string.\n\nThen we should properly test for this value. (is.null() was an example based on my expectation that the value might be NULL).\nIt looks like the problematic value here is the missing value (identical to quote(expr = )) so I believe the right fix here is something more like:\nfor (i in seq_along(args))\n   if (!identical(args[[i]], quote(expr = )))\n      freeVars <- c(freeVars, codetools:::walkCode(args[[i]], w))\n\nRelying on the coercion of as.character(as.expression()) seems both dangerous and expensive.", "url": "https://github.com/rstudio/rstudio/pull/6437#discussion_r391131337", "createdAt": "2020-03-11T17:14:32Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionSource.R", "diffHunk": "@@ -184,6 +184,8 @@\n    \n    if (length(args) > 0)\n    {\n+      # Filter empty string https://github.com/rstudio/rstudio/issues/5285\n+      args <- args[sapply(args, function(x) nchar(as.character(as.expression(x))) > 0 )]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwMDA1Mw=="}, "originalCommit": {"oid": "663a26c901a9929287a2f6eb704c0aa52b7e204e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU0NjQzNQ==", "bodyText": "Updated accordingly :)", "url": "https://github.com/rstudio/rstudio/pull/6437#discussion_r391546435", "createdAt": "2020-03-12T11:03:55Z", "author": {"login": "Katzmann1983"}, "path": "src/cpp/session/modules/SessionSource.R", "diffHunk": "@@ -184,6 +184,8 @@\n    \n    if (length(args) > 0)\n    {\n+      # Filter empty string https://github.com/rstudio/rstudio/issues/5285\n+      args <- args[sapply(args, function(x) nchar(as.character(as.expression(x))) > 0 )]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcwMDA1Mw=="}, "originalCommit": {"oid": "663a26c901a9929287a2f6eb704c0aa52b7e204e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTY4MzgzOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionSource.R", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo0ODowN1rOF2LDeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjo0ODowN1rOF2LDeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM0ODUzNw==", "bodyText": "I'm realizing now that this line is unnecessary as it's legal to access an R missing value that lives within a list object. For example:\n> x <- quote(expr = )\n> x\nError: argument \"x\" is missing, with no default\n> l <- list(x = quote(expr = ))\n> l$x\n\n\nSo simply re-structuring the loop so that we access args[[i]] through an index rather than looping fixes the issue.\n(Also note: it really is quote(expr = ) as opposed to an empty expression() object)", "url": "https://github.com/rstudio/rstudio/pull/6437#discussion_r392348537", "createdAt": "2020-03-13T16:48:07Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionSource.R", "diffHunk": "@@ -184,8 +184,10 @@\n    \n    if (length(args) > 0)\n    {\n-      for (ee in args)\n-         freeVars <- c(freeVars, codetools:::walkCode(ee, w))\n+      for (i in seq_along(args))\n+         # Filter empty string https://github.com/rstudio/rstudio/issues/5285\n+         if (!identical(args[[i]], expression()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0e9e7fce436a4bce00ec286c5b26b823374af7c"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3982, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}