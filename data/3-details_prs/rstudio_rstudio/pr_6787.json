{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTE5Mzkz", "number": 6787, "title": "Add class attributes to chunks", "bodyText": "This PR implements items 1-3 of #6652\nIt adds getCssIdentifier to StringUtil which builds a string valid as a CSS identifier, replacing invalid characters with an 'x'. This function is invoked to add an id to chunks so their child elements can be easily referenced. The id is set to the chunk's label and adds the prefix output_ to the chunk's output.\nIn particular this can be used with to highlight buttons and output associated with a chunk.\nRunning >rstudioapi::highlightUi(\"#pressure [title='Run Current Chunk']\") will yield:\n\nRunning >rstudioapi::highlightUi(\"#output_pressure\") will yield:", "createdAt": "2020-05-01T00:56:20Z", "url": "https://github.com/rstudio/rstudio/pull/6787", "merged": true, "mergeCommit": {"oid": "ac094f7dbeaae6cc3d4fc0c794b95e763387815e"}, "closed": true, "closedAt": "2020-05-01T23:51:44Z", "author": {"login": "melissa-barca"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccjz3AgH2gAyNDExOTE5MzkzOmUyODQ3OTRiZDVlNmQxOGQwYjdkYWQwZWNkZGQ5Y2E4MTk0NmNlYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdKfrKAFqTQwNDQ0OTM2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e284794bd5e6d18d0b7dad0ecddd9ca81946ceb3", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/e284794bd5e6d18d0b7dad0ecddd9ca81946ceb3", "committedDate": "2020-04-30T02:39:17Z", "message": "fix issue where chunks weren't marked as initialized.\nAssign id attribute to chunks based on their label."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1228cd380efa3382b6705c4eb01341a6407da54", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/d1228cd380efa3382b6705c4eb01341a6407da54", "committedDate": "2020-04-30T23:07:02Z", "message": "add css id validator to StringUtil and ensure chunks have valids ids."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/a9e6141045be99413d4c57a442a22f29ac775f09", "committedDate": "2020-05-01T00:22:00Z", "message": "add an id to the chunk output widget based on the chunk's label"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjE4ODk4", "url": "https://github.com/rstudio/rstudio/pull/6787#pullrequestreview-404218898", "createdAt": "2020-05-01T15:21:33Z", "commit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNToyMTozM1rOGPMpQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNToyNjoyM1rOGPMxzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4ODk5Mw==", "bodyText": "I think this regex would be more simply expressed with a leading -? (then it won't be necessary to duplicate the whole alphanumeric test)", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418588993", "createdAt": "2020-05-01T15:21:33Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)\n+   {\n+      // Each character must be one of the following:\n+      // alphanumeric, an ISO 10646 character U+00A0 or higher, a hyphen, or an underscore.\n+      // Identifiers cannot start with a hyphen, two hyphens, or a hyphen followed by a digit.\n+      // This implementation considers escaped characters invalid.\n+      // If an invalid character is found, it is replaced with an 'x'.\n+      \n+\n+      // return the string if it's already valid,\n+      // otherwise replace invalid characters with 'x'\n+      Pattern pattern =\n+         Pattern.create(\"(^[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)|(^-[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4OTQ2OQ==", "bodyText": "I think we should replace with a - or _ for readability reasons in the calling code; e.g., exercise_six is much easier to read than exercisexsix.", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418589469", "createdAt": "2020-05-01T15:22:40Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)\n+   {\n+      // Each character must be one of the following:\n+      // alphanumeric, an ISO 10646 character U+00A0 or higher, a hyphen, or an underscore.\n+      // Identifiers cannot start with a hyphen, two hyphens, or a hyphen followed by a digit.\n+      // This implementation considers escaped characters invalid.\n+      // If an invalid character is found, it is replaced with an 'x'.\n+      \n+\n+      // return the string if it's already valid,\n+      // otherwise replace invalid characters with 'x'\n+      Pattern pattern =\n+         Pattern.create(\"(^[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)|(^-[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)\");\n+      if (pattern.test(string))\n+         return string;\n+      else\n+      {\n+         StringBuilder builder = new StringBuilder();\n+         for (int i = 0; i < string.length(); i++)\n+         {\n+            char c = string.charAt(i);\n+            if (c == '_' ||\n+                c > 0x00A0 ||\n+                (c >= 'a' && c <= 'z') ||\n+                (c >= 'A' && c <= 'Z') ||\n+                (i > 0 && (c == '-' || (c >= '0' && c <= '9'))))\n+               builder.append(c);\n+            else\n+               builder.append(\"x\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MDU1MA==", "bodyText": "We should use CSS class names rather than IDs, for two reasons:\n\nAn element can only have one ID, but it can have multiple classes. So once we use the element's ID for this addressability feature, we can't use the ID for anything else.\nIt is considered best practice for a document to have only one element with a given ID, but as chunk names can be duplicated we could also wind up with duplicate IDs. It's normal (and expected) for the same CSS class to be assigned to multiple elements.", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418590550", "createdAt": "2020-05-01T15:25:02Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -242,6 +243,12 @@ public int getState()\n       return state_;\n    }\n \n+   public void setId(String id)\n+   {\n+      this.getElement().setPropertyString(\"id\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTAwMw==", "bodyText": "This function would be a great candidate for a unit test.", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418591003", "createdAt": "2020-05-01T15:26:03Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTE4MA==", "bodyText": "Realize you're just moving this, but adding a unit test for this would be helpful!", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418591180", "createdAt": "2020-05-01T15:26:23Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/ChunkContextUi.java", "diffHunk": "@@ -55,6 +55,41 @@ public ChunkContextUi(TextEditingTarget target, int renderPass,\n       createToolbar(preambleRow);\n    }\n    \n+   // Public static methods ---------------------------------------------------\n+\n+   public static String extractChunkLabel(String extractedChunkHeader)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MDM1NDQ4", "url": "https://github.com/rstudio/rstudio/pull/6787#pullrequestreview-404035448", "createdAt": "2020-05-01T06:14:29Z", "commit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjoxNDoyOVrOGPDASQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjoyMDo1NlrOGPDFlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTA0OQ==", "bodyText": "I think you could re-use chunkLabel here. (I realize this is just coming up in the diff as part of the refactor but worth changing while you're in this code)", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418431049", "createdAt": "2020-05-01T06:14:29Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/display/DefaultChunkOptionsPopupPanel.java", "diffHunk": "@@ -194,9 +162,9 @@ else if (modeId == \"mode/rhtml\")\n       String extracted = match.getGroup(1);\n       chunkPreamble_ = extractChunkPreamble(extracted, modeId);\n       \n-      String chunkLabel = extractChunkLabel(extracted);\n+      String chunkLabel = ChunkContextUi.extractChunkLabel(extracted);\n       if (!StringUtil.isNullOrEmpty(chunkLabel))\n-         tbChunkLabel_.setText(extractChunkLabel(extracted));\n+         tbChunkLabel_.setText(ChunkContextUi.extractChunkLabel(extracted));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTM1NA==", "bodyText": "nit: as a matter of style, I think it's better to either always include braces on each branch of an if-else, or to never include them. (Otherwise it's easy to miss things in a refactor)", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418431354", "createdAt": "2020-05-01T06:16:13Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/core/client/StringUtil.java", "diffHunk": "@@ -944,6 +944,40 @@ public static String getExtension(String string)\n       return getExtension(string, 1);\n    }\n    \n+   public static String getCssIdentifier(String string)\n+   {\n+      // Each character must be one of the following:\n+      // alphanumeric, an ISO 10646 character U+00A0 or higher, a hyphen, or an underscore.\n+      // Identifiers cannot start with a hyphen, two hyphens, or a hyphen followed by a digit.\n+      // This implementation considers escaped characters invalid.\n+      // If an invalid character is found, it is replaced with an 'x'.\n+      \n+\n+      // return the string if it's already valid,\n+      // otherwise replace invalid characters with 'x'\n+      Pattern pattern =\n+         Pattern.create(\"(^[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)|(^-[a-zA-Z][a-zA-Z0-9\\\\-\\\\_]+$)\");\n+      if (pattern.test(string))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMjQwNw==", "bodyText": "nit: GWT element objects should have a setId() method, which does the same thing here but is more succinct", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418432407", "createdAt": "2020-05-01T06:20:56Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/ChunkContextToolbar.java", "diffHunk": "@@ -106,6 +107,12 @@ public void setEngine(String engine)\n       chunkTypeLabel_.setText(engine);\n    }\n    \n+   public void setId(String id)\n+   {\n+      this.getElement().setPropertyString(\"id\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e6141045be99413d4c57a442a22f29ac775f09"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd475fc736aaa38ec192704ca69987327977119", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/8cd475fc736aaa38ec192704ca69987327977119", "committedDate": "2020-05-01T20:16:53Z", "message": "fix chunk output label bug and improve code\n- replace invalid characters with _ instead of x\n- set chunks class with the label instead of id\n- fix issue where output labels weren't always refreshed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5878318a3dba42ca24508ec4d4a5a98e49eaa3ab", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/5878318a3dba42ca24508ec4d4a5a98e49eaa3ab", "committedDate": "2020-05-01T21:46:24Z", "message": "add chunk label unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/525fa399e8d60ebe91efa3952fc3cb449a4c10c6", "committedDate": "2020-05-01T21:50:50Z", "message": "update copyright dates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c3d219fba5b56f32f6d0fa0b0c0c47a46ccc59f", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/2c3d219fba5b56f32f6d0fa0b0c0c47a46ccc59f", "committedDate": "2020-05-01T21:55:18Z", "message": "use variable instead of recalling function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDIwNzg3", "url": "https://github.com/rstudio/rstudio/pull/6787#pullrequestreview-404420787", "createdAt": "2020-05-01T21:56:40Z", "commit": {"oid": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTo1Njo0MFrOGPWx1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjowNDozN1rOGPW7Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTAyOQ==", "bodyText": "Nit: this needs indent fixed (should be 3 spaces)", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418755029", "createdAt": "2020-05-01T21:56:40Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -242,6 +244,26 @@ public int getState()\n       return state_;\n    }\n \n+   public void setLabelClass(String value)\n+   {\n+      // ensure value has the correct prefix\n+      if (!value.startsWith(ChunkContextToolbar.CHUNK_CLASS_PREFIX + CHUNK_OUTPUT_PREFIX))\n+               value = new String(ChunkContextToolbar.CHUNK_CLASS_PREFIX +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NTUzNw==", "bodyText": "Nit: use StringUtil.equal for comparing strings. Believe it or not GWT has made breaking changes in str1 == str2 in the past (in particular when one of them is null, it can throw an exception).", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418755537", "createdAt": "2020-05-01T21:58:16Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputWidget.java", "diffHunk": "@@ -242,6 +244,26 @@ public int getState()\n       return state_;\n    }\n \n+   public void setLabelClass(String value)\n+   {\n+      // ensure value has the correct prefix\n+      if (!value.startsWith(ChunkContextToolbar.CHUNK_CLASS_PREFIX + CHUNK_OUTPUT_PREFIX))\n+               value = new String(ChunkContextToolbar.CHUNK_CLASS_PREFIX +\n+                                  CHUNK_OUTPUT_PREFIX +\n+                                  value);\n+      value = StringUtil.getCssIdentifier(value);\n+\n+      if (value != label_)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NjgyOA==", "bodyText": "Let's add a couple more here to increase code coverage -- maybe one in which there's no label, and another in which there are no options?\n{r echo=TRUE}\n{r thisisalabel}", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418756828", "createdAt": "2020-05-01T22:02:31Z", "author": {"login": "jmcphers"}, "path": "src/gwt/test/org/rstudio/studio/client/workbench/views/source/editors/text/rmd/ChunkContextUiTests.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * ChunkContextUiTests.java\n+ *\n+ * Copyright (C) 2009-20 by RStudio, PBC\n+ *\n+ * Unless you have received this program directly from RStudio pursuant\n+ * to the terms of a commercial license agreement with RStudio, then\n+ * this program is licensed to you under the terms of version 3 of the\n+ * GNU Affero General Public License. This program is distributed WITHOUT\n+ * ANY EXPRESS OR IMPLIED WARRANTY, INCLUDING THOSE OF NON-INFRINGEMENT,\n+ * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Please refer to the\n+ * AGPL (http://www.gnu.org/licenses/agpl-3.0.txt) for more details.\n+ *\n+ */\n+package org.rstudio.studio.client.workbench.views.source.editors.text.rmd;\n+\n+import com.google.gwt.junit.client.GWTTestCase;\n+\n+\n+public class ChunkContextUiTests extends GWTTestCase\n+{\n+   @Override\n+   public String getModuleName()\n+   {\n+      return \"org.rstudio.studio.RStudioTests\";\n+   }\n+   \n+   public void testExtractChunkLabel()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc1NzQ3NA==", "bodyText": "Nit: I think this might be frustrating to update since you have to remember to increase the pass count here whenever you add a pass below. How about just putting the input/expected values in arrays, and looping over the arrays?", "url": "https://github.com/rstudio/rstudio/pull/6787#discussion_r418757474", "createdAt": "2020-05-01T22:04:37Z", "author": {"login": "jmcphers"}, "path": "src/gwt/test/org/rstudio/core/client/StringUtilTests.java", "diffHunk": "@@ -238,6 +238,40 @@ public void testConciseElapsedTime()\n       assertEquals(\"2:02:01:01\", days);\n    }\n   \n+   public void testGetCssIdentifier()\n+   {\n+      for (int pass = 0; pass < 5; pass++)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525fa399e8d60ebe91efa3952fc3cb449a4c10c6"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4f60f41dac749a117a0404ac024439c6545ecca", "author": {"user": {"login": "melissa-barca", "name": "Melissa Barca"}}, "url": "https://github.com/rstudio/rstudio/commit/f4f60f41dac749a117a0404ac024439c6545ecca", "committedDate": "2020-05-01T23:26:31Z", "message": "improve unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDQ3MTM4", "url": "https://github.com/rstudio/rstudio/pull/6787#pullrequestreview-404447138", "createdAt": "2020-05-01T23:32:30Z", "commit": {"oid": "f4f60f41dac749a117a0404ac024439c6545ecca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDQ5MzY0", "url": "https://github.com/rstudio/rstudio/pull/6787#pullrequestreview-404449364", "createdAt": "2020-05-01T23:43:32Z", "commit": {"oid": "f4f60f41dac749a117a0404ac024439c6545ecca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 240, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}