{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTIxMDgw", "number": 6289, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMTowMzoyN1rODiDU9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMTowMzoyN1rODiDU9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDMyNjk0OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/jobs/AsyncRJobManager.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMTowMzoyN1rOFtIhFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODozNDo0OVrOFtrTzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTc4Mw==", "bodyText": "I wonder if this lambda should actually capture by value? IIUC it's capturing the job (a shared pointer) by reference, which means in theory if the job were to be deleted we'd be left with a dangling reference. Seems unlikely to happen in practice but capturing by value feels safer.", "url": "https://github.com/rstudio/rstudio/pull/6289#discussion_r382869783", "createdAt": "2020-02-22T01:03:27Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/jobs/AsyncRJobManager.cpp", "diffHunk": "@@ -117,7 +121,7 @@ Error registerAsyncRJob(boost::shared_ptr<AsyncRJob> job,\n    job->registerJob();\n \n    // remove the job from the registry when it's done\n-   job->setOnComplete([&]() \n+   job->addOnComplete([&]() ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7038e81502b44a1d20136d02737575cf55e749b6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQzOTgyMg==", "bodyText": "Agreed! I've made this change.", "url": "https://github.com/rstudio/rstudio/pull/6289#discussion_r383439822", "createdAt": "2020-02-24T18:34:49Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/jobs/AsyncRJobManager.cpp", "diffHunk": "@@ -117,7 +121,7 @@ Error registerAsyncRJob(boost::shared_ptr<AsyncRJob> job,\n    job->registerJob();\n \n    // remove the job from the registry when it's done\n-   job->setOnComplete([&]() \n+   job->addOnComplete([&]() ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTc4Mw=="}, "originalCommit": {"oid": "7038e81502b44a1d20136d02737575cf55e749b6"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4074, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}