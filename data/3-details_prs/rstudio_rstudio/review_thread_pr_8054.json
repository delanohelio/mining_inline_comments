{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODM5NDI4", "number": 8054, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxODoxMFrOEtOlsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxODo1NFrOEtOmag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODYwNDAzOnYy", "diffSide": "RIGHT", "path": "src/cpp/r/R/Tools.R", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxODoxMFrOHg52Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjowMToxOFrOHg7CVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2NDIwMg==", "bodyText": "Maybe we should add a comment here about why and link to this issue? (so future maintainers can decide whether this workaround is safe to remove)", "url": "https://github.com/rstudio/rstudio/pull/8054#discussion_r504264202", "createdAt": "2020-10-13T21:18:10Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/R/Tools.R", "diffHunk": "@@ -170,28 +170,45 @@ environment(.rs.Env[[\".rs.addFunction\"]]) <- .rs.Env\n })\n \n # save current state of options() to file\n-.rs.addFunction( \"saveOptions\", function(filename)\n+.rs.addFunction(\"saveOptions\", function(filename)\n {\n-   opt = options();\n-   suppressWarnings(save(opt, file=filename))\n+   # get reference to current options\n+   opt <- options()\n+   \n+   # don't attempt to serialize cpp11 preserve env", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "196f6cdd22e791c5c74afd9970912072a491f044"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4MzczMw==", "bodyText": "Done!", "url": "https://github.com/rstudio/rstudio/pull/8054#discussion_r504283733", "createdAt": "2020-10-13T22:01:18Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Tools.R", "diffHunk": "@@ -170,28 +170,45 @@ environment(.rs.Env[[\".rs.addFunction\"]]) <- .rs.Env\n })\n \n # save current state of options() to file\n-.rs.addFunction( \"saveOptions\", function(filename)\n+.rs.addFunction(\"saveOptions\", function(filename)\n {\n-   opt = options();\n-   suppressWarnings(save(opt, file=filename))\n+   # get reference to current options\n+   opt <- options()\n+   \n+   # don't attempt to serialize cpp11 preserve env", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2NDIwMg=="}, "originalCommit": {"oid": "196f6cdd22e791c5c74afd9970912072a491f044"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODYwNTg2OnYy", "diffSide": "RIGHT", "path": "src/cpp/r/R/Tools.R", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMToxODo1NFrOHg53Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjowMTo1M1rOHg7DUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2NDUyNg==", "bodyText": "What happens if this fails?", "url": "https://github.com/rstudio/rstudio/pull/8054#discussion_r504264526", "createdAt": "2020-10-13T21:18:54Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/R/Tools.R", "diffHunk": "@@ -170,28 +170,45 @@ environment(.rs.Env[[\".rs.addFunction\"]]) <- .rs.Env\n })\n \n # save current state of options() to file\n-.rs.addFunction( \"saveOptions\", function(filename)\n+.rs.addFunction(\"saveOptions\", function(filename)\n {\n-   opt = options();\n-   suppressWarnings(save(opt, file=filename))\n+   # get reference to current options\n+   opt <- options()\n+   \n+   # don't attempt to serialize cpp11 preserve env\n+   opt$cpp11_preserve_env <- NULL\n+   \n+   # first write to sidecar file, and then rename that file\n+   # (don't let failed serialization leave behind broken workspace)\n+   sidecarFile <- paste(filename, \"incomplete\", sep = \".\")\n+   \n+   # remove an old sidecar file if any -- these would be leftover from\n+   # a previously-failed attempt to save the session\n+   unlink(sidecarFile)\n+   \n+   # now, attempt to save\n+   suppressWarnings(save(opt, file = sidecarFile))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "196f6cdd22e791c5c74afd9970912072a491f044"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4Mzk4Ng==", "bodyText": "I think errors would be caught at the C++ side with the invocation of the RFunction instance. That said, it's worth at least trying to catch errors here and clean up the sidecar file on failure.", "url": "https://github.com/rstudio/rstudio/pull/8054#discussion_r504283986", "createdAt": "2020-10-13T22:01:53Z", "author": {"login": "kevinushey"}, "path": "src/cpp/r/R/Tools.R", "diffHunk": "@@ -170,28 +170,45 @@ environment(.rs.Env[[\".rs.addFunction\"]]) <- .rs.Env\n })\n \n # save current state of options() to file\n-.rs.addFunction( \"saveOptions\", function(filename)\n+.rs.addFunction(\"saveOptions\", function(filename)\n {\n-   opt = options();\n-   suppressWarnings(save(opt, file=filename))\n+   # get reference to current options\n+   opt <- options()\n+   \n+   # don't attempt to serialize cpp11 preserve env\n+   opt$cpp11_preserve_env <- NULL\n+   \n+   # first write to sidecar file, and then rename that file\n+   # (don't let failed serialization leave behind broken workspace)\n+   sidecarFile <- paste(filename, \"incomplete\", sep = \".\")\n+   \n+   # remove an old sidecar file if any -- these would be leftover from\n+   # a previously-failed attempt to save the session\n+   unlink(sidecarFile)\n+   \n+   # now, attempt to save\n+   suppressWarnings(save(opt, file = sidecarFile))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI2NDUyNg=="}, "originalCommit": {"oid": "196f6cdd22e791c5c74afd9970912072a491f044"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4144, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}