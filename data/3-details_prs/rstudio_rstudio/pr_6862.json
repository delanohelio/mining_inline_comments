{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDIzMTE4", "number": 6862, "title": "support view of Python objects in Environment pane", "bodyText": "This PR makes it possible to view Python objects (from a reticulate session) within the Environment Pane.\nAt its core, the Environment Pane will now switch between R and Python depending on whether the \"regular\" R console is active, versus the reticulate Python console. See demo:\n\nAfter the Python session has been initialized by reticulate, an option to view Python environments and modules will be displayed. Arbitrary loaded modules can be viewed.\n\n\nTODO\n\n Audit that I haven't broken any pre-existing implicit contracts between the Environment Pane and the \"monitored\" environment.\n Handle object removals.\n Ensure behavior is consistent around session restarts, page reloads, and so on.\n Consider whether we could make it possible to View() such objects with the Data Viewer or Object Explorer.", "createdAt": "2020-05-12T23:16:04Z", "url": "https://github.com/rstudio/rstudio/pull/6862", "merged": true, "mergeCommit": {"oid": "b7fe077033cbebf295aa147c23240d43e014e313"}, "closed": true, "closedAt": "2020-05-20T20:02:03Z", "author": {"login": "kevinushey"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcikVS6gH2gAyNDE3MDIzMTE4OjQxNDk2NmY2YTk1OTkyYjk3NTVkZTZkNWE3ZDNjNGJlZmQ2ZWI3NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjOtOZAH2gAyNDE3MDIzMTE4OjE3ZTNkMmQ4Yzk1ZjAyY2ZlZTEwYzIzMmM4MTUzM2M3MDI2ZTQzOGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "414966f6a95992b9755de6d5a7d3c4befd6eb752", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/414966f6a95992b9755de6d5a7d3c4befd6eb752", "committedDate": "2020-05-18T18:39:21Z", "message": "initial wiring of Python to environment pane"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1429cbe8f7c33efbe693cb548109f7a8fee0d2ca", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/1429cbe8f7c33efbe693cb548109f7a8fee0d2ca", "committedDate": "2020-05-18T18:39:21Z", "message": "ensure reticulate events are fired"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fb0c2b7dc89f8ecf41bc99bfdc40dd12ee105e1", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/3fb0c2b7dc89f8ecf41bc99bfdc40dd12ee105e1", "committedDate": "2020-05-18T18:39:21Z", "message": "work on detectChanges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "021f6bf591952b07bccd23b9df2652d4caea3a63", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/021f6bf591952b07bccd23b9df2652d4caea3a63", "committedDate": "2020-05-18T18:39:21Z", "message": "fix invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21d1bd188d8518de70e4933eab1167201a4ec978", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/21d1bd188d8518de70e4933eab1167201a4ec978", "committedDate": "2020-05-18T18:39:21Z", "message": "send python init status during client init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b34a69c0da4f7f343fbd6b49028f36a1be09fa37", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/b34a69c0da4f7f343fbd6b49028f36a1be09fa37", "committedDate": "2020-05-18T18:39:21Z", "message": "behavior refinements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bef81ab64b10433aa5e10ce717cb17bdb248f20", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/1bef81ab64b10433aa5e10ce717cb17bdb248f20", "committedDate": "2020-05-18T18:39:21Z", "message": "detect Python functions consistently"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a6d90f94f3aa56df80dd503f7aad76c6fd88ac1", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/3a6d90f94f3aa56df80dd503f7aad76c6fd88ac1", "committedDate": "2020-05-18T18:39:22Z", "message": "don't include builtins by default"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc2d86ae71cc2b6adf4135a3a25b993fc85da2fb", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/fc2d86ae71cc2b6adf4135a3a25b993fc85da2fb", "committedDate": "2020-05-18T18:39:22Z", "message": "bundle environment changes into single event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e0f2e70126fae4bfe400499ce7663e711d2f3dd", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/4e0f2e70126fae4bfe400499ce7663e711d2f3dd", "committedDate": "2020-05-18T18:39:22Z", "message": "use default format method directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fc045381d3791657d0806f422c1da27fa2d23c1", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/2fc045381d3791657d0806f422c1da27fa2d23c1", "committedDate": "2020-05-18T18:39:22Z", "message": "sync Python state on browser refresh"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f37c306e55c97194be70ffd1725b76ca8730e616", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/f37c306e55c97194be70ffd1725b76ca8730e616", "committedDate": "2020-05-18T18:39:22Z", "message": "support object explorer, data viewer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "219c1ebaa16d562dd126acf3736f1d7b38022b61", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/219c1ebaa16d562dd126acf3736f1d7b38022b61", "committedDate": "2020-05-18T18:39:22Z", "message": "respect active language in Environment pane View"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "112a971fb61632b72f60b39c13e267a881284507", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/112a971fb61632b72f60b39c13e267a881284507", "committedDate": "2020-05-18T18:39:22Z", "message": "further refine View behavior"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57d854dfbac5063c0a1a9c5c14c04215187cd654", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/57d854dfbac5063c0a1a9c5c14c04215187cd654", "committedDate": "2020-05-18T18:39:22Z", "message": "inspect Python object attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e06b3eeb9dccb8696fb24e425688f08dddf7092d", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/e06b3eeb9dccb8696fb24e425688f08dddf7092d", "committedDate": "2020-05-18T18:39:22Z", "message": "refactor a bit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "committedDate": "2020-05-18T18:39:22Z", "message": "further refine"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8532f40a83fb069ffd8e72e2a3370c11d7090e74", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/8532f40a83fb069ffd8e72e2a3370c11d7090e74", "committedDate": "2020-05-18T16:13:23Z", "message": "further refine"}, "afterCommit": {"oid": "3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/3c223dcf80db85d744cf7686dbcd16fa7439d4e2", "committedDate": "2020-05-18T18:39:22Z", "message": "further refine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/90b072efdc8dcd35a0437845e05b3f4ed7f9c39e", "committedDate": "2020-05-18T21:28:26Z", "message": "inspect object attributes when requested"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTU3ODI4", "url": "https://github.com/rstudio/rstudio/pull/6862#pullrequestreview-413957828", "createdAt": "2020-05-18T21:40:11Z", "commit": {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTo0MDoxMVrOGXIZaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTo1MToyNlrOGXIrmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwODAwOQ==", "bodyText": "Nit: typo (byd)", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426908009", "createdAt": "2020-05-18T21:40:11Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionObjectExplorer.R", "diffHunk": "@@ -952,21 +1176,25 @@\n    format(object.size(object), units = \"auto\")\n })\n \n-# Utility Functions ----\n-\n-.rs.addFunction(\"getRefCount\", function(object)\n+.rs.addFunction(\"explorer.isPythonObjectExpandable\", function(object)\n {\n-   .Call(\"rs_getRefCount\",\n-         as.name(\"object\"),\n-         environment(),\n-         PACKAGE = \"(embedding)\")\n-})\n-\n-.rs.addFunction(\"setRefCount\", function(object, count)\n-{\n-   .Call(\"rs_setRefCount\",\n-         as.name(\"object\"),\n-         environment(),\n-         as.integer(count),\n-         PACKAGE = \"(embedding)\")\n-})\n+   # NOTE: technically, these objects are expandable (they have attributes\n+   # and may even have methods of interest) but since they're usually less\n+   # interesting than the object's actual value we ignore those byd default.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e"}, "originalPosition": 468}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwOTE5MQ==", "bodyText": "Is this called a lot? (if so wondering if it'd be better to detect python initialization eagerly instead of recomputing it on every call when uninitialized)", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426909191", "createdAt": "2020-05-18T21:42:52Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionReticulate.cpp", "diffHunk": "@@ -56,6 +56,27 @@ void onDeferredInit(bool)\n }\n \n } // end anonymous namespace\n+\n+bool isPythonInitialized()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMDcwNw==", "bodyText": "Since this is a plain string value, maybe dump a log entry if it's something other than the values we expect? (realize it's totally impossible for it to get into that state now...)", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426910707", "createdAt": "2020-05-18T21:46:48Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/environment/SessionEnvironment.cpp", "diffHunk": "@@ -485,9 +493,25 @@ Error setEnvironment(boost::shared_ptr<int> pContextDepth,\n    if (error)\n       return error;\n \n-   error = setEnvironmentName(*pContextDepth,\n-                              *pCurrentContext,\n-                              environmentName);\n+   s_monitoredPythonModule = std::string();\n+   \n+   if (s_environmentLanguage == \"R\")\n+   {\n+      error = setEnvironmentName(*pContextDepth,\n+                                 *pCurrentContext,\n+                                 environmentName);\n+   }\n+   else if (s_environmentLanguage == \"Python\")\n+   {\n+      if (environmentName != s_monitoredPythonModule)\n+      {\n+         s_monitoredPythonModule = environmentName;\n+         \n+         ClientEvent event(client_events::kEnvironmentRefresh);\n+         module_context::enqueClientEvent(event);\n+      }\n+   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMTI1NA==", "bodyText": "Does this imply that the Python environment pane does not respect the manual/auto refresh setting? (Should it?)", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426911254", "createdAt": "2020-05-18T21:48:02Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/environment/SessionEnvironment.cpp", "diffHunk": "@@ -720,25 +772,56 @@ Error setContextDepth(boost::shared_ptr<int> pContextDepth,\n \n Error getEnvironmentState(boost::shared_ptr<int> pContextDepth,\n                           boost::shared_ptr<LineDebugState> pLineDebugState,\n-                          const json::JsonRpcRequest&,\n+                          const json::JsonRpcRequest& request,\n                           json::JsonRpcResponse* pResponse)\n {\n-   pResponse->setResult(commonEnvironmentStateData(*pContextDepth,\n-                                                   true, // include contents\n-                                                   pLineDebugState.get()));\n+   std::string language = \"R\";\n+   std::string environment = \"R_GlobalEnv\";\n+   Error error = json::readParams(request.params, &language, &environment);\n+   if (error)\n+      LOG_ERROR(error);\n+   \n+   json::Object jsonState;\n+   \n+   if (language == \"Python\")\n+   {\n+      jsonState = pythonEnvironmentStateData(environment);\n+   }\n+   else\n+   {\n+      jsonState = commonEnvironmentStateData(\n+               *pContextDepth,\n+               true,\n+               pLineDebugState.get());\n+   }\n+   \n+   pResponse->setResult(jsonState);\n    return Success();\n }\n \n-void onDetectChanges(module_context::ChangeSource source)\n+void onDetectChanges(module_context::ChangeSource /* source */)\n {\n    // Prevent recursive calls to this function\n    DROP_RECURSIVE_CALLS;\n \n+   // Check for Python changes.\n+   if (s_environmentLanguage == \"Python\" && !s_monitoredPythonModule.empty())\n+   {\n+      Error error =\n+            r::exec::RFunction(\".rs.reticulate.detectChanges\")\n+            .addParam(s_monitoredPythonModule)\n+            .call();\n+      \n+      if (error)\n+         LOG_ERROR(error);\n+   }\n+   \n    // Ignore if not monitoring\n    if (!s_monitoring)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxMjY2NQ==", "bodyText": "Not a checkin blocker, but I wonder if it'd be nicer to show this all the time as a sort of advertisement of what's possible. Attempting to switch modes before Python is initialized could show instructions for enabling the feature (by initializing python or installing the appropriate software). What do you think?", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r426912665", "createdAt": "2020-05-18T21:51:26Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/environment/EnvironmentPane.java", "diffHunk": "@@ -150,9 +170,38 @@ protected Toolbar createMainToolbar()\n \n    @Override\n    protected SecondaryToolbar createSecondaryToolbar()\n+   {\n+      initSecondaryToolbar();\n+      return secondaryToolbar_;\n+   }\n+   \n+   private void initSecondaryToolbar()\n    {\n       SecondaryToolbar toolbar = new SecondaryToolbar(\"Environment Tab Second\");\n       \n+      languageMenu_ = new ToolbarPopupMenu();\n+      \n+      MenuItem rMenuItem = new MenuItem(\"R\", () -> setActiveLanguage(\"R\", true));\n+      languageMenu_.addItem(rMenuItem);\n+      \n+      MenuItem pyMenuItem = new MenuItem(\"Python\", () -> setActiveLanguage(\"Python\", true));\n+      languageMenu_.addItem(pyMenuItem);\n+      \n+      languageButton_ = new ToolbarMenuButton(\n+            \"R\",\n+            ToolbarButton.NoTitle,\n+            (ImageResource) null,\n+            languageMenu_);\n+      \n+      // don't show the language button at first; instead,\n+      // toggle its visibility after the widget is created\n+      // depending on whether Python has been initialized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90b072efdc8dcd35a0437845e05b3f4ed7f9c39e"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f379d5ac4f17508ebdfd3b35d11298171120f76f", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/f379d5ac4f17508ebdfd3b35d11298171120f76f", "committedDate": "2020-05-18T22:09:45Z", "message": "better accommodate Python objects with undefined length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1471a34bb863f03a1cf1e862716f85e346c32cd2", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/1471a34bb863f03a1cf1e862716f85e346c32cd2", "committedDate": "2020-05-18T22:15:22Z", "message": "use flag to track python init status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d06f28537a95a7795f4a28ec41271536a43e8ef", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/7d06f28537a95a7795f4a28ec41271536a43e8ef", "committedDate": "2020-05-18T22:29:47Z", "message": "add missing include guards; use constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "398a5b759c9328a56b4ab6ce23e780db12e9d7e2", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/398a5b759c9328a56b4ab6ce23e780db12e9d7e2", "committedDate": "2020-05-18T22:30:47Z", "message": "another language check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf6f9a9469ae8c1616ef564351a1938a8fd8f1d7", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/bf6f9a9469ae8c1616ef564351a1938a8fd8f1d7", "committedDate": "2020-05-18T22:32:02Z", "message": "respect environment monitoring pref"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaa33bb0426ff967431a9875adfb6a54e6230922", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/aaa33bb0426ff967431a9875adfb6a54e6230922", "committedDate": "2020-05-18T22:41:21Z", "message": "ensure monitoring state is reflected in Python refresh"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c343524525acd817a7cfb9ee65c7552c8de7f37f", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/c343524525acd817a7cfb9ee65c7552c8de7f37f", "committedDate": "2020-05-18T22:47:38Z", "message": "always show language button in environment pane"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ffa83518ce7c38c90c0c7be3bad7da6140b4b3e", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/5ffa83518ce7c38c90c0c7be3bad7da6140b4b3e", "committedDate": "2020-05-18T22:49:41Z", "message": "RStudio, Inc. -> RStudio, PBC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fb7cad4655db3742265702ec9a532f4f75f2fa8", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/2fb7cad4655db3742265702ec9a532f4f75f2fa8", "committedDate": "2020-05-18T22:52:24Z", "message": "update copyright date"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODk1MjM3", "url": "https://github.com/rstudio/rstudio/pull/6862#pullrequestreview-414895237", "createdAt": "2020-05-19T23:37:07Z", "commit": {"oid": "2fb7cad4655db3742265702ec9a532f4f75f2fa8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTY3MTM4", "url": "https://github.com/rstudio/rstudio/pull/6862#pullrequestreview-415567138", "createdAt": "2020-05-20T17:37:43Z", "commit": {"oid": "2fb7cad4655db3742265702ec9a532f4f75f2fa8"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzozNzo0NFrOGYWsnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoyMzoyM1rOGYYU-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE5MDg3Ng==", "bodyText": "Do we need to track TODO via a new issue (otherwise our getting back to TODO's is pretty sporadic at best).", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r428190876", "createdAt": "2020-05-20T17:37:44Z", "author": {"login": "gtritchie"}, "path": "src/cpp/session/modules/SessionReticulate.R", "diffHunk": "@@ -1411,3 +1462,403 @@ html.heading = _heading\n    else\n       item\n })\n+\n+#    > str(.rs.describeObject(globalenv(), \"a\"))\n+# List of 10\n+#  $ name             : 'rs.scalar' chr \"a\"\n+#  $ type             : 'rs.scalar' chr \"numeric\"\n+#  $ clazz            : chr [1:2] \"numeric\" \"double\"\n+#  $ is_data          : 'rs.scalar' logi FALSE\n+#  $ value            : 'rs.scalar' chr \"1\"\n+#  $ description      : 'rs.scalar' chr \" num 1\"\n+#  $ size             : 'rs.scalar' num 56\n+#  $ length           : 'rs.scalar' int 1\n+#  $ contents         : list()\n+#  $ contents_deferred: 'rs.scalar' logi FALSE\n+.rs.addFunction(\"reticulate.describeObject\", function(name, parent)\n+{\n+   builtins <- reticulate::import_builtins(convert = TRUE)\n+   object <- if (inherits(parent, \"python.builtin.dict\"))\n+      reticulate::py_get_item(parent, name)\n+   else\n+      reticulate::py_get_attr(parent, name)\n+   \n+   # is this object 'data'? consider non-callable, non-module objects as data\n+   isData <- !(\n+      grepl(\"^__.*__$\", name) ||\n+      reticulate:::py_is_callable(object) ||\n+      reticulate:::py_is_module(object)\n+   )\n+   \n+   # TODO: there isn't really a distinction between an objects \"type\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fb7cad4655db3742265702ec9a532f4f75f2fa8"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxNzU5NA==", "bodyText": "nit: single year for new files", "url": "https://github.com/rstudio/rstudio/pull/6862#discussion_r428217594", "createdAt": "2020-05-20T18:23:23Z", "author": {"login": "gtritchie"}, "path": "src/gwt/tools/editor-settings/eclipse-templates.xml", "diffHunk": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><templates><template autoinsert=\"true\" context=\"java\" deleted=\"false\" description=\"Boilerplate for a GWT event.\" enabled=\"true\" name=\"GWTEvent\">/*\n  * ${event}Event.java\n  *\n- * Copyright (C) 2020 by RStudio, PBC\n+ * Copyright (C) 2009-${year} by RStudio, PBC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fb7cad4655db3742265702ec9a532f4f75f2fa8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8919c5b5d4353c67b5c60d920e45343b5fb51200", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/8919c5b5d4353c67b5c60d920e45343b5fb51200", "committedDate": "2020-05-20T20:01:11Z", "message": "TODO is really a NOTE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e3d2d8c95f02cfee10c232c81533c7026e438d", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/17e3d2d8c95f02cfee10c232c81533c7026e438d", "committedDate": "2020-05-20T20:01:30Z", "message": "use only current year for header"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 260, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}