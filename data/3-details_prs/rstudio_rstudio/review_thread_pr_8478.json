{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2ODM5NDk4", "number": 8478, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTowNDoyN1rOE_TDaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTowNDoyN1rOE_TDaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODA3OTEyOnYy", "diffSide": "RIGHT", "path": "src/cpp/r/session/REmbeddedWin32.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTowNDoyN1rOH87lFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxOTowNDoyN1rOH87lFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY1Mjc1Ng==", "bodyText": "\ud83e\udd2e", "url": "https://github.com/rstudio/rstudio/pull/8478#discussion_r533652756", "createdAt": "2020-12-01T19:04:27Z", "author": {"login": "jmcphers"}, "path": "src/cpp/r/session/REmbeddedWin32.cpp", "diffHunk": "@@ -104,6 +106,74 @@ int askYesNoCancel(const char* question)\n    }\n }\n \n+bool initializeMaxMemoryDangerously()\n+{\n+   Error error;\n+\n+   void* pLibrary = nullptr;\n+   error = core::system::loadLibrary(\"R.dll\", &pLibrary);\n+   if (error)\n+      return false;\n+\n+   // first, see if we can load the 'R_max_memory' symbol directly\n+   size_t* p_R_max_memory = nullptr;\n+   error = core::system::loadSymbol(\n+            pLibrary,\n+            \"R_max_memory\",\n+            (void**) &p_R_max_memory);\n+\n+   if (error)\n+   {\n+      // terrible, terrible hack -- for typical builds of R from CRAN,\n+      // the memory address for R_max_memory lies just before the\n+      // Rwin_graphicsx symbol, so find that symbol, and compute the\n+      // position of R_max_memory offset from that\n+      char* p_Rwin_graphicsx = nullptr;\n+      error = core::system::loadSymbol(\n+               pLibrary,\n+               \"Rwin_graphicsx\",\n+               (void**) &p_Rwin_graphicsx);\n+\n+      if (error)\n+         return false;\n+\n+      // get memory address for R_max_memory\n+      p_R_max_memory = (size_t*) (p_Rwin_graphicsx - sizeof(size_t));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f09e8a739448e109a4de58c02d2ae25e711be37a"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4129, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}