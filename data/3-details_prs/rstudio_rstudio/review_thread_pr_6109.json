{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzQ2NjIw", "number": 6109, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzowMjoyOFrODbcGXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTo0MjowMVrODbnoKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDk4NTI0OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzowMjoyOFrOFi7V0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzowMjoyOFrOFi7V0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2ODE0NA==", "bodyText": "If the app had started up with real time turned off, turning it on without restarting the app wouldn't then call loadDictionary() to ensure that Typo.js was loaded.", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372168144", "createdAt": "2020-01-29T03:02:28Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "diffHunk": "@@ -183,11 +183,12 @@ public TypoSpellChecker(Context context)\n \n       // subscribe to spelling prefs changes (invalidateAll on changes)\n       ValueChangeHandler<Boolean> prefChangedHandler = (event) -> context_.invalidateAllWords();\n+      ValueChangeHandler<Boolean> realtimeChangedHandler = (event) -> loadDictionary();\n       ValueChangeHandler<String> dictChangedHandler = (event) -> loadDictionary();\n-      userPrefs_.realTimeSpellchecking().addValueChangeHandler(prefChangedHandler);\n       userPrefs_.ignoreUppercaseWords().addValueChangeHandler(prefChangedHandler);\n       userPrefs_.ignoreWordsWithNumbers().addValueChangeHandler(prefChangedHandler);\n       userPrefs_.spellingDictionaryLanguage().addValueChangeHandler(dictChangedHandler);\n+      userPrefs_.realTimeSpellchecking().addValueChangeHandler(realtimeChangedHandler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDk5MDk1OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzowNToyOVrOFi7Y5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMzowNToyOVrOFi7Y5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2ODkzNA==", "bodyText": "I spot checked a few other dictionaries and they seemed ok, these are the ones listed in the bug. Adding more to this list will be easy and the intention is to not have this problem for too long. If we decide to not spend more time working on this issue, which could be reasonable considering all the variables, I'd move this to a more permanent external home.\nBy removing canRealtimeSpellcheckDict we can easily be pointed to and clear out all of the subsequent cruft that uses it.", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372168934", "createdAt": "2020-01-29T03:05:29Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "diffHunk": "@@ -398,6 +409,26 @@ public boolean shouldCheckSpelling(DocDisplay dd, Range r)\n       return true;\n    }\n \n+   /*\n+      Stop gap function to prevent loading dictionaries that Typo.js has\n+      severe issues with. This is being tracked to be fixed in issue #6041 as\n+      soon as possible so this can then be removed.\n+    */\n+   private static String[] realtimeDictBlacklist = {\"cs_CZ\", \"de_DE_neu\", \"lt_LT\", \"pt_BR\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjg0NDU5OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTozNTowMlrOFjM6tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjo0Mjo1MVrOFjPi5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ1NjExOQ==", "bodyText": "Is the dictionary load idempotent? (seems like if it isn't we'd want to make sure it isn't loaded and avoid loading when the pref changes to false)", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372456119", "createdAt": "2020-01-29T15:35:02Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "diffHunk": "@@ -183,11 +183,12 @@ public TypoSpellChecker(Context context)\n \n       // subscribe to spelling prefs changes (invalidateAll on changes)\n       ValueChangeHandler<Boolean> prefChangedHandler = (event) -> context_.invalidateAllWords();\n+      ValueChangeHandler<Boolean> realtimeChangedHandler = (event) -> loadDictionary();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5OTE3Mg==", "bodyText": "I should probably just rename the function. loadDictionary checks the values of all relevant preferences now before proceeding.", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372499172", "createdAt": "2020-01-29T16:42:51Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "diffHunk": "@@ -183,11 +183,12 @@ public TypoSpellChecker(Context context)\n \n       // subscribe to spelling prefs changes (invalidateAll on changes)\n       ValueChangeHandler<Boolean> prefChangedHandler = (event) -> context_.invalidateAllWords();\n+      ValueChangeHandler<Boolean> realtimeChangedHandler = (event) -> loadDictionary();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ1NjExOQ=="}, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjg2MjE4OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/views/SpellingPreferencesPane.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTozOToxMFrOFjNFZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMDo0OToyNVrOFjXDHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ1ODg1NA==", "bodyText": "There are a number of RStudio themes in the wild which attempt to dark-theme the dialogs. This is not technically supported but this will break them. What do you think about using opacity instead?", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372458854", "createdAt": "2020-01-29T15:39:10Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/views/SpellingPreferencesPane.java", "diffHunk": "@@ -54,12 +57,28 @@ public SpellingPreferencesPane(GlobalDisplay globalDisplay,\n       spaced(customDictsWidget_);\n       nudgeRight(customDictsWidget_);\n       add(customDictsWidget_);\n-            \n+\n       add(checkboxPref(\"Ignore words in UPPERCASE\", prefs.ignoreUppercaseWords()));\n-      \n       add(checkboxPref(\"Ignore words with numbers\", prefs.ignoreWordsWithNumbers()));\n \n-      add(checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking()));\n+      boolean canRealtime = TypoSpellChecker.canRealtimeSpellcheckDict(prefs.spellingDictionaryLanguage().getValue());\n+      realtimeSpellcheckingCheckbox_ = checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking());\n+      realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtime ? \"black\" : \"darkgrey\");\n+      add(realtimeSpellcheckingCheckbox_);\n+\n+      blacklistWarning_ = new Label(\"Real time spellchecking currently unavailable for this dictionary\");\n+      blacklistWarning_.getElement().getStyle().setColor(\"red\");\n+      blacklistWarning_.setVisible(!canRealtime);\n+\n+      add(blacklistWarning_);\n+\n+      languageWidget_.addChangeHandler((event) -> {\n+         boolean canRealtimeCheck = TypoSpellChecker.canRealtimeSpellcheckDict(languageWidget_.getSelectedLanguage());\n+         blacklistWarning_.setVisible(!canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setValue(realtimeSpellcheckingCheckbox_.getValue() && canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setEnabled(canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtimeCheck ? \"black\" : \"darkgrey\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ5OTc0MQ==", "bodyText": "I'll give it a shot and see if it looks ok. Would be curious to play around with those themes!", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372499741", "createdAt": "2020-01-29T16:43:46Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/views/SpellingPreferencesPane.java", "diffHunk": "@@ -54,12 +57,28 @@ public SpellingPreferencesPane(GlobalDisplay globalDisplay,\n       spaced(customDictsWidget_);\n       nudgeRight(customDictsWidget_);\n       add(customDictsWidget_);\n-            \n+\n       add(checkboxPref(\"Ignore words in UPPERCASE\", prefs.ignoreUppercaseWords()));\n-      \n       add(checkboxPref(\"Ignore words with numbers\", prefs.ignoreWordsWithNumbers()));\n \n-      add(checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking()));\n+      boolean canRealtime = TypoSpellChecker.canRealtimeSpellcheckDict(prefs.spellingDictionaryLanguage().getValue());\n+      realtimeSpellcheckingCheckbox_ = checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking());\n+      realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtime ? \"black\" : \"darkgrey\");\n+      add(realtimeSpellcheckingCheckbox_);\n+\n+      blacklistWarning_ = new Label(\"Real time spellchecking currently unavailable for this dictionary\");\n+      blacklistWarning_.getElement().getStyle().setColor(\"red\");\n+      blacklistWarning_.setVisible(!canRealtime);\n+\n+      add(blacklistWarning_);\n+\n+      languageWidget_.addChangeHandler((event) -> {\n+         boolean canRealtimeCheck = TypoSpellChecker.canRealtimeSpellcheckDict(languageWidget_.getSelectedLanguage());\n+         blacklistWarning_.setVisible(!canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setValue(realtimeSpellcheckingCheckbox_.getValue() && canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setEnabled(canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtimeCheck ? \"black\" : \"darkgrey\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ1ODg1NA=="}, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU0NzkwMg==", "bodyText": "It looks good!", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372547902", "createdAt": "2020-01-29T18:14:48Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/views/SpellingPreferencesPane.java", "diffHunk": "@@ -54,12 +57,28 @@ public SpellingPreferencesPane(GlobalDisplay globalDisplay,\n       spaced(customDictsWidget_);\n       nudgeRight(customDictsWidget_);\n       add(customDictsWidget_);\n-            \n+\n       add(checkboxPref(\"Ignore words in UPPERCASE\", prefs.ignoreUppercaseWords()));\n-      \n       add(checkboxPref(\"Ignore words with numbers\", prefs.ignoreWordsWithNumbers()));\n \n-      add(checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking()));\n+      boolean canRealtime = TypoSpellChecker.canRealtimeSpellcheckDict(prefs.spellingDictionaryLanguage().getValue());\n+      realtimeSpellcheckingCheckbox_ = checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking());\n+      realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtime ? \"black\" : \"darkgrey\");\n+      add(realtimeSpellcheckingCheckbox_);\n+\n+      blacklistWarning_ = new Label(\"Real time spellchecking currently unavailable for this dictionary\");\n+      blacklistWarning_.getElement().getStyle().setColor(\"red\");\n+      blacklistWarning_.setVisible(!canRealtime);\n+\n+      add(blacklistWarning_);\n+\n+      languageWidget_.addChangeHandler((event) -> {\n+         boolean canRealtimeCheck = TypoSpellChecker.canRealtimeSpellcheckDict(languageWidget_.getSelectedLanguage());\n+         blacklistWarning_.setVisible(!canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setValue(realtimeSpellcheckingCheckbox_.getValue() && canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setEnabled(canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtimeCheck ? \"black\" : \"darkgrey\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ1ODg1NA=="}, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyMjEwOA==", "bodyText": "Here's one such theme: https://github.com/anthonynorth/rscodeio", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372622108", "createdAt": "2020-01-29T20:49:25Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/prefs/views/SpellingPreferencesPane.java", "diffHunk": "@@ -54,12 +57,28 @@ public SpellingPreferencesPane(GlobalDisplay globalDisplay,\n       spaced(customDictsWidget_);\n       nudgeRight(customDictsWidget_);\n       add(customDictsWidget_);\n-            \n+\n       add(checkboxPref(\"Ignore words in UPPERCASE\", prefs.ignoreUppercaseWords()));\n-      \n       add(checkboxPref(\"Ignore words with numbers\", prefs.ignoreWordsWithNumbers()));\n \n-      add(checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking()));\n+      boolean canRealtime = TypoSpellChecker.canRealtimeSpellcheckDict(prefs.spellingDictionaryLanguage().getValue());\n+      realtimeSpellcheckingCheckbox_ = checkboxPref(\"Use real time spellchecking\", prefs.realTimeSpellchecking());\n+      realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtime ? \"black\" : \"darkgrey\");\n+      add(realtimeSpellcheckingCheckbox_);\n+\n+      blacklistWarning_ = new Label(\"Real time spellchecking currently unavailable for this dictionary\");\n+      blacklistWarning_.getElement().getStyle().setColor(\"red\");\n+      blacklistWarning_.setVisible(!canRealtime);\n+\n+      add(blacklistWarning_);\n+\n+      languageWidget_.addChangeHandler((event) -> {\n+         boolean canRealtimeCheck = TypoSpellChecker.canRealtimeSpellcheckDict(languageWidget_.getSelectedLanguage());\n+         blacklistWarning_.setVisible(!canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setValue(realtimeSpellcheckingCheckbox_.getValue() && canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.setEnabled(canRealtimeCheck);\n+         realtimeSpellcheckingCheckbox_.getElement().getStyle().setColor(canRealtimeCheck ? \"black\" : \"darkgrey\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ1ODg1NA=="}, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjg3NDAyOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNTo0MjowMVrOFjNMqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjo0ODo0NlrOFjPwaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2MDcxNA==", "bodyText": "I think we should avoid committing a pref change here as it's extremely implicit -- prefs should generally only change due to a user gesture that indicates intent since users can now diff their prefs. Would just bailing from the check do the job here?", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372460714", "createdAt": "2020-01-29T15:42:01Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "diffHunk": "@@ -335,18 +336,28 @@ private void updateIgnoredWordsIndex()\n \n    private void loadDictionary()\n    {\n-      // don't load the same dictionary again\n       final String language = userPrefs_.spellingDictionaryLanguage().getValue();\n-      if (typoLoaded_ && loadedDict_ == language)\n+\n+      if (!userPrefs_.realTimeSpellchecking().getValue() || typoLoaded_ && loadedDict_.equals(language))\n          return;\n-      \n+\n+      // See canRealtimeSpellcheckDict comment, temporary stop gap\n+      // Disable real time spellchecking if this dictionary is incompatible\n+      // with Typo.js. Final invariant check to ensure that we never try to\n+      // load a blacklisted dictionary.\n+      if (!canRealtimeSpellcheckDict(language))\n+      {\n+         userPrefs_.realTimeSpellchecking().setGlobalValue(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjUwMjYzMw==", "bodyText": "That should be fine. It's a little weird from the code side because the LintManager and other relevant bits will proceed as if real time checking is on but if we always no-op out of the calls I don't see the harm as the user will see the disabled message when they check options and then it will be saved correctly.", "url": "https://github.com/rstudio/rstudio/pull/6109#discussion_r372502633", "createdAt": "2020-01-29T16:48:46Z", "author": {"login": "adamconroy"}, "path": "src/gwt/src/org/rstudio/studio/client/common/spelling/TypoSpellChecker.java", "diffHunk": "@@ -335,18 +336,28 @@ private void updateIgnoredWordsIndex()\n \n    private void loadDictionary()\n    {\n-      // don't load the same dictionary again\n       final String language = userPrefs_.spellingDictionaryLanguage().getValue();\n-      if (typoLoaded_ && loadedDict_ == language)\n+\n+      if (!userPrefs_.realTimeSpellchecking().getValue() || typoLoaded_ && loadedDict_.equals(language))\n          return;\n-      \n+\n+      // See canRealtimeSpellcheckDict comment, temporary stop gap\n+      // Disable real time spellchecking if this dictionary is incompatible\n+      // with Typo.js. Final invariant check to ensure that we never try to\n+      // load a blacklisted dictionary.\n+      if (!canRealtimeSpellcheckDict(language))\n+      {\n+         userPrefs_.realTimeSpellchecking().setGlobalValue(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ2MDcxNA=="}, "originalCommit": {"oid": "b47dede0e954e3ed6185f164b5bc4e407f1b5313"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4030, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}