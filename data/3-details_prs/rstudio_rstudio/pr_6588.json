{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MzM0NDEy", "number": 6588, "title": "improve handling of multiline Python blocks in console", "bodyText": "This PR fixes an issue where attempts to submit blocks of Python code with inconsistent indentation (e.g. blank lines between statements) to the reticulate REPL would fail. To fix this, we attempt to fix the indentation of blank lines post-hoc when code is submitted to the console.\nThis, admittedly, feels like a kludge. However, we have one major constraint: reticulate relies on R's readline(), which reads a single newline-buffered line at a time. Ultimately, that implies the fix needs to occur before the code is submitted to reticulate. And since an empty line submitted to reticulate is normally treated as the end of a block, we need to explicitly side-step that behavior by adjusting the code indent.\nAn alternative approach would be to use some sort of special encoding for blocks of code submitted to the reticulate REPL, and teach reticulate how to unravel those blocks, but this solution has the nice property of being compatible with the existing version of reticulate and ultimately feeling transparent.\nCloses #5904.", "createdAt": "2020-04-03T18:57:16Z", "url": "https://github.com/rstudio/rstudio/pull/6588", "merged": true, "mergeCommit": {"oid": "2f49492485b87d468ca2e0928304cf0612de2460"}, "closed": true, "closedAt": "2020-04-14T23:21:32Z", "author": {"login": "kevinushey"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcT0oebgH2gAyMzk4MzM0NDEyOjgwNGQyMTE4ZTg2MGE2MTJhMmFhOTY0MGY1OGI4MWI5ZTJiYTAzMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXWExkAFqTM5MjQ2NDE4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "804d2118e860a612a2aa9640f58b81b9e2ba030d", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/804d2118e860a612a2aa9640f58b81b9e2ba030d", "committedDate": "2020-04-02T23:09:55Z", "message": "fix indent in blocks of submitted Python code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab6a268c0a97a287fc000b0fa576b81f35a05470", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/ab6a268c0a97a287fc000b0fa576b81f35a05470", "committedDate": "2020-04-03T18:30:53Z", "message": "improve indent tracking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "155b57ce1e9f8ac536c7d39591b16cce25295c26", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/155b57ce1e9f8ac536c7d39591b16cce25295c26", "committedDate": "2020-04-03T18:45:16Z", "message": "use module API for repl active"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3c95e8bafd89ff93477f03e88aaf39255aacde6", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/b3c95e8bafd89ff93477f03e88aaf39255aacde6", "committedDate": "2020-04-03T18:46:25Z", "message": "clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6440d1b6f2d17bcd4f987aefa24d430adb2c815", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/b6440d1b6f2d17bcd4f987aefa24d430adb2c815", "committedDate": "2020-04-03T18:56:37Z", "message": "check for closed block"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51e815684589ce4d0264abd3db1474c2e23b68fb", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/51e815684589ce4d0264abd3db1474c2e23b68fb", "committedDate": "2020-04-03T19:12:02Z", "message": "missing else"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/95b01d28cf27040dbb30eba9da89c019751d0a46", "committedDate": "2020-04-03T19:15:31Z", "message": "more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjAwMDEy", "url": "https://github.com/rstudio/rstudio/pull/6588#pullrequestreview-387600012", "createdAt": "2020-04-03T21:47:57Z", "commit": {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTo0Nzo1N1rOGAqsHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMjoxMDowMFrOGArJ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MjYwNw==", "bodyText": "Nit: update file copyright", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403352607", "createdAt": "2020-04-03T21:47:57Z", "author": {"login": "gtritchie"}, "path": "src/cpp/core/StringUtils.cpp", "diffHunk": "@@ -774,6 +774,14 @@ bool extractCommentHeader(const std::string& contents,\n    return true;\n }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1Mjc4NQ==", "bodyText": "Nit: file copyright", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403352785", "createdAt": "2020-04-03T21:48:29Z", "author": {"login": "gtritchie"}, "path": "src/cpp/core/include/core/StringUtils.hpp", "diffHunk": "@@ -290,6 +290,8 @@ bool extractCommentHeader(const std::string& contents,\n                           const std::string& reCommentPrefix,\n                           std::string* pHeader);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1MzAxOA==", "bodyText": "Nit: file copyright", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403353018", "createdAt": "2020-04-03T21:49:03Z", "author": {"login": "gtritchie"}, "path": "src/cpp/session/SessionConsoleInput.cpp", "diffHunk": "@@ -15,6 +15,8 @@\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM1OTMwOA==", "bodyText": "Minor, could simplify to if (input.text.find('\\n') == std::string::npos) and eliminate index variable.", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403359308", "createdAt": "2020-04-03T22:07:19Z", "author": {"login": "gtritchie"}, "path": "src/cpp/session/SessionConsoleInput.cpp", "diffHunk": "@@ -156,11 +157,127 @@ void reissueLastConsolePrompt()\n \n void clearConsoleInputBuffer()\n {\n-   // Discard any buffered input\n-   while (!s_consoleInputBuffer.empty())\n-      s_consoleInputBuffer.pop();\n+   s_consoleInputBuffer = {};\n+}\n+\n+namespace {\n+\n+// this function takes the next chunk of (potentially multi-line) pending\n+// console input in the queue, then splits it into separate pieces of console\n+// input with one piece of input for each line.\n+//\n+// we also fix up indentation if we can determine that the\n+// code is going to be sent to the reticulate Python REPL.\n+void fixupPendingConsoleInput()\n+{\n+   // get next input\n+   auto input = s_consoleInputBuffer.front();\n+   \n+   // nothing to do if this is a cancel\n+   if (input.cancel)\n+      return;\n+   \n+   // if this has no newlines, then nothing to do\n+   auto index = input.text.find('\\n');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2MDIzOA==", "bodyText": "If you're considering it, maybe now is the time? :-)", "url": "https://github.com/rstudio/rstudio/pull/6588#discussion_r403360238", "createdAt": "2020-04-03T22:10:00Z", "author": {"login": "gtritchie"}, "path": "src/cpp/session/SessionConsoleInput.cpp", "diffHunk": "@@ -156,11 +157,127 @@ void reissueLastConsolePrompt()\n \n void clearConsoleInputBuffer()\n {\n-   // Discard any buffered input\n-   while (!s_consoleInputBuffer.empty())\n-      s_consoleInputBuffer.pop();\n+   s_consoleInputBuffer = {};\n+}\n+\n+namespace {\n+\n+// this function takes the next chunk of (potentially multi-line) pending\n+// console input in the queue, then splits it into separate pieces of console\n+// input with one piece of input for each line.\n+//\n+// we also fix up indentation if we can determine that the\n+// code is going to be sent to the reticulate Python REPL.\n+void fixupPendingConsoleInput()\n+{\n+   // get next input\n+   auto input = s_consoleInputBuffer.front();\n+   \n+   // nothing to do if this is a cancel\n+   if (input.cancel)\n+      return;\n+   \n+   // if this has no newlines, then nothing to do\n+   auto index = input.text.find('\\n');\n+   if (index == std::string::npos)\n+      return;\n+   \n+   // if we're about to send code to the Python REPL, then\n+   // we need to fix whitespace in the code before sending\n+   bool pyReplActive = modules::reticulate::isReplActive();\n+   \n+   // pop off current input (we're going to split and re-push now)\n+   s_consoleInputBuffer.pop();\n+   \n+   // does this Python line start an indented block?\n+   // NOTE: should consider using tokenizer here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b01d28cf27040dbb30eba9da89c019751d0a46"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "730f9c9efc7e1530da1791604f80f324a36889c3", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/730f9c9efc7e1530da1791604f80f324a36889c3", "committedDate": "2020-04-13T21:35:56Z", "message": "update copyright dates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDY0MTg1", "url": "https://github.com/rstudio/rstudio/pull/6588#pullrequestreview-392464185", "createdAt": "2020-04-13T21:49:28Z", "commit": {"oid": "730f9c9efc7e1530da1791604f80f324a36889c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 316, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}