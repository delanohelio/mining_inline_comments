{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyOTQ1NjAx", "number": 8056, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowNjoxMlrOEtQWvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowNjoxMlrOEtQWvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODg5MzQzOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputStream.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowNjoxMlrOHg8hqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODozNDo0NlrOHhgCJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwODEzOQ==", "bodyText": "This could very well be happening over a WAN or slow connection so 50ms may not be enough time for everything to load (such that we are guaranteed to have the final height). Maybe we should wait for the frame's load event?", "url": "https://github.com/rstudio/rstudio/pull/8056#discussion_r504308139", "createdAt": "2020-10-13T23:06:12Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputStream.java", "diffHunk": "@@ -447,15 +451,29 @@ public void showCallbackHtml(String htmlOutput)\n          public void execute()\n          {\n             DomUtils.fillIFrame(frame.getIFrame(), htmlOutput);\n+            DomUtils.forwardWheelEvent(frame.getIFrame().getContentDocument(), parentElement);\n+            \n+            Document anotherDoc = frame.getWindow().getDocument().getOwnerDocument();\n             int contentHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n             frame.getElement().getStyle().setHeight(contentHeight, Unit.PX);\n             frame.getElement().getStyle().setWidth(100, Unit.PCT);\n             onHeightChanged();\n \n             Command handler = () -> {\n-               int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n-               frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n-               onHeightChanged();\n+               // reset height so we can shrink it if necessary\n+               frame.getElement().getStyle().setHeight(0, Unit.PX);\n+  \n+               // delay calculating the height so any images can load\n+               new Timer()\n+               {\n+                  @Override\n+                  public void run()\n+                  {\n+                     int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n+                     frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n+                     onHeightChanged();\n+                  }\n+               }.schedule(50);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e9ad2ffcf3cb2eb70f601d5a0bddce2bec89a44"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3OTkzMg==", "bodyText": "Unfortunately the load event gets sent only to the iframe and isn't forwarded to the IDE. We have a MutationObserver monitoring the iframe for changes to know when to adjust the height, but the callback I've been using downloads images via HTTP requests so the observer recognizes that change and immediately adjusts the height, but before the image has downloaded.\nI talked with Jeff about this and it shouldn't be a major issue as the majority of the images they'll be sending will be small. We also discovered that if the <img> tag in the callback is passed with a height argument then we can circumvent the need to delay the load. I still like the idea of delaying it slightly if it's not noticeable. What do you think?", "url": "https://github.com/rstudio/rstudio/pull/8056#discussion_r504779932", "createdAt": "2020-10-14T15:39:38Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputStream.java", "diffHunk": "@@ -447,15 +451,29 @@ public void showCallbackHtml(String htmlOutput)\n          public void execute()\n          {\n             DomUtils.fillIFrame(frame.getIFrame(), htmlOutput);\n+            DomUtils.forwardWheelEvent(frame.getIFrame().getContentDocument(), parentElement);\n+            \n+            Document anotherDoc = frame.getWindow().getDocument().getOwnerDocument();\n             int contentHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n             frame.getElement().getStyle().setHeight(contentHeight, Unit.PX);\n             frame.getElement().getStyle().setWidth(100, Unit.PCT);\n             onHeightChanged();\n \n             Command handler = () -> {\n-               int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n-               frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n-               onHeightChanged();\n+               // reset height so we can shrink it if necessary\n+               frame.getElement().getStyle().setHeight(0, Unit.PX);\n+  \n+               // delay calculating the height so any images can load\n+               new Timer()\n+               {\n+                  @Override\n+                  public void run()\n+                  {\n+                     int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n+                     frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n+                     onHeightChanged();\n+                  }\n+               }.schedule(50);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwODEzOQ=="}, "originalCommit": {"oid": "0e9ad2ffcf3cb2eb70f601d5a0bddce2bec89a44"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg1NDk5Mg==", "bodyText": "Do we have any other way of detecting that the frame is fully loaded? I wonder if this should be a repeating command that basically polls until the iframe is \"ready\", and then runs only when ready.", "url": "https://github.com/rstudio/rstudio/pull/8056#discussion_r504854992", "createdAt": "2020-10-14T17:36:16Z", "author": {"login": "kevinushey"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputStream.java", "diffHunk": "@@ -447,15 +451,29 @@ public void showCallbackHtml(String htmlOutput)\n          public void execute()\n          {\n             DomUtils.fillIFrame(frame.getIFrame(), htmlOutput);\n+            DomUtils.forwardWheelEvent(frame.getIFrame().getContentDocument(), parentElement);\n+            \n+            Document anotherDoc = frame.getWindow().getDocument().getOwnerDocument();\n             int contentHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n             frame.getElement().getStyle().setHeight(contentHeight, Unit.PX);\n             frame.getElement().getStyle().setWidth(100, Unit.PCT);\n             onHeightChanged();\n \n             Command handler = () -> {\n-               int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n-               frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n-               onHeightChanged();\n+               // reset height so we can shrink it if necessary\n+               frame.getElement().getStyle().setHeight(0, Unit.PX);\n+  \n+               // delay calculating the height so any images can load\n+               new Timer()\n+               {\n+                  @Override\n+                  public void run()\n+                  {\n+                     int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n+                     frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n+                     onHeightChanged();\n+                  }\n+               }.schedule(50);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwODEzOQ=="}, "originalCommit": {"oid": "0e9ad2ffcf3cb2eb70f601d5a0bddce2bec89a44"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4OTg5NA==", "bodyText": "Unfortunately not that I'm aware of without requiring the user to include some logic in the callback (and having them set the img height is probably the simplest way); both load and readystate give false positives.", "url": "https://github.com/rstudio/rstudio/pull/8056#discussion_r504889894", "createdAt": "2020-10-14T18:34:46Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/source/editors/text/ChunkOutputStream.java", "diffHunk": "@@ -447,15 +451,29 @@ public void showCallbackHtml(String htmlOutput)\n          public void execute()\n          {\n             DomUtils.fillIFrame(frame.getIFrame(), htmlOutput);\n+            DomUtils.forwardWheelEvent(frame.getIFrame().getContentDocument(), parentElement);\n+            \n+            Document anotherDoc = frame.getWindow().getDocument().getOwnerDocument();\n             int contentHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n             frame.getElement().getStyle().setHeight(contentHeight, Unit.PX);\n             frame.getElement().getStyle().setWidth(100, Unit.PCT);\n             onHeightChanged();\n \n             Command handler = () -> {\n-               int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n-               frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n-               onHeightChanged();\n+               // reset height so we can shrink it if necessary\n+               frame.getElement().getStyle().setHeight(0, Unit.PX);\n+  \n+               // delay calculating the height so any images can load\n+               new Timer()\n+               {\n+                  @Override\n+                  public void run()\n+                  {\n+                     int newHeight = frame.getWindow().getDocument().getDocumentElement().getOffsetHeight();\n+                     frame.getElement().getStyle().setHeight(newHeight, Unit.PX);\n+                     onHeightChanged();\n+                  }\n+               }.schedule(50);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwODEzOQ=="}, "originalCommit": {"oid": "0e9ad2ffcf3cb2eb70f601d5a0bddce2bec89a44"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4147, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}