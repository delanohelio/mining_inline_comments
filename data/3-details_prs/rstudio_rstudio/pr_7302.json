{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDE3NTAy", "number": 7302, "title": "navigate to bookdown xrefs in omni-search", "bodyText": "This PR makes it possible to navigate to sections, figures and tables within a bookdown project via the fuzzy finder.\n\nSome questions worth answering before final merge:\n\nWhat should we display for sections / figures / tables? The caption? The ID? Some combination?\nIs it worth refining the search for the associated title string in source-only XRef navigation?", "createdAt": "2020-07-08T18:38:48Z", "url": "https://github.com/rstudio/rstudio/pull/7302", "merged": true, "mergeCommit": {"oid": "0002b921e7615de736697d421dde3241351a3014"}, "closed": true, "closedAt": "2020-07-20T23:17:56Z", "author": {"login": "kevinushey"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy-6T3AFqTQ0NTAzMzgzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc254uAAH2gAyNDQ2NDE3NTAyOjM0ZDJkN2JlY2ZmNTNiNTc3ZWJmNjhhOGViNzg0ZjBlNTJhMWYwMDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDMzODM5", "url": "https://github.com/rstudio/rstudio/pull/7302#pullrequestreview-445033839", "createdAt": "2020-07-08T18:40:06Z", "commit": {"oid": "5cfad3d781351e5794bd4781db7be4e26e6a74bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0MDowNlrOGu0siw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo0MDowNlrOGu0siw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MTA1MQ==", "bodyText": "@jjallaire: are there any other reference types I should handle here?", "url": "https://github.com/rstudio/rstudio/pull/7302#discussion_r451751051", "createdAt": "2020-07-08T18:40:06Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/modules/SessionCodeSearch.cpp", "diffHunk": "@@ -1543,6 +1552,100 @@ SourceItem fromCppDefinition(const clang::CppDefinition& cppDefinition)\n       safe_convert::numberTo<int>(cppDefinition.location.column, 1));\n }\n \n+void fillFromBookdownRefs(const std::string& term,\n+                          std::vector<SourceItem>* pSourceItems)\n+{\n+   // retrieve refs for this project\n+   core::json::Value bookdownIndex = module_context::bookdownXRefIndex();\n+   core::debug::print(bookdownIndex);\n+   \n+   // may be null if we have no bookdown refs (typically implies\n+   // we're not in a bookdown project)\n+   if (!bookdownIndex.isObject())\n+      return;\n+   \n+   std::string baseDir;\n+   core::json::Array bookdownRefs;\n+   \n+   Error error = core::json::readObject(\n+            bookdownIndex.getObject(),\n+            \"baseDir\", baseDir,\n+            \"refs\", bookdownRefs);\n+   \n+   if (error)\n+   {\n+      LOG_ERROR(error);\n+      return;\n+   }\n+   \n+   FilePath basePath = module_context::resolveAliasedPath(baseDir);\n+   \n+   // {\n+   //     \"file\": \"01-intro.Rmd\",\n+   //     \"type\": \"h1\",\n+   //     \"id\": \"intro\",\n+   //     \"title\": \"Introduction\"\n+   // }\n+   \n+   for (const json::Value& bookdownRef : bookdownRefs)\n+   {\n+      if (!bookdownRef.isObject())\n+         continue;\n+      \n+      std::string file, type, id, title;\n+      Error error = core::json::readObject(\n+               bookdownRef.getObject(),\n+               \"file\", file,\n+               \"type\", type,\n+               \"id\", id,\n+               \"title\", title);\n+      \n+      if (error)\n+      {\n+         LOG_ERROR(error);\n+         continue;\n+      }\n+      \n+      // figure out appropriate source item type\n+      SourceItem::Type sourceType = SourceItem::None;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cfad3d781351e5794bd4781db7be4e26e6a74bd"}, "originalPosition": 132}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfc6a8bf61c7660e5e2259f27139a2261552a49e", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/cfc6a8bf61c7660e5e2259f27139a2261552a49e", "committedDate": "2020-07-08T18:53:55Z", "message": "tweaks"}, "afterCommit": {"oid": "fc8f15f3a94711c53e9c829cc358f93ce2805b2e", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/fc8f15f3a94711c53e9c829cc358f93ce2805b2e", "committedDate": "2020-07-08T21:47:14Z", "message": "tweaks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDQ5MDY1", "url": "https://github.com/rstudio/rstudio/pull/7302#pullrequestreview-446049065", "createdAt": "2020-07-10T00:20:28Z", "commit": {"oid": "fc8f15f3a94711c53e9c829cc358f93ce2805b2e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDoyMDoyOFrOGvl95A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDozNjozMFrOGvmNJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1ODMwOA==", "bodyText": "There's also equations and theorems (although the latter obscure enough that we probably don't need navigation for it).", "url": "https://github.com/rstudio/rstudio/pull/7302#discussion_r452558308", "createdAt": "2020-07-10T00:20:28Z", "author": {"login": "jjallaire"}, "path": "src/cpp/session/modules/SessionCodeSearch.cpp", "diffHunk": "@@ -1399,13 +1401,16 @@ class SourceItem\n public:\n    enum Type\n    {\n-      None = 0,\n-      Function = 1,\n-      Method = 2,\n-      Class = 3,\n-      Enum = 4,\n+      None      = 0,\n+      Function  = 1,\n+      Method    = 2,\n+      Class     = 3,\n+      Enum      = 4,\n       EnumValue = 5,\n-      Namespace = 6\n+      Namespace = 6,\n+      Section   = 7,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8f15f3a94711c53e9c829cc358f93ce2805b2e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1ODYyMA==", "bodyText": "Do we want to distinguish between heading levels here? (Hadley had asked for distinguishing headings levels in xref completions b/c it's helpful context). Paul could do separate icons for H1-H6.", "url": "https://github.com/rstudio/rstudio/pull/7302#discussion_r452558620", "createdAt": "2020-07-10T00:21:36Z", "author": {"login": "jjallaire"}, "path": "src/cpp/session/modules/SessionCodeSearch.cpp", "diffHunk": "@@ -1399,13 +1401,16 @@ class SourceItem\n public:\n    enum Type\n    {\n-      None = 0,\n-      Function = 1,\n-      Method = 2,\n-      Class = 3,\n-      Enum = 4,\n+      None      = 0,\n+      Function  = 1,\n+      Method    = 2,\n+      Class     = 3,\n+      Enum      = 4,\n       EnumValue = 5,\n-      Namespace = 6\n+      Namespace = 6,\n+      Section   = 7,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8f15f3a94711c53e9c829cc358f93ce2805b2e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1OTMyMA==", "bodyText": "All the types are here (save for eq which I appear to have forgotten!): https://github.com/rstudio/rstudio/blob/master/src/gwt/panmirror/src/editor/src/api/xref.ts#L99", "url": "https://github.com/rstudio/rstudio/pull/7302#discussion_r452559320", "createdAt": "2020-07-10T00:24:38Z", "author": {"login": "jjallaire"}, "path": "src/cpp/session/modules/SessionCodeSearch.cpp", "diffHunk": "@@ -1543,6 +1552,100 @@ SourceItem fromCppDefinition(const clang::CppDefinition& cppDefinition)\n       safe_convert::numberTo<int>(cppDefinition.location.column, 1));\n }\n \n+void fillFromBookdownRefs(const std::string& term,\n+                          std::vector<SourceItem>* pSourceItems)\n+{\n+   // retrieve refs for this project\n+   core::json::Value bookdownIndex = module_context::bookdownXRefIndex();\n+   core::debug::print(bookdownIndex);\n+   \n+   // may be null if we have no bookdown refs (typically implies\n+   // we're not in a bookdown project)\n+   if (!bookdownIndex.isObject())\n+      return;\n+   \n+   std::string baseDir;\n+   core::json::Array bookdownRefs;\n+   \n+   Error error = core::json::readObject(\n+            bookdownIndex.getObject(),\n+            \"baseDir\", baseDir,\n+            \"refs\", bookdownRefs);\n+   \n+   if (error)\n+   {\n+      LOG_ERROR(error);\n+      return;\n+   }\n+   \n+   FilePath basePath = module_context::resolveAliasedPath(baseDir);\n+   \n+   // {\n+   //     \"file\": \"01-intro.Rmd\",\n+   //     \"type\": \"h1\",\n+   //     \"id\": \"intro\",\n+   //     \"title\": \"Introduction\"\n+   // }\n+   \n+   for (const json::Value& bookdownRef : bookdownRefs)\n+   {\n+      if (!bookdownRef.isObject())\n+         continue;\n+      \n+      std::string file, type, id, title;\n+      Error error = core::json::readObject(\n+               bookdownRef.getObject(),\n+               \"file\", file,\n+               \"type\", type,\n+               \"id\", id,\n+               \"title\", title);\n+      \n+      if (error)\n+      {\n+         LOG_ERROR(error);\n+         continue;\n+      }\n+      \n+      // figure out appropriate source item type\n+      SourceItem::Type sourceType = SourceItem::None;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1MTA1MQ=="}, "originalCommit": {"oid": "5cfad3d781351e5794bd4781db7be4e26e6a74bd"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MDA3OA==", "bodyText": "I'm torn as to whether we should be showing IDs here, at least for figures, tables, and equations -- as that's the 'identifier' that's being searched for (i.e. for functions we don't show the roxygen title if available we show the name of the function). I've also seen that figure and table captions can get quite long (even multiple sentences) and I think the id would be a better mental \"bookmark' in the case cases.\nFor section I can see the argument that we should use the actual title (since the id is typically algorithmically derived from the title).", "url": "https://github.com/rstudio/rstudio/pull/7302#discussion_r452560078", "createdAt": "2020-07-10T00:27:40Z", "author": {"login": "jjallaire"}, "path": "src/cpp/session/modules/SessionCodeSearch.cpp", "diffHunk": "@@ -1543,6 +1552,99 @@ SourceItem fromCppDefinition(const clang::CppDefinition& cppDefinition)\n       safe_convert::numberTo<int>(cppDefinition.location.column, 1));\n }\n \n+void fillFromBookdownRefs(const std::string& term,\n+                          std::vector<SourceItem>* pSourceItems)\n+{\n+   // retrieve refs for this project\n+   core::json::Value bookdownIndex = module_context::bookdownXRefIndex();\n+   \n+   // may be null if we have no bookdown refs (typically implies\n+   // we're not in a bookdown project)\n+   if (!bookdownIndex.isObject())\n+      return;\n+   \n+   std::string baseDir;\n+   core::json::Array bookdownRefs;\n+   \n+   Error error = core::json::readObject(\n+            bookdownIndex.getObject(),\n+            \"baseDir\", baseDir,\n+            \"refs\", bookdownRefs);\n+   \n+   if (error)\n+   {\n+      LOG_ERROR(error);\n+      return;\n+   }\n+   \n+   FilePath basePath = module_context::resolveAliasedPath(baseDir);\n+   \n+   // {\n+   //     \"file\": \"01-intro.Rmd\",\n+   //     \"type\": \"h1\",\n+   //     \"id\": \"intro\",\n+   //     \"title\": \"Introduction\"\n+   // }\n+   \n+   for (const json::Value& bookdownRef : bookdownRefs)\n+   {\n+      if (!bookdownRef.isObject())\n+         continue;\n+      \n+      std::string file, type, id, title;\n+      Error error = core::json::readObject(\n+               bookdownRef.getObject(),\n+               \"file\", file,\n+               \"type\", type,\n+               \"id\", id,\n+               \"title\", title);\n+      \n+      if (error)\n+      {\n+         LOG_ERROR(error);\n+         continue;\n+      }\n+      \n+      // figure out appropriate source item type\n+      SourceItem::Type sourceType = SourceItem::None;\n+      if (type == \"fig\")\n+      {\n+         sourceType = SourceItem::Figure;\n+      }\n+      else if (type == \"tab\")\n+      {\n+         sourceType = SourceItem::Table;\n+      }\n+      else if (type == \"h1\" || type == \"h2\" || type == \"h3\" ||\n+               type == \"h4\" || type == \"h5\" || type == \"h6\")\n+      {\n+         sourceType = SourceItem::Section;\n+      }\n+      \n+      // form appropriate text for display\n+      std::string displayText = title;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8f15f3a94711c53e9c829cc358f93ce2805b2e"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MjIxNA==", "bodyText": "Perhaps it's accounted for elsewhere, but do we want to have fig:, tab:, etc. filter on xref type?", "url": "https://github.com/rstudio/rstudio/pull/7302#discussion_r452562214", "createdAt": "2020-07-10T00:36:30Z", "author": {"login": "jjallaire"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/codesearch/CodeSearchOracle.java", "diffHunk": "@@ -192,51 +192,41 @@ public void requestSuggestions(final Request request,\n       // failed to short-circuit via the cache, hit the server\n       codeSearch_.enqueRequest(request, callback); \n    }\n-     \n+   \n+   // this method converts queries of the form 'foo:<line>:<col>' to\n+   // an appropriate navigation target, transforming the query and\n+   // file position as appropriate\n    public CodeNavigationTarget navigationTarget(String query,\n                                                 Suggestion suggestion)\n    {\n       CodeSearchSuggestion codeSearchSuggestion = (CodeSearchSuggestion) suggestion;\n+      CodeNavigationTarget target = codeSearchSuggestion.getNavigationTarget();\n       \n-      // Allow queries of the form e.g. 'foo:15' to go to line '15' of a file.\n-      // We parse the integer following the ':' if possible.\n-      FilePosition filePos = codeSearchSuggestion.getNavigationTarget().getPosition();\n-      if (codeSearchSuggestion.isFileTarget())\n-      {\n-         int colonIndex = query.indexOf(\":\");\n-         if (colonIndex > 0)\n-         {\n-            String[] splat = query.split(\":\");\n-            if (splat.length > 1)\n-            {\n-               int rowToNavigateTo = 0;\n-               try\n-               {\n-                  rowToNavigateTo = Integer.parseInt(splat[1]);\n-               }\n-               catch (Exception e)\n-               {}\n-               \n-               int colToNavigateTo = 0;\n-               if (splat.length > 2)\n-               {\n-                  try\n-                  {\n-                     colToNavigateTo = Integer.parseInt(splat[2]);\n-                  }\n-                  catch (Exception e)\n-                  {}\n-               }\n-               filePos = FilePosition.create(rowToNavigateTo, colToNavigateTo);\n-            }\n-            \n-         }\n-      }\n+      // nothing to do for non-file targets\n+      if (!codeSearchSuggestion.isFileTarget())\n+         return target;\n+      \n+      // nothing to do if the query doesn't have ':'\n+      int colonIndex = query.indexOf(\":\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8f15f3a94711c53e9c829cc358f93ce2805b2e"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92b4710fcd5ae1eb5c4b86395e7a53b09535e957", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/92b4710fcd5ae1eb5c4b86395e7a53b09535e957", "committedDate": "2020-07-10T21:42:42Z", "message": "navigate to bookdown xrefs in omni-search"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13e0052a74f179b2faf08dc0c5a5a9635b2a88fd", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/13e0052a74f179b2faf08dc0c5a5a9635b2a88fd", "committedDate": "2020-07-10T21:42:42Z", "message": "navigate to xrefs in text editor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b77fe754906bb4bf91577ea9b0dd0890fead550a", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/b77fe754906bb4bf91577ea9b0dd0890fead550a", "committedDate": "2020-07-10T21:42:42Z", "message": "remove debug print"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94b5580ab47dbe7607be4a84369bb13e2fa14101", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/94b5580ab47dbe7607be4a84369bb13e2fa14101", "committedDate": "2020-07-10T21:42:42Z", "message": "consistent XRef capitalization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e640536fa877e7ea2a16262cadba8061bfa8d588", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/e640536fa877e7ea2a16262cadba8061bfa8d588", "committedDate": "2020-07-10T21:42:42Z", "message": "tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a0357a50972c111cd3c8c067dd978cc47df47e", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/b2a0357a50972c111cd3c8c067dd978cc47df47e", "committedDate": "2020-07-10T21:42:43Z", "message": "use different icons for different headers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6043deed41120adcae72c931fffd9a68c0cd25a7", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/6043deed41120adcae72c931fffd9a68c0cd25a7", "committedDate": "2020-07-10T21:42:25Z", "message": "use different icons for different headers"}, "afterCommit": {"oid": "b2a0357a50972c111cd3c8c067dd978cc47df47e", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/b2a0357a50972c111cd3c8c067dd978cc47df47e", "committedDate": "2020-07-10T21:42:43Z", "message": "use different icons for different headers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de0b176a6afd48792c74109032f13a15586fbdf8", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/de0b176a6afd48792c74109032f13a15586fbdf8", "committedDate": "2020-07-13T16:21:30Z", "message": "tweak display for id-containing items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d2d7becff53b577ebf68a8eb784f0e52a1f008", "author": {"user": {"login": "kevinushey", "name": "Kevin Ushey"}}, "url": "https://github.com/rstudio/rstudio/commit/34d2d7becff53b577ebf68a8eb784f0e52a1f008", "committedDate": "2020-07-20T23:04:32Z", "message": "Merge remote-tracking branch 'origin/master' into feature/bookdown-omni-search"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 97, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}