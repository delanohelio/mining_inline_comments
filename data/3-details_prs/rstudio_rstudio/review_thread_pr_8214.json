{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNzE5NDcx", "number": 8214, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxMTo1NFrOEzbC_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxMTo1NFrOEzbC_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzU1OTY3OnYy", "diffSide": "RIGHT", "path": "src/cpp/core/system/PosixOutputCapture.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxMTo1NFrOHqomjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxMTo1NFrOHqomjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2NzQ3MQ==", "bodyText": "Nit: this can be set in the systemError constructor more succinctly", "url": "https://github.com/rstudio/rstudio/pull/8214#discussion_r514467471", "createdAt": "2020-10-29T18:11:54Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/system/PosixOutputCapture.cpp", "diffHunk": "@@ -71,21 +72,48 @@ void standardStreamCaptureThread(\n    auto wrapHandler =\n     [=](const boost::function<void(const std::string&)>& handler,\n         int dupFd,\n+        const std::string& descriptorType,\n+        boost::shared_ptr<bool> pSkipWrite,\n         const std::string& output)\n     {\n        handler(output);\n-       if (::write(dupFd, output.c_str(), output.size()) == -1)\n+\n+       if (!*pSkipWrite)\n        {\n-          if (errno != EAGAIN && errno != EINTR)\n-             LOG_ERROR(systemError(errno, ERROR_LOCATION));\n+          if (::write(dupFd, output.c_str(), output.size()) == -1)\n+          {\n+             if (errno == EPIPE || errno == EBADF)\n+             {\n+                // the std stream was closed somehow, meaning this write call will never succeed again\n+                // mark that we should skip the write, and only log this error once\n+                *pSkipWrite = true;\n+\n+                Error error = systemError(errno, ERROR_LOCATION);\n+                std::string cause = errno == EBADF ? \" closed\" : \"'s pipe read end closed\";\n+                std::string description =\n+                      descriptorType + \" descriptor \" + core::safe_convert::numberToString(dupFd) +\n+                      cause + \". Output will no longer be redirected.\";\n+                error.addProperty(\"description\", description);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c4e90a816dcba9564cc4733d0b95b227eabeedc"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4167, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}