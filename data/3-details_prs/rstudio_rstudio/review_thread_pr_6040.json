{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzODczNjYz", "number": 6040, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOToxOTo0MlrODY6elg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjo0NjowMFrODbDLSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDUwNTE4OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOToxOTo0MlrOFfCx9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoyMzo1M1rOFfGx6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA5NTczMg==", "bodyText": "Nit: This should only happen if there's a bug in the front-end, right? If that's the case I think LOG_DEBUG_MESSAGE makes sense more than LOG_WARNING_MESSAGE. (The same for above in processExcludeFlags)", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368095732", "createdAt": "2020-01-17T19:19:42Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1074,6 +1089,23 @@ class GrepOptions : public boost::noncopyable\n          }\n       }\n    }\n+\n+   void processIncludeFilePatterns()\n+   {\n+      packageFlag_ = false;\n+      for (json::Value filePattern : includeFilePatterns_)\n+      {\n+         if (filePattern.getType() != json::Type::STRING)\n+            LOG_WARNING_MESSAGE(\"Include files contain non-string value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MTI1Nw==", "bodyText": "Done :)", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368161257", "createdAt": "2020-01-17T22:23:53Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1074,6 +1089,23 @@ class GrepOptions : public boost::noncopyable\n          }\n       }\n    }\n+\n+   void processIncludeFilePatterns()\n+   {\n+      packageFlag_ = false;\n+      for (json::Value filePattern : includeFilePatterns_)\n+      {\n+         if (filePattern.getType() != json::Type::STRING)\n+            LOG_WARNING_MESSAGE(\"Include files contain non-string value\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA5NTczMg=="}, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDUyMDA4OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOToyNDo1OFrOFfC66w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMTozNTowMVrOFfF1qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA5ODAyNw==", "bodyText": "Do you intend to go back to EscapeAll before you add all the directories to the command? Why switch to EscapeFilesOnly at all? If you just wanted -- to not be escaped, I think it would read clearer if you changed EscapeFilesOnly to EscapeNone (assuming that's an option - if not maybe a comment would help).", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368098027", "createdAt": "2020-01-17T19:24:58Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,23 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addPackageDirectoriesToCommand(const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   FilePath rPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/R\"));\n+   FilePath srcPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/src\"));\n+   FilePath testsPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/tests\"));\n+\n+   *pCmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0NTgzNQ==", "bodyText": "To be honest this is pulled from the existing code, but my understanding is that it exists to prevent the -- from being escaped. There is no EscapeNone option but I can add a comment.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368145835", "createdAt": "2020-01-17T21:35:01Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,23 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addPackageDirectoriesToCommand(const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   FilePath rPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/R\"));\n+   FilePath srcPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/src\"));\n+   FilePath testsPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/tests\"));\n+\n+   *pCmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA5ODAyNw=="}, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDUzNTQwOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTozMDoxOFrOFfDELg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoyNDoxMVrOFfGySg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwMDM5OA==", "bodyText": "How would you feel about it if this function was called addDirectoriesToCommand and took bool packageFlag, const FilePath& dirPath, ShellCommand* pCmd as parameters and handled the if so you only need that cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll; line in one place?", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368100398", "createdAt": "2020-01-17T19:30:18Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1191,14 +1240,18 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-         cmd << \"--include=\" + filePattern.getString();\n+      for (std::string arg : grepOptions.includeArgs())\n+         cmd << arg;\n       for (std::string arg : grepOptions.excludeArgs())\n          cmd << arg;\n \n-      cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-      cmd << string_utils::utf8ToSystem(dirPath.getAbsolutePath());\n+      if (grepOptions.packageFlag())\n+         addPackageDirectoriesToCommand(dirPath, &cmd);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MTM1NA==", "bodyText": "I like it, updated the code.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368161354", "createdAt": "2020-01-17T22:24:11Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1191,14 +1240,18 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-         cmd << \"--include=\" + filePattern.getString();\n+      for (std::string arg : grepOptions.includeArgs())\n+         cmd << arg;\n       for (std::string arg : grepOptions.excludeArgs())\n          cmd << arg;\n \n-      cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-      cmd << string_utils::utf8ToSystem(dirPath.getAbsolutePath());\n+      if (grepOptions.packageFlag())\n+         addPackageDirectoriesToCommand(dirPath, &cmd);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwMDM5OA=="}, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDU1OTUzOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTozOTo0NFrOFfDTEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMjoyNDoyNVrOFfGyjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDIwOA==", "bodyText": "Is it not possible to both set the search directories and add include arguments when using git grep? What does the UI look like in that case?", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368104208", "createdAt": "2020-01-17T19:39:44Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1169,11 +1218,11 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-      {\n-         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-         cmd << filePattern.getString();\n-      }\n+      if (grepOptions.packageFlag())\n+         addPackageDirectoriesToCommand(dirPath, &cmd);\n+      else\n+         for (std::string arg : grepOptions.includeArgs())\n+            cmd << arg;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0MDU3MQ==", "bodyText": "Actually git grep doesn't have an equivalent include argument so Package Source is the only include option available when git exclusions is selected (the other options become greyed out and disabled) so this else can be removed.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368140571", "createdAt": "2020-01-17T21:19:03Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1169,11 +1218,11 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-      {\n-         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-         cmd << filePattern.getString();\n-      }\n+      if (grepOptions.packageFlag())\n+         addPackageDirectoriesToCommand(dirPath, &cmd);\n+      else\n+         for (std::string arg : grepOptions.includeArgs())\n+            cmd << arg;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDIwOA=="}, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE0MDkxNg==", "bodyText": "I think I'll add an else if to check if grepOptions.includeArgs is empty and log a debug message if it's not.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368140916", "createdAt": "2020-01-17T21:20:10Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1169,11 +1218,11 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-      {\n-         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-         cmd << filePattern.getString();\n-      }\n+      if (grepOptions.packageFlag())\n+         addPackageDirectoriesToCommand(dirPath, &cmd);\n+      else\n+         for (std::string arg : grepOptions.includeArgs())\n+            cmd << arg;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDIwOA=="}, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE2MTQyMw==", "bodyText": "Updated \ud83d\udc4d", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r368161423", "createdAt": "2020-01-17T22:24:25Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1169,11 +1218,11 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-      {\n-         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-         cmd << filePattern.getString();\n-      }\n+      if (grepOptions.packageFlag())\n+         addPackageDirectoriesToCommand(dirPath, &cmd);\n+      else\n+         for (std::string arg : grepOptions.includeArgs())\n+            cmd << arg;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwNDIwOA=="}, "originalCommit": {"oid": "26bf1c7db70f8685b96ab5675632b3dbd25a2448"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODY3MDg0OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODoxMTo0N1rOFhHzpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyNDozOFrOFiTmYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NTIzOQ==", "bodyText": "We don't typically commit TODOs since we have no mechanism for ensuring that they get resolved. If the PR contains unfinished work items, open an issue to track them instead (and optionally refer to it in a comment).", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370275239", "createdAt": "2020-01-23T18:11:47Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,30 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addDirectoriesToCommand(\n+   bool packageFlag, const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   // TODO: review if switching to EscapeFilesOnly is necessay", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4NjIzNw==", "bodyText": "I suggested to add a TODO or a comment here because it works as-is and whatever the outcome of the review, it should continue to work. The only benefit of the change is removing a single line of code, which didn't seem significant enough to warrant a git issue. I just though it would be good to have a note in the code that if someone happens to be looking here and they happen to know the answer, they can make this change or update the comment.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370386237", "createdAt": "2020-01-23T22:21:23Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,30 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addDirectoriesToCommand(\n+   bool packageFlag, const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   // TODO: review if switching to EscapeFilesOnly is necessay", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NTIzOQ=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MTM1MA==", "bodyText": "Makes sense but I think it's unlikely in practice. We usually use TODO as a way to help flag things that need to be resolved before commit, so having TODO in committed code adds noise. Let's leave the comment and rephrase it without TODO.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r371491350", "createdAt": "2020-01-27T21:26:41Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,30 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addDirectoriesToCommand(\n+   bool packageFlag, const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   // TODO: review if switching to EscapeFilesOnly is necessay", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NTIzOQ=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNzAyNg==", "bodyText": "Ok, I updated the comment", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r371517026", "createdAt": "2020-01-27T22:24:38Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,30 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addDirectoriesToCommand(\n+   bool packageFlag, const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   // TODO: review if switching to EscapeFilesOnly is necessay", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NTIzOQ=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODY3NzQwOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODoxNDoxMVrOFhH3yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjowODowNlrOFhOQSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NjI5OA==", "bodyText": "I think this should just be a warning, and should include the directory in which we expected to find package folders but didn't.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370276298", "createdAt": "2020-01-23T18:14:11Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,30 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addDirectoriesToCommand(\n+   bool packageFlag, const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   // TODO: review if switching to EscapeFilesOnly is necessay\n+   *pCmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n+   if (!packageFlag)\n+      *pCmd << string_utils::utf8ToSystem(directoryPath.getAbsolutePath());\n+   else\n+   {\n+      FilePath rPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/R\"));\n+      FilePath srcPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/src\"));\n+      FilePath testsPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/tests\"));\n+   \n+      if (rPath.exists())\n+         *pCmd << rPath; \n+      if (srcPath.exists())\n+         *pCmd << srcPath;\n+      if (testsPath.exists())\n+         *pCmd << testsPath;\n+      else if (!rPath.exists() && !srcPath.exists())\n+         LOG_ERROR_MESSAGE(\"Package directories not found\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MTk3Nw==", "bodyText": "(For reference, and this should be clearer in the coding standards, you typically only log an error when an operation cannot proceed. In this case we're clearly proceeding as though nothing happened, so it's a warning.)", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370281977", "createdAt": "2020-01-23T18:26:04Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,30 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addDirectoriesToCommand(\n+   bool packageFlag, const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   // TODO: review if switching to EscapeFilesOnly is necessay\n+   *pCmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n+   if (!packageFlag)\n+      *pCmd << string_utils::utf8ToSystem(directoryPath.getAbsolutePath());\n+   else\n+   {\n+      FilePath rPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/R\"));\n+      FilePath srcPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/src\"));\n+      FilePath testsPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/tests\"));\n+   \n+      if (rPath.exists())\n+         *pCmd << rPath; \n+      if (srcPath.exists())\n+         *pCmd << srcPath;\n+      if (testsPath.exists())\n+         *pCmd << testsPath;\n+      else if (!rPath.exists() && !srcPath.exists())\n+         LOG_ERROR_MESSAGE(\"Package directories not found\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NjI5OA=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4MDg3NQ==", "bodyText": "done!", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370380875", "createdAt": "2020-01-23T22:08:06Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1095,6 +1127,30 @@ struct ReplaceOptions\n    const std::string replacePattern;\n };\n \n+void addDirectoriesToCommand(\n+   bool packageFlag, const FilePath& directoryPath, shell_utils::ShellCommand* pCmd)\n+{\n+   // TODO: review if switching to EscapeFilesOnly is necessay\n+   *pCmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n+   if (!packageFlag)\n+      *pCmd << string_utils::utf8ToSystem(directoryPath.getAbsolutePath());\n+   else\n+   {\n+      FilePath rPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/R\"));\n+      FilePath srcPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/src\"));\n+      FilePath testsPath(string_utils::utf8ToSystem(directoryPath.getAbsolutePath() + \"/tests\"));\n+   \n+      if (rPath.exists())\n+         *pCmd << rPath; \n+      if (srcPath.exists())\n+         *pCmd << srcPath;\n+      if (testsPath.exists())\n+         *pCmd << testsPath;\n+      else if (!rPath.exists() && !srcPath.exists())\n+         LOG_ERROR_MESSAGE(\"Package directories not found\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NjI5OA=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODY4NzY5OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODoxNzo0MVrOFhH-hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjowNzo1MVrOFhOP6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3ODAyMw==", "bodyText": "Here and elsewhere: this is verbose and somewhat difficult to read. How about adding something like DomUtils.setOptionDisabled(element, ordinal, disabled)?", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370278023", "createdAt": "2020-01-23T18:17:41Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -249,32 +265,58 @@ private void manageExcludeFilePattern()\n       if (!gitStatus_ ||\n           !session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n       {\n-         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(1))\n+         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(\n+               Exclude.StandardGit.ordinal()))\n             .setAttribute(\"disabled\", \"disabled\");\n          if (listPresetExcludeFilePatterns_.getSelectedIndex() ==\n-             ExcludeFilePatterns.StandardGit.ordinal())\n-            listPresetExcludeFilePatterns_.setSelectedIndex(ExcludeFilePatterns.None.ordinal());\n+             Exclude.StandardGit.ordinal())\n+            listPresetExcludeFilePatterns_.setSelectedIndex(Exclude.None.ordinal());\n       }\n       else\n-         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(1))\n-            .removeAttribute(\"disabled\");\n-\n+         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(\n+            Exclude.StandardGit.ordinal())).removeAttribute(\"disabled\");\n \n       // disable custom filter text box when 'Custom Filter' is not selected\n       divExcludeCustomFilter_.getStyle().setDisplay(\n             listPresetExcludeFilePatterns_.getSelectedIndex() == \n-            ExcludeFilePatterns.CustomFilter.ordinal()\n+            Exclude.CustomFilter.ordinal()\n             ? Style.Display.BLOCK\n             : Style.Display.NONE);\n \n       // user cannot specify include patterns when using git grep\n       if (listPresetExcludeFilePatterns_.getSelectedIndex() != \n-          ExcludeFilePatterns.StandardGit.ordinal())\n-         listPresetFilePatterns_.setEnabled(true);\n+          Exclude.StandardGit.ordinal())\n+      {\n+         ((Element) listPresetFilePatterns_.getElement().getChild(\n+            Include.CommonRSourceFiles.ordinal())).removeAttribute(\"disabled\");\n+         ((Element) listPresetFilePatterns_.getElement().getChild(\n+            Include.RScripts.ordinal())).removeAttribute(\"disabled\");\n+         ((Element) listPresetFilePatterns_.getElement().getChild(\n+            Include.CustomFilter.ordinal())).removeAttribute(\"disabled\");\n+      }\n       else\n       {\n-         listPresetFilePatterns_.setEnabled(false);\n-         listPresetFilePatterns_.setSelectedIndex(IncludeFilePatterns.AllFiles.ordinal());\n+         // when using standard git exclusions we don't have the option to search recursively and\n+         // specify file types\n+         ((Element) listPresetFilePatterns_.getElement().getChild(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4MDc3Ng==", "bodyText": "done!", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370380776", "createdAt": "2020-01-23T22:07:51Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -249,32 +265,58 @@ private void manageExcludeFilePattern()\n       if (!gitStatus_ ||\n           !session_.getSessionInfo().isVcsAvailable(VCSConstants.GIT_ID))\n       {\n-         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(1))\n+         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(\n+               Exclude.StandardGit.ordinal()))\n             .setAttribute(\"disabled\", \"disabled\");\n          if (listPresetExcludeFilePatterns_.getSelectedIndex() ==\n-             ExcludeFilePatterns.StandardGit.ordinal())\n-            listPresetExcludeFilePatterns_.setSelectedIndex(ExcludeFilePatterns.None.ordinal());\n+             Exclude.StandardGit.ordinal())\n+            listPresetExcludeFilePatterns_.setSelectedIndex(Exclude.None.ordinal());\n       }\n       else\n-         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(1))\n-            .removeAttribute(\"disabled\");\n-\n+         ((Element) listPresetExcludeFilePatterns_.getElement().getChild(\n+            Exclude.StandardGit.ordinal())).removeAttribute(\"disabled\");\n \n       // disable custom filter text box when 'Custom Filter' is not selected\n       divExcludeCustomFilter_.getStyle().setDisplay(\n             listPresetExcludeFilePatterns_.getSelectedIndex() == \n-            ExcludeFilePatterns.CustomFilter.ordinal()\n+            Exclude.CustomFilter.ordinal()\n             ? Style.Display.BLOCK\n             : Style.Display.NONE);\n \n       // user cannot specify include patterns when using git grep\n       if (listPresetExcludeFilePatterns_.getSelectedIndex() != \n-          ExcludeFilePatterns.StandardGit.ordinal())\n-         listPresetFilePatterns_.setEnabled(true);\n+          Exclude.StandardGit.ordinal())\n+      {\n+         ((Element) listPresetFilePatterns_.getElement().getChild(\n+            Include.CommonRSourceFiles.ordinal())).removeAttribute(\"disabled\");\n+         ((Element) listPresetFilePatterns_.getElement().getChild(\n+            Include.RScripts.ordinal())).removeAttribute(\"disabled\");\n+         ((Element) listPresetFilePatterns_.getElement().getChild(\n+            Include.CustomFilter.ordinal())).removeAttribute(\"disabled\");\n+      }\n       else\n       {\n-         listPresetFilePatterns_.setEnabled(false);\n-         listPresetFilePatterns_.setSelectedIndex(IncludeFilePatterns.AllFiles.ordinal());\n+         // when using standard git exclusions we don't have the option to search recursively and\n+         // specify file types\n+         ((Element) listPresetFilePatterns_.getElement().getChild(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3ODAyMw=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODcwODcyOnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODoyNDozMlrOFhILQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyNDo1NlrOFiTm3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MTI4MQ==", "bodyText": "This is also very verbose. I think all that's needed to simplify this is a method to select the index with the given value. I feel like we already have something like this (and if we don't it should be pretty easy to add!)", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370281281", "createdAt": "2020-01-23T18:24:32Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -374,28 +416,41 @@ public void setState(State dialogState)\n       checkboxRegex_.setValue(dialogState.isRegex());\n       dirChooser_.setText(dialogState.getPath());\n \n-      // indexes refer to corresponding enums, but left as ints for readability\n       String includeFilePatterns = StringUtil.join(\n             Arrays.asList(dialogState.getFilePatterns()), \", \");\n-      if (listPresetFilePatterns_.getValue(0) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(0);\n-      else if (listPresetFilePatterns_.getValue(1) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(1);\n-      else if (listPresetFilePatterns_.getValue(2) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(2);\n+      if (includeFilePatterns == \n+          listPresetFilePatterns_.getValue(Include.AllFiles.ordinal()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM3MzAyOA==", "bodyText": "AFAIK there is no existing method to handle this. Where do you think would be the best place to add this function? listPresetFilePatterns_ is a gwt ListBox object - we currently have one object that inherits from it -- FormListBox that only has one method void setElementId(id) - would this be a good place?", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370373028", "createdAt": "2020-01-23T21:48:55Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -374,28 +416,41 @@ public void setState(State dialogState)\n       checkboxRegex_.setValue(dialogState.isRegex());\n       dirChooser_.setText(dialogState.getPath());\n \n-      // indexes refer to corresponding enums, but left as ints for readability\n       String includeFilePatterns = StringUtil.join(\n             Arrays.asList(dialogState.getFilePatterns()), \", \");\n-      if (listPresetFilePatterns_.getValue(0) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(0);\n-      else if (listPresetFilePatterns_.getValue(1) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(1);\n-      else if (listPresetFilePatterns_.getValue(2) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(2);\n+      if (includeFilePatterns == \n+          listPresetFilePatterns_.getValue(Include.AllFiles.ordinal()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MTI4MQ=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MDI2Nw==", "bodyText": "Yes, I think that'd be a good spot!", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r371490267", "createdAt": "2020-01-27T21:24:16Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -374,28 +416,41 @@ public void setState(State dialogState)\n       checkboxRegex_.setValue(dialogState.isRegex());\n       dirChooser_.setText(dialogState.getPath());\n \n-      // indexes refer to corresponding enums, but left as ints for readability\n       String includeFilePatterns = StringUtil.join(\n             Arrays.asList(dialogState.getFilePatterns()), \", \");\n-      if (listPresetFilePatterns_.getValue(0) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(0);\n-      else if (listPresetFilePatterns_.getValue(1) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(1);\n-      else if (listPresetFilePatterns_.getValue(2) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(2);\n+      if (includeFilePatterns == \n+          listPresetFilePatterns_.getValue(Include.AllFiles.ordinal()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MTI4MQ=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNzE1MQ==", "bodyText": "Alright, ready for review again \ud83d\udc4d", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r371517151", "createdAt": "2020-01-27T22:24:56Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/studio/client/workbench/views/output/find/FindInFilesDialog.java", "diffHunk": "@@ -374,28 +416,41 @@ public void setState(State dialogState)\n       checkboxRegex_.setValue(dialogState.isRegex());\n       dirChooser_.setText(dialogState.getPath());\n \n-      // indexes refer to corresponding enums, but left as ints for readability\n       String includeFilePatterns = StringUtil.join(\n             Arrays.asList(dialogState.getFilePatterns()), \", \");\n-      if (listPresetFilePatterns_.getValue(0) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(0);\n-      else if (listPresetFilePatterns_.getValue(1) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(1);\n-      else if (listPresetFilePatterns_.getValue(2) == includeFilePatterns)\n-         listPresetFilePatterns_.setSelectedIndex(2);\n+      if (includeFilePatterns == \n+          listPresetFilePatterns_.getValue(Include.AllFiles.ordinal()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MTI4MQ=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODcxNDE0OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODoyNjozMlrOFhIOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMjoxNTo1MVrOFhOc8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MjE3Mg==", "bodyText": "Maybe worth logging what arguments we received that we didn't expect?", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370282172", "createdAt": "2020-01-23T18:26:32Z", "author": {"login": "jmcphers"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1169,11 +1225,10 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-      {\n-         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-         cmd << filePattern.getString();\n-      }\n+      addDirectoriesToCommand(grepOptions.packageFlag(), dirPath, &cmd);\n+\n+      if (grepOptions.packageFlag() && !grepOptions.includeArgs().empty())\n+         LOG_DEBUG_MESSAGE(\"Unknown include argument(s)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM4NDExMg==", "bodyText": "done :)", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r370384112", "createdAt": "2020-01-23T22:15:51Z", "author": {"login": "melissa-barca"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1169,11 +1225,10 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n-      {\n-         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-         cmd << filePattern.getString();\n-      }\n+      addDirectoriesToCommand(grepOptions.packageFlag(), dirPath, &cmd);\n+\n+      if (grepOptions.packageFlag() && !grepOptions.includeArgs().empty())\n+         LOG_DEBUG_MESSAGE(\"Unknown include argument(s)\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4MjE3Mg=="}, "originalCommit": {"oid": "e2054d70781b71d76ff46d659f70987b3c0c3c5b"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjY4NzA5OnYy", "diffSide": "RIGHT", "path": "src/gwt/src/org/rstudio/core/client/dom/DomUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToyNzo1NFrOFiSERA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyNToxMFrOFiTnMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MTkwOA==", "bodyText": "Doxygen style params should be either documented (i.e. explain what each one is) or omitted.", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r371491908", "createdAt": "2020-01-27T21:27:54Z", "author": {"login": "jmcphers"}, "path": "src/gwt/src/org/rstudio/core/client/dom/DomUtils.java", "diffHunk": "@@ -1152,6 +1152,21 @@ public static void setPlaceholder(TextBox w, String placeholder)\n       setPlaceholder(w.getElement(), placeholder);\n    }\n \n+   /**\n+    * Set disabled attribute on an element's child\n+    * @param element\n+    * @param ordinal\n+    * @param disable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2d90e7930a464661cfe6ffdc7a1638dfd11245"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNzIzMg==", "bodyText": "Updated", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r371517232", "createdAt": "2020-01-27T22:25:10Z", "author": {"login": "melissa-barca"}, "path": "src/gwt/src/org/rstudio/core/client/dom/DomUtils.java", "diffHunk": "@@ -1152,6 +1152,21 @@ public static void setPlaceholder(TextBox w, String placeholder)\n       setPlaceholder(w.getElement(), placeholder);\n    }\n \n+   /**\n+    * Set disabled attribute on an element's child\n+    * @param element\n+    * @param ordinal\n+    * @param disable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MTkwOA=="}, "originalCommit": {"oid": "5a2d90e7930a464661cfe6ffdc7a1638dfd11245"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjkwMTg0OnYy", "diffSide": "RIGHT", "path": "src/cpp/session/modules/SessionFind.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjo0NjowMFrOFiUHpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjo0NjowMFrOFiUHpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUyNTU0MQ==", "bodyText": "Nit: to avoid cluttering the logs for each unexpected argument, could it make sense to log \"Unknown include argument(s): \" + boost::join(grepOptions.includeArgs(), \", \") instead?", "url": "https://github.com/rstudio/rstudio/pull/6040#discussion_r371525541", "createdAt": "2020-01-27T22:46:00Z", "author": {"login": "MariaSemple"}, "path": "src/cpp/session/modules/SessionFind.cpp", "diffHunk": "@@ -1169,10 +1225,12 @@ core::Error runGrepOperation(const GrepOptions& grepOptions, const ReplaceOption\n       cmd << tempFile;\n       if (!grepOptions.asRegex())\n          cmd << \"-F\";\n-      for (json::Value filePattern : grepOptions.includeFilePatterns())\n+      addDirectoriesToCommand(grepOptions.packageFlag(), dirPath, &cmd);\n+\n+      if (grepOptions.packageFlag() && !grepOptions.includeArgs().empty())\n       {\n-         cmd << shell_utils::EscapeFilesOnly << \"--\" << shell_utils::EscapeAll;\n-         cmd << filePattern.getString();\n+         for (std::string arg : grepOptions.includeArgs())\n+            LOG_DEBUG_MESSAGE(\"Unknown include argument: \" + arg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f0982867404b8f22f0fd19fe9cc8aaea7d3005d"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4103, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}