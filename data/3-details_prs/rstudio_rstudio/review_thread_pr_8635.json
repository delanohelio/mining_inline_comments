{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNjE5MjMy", "number": 8635, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNzoyNToyM1rOFH30GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNzoyNToyM1rOFH30GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzk4ODA5OnYy", "diffSide": "RIGHT", "path": "src/cpp/core/ProgramOptions.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNzoyNToyM1rOIJgBTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwMDoxNjoxNVrOIJqBjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgzMjcxNg==", "bodyText": "Prior to this change, reportError would always log the error -- now many errors won't be logged if stderr is a terminal. Is that intentional?", "url": "https://github.com/rstudio/rstudio/pull/8635#discussion_r546832716", "createdAt": "2020-12-21T17:25:23Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/ProgramOptions.cpp", "diffHunk": "@@ -54,21 +54,42 @@ bool validateOptionsProvided(const variables_map& vm,\n \n }\n \n-void reportError(const Error& error, const ErrorLocation& location)\n+void reportError(const Error& error, const ErrorLocation& location, bool forceStderr)\n {\n    std::string description = error.getProperty(\"description\");\n    if (core::system::stderrIsTerminal() && !description.empty())\n+   {\n       std::cerr << description << std::endl;\n+   }\n+   else\n+   {\n+      // in some cases, we may need to force stderr to be written\n+      // for example, during installation on RedHat systems, stderr\n+      // is not properly hooked up to a terminal when checking configuration during post install scripts\n+      // which would cause error output to go only to syslog and be hidden from view during install\n+      if (forceStderr && !description.empty())\n+         std::cerr << description << std::endl;\n+\n+      core::log::logError(error, location);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48243d96f391716d931eaab0e968a1dcb9a35130"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njk5NjYyMQ==", "bodyText": "@kfeinauer, since you're OOO I made this change --- f54f851. LMK if that doesn't look correct.", "url": "https://github.com/rstudio/rstudio/pull/8635#discussion_r546996621", "createdAt": "2020-12-22T00:16:15Z", "author": {"login": "jmcphers"}, "path": "src/cpp/core/ProgramOptions.cpp", "diffHunk": "@@ -54,21 +54,42 @@ bool validateOptionsProvided(const variables_map& vm,\n \n }\n \n-void reportError(const Error& error, const ErrorLocation& location)\n+void reportError(const Error& error, const ErrorLocation& location, bool forceStderr)\n {\n    std::string description = error.getProperty(\"description\");\n    if (core::system::stderrIsTerminal() && !description.empty())\n+   {\n       std::cerr << description << std::endl;\n+   }\n+   else\n+   {\n+      // in some cases, we may need to force stderr to be written\n+      // for example, during installation on RedHat systems, stderr\n+      // is not properly hooked up to a terminal when checking configuration during post install scripts\n+      // which would cause error output to go only to syslog and be hidden from view during install\n+      if (forceStderr && !description.empty())\n+         std::cerr << description << std::endl;\n+\n+      core::log::logError(error, location);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgzMjcxNg=="}, "originalCommit": {"oid": "48243d96f391716d931eaab0e968a1dcb9a35130"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4109, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}