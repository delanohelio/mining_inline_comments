{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTI3MjM3", "number": 6866, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMjo0OFrOD8MDZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMjo0OFrOD8MDZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDM4NjMwOnYy", "diffSide": "RIGHT", "path": "src/cpp/session/SessionMain.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMjo0OFrOGU-eHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozMjo0OFrOGU-eHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0ODIyMA==", "bodyText": "nit: may want to use monitoredParentPath() here; although it would require making this function public:\n\n  \n    \n      rstudio/src/cpp/session/SessionModuleContext.cpp\n    \n    \n        Lines 543 to 550\n      in\n      c65a73b\n    \n    \n    \n    \n\n        \n          \n           FilePath monitoredParentPath() \n        \n\n        \n          \n           { \n        \n\n        \n          \n              FilePath monitoredPath = userScratchPath().completePath(kMonitoredPath); \n        \n\n        \n          \n              Error error = monitoredPath.ensureDirectory(); \n        \n\n        \n          \n              if (error) \n        \n\n        \n          \n                 LOG_ERROR(error); \n        \n\n        \n          \n              return monitoredPath; \n        \n\n        \n          \n           }", "url": "https://github.com/rstudio/rstudio/pull/6866#discussion_r424648220", "createdAt": "2020-05-13T18:32:48Z", "author": {"login": "kevinushey"}, "path": "src/cpp/session/SessionMain.cpp", "diffHunk": "@@ -1878,10 +1878,10 @@ int main (int argc, char * const argv[])\n       FilePath userScratchPath = options.userScratchPath();\n       if (userScratchPath.exists())\n       {\n-         std::vector<FilePath> scratchChildren;\n-         userScratchPath.getChildren(scratchChildren);\n-\n-         if (scratchChildren.size() == 0)\n+         // if the lists directory has not yet been created,\n+         // this is a new user\n+         FilePath listsPath = userScratchPath.completeChildPath(\"monitored/lists\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05f2af6940f12df057f0094690c35ebdecff810a"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3963, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}